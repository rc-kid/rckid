    TEST(gbcemu, opcode_86) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 86 0000
        gbc.setState(0x8341, 0xa7cb, 0xb040, 0xf7f8, 0x6773, 0x43c3, 0x0, 0x1);
        gbc.writeMem(0x43c3, { 0xd7 });
        gbc.writeMem(0x8341, { 0x86 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa7cb, gbc.sp());
        EXPECT(0x8342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8341));
        // 86 0001
        gbc.setState(0xf50, 0x5211, 0x6fc0, 0x74b9, 0xccf7, 0xc312, 0x0, 0x1);
        gbc.writeMem(0xf50, { 0x86 });
        gbc.writeMem(0xc312, { 0x35 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5211, gbc.sp());
        EXPECT(0xf51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xc312));
        // 86 0002
        gbc.setState(0xccf0, 0xf54e, 0xf460, 0x345d, 0x731f, 0x5667, 0x0, 0x0);
        gbc.writeMem(0x5667, { 0xe7 });
        gbc.writeMem(0xccf0, { 0x86 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf54e, gbc.sp());
        EXPECT(0xccf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xccf0));
        // 86 0003
        gbc.setState(0x435b, 0x7d45, 0xf1c0, 0xeb28, 0x21b5, 0x7604, 0x1, 0x1);
        gbc.writeMem(0x435b, { 0x86 });
        gbc.writeMem(0x7604, { 0x4d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7d45, gbc.sp());
        EXPECT(0x435c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0005
        gbc.setState(0x459a, 0xf981, 0x3380, 0x6068, 0xb527, 0xe6e1, 0x1, 0x1);
        gbc.writeMem(0x459a, { 0x86 });
        gbc.writeMem(0xe6e1, { 0xe });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf981, gbc.sp());
        EXPECT(0x459b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe6e1));
        // 86 0006
        gbc.setState(0x93a, 0xed11, 0xe550, 0x4551, 0xcf6a, 0x474a, 0x1, 0x0);
        gbc.writeMem(0x93a, { 0x86 });
        gbc.writeMem(0x474a, { 0xf9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xed11, gbc.sp());
        EXPECT(0x93b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0007
        gbc.setState(0x67ed, 0xbff0, 0x2a30, 0x4e06, 0x20e3, 0x8eec, 0x1, 0x1);
        gbc.writeMem(0x67ed, { 0x86 });
        gbc.writeMem(0x8eec, { 0x83 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbff0, gbc.sp());
        EXPECT(0x67ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x8eec));
        // 86 0008
        gbc.setState(0x897, 0xb9f1, 0x6080, 0x5091, 0xa2a7, 0x73cb, 0x0, 0x1);
        gbc.writeMem(0x897, { 0x86 });
        gbc.writeMem(0x73cb, { 0x87 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb9f1, gbc.sp());
        EXPECT(0x898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0009
        gbc.setState(0xb34f, 0xf041, 0xee80, 0x9ac5, 0x13ff, 0x41d7, 0x1, 0x1);
        gbc.writeMem(0x41d7, { 0xd0 });
        gbc.writeMem(0xb34f, { 0x86 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf041, gbc.sp());
        EXPECT(0xb350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb34f));
        // 86 000A
        gbc.setState(0xb25c, 0xfc7e, 0xe340, 0x98c, 0x180f, 0xd871, 0x1, 0x1);
        gbc.writeMem(0xb25c, { 0x86 });
        gbc.writeMem(0xd871, { 0x8a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfc7e, gbc.sp());
        EXPECT(0xb25d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb25c));
        EXPECT(0x8a, gbc.readMem(0xd871));
        // 86 000B
        gbc.setState(0x5e7b, 0xd2dd, 0x3870, 0x8268, 0x9362, 0xcc7d, 0x0, 0x1);
        gbc.writeMem(0x5e7b, { 0x86 });
        gbc.writeMem(0xcc7d, { 0x5f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd2dd, gbc.sp());
        EXPECT(0x5e7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xcc7d));
        // 86 000C
        gbc.setState(0xec80, 0x8554, 0xd370, 0x1739, 0xe85, 0x983d, 0x0, 0x0);
        gbc.writeMem(0x983d, { 0x46 });
        gbc.writeMem(0xec80, { 0x86 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8554, gbc.sp());
        EXPECT(0xec81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x983d));
        EXPECT(0x86, gbc.readMem(0xec80));
        // 86 000D
        gbc.setState(0x1e2d, 0xc879, 0xb150, 0xff23, 0x7fc4, 0xb3fe, 0x1, 0x1);
        gbc.writeMem(0x1e2d, { 0x86 });
        gbc.writeMem(0xb3fe, { 0xd1 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc879, gbc.sp());
        EXPECT(0x1e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xb3fe));
        // 86 000E
        gbc.setState(0x6fbe, 0x3a05, 0xef00, 0x8d9a, 0x54ee, 0x634c, 0x1, 0x0);
        gbc.writeMem(0x634c, { 0x46 });
        gbc.writeMem(0x6fbe, { 0x86 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3a05, gbc.sp());
        EXPECT(0x6fbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 000F
        gbc.setState(0xaeef, 0x208d, 0x8700, 0xb69b, 0x75a0, 0xde17, 0x0, 0x1);
        gbc.writeMem(0xaeef, { 0x86 });
        gbc.writeMem(0xde17, { 0xb3 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x208d, gbc.sp());
        EXPECT(0xaef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xaeef));
        EXPECT(0xb3, gbc.readMem(0xde17));
        // 86 0011
        gbc.setState(0x9716, 0x9128, 0xb170, 0x6ad4, 0xa75d, 0xa260, 0x1, 0x1);
        gbc.writeMem(0x9716, { 0x86 });
        gbc.writeMem(0xa260, { 0xcb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9128, gbc.sp());
        EXPECT(0x9717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9716));
        EXPECT(0xcb, gbc.readMem(0xa260));
        // 86 0012
        gbc.setState(0x1bba, 0xc2d1, 0x2690, 0x866b, 0x7556, 0x19ac, 0x0, 0x0);
        gbc.writeMem(0x19ac, { 0x78 });
        gbc.writeMem(0x1bba, { 0x86 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc2d1, gbc.sp());
        EXPECT(0x1bbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0013
        gbc.setState(0xabe0, 0x37e5, 0x9740, 0xb287, 0x88ce, 0x8408, 0x1, 0x0);
        gbc.writeMem(0x8408, { 0x98 });
        gbc.writeMem(0xabe0, { 0x86 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x37e5, gbc.sp());
        EXPECT(0xabe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8408));
        EXPECT(0x86, gbc.readMem(0xabe0));
        // 86 0014
        gbc.setState(0xb5f6, 0x9f7, 0x6fd0, 0x705d, 0xc6ae, 0xf95d, 0x0, 0x0);
        gbc.writeMem(0xb5f6, { 0x86 });
        gbc.writeMem(0xf95d, { 0x49 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9f7, gbc.sp());
        EXPECT(0xb5f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb5f6));
        EXPECT(0x49, gbc.readMem(0xf95d));
        // 86 0015
        gbc.setState(0x843d, 0xfca8, 0x7fd0, 0xb862, 0xee83, 0x458b, 0x1, 0x0);
        gbc.writeMem(0x458b, { 0x2c });
        gbc.writeMem(0x843d, { 0x86 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfca8, gbc.sp());
        EXPECT(0x843e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x843d));
        // 86 0016
        gbc.setState(0xb0b6, 0x7daa, 0xf320, 0xd501, 0xedb4, 0x32ac, 0x0, 0x1);
        gbc.writeMem(0x32ac, { 0xd9 });
        gbc.writeMem(0xb0b6, { 0x86 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7daa, gbc.sp());
        EXPECT(0xb0b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb0b6));
        // 86 0017
        gbc.setState(0x9217, 0xdd0f, 0xcc90, 0xc135, 0x68fc, 0xdb86, 0x0, 0x1);
        gbc.writeMem(0x9217, { 0x86 });
        gbc.writeMem(0xdb86, { 0x1a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xdd0f, gbc.sp());
        EXPECT(0x9218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9217));
        EXPECT(0x1a, gbc.readMem(0xdb86));
        // 86 0018
        gbc.setState(0xda07, 0x5dd2, 0xfa0, 0x31af, 0x1b2f, 0x2360, 0x0, 0x0);
        gbc.writeMem(0x2360, { 0xbd });
        gbc.writeMem(0xda07, { 0x86 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5dd2, gbc.sp());
        EXPECT(0xda08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xda07));
        // 86 001B
        gbc.setState(0x3b9f, 0xaf74, 0x9da0, 0xfaf9, 0x502b, 0x6400, 0x0, 0x1);
        gbc.writeMem(0x3b9f, { 0x86 });
        gbc.writeMem(0x6400, { 0x91 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xaf74, gbc.sp());
        EXPECT(0x3ba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 001C
        gbc.setState(0x5a20, 0x77c9, 0x7120, 0xc75c, 0x1626, 0xdade, 0x0, 0x1);
        gbc.writeMem(0x5a20, { 0x86 });
        gbc.writeMem(0xdade, { 0xfb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x77c9, gbc.sp());
        EXPECT(0x5a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xdade));
        // 86 001D
        gbc.setState(0xea62, 0x5b09, 0xb470, 0x3ffc, 0x3bf0, 0xd413, 0x0, 0x0);
        gbc.writeMem(0xd413, { 0x52 });
        gbc.writeMem(0xea62, { 0x86 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5b09, gbc.sp());
        EXPECT(0xea63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd413));
        EXPECT(0x86, gbc.readMem(0xea62));
        // 86 001E
        gbc.setState(0xc539, 0x8629, 0x1a70, 0xd1f0, 0xa7c1, 0x15c9, 0x0, 0x1);
        gbc.writeMem(0x15c9, { 0xe5 });
        gbc.writeMem(0xc539, { 0x86 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8629, gbc.sp());
        EXPECT(0xc53a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc539));
        // 86 001F
        gbc.setState(0xef37, 0x3bad, 0xada0, 0xf886, 0x4ce6, 0xa9d9, 0x0, 0x1);
        gbc.writeMem(0xa9d9, { 0x18 });
        gbc.writeMem(0xef37, { 0x86 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3bad, gbc.sp());
        EXPECT(0xef38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xa9d9));
        EXPECT(0x86, gbc.readMem(0xef37));
        // 86 0020
        gbc.setState(0xa0c4, 0x3b6f, 0x8720, 0x3e2a, 0x1f4e, 0x257a, 0x1, 0x0);
        gbc.writeMem(0x257a, { 0xfb });
        gbc.writeMem(0xa0c4, { 0x86 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3b6f, gbc.sp());
        EXPECT(0xa0c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa0c4));
        // 86 0021
        gbc.setState(0xd4, 0xaccf, 0x8b70, 0x45e6, 0x9c62, 0xab69, 0x0, 0x1);
        gbc.writeMem(0xd4, { 0x86 });
        gbc.writeMem(0xab69, { 0x4c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xaccf, gbc.sp());
        EXPECT(0xd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xab69));
        // 86 0022
        gbc.setState(0xb9d1, 0x5ae, 0xf490, 0x326e, 0xfcdc, 0x6ae1, 0x1, 0x1);
        gbc.writeMem(0x6ae1, { 0xa2 });
        gbc.writeMem(0xb9d1, { 0x86 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5ae, gbc.sp());
        EXPECT(0xb9d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb9d1));
        // 86 0023
        gbc.setState(0x8890, 0x8093, 0x95f0, 0xfb2f, 0xffe1, 0xd021, 0x1, 0x0);
        gbc.writeMem(0x8890, { 0x86 });
        gbc.writeMem(0xd021, { 0x80 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8093, gbc.sp());
        EXPECT(0x8891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8890));
        EXPECT(0x80, gbc.readMem(0xd021));
        // 86 0024
        gbc.setState(0xc383, 0xb96b, 0xef40, 0xf646, 0xb280, 0x8ec4, 0x0, 0x0);
        gbc.writeMem(0x8ec4, { 0xb6 });
        gbc.writeMem(0xc383, { 0x86 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb96b, gbc.sp());
        EXPECT(0xc384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8ec4));
        EXPECT(0x86, gbc.readMem(0xc383));
        // 86 0025
        gbc.setState(0xa145, 0x9ef4, 0xfa60, 0x27b7, 0x6e43, 0xa22e, 0x0, 0x0);
        gbc.writeMem(0xa145, { 0x86 });
        gbc.writeMem(0xa22e, { 0xc9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9ef4, gbc.sp());
        EXPECT(0xa146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa145));
        EXPECT(0xc9, gbc.readMem(0xa22e));
        // 86 0026
        gbc.setState(0x74ec, 0xc175, 0x7c90, 0x590, 0xa6, 0x3494, 0x0, 0x0);
        gbc.writeMem(0x3494, { 0x48 });
        gbc.writeMem(0x74ec, { 0x86 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc175, gbc.sp());
        EXPECT(0x74ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0027
        gbc.setState(0x73af, 0x80c1, 0xf250, 0x1a48, 0x3e2b, 0x90c, 0x0, 0x0);
        gbc.writeMem(0x90c, { 0xd7 });
        gbc.writeMem(0x73af, { 0x86 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x80c1, gbc.sp());
        EXPECT(0x73b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0028
        gbc.setState(0x1577, 0x4963, 0xc560, 0x2092, 0x333a, 0xc956, 0x1, 0x1);
        gbc.writeMem(0x1577, { 0x86 });
        gbc.writeMem(0xc956, { 0x86 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4963, gbc.sp());
        EXPECT(0x1578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc956));
        // 86 0029
        gbc.setState(0x391f, 0x9f7a, 0xdeb0, 0x9d4d, 0x8618, 0xf169, 0x0, 0x0);
        gbc.writeMem(0x391f, { 0x86 });
        gbc.writeMem(0xf169, { 0xbd });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9f7a, gbc.sp());
        EXPECT(0x3920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xf169));
        // 86 002A
        gbc.setState(0x762b, 0xe8d0, 0xee80, 0xb45e, 0xa5ef, 0xd3e1, 0x1, 0x1);
        gbc.writeMem(0x762b, { 0x86 });
        gbc.writeMem(0xd3e1, { 0xac });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe8d0, gbc.sp());
        EXPECT(0x762c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd3e1));
        // 86 002B
        gbc.setState(0x8136, 0x260, 0xfe10, 0x82dc, 0xb098, 0xa2b, 0x1, 0x0);
        gbc.writeMem(0xa2b, { 0x59 });
        gbc.writeMem(0x8136, { 0x86 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x260, gbc.sp());
        EXPECT(0x8137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8136));
        // 86 002C
        gbc.setState(0x1862, 0xa78f, 0xa180, 0x41e, 0x8b02, 0x22df, 0x0, 0x0);
        gbc.writeMem(0x1862, { 0x86 });
        gbc.writeMem(0x22df, { 0x8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa78f, gbc.sp());
        EXPECT(0x1863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 002D
        gbc.setState(0xa216, 0xd9e9, 0x3970, 0x21c4, 0xe2f7, 0x41bc, 0x1, 0x0);
        gbc.writeMem(0x41bc, { 0x53 });
        gbc.writeMem(0xa216, { 0x86 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd9e9, gbc.sp());
        EXPECT(0xa217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa216));
        // 86 002E
        gbc.setState(0x909, 0xcbc, 0xa270, 0xc581, 0x402c, 0x62ab, 0x0, 0x1);
        gbc.writeMem(0x909, { 0x86 });
        gbc.writeMem(0x62ab, { 0x33 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcbc, gbc.sp());
        EXPECT(0x90a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 002F
        gbc.setState(0x6d38, 0x8fb8, 0xbb30, 0x6735, 0x328c, 0x6968, 0x0, 0x0);
        gbc.writeMem(0x6968, { 0xb3 });
        gbc.writeMem(0x6d38, { 0x86 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8fb8, gbc.sp());
        EXPECT(0x6d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0030
        gbc.setState(0x8731, 0x31e, 0x3d70, 0x666d, 0xe547, 0xde82, 0x0, 0x0);
        gbc.writeMem(0x8731, { 0x86 });
        gbc.writeMem(0xde82, { 0x3b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x31e, gbc.sp());
        EXPECT(0x8732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8731));
        EXPECT(0x3b, gbc.readMem(0xde82));
        // 86 0031
        gbc.setState(0x6907, 0xba17, 0x70c0, 0x51ab, 0x3394, 0x7136, 0x0, 0x0);
        gbc.writeMem(0x6907, { 0x86 });
        gbc.writeMem(0x7136, { 0x2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xba17, gbc.sp());
        EXPECT(0x6908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0032
        gbc.setState(0xa649, 0x9650, 0x17b0, 0xfc7b, 0xc9b, 0xe693, 0x0, 0x1);
        gbc.writeMem(0xa649, { 0x86 });
        gbc.writeMem(0xe693, { 0x46 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9650, gbc.sp());
        EXPECT(0xa64a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa649));
        EXPECT(0x46, gbc.readMem(0xe693));
        // 86 0033
        gbc.setState(0x72e0, 0x494f, 0x9400, 0x6baa, 0x78eb, 0x115f, 0x1, 0x0);
        gbc.writeMem(0x115f, { 0xa });
        gbc.writeMem(0x72e0, { 0x86 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x494f, gbc.sp());
        EXPECT(0x72e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0034
        gbc.setState(0x8287, 0x7582, 0x3b50, 0x82f4, 0xcfed, 0x574a, 0x0, 0x0);
        gbc.writeMem(0x574a, { 0xff });
        gbc.writeMem(0x8287, { 0x86 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7582, gbc.sp());
        EXPECT(0x8288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8287));
        // 86 0035
        gbc.setState(0x726a, 0x2aaa, 0xd50, 0xeca, 0x2a14, 0xc4ac, 0x0, 0x1);
        gbc.writeMem(0x726a, { 0x86 });
        gbc.writeMem(0xc4ac, { 0xec });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2aaa, gbc.sp());
        EXPECT(0x726b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xc4ac));
        // 86 0036
        gbc.setState(0x39f8, 0x8b87, 0xee70, 0x8c8e, 0xba4c, 0x6557, 0x0, 0x1);
        gbc.writeMem(0x39f8, { 0x86 });
        gbc.writeMem(0x6557, { 0xd0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8b87, gbc.sp());
        EXPECT(0x39f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0037
        gbc.setState(0x10a3, 0x420, 0x1fb0, 0x8071, 0x7dd1, 0x75f5, 0x1, 0x1);
        gbc.writeMem(0x10a3, { 0x86 });
        gbc.writeMem(0x75f5, { 0x2e });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x420, gbc.sp());
        EXPECT(0x10a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0038
        gbc.setState(0x3324, 0xfbed, 0x3f90, 0x28ad, 0x7d3a, 0xceba, 0x1, 0x1);
        gbc.writeMem(0x3324, { 0x86 });
        gbc.writeMem(0xceba, { 0x8a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfbed, gbc.sp());
        EXPECT(0x3325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xceba));
        // 86 0039
        gbc.setState(0x6ee8, 0xe9f5, 0x6df0, 0xc5fc, 0xfa35, 0x8789, 0x0, 0x0);
        gbc.writeMem(0x6ee8, { 0x86 });
        gbc.writeMem(0x8789, { 0xce });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe9f5, gbc.sp());
        EXPECT(0x6ee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0x8789));
        // 86 003A
        gbc.setState(0xca11, 0x31ff, 0x5eb0, 0x9b5d, 0xfc9, 0xc786, 0x0, 0x1);
        gbc.writeMem(0xc786, { 0x98 });
        gbc.writeMem(0xca11, { 0x86 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x31ff, gbc.sp());
        EXPECT(0xca12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc786));
        EXPECT(0x86, gbc.readMem(0xca11));
        // 86 003B
        gbc.setState(0x613b, 0x820e, 0xd610, 0xd3e, 0x8561, 0x8f5f, 0x1, 0x1);
        gbc.writeMem(0x613b, { 0x86 });
        gbc.writeMem(0x8f5f, { 0x84 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x820e, gbc.sp());
        EXPECT(0x613c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x8f5f));
        // 86 003C
        gbc.setState(0xa17c, 0x9205, 0xe970, 0xcb7a, 0x1f64, 0x7c9, 0x1, 0x0);
        gbc.writeMem(0x7c9, { 0x57 });
        gbc.writeMem(0xa17c, { 0x86 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9205, gbc.sp());
        EXPECT(0xa17d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa17c));
        // 86 003D
        gbc.setState(0x59e6, 0xbfb, 0xb020, 0x15b7, 0xa59f, 0x114, 0x1, 0x1);
        gbc.writeMem(0x114, { 0xe9 });
        gbc.writeMem(0x59e6, { 0x86 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbfb, gbc.sp());
        EXPECT(0x59e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 003E
        gbc.setState(0xda5, 0xd89a, 0xb2c0, 0x38fc, 0xc976, 0xe241, 0x0, 0x0);
        gbc.writeMem(0xda5, { 0x86 });
        gbc.writeMem(0xe241, { 0xe5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd89a, gbc.sp());
        EXPECT(0xda6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xe241));
        // 86 003F
        gbc.setState(0xf87, 0x2ea8, 0x2f00, 0xd66, 0xcd18, 0xec87, 0x1, 0x1);
        gbc.writeMem(0xf87, { 0x86 });
        gbc.writeMem(0xec87, { 0xb7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2ea8, gbc.sp());
        EXPECT(0xf88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xec87));
        // 86 0040
        gbc.setState(0xcbe1, 0xab8e, 0xcc60, 0xfc26, 0xd73b, 0xfa6d, 0x0, 0x0);
        gbc.writeMem(0xcbe1, { 0x86 });
        gbc.writeMem(0xfa6d, { 0xca });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xab8e, gbc.sp());
        EXPECT(0xcbe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xcbe1));
        EXPECT(0xca, gbc.readMem(0xfa6d));
        // 86 0041
        gbc.setState(0x9d58, 0xf05b, 0x3850, 0xfb6b, 0xd3f3, 0x87cd, 0x0, 0x0);
        gbc.writeMem(0x87cd, { 0x49 });
        gbc.writeMem(0x9d58, { 0x86 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf05b, gbc.sp());
        EXPECT(0x9d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x87cd));
        EXPECT(0x86, gbc.readMem(0x9d58));
        // 86 0042
        gbc.setState(0x4a3c, 0x563d, 0x9fc0, 0x5317, 0xc918, 0x518e, 0x1, 0x0);
        gbc.writeMem(0x4a3c, { 0x86 });
        gbc.writeMem(0x518e, { 0xc3 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x563d, gbc.sp());
        EXPECT(0x4a3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0043
        gbc.setState(0x503c, 0x273f, 0x160, 0x7874, 0x1fea, 0xcc0a, 0x1, 0x1);
        gbc.writeMem(0x503c, { 0x86 });
        gbc.writeMem(0xcc0a, { 0x10 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x273f, gbc.sp());
        EXPECT(0x503d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcc0a));
        // 86 0044
        gbc.setState(0xd1a7, 0x1daa, 0xb280, 0x1411, 0x7153, 0x6037, 0x0, 0x0);
        gbc.writeMem(0x6037, { 0x12 });
        gbc.writeMem(0xd1a7, { 0x86 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1daa, gbc.sp());
        EXPECT(0xd1a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd1a7));
        // 86 0045
        gbc.setState(0xb7f5, 0x36da, 0x4a60, 0x4ddb, 0x1d4c, 0x3a97, 0x0, 0x0);
        gbc.writeMem(0x3a97, { 0x7f });
        gbc.writeMem(0xb7f5, { 0x86 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x36da, gbc.sp());
        EXPECT(0xb7f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb7f5));
        // 86 0046
        gbc.setState(0xd2ac, 0x5cd0, 0x54b0, 0x6d2d, 0xe7e6, 0x6e0, 0x1, 0x0);
        gbc.writeMem(0x6e0, { 0xcd });
        gbc.writeMem(0xd2ac, { 0x86 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5cd0, gbc.sp());
        EXPECT(0xd2ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd2ac));
        // 86 0048
        gbc.setState(0x34ea, 0x68da, 0x7790, 0x6721, 0x17f1, 0xa3a7, 0x0, 0x1);
        gbc.writeMem(0x34ea, { 0x86 });
        gbc.writeMem(0xa3a7, { 0x6b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x68da, gbc.sp());
        EXPECT(0x34eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xa3a7));
        // 86 0049
        gbc.setState(0xe963, 0x25d0, 0x720, 0xb1ce, 0x45d6, 0xa7c2, 0x0, 0x0);
        gbc.writeMem(0xa7c2, { 0x20 });
        gbc.writeMem(0xe963, { 0x86 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x25d0, gbc.sp());
        EXPECT(0xe964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xa7c2));
        EXPECT(0x86, gbc.readMem(0xe963));
        // 86 004A
        gbc.setState(0xe638, 0x1646, 0x91b0, 0x4bb8, 0x60b0, 0xa5e0, 0x0, 0x0);
        gbc.writeMem(0xa5e0, { 0x14 });
        gbc.writeMem(0xe638, { 0x86 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1646, gbc.sp());
        EXPECT(0xe639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa5e0));
        EXPECT(0x86, gbc.readMem(0xe638));
        // 86 004B
        gbc.setState(0x33be, 0x4cf1, 0xd550, 0xca0d, 0x7f4, 0x5e48, 0x1, 0x0);
        gbc.writeMem(0x33be, { 0x86 });
        gbc.writeMem(0x5e48, { 0x24 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4cf1, gbc.sp());
        EXPECT(0x33bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 004C
        gbc.setState(0xc1, 0x4dd3, 0x2eb0, 0x346e, 0x359e, 0x895d, 0x0, 0x0);
        gbc.writeMem(0xc1, { 0x86 });
        gbc.writeMem(0x895d, { 0x1b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4dd3, gbc.sp());
        EXPECT(0xc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x895d));
        // 86 004D
        gbc.setState(0xc21b, 0x3218, 0x50f0, 0xf632, 0x1771, 0xd65a, 0x0, 0x1);
        gbc.writeMem(0xc21b, { 0x86 });
        gbc.writeMem(0xd65a, { 0x31 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3218, gbc.sp());
        EXPECT(0xc21c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc21b));
        EXPECT(0x31, gbc.readMem(0xd65a));
        // 86 004E
        gbc.setState(0xa7a2, 0x8f8d, 0x43f0, 0xb577, 0xfc9a, 0x611c, 0x0, 0x1);
        gbc.writeMem(0x611c, { 0x1d });
        gbc.writeMem(0xa7a2, { 0x86 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8f8d, gbc.sp());
        EXPECT(0xa7a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa7a2));
        // 86 004F
        gbc.setState(0xd715, 0x78d6, 0xa800, 0xdbf2, 0xe15f, 0x33d2, 0x0, 0x1);
        gbc.writeMem(0x33d2, { 0x43 });
        gbc.writeMem(0xd715, { 0x86 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x78d6, gbc.sp());
        EXPECT(0xd716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd715));
        // 86 0050
        gbc.setState(0x56e5, 0xb417, 0x7b60, 0x31bd, 0xb5e, 0xbbc, 0x1, 0x0);
        gbc.writeMem(0xbbc, { 0xfe });
        gbc.writeMem(0x56e5, { 0x86 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb417, gbc.sp());
        EXPECT(0x56e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0051
        gbc.setState(0xda74, 0xe4, 0x10c0, 0x6f67, 0x479b, 0x620c, 0x1, 0x0);
        gbc.writeMem(0x620c, { 0x6 });
        gbc.writeMem(0xda74, { 0x86 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe4, gbc.sp());
        EXPECT(0xda75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xda74));
        // 86 0052
        gbc.setState(0x6fd1, 0x3bca, 0x4fe0, 0x744b, 0x21c1, 0xd06d, 0x0, 0x1);
        gbc.writeMem(0x6fd1, { 0x86 });
        gbc.writeMem(0xd06d, { 0xe6 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3bca, gbc.sp());
        EXPECT(0x6fd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd06d));
        // 86 0053
        gbc.setState(0x62a7, 0xa233, 0x1480, 0x4f58, 0x70d3, 0xfdd1, 0x1, 0x0);
        gbc.writeMem(0x62a7, { 0x86 });
        gbc.writeMem(0xfdd1, { 0xff });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa233, gbc.sp());
        EXPECT(0x62a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xfdd1));
        // 86 0054
        gbc.setState(0x58ce, 0x69c0, 0x3320, 0x43da, 0x99ab, 0x7ee6, 0x1, 0x1);
        gbc.writeMem(0x58ce, { 0x86 });
        gbc.writeMem(0x7ee6, { 0x77 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x69c0, gbc.sp());
        EXPECT(0x58cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0055
        gbc.setState(0xd7d6, 0x976d, 0x3a00, 0x1804, 0xf99d, 0xe530, 0x1, 0x1);
        gbc.writeMem(0xd7d6, { 0x86 });
        gbc.writeMem(0xe530, { 0x16 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x976d, gbc.sp());
        EXPECT(0xd7d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd7d6));
        EXPECT(0x16, gbc.readMem(0xe530));
        // 86 0056
        gbc.setState(0x8433, 0x1371, 0x5a30, 0x8558, 0x4a5a, 0xe13b, 0x1, 0x0);
        gbc.writeMem(0x8433, { 0x86 });
        gbc.writeMem(0xe13b, { 0xc8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1371, gbc.sp());
        EXPECT(0x8434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8433));
        EXPECT(0xc8, gbc.readMem(0xe13b));
        // 86 0057
        gbc.setState(0xb283, 0x9726, 0x4530, 0xc0d6, 0x2d9e, 0x9030, 0x0, 0x1);
        gbc.writeMem(0x9030, { 0xb6 });
        gbc.writeMem(0xb283, { 0x86 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9726, gbc.sp());
        EXPECT(0xb284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9030));
        EXPECT(0x86, gbc.readMem(0xb283));
        // 86 0058
        gbc.setState(0x3ef9, 0x905, 0x2150, 0x63d9, 0x35f1, 0x2065, 0x1, 0x0);
        gbc.writeMem(0x2065, { 0xa7 });
        gbc.writeMem(0x3ef9, { 0x86 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x905, gbc.sp());
        EXPECT(0x3efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0059
        gbc.setState(0xb8f2, 0x1dd2, 0xd4d0, 0xdd87, 0x4f7c, 0x41d7, 0x1, 0x1);
        gbc.writeMem(0x41d7, { 0xd0 });
        gbc.writeMem(0xb8f2, { 0x86 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1dd2, gbc.sp());
        EXPECT(0xb8f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb8f2));
        // 86 005A
        gbc.setState(0x8db3, 0xa9be, 0x9870, 0x8df9, 0x3c6e, 0x8578, 0x1, 0x0);
        gbc.writeMem(0x8578, { 0x91 });
        gbc.writeMem(0x8db3, { 0x86 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa9be, gbc.sp());
        EXPECT(0x8db4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8578));
        EXPECT(0x86, gbc.readMem(0x8db3));
        // 86 005B
        gbc.setState(0x7002, 0x2e93, 0x84a0, 0x4a37, 0x816, 0x44a1, 0x1, 0x1);
        gbc.writeMem(0x44a1, { 0xbe });
        gbc.writeMem(0x7002, { 0x86 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2e93, gbc.sp());
        EXPECT(0x7003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 005C
        gbc.setState(0xb737, 0xef29, 0x5720, 0x8024, 0xe096, 0x54e1, 0x0, 0x0);
        gbc.writeMem(0x54e1, { 0xab });
        gbc.writeMem(0xb737, { 0x86 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xef29, gbc.sp());
        EXPECT(0xb738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb737));
        // 86 005D
        gbc.setState(0x2719, 0x8bd5, 0x8c90, 0xfe99, 0x40f, 0xa754, 0x0, 0x1);
        gbc.writeMem(0x2719, { 0x86 });
        gbc.writeMem(0xa754, { 0x7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8bd5, gbc.sp());
        EXPECT(0x271a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa754));
        // 86 005E
        gbc.setState(0x5b3d, 0x3e76, 0x9a80, 0xe49a, 0xac4b, 0x116f, 0x0, 0x1);
        gbc.writeMem(0x116f, { 0x2b });
        gbc.writeMem(0x5b3d, { 0x86 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3e76, gbc.sp());
        EXPECT(0x5b3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 005F
        gbc.setState(0x7534, 0x13cd, 0xde70, 0xcea3, 0x7047, 0x1a30, 0x1, 0x0);
        gbc.writeMem(0x1a30, { 0x8b });
        gbc.writeMem(0x7534, { 0x86 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x13cd, gbc.sp());
        EXPECT(0x7535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0060
        gbc.setState(0xc581, 0x5cc5, 0x7480, 0x7bd0, 0xbc35, 0x9598, 0x1, 0x1);
        gbc.writeMem(0x9598, { 0xe3 });
        gbc.writeMem(0xc581, { 0x86 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5cc5, gbc.sp());
        EXPECT(0xc582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x9598));
        EXPECT(0x86, gbc.readMem(0xc581));
        // 86 0061
        gbc.setState(0x3f49, 0x2f6b, 0x7250, 0x8033, 0x6705, 0x14d5, 0x0, 0x0);
        gbc.writeMem(0x14d5, { 0xe0 });
        gbc.writeMem(0x3f49, { 0x86 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2f6b, gbc.sp());
        EXPECT(0x3f4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0062
        gbc.setState(0x85b3, 0x1fc1, 0xa9c0, 0xc4b4, 0xbeaa, 0x1623, 0x0, 0x1);
        gbc.writeMem(0x1623, { 0xec });
        gbc.writeMem(0x85b3, { 0x86 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1fc1, gbc.sp());
        EXPECT(0x85b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x85b3));
        // 86 0063
        gbc.setState(0x1431, 0xbb74, 0xafb0, 0x767d, 0xff7, 0xc273, 0x0, 0x1);
        gbc.writeMem(0x1431, { 0x86 });
        gbc.writeMem(0xc273, { 0x38 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xbb74, gbc.sp());
        EXPECT(0x1432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc273));
        // 86 0064
        gbc.setState(0xb923, 0x7f23, 0xb990, 0x5343, 0xca8d, 0x8f50, 0x0, 0x0);
        gbc.writeMem(0x8f50, { 0x1a });
        gbc.writeMem(0xb923, { 0x86 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7f23, gbc.sp());
        EXPECT(0xb924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8f50));
        EXPECT(0x86, gbc.readMem(0xb923));
        // 86 0065
        gbc.setState(0x172c, 0x356d, 0xa780, 0xfabc, 0x1888, 0xe6a, 0x0, 0x1);
        gbc.writeMem(0xe6a, { 0xde });
        gbc.writeMem(0x172c, { 0x86 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x356d, gbc.sp());
        EXPECT(0x172d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0066
        gbc.setState(0x5b2e, 0x161c, 0x1990, 0x2779, 0x6020, 0x1190, 0x1, 0x1);
        gbc.writeMem(0x1190, { 0x93 });
        gbc.writeMem(0x5b2e, { 0x86 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x161c, gbc.sp());
        EXPECT(0x5b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0067
        gbc.setState(0x60d0, 0xfbbb, 0xa3e0, 0x22c0, 0x51f6, 0x74b9, 0x0, 0x1);
        gbc.writeMem(0x60d0, { 0x86 });
        gbc.writeMem(0x74b9, { 0x7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfbbb, gbc.sp());
        EXPECT(0x60d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0068
        gbc.setState(0x8076, 0x6515, 0x1b70, 0x1a48, 0x9e52, 0xb4a9, 0x0, 0x1);
        gbc.writeMem(0x8076, { 0x86 });
        gbc.writeMem(0xb4a9, { 0xaa });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6515, gbc.sp());
        EXPECT(0x8077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8076));
        EXPECT(0xaa, gbc.readMem(0xb4a9));
        // 86 0069
        gbc.setState(0x89c1, 0x7e95, 0x8d20, 0xc688, 0xa838, 0x82f, 0x0, 0x0);
        gbc.writeMem(0x82f, { 0x4d });
        gbc.writeMem(0x89c1, { 0x86 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7e95, gbc.sp());
        EXPECT(0x89c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x89c1));
        // 86 006A
        gbc.setState(0xfe5, 0x54a0, 0xcb80, 0x5962, 0xe9ce, 0xa852, 0x0, 0x1);
        gbc.writeMem(0xfe5, { 0x86 });
        gbc.writeMem(0xa852, { 0x37 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x54a0, gbc.sp());
        EXPECT(0xfe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa852));
        // 86 006B
        gbc.setState(0x1bb3, 0x1e0b, 0xa8c0, 0xa49e, 0x5026, 0xddc7, 0x1, 0x1);
        gbc.writeMem(0x1bb3, { 0x86 });
        gbc.writeMem(0xddc7, { 0x62 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1e0b, gbc.sp());
        EXPECT(0x1bb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xddc7));
        // 86 006D
        gbc.setState(0xc79, 0x7a2d, 0x7f30, 0x3ac2, 0x5d7, 0xf9f0, 0x1, 0x1);
        gbc.writeMem(0xc79, { 0x86 });
        gbc.writeMem(0xf9f0, { 0x6d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7a2d, gbc.sp());
        EXPECT(0xc7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xf9f0));
        // 86 006E
        gbc.setState(0xb025, 0x29df, 0x8170, 0x3c4c, 0x91d9, 0x274a, 0x1, 0x1);
        gbc.writeMem(0x274a, { 0x89 });
        gbc.writeMem(0xb025, { 0x86 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x29df, gbc.sp());
        EXPECT(0xb026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb025));
        // 86 006F
        gbc.setState(0xd49e, 0x26ea, 0x1550, 0xeecd, 0x5199, 0x56da, 0x1, 0x1);
        gbc.writeMem(0x56da, { 0x76 });
        gbc.writeMem(0xd49e, { 0x86 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x26ea, gbc.sp());
        EXPECT(0xd49f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd49e));
        // 86 0070
        gbc.setState(0xc00a, 0x9ffd, 0xfe10, 0xb15c, 0x5034, 0x78b3, 0x1, 0x0);
        gbc.writeMem(0x78b3, { 0xda });
        gbc.writeMem(0xc00a, { 0x86 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9ffd, gbc.sp());
        EXPECT(0xc00b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc00a));
        // 86 0071
        gbc.setState(0x4344, 0xee8f, 0x92e0, 0xcdad, 0x763b, 0xf28, 0x0, 0x1);
        gbc.writeMem(0xf28, { 0xb7 });
        gbc.writeMem(0x4344, { 0x86 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xee8f, gbc.sp());
        EXPECT(0x4345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0072
        gbc.setState(0x3b75, 0x6741, 0x5b70, 0xa45c, 0xea16, 0xd085, 0x1, 0x0);
        gbc.writeMem(0x3b75, { 0x86 });
        gbc.writeMem(0xd085, { 0x36 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6741, gbc.sp());
        EXPECT(0x3b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xd085));
        // 86 0073
        gbc.setState(0x6749, 0x5e89, 0xb290, 0x9703, 0x72ba, 0x5dae, 0x1, 0x1);
        gbc.writeMem(0x5dae, { 0x7d });
        gbc.writeMem(0x6749, { 0x86 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5e89, gbc.sp());
        EXPECT(0x674a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0074
        gbc.setState(0x2b58, 0x9b07, 0xe550, 0x9481, 0x2a1b, 0x28a1, 0x0, 0x0);
        gbc.writeMem(0x28a1, { 0x11 });
        gbc.writeMem(0x2b58, { 0x86 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9b07, gbc.sp());
        EXPECT(0x2b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0076
        gbc.setState(0x937a, 0x498, 0x65b0, 0x473c, 0xe23, 0x15f1, 0x0, 0x1);
        gbc.writeMem(0x15f1, { 0x94 });
        gbc.writeMem(0x937a, { 0x86 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x498, gbc.sp());
        EXPECT(0x937b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x937a));
        // 86 0077
        gbc.setState(0x2c01, 0xed78, 0xf740, 0x58bb, 0xc15a, 0xccd3, 0x0, 0x1);
        gbc.writeMem(0x2c01, { 0x86 });
        gbc.writeMem(0xccd3, { 0x1d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xed78, gbc.sp());
        EXPECT(0x2c02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xccd3));
        // 86 0078
        gbc.setState(0x909d, 0xebdb, 0x7bd0, 0x8054, 0x7ce, 0x7c55, 0x1, 0x1);
        gbc.writeMem(0x7c55, { 0x62 });
        gbc.writeMem(0x909d, { 0x86 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xebdb, gbc.sp());
        EXPECT(0x909e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x909d));
        // 86 0079
        gbc.setState(0x57f6, 0xda36, 0x79c0, 0x44c, 0x2666, 0x8b9f, 0x1, 0x0);
        gbc.writeMem(0x57f6, { 0x86 });
        gbc.writeMem(0x8b9f, { 0x65 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xda36, gbc.sp());
        EXPECT(0x57f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8b9f));
        // 86 007B
        gbc.setState(0x5b16, 0x88f1, 0x5b40, 0xe606, 0x796e, 0x116a, 0x1, 0x0);
        gbc.writeMem(0x116a, { 0x32 });
        gbc.writeMem(0x5b16, { 0x86 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x88f1, gbc.sp());
        EXPECT(0x5b17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 007C
        gbc.setState(0xd942, 0xeb16, 0x9930, 0x905c, 0xcc53, 0xa342, 0x0, 0x1);
        gbc.writeMem(0xa342, { 0x1 });
        gbc.writeMem(0xd942, { 0x86 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xeb16, gbc.sp());
        EXPECT(0xd943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xa342));
        EXPECT(0x86, gbc.readMem(0xd942));
        // 86 007D
        gbc.setState(0x809d, 0x48a5, 0xd910, 0x38fd, 0x2ec9, 0x2a39, 0x1, 0x0);
        gbc.writeMem(0x2a39, { 0x69 });
        gbc.writeMem(0x809d, { 0x86 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x48a5, gbc.sp());
        EXPECT(0x809e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x809d));
        // 86 007E
        gbc.setState(0x5071, 0x537a, 0x1640, 0x5630, 0xb9dc, 0x7a4a, 0x0, 0x0);
        gbc.writeMem(0x5071, { 0x86 });
        gbc.writeMem(0x7a4a, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x537a, gbc.sp());
        EXPECT(0x5072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 007F
        gbc.setState(0x160d, 0xa7e, 0x1700, 0x99a2, 0xca63, 0x556a, 0x0, 0x1);
        gbc.writeMem(0x160d, { 0x86 });
        gbc.writeMem(0x556a, { 0x8c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa7e, gbc.sp());
        EXPECT(0x160e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0080
        gbc.setState(0x184e, 0x1662, 0x1ab0, 0x41ff, 0xa06e, 0xc474, 0x1, 0x0);
        gbc.writeMem(0x184e, { 0x86 });
        gbc.writeMem(0xc474, { 0xcc });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1662, gbc.sp());
        EXPECT(0x184f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xc474));
        // 86 0081
        gbc.setState(0xbb94, 0x22bd, 0x5570, 0x288e, 0x929d, 0x9aeb, 0x0, 0x1);
        gbc.writeMem(0x9aeb, { 0x91 });
        gbc.writeMem(0xbb94, { 0x86 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x22bd, gbc.sp());
        EXPECT(0xbb95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9aeb));
        EXPECT(0x86, gbc.readMem(0xbb94));
        // 86 0082
        gbc.setState(0x9f69, 0xd994, 0x7440, 0xf2da, 0xf1c4, 0x2c46, 0x1, 0x0);
        gbc.writeMem(0x2c46, { 0xa9 });
        gbc.writeMem(0x9f69, { 0x86 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd994, gbc.sp());
        EXPECT(0x9f6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9f69));
        // 86 0083
        gbc.setState(0xec50, 0x9ef, 0xcfe0, 0x1f24, 0xd691, 0x7067, 0x0, 0x0);
        gbc.writeMem(0x7067, { 0x26 });
        gbc.writeMem(0xec50, { 0x86 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9ef, gbc.sp());
        EXPECT(0xec51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xec50));
        // 86 0084
        gbc.setState(0x23a4, 0x20de, 0xd8c0, 0xe19, 0x97a, 0x7662, 0x0, 0x1);
        gbc.writeMem(0x23a4, { 0x86 });
        gbc.writeMem(0x7662, { 0x67 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x20de, gbc.sp());
        EXPECT(0x23a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0085
        gbc.setState(0x9643, 0x2e8c, 0xfe00, 0xcf62, 0xf87e, 0xc548, 0x1, 0x0);
        gbc.writeMem(0x9643, { 0x86 });
        gbc.writeMem(0xc548, { 0x5e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2e8c, gbc.sp());
        EXPECT(0x9644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9643));
        EXPECT(0x5e, gbc.readMem(0xc548));
        // 86 0086
        gbc.setState(0x9902, 0x4e1f, 0xd4f0, 0xf000, 0xddcf, 0x483f, 0x1, 0x0);
        gbc.writeMem(0x483f, { 0x91 });
        gbc.writeMem(0x9902, { 0x86 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4e1f, gbc.sp());
        EXPECT(0x9903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9902));
        // 86 0087
        gbc.setState(0x8cea, 0xf20, 0x97c0, 0x413c, 0x4d38, 0x6de8, 0x1, 0x1);
        gbc.writeMem(0x6de8, { 0xdb });
        gbc.writeMem(0x8cea, { 0x86 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf20, gbc.sp());
        EXPECT(0x8ceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8cea));
        // 86 0088
        gbc.setState(0x1457, 0xf175, 0x43d0, 0xea84, 0xce46, 0x138f, 0x1, 0x0);
        gbc.writeMem(0x138f, { 0x69 });
        gbc.writeMem(0x1457, { 0x86 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf175, gbc.sp());
        EXPECT(0x1458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0089
        gbc.setState(0x25eb, 0x806c, 0x4ec0, 0x94d3, 0x4b0a, 0x5f21, 0x0, 0x0);
        gbc.writeMem(0x25eb, { 0x86 });
        gbc.writeMem(0x5f21, { 0x3d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x806c, gbc.sp());
        EXPECT(0x25ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 008A
        gbc.setState(0x6576, 0x7333, 0xa5e0, 0xb196, 0x45a1, 0xbcb9, 0x1, 0x0);
        gbc.writeMem(0x6576, { 0x86 });
        gbc.writeMem(0xbcb9, { 0x14 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7333, gbc.sp());
        EXPECT(0x6577, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbcb9));
        // 86 008B
        gbc.setState(0x56e3, 0x8b97, 0x8320, 0x7bcb, 0x5ee0, 0xac82, 0x0, 0x0);
        gbc.writeMem(0x56e3, { 0x86 });
        gbc.writeMem(0xac82, { 0x6a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8b97, gbc.sp());
        EXPECT(0x56e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xac82));
        // 86 008C
        gbc.setState(0x876f, 0xbeb8, 0xbd90, 0x6338, 0xf86e, 0xd2b3, 0x0, 0x0);
        gbc.writeMem(0x876f, { 0x86 });
        gbc.writeMem(0xd2b3, { 0x71 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xbeb8, gbc.sp());
        EXPECT(0x8770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x876f));
        EXPECT(0x71, gbc.readMem(0xd2b3));
        // 86 008D
        gbc.setState(0xec3e, 0x53db, 0x9150, 0xe72f, 0x2cb9, 0x6070, 0x1, 0x1);
        gbc.writeMem(0x6070, { 0x7b });
        gbc.writeMem(0xec3e, { 0x86 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x53db, gbc.sp());
        EXPECT(0xec3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xec3e));
        // 86 008E
        gbc.setState(0x434d, 0x851e, 0xfc00, 0x7f5d, 0xbb4b, 0x5d1b, 0x1, 0x0);
        gbc.writeMem(0x434d, { 0x86 });
        gbc.writeMem(0x5d1b, { 0x68 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x851e, gbc.sp());
        EXPECT(0x434e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 008F
        gbc.setState(0x8f36, 0xc81a, 0xbc00, 0xf7ef, 0xa893, 0xcbb, 0x1, 0x1);
        gbc.writeMem(0xcbb, { 0xbd });
        gbc.writeMem(0x8f36, { 0x86 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc81a, gbc.sp());
        EXPECT(0x8f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8f36));
        // 86 0090
        gbc.setState(0x166, 0x165a, 0x8610, 0x1f80, 0x6594, 0x9a10, 0x1, 0x1);
        gbc.writeMem(0x166, { 0x86 });
        gbc.writeMem(0x9a10, { 0xa4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x165a, gbc.sp());
        EXPECT(0x167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x9a10));
        // 86 0092
        gbc.setState(0x4337, 0x950d, 0xcc0, 0xf199, 0xf993, 0x264e, 0x0, 0x0);
        gbc.writeMem(0x264e, { 0xab });
        gbc.writeMem(0x4337, { 0x86 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x950d, gbc.sp());
        EXPECT(0x4338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0093
        gbc.setState(0x3cae, 0x8bca, 0xf400, 0xbc5d, 0x4e50, 0x3d98, 0x1, 0x1);
        gbc.writeMem(0x3cae, { 0x86 });
        gbc.writeMem(0x3d98, { 0x99 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8bca, gbc.sp());
        EXPECT(0x3caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0094
        gbc.setState(0x570e, 0x76ad, 0xdd70, 0xf99, 0x964b, 0xa218, 0x0, 0x0);
        gbc.writeMem(0x570e, { 0x86 });
        gbc.writeMem(0xa218, { 0xf4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x76ad, gbc.sp());
        EXPECT(0x570f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xa218));
        // 86 0095
        gbc.setState(0x7dbe, 0xa243, 0x1800, 0xc975, 0x316d, 0x3c34, 0x0, 0x1);
        gbc.writeMem(0x3c34, { 0x94 });
        gbc.writeMem(0x7dbe, { 0x86 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa243, gbc.sp());
        EXPECT(0x7dbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0096
        gbc.setState(0xe691, 0xbe7f, 0x5f10, 0x50c0, 0xa042, 0x120f, 0x1, 0x0);
        gbc.writeMem(0x120f, { 0x94 });
        gbc.writeMem(0xe691, { 0x86 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbe7f, gbc.sp());
        EXPECT(0xe692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xe691));
        // 86 0098
        gbc.setState(0xa2da, 0xfa7a, 0x56b0, 0x804a, 0x5555, 0xe6bd, 0x1, 0x1);
        gbc.writeMem(0xa2da, { 0x86 });
        gbc.writeMem(0xe6bd, { 0xfd });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xfa7a, gbc.sp());
        EXPECT(0xa2db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa2da));
        EXPECT(0xfd, gbc.readMem(0xe6bd));
        // 86 0099
        gbc.setState(0xedce, 0x90ec, 0x1c90, 0xdfa, 0xf7ed, 0xc812, 0x0, 0x0);
        gbc.writeMem(0xc812, { 0x73 });
        gbc.writeMem(0xedce, { 0x86 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x90ec, gbc.sp());
        EXPECT(0xedcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xc812));
        EXPECT(0x86, gbc.readMem(0xedce));
        // 86 009A
        gbc.setState(0x3c8e, 0x722, 0xc870, 0x9912, 0xb41e, 0x4108, 0x0, 0x0);
        gbc.writeMem(0x3c8e, { 0x86 });
        gbc.writeMem(0x4108, { 0x80 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x722, gbc.sp());
        EXPECT(0x3c8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 009B
        gbc.setState(0x356a, 0x7f62, 0x91c0, 0x60f5, 0x9bf7, 0xc7c6, 0x1, 0x0);
        gbc.writeMem(0x356a, { 0x86 });
        gbc.writeMem(0xc7c6, { 0x77 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7f62, gbc.sp());
        EXPECT(0x356b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xc7c6));
        // 86 009C
        gbc.setState(0x9ca8, 0x4c35, 0xd350, 0x7f2c, 0xea18, 0xeaf, 0x0, 0x1);
        gbc.writeMem(0xeaf, { 0xe5 });
        gbc.writeMem(0x9ca8, { 0x86 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4c35, gbc.sp());
        EXPECT(0x9ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9ca8));
        // 86 009D
        gbc.setState(0x1dd9, 0xb7b2, 0x6960, 0x588a, 0xc850, 0xfaa, 0x0, 0x1);
        gbc.writeMem(0xfaa, { 0x74 });
        gbc.writeMem(0x1dd9, { 0x86 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb7b2, gbc.sp());
        EXPECT(0x1dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 009E
        gbc.setState(0xe9a1, 0x5f07, 0x9410, 0xfc1b, 0xa85c, 0x5b68, 0x0, 0x1);
        gbc.writeMem(0x5b68, { 0x8f });
        gbc.writeMem(0xe9a1, { 0x86 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5f07, gbc.sp());
        EXPECT(0xe9a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xe9a1));
        // 86 009F
        gbc.setState(0x9ecd, 0x7ce6, 0xed40, 0x621e, 0x1763, 0x9be5, 0x1, 0x0);
        gbc.writeMem(0x9be5, { 0x65 });
        gbc.writeMem(0x9ecd, { 0x86 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7ce6, gbc.sp());
        EXPECT(0x9ece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9be5));
        EXPECT(0x86, gbc.readMem(0x9ecd));
        // 86 00A0
        gbc.setState(0xcf22, 0x5518, 0x9ec0, 0x10eb, 0xd4e4, 0x9236, 0x0, 0x1);
        gbc.writeMem(0x9236, { 0x4 });
        gbc.writeMem(0xcf22, { 0x86 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5518, gbc.sp());
        EXPECT(0xcf23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9236));
        EXPECT(0x86, gbc.readMem(0xcf22));
        // 86 00A1
        gbc.setState(0x8c78, 0xe58e, 0xc7c0, 0xdf8c, 0xb395, 0x5750, 0x1, 0x0);
        gbc.writeMem(0x5750, { 0xfd });
        gbc.writeMem(0x8c78, { 0x86 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe58e, gbc.sp());
        EXPECT(0x8c79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8c78));
        // 86 00A2
        gbc.setState(0xdef2, 0x254, 0xbad0, 0x674c, 0x6fcf, 0x5913, 0x1, 0x1);
        gbc.writeMem(0x5913, { 0x5f });
        gbc.writeMem(0xdef2, { 0x86 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x254, gbc.sp());
        EXPECT(0xdef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xdef2));
        // 86 00A3
        gbc.setState(0x29e3, 0x91b3, 0x7840, 0xc809, 0x7aec, 0x6279, 0x0, 0x0);
        gbc.writeMem(0x29e3, { 0x86 });
        gbc.writeMem(0x6279, { 0xc1 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x91b3, gbc.sp());
        EXPECT(0x29e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 00A4
        gbc.setState(0xb8a5, 0x835b, 0xcdd0, 0xd78b, 0xe400, 0x64ce, 0x0, 0x1);
        gbc.writeMem(0x64ce, { 0x3 });
        gbc.writeMem(0xb8a5, { 0x86 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x835b, gbc.sp());
        EXPECT(0xb8a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb8a5));
        // 86 00A5
        gbc.setState(0x83b3, 0x6085, 0x36e0, 0xb143, 0x4f8d, 0x5cb, 0x0, 0x1);
        gbc.writeMem(0x5cb, { 0x4d });
        gbc.writeMem(0x83b3, { 0x86 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6085, gbc.sp());
        EXPECT(0x83b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x83b3));
        // 86 00A6
        gbc.setState(0x5c50, 0xc3a7, 0x4710, 0x2d0e, 0x2154, 0xbc78, 0x1, 0x0);
        gbc.writeMem(0x5c50, { 0x86 });
        gbc.writeMem(0xbc78, { 0x81 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc3a7, gbc.sp());
        EXPECT(0x5c51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbc78));
        // 86 00A7
        gbc.setState(0xdad8, 0x7eae, 0x2390, 0x1b7b, 0xddeb, 0x60f7, 0x0, 0x1);
        gbc.writeMem(0x60f7, { 0x37 });
        gbc.writeMem(0xdad8, { 0x86 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7eae, gbc.sp());
        EXPECT(0xdad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xdad8));
        // 86 00A8
        gbc.setState(0x43d5, 0x2e7, 0x66c0, 0x74ba, 0x1c91, 0x8994, 0x1, 0x0);
        gbc.writeMem(0x43d5, { 0x86 });
        gbc.writeMem(0x8994, { 0x3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2e7, gbc.sp());
        EXPECT(0x43d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8994));
        // 86 00A9
        gbc.setState(0x4dc9, 0x58de, 0xf4a0, 0x36f7, 0x1a1c, 0x7230, 0x1, 0x0);
        gbc.writeMem(0x4dc9, { 0x86 });
        gbc.writeMem(0x7230, { 0x5f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x58de, gbc.sp());
        EXPECT(0x4dca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 00AA
        gbc.setState(0x20d3, 0x9203, 0xa060, 0x4c31, 0x15ac, 0xd700, 0x1, 0x1);
        gbc.writeMem(0x20d3, { 0x86 });
        gbc.writeMem(0xd700, { 0x48 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9203, gbc.sp());
        EXPECT(0x20d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd700));
        // 86 00AB
        gbc.setState(0xd42b, 0xb03d, 0xbd80, 0x2f7, 0xb52e, 0x7784, 0x1, 0x0);
        gbc.writeMem(0x7784, { 0x68 });
        gbc.writeMem(0xd42b, { 0x86 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb03d, gbc.sp());
        EXPECT(0xd42c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd42b));
        // 86 00AC
        gbc.setState(0x268b, 0x9eef, 0x8d00, 0xd851, 0x3cab, 0xa3d3, 0x0, 0x0);
        gbc.writeMem(0x268b, { 0x86 });
        gbc.writeMem(0xa3d3, { 0xb8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9eef, gbc.sp());
        EXPECT(0x268c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xa3d3));
        // 86 00AD
        gbc.setState(0x1a25, 0x8614, 0x52c0, 0x2e97, 0x92a2, 0x6e82, 0x1, 0x0);
        gbc.writeMem(0x1a25, { 0x86 });
        gbc.writeMem(0x6e82, { 0xed });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8614, gbc.sp());
        EXPECT(0x1a26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 00AE
        gbc.setState(0x517c, 0x5ea2, 0x9040, 0xe351, 0xec0b, 0x7158, 0x0, 0x1);
        gbc.writeMem(0x517c, { 0x86 });
        gbc.writeMem(0x7158, { 0x36 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5ea2, gbc.sp());
        EXPECT(0x517d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 00AF
        gbc.setState(0xdc8f, 0x213b, 0x7c30, 0xed06, 0x13bc, 0x2dd1, 0x0, 0x0);
        gbc.writeMem(0x2dd1, { 0x71 });
        gbc.writeMem(0xdc8f, { 0x86 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x213b, gbc.sp());
        EXPECT(0xdc90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xdc8f));
        // 86 00B0
        gbc.setState(0xc29b, 0x259c, 0x9b40, 0x3c96, 0x3f52, 0xc987, 0x1, 0x0);
        gbc.writeMem(0xc29b, { 0x86 });
        gbc.writeMem(0xc987, { 0xa8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x259c, gbc.sp());
        EXPECT(0xc29c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc29b));
        EXPECT(0xa8, gbc.readMem(0xc987));
        // 86 00B1
        gbc.setState(0x36f7, 0x1ce1, 0xf5b0, 0xfb64, 0x9889, 0xfe90, 0x1, 0x0);
        gbc.writeMem(0x36f7, { 0x86 });
        gbc.writeMem(0xfe90, { 0x51 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1ce1, gbc.sp());
        EXPECT(0x36f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xfe90));
        // 86 00B2
        gbc.setState(0x23a8, 0xd58a, 0x6fc0, 0xf0a8, 0xbc1, 0x493, 0x1, 0x0);
        gbc.writeMem(0x493, { 0x28 });
        gbc.writeMem(0x23a8, { 0x86 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd58a, gbc.sp());
        EXPECT(0x23a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 00B3
        gbc.setState(0x76b6, 0x3ccf, 0xe000, 0xb44c, 0x5d18, 0xed4e, 0x1, 0x1);
        gbc.writeMem(0x76b6, { 0x86 });
        gbc.writeMem(0xed4e, { 0x44 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3ccf, gbc.sp());
        EXPECT(0x76b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xed4e));
        // 86 00B4
        gbc.setState(0xb372, 0x902c, 0xee50, 0xe0b7, 0xd7ac, 0x4211, 0x1, 0x1);
        gbc.writeMem(0x4211, { 0x3d });
        gbc.writeMem(0xb372, { 0x86 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x902c, gbc.sp());
        EXPECT(0xb373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb372));
        // 86 00B5
        gbc.setState(0x6406, 0x13a6, 0xf6d0, 0x183e, 0xf83b, 0xedb, 0x1, 0x0);
        gbc.writeMem(0xedb, { 0x65 });
        gbc.writeMem(0x6406, { 0x86 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x13a6, gbc.sp());
        EXPECT(0x6407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 00B6
        gbc.setState(0xe1a0, 0x828d, 0xbfa0, 0xab71, 0x2be9, 0xa85d, 0x1, 0x1);
        gbc.writeMem(0xa85d, { 0xe3 });
        gbc.writeMem(0xe1a0, { 0x86 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x828d, gbc.sp());
        EXPECT(0xe1a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xa85d));
        EXPECT(0x86, gbc.readMem(0xe1a0));
        // 86 00B7
        gbc.setState(0xd346, 0x516b, 0xd230, 0x87c1, 0xb855, 0x4129, 0x1, 0x0);
        gbc.writeMem(0x4129, { 0x53 });
        gbc.writeMem(0xd346, { 0x86 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x516b, gbc.sp());
        EXPECT(0xd347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd346));
        // 86 00B8
        gbc.setState(0x3fa1, 0x5489, 0xca20, 0xb10c, 0x697a, 0x93e0, 0x0, 0x0);
        gbc.writeMem(0x3fa1, { 0x86 });
        gbc.writeMem(0x93e0, { 0x6c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5489, gbc.sp());
        EXPECT(0x3fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x93e0));
        // 86 00B9
        gbc.setState(0xaebc, 0x72a8, 0x84c0, 0x402, 0x3dec, 0x56cc, 0x0, 0x0);
        gbc.writeMem(0x56cc, { 0x4b });
        gbc.writeMem(0xaebc, { 0x86 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x72a8, gbc.sp());
        EXPECT(0xaebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xaebc));
        // 86 00BA
        gbc.setState(0x4e1c, 0x22eb, 0xd1f0, 0xc09c, 0x15, 0x28cb, 0x0, 0x0);
        gbc.writeMem(0x28cb, { 0xf0 });
        gbc.writeMem(0x4e1c, { 0x86 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x22eb, gbc.sp());
        EXPECT(0x4e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 00BB
        gbc.setState(0xc778, 0xbbc3, 0xcf60, 0xb0ab, 0xa7be, 0xea1f, 0x1, 0x1);
        gbc.writeMem(0xc778, { 0x86 });
        gbc.writeMem(0xea1f, { 0xd6 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbbc3, gbc.sp());
        EXPECT(0xc779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc778));
        EXPECT(0xd6, gbc.readMem(0xea1f));
        // 86 00BC
        gbc.setState(0xc6e, 0xdddc, 0x9550, 0x896f, 0x47a9, 0x4f27, 0x0, 0x1);
        gbc.writeMem(0xc6e, { 0x86 });
        gbc.writeMem(0x4f27, { 0x99 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xdddc, gbc.sp());
        EXPECT(0xc6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 00BD
        gbc.setState(0xc11, 0xdc1b, 0xfb00, 0xf7e9, 0xcbc2, 0xa8be, 0x1, 0x1);
        gbc.writeMem(0xc11, { 0x86 });
        gbc.writeMem(0xa8be, { 0x39 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xdc1b, gbc.sp());
        EXPECT(0xc12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xa8be));
        // 86 00BE
        gbc.setState(0x3f3e, 0xebe5, 0xa420, 0x8665, 0xfcd6, 0x442b, 0x1, 0x1);
        gbc.writeMem(0x3f3e, { 0x86 });
        gbc.writeMem(0x442b, { 0x62 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xebe5, gbc.sp());
        EXPECT(0x3f3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 00BF
        gbc.setState(0x3deb, 0x14cc, 0x6f30, 0xd192, 0x54e6, 0x28b1, 0x1, 0x1);
        gbc.writeMem(0x28b1, { 0x87 });
        gbc.writeMem(0x3deb, { 0x86 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x14cc, gbc.sp());
        EXPECT(0x3dec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 00C0
        gbc.setState(0x98e4, 0xa9b8, 0x8570, 0x2a4e, 0x463b, 0x7a83, 0x1, 0x0);
        gbc.writeMem(0x7a83, { 0xa9 });
        gbc.writeMem(0x98e4, { 0x86 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa9b8, gbc.sp());
        EXPECT(0x98e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x98e4));
        // 86 00C1
        gbc.setState(0x2bc3, 0x4dc, 0xca50, 0xd693, 0xd67c, 0x7ad2, 0x1, 0x1);
        gbc.writeMem(0x2bc3, { 0x86 });
        gbc.writeMem(0x7ad2, { 0x7e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4dc, gbc.sp());
        EXPECT(0x2bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 00C2
        gbc.setState(0x9212, 0x3d39, 0x91b0, 0x77a4, 0x55d, 0x241d, 0x1, 0x0);
        gbc.writeMem(0x241d, { 0x9c });
        gbc.writeMem(0x9212, { 0x86 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3d39, gbc.sp());
        EXPECT(0x9213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9212));
        // 86 00C3
        gbc.setState(0x9406, 0x2101, 0xf200, 0xcbd9, 0x4307, 0x607f, 0x0, 0x1);
        gbc.writeMem(0x607f, { 0x34 });
        gbc.writeMem(0x9406, { 0x86 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2101, gbc.sp());
        EXPECT(0x9407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9406));
        // 86 00C4
        gbc.setState(0xd5bf, 0x8f96, 0x2d70, 0x8a1c, 0x3f0e, 0x9267, 0x0, 0x1);
        gbc.writeMem(0x9267, { 0x73 });
        gbc.writeMem(0xd5bf, { 0x86 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8f96, gbc.sp());
        EXPECT(0xd5c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x9267));
        EXPECT(0x86, gbc.readMem(0xd5bf));
        // 86 00C6
        gbc.setState(0x2f7d, 0xcc1a, 0x8de0, 0xf741, 0x93fb, 0x204a, 0x0, 0x1);
        gbc.writeMem(0x204a, { 0xd7 });
        gbc.writeMem(0x2f7d, { 0x86 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcc1a, gbc.sp());
        EXPECT(0x2f7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 00C7
        gbc.setState(0x5a20, 0xa44, 0xc1a0, 0x4557, 0xcb30, 0xbf26, 0x1, 0x0);
        gbc.writeMem(0x5a20, { 0x86 });
        gbc.writeMem(0xbf26, { 0xd2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa44, gbc.sp());
        EXPECT(0x5a21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xbf26));
        // 86 00C8
        gbc.setState(0x9587, 0xf011, 0x57a0, 0x9fa9, 0x8b9b, 0x7954, 0x0, 0x1);
        gbc.writeMem(0x7954, { 0x4e });
        gbc.writeMem(0x9587, { 0x86 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf011, gbc.sp());
        EXPECT(0x9588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9587));
        // 86 00C9
        gbc.setState(0x4a58, 0xf5da, 0xc070, 0xa848, 0xc2b1, 0xc4d9, 0x0, 0x0);
        gbc.writeMem(0x4a58, { 0x86 });
        gbc.writeMem(0xc4d9, { 0xc3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf5da, gbc.sp());
        EXPECT(0x4a59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc4d9));
        // 86 00CA
        gbc.setState(0x16a9, 0xeef, 0xf2a0, 0xa247, 0xb0e7, 0x736, 0x0, 0x1);
        gbc.writeMem(0x736, { 0xe3 });
        gbc.writeMem(0x16a9, { 0x86 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xeef, gbc.sp());
        EXPECT(0x16aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 00CB
        gbc.setState(0x8f81, 0xbd37, 0xf960, 0x5fea, 0x625f, 0xdf92, 0x0, 0x0);
        gbc.writeMem(0x8f81, { 0x86 });
        gbc.writeMem(0xdf92, { 0x5f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbd37, gbc.sp());
        EXPECT(0x8f82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8f81));
        EXPECT(0x5f, gbc.readMem(0xdf92));
        // 86 00CC
        gbc.setState(0x333b, 0x8ad5, 0xc200, 0x8f61, 0x78fa, 0x7eaa, 0x0, 0x1);
        gbc.writeMem(0x333b, { 0x86 });
        gbc.writeMem(0x7eaa, { 0x5e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8ad5, gbc.sp());
        EXPECT(0x333c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 00CD
        gbc.setState(0x1d7f, 0x320f, 0xb5b0, 0x27ec, 0x193f, 0x71b, 0x1, 0x0);
        gbc.writeMem(0x71b, { 0xdb });
        gbc.writeMem(0x1d7f, { 0x86 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x320f, gbc.sp());
        EXPECT(0x1d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 00CE
        gbc.setState(0xbd92, 0xc621, 0x29d0, 0x17e2, 0xb2f0, 0x665c, 0x1, 0x0);
        gbc.writeMem(0x665c, { 0x74 });
        gbc.writeMem(0xbd92, { 0x86 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc621, gbc.sp());
        EXPECT(0xbd93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xbd92));
        // 86 00CF
        gbc.setState(0x9c0a, 0x330, 0x3410, 0x7f37, 0xb4aa, 0x3c4d, 0x1, 0x0);
        gbc.writeMem(0x3c4d, { 0x93 });
        gbc.writeMem(0x9c0a, { 0x86 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x330, gbc.sp());
        EXPECT(0x9c0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9c0a));
        // 86 00D0
        gbc.setState(0x129b, 0xebea, 0xa120, 0xf478, 0x9b9a, 0x54b4, 0x1, 0x0);
        gbc.writeMem(0x129b, { 0x86 });
        gbc.writeMem(0x54b4, { 0x88 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xebea, gbc.sp());
        EXPECT(0x129c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 00D1
        gbc.setState(0x1fdc, 0xec89, 0x55e0, 0xf1c5, 0x8bad, 0x4e8d, 0x1, 0x0);
        gbc.writeMem(0x1fdc, { 0x86 });
        gbc.writeMem(0x4e8d, { 0x5b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xec89, gbc.sp());
        EXPECT(0x1fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 00D2
        gbc.setState(0x24ab, 0x2584, 0x8170, 0xf098, 0xa6bf, 0x5e3f, 0x1, 0x0);
        gbc.writeMem(0x24ab, { 0x86 });
        gbc.writeMem(0x5e3f, { 0xdb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2584, gbc.sp());
        EXPECT(0x24ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 00D3
        gbc.setState(0x534b, 0xf52, 0xf3e0, 0x7563, 0x6726, 0x8007, 0x0, 0x1);
        gbc.writeMem(0x534b, { 0x86 });
        gbc.writeMem(0x8007, { 0x88 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf52, gbc.sp());
        EXPECT(0x534c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8007));
        // 86 00D4
        gbc.setState(0x1687, 0x9718, 0xab0, 0xc1ed, 0x24ea, 0x575b, 0x1, 0x0);
        gbc.writeMem(0x1687, { 0x86 });
        gbc.writeMem(0x575b, { 0xd6 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9718, gbc.sp());
        EXPECT(0x1688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 00D5
        gbc.setState(0x6703, 0xfcc3, 0x4f70, 0xa229, 0x2268, 0xf4b7, 0x1, 0x0);
        gbc.writeMem(0x6703, { 0x86 });
        gbc.writeMem(0xf4b7, { 0xa0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xfcc3, gbc.sp());
        EXPECT(0x6704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xf4b7));
        // 86 00D6
        gbc.setState(0xade4, 0x4dd9, 0xd490, 0xce2a, 0xb02b, 0x555e, 0x0, 0x1);
        gbc.writeMem(0x555e, { 0xe });
        gbc.writeMem(0xade4, { 0x86 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4dd9, gbc.sp());
        EXPECT(0xade5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xade4));
        // 86 00D7
        gbc.setState(0x23d6, 0x9077, 0x44c0, 0x411d, 0xc985, 0xae53, 0x0, 0x0);
        gbc.writeMem(0x23d6, { 0x86 });
        gbc.writeMem(0xae53, { 0x4c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9077, gbc.sp());
        EXPECT(0x23d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xae53));
        // 86 00D8
        gbc.setState(0x694a, 0xd3a3, 0x34b0, 0x3978, 0x1d74, 0xfe9f, 0x0, 0x1);
        gbc.writeMem(0x694a, { 0x86 });
        gbc.writeMem(0xfe9f, { 0x30 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd3a3, gbc.sp());
        EXPECT(0x694b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xfe9f));
        // 86 00D9
        gbc.setState(0x2a4d, 0xefb6, 0x8160, 0xf6b3, 0x1f68, 0xb588, 0x1, 0x1);
        gbc.writeMem(0x2a4d, { 0x86 });
        gbc.writeMem(0xb588, { 0x85 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xefb6, gbc.sp());
        EXPECT(0x2a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb588));
        // 86 00DA
        gbc.setState(0xe822, 0x4653, 0x9f40, 0x3a17, 0x28d, 0x9af2, 0x1, 0x1);
        gbc.writeMem(0x9af2, { 0x7a });
        gbc.writeMem(0xe822, { 0x86 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4653, gbc.sp());
        EXPECT(0xe823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9af2));
        EXPECT(0x86, gbc.readMem(0xe822));
        // 86 00DB
        gbc.setState(0x4039, 0x9c27, 0x5790, 0xfb6a, 0x7126, 0xc3a6, 0x1, 0x1);
        gbc.writeMem(0x4039, { 0x86 });
        gbc.writeMem(0xc3a6, { 0x39 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9c27, gbc.sp());
        EXPECT(0x403a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xc3a6));
        // 86 00DC
        gbc.setState(0xd3a2, 0xa48f, 0x5580, 0x7032, 0xbb56, 0x9a5c, 0x1, 0x0);
        gbc.writeMem(0x9a5c, { 0xd4 });
        gbc.writeMem(0xd3a2, { 0x86 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa48f, gbc.sp());
        EXPECT(0xd3a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9a5c));
        EXPECT(0x86, gbc.readMem(0xd3a2));
        // 86 00DD
        gbc.setState(0xc1dd, 0x820f, 0x3930, 0x8dcf, 0xdd24, 0xc92d, 0x1, 0x1);
        gbc.writeMem(0xc1dd, { 0x86 });
        gbc.writeMem(0xc92d, { 0x90 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x820f, gbc.sp());
        EXPECT(0xc1de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc1dd));
        EXPECT(0x90, gbc.readMem(0xc92d));
        // 86 00DE
        gbc.setState(0xa174, 0xf09, 0xf470, 0xb974, 0x6380, 0x15ca, 0x1, 0x0);
        gbc.writeMem(0x15ca, { 0x26 });
        gbc.writeMem(0xa174, { 0x86 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf09, gbc.sp());
        EXPECT(0xa175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa174));
        // 86 00DF
        gbc.setState(0x379c, 0x1dc9, 0x8770, 0x1599, 0x28bb, 0x9c48, 0x1, 0x1);
        gbc.writeMem(0x379c, { 0x86 });
        gbc.writeMem(0x9c48, { 0x5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1dc9, gbc.sp());
        EXPECT(0x379d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9c48));
        // 86 00E0
        gbc.setState(0xd04c, 0x450, 0x6790, 0x190a, 0xa9d5, 0x453e, 0x1, 0x0);
        gbc.writeMem(0x453e, { 0x17 });
        gbc.writeMem(0xd04c, { 0x86 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x450, gbc.sp());
        EXPECT(0xd04d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd04c));
        // 86 00E1
        gbc.setState(0xbd7d, 0xc33, 0x5ef0, 0xc435, 0xac42, 0x90c0, 0x1, 0x1);
        gbc.writeMem(0x90c0, { 0x8 });
        gbc.writeMem(0xbd7d, { 0x86 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc33, gbc.sp());
        EXPECT(0xbd7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x90c0));
        EXPECT(0x86, gbc.readMem(0xbd7d));
        // 86 00E2
        gbc.setState(0x1476, 0x394d, 0x15f0, 0xced, 0xba79, 0x17d0, 0x0, 0x0);
        gbc.writeMem(0x1476, { 0x86 });
        gbc.writeMem(0x17d0, { 0x3d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x394d, gbc.sp());
        EXPECT(0x1477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 00E3
        gbc.setState(0xee27, 0x16c8, 0x5ab0, 0xa33d, 0x7e54, 0xb45d, 0x1, 0x1);
        gbc.writeMem(0xb45d, { 0x3b });
        gbc.writeMem(0xee27, { 0x86 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x16c8, gbc.sp());
        EXPECT(0xee28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb45d));
        EXPECT(0x86, gbc.readMem(0xee27));
        // 86 00E4
        gbc.setState(0xb29, 0x186e, 0x38c0, 0x2b35, 0x8505, 0x7f03, 0x0, 0x1);
        gbc.writeMem(0xb29, { 0x86 });
        gbc.writeMem(0x7f03, { 0x9a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x186e, gbc.sp());
        EXPECT(0xb2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 00E5
        gbc.setState(0x1c8e, 0xeb0f, 0x8f80, 0x366e, 0xa40f, 0xec82, 0x1, 0x0);
        gbc.writeMem(0x1c8e, { 0x86 });
        gbc.writeMem(0xec82, { 0x7a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xeb0f, gbc.sp());
        EXPECT(0x1c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xec82));
        // 86 00E6
        gbc.setState(0x61e5, 0xcbab, 0x6390, 0x1fe, 0x24b7, 0xa863, 0x1, 0x0);
        gbc.writeMem(0x61e5, { 0x86 });
        gbc.writeMem(0xa863, { 0x6f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xcbab, gbc.sp());
        EXPECT(0x61e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xa863));
        // 86 00E9
        gbc.setState(0x878c, 0xf46b, 0xbc50, 0xc145, 0x6b93, 0x46b0, 0x0, 0x0);
        gbc.writeMem(0x46b0, { 0xe3 });
        gbc.writeMem(0x878c, { 0x86 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf46b, gbc.sp());
        EXPECT(0x878d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x878c));
        // 86 00EA
        gbc.setState(0x897e, 0x2862, 0x9940, 0xa111, 0xbc1b, 0xd393, 0x0, 0x1);
        gbc.writeMem(0x897e, { 0x86 });
        gbc.writeMem(0xd393, { 0xcd });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2862, gbc.sp());
        EXPECT(0x897f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x897e));
        EXPECT(0xcd, gbc.readMem(0xd393));
        // 86 00EB
        gbc.setState(0x5d83, 0xb114, 0xea70, 0x48d7, 0x6396, 0x4695, 0x1, 0x0);
        gbc.writeMem(0x4695, { 0xb7 });
        gbc.writeMem(0x5d83, { 0x86 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb114, gbc.sp());
        EXPECT(0x5d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 00EC
        gbc.setState(0xd7d4, 0xa199, 0xf730, 0x5925, 0xa2d4, 0x600, 0x0, 0x1);
        gbc.writeMem(0x600, { 0xf8 });
        gbc.writeMem(0xd7d4, { 0x86 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa199, gbc.sp());
        EXPECT(0xd7d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd7d4));
        // 86 00ED
        gbc.setState(0x1459, 0x162, 0xdeb0, 0x2498, 0x9659, 0x40d3, 0x1, 0x0);
        gbc.writeMem(0x1459, { 0x86 });
        gbc.writeMem(0x40d3, { 0x7d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x162, gbc.sp());
        EXPECT(0x145a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 00EE
        gbc.setState(0x4725, 0xeddf, 0xbdf0, 0x3e41, 0x7b11, 0x49bf, 0x0, 0x1);
        gbc.writeMem(0x4725, { 0x86 });
        gbc.writeMem(0x49bf, { 0x20 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xeddf, gbc.sp());
        EXPECT(0x4726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 00EF
        gbc.setState(0x2cdd, 0x697c, 0xdd20, 0xbbce, 0x729, 0xefad, 0x0, 0x0);
        gbc.writeMem(0x2cdd, { 0x86 });
        gbc.writeMem(0xefad, { 0x5c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x697c, gbc.sp());
        EXPECT(0x2cde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xefad));
        // 86 00F0
        gbc.setState(0xdc7, 0x1ac6, 0x3640, 0x33c6, 0x6884, 0x5591, 0x1, 0x0);
        gbc.writeMem(0xdc7, { 0x86 });
        gbc.writeMem(0x5591, { 0xe });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1ac6, gbc.sp());
        EXPECT(0xdc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 00F1
        gbc.setState(0xb9c6, 0x1bde, 0x7cf0, 0xe8a2, 0xbcb3, 0x4b6, 0x1, 0x0);
        gbc.writeMem(0x4b6, { 0xc8 });
        gbc.writeMem(0xb9c6, { 0x86 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1bde, gbc.sp());
        EXPECT(0xb9c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb9c6));
        // 86 00F2
        gbc.setState(0x15f2, 0x704c, 0xe410, 0xe34e, 0x336, 0x6c92, 0x0, 0x0);
        gbc.writeMem(0x15f2, { 0x86 });
        gbc.writeMem(0x6c92, { 0xba });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x704c, gbc.sp());
        EXPECT(0x15f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 00F3
        gbc.setState(0xc96b, 0xef1d, 0xc210, 0xb47a, 0xfc78, 0x7bfb, 0x0, 0x0);
        gbc.writeMem(0x7bfb, { 0x25 });
        gbc.writeMem(0xc96b, { 0x86 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xef1d, gbc.sp());
        EXPECT(0xc96c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc96b));
        // 86 00F4
        gbc.setState(0x8a95, 0x8e48, 0x1b80, 0xa535, 0xc44, 0xb1dd, 0x1, 0x1);
        gbc.writeMem(0x8a95, { 0x86 });
        gbc.writeMem(0xb1dd, { 0x8b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8e48, gbc.sp());
        EXPECT(0x8a96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8a95));
        EXPECT(0x8b, gbc.readMem(0xb1dd));
        // 86 00F5
        gbc.setState(0x1689, 0xf57c, 0xfa10, 0x7118, 0x2eef, 0x10c9, 0x0, 0x1);
        gbc.writeMem(0x10c9, { 0xb7 });
        gbc.writeMem(0x1689, { 0x86 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf57c, gbc.sp());
        EXPECT(0x168a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 00F6
        gbc.setState(0xbbd, 0xc2c, 0xe2c0, 0x1dfc, 0xe14, 0x93, 0x1, 0x0);
        gbc.writeMem(0x93, { 0x81 });
        gbc.writeMem(0xbbd, { 0x86 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc2c, gbc.sp());
        EXPECT(0xbbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 00F7
        gbc.setState(0x8f64, 0xd0de, 0x5170, 0x489a, 0x841, 0x7cb8, 0x0, 0x0);
        gbc.writeMem(0x7cb8, { 0x66 });
        gbc.writeMem(0x8f64, { 0x86 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd0de, gbc.sp());
        EXPECT(0x8f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8f64));
        // 86 00F8
        gbc.setState(0x3b8b, 0x2237, 0x54d0, 0xd73c, 0xd0ec, 0x4ba1, 0x1, 0x1);
        gbc.writeMem(0x3b8b, { 0x86 });
        gbc.writeMem(0x4ba1, { 0x19 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2237, gbc.sp());
        EXPECT(0x3b8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 00F9
        gbc.setState(0x76f, 0xcaa9, 0x6d20, 0x79b9, 0xd151, 0xc986, 0x1, 0x0);
        gbc.writeMem(0x76f, { 0x86 });
        gbc.writeMem(0xc986, { 0x3e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcaa9, gbc.sp());
        EXPECT(0x770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc986));
        // 86 00FA
        gbc.setState(0x3aef, 0xe2bf, 0x3ad0, 0xc465, 0x7198, 0x5e83, 0x0, 0x1);
        gbc.writeMem(0x3aef, { 0x86 });
        gbc.writeMem(0x5e83, { 0xe5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe2bf, gbc.sp());
        EXPECT(0x3af0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 00FB
        gbc.setState(0xa31e, 0x6d9a, 0xbe80, 0xc3b8, 0xe3d, 0xfa92, 0x1, 0x1);
        gbc.writeMem(0xa31e, { 0x86 });
        gbc.writeMem(0xfa92, { 0x73 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6d9a, gbc.sp());
        EXPECT(0xa31f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa31e));
        EXPECT(0x73, gbc.readMem(0xfa92));
        // 86 00FC
        gbc.setState(0x192e, 0x8b3, 0x1820, 0x6b38, 0x713, 0xe877, 0x1, 0x0);
        gbc.writeMem(0x192e, { 0x86 });
        gbc.writeMem(0xe877, { 0x1f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8b3, gbc.sp());
        EXPECT(0x192f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xe877));
        // 86 00FD
        gbc.setState(0xbceb, 0x630f, 0x7380, 0x8292, 0xfa32, 0xca5b, 0x0, 0x1);
        gbc.writeMem(0xbceb, { 0x86 });
        gbc.writeMem(0xca5b, { 0xd5 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x630f, gbc.sp());
        EXPECT(0xbcec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xbceb));
        EXPECT(0xd5, gbc.readMem(0xca5b));
        // 86 00FE
        gbc.setState(0xca99, 0xc1a0, 0x7be0, 0x395d, 0x2758, 0xc450, 0x0, 0x0);
        gbc.writeMem(0xc450, { 0x1c });
        gbc.writeMem(0xca99, { 0x86 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc1a0, gbc.sp());
        EXPECT(0xca9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xc450));
        EXPECT(0x86, gbc.readMem(0xca99));
        // 86 00FF
        gbc.setState(0xd5a2, 0xe9a3, 0x2550, 0xbcaf, 0x3bd7, 0xe363, 0x1, 0x0);
        gbc.writeMem(0xd5a2, { 0x86 });
        gbc.writeMem(0xe363, { 0xc8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe9a3, gbc.sp());
        EXPECT(0xd5a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd5a2));
        EXPECT(0xc8, gbc.readMem(0xe363));
        // 86 0100
        gbc.setState(0x704, 0x9345, 0xad50, 0xcac0, 0x592f, 0x5737, 0x0, 0x0);
        gbc.writeMem(0x704, { 0x86 });
        gbc.writeMem(0x5737, { 0x42 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9345, gbc.sp());
        EXPECT(0x705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0101
        gbc.setState(0x493f, 0x8b3d, 0x8b80, 0xb936, 0x4ac2, 0x1f81, 0x1, 0x1);
        gbc.writeMem(0x1f81, { 0x49 });
        gbc.writeMem(0x493f, { 0x86 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8b3d, gbc.sp());
        EXPECT(0x4940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0102
        gbc.setState(0x6eba, 0xdb30, 0xe320, 0x8b02, 0xbc95, 0x307f, 0x0, 0x0);
        gbc.writeMem(0x307f, { 0x9d });
        gbc.writeMem(0x6eba, { 0x86 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xdb30, gbc.sp());
        EXPECT(0x6ebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0103
        gbc.setState(0x2640, 0x81f8, 0xf0b0, 0x163c, 0x2f6c, 0x8919, 0x1, 0x1);
        gbc.writeMem(0x2640, { 0x86 });
        gbc.writeMem(0x8919, { 0x8f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x81f8, gbc.sp());
        EXPECT(0x2641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8919));
        // 86 0104
        gbc.setState(0xbfe5, 0x312e, 0x810, 0xfd22, 0x1800, 0xa24f, 0x0, 0x1);
        gbc.writeMem(0xa24f, { 0x8e });
        gbc.writeMem(0xbfe5, { 0x86 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x312e, gbc.sp());
        EXPECT(0xbfe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xa24f));
        EXPECT(0x86, gbc.readMem(0xbfe5));
        // 86 0105
        gbc.setState(0x2abd, 0x8958, 0xc60, 0x1219, 0xa856, 0x8104, 0x1, 0x1);
        gbc.writeMem(0x2abd, { 0x86 });
        gbc.writeMem(0x8104, { 0x1e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8958, gbc.sp());
        EXPECT(0x2abe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x8104));
        // 86 0106
        gbc.setState(0x98c6, 0x5b65, 0xd750, 0xfa71, 0xe59e, 0xc9a0, 0x1, 0x1);
        gbc.writeMem(0x98c6, { 0x86 });
        gbc.writeMem(0xc9a0, { 0xdd });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5b65, gbc.sp());
        EXPECT(0x98c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x98c6));
        EXPECT(0xdd, gbc.readMem(0xc9a0));
        // 86 0107
        gbc.setState(0x93a9, 0x1676, 0xef60, 0xa9a8, 0xb4d0, 0x2bde, 0x0, 0x0);
        gbc.writeMem(0x2bde, { 0xbf });
        gbc.writeMem(0x93a9, { 0x86 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1676, gbc.sp());
        EXPECT(0x93aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x93a9));
        // 86 0108
        gbc.setState(0x9019, 0xda31, 0xc860, 0x40af, 0x297c, 0x1819, 0x1, 0x1);
        gbc.writeMem(0x1819, { 0xd6 });
        gbc.writeMem(0x9019, { 0x86 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xda31, gbc.sp());
        EXPECT(0x901a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9019));
        // 86 0109
        gbc.setState(0x7090, 0x322e, 0xfca0, 0x8cbe, 0x96c7, 0x251e, 0x0, 0x0);
        gbc.writeMem(0x251e, { 0xf1 });
        gbc.writeMem(0x7090, { 0x86 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x322e, gbc.sp());
        EXPECT(0x7091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 010A
        gbc.setState(0x83be, 0x6fd2, 0x3d80, 0x3966, 0x29dd, 0xd84, 0x0, 0x1);
        gbc.writeMem(0xd84, { 0xee });
        gbc.writeMem(0x83be, { 0x86 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6fd2, gbc.sp());
        EXPECT(0x83bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x83be));
        // 86 010B
        gbc.setState(0xd077, 0x8790, 0x82a0, 0xdbfb, 0x3611, 0x189e, 0x0, 0x0);
        gbc.writeMem(0x189e, { 0x36 });
        gbc.writeMem(0xd077, { 0x86 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8790, gbc.sp());
        EXPECT(0xd078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd077));
        // 86 010C
        gbc.setState(0xa59a, 0x6110, 0x4fb0, 0x900d, 0xc57c, 0x69f8, 0x0, 0x1);
        gbc.writeMem(0x69f8, { 0xb0 });
        gbc.writeMem(0xa59a, { 0x86 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6110, gbc.sp());
        EXPECT(0xa59b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa59a));
        // 86 010D
        gbc.setState(0x5502, 0x136d, 0x6860, 0xcfb3, 0x6e39, 0xe0b5, 0x1, 0x1);
        gbc.writeMem(0x5502, { 0x86 });
        gbc.writeMem(0xe0b5, { 0x7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x136d, gbc.sp());
        EXPECT(0x5503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe0b5));
        // 86 010E
        gbc.setState(0xe13b, 0xa523, 0x8900, 0x967e, 0xa6ee, 0x9a1f, 0x1, 0x1);
        gbc.writeMem(0x9a1f, { 0x6 });
        gbc.writeMem(0xe13b, { 0x86 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa523, gbc.sp());
        EXPECT(0xe13c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9a1f));
        EXPECT(0x86, gbc.readMem(0xe13b));
        // 86 010F
        gbc.setState(0xbc8a, 0x365b, 0xb790, 0x2145, 0x7a4e, 0x5778, 0x1, 0x0);
        gbc.writeMem(0x5778, { 0x6a });
        gbc.writeMem(0xbc8a, { 0x86 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x365b, gbc.sp());
        EXPECT(0xbc8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xbc8a));
        // 86 0110
        gbc.setState(0x3da8, 0xbf98, 0xf490, 0x262d, 0x9f89, 0x5faf, 0x0, 0x1);
        gbc.writeMem(0x3da8, { 0x86 });
        gbc.writeMem(0x5faf, { 0xd4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbf98, gbc.sp());
        EXPECT(0x3da9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0111
        gbc.setState(0x3791, 0xe9ab, 0xfeb0, 0xa483, 0xdb1e, 0x4718, 0x1, 0x0);
        gbc.writeMem(0x3791, { 0x86 });
        gbc.writeMem(0x4718, { 0x32 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe9ab, gbc.sp());
        EXPECT(0x3792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0112
        gbc.setState(0x6713, 0xa6cd, 0xb6e0, 0xb9dc, 0xbaa8, 0x58af, 0x1, 0x0);
        gbc.writeMem(0x58af, { 0xd1 });
        gbc.writeMem(0x6713, { 0x86 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa6cd, gbc.sp());
        EXPECT(0x6714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0114
        gbc.setState(0xcac3, 0x85f4, 0xe6d0, 0x678c, 0x3ddd, 0x4e36, 0x0, 0x0);
        gbc.writeMem(0x4e36, { 0x74 });
        gbc.writeMem(0xcac3, { 0x86 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x85f4, gbc.sp());
        EXPECT(0xcac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xcac3));
        // 86 0116
        gbc.setState(0x3b4a, 0x8d8c, 0x6410, 0xcd2, 0x2468, 0x5f47, 0x1, 0x0);
        gbc.writeMem(0x3b4a, { 0x86 });
        gbc.writeMem(0x5f47, { 0x5e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8d8c, gbc.sp());
        EXPECT(0x3b4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0117
        gbc.setState(0xa8d0, 0xb2c1, 0x9120, 0x1425, 0x2b71, 0x33f3, 0x0, 0x0);
        gbc.writeMem(0x33f3, { 0x92 });
        gbc.writeMem(0xa8d0, { 0x86 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb2c1, gbc.sp());
        EXPECT(0xa8d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa8d0));
        // 86 0118
        gbc.setState(0xa821, 0x59a9, 0xeea0, 0x772c, 0x7686, 0x8d03, 0x1, 0x1);
        gbc.writeMem(0x8d03, { 0x9b });
        gbc.writeMem(0xa821, { 0x86 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x59a9, gbc.sp());
        EXPECT(0xa822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8d03));
        EXPECT(0x86, gbc.readMem(0xa821));
        // 86 0119
        gbc.setState(0xcc07, 0x5722, 0xeea0, 0xf983, 0x9f52, 0x6f1, 0x1, 0x0);
        gbc.writeMem(0x6f1, { 0x44 });
        gbc.writeMem(0xcc07, { 0x86 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5722, gbc.sp());
        EXPECT(0xcc08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xcc07));
        // 86 011A
        gbc.setState(0xd7b0, 0xf22b, 0x78a0, 0xc022, 0x2424, 0x5bad, 0x0, 0x0);
        gbc.writeMem(0x5bad, { 0x3e });
        gbc.writeMem(0xd7b0, { 0x86 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf22b, gbc.sp());
        EXPECT(0xd7b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd7b0));
        // 86 011B
        gbc.setState(0xbcd6, 0x828, 0x7740, 0xcb05, 0xa7f6, 0x4515, 0x0, 0x0);
        gbc.writeMem(0x4515, { 0x59 });
        gbc.writeMem(0xbcd6, { 0x86 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x828, gbc.sp());
        EXPECT(0xbcd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xbcd6));
        // 86 011C
        gbc.setState(0xa20f, 0xaa76, 0xca30, 0x55bf, 0xf010, 0xb474, 0x0, 0x1);
        gbc.writeMem(0xa20f, { 0x86 });
        gbc.writeMem(0xb474, { 0xfe });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xaa76, gbc.sp());
        EXPECT(0xa210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa20f));
        EXPECT(0xfe, gbc.readMem(0xb474));
        // 86 011D
        gbc.setState(0x955, 0x3b45, 0x48b0, 0x76ea, 0x254b, 0x43a3, 0x1, 0x1);
        gbc.writeMem(0x955, { 0x86 });
        gbc.writeMem(0x43a3, { 0x69 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3b45, gbc.sp());
        EXPECT(0x956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 011E
        gbc.setState(0x5ce3, 0xde11, 0x4d80, 0xa7e6, 0x8f89, 0xff1f, 0x1, 0x1);
        gbc.writeMem(0x5ce3, { 0x86 });
        gbc.writeMem(0xff1f, { 0x8b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xde11, gbc.sp());
        EXPECT(0x5ce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xff1f));
        // 86 011F
        gbc.setState(0xd4cb, 0xdbc1, 0x7c70, 0x5860, 0x3ee1, 0x3849, 0x0, 0x1);
        gbc.writeMem(0x3849, { 0x6a });
        gbc.writeMem(0xd4cb, { 0x86 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xdbc1, gbc.sp());
        EXPECT(0xd4cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd4cb));
        // 86 0120
        gbc.setState(0x4a8d, 0xa3d6, 0x1200, 0x237, 0x3405, 0xe6d8, 0x0, 0x0);
        gbc.writeMem(0x4a8d, { 0x86 });
        gbc.writeMem(0xe6d8, { 0x86 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa3d6, gbc.sp());
        EXPECT(0x4a8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xe6d8));
        // 86 0121
        gbc.setState(0xd023, 0xc9dc, 0xc2a0, 0xa466, 0xd2e2, 0x2ae9, 0x1, 0x0);
        gbc.writeMem(0x2ae9, { 0x41 });
        gbc.writeMem(0xd023, { 0x86 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc9dc, gbc.sp());
        EXPECT(0xd024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd023));
        // 86 0122
        gbc.setState(0xa863, 0x638, 0x80f0, 0xa04a, 0xabd9, 0x20de, 0x0, 0x1);
        gbc.writeMem(0x20de, { 0x34 });
        gbc.writeMem(0xa863, { 0x86 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x638, gbc.sp());
        EXPECT(0xa864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa863));
        // 86 0125
        gbc.setState(0x50b4, 0x6bd, 0x2250, 0x2a5f, 0xfad0, 0x3616, 0x0, 0x1);
        gbc.writeMem(0x3616, { 0x62 });
        gbc.writeMem(0x50b4, { 0x86 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6bd, gbc.sp());
        EXPECT(0x50b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0126
        gbc.setState(0x427, 0x26cb, 0xd820, 0x40e0, 0x85ed, 0xe73a, 0x0, 0x0);
        gbc.writeMem(0x427, { 0x86 });
        gbc.writeMem(0xe73a, { 0x84 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x26cb, gbc.sp());
        EXPECT(0x428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xe73a));
        // 86 0127
        gbc.setState(0xee98, 0x2e78, 0xc830, 0xd611, 0x71d3, 0xba39, 0x1, 0x1);
        gbc.writeMem(0xba39, { 0x7d });
        gbc.writeMem(0xee98, { 0x86 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2e78, gbc.sp());
        EXPECT(0xee99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xba39));
        EXPECT(0x86, gbc.readMem(0xee98));
        // 86 0128
        gbc.setState(0x98f0, 0xe5a4, 0x9b60, 0x9f03, 0x848e, 0xe4bf, 0x0, 0x0);
        gbc.writeMem(0x98f0, { 0x86 });
        gbc.writeMem(0xe4bf, { 0x5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe5a4, gbc.sp());
        EXPECT(0x98f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x98f0));
        EXPECT(0x5, gbc.readMem(0xe4bf));
        // 86 0129
        gbc.setState(0xd912, 0xb6dd, 0x21a0, 0x4671, 0xabbd, 0x462f, 0x0, 0x1);
        gbc.writeMem(0x462f, { 0x90 });
        gbc.writeMem(0xd912, { 0x86 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb6dd, gbc.sp());
        EXPECT(0xd913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd912));
        // 86 012B
        gbc.setState(0xd1a5, 0x37d3, 0xe30, 0xf365, 0xccd7, 0x1dc9, 0x0, 0x1);
        gbc.writeMem(0x1dc9, { 0x9b });
        gbc.writeMem(0xd1a5, { 0x86 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x37d3, gbc.sp());
        EXPECT(0xd1a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd1a5));
        // 86 012C
        gbc.setState(0xb6c8, 0x5513, 0x10f0, 0x6aa8, 0x801f, 0x5c07, 0x1, 0x1);
        gbc.writeMem(0x5c07, { 0xc2 });
        gbc.writeMem(0xb6c8, { 0x86 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5513, gbc.sp());
        EXPECT(0xb6c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb6c8));
        // 86 012D
        gbc.setState(0xd8bf, 0x31c4, 0x4c20, 0x8482, 0x9e60, 0xa931, 0x1, 0x1);
        gbc.writeMem(0xa931, { 0xdc });
        gbc.writeMem(0xd8bf, { 0x86 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x31c4, gbc.sp());
        EXPECT(0xd8c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xa931));
        EXPECT(0x86, gbc.readMem(0xd8bf));
        // 86 012E
        gbc.setState(0xda6, 0x4467, 0x7a50, 0x3995, 0xc476, 0xccd4, 0x0, 0x1);
        gbc.writeMem(0xda6, { 0x86 });
        gbc.writeMem(0xccd4, { 0x91 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4467, gbc.sp());
        EXPECT(0xda7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xccd4));
        // 86 012F
        gbc.setState(0x783d, 0xc3c2, 0x48b0, 0x7c8d, 0xb498, 0x9d09, 0x1, 0x0);
        gbc.writeMem(0x783d, { 0x86 });
        gbc.writeMem(0x9d09, { 0x1c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc3c2, gbc.sp());
        EXPECT(0x783e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x9d09));
        // 86 0130
        gbc.setState(0xc586, 0x5d8a, 0xed60, 0x8efb, 0x425c, 0xbb50, 0x1, 0x0);
        gbc.writeMem(0xbb50, { 0x69 });
        gbc.writeMem(0xc586, { 0x86 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5d8a, gbc.sp());
        EXPECT(0xc587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xbb50));
        EXPECT(0x86, gbc.readMem(0xc586));
        // 86 0131
        gbc.setState(0xcf66, 0x7f85, 0x4540, 0x98d, 0xfa47, 0xaf25, 0x1, 0x0);
        gbc.writeMem(0xaf25, { 0x28 });
        gbc.writeMem(0xcf66, { 0x86 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7f85, gbc.sp());
        EXPECT(0xcf67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xaf25));
        EXPECT(0x86, gbc.readMem(0xcf66));
        // 86 0132
        gbc.setState(0xeedf, 0xf028, 0xa7d0, 0x2ea3, 0x4a62, 0xc20d, 0x1, 0x1);
        gbc.writeMem(0xc20d, { 0xe5 });
        gbc.writeMem(0xeedf, { 0x86 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf028, gbc.sp());
        EXPECT(0xeee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xc20d));
        EXPECT(0x86, gbc.readMem(0xeedf));
        // 86 0133
        gbc.setState(0x91b9, 0x59bc, 0x2560, 0x7239, 0x6fc, 0xc08e, 0x0, 0x1);
        gbc.writeMem(0x91b9, { 0x86 });
        gbc.writeMem(0xc08e, { 0xd2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x59bc, gbc.sp());
        EXPECT(0x91ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x91b9));
        EXPECT(0xd2, gbc.readMem(0xc08e));
        // 86 0135
        gbc.setState(0x68b4, 0x38fe, 0x6a50, 0xa1e, 0x5984, 0x23c7, 0x1, 0x0);
        gbc.writeMem(0x23c7, { 0x31 });
        gbc.writeMem(0x68b4, { 0x86 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x38fe, gbc.sp());
        EXPECT(0x68b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0136
        gbc.setState(0x6c66, 0x9d3b, 0x180, 0x35cb, 0x233c, 0x3749, 0x1, 0x1);
        gbc.writeMem(0x3749, { 0x64 });
        gbc.writeMem(0x6c66, { 0x86 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9d3b, gbc.sp());
        EXPECT(0x6c67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0137
        gbc.setState(0xa1fc, 0x8dc8, 0xc980, 0x460, 0x78ab, 0xaddd, 0x1, 0x0);
        gbc.writeMem(0xa1fc, { 0x86 });
        gbc.writeMem(0xaddd, { 0x9a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8dc8, gbc.sp());
        EXPECT(0xa1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa1fc));
        EXPECT(0x9a, gbc.readMem(0xaddd));
        // 86 0139
        gbc.setState(0x652e, 0x164, 0x2b0, 0x31ee, 0x55c8, 0x5f43, 0x1, 0x0);
        gbc.writeMem(0x5f43, { 0x9c });
        gbc.writeMem(0x652e, { 0x86 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x164, gbc.sp());
        EXPECT(0x652f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 013B
        gbc.setState(0x411a, 0xb0db, 0x2ac0, 0xa93, 0x4284, 0x82f8, 0x0, 0x1);
        gbc.writeMem(0x411a, { 0x86 });
        gbc.writeMem(0x82f8, { 0xe8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb0db, gbc.sp());
        EXPECT(0x411b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x82f8));
        // 86 013C
        gbc.setState(0x70dd, 0xe5cf, 0x95a0, 0xe734, 0xdc26, 0x7c4c, 0x1, 0x1);
        gbc.writeMem(0x70dd, { 0x86 });
        gbc.writeMem(0x7c4c, { 0x8a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe5cf, gbc.sp());
        EXPECT(0x70de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 013D
        gbc.setState(0xc27d, 0xf0b4, 0xcb00, 0x89de, 0x8205, 0xc352, 0x0, 0x0);
        gbc.writeMem(0xc27d, { 0x86 });
        gbc.writeMem(0xc352, { 0x6e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf0b4, gbc.sp());
        EXPECT(0xc27e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc27d));
        EXPECT(0x6e, gbc.readMem(0xc352));
        // 86 013E
        gbc.setState(0xcea6, 0xfd77, 0x7df0, 0x7b9, 0x8551, 0x8608, 0x1, 0x0);
        gbc.writeMem(0x8608, { 0xf1 });
        gbc.writeMem(0xcea6, { 0x86 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xfd77, gbc.sp());
        EXPECT(0xcea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8608));
        EXPECT(0x86, gbc.readMem(0xcea6));
        // 86 013F
        gbc.setState(0x5aa3, 0x5be5, 0xe3d0, 0x4e8c, 0x3ad, 0x17cb, 0x0, 0x0);
        gbc.writeMem(0x17cb, { 0x11 });
        gbc.writeMem(0x5aa3, { 0x86 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5be5, gbc.sp());
        EXPECT(0x5aa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0140
        gbc.setState(0x484a, 0x20f8, 0x1620, 0x3d1f, 0x836e, 0x6d6d, 0x1, 0x1);
        gbc.writeMem(0x484a, { 0x86 });
        gbc.writeMem(0x6d6d, { 0xb1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x20f8, gbc.sp());
        EXPECT(0x484b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0141
        gbc.setState(0x318c, 0x2ea9, 0xabe0, 0x7360, 0xfd04, 0x4438, 0x1, 0x0);
        gbc.writeMem(0x318c, { 0x86 });
        gbc.writeMem(0x4438, { 0x6a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2ea9, gbc.sp());
        EXPECT(0x318d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0142
        gbc.setState(0x9273, 0x2356, 0x3040, 0x8b52, 0x6b41, 0x891e, 0x0, 0x0);
        gbc.writeMem(0x891e, { 0xb1 });
        gbc.writeMem(0x9273, { 0x86 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2356, gbc.sp());
        EXPECT(0x9274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x891e));
        EXPECT(0x86, gbc.readMem(0x9273));
        // 86 0143
        gbc.setState(0x3d14, 0x4a43, 0x750, 0xc921, 0xbdff, 0x96a0, 0x0, 0x0);
        gbc.writeMem(0x3d14, { 0x86 });
        gbc.writeMem(0x96a0, { 0x4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4a43, gbc.sp());
        EXPECT(0x3d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x96a0));
        // 86 0144
        gbc.setState(0x15e5, 0x9a98, 0x9330, 0x4f99, 0x25b6, 0x37f4, 0x1, 0x1);
        gbc.writeMem(0x15e5, { 0x86 });
        gbc.writeMem(0x37f4, { 0x20 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9a98, gbc.sp());
        EXPECT(0x15e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0145
        gbc.setState(0xc4a, 0xce65, 0xa850, 0x5c3f, 0xfd26, 0x39ef, 0x1, 0x0);
        gbc.writeMem(0xc4a, { 0x86 });
        gbc.writeMem(0x39ef, { 0x83 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xce65, gbc.sp());
        EXPECT(0xc4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0146
        gbc.setState(0xc708, 0xa394, 0x66b0, 0xe66c, 0xb632, 0x9dc2, 0x1, 0x0);
        gbc.writeMem(0x9dc2, { 0x5 });
        gbc.writeMem(0xc708, { 0x86 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa394, gbc.sp());
        EXPECT(0xc709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9dc2));
        EXPECT(0x86, gbc.readMem(0xc708));
        // 86 0147
        gbc.setState(0x1da8, 0x5905, 0x8a80, 0x88bd, 0xc9c7, 0x6764, 0x0, 0x1);
        gbc.writeMem(0x1da8, { 0x86 });
        gbc.writeMem(0x6764, { 0xf6 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5905, gbc.sp());
        EXPECT(0x1da9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0148
        gbc.setState(0xac18, 0x4edb, 0x75c0, 0xd284, 0x4e75, 0x8e2, 0x0, 0x1);
        gbc.writeMem(0x8e2, { 0x27 });
        gbc.writeMem(0xac18, { 0x86 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4edb, gbc.sp());
        EXPECT(0xac19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xac18));
        // 86 0149
        gbc.setState(0x7829, 0x6f4b, 0x15a0, 0x249a, 0xf191, 0x8380, 0x1, 0x1);
        gbc.writeMem(0x7829, { 0x86 });
        gbc.writeMem(0x8380, { 0x78 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6f4b, gbc.sp());
        EXPECT(0x782a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8380));
        // 86 014A
        gbc.setState(0xeed0, 0xf8bb, 0x9c10, 0xee84, 0xd20c, 0x316d, 0x0, 0x1);
        gbc.writeMem(0x316d, { 0xbf });
        gbc.writeMem(0xeed0, { 0x86 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf8bb, gbc.sp());
        EXPECT(0xeed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xeed0));
        // 86 014B
        gbc.setState(0x77f7, 0x28c8, 0x9ec0, 0x6707, 0x2487, 0xdcc7, 0x0, 0x0);
        gbc.writeMem(0x77f7, { 0x86 });
        gbc.writeMem(0xdcc7, { 0xee });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x28c8, gbc.sp());
        EXPECT(0x77f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xdcc7));
        // 86 014C
        gbc.setState(0xcfed, 0xc023, 0x9c10, 0x3cd8, 0x2da8, 0xf8d5, 0x1, 0x1);
        gbc.writeMem(0xcfed, { 0x86 });
        gbc.writeMem(0xf8d5, { 0xca });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc023, gbc.sp());
        EXPECT(0xcfee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xcfed));
        EXPECT(0xca, gbc.readMem(0xf8d5));
        // 86 014E
        gbc.setState(0x9fb, 0x7b78, 0x9020, 0xed3c, 0x4133, 0xcd70, 0x0, 0x1);
        gbc.writeMem(0x9fb, { 0x86 });
        gbc.writeMem(0xcd70, { 0x5a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7b78, gbc.sp());
        EXPECT(0x9fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xcd70));
        // 86 014F
        gbc.setState(0xc088, 0xde01, 0xfb70, 0xaedc, 0xdf7b, 0x152b, 0x1, 0x0);
        gbc.writeMem(0x152b, { 0x2d });
        gbc.writeMem(0xc088, { 0x86 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xde01, gbc.sp());
        EXPECT(0xc089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc088));
        // 86 0150
        gbc.setState(0xc4ce, 0x54f6, 0xdfb0, 0x2353, 0xfd2, 0xd589, 0x0, 0x1);
        gbc.writeMem(0xc4ce, { 0x86 });
        gbc.writeMem(0xd589, { 0xe9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x54f6, gbc.sp());
        EXPECT(0xc4cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc4ce));
        EXPECT(0xe9, gbc.readMem(0xd589));
        // 86 0151
        gbc.setState(0xb2ba, 0x80f3, 0x5ec0, 0xa852, 0xb1ee, 0x11ad, 0x0, 0x1);
        gbc.writeMem(0x11ad, { 0xc7 });
        gbc.writeMem(0xb2ba, { 0x86 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x80f3, gbc.sp());
        EXPECT(0xb2bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb2ba));
        // 86 0152
        gbc.setState(0x61d6, 0xc913, 0xe10, 0x60bc, 0xc6a7, 0x4967, 0x1, 0x0);
        gbc.writeMem(0x4967, { 0xa2 });
        gbc.writeMem(0x61d6, { 0x86 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc913, gbc.sp());
        EXPECT(0x61d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0153
        gbc.setState(0x20b4, 0xde0d, 0x5c30, 0x9507, 0x7eda, 0x3cbc, 0x1, 0x0);
        gbc.writeMem(0x20b4, { 0x86 });
        gbc.writeMem(0x3cbc, { 0x60 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xde0d, gbc.sp());
        EXPECT(0x20b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0155
        gbc.setState(0x3060, 0xa1c2, 0x80f0, 0xf4fa, 0x4ad4, 0x335b, 0x0, 0x1);
        gbc.writeMem(0x3060, { 0x86 });
        gbc.writeMem(0x335b, { 0xf5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa1c2, gbc.sp());
        EXPECT(0x3061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0156
        gbc.setState(0x357d, 0x1a72, 0xeaa0, 0xd5fb, 0x6ade, 0x8245, 0x0, 0x1);
        gbc.writeMem(0x357d, { 0x86 });
        gbc.writeMem(0x8245, { 0xa2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1a72, gbc.sp());
        EXPECT(0x357e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8245));
        // 86 0157
        gbc.setState(0x55b7, 0x6236, 0x8ec0, 0x2c42, 0x6940, 0xfc0d, 0x0, 0x1);
        gbc.writeMem(0x55b7, { 0x86 });
        gbc.writeMem(0xfc0d, { 0xee });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6236, gbc.sp());
        EXPECT(0x55b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xfc0d));
        // 86 0158
        gbc.setState(0xaeba, 0x534, 0xb8b0, 0xae02, 0x8e53, 0x2c10, 0x0, 0x0);
        gbc.writeMem(0x2c10, { 0x8b });
        gbc.writeMem(0xaeba, { 0x86 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x534, gbc.sp());
        EXPECT(0xaebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xaeba));
        // 86 0159
        gbc.setState(0x9cf8, 0x25c, 0x510, 0x8920, 0x7616, 0xe8ce, 0x1, 0x1);
        gbc.writeMem(0x9cf8, { 0x86 });
        gbc.writeMem(0xe8ce, { 0xa7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x25c, gbc.sp());
        EXPECT(0x9cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9cf8));
        EXPECT(0xa7, gbc.readMem(0xe8ce));
        // 86 015A
        gbc.setState(0xd75b, 0xab91, 0x2300, 0xf6b5, 0x230f, 0x2c87, 0x1, 0x0);
        gbc.writeMem(0x2c87, { 0x57 });
        gbc.writeMem(0xd75b, { 0x86 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xab91, gbc.sp());
        EXPECT(0xd75c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd75b));
        // 86 015B
        gbc.setState(0x675, 0xf76, 0xb790, 0xcce3, 0xf288, 0x7937, 0x1, 0x0);
        gbc.writeMem(0x675, { 0x86 });
        gbc.writeMem(0x7937, { 0x65 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf76, gbc.sp());
        EXPECT(0x676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 015C
        gbc.setState(0x7f85, 0xd01d, 0xa0a0, 0x73e3, 0x5ed2, 0x67e2, 0x1, 0x1);
        gbc.writeMem(0x67e2, { 0x5f });
        gbc.writeMem(0x7f85, { 0x86 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd01d, gbc.sp());
        EXPECT(0x7f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 015D
        gbc.setState(0xdf40, 0xa7a0, 0x75b0, 0xd527, 0x5e99, 0x81d6, 0x0, 0x0);
        gbc.writeMem(0x81d6, { 0x83 });
        gbc.writeMem(0xdf40, { 0x86 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa7a0, gbc.sp());
        EXPECT(0xdf41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x81d6));
        EXPECT(0x86, gbc.readMem(0xdf40));
        // 86 015E
        gbc.setState(0x2ca2, 0x9cff, 0xbdd0, 0xc9db, 0x75cc, 0x6305, 0x0, 0x1);
        gbc.writeMem(0x2ca2, { 0x86 });
        gbc.writeMem(0x6305, { 0x41 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9cff, gbc.sp());
        EXPECT(0x2ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 015F
        gbc.setState(0x2752, 0x87b8, 0x7280, 0x8600, 0xc7f, 0x3d0b, 0x0, 0x0);
        gbc.writeMem(0x2752, { 0x86 });
        gbc.writeMem(0x3d0b, { 0xa0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x87b8, gbc.sp());
        EXPECT(0x2753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0160
        gbc.setState(0xbfc8, 0xa40e, 0xcb30, 0xa7e3, 0x150a, 0xb43a, 0x1, 0x0);
        gbc.writeMem(0xb43a, { 0xc8 });
        gbc.writeMem(0xbfc8, { 0x86 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa40e, gbc.sp());
        EXPECT(0xbfc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb43a));
        EXPECT(0x86, gbc.readMem(0xbfc8));
        // 86 0161
        gbc.setState(0xe920, 0x95b7, 0xed50, 0x3b8f, 0x8f6e, 0x35d9, 0x1, 0x1);
        gbc.writeMem(0x35d9, { 0xd0 });
        gbc.writeMem(0xe920, { 0x86 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x95b7, gbc.sp());
        EXPECT(0xe921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xe920));
        // 86 0162
        gbc.setState(0x80c8, 0x1e90, 0xb9c0, 0x9c3e, 0x5acc, 0xe4d6, 0x1, 0x1);
        gbc.writeMem(0x80c8, { 0x86 });
        gbc.writeMem(0xe4d6, { 0x40 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1e90, gbc.sp());
        EXPECT(0x80c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x80c8));
        EXPECT(0x40, gbc.readMem(0xe4d6));
        // 86 0163
        gbc.setState(0xdd76, 0x5dad, 0x2b80, 0x7e91, 0xa89b, 0xb69b, 0x1, 0x0);
        gbc.writeMem(0xb69b, { 0x3f });
        gbc.writeMem(0xdd76, { 0x86 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5dad, gbc.sp());
        EXPECT(0xdd77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb69b));
        EXPECT(0x86, gbc.readMem(0xdd76));
        // 86 0164
        gbc.setState(0xed65, 0xc52b, 0x3490, 0x7b53, 0x3074, 0x8a8, 0x1, 0x0);
        gbc.writeMem(0x8a8, { 0x46 });
        gbc.writeMem(0xed65, { 0x86 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc52b, gbc.sp());
        EXPECT(0xed66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xed65));
        // 86 0165
        gbc.setState(0x54b7, 0x750e, 0xcc60, 0x90e, 0xe5b8, 0x6497, 0x0, 0x1);
        gbc.writeMem(0x54b7, { 0x86 });
        gbc.writeMem(0x6497, { 0x33 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x750e, gbc.sp());
        EXPECT(0x54b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0166
        gbc.setState(0x4dae, 0xd2f3, 0x50c0, 0xdd02, 0x6fef, 0x9fe9, 0x0, 0x0);
        gbc.writeMem(0x4dae, { 0x86 });
        gbc.writeMem(0x9fe9, { 0xc9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd2f3, gbc.sp());
        EXPECT(0x4daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9fe9));
        // 86 0167
        gbc.setState(0x8855, 0x8f88, 0x1010, 0xdcb3, 0x235f, 0x623d, 0x0, 0x0);
        gbc.writeMem(0x623d, { 0xc3 });
        gbc.writeMem(0x8855, { 0x86 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8f88, gbc.sp());
        EXPECT(0x8856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8855));
        // 86 0168
        gbc.setState(0x75, 0x8872, 0x2e40, 0xb2d4, 0xfec, 0xd486, 0x0, 0x0);
        gbc.writeMem(0x75, { 0x86 });
        gbc.writeMem(0xd486, { 0x6f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8872, gbc.sp());
        EXPECT(0x76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xd486));
        // 86 0169
        gbc.setState(0x91f4, 0x8242, 0x1de0, 0xeff7, 0xd60f, 0x2b66, 0x1, 0x0);
        gbc.writeMem(0x2b66, { 0x1b });
        gbc.writeMem(0x91f4, { 0x86 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8242, gbc.sp());
        EXPECT(0x91f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x91f4));
        // 86 016A
        gbc.setState(0xabc, 0x1f25, 0x8c20, 0x8c28, 0x9d13, 0x15b2, 0x1, 0x0);
        gbc.writeMem(0xabc, { 0x86 });
        gbc.writeMem(0x15b2, { 0x5d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1f25, gbc.sp());
        EXPECT(0xabd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 016B
        gbc.setState(0xaca3, 0xf4bd, 0x1390, 0x7767, 0x8553, 0xd2d6, 0x0, 0x1);
        gbc.writeMem(0xaca3, { 0x86 });
        gbc.writeMem(0xd2d6, { 0xef });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf4bd, gbc.sp());
        EXPECT(0xaca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xaca3));
        EXPECT(0xef, gbc.readMem(0xd2d6));
        // 86 016C
        gbc.setState(0x461c, 0xdeba, 0x7910, 0xba8d, 0x6793, 0xc16a, 0x0, 0x0);
        gbc.writeMem(0x461c, { 0x86 });
        gbc.writeMem(0xc16a, { 0x4b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xdeba, gbc.sp());
        EXPECT(0x461d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc16a));
        // 86 016E
        gbc.setState(0x4db8, 0xa04c, 0x6d00, 0xa5d0, 0xdef3, 0x33e9, 0x0, 0x1);
        gbc.writeMem(0x33e9, { 0x73 });
        gbc.writeMem(0x4db8, { 0x86 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa04c, gbc.sp());
        EXPECT(0x4db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 016F
        gbc.setState(0xb344, 0xa9da, 0x3fe0, 0x4e97, 0x1c1e, 0xe638, 0x1, 0x1);
        gbc.writeMem(0xb344, { 0x86 });
        gbc.writeMem(0xe638, { 0x9a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa9da, gbc.sp());
        EXPECT(0xb345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb344));
        EXPECT(0x9a, gbc.readMem(0xe638));
        // 86 0170
        gbc.setState(0x103d, 0x1c55, 0x4ad0, 0x9e53, 0x5ace, 0x32a2, 0x0, 0x0);
        gbc.writeMem(0x103d, { 0x86 });
        gbc.writeMem(0x32a2, { 0xa1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1c55, gbc.sp());
        EXPECT(0x103e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0171
        gbc.setState(0x93e8, 0x933c, 0x1120, 0x604e, 0xf8c8, 0x851b, 0x0, 0x1);
        gbc.writeMem(0x851b, { 0x56 });
        gbc.writeMem(0x93e8, { 0x86 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x933c, gbc.sp());
        EXPECT(0x93e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x851b));
        EXPECT(0x86, gbc.readMem(0x93e8));
        // 86 0172
        gbc.setState(0x6e33, 0x6b43, 0x8370, 0x382f, 0x6205, 0xc31b, 0x1, 0x0);
        gbc.writeMem(0x6e33, { 0x86 });
        gbc.writeMem(0xc31b, { 0x5b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6b43, gbc.sp());
        EXPECT(0x6e34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc31b));
        // 86 0173
        gbc.setState(0xa11d, 0xf215, 0xfa00, 0x2f0d, 0x9974, 0x82df, 0x0, 0x1);
        gbc.writeMem(0x82df, { 0x43 });
        gbc.writeMem(0xa11d, { 0x86 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf215, gbc.sp());
        EXPECT(0xa11e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x82df));
        EXPECT(0x86, gbc.readMem(0xa11d));
        // 86 0174
        gbc.setState(0xa6c, 0xfcea, 0x4220, 0x56a9, 0xb1f4, 0x9b90, 0x0, 0x0);
        gbc.writeMem(0xa6c, { 0x86 });
        gbc.writeMem(0x9b90, { 0xb8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xfcea, gbc.sp());
        EXPECT(0xa6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x9b90));
        // 86 0175
        gbc.setState(0x1e52, 0xf309, 0xfe0, 0xf79e, 0x6dad, 0x66a6, 0x0, 0x1);
        gbc.writeMem(0x1e52, { 0x86 });
        gbc.writeMem(0x66a6, { 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf309, gbc.sp());
        EXPECT(0x1e53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0176
        gbc.setState(0x6e92, 0xc70c, 0x730, 0xcbc4, 0x4e09, 0xcae0, 0x0, 0x1);
        gbc.writeMem(0x6e92, { 0x86 });
        gbc.writeMem(0xcae0, { 0x4c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc70c, gbc.sp());
        EXPECT(0x6e93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcae0));
        // 86 0177
        gbc.setState(0xee5b, 0x4940, 0xe370, 0x8735, 0xe4, 0x11c6, 0x1, 0x0);
        gbc.writeMem(0x11c6, { 0x1f });
        gbc.writeMem(0xee5b, { 0x86 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4940, gbc.sp());
        EXPECT(0xee5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xee5b));
        // 86 0178
        gbc.setState(0x59cc, 0x8ce9, 0xbf20, 0x330f, 0x4623, 0x2055, 0x1, 0x1);
        gbc.writeMem(0x2055, { 0xac });
        gbc.writeMem(0x59cc, { 0x86 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8ce9, gbc.sp());
        EXPECT(0x59cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0179
        gbc.setState(0x6557, 0xcfcd, 0xfd70, 0xffcb, 0x6e11, 0xf7e6, 0x0, 0x0);
        gbc.writeMem(0x6557, { 0x86 });
        gbc.writeMem(0xf7e6, { 0xc5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xcfcd, gbc.sp());
        EXPECT(0x6558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xf7e6));
        // 86 017A
        gbc.setState(0x49e6, 0xe4b, 0x33f0, 0x8b04, 0x8113, 0x179, 0x1, 0x0);
        gbc.writeMem(0x179, { 0x91 });
        gbc.writeMem(0x49e6, { 0x86 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe4b, gbc.sp());
        EXPECT(0x49e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 017B
        gbc.setState(0xb7f3, 0x7e23, 0x72c0, 0xba3d, 0xc881, 0x5d12, 0x0, 0x1);
        gbc.writeMem(0x5d12, { 0x46 });
        gbc.writeMem(0xb7f3, { 0x86 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7e23, gbc.sp());
        EXPECT(0xb7f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb7f3));
        // 86 017C
        gbc.setState(0xd55b, 0x2165, 0x7c50, 0x7061, 0xce34, 0x7f0b, 0x0, 0x1);
        gbc.writeMem(0x7f0b, { 0xe9 });
        gbc.writeMem(0xd55b, { 0x86 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2165, gbc.sp());
        EXPECT(0xd55c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd55b));
        // 86 017E
        gbc.setState(0x6edb, 0xe192, 0xd470, 0xaf32, 0x6a7d, 0x7ecc, 0x1, 0x1);
        gbc.writeMem(0x6edb, { 0x86 });
        gbc.writeMem(0x7ecc, { 0x6 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe192, gbc.sp());
        EXPECT(0x6edc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0180
        gbc.setState(0x757f, 0x3d69, 0x8b50, 0xcf4d, 0xa774, 0x2995, 0x0, 0x0);
        gbc.writeMem(0x2995, { 0x95 });
        gbc.writeMem(0x757f, { 0x86 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3d69, gbc.sp());
        EXPECT(0x7580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0181
        gbc.setState(0xaf6b, 0x66d2, 0x9400, 0x7238, 0x5ce6, 0xc7e0, 0x1, 0x1);
        gbc.writeMem(0xaf6b, { 0x86 });
        gbc.writeMem(0xc7e0, { 0xcc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x66d2, gbc.sp());
        EXPECT(0xaf6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xaf6b));
        EXPECT(0xcc, gbc.readMem(0xc7e0));
        // 86 0182
        gbc.setState(0x6bcf, 0xdd4e, 0x9880, 0x70ec, 0x360, 0xb9f8, 0x0, 0x1);
        gbc.writeMem(0x6bcf, { 0x86 });
        gbc.writeMem(0xb9f8, { 0x5e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdd4e, gbc.sp());
        EXPECT(0x6bd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb9f8));
        // 86 0183
        gbc.setState(0x94da, 0x7902, 0x52c0, 0x5ba2, 0x5599, 0x10f7, 0x1, 0x0);
        gbc.writeMem(0x10f7, { 0x42 });
        gbc.writeMem(0x94da, { 0x86 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7902, gbc.sp());
        EXPECT(0x94db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x94da));
        // 86 0184
        gbc.setState(0x501a, 0xac17, 0xcf00, 0xade3, 0x2630, 0xdff6, 0x1, 0x0);
        gbc.writeMem(0x501a, { 0x86 });
        gbc.writeMem(0xdff6, { 0x7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xac17, gbc.sp());
        EXPECT(0x501b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xdff6));
        // 86 0185
        gbc.setState(0x5733, 0xab90, 0xa450, 0x3842, 0x212e, 0xcee9, 0x1, 0x1);
        gbc.writeMem(0x5733, { 0x86 });
        gbc.writeMem(0xcee9, { 0xd6 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xab90, gbc.sp());
        EXPECT(0x5734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xcee9));
        // 86 0186
        gbc.setState(0xade6, 0x1dc6, 0xe30, 0xb46, 0xc73a, 0xcdc1, 0x1, 0x0);
        gbc.writeMem(0xade6, { 0x86 });
        gbc.writeMem(0xcdc1, { 0x89 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1dc6, gbc.sp());
        EXPECT(0xade7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xade6));
        EXPECT(0x89, gbc.readMem(0xcdc1));
        // 86 0187
        gbc.setState(0x5826, 0xbf29, 0xe940, 0xf49c, 0x5842, 0xd8e2, 0x0, 0x1);
        gbc.writeMem(0x5826, { 0x86 });
        gbc.writeMem(0xd8e2, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xbf29, gbc.sp());
        EXPECT(0x5827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd8e2));
        // 86 0188
        gbc.setState(0xdbc0, 0x6ea4, 0x7e80, 0x48aa, 0x114b, 0xc7b4, 0x1, 0x1);
        gbc.writeMem(0xc7b4, { 0x57 });
        gbc.writeMem(0xdbc0, { 0x86 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6ea4, gbc.sp());
        EXPECT(0xdbc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc7b4));
        EXPECT(0x86, gbc.readMem(0xdbc0));
        // 86 0189
        gbc.setState(0x9973, 0x9a96, 0x34b0, 0x8acb, 0x6e37, 0x8575, 0x0, 0x0);
        gbc.writeMem(0x8575, { 0x4d });
        gbc.writeMem(0x9973, { 0x86 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9a96, gbc.sp());
        EXPECT(0x9974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8575));
        EXPECT(0x86, gbc.readMem(0x9973));
        // 86 018A
        gbc.setState(0xa912, 0x2cc0, 0x1450, 0xbe55, 0x4b2f, 0x6493, 0x1, 0x1);
        gbc.writeMem(0x6493, { 0x18 });
        gbc.writeMem(0xa912, { 0x86 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2cc0, gbc.sp());
        EXPECT(0xa913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa912));
        // 86 018B
        gbc.setState(0x5203, 0x9036, 0x5200, 0xf177, 0x1622, 0x947a, 0x0, 0x0);
        gbc.writeMem(0x5203, { 0x86 });
        gbc.writeMem(0x947a, { 0x75 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9036, gbc.sp());
        EXPECT(0x5204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x947a));
        // 86 018C
        gbc.setState(0x497c, 0x72ec, 0x8510, 0xee48, 0xa54e, 0x1c66, 0x1, 0x1);
        gbc.writeMem(0x1c66, { 0xde });
        gbc.writeMem(0x497c, { 0x86 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x72ec, gbc.sp());
        EXPECT(0x497d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 018D
        gbc.setState(0x8f73, 0xc4e2, 0x9e30, 0xa415, 0x9f7c, 0x168f, 0x1, 0x0);
        gbc.writeMem(0x168f, { 0xf1 });
        gbc.writeMem(0x8f73, { 0x86 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc4e2, gbc.sp());
        EXPECT(0x8f74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8f73));
        // 86 018F
        gbc.setState(0xcf5d, 0x41af, 0x5290, 0x4c22, 0xcdf9, 0x3366, 0x1, 0x1);
        gbc.writeMem(0x3366, { 0x46 });
        gbc.writeMem(0xcf5d, { 0x86 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x41af, gbc.sp());
        EXPECT(0xcf5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xcf5d));
        // 86 0190
        gbc.setState(0x7284, 0xfce, 0x6e80, 0x4fb7, 0xe296, 0xfcc3, 0x0, 0x1);
        gbc.writeMem(0x7284, { 0x86 });
        gbc.writeMem(0xfcc3, { 0xfd });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xfce, gbc.sp());
        EXPECT(0x7285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xfcc3));
        // 86 0191
        gbc.setState(0x571e, 0x6ebe, 0x3d70, 0xaa4c, 0x7ec, 0xa095, 0x1, 0x0);
        gbc.writeMem(0x571e, { 0x86 });
        gbc.writeMem(0xa095, { 0x72 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6ebe, gbc.sp());
        EXPECT(0x571f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa095));
        // 86 0192
        gbc.setState(0x5a51, 0x960c, 0xe320, 0xdc4e, 0x88a, 0xe23a, 0x0, 0x0);
        gbc.writeMem(0x5a51, { 0x86 });
        gbc.writeMem(0xe23a, { 0xbd });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x960c, gbc.sp());
        EXPECT(0x5a52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xe23a));
        // 86 0193
        gbc.setState(0xc102, 0x346e, 0xd590, 0x7fd5, 0x1d28, 0x507f, 0x0, 0x1);
        gbc.writeMem(0x507f, { 0x20 });
        gbc.writeMem(0xc102, { 0x86 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x346e, gbc.sp());
        EXPECT(0xc103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc102));
        // 86 0194
        gbc.setState(0x84e1, 0x4dd2, 0xbfd0, 0x5639, 0xa0bd, 0x25e9, 0x0, 0x0);
        gbc.writeMem(0x25e9, { 0xc2 });
        gbc.writeMem(0x84e1, { 0x86 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4dd2, gbc.sp());
        EXPECT(0x84e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x84e1));
        // 86 0195
        gbc.setState(0x6218, 0x6c5a, 0x9630, 0xa93c, 0xa4c1, 0x51e2, 0x1, 0x1);
        gbc.writeMem(0x51e2, { 0xb8 });
        gbc.writeMem(0x6218, { 0x86 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6c5a, gbc.sp());
        EXPECT(0x6219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0196
        gbc.setState(0x6a2a, 0x82b8, 0xfb0, 0xdaa4, 0x283a, 0x7f1a, 0x0, 0x0);
        gbc.writeMem(0x6a2a, { 0x86 });
        gbc.writeMem(0x7f1a, { 0x3b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x82b8, gbc.sp());
        EXPECT(0x6a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0197
        gbc.setState(0xd6f0, 0xf3db, 0xc080, 0xc352, 0xcd9a, 0xc4ca, 0x0, 0x1);
        gbc.writeMem(0xc4ca, { 0xc4 });
        gbc.writeMem(0xd6f0, { 0x86 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf3db, gbc.sp());
        EXPECT(0xd6f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xc4ca));
        EXPECT(0x86, gbc.readMem(0xd6f0));
        // 86 0198
        gbc.setState(0x7307, 0x261d, 0x17b0, 0x676d, 0x86b4, 0xd309, 0x1, 0x0);
        gbc.writeMem(0x7307, { 0x86 });
        gbc.writeMem(0xd309, { 0x2f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x261d, gbc.sp());
        EXPECT(0x7308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd309));
        // 86 0199
        gbc.setState(0x16bd, 0xd075, 0x6020, 0x4f47, 0x300, 0x35a2, 0x0, 0x1);
        gbc.writeMem(0x16bd, { 0x86 });
        gbc.writeMem(0x35a2, { 0xb4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd075, gbc.sp());
        EXPECT(0x16be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 019A
        gbc.setState(0xc885, 0x2a89, 0xcb40, 0x18fa, 0x2876, 0x141f, 0x1, 0x0);
        gbc.writeMem(0x141f, { 0xd5 });
        gbc.writeMem(0xc885, { 0x86 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2a89, gbc.sp());
        EXPECT(0xc886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc885));
        // 86 019B
        gbc.setState(0xeea0, 0x5248, 0x12f0, 0x712a, 0x335e, 0x5405, 0x0, 0x0);
        gbc.writeMem(0x5405, { 0xa8 });
        gbc.writeMem(0xeea0, { 0x86 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5248, gbc.sp());
        EXPECT(0xeea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xeea0));
        // 86 019C
        gbc.setState(0x9847, 0xbf7f, 0xb310, 0xb54, 0xf068, 0xd29b, 0x0, 0x1);
        gbc.writeMem(0x9847, { 0x86 });
        gbc.writeMem(0xd29b, { 0xaf });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbf7f, gbc.sp());
        EXPECT(0x9848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9847));
        EXPECT(0xaf, gbc.readMem(0xd29b));
        // 86 019D
        gbc.setState(0x592e, 0xa1f0, 0xc180, 0x60d0, 0xcc5c, 0xe6e0, 0x1, 0x0);
        gbc.writeMem(0x592e, { 0x86 });
        gbc.writeMem(0xe6e0, { 0xd });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa1f0, gbc.sp());
        EXPECT(0x592f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xe6e0));
        // 86 019E
        gbc.setState(0xc39c, 0x8f32, 0xaae0, 0x9bf, 0xa68c, 0x5a1b, 0x0, 0x0);
        gbc.writeMem(0x5a1b, { 0x71 });
        gbc.writeMem(0xc39c, { 0x86 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8f32, gbc.sp());
        EXPECT(0xc39d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc39c));
        // 86 01A0
        gbc.setState(0x3ccf, 0x5174, 0x7420, 0x55f1, 0x1d33, 0xfa2b, 0x1, 0x0);
        gbc.writeMem(0x3ccf, { 0x86 });
        gbc.writeMem(0xfa2b, { 0x3d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5174, gbc.sp());
        EXPECT(0x3cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xfa2b));
        // 86 01A1
        gbc.setState(0x2d11, 0xe127, 0xa340, 0xb711, 0x6f30, 0xc94, 0x0, 0x1);
        gbc.writeMem(0xc94, { 0xfc });
        gbc.writeMem(0x2d11, { 0x86 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe127, gbc.sp());
        EXPECT(0x2d12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 01A2
        gbc.setState(0xbcc7, 0xeac, 0xc8f0, 0x668d, 0x77f9, 0xf142, 0x1, 0x1);
        gbc.writeMem(0xbcc7, { 0x86 });
        gbc.writeMem(0xf142, { 0x5c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xeac, gbc.sp());
        EXPECT(0xbcc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xbcc7));
        EXPECT(0x5c, gbc.readMem(0xf142));
        // 86 01A3
        gbc.setState(0x2efc, 0xbef5, 0x3b20, 0xe508, 0xedde, 0xa2a, 0x0, 0x0);
        gbc.writeMem(0xa2a, { 0x77 });
        gbc.writeMem(0x2efc, { 0x86 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xbef5, gbc.sp());
        EXPECT(0x2efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 01A5
        gbc.setState(0xdbb9, 0xd5f0, 0xb960, 0xcd8f, 0xdfdf, 0xb591, 0x1, 0x1);
        gbc.writeMem(0xb591, { 0x16 });
        gbc.writeMem(0xdbb9, { 0x86 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd5f0, gbc.sp());
        EXPECT(0xdbba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb591));
        EXPECT(0x86, gbc.readMem(0xdbb9));
        // 86 01A6
        gbc.setState(0x5a49, 0x1a54, 0xcc00, 0x2d92, 0xdc80, 0xfae, 0x1, 0x0);
        gbc.writeMem(0xfae, { 0x48 });
        gbc.writeMem(0x5a49, { 0x86 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1a54, gbc.sp());
        EXPECT(0x5a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 01A7
        gbc.setState(0xa672, 0x3947, 0x7380, 0x67d2, 0xf28d, 0xe5ab, 0x0, 0x0);
        gbc.writeMem(0xa672, { 0x86 });
        gbc.writeMem(0xe5ab, { 0x62 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3947, gbc.sp());
        EXPECT(0xa673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa672));
        EXPECT(0x62, gbc.readMem(0xe5ab));
        // 86 01A8
        gbc.setState(0xb2e, 0x4641, 0x5400, 0x164a, 0xc53b, 0x15ff, 0x1, 0x0);
        gbc.writeMem(0xb2e, { 0x86 });
        gbc.writeMem(0x15ff, { 0xfe });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4641, gbc.sp());
        EXPECT(0xb2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 01A9
        gbc.setState(0x9058, 0x1504, 0x220, 0xcf5c, 0x9f44, 0x46c, 0x1, 0x0);
        gbc.writeMem(0x46c, { 0xa2 });
        gbc.writeMem(0x9058, { 0x86 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1504, gbc.sp());
        EXPECT(0x9059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9058));
        // 86 01AA
        gbc.setState(0x94af, 0x16b6, 0xbdb0, 0x1fb2, 0x39a, 0x7ac0, 0x0, 0x1);
        gbc.writeMem(0x7ac0, { 0x63 });
        gbc.writeMem(0x94af, { 0x86 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x16b6, gbc.sp());
        EXPECT(0x94b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x94af));
        // 86 01AB
        gbc.setState(0xb694, 0xc661, 0x2330, 0x2f2b, 0xfc73, 0x1ba0, 0x1, 0x1);
        gbc.writeMem(0x1ba0, { 0x38 });
        gbc.writeMem(0xb694, { 0x86 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc661, gbc.sp());
        EXPECT(0xb695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb694));
        // 86 01AC
        gbc.setState(0xd746, 0x6ccc, 0xc40, 0x39cd, 0xc242, 0x92a6, 0x0, 0x1);
        gbc.writeMem(0x92a6, { 0xbe });
        gbc.writeMem(0xd746, { 0x86 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6ccc, gbc.sp());
        EXPECT(0xd747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x92a6));
        EXPECT(0x86, gbc.readMem(0xd746));
        // 86 01AD
        gbc.setState(0x41de, 0xc719, 0x79c0, 0x8db9, 0x91e9, 0xd0d8, 0x1, 0x1);
        gbc.writeMem(0x41de, { 0x86 });
        gbc.writeMem(0xd0d8, { 0xd3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc719, gbc.sp());
        EXPECT(0x41df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xd0d8));
        // 86 01AE
        gbc.setState(0x1869, 0xb0e4, 0x3bb0, 0x164b, 0x8b4e, 0x6e0d, 0x0, 0x1);
        gbc.writeMem(0x1869, { 0x86 });
        gbc.writeMem(0x6e0d, { 0xa1 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb0e4, gbc.sp());
        EXPECT(0x186a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 01AF
        gbc.setState(0x5b5f, 0x9560, 0x7320, 0xebb2, 0x5752, 0x775d, 0x1, 0x0);
        gbc.writeMem(0x5b5f, { 0x86 });
        gbc.writeMem(0x775d, { 0x2d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9560, gbc.sp());
        EXPECT(0x5b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 01B0
        gbc.setState(0x45b8, 0xf0f3, 0xc0b0, 0xe327, 0xdd2a, 0xd23d, 0x0, 0x1);
        gbc.writeMem(0x45b8, { 0x86 });
        gbc.writeMem(0xd23d, { 0x4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf0f3, gbc.sp());
        EXPECT(0x45b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd23d));
        // 86 01B1
        gbc.setState(0x2576, 0x906e, 0xf300, 0xed70, 0x683, 0x11bd, 0x0, 0x0);
        gbc.writeMem(0x11bd, { 0x58 });
        gbc.writeMem(0x2576, { 0x86 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x906e, gbc.sp());
        EXPECT(0x2577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 01B2
        gbc.setState(0x959b, 0x190, 0x5890, 0xa8eb, 0xe484, 0xd4e9, 0x1, 0x1);
        gbc.writeMem(0x959b, { 0x86 });
        gbc.writeMem(0xd4e9, { 0x8c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x190, gbc.sp());
        EXPECT(0x959c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x959b));
        EXPECT(0x8c, gbc.readMem(0xd4e9));
        // 86 01B3
        gbc.setState(0x391e, 0x47ae, 0x18d0, 0xecd6, 0x384c, 0xc2f5, 0x0, 0x1);
        gbc.writeMem(0x391e, { 0x86 });
        gbc.writeMem(0xc2f5, { 0xf });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x47ae, gbc.sp());
        EXPECT(0x391f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xc2f5));
        // 86 01B4
        gbc.setState(0xc1e2, 0xe60b, 0x6be0, 0xf81d, 0x581a, 0x7821, 0x1, 0x1);
        gbc.writeMem(0x7821, { 0x31 });
        gbc.writeMem(0xc1e2, { 0x86 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe60b, gbc.sp());
        EXPECT(0xc1e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc1e2));
        // 86 01B5
        gbc.setState(0x44df, 0x855e, 0xfb20, 0x2ad3, 0xa912, 0x3dc, 0x1, 0x1);
        gbc.writeMem(0x3dc, { 0x8c });
        gbc.writeMem(0x44df, { 0x86 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x855e, gbc.sp());
        EXPECT(0x44e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 01B6
        gbc.setState(0xe856, 0xc1b0, 0xfa80, 0x92d3, 0x77ce, 0x4943, 0x1, 0x0);
        gbc.writeMem(0x4943, { 0xe9 });
        gbc.writeMem(0xe856, { 0x86 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc1b0, gbc.sp());
        EXPECT(0xe857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xe856));
        // 86 01B7
        gbc.setState(0x99eb, 0xac31, 0xb7e0, 0x726, 0x7fa4, 0x9734, 0x0, 0x1);
        gbc.writeMem(0x9734, { 0x99 });
        gbc.writeMem(0x99eb, { 0x86 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xac31, gbc.sp());
        EXPECT(0x99ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9734));
        EXPECT(0x86, gbc.readMem(0x99eb));
        // 86 01B8
        gbc.setState(0x3448, 0xa9a, 0xbbb0, 0x3fcc, 0xbca, 0x540c, 0x0, 0x1);
        gbc.writeMem(0x3448, { 0x86 });
        gbc.writeMem(0x540c, { 0x11 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa9a, gbc.sp());
        EXPECT(0x3449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 01B9
        gbc.setState(0xe3ad, 0x1e83, 0xad30, 0xc301, 0x2204, 0x9031, 0x1, 0x1);
        gbc.writeMem(0x9031, { 0xf4 });
        gbc.writeMem(0xe3ad, { 0x86 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1e83, gbc.sp());
        EXPECT(0xe3ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x9031));
        EXPECT(0x86, gbc.readMem(0xe3ad));
        // 86 01BA
        gbc.setState(0x79d8, 0xa77c, 0x83c0, 0xbd36, 0xbca1, 0x87ee, 0x0, 0x1);
        gbc.writeMem(0x79d8, { 0x86 });
        gbc.writeMem(0x87ee, { 0xdb });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa77c, gbc.sp());
        EXPECT(0x79d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x87ee));
        // 86 01BB
        gbc.setState(0xa6b9, 0x6c8a, 0x3770, 0x40d8, 0x45cc, 0x8078, 0x1, 0x1);
        gbc.writeMem(0x8078, { 0xac });
        gbc.writeMem(0xa6b9, { 0x86 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6c8a, gbc.sp());
        EXPECT(0xa6ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8078));
        EXPECT(0x86, gbc.readMem(0xa6b9));
        // 86 01BC
        gbc.setState(0x4416, 0xed0e, 0x12b0, 0x6a7, 0x51cf, 0xfb57, 0x1, 0x1);
        gbc.writeMem(0x4416, { 0x86 });
        gbc.writeMem(0xfb57, { 0x1c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xed0e, gbc.sp());
        EXPECT(0x4417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xfb57));
        // 86 01BD
        gbc.setState(0x7eee, 0x5163, 0x5e90, 0xb036, 0x43ef, 0x35e9, 0x0, 0x1);
        gbc.writeMem(0x35e9, { 0x84 });
        gbc.writeMem(0x7eee, { 0x86 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5163, gbc.sp());
        EXPECT(0x7eef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 01BE
        gbc.setState(0x99e2, 0xda30, 0xcb30, 0x4896, 0x316, 0x7889, 0x1, 0x1);
        gbc.writeMem(0x7889, { 0xb6 });
        gbc.writeMem(0x99e2, { 0x86 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xda30, gbc.sp());
        EXPECT(0x99e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x99e2));
        // 86 01BF
        gbc.setState(0xa479, 0x300, 0xda70, 0xc75c, 0x958b, 0x2ca5, 0x0, 0x1);
        gbc.writeMem(0x2ca5, { 0xe3 });
        gbc.writeMem(0xa479, { 0x86 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x300, gbc.sp());
        EXPECT(0xa47a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa479));
        // 86 01C0
        gbc.setState(0xb689, 0xfc79, 0xca90, 0xf178, 0xf6c8, 0x993d, 0x0, 0x1);
        gbc.writeMem(0x993d, { 0x5d });
        gbc.writeMem(0xb689, { 0x86 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfc79, gbc.sp());
        EXPECT(0xb68a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x993d));
        EXPECT(0x86, gbc.readMem(0xb689));
        // 86 01C1
        gbc.setState(0x552c, 0x554c, 0x5690, 0x49ff, 0x1587, 0xf727, 0x0, 0x0);
        gbc.writeMem(0x552c, { 0x86 });
        gbc.writeMem(0xf727, { 0x51 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x554c, gbc.sp());
        EXPECT(0x552d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xf727));
        // 86 01C2
        gbc.setState(0xc1da, 0x522b, 0x9830, 0x334a, 0x7a3e, 0x71a1, 0x1, 0x1);
        gbc.writeMem(0x71a1, { 0x17 });
        gbc.writeMem(0xc1da, { 0x86 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x522b, gbc.sp());
        EXPECT(0xc1db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc1da));
        // 86 01C3
        gbc.setState(0x3059, 0xd5b0, 0xc7d0, 0xf2ad, 0x92db, 0x2edb, 0x0, 0x1);
        gbc.writeMem(0x2edb, { 0xc2 });
        gbc.writeMem(0x3059, { 0x86 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd5b0, gbc.sp());
        EXPECT(0x305a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 01C4
        gbc.setState(0x5f2, 0xdd8a, 0x7100, 0x6744, 0xf257, 0xd6c4, 0x1, 0x1);
        gbc.writeMem(0x5f2, { 0x86 });
        gbc.writeMem(0xd6c4, { 0x62 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdd8a, gbc.sp());
        EXPECT(0x5f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xd6c4));
        // 86 01C5
        gbc.setState(0x5778, 0x1046, 0xef0, 0x7e4e, 0xd6fe, 0xeb19, 0x0, 0x0);
        gbc.writeMem(0x5778, { 0x86 });
        gbc.writeMem(0xeb19, { 0xb4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1046, gbc.sp());
        EXPECT(0x5779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xeb19));
        // 86 01C6
        gbc.setState(0xb526, 0xe948, 0x5b60, 0xe543, 0x6409, 0xac9a, 0x1, 0x0);
        gbc.writeMem(0xac9a, { 0x95 });
        gbc.writeMem(0xb526, { 0x86 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe948, gbc.sp());
        EXPECT(0xb527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xac9a));
        EXPECT(0x86, gbc.readMem(0xb526));
        // 86 01C7
        gbc.setState(0x8052, 0xb72f, 0x7e40, 0x2c46, 0x6df2, 0xa0df, 0x0, 0x0);
        gbc.writeMem(0x8052, { 0x86 });
        gbc.writeMem(0xa0df, { 0x36 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb72f, gbc.sp());
        EXPECT(0x8053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8052));
        EXPECT(0x36, gbc.readMem(0xa0df));
        // 86 01C8
        gbc.setState(0x1434, 0x768c, 0x8ef0, 0xe613, 0xa547, 0xee38, 0x1, 0x1);
        gbc.writeMem(0x1434, { 0x86 });
        gbc.writeMem(0xee38, { 0xc4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x768c, gbc.sp());
        EXPECT(0x1435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xee38));
        // 86 01CA
        gbc.setState(0x2214, 0x311f, 0xbb60, 0x7750, 0x6c43, 0xf121, 0x1, 0x0);
        gbc.writeMem(0x2214, { 0x86 });
        gbc.writeMem(0xf121, { 0x97 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x311f, gbc.sp());
        EXPECT(0x2215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xf121));
        // 86 01CB
        gbc.setState(0x4ec2, 0xa75e, 0x1a70, 0xcfe6, 0x74f6, 0x9f84, 0x1, 0x0);
        gbc.writeMem(0x4ec2, { 0x86 });
        gbc.writeMem(0x9f84, { 0x57 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa75e, gbc.sp());
        EXPECT(0x4ec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9f84));
        // 86 01CC
        gbc.setState(0xe0a8, 0x8e60, 0xc140, 0x69d7, 0xd174, 0x9983, 0x1, 0x1);
        gbc.writeMem(0x9983, { 0xf5 });
        gbc.writeMem(0xe0a8, { 0x86 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8e60, gbc.sp());
        EXPECT(0xe0a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x9983));
        EXPECT(0x86, gbc.readMem(0xe0a8));
        // 86 01CD
        gbc.setState(0x4bc1, 0xa0f1, 0x9530, 0x3bd7, 0xc917, 0x3e8d, 0x0, 0x0);
        gbc.writeMem(0x3e8d, { 0x21 });
        gbc.writeMem(0x4bc1, { 0x86 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa0f1, gbc.sp());
        EXPECT(0x4bc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 01CF
        gbc.setState(0x993, 0xcd1, 0x1800, 0xd9c1, 0xe9d5, 0xf9f5, 0x0, 0x1);
        gbc.writeMem(0x993, { 0x86 });
        gbc.writeMem(0xf9f5, { 0x84 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcd1, gbc.sp());
        EXPECT(0x994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xf9f5));
        // 86 01D0
        gbc.setState(0x56ad, 0x56ab, 0x4cf0, 0x9c6, 0x7659, 0xe96a, 0x1, 0x0);
        gbc.writeMem(0x56ad, { 0x86 });
        gbc.writeMem(0xe96a, { 0x9a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x56ab, gbc.sp());
        EXPECT(0x56ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe96a));
        // 86 01D1
        gbc.setState(0xa344, 0x8d3c, 0x6d40, 0x390f, 0x28d1, 0x28d3, 0x1, 0x1);
        gbc.writeMem(0x28d3, { 0x2d });
        gbc.writeMem(0xa344, { 0x86 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8d3c, gbc.sp());
        EXPECT(0xa345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa344));
        // 86 01D3
        gbc.setState(0x8682, 0x946d, 0x78e0, 0x3053, 0xc94a, 0x747d, 0x0, 0x0);
        gbc.writeMem(0x747d, { 0x93 });
        gbc.writeMem(0x8682, { 0x86 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x946d, gbc.sp());
        EXPECT(0x8683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8682));
        // 86 01D4
        gbc.setState(0xb076, 0x9b0b, 0xba30, 0xcd97, 0x8eec, 0xabc7, 0x1, 0x0);
        gbc.writeMem(0xabc7, { 0xc8 });
        gbc.writeMem(0xb076, { 0x86 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9b0b, gbc.sp());
        EXPECT(0xb077, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xabc7));
        EXPECT(0x86, gbc.readMem(0xb076));
        // 86 01D5
        gbc.setState(0x4225, 0x7c2d, 0xa1d0, 0xad0a, 0x6662, 0xb39, 0x1, 0x0);
        gbc.writeMem(0xb39, { 0x69 });
        gbc.writeMem(0x4225, { 0x86 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7c2d, gbc.sp());
        EXPECT(0x4226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 01D7
        gbc.setState(0xdf3d, 0x3eaa, 0xc760, 0x8260, 0xecb0, 0x5b1c, 0x0, 0x1);
        gbc.writeMem(0x5b1c, { 0xcc });
        gbc.writeMem(0xdf3d, { 0x86 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3eaa, gbc.sp());
        EXPECT(0xdf3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xdf3d));
        // 86 01D8
        gbc.setState(0x20a8, 0x554b, 0x6f10, 0x844b, 0x12b9, 0x9c0b, 0x1, 0x0);
        gbc.writeMem(0x20a8, { 0x86 });
        gbc.writeMem(0x9c0b, { 0x1d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x554b, gbc.sp());
        EXPECT(0x20a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9c0b));
        // 86 01D9
        gbc.setState(0x9b8c, 0xb05f, 0xd820, 0x8aa4, 0x88b4, 0x1377, 0x0, 0x1);
        gbc.writeMem(0x1377, { 0x35 });
        gbc.writeMem(0x9b8c, { 0x86 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb05f, gbc.sp());
        EXPECT(0x9b8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9b8c));
        // 86 01DA
        gbc.setState(0xfdc, 0xa4f, 0x3630, 0x8146, 0x4a47, 0x4798, 0x1, 0x0);
        gbc.writeMem(0xfdc, { 0x86 });
        gbc.writeMem(0x4798, { 0x81 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa4f, gbc.sp());
        EXPECT(0xfdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 01DB
        gbc.setState(0x587c, 0xec0d, 0xde70, 0xfa1b, 0xae4f, 0xcc13, 0x0, 0x1);
        gbc.writeMem(0x587c, { 0x86 });
        gbc.writeMem(0xcc13, { 0xf0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xec0d, gbc.sp());
        EXPECT(0x587d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xcc13));
        // 86 01DC
        gbc.setState(0x8b4d, 0x791c, 0x6860, 0xd6e0, 0x2eb9, 0x3456, 0x0, 0x1);
        gbc.writeMem(0x3456, { 0xcc });
        gbc.writeMem(0x8b4d, { 0x86 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x791c, gbc.sp());
        EXPECT(0x8b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8b4d));
        // 86 01DD
        gbc.setState(0x218, 0x19a6, 0xa190, 0xbaac, 0x6795, 0x28de, 0x0, 0x0);
        gbc.writeMem(0x218, { 0x86 });
        gbc.writeMem(0x28de, { 0xfb });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x19a6, gbc.sp());
        EXPECT(0x219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 01DE
        gbc.setState(0x2d10, 0x1114, 0xa6f0, 0xe30b, 0xf2cb, 0xc61b, 0x0, 0x1);
        gbc.writeMem(0x2d10, { 0x86 });
        gbc.writeMem(0xc61b, { 0x1e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1114, gbc.sp());
        EXPECT(0x2d11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xc61b));
        // 86 01DF
        gbc.setState(0x191d, 0x6faf, 0xf1d0, 0x1d65, 0x658e, 0xb280, 0x0, 0x0);
        gbc.writeMem(0x191d, { 0x86 });
        gbc.writeMem(0xb280, { 0x3c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6faf, gbc.sp());
        EXPECT(0x191e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb280));
        // 86 01E0
        gbc.setState(0x9002, 0x47b6, 0x1b70, 0xcaa2, 0x81e4, 0xa986, 0x0, 0x0);
        gbc.writeMem(0x9002, { 0x86 });
        gbc.writeMem(0xa986, { 0xf0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x47b6, gbc.sp());
        EXPECT(0x9003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9002));
        EXPECT(0xf0, gbc.readMem(0xa986));
        // 86 01E1
        gbc.setState(0x94c9, 0x267e, 0x7120, 0x9992, 0x811b, 0xa86e, 0x1, 0x1);
        gbc.writeMem(0x94c9, { 0x86 });
        gbc.writeMem(0xa86e, { 0xdd });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x267e, gbc.sp());
        EXPECT(0x94ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x94c9));
        EXPECT(0xdd, gbc.readMem(0xa86e));
        // 86 01E2
        gbc.setState(0x1096, 0xd9cc, 0xa670, 0xcf6b, 0xe784, 0x683f, 0x1, 0x0);
        gbc.writeMem(0x1096, { 0x86 });
        gbc.writeMem(0x683f, { 0x6e });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd9cc, gbc.sp());
        EXPECT(0x1097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 01E3
        gbc.setState(0x6b4f, 0xb31a, 0x9b10, 0x1ef9, 0xa84d, 0xe598, 0x0, 0x0);
        gbc.writeMem(0x6b4f, { 0x86 });
        gbc.writeMem(0xe598, { 0x4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb31a, gbc.sp());
        EXPECT(0x6b50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xe598));
        // 86 01E4
        gbc.setState(0x8bff, 0xa310, 0xe990, 0x3c86, 0xf75e, 0x1895, 0x1, 0x1);
        gbc.writeMem(0x1895, { 0xe2 });
        gbc.writeMem(0x8bff, { 0x86 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa310, gbc.sp());
        EXPECT(0x8c00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8bff));
        // 86 01E5
        gbc.setState(0xbf4a, 0xf427, 0x4300, 0x2a57, 0x625b, 0x2244, 0x0, 0x1);
        gbc.writeMem(0x2244, { 0xb });
        gbc.writeMem(0xbf4a, { 0x86 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf427, gbc.sp());
        EXPECT(0xbf4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xbf4a));
        // 86 01E6
        gbc.setState(0x617, 0xa8cb, 0xecc0, 0x8b4b, 0xdf5e, 0xc1e7, 0x0, 0x1);
        gbc.writeMem(0x617, { 0x86 });
        gbc.writeMem(0xc1e7, { 0x80 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa8cb, gbc.sp());
        EXPECT(0x618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc1e7));
        // 86 01E7
        gbc.setState(0xe6e1, 0x11dc, 0x7fd0, 0x1db9, 0x4f72, 0xe2cf, 0x1, 0x1);
        gbc.writeMem(0xe2cf, { 0x1d });
        gbc.writeMem(0xe6e1, { 0x86 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x11dc, gbc.sp());
        EXPECT(0xe6e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe2cf));
        EXPECT(0x86, gbc.readMem(0xe6e1));
        // 86 01E8
        gbc.setState(0xa3d1, 0xfcab, 0x2540, 0xd91c, 0x9367, 0x9a37, 0x0, 0x0);
        gbc.writeMem(0x9a37, { 0xf4 });
        gbc.writeMem(0xa3d1, { 0x86 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfcab, gbc.sp());
        EXPECT(0xa3d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x9a37));
        EXPECT(0x86, gbc.readMem(0xa3d1));
        // 86 01E9
        gbc.setState(0xe3b6, 0xa07a, 0x6da0, 0xb5c0, 0x2a77, 0x3bcc, 0x1, 0x0);
        gbc.writeMem(0x3bcc, { 0x68 });
        gbc.writeMem(0xe3b6, { 0x86 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa07a, gbc.sp());
        EXPECT(0xe3b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xe3b6));
        // 86 01EA
        gbc.setState(0xaa86, 0x45bc, 0x3290, 0xbaf9, 0xc582, 0x9642, 0x0, 0x0);
        gbc.writeMem(0x9642, { 0x90 });
        gbc.writeMem(0xaa86, { 0x86 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x45bc, gbc.sp());
        EXPECT(0xaa87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x9642));
        EXPECT(0x86, gbc.readMem(0xaa86));
        // 86 01EB
        gbc.setState(0x4d75, 0x7c9b, 0xf980, 0x2564, 0x581, 0xd508, 0x1, 0x0);
        gbc.writeMem(0x4d75, { 0x86 });
        gbc.writeMem(0xd508, { 0x2a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7c9b, gbc.sp());
        EXPECT(0x4d76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xd508));
        // 86 01EC
        gbc.setState(0xe100, 0x5245, 0x33f0, 0xb12, 0x28cf, 0xe7ea, 0x1, 0x1);
        gbc.writeMem(0xe100, { 0x86 });
        gbc.writeMem(0xe7ea, { 0x6b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5245, gbc.sp());
        EXPECT(0xe101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xe100));
        EXPECT(0x6b, gbc.readMem(0xe7ea));
        // 86 01ED
        gbc.setState(0xa59c, 0xdd7f, 0xb5e0, 0xde16, 0xcab2, 0xe44c, 0x0, 0x0);
        gbc.writeMem(0xa59c, { 0x86 });
        gbc.writeMem(0xe44c, { 0xf });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdd7f, gbc.sp());
        EXPECT(0xa59d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa59c));
        EXPECT(0xf, gbc.readMem(0xe44c));
        // 86 01EE
        gbc.setState(0x7b44, 0x7c14, 0x6250, 0x67a1, 0xbcf3, 0xf012, 0x0, 0x1);
        gbc.writeMem(0x7b44, { 0x86 });
        gbc.writeMem(0xf012, { 0xf7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7c14, gbc.sp());
        EXPECT(0x7b45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xf012));
        // 86 01EF
        gbc.setState(0x228b, 0xe545, 0x1500, 0x131e, 0x2d82, 0xfe49, 0x1, 0x1);
        gbc.writeMem(0x228b, { 0x86 });
        gbc.writeMem(0xfe49, { 0x6d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe545, gbc.sp());
        EXPECT(0x228c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xfe49));
        // 86 01F0
        gbc.setState(0x2708, 0xca83, 0xa910, 0x70e6, 0xe8e1, 0xb99, 0x1, 0x0);
        gbc.writeMem(0xb99, { 0xa9 });
        gbc.writeMem(0x2708, { 0x86 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xca83, gbc.sp());
        EXPECT(0x2709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 01F1
        gbc.setState(0x89a8, 0x57bc, 0xfa70, 0x1472, 0xc87a, 0xd7b6, 0x0, 0x1);
        gbc.writeMem(0x89a8, { 0x86 });
        gbc.writeMem(0xd7b6, { 0xd9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x57bc, gbc.sp());
        EXPECT(0x89a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x89a8));
        EXPECT(0xd9, gbc.readMem(0xd7b6));
        // 86 01F2
        gbc.setState(0x18c5, 0x28ff, 0x2ce0, 0xf4ca, 0x7f0c, 0x7a13, 0x1, 0x0);
        gbc.writeMem(0x18c5, { 0x86 });
        gbc.writeMem(0x7a13, { 0xfc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x28ff, gbc.sp());
        EXPECT(0x18c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 01F3
        gbc.setState(0xc47, 0x5a04, 0x68a0, 0x9847, 0x6d7b, 0x6e5b, 0x0, 0x1);
        gbc.writeMem(0xc47, { 0x86 });
        gbc.writeMem(0x6e5b, { 0xa5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5a04, gbc.sp());
        EXPECT(0xc48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 01F4
        gbc.setState(0x54ca, 0xb25e, 0xf0e0, 0x11ef, 0x87d3, 0x8dce, 0x1, 0x1);
        gbc.writeMem(0x54ca, { 0x86 });
        gbc.writeMem(0x8dce, { 0xe });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb25e, gbc.sp());
        EXPECT(0x54cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8dce));
        // 86 01F5
        gbc.setState(0x71e3, 0x843f, 0xd3b0, 0x5838, 0xd0b1, 0xfca7, 0x0, 0x0);
        gbc.writeMem(0x71e3, { 0x86 });
        gbc.writeMem(0xfca7, { 0x30 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x843f, gbc.sp());
        EXPECT(0x71e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xfca7));
        // 86 01F6
        gbc.setState(0x99ab, 0xfda3, 0xc1f0, 0x1768, 0x6c33, 0xc8f5, 0x1, 0x1);
        gbc.writeMem(0x99ab, { 0x86 });
        gbc.writeMem(0xc8f5, { 0x14 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xfda3, gbc.sp());
        EXPECT(0x99ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x99ab));
        EXPECT(0x14, gbc.readMem(0xc8f5));
        // 86 01F7
        gbc.setState(0x27d2, 0x79b0, 0xece0, 0x53c5, 0x26d5, 0xd43e, 0x0, 0x1);
        gbc.writeMem(0x27d2, { 0x86 });
        gbc.writeMem(0xd43e, { 0x4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x79b0, gbc.sp());
        EXPECT(0x27d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd43e));
        // 86 01F8
        gbc.setState(0x9b3c, 0xcc36, 0xbce0, 0xc23c, 0x3f20, 0x8b1c, 0x1, 0x1);
        gbc.writeMem(0x8b1c, { 0x43 });
        gbc.writeMem(0x9b3c, { 0x86 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xcc36, gbc.sp());
        EXPECT(0x9b3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8b1c));
        EXPECT(0x86, gbc.readMem(0x9b3c));
        // 86 01F9
        gbc.setState(0x546b, 0xa9de, 0x1ab0, 0x47d1, 0x9918, 0xa51b, 0x0, 0x1);
        gbc.writeMem(0x546b, { 0x86 });
        gbc.writeMem(0xa51b, { 0xd1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa9de, gbc.sp());
        EXPECT(0x546c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xa51b));
        // 86 01FA
        gbc.setState(0x19be, 0xee89, 0x27d0, 0xa6ed, 0x3634, 0x70bb, 0x0, 0x0);
        gbc.writeMem(0x19be, { 0x86 });
        gbc.writeMem(0x70bb, { 0x84 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xee89, gbc.sp());
        EXPECT(0x19bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 01FB
        gbc.setState(0xe7c0, 0x3eba, 0xe210, 0x82c7, 0xcf6c, 0xafca, 0x1, 0x0);
        gbc.writeMem(0xafca, { 0x47 });
        gbc.writeMem(0xe7c0, { 0x86 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3eba, gbc.sp());
        EXPECT(0xe7c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xafca));
        EXPECT(0x86, gbc.readMem(0xe7c0));
        // 86 01FC
        gbc.setState(0xcaa4, 0x790f, 0x6630, 0x4f7b, 0xf342, 0xdfd0, 0x1, 0x1);
        gbc.writeMem(0xcaa4, { 0x86 });
        gbc.writeMem(0xdfd0, { 0x23 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x790f, gbc.sp());
        EXPECT(0xcaa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xcaa4));
        EXPECT(0x23, gbc.readMem(0xdfd0));
        // 86 01FD
        gbc.setState(0xecbf, 0xed7c, 0x8da0, 0x37b1, 0x8087, 0x597c, 0x1, 0x1);
        gbc.writeMem(0x597c, { 0x8 });
        gbc.writeMem(0xecbf, { 0x86 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xed7c, gbc.sp());
        EXPECT(0xecc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xecbf));
        // 86 01FE
        gbc.setState(0xdfaf, 0x792c, 0xbf00, 0x779b, 0xd994, 0xb51a, 0x0, 0x1);
        gbc.writeMem(0xb51a, { 0x38 });
        gbc.writeMem(0xdfaf, { 0x86 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x792c, gbc.sp());
        EXPECT(0xdfb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb51a));
        EXPECT(0x86, gbc.readMem(0xdfaf));
        // 86 01FF
        gbc.setState(0x4bb, 0x45ae, 0x3c80, 0xdb52, 0xae82, 0xb786, 0x1, 0x0);
        gbc.writeMem(0x4bb, { 0x86 });
        gbc.writeMem(0xb786, { 0x3e });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x45ae, gbc.sp());
        EXPECT(0x4bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb786));
        // 86 0200
        gbc.setState(0xa4b1, 0x31a6, 0x52c0, 0x80ba, 0x17, 0xfb7b, 0x0, 0x0);
        gbc.writeMem(0xa4b1, { 0x86 });
        gbc.writeMem(0xfb7b, { 0x6b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x31a6, gbc.sp());
        EXPECT(0xa4b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa4b1));
        EXPECT(0x6b, gbc.readMem(0xfb7b));
        // 86 0201
        gbc.setState(0x6d1, 0x7633, 0xbb0, 0x5296, 0xfa92, 0x691c, 0x1, 0x1);
        gbc.writeMem(0x6d1, { 0x86 });
        gbc.writeMem(0x691c, { 0x12 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7633, gbc.sp());
        EXPECT(0x6d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0202
        gbc.setState(0x2e53, 0x8665, 0x7010, 0x69d7, 0x64bc, 0x4788, 0x0, 0x1);
        gbc.writeMem(0x2e53, { 0x86 });
        gbc.writeMem(0x4788, { 0xbb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8665, gbc.sp());
        EXPECT(0x2e54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0203
        gbc.setState(0x60d1, 0x6fe4, 0xab90, 0x3e7f, 0x403b, 0xc7e9, 0x1, 0x0);
        gbc.writeMem(0x60d1, { 0x86 });
        gbc.writeMem(0xc7e9, { 0x7a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6fe4, gbc.sp());
        EXPECT(0x60d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc7e9));
        // 86 0204
        gbc.setState(0x395d, 0x9852, 0x4830, 0x919c, 0xb0a5, 0xe978, 0x1, 0x1);
        gbc.writeMem(0x395d, { 0x86 });
        gbc.writeMem(0xe978, { 0xbf });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9852, gbc.sp());
        EXPECT(0x395e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe978));
        // 86 0205
        gbc.setState(0x99d3, 0xb2a, 0x5db0, 0xcc4, 0x9e06, 0x75f2, 0x0, 0x1);
        gbc.writeMem(0x75f2, { 0x71 });
        gbc.writeMem(0x99d3, { 0x86 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb2a, gbc.sp());
        EXPECT(0x99d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x99d3));
        // 86 0206
        gbc.setState(0x60c8, 0xf01f, 0xdce0, 0x6ab6, 0xf020, 0x1131, 0x0, 0x1);
        gbc.writeMem(0x1131, { 0x5c });
        gbc.writeMem(0x60c8, { 0x86 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf01f, gbc.sp());
        EXPECT(0x60c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0207
        gbc.setState(0xc07a, 0xfdb9, 0xc270, 0x7ef7, 0x2960, 0xf02b, 0x0, 0x0);
        gbc.writeMem(0xc07a, { 0x86 });
        gbc.writeMem(0xf02b, { 0xd2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfdb9, gbc.sp());
        EXPECT(0xc07b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc07a));
        EXPECT(0xd2, gbc.readMem(0xf02b));
        // 86 0208
        gbc.setState(0xd50a, 0x8a7, 0x9700, 0x251e, 0xa26, 0x2e80, 0x0, 0x1);
        gbc.writeMem(0x2e80, { 0x89 });
        gbc.writeMem(0xd50a, { 0x86 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8a7, gbc.sp());
        EXPECT(0xd50b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd50a));
        // 86 0209
        gbc.setState(0xde8c, 0x6f24, 0xca20, 0x3e1f, 0x272e, 0x405c, 0x1, 0x1);
        gbc.writeMem(0x405c, { 0xf6 });
        gbc.writeMem(0xde8c, { 0x86 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6f24, gbc.sp());
        EXPECT(0xde8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xde8c));
        // 86 020B
        gbc.setState(0x87b6, 0xbf8, 0x3e30, 0x404b, 0xaf8, 0xc49e, 0x1, 0x0);
        gbc.writeMem(0x87b6, { 0x86 });
        gbc.writeMem(0xc49e, { 0x3b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbf8, gbc.sp());
        EXPECT(0x87b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x87b6));
        EXPECT(0x3b, gbc.readMem(0xc49e));
        // 86 020C
        gbc.setState(0x1e16, 0xec3e, 0xdc70, 0x2cf6, 0xcb1, 0xb393, 0x1, 0x0);
        gbc.writeMem(0x1e16, { 0x86 });
        gbc.writeMem(0xb393, { 0x5b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xec3e, gbc.sp());
        EXPECT(0x1e17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb393));
        // 86 020D
        gbc.setState(0x3769, 0xe4d9, 0x89f0, 0x4e98, 0x46e3, 0xfdf0, 0x0, 0x1);
        gbc.writeMem(0x3769, { 0x86 });
        gbc.writeMem(0xfdf0, { 0x47 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe4d9, gbc.sp());
        EXPECT(0x376a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xfdf0));
        // 86 020E
        gbc.setState(0x260f, 0x2fe3, 0xdfe0, 0x890f, 0x88d, 0x6aa6, 0x0, 0x1);
        gbc.writeMem(0x260f, { 0x86 });
        gbc.writeMem(0x6aa6, { 0x3b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2fe3, gbc.sp());
        EXPECT(0x2610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 020F
        gbc.setState(0x4d77, 0x2ea9, 0xb70, 0xcee5, 0x2143, 0xefe7, 0x0, 0x1);
        gbc.writeMem(0x4d77, { 0x86 });
        gbc.writeMem(0xefe7, { 0x1f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2ea9, gbc.sp());
        EXPECT(0x4d78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xefe7));
        // 86 0210
        gbc.setState(0x9da6, 0xea70, 0xd180, 0x96f, 0xa6e8, 0x420, 0x0, 0x1);
        gbc.writeMem(0x420, { 0x21 });
        gbc.writeMem(0x9da6, { 0x86 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xea70, gbc.sp());
        EXPECT(0x9da7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9da6));
        // 86 0211
        gbc.setState(0xf90, 0xdc3a, 0xe820, 0x30a7, 0x5d82, 0xc05f, 0x1, 0x1);
        gbc.writeMem(0xf90, { 0x86 });
        gbc.writeMem(0xc05f, { 0x49 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xdc3a, gbc.sp());
        EXPECT(0xf91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc05f));
        // 86 0212
        gbc.setState(0x53ae, 0x4b98, 0x54d0, 0x90c1, 0x1269, 0x63df, 0x0, 0x1);
        gbc.writeMem(0x53ae, { 0x86 });
        gbc.writeMem(0x63df, { 0x93 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4b98, gbc.sp());
        EXPECT(0x53af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0213
        gbc.setState(0x5fef, 0x2500, 0x1760, 0x4d2a, 0xd485, 0xa86c, 0x1, 0x0);
        gbc.writeMem(0x5fef, { 0x86 });
        gbc.writeMem(0xa86c, { 0x60 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2500, gbc.sp());
        EXPECT(0x5ff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xa86c));
        // 86 0214
        gbc.setState(0xc02f, 0x7d80, 0xb8e0, 0x60a6, 0x26be, 0x5341, 0x0, 0x0);
        gbc.writeMem(0x5341, { 0x7a });
        gbc.writeMem(0xc02f, { 0x86 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7d80, gbc.sp());
        EXPECT(0xc030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc02f));
        // 86 0215
        gbc.setState(0xad3e, 0x8d15, 0x7d20, 0xe30f, 0x45a2, 0x7fdd, 0x1, 0x1);
        gbc.writeMem(0x7fdd, { 0xdf });
        gbc.writeMem(0xad3e, { 0x86 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8d15, gbc.sp());
        EXPECT(0xad3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xad3e));
        // 86 0216
        gbc.setState(0xa52e, 0x19b4, 0x6f50, 0xc10d, 0xa0c4, 0x59eb, 0x1, 0x1);
        gbc.writeMem(0x59eb, { 0xd6 });
        gbc.writeMem(0xa52e, { 0x86 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x19b4, gbc.sp());
        EXPECT(0xa52f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa52e));
        // 86 0217
        gbc.setState(0xb606, 0x1c44, 0xaa40, 0xe63c, 0xc420, 0x5142, 0x1, 0x0);
        gbc.writeMem(0x5142, { 0x31 });
        gbc.writeMem(0xb606, { 0x86 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1c44, gbc.sp());
        EXPECT(0xb607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb606));
        // 86 0218
        gbc.setState(0xe505, 0x6f7b, 0x7b0, 0xd0f7, 0x6af, 0x2ce0, 0x0, 0x1);
        gbc.writeMem(0x2ce0, { 0xb8 });
        gbc.writeMem(0xe505, { 0x86 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6f7b, gbc.sp());
        EXPECT(0xe506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xe505));
        // 86 0219
        gbc.setState(0x2286, 0x68b3, 0x58d0, 0x6963, 0x1fb9, 0x4517, 0x1, 0x1);
        gbc.writeMem(0x2286, { 0x86 });
        gbc.writeMem(0x4517, { 0x23 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x68b3, gbc.sp());
        EXPECT(0x2287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 021B
        gbc.setState(0x73fe, 0x7f20, 0x88a0, 0x1f19, 0x8b8a, 0xc306, 0x0, 0x1);
        gbc.writeMem(0x73fe, { 0x86 });
        gbc.writeMem(0xc306, { 0xd9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7f20, gbc.sp());
        EXPECT(0x73ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc306));
        // 86 021C
        gbc.setState(0x22d3, 0x8b9, 0xba40, 0x6c4b, 0x203a, 0xd464, 0x1, 0x0);
        gbc.writeMem(0x22d3, { 0x86 });
        gbc.writeMem(0xd464, { 0xf7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8b9, gbc.sp());
        EXPECT(0x22d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xd464));
        // 86 021D
        gbc.setState(0xd0c6, 0x2c6a, 0x25b0, 0x1516, 0xc45, 0x2389, 0x0, 0x1);
        gbc.writeMem(0x2389, { 0xa2 });
        gbc.writeMem(0xd0c6, { 0x86 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2c6a, gbc.sp());
        EXPECT(0xd0c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd0c6));
        // 86 021E
        gbc.setState(0x5110, 0x463d, 0xf0f0, 0x1625, 0xf5ea, 0xb647, 0x0, 0x1);
        gbc.writeMem(0x5110, { 0x86 });
        gbc.writeMem(0xb647, { 0x5a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x463d, gbc.sp());
        EXPECT(0x5111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xb647));
        // 86 021F
        gbc.setState(0xd58b, 0x2b1c, 0x49b0, 0xb99a, 0xdf00, 0x1185, 0x1, 0x0);
        gbc.writeMem(0x1185, { 0x46 });
        gbc.writeMem(0xd58b, { 0x86 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2b1c, gbc.sp());
        EXPECT(0xd58c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd58b));
        // 86 0220
        gbc.setState(0x5c84, 0x92fd, 0x830, 0x8f8b, 0xdf74, 0xf260, 0x1, 0x0);
        gbc.writeMem(0x5c84, { 0x86 });
        gbc.writeMem(0xf260, { 0x54 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x92fd, gbc.sp());
        EXPECT(0x5c85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xf260));
        // 86 0221
        gbc.setState(0x992b, 0xfe4e, 0xf9d0, 0x7bb7, 0x6e37, 0xa344, 0x1, 0x0);
        gbc.writeMem(0x992b, { 0x86 });
        gbc.writeMem(0xa344, { 0x25 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfe4e, gbc.sp());
        EXPECT(0x992c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x992b));
        EXPECT(0x25, gbc.readMem(0xa344));
        // 86 0223
        gbc.setState(0xb3bc, 0xab21, 0xfaf0, 0x9729, 0x1089, 0x2085, 0x1, 0x0);
        gbc.writeMem(0x2085, { 0x72 });
        gbc.writeMem(0xb3bc, { 0x86 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xab21, gbc.sp());
        EXPECT(0xb3bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb3bc));
        // 86 0224
        gbc.setState(0xe88a, 0x70cc, 0x1e10, 0xfaf2, 0x9f6a, 0x6a8c, 0x0, 0x1);
        gbc.writeMem(0x6a8c, { 0x21 });
        gbc.writeMem(0xe88a, { 0x86 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x70cc, gbc.sp());
        EXPECT(0xe88b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xe88a));
        // 86 0225
        gbc.setState(0xc010, 0xcd8c, 0xaca0, 0xdd53, 0x773e, 0xeeae, 0x0, 0x1);
        gbc.writeMem(0xc010, { 0x86 });
        gbc.writeMem(0xeeae, { 0x26 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xcd8c, gbc.sp());
        EXPECT(0xc011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc010));
        EXPECT(0x26, gbc.readMem(0xeeae));
        // 86 0227
        gbc.setState(0x44f9, 0x8bcf, 0xf070, 0xed5c, 0x8822, 0x5d53, 0x1, 0x0);
        gbc.writeMem(0x44f9, { 0x86 });
        gbc.writeMem(0x5d53, { 0x3a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8bcf, gbc.sp());
        EXPECT(0x44fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0228
        gbc.setState(0x7b38, 0xa59b, 0x24c0, 0xb614, 0x437f, 0x95e1, 0x0, 0x0);
        gbc.writeMem(0x7b38, { 0x86 });
        gbc.writeMem(0x95e1, { 0x87 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa59b, gbc.sp());
        EXPECT(0x7b39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x95e1));
        // 86 0229
        gbc.setState(0x24b9, 0x620a, 0xf240, 0x77c2, 0x8d89, 0xfbbc, 0x1, 0x1);
        gbc.writeMem(0x24b9, { 0x86 });
        gbc.writeMem(0xfbbc, { 0xf0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x620a, gbc.sp());
        EXPECT(0x24ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xfbbc));
        // 86 022B
        gbc.setState(0xa44a, 0xf34b, 0x7960, 0x8f0a, 0x3215, 0x4c4e, 0x0, 0x0);
        gbc.writeMem(0x4c4e, { 0xcc });
        gbc.writeMem(0xa44a, { 0x86 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf34b, gbc.sp());
        EXPECT(0xa44b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa44a));
        // 86 022C
        gbc.setState(0x615c, 0x471a, 0xc880, 0x4ff2, 0xe079, 0xe51f, 0x0, 0x0);
        gbc.writeMem(0x615c, { 0x86 });
        gbc.writeMem(0xe51f, { 0x4a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x471a, gbc.sp());
        EXPECT(0x615d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xe51f));
        // 86 022D
        gbc.setState(0x5bc9, 0x4dfd, 0x5530, 0x652e, 0xd3a5, 0xfdd5, 0x0, 0x1);
        gbc.writeMem(0x5bc9, { 0x86 });
        gbc.writeMem(0xfdd5, { 0x51 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4dfd, gbc.sp());
        EXPECT(0x5bca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xfdd5));
        // 86 022F
        gbc.setState(0x9bc7, 0x168a, 0x3210, 0x56fa, 0x1873, 0xd97f, 0x0, 0x1);
        gbc.writeMem(0x9bc7, { 0x86 });
        gbc.writeMem(0xd97f, { 0xdc });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x168a, gbc.sp());
        EXPECT(0x9bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9bc7));
        EXPECT(0xdc, gbc.readMem(0xd97f));
        // 86 0230
        gbc.setState(0x646e, 0x1226, 0xa940, 0x54f5, 0xb18d, 0xaa08, 0x1, 0x1);
        gbc.writeMem(0x646e, { 0x86 });
        gbc.writeMem(0xaa08, { 0xa4 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1226, gbc.sp());
        EXPECT(0x646f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xaa08));
        // 86 0232
        gbc.setState(0xc6a4, 0x2bed, 0xbca0, 0x133b, 0x5b27, 0xa853, 0x1, 0x0);
        gbc.writeMem(0xa853, { 0x40 });
        gbc.writeMem(0xc6a4, { 0x86 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2bed, gbc.sp());
        EXPECT(0xc6a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xa853));
        EXPECT(0x86, gbc.readMem(0xc6a4));
        // 86 0233
        gbc.setState(0x3262, 0xff65, 0x7590, 0x1607, 0xabe6, 0x1d8e, 0x1, 0x1);
        gbc.writeMem(0x1d8e, { 0xa1 });
        gbc.writeMem(0x3262, { 0x86 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xff65, gbc.sp());
        EXPECT(0x3263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0234
        gbc.setState(0x7a25, 0x874d, 0x4ec0, 0x695f, 0x3b33, 0xdcad, 0x0, 0x0);
        gbc.writeMem(0x7a25, { 0x86 });
        gbc.writeMem(0xdcad, { 0x8c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x874d, gbc.sp());
        EXPECT(0x7a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xdcad));
        // 86 0235
        gbc.setState(0x74bd, 0x3145, 0xe720, 0x5a12, 0xb050, 0x4c1b, 0x1, 0x1);
        gbc.writeMem(0x4c1b, { 0x57 });
        gbc.writeMem(0x74bd, { 0x86 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3145, gbc.sp());
        EXPECT(0x74be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0236
        gbc.setState(0xa422, 0xceb2, 0x58c0, 0x3c50, 0x4343, 0x7850, 0x0, 0x0);
        gbc.writeMem(0x7850, { 0xaf });
        gbc.writeMem(0xa422, { 0x86 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xceb2, gbc.sp());
        EXPECT(0xa423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa422));
        // 86 0237
        gbc.setState(0x5b38, 0xc596, 0xf030, 0xffe1, 0x7ae6, 0x8e44, 0x1, 0x0);
        gbc.writeMem(0x5b38, { 0x86 });
        gbc.writeMem(0x8e44, { 0xdf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc596, gbc.sp());
        EXPECT(0x5b39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x8e44));
        // 86 0238
        gbc.setState(0x7e9e, 0x7213, 0x7f00, 0x434c, 0x6ef2, 0xa3f4, 0x0, 0x0);
        gbc.writeMem(0x7e9e, { 0x86 });
        gbc.writeMem(0xa3f4, { 0x8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7213, gbc.sp());
        EXPECT(0x7e9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xa3f4));
        // 86 0239
        gbc.setState(0x42d4, 0x250, 0x5860, 0xa694, 0xa096, 0xfc29, 0x0, 0x0);
        gbc.writeMem(0x42d4, { 0x86 });
        gbc.writeMem(0xfc29, { 0x63 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x250, gbc.sp());
        EXPECT(0x42d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xfc29));
        // 86 023A
        gbc.setState(0xb282, 0x70a8, 0x7630, 0xe9a6, 0x1af8, 0xf54a, 0x1, 0x0);
        gbc.writeMem(0xb282, { 0x86 });
        gbc.writeMem(0xf54a, { 0x68 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x70a8, gbc.sp());
        EXPECT(0xb283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb282));
        EXPECT(0x68, gbc.readMem(0xf54a));
        // 86 023B
        gbc.setState(0x1c4a, 0xee51, 0xcce0, 0x93f, 0x5dcc, 0xabd4, 0x1, 0x0);
        gbc.writeMem(0x1c4a, { 0x86 });
        gbc.writeMem(0xabd4, { 0x24 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xee51, gbc.sp());
        EXPECT(0x1c4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xabd4));
        // 86 023C
        gbc.setState(0xde53, 0x1e35, 0xb4b0, 0xbe85, 0xf8ed, 0x634a, 0x1, 0x0);
        gbc.writeMem(0x634a, { 0x50 });
        gbc.writeMem(0xde53, { 0x86 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1e35, gbc.sp());
        EXPECT(0xde54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xde53));
        // 86 023D
        gbc.setState(0xb478, 0x7dc9, 0x8df0, 0xcced, 0x8665, 0x713b, 0x0, 0x0);
        gbc.writeMem(0x713b, { 0x32 });
        gbc.writeMem(0xb478, { 0x86 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7dc9, gbc.sp());
        EXPECT(0xb479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb478));
        // 86 023E
        gbc.setState(0x3c99, 0xf3e1, 0x4bd0, 0xf529, 0x82b3, 0x7abb, 0x1, 0x1);
        gbc.writeMem(0x3c99, { 0x86 });
        gbc.writeMem(0x7abb, { 0xf });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf3e1, gbc.sp());
        EXPECT(0x3c9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 023F
        gbc.setState(0x3a48, 0xdfbe, 0x14f0, 0xba93, 0xa58, 0x67d, 0x0, 0x0);
        gbc.writeMem(0x67d, { 0xdb });
        gbc.writeMem(0x3a48, { 0x86 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xdfbe, gbc.sp());
        EXPECT(0x3a49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0240
        gbc.setState(0xd2a8, 0x4097, 0xa3e0, 0x6798, 0xf534, 0x6a67, 0x0, 0x0);
        gbc.writeMem(0x6a67, { 0x92 });
        gbc.writeMem(0xd2a8, { 0x86 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4097, gbc.sp());
        EXPECT(0xd2a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd2a8));
        // 86 0241
        gbc.setState(0x5cdb, 0x1b42, 0x79f0, 0xd40, 0x77fc, 0xa4c7, 0x1, 0x1);
        gbc.writeMem(0x5cdb, { 0x86 });
        gbc.writeMem(0xa4c7, { 0x64 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1b42, gbc.sp());
        EXPECT(0x5cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa4c7));
        // 86 0242
        gbc.setState(0xca35, 0xf58a, 0x5080, 0x5108, 0x5fe3, 0x747f, 0x1, 0x1);
        gbc.writeMem(0x747f, { 0x14 });
        gbc.writeMem(0xca35, { 0x86 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf58a, gbc.sp());
        EXPECT(0xca36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xca35));
        // 86 0243
        gbc.setState(0xce08, 0x98cc, 0xf4f0, 0xf406, 0xfd4a, 0x6191, 0x0, 0x1);
        gbc.writeMem(0x6191, { 0xde });
        gbc.writeMem(0xce08, { 0x86 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x98cc, gbc.sp());
        EXPECT(0xce09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xce08));
        // 86 0244
        gbc.setState(0x1ba3, 0x89b5, 0x4070, 0xebf3, 0x2b60, 0x901a, 0x1, 0x0);
        gbc.writeMem(0x1ba3, { 0x86 });
        gbc.writeMem(0x901a, { 0x51 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x89b5, gbc.sp());
        EXPECT(0x1ba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x901a));
        // 86 0245
        gbc.setState(0x977d, 0x4917, 0x4c80, 0xe021, 0x9895, 0x5998, 0x0, 0x1);
        gbc.writeMem(0x5998, { 0xb1 });
        gbc.writeMem(0x977d, { 0x86 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4917, gbc.sp());
        EXPECT(0x977e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x977d));
        // 86 0246
        gbc.setState(0xa622, 0xb119, 0xc960, 0x8a10, 0x2794, 0x6279, 0x0, 0x0);
        gbc.writeMem(0x6279, { 0xc1 });
        gbc.writeMem(0xa622, { 0x86 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb119, gbc.sp());
        EXPECT(0xa623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa622));
        // 86 0247
        gbc.setState(0xdaab, 0x8faa, 0x1ef0, 0xe6fd, 0xd917, 0x646c, 0x1, 0x0);
        gbc.writeMem(0x646c, { 0xeb });
        gbc.writeMem(0xdaab, { 0x86 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8faa, gbc.sp());
        EXPECT(0xdaac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xdaab));
        // 86 0248
        gbc.setState(0x2e9, 0x94ff, 0x90a0, 0x6a04, 0xe46a, 0x9151, 0x1, 0x0);
        gbc.writeMem(0x2e9, { 0x86 });
        gbc.writeMem(0x9151, { 0x5b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x94ff, gbc.sp());
        EXPECT(0x2ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9151));
        // 86 0249
        gbc.setState(0xd725, 0x405b, 0x100, 0xb3c, 0x3a67, 0xaaad, 0x1, 0x0);
        gbc.writeMem(0xaaad, { 0xa4 });
        gbc.writeMem(0xd725, { 0x86 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x405b, gbc.sp());
        EXPECT(0xd726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xaaad));
        EXPECT(0x86, gbc.readMem(0xd725));
        // 86 024A
        gbc.setState(0x642d, 0xa6c8, 0x5230, 0x25b7, 0xa9ae, 0xad86, 0x1, 0x1);
        gbc.writeMem(0x642d, { 0x86 });
        gbc.writeMem(0xad86, { 0xb7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa6c8, gbc.sp());
        EXPECT(0x642e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xad86));
        // 86 024D
        gbc.setState(0xefef, 0xa30f, 0xaec0, 0x24dd, 0xd78, 0x997f, 0x0, 0x0);
        gbc.writeMem(0x997f, { 0x36 });
        gbc.writeMem(0xefef, { 0x86 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa30f, gbc.sp());
        EXPECT(0xeff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x997f));
        EXPECT(0x86, gbc.readMem(0xefef));
        // 86 024E
        gbc.setState(0x228d, 0xbc12, 0xda90, 0x937, 0xe463, 0xf036, 0x1, 0x1);
        gbc.writeMem(0x228d, { 0x86 });
        gbc.writeMem(0xf036, { 0xb });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbc12, gbc.sp());
        EXPECT(0x228e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xf036));
        // 86 024F
        gbc.setState(0xebc2, 0xe584, 0xf0, 0x3579, 0xd00, 0xbc98, 0x0, 0x0);
        gbc.writeMem(0xbc98, { 0x41 });
        gbc.writeMem(0xebc2, { 0x86 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe584, gbc.sp());
        EXPECT(0xebc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xbc98));
        EXPECT(0x86, gbc.readMem(0xebc2));
        // 86 0250
        gbc.setState(0xe7f4, 0x9bdc, 0xd6f0, 0x7833, 0xa43a, 0xd50d, 0x1, 0x0);
        gbc.writeMem(0xd50d, { 0x31 });
        gbc.writeMem(0xe7f4, { 0x86 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9bdc, gbc.sp());
        EXPECT(0xe7f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd50d));
        EXPECT(0x86, gbc.readMem(0xe7f4));
        // 86 0251
        gbc.setState(0x8cdb, 0xff17, 0x6e90, 0xb3ff, 0x5751, 0x6906, 0x1, 0x1);
        gbc.writeMem(0x6906, { 0xe9 });
        gbc.writeMem(0x8cdb, { 0x86 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xff17, gbc.sp());
        EXPECT(0x8cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8cdb));
        // 86 0252
        gbc.setState(0xdcb5, 0x3ef0, 0xc20, 0x921a, 0xfef5, 0x9942, 0x0, 0x1);
        gbc.writeMem(0x9942, { 0x12 });
        gbc.writeMem(0xdcb5, { 0x86 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3ef0, gbc.sp());
        EXPECT(0xdcb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x9942));
        EXPECT(0x86, gbc.readMem(0xdcb5));
        // 86 0253
        gbc.setState(0x8f75, 0xe536, 0x11c0, 0x7e25, 0xacad, 0x7897, 0x1, 0x1);
        gbc.writeMem(0x7897, { 0xa5 });
        gbc.writeMem(0x8f75, { 0x86 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe536, gbc.sp());
        EXPECT(0x8f76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8f75));
        // 86 0254
        gbc.setState(0x54af, 0x5f1f, 0x7ac0, 0x845a, 0xca99, 0x507b, 0x1, 0x1);
        gbc.writeMem(0x507b, { 0xfe });
        gbc.writeMem(0x54af, { 0x86 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5f1f, gbc.sp());
        EXPECT(0x54b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0255
        gbc.setState(0xa444, 0x8d93, 0x1430, 0x6c76, 0xd973, 0xdbae, 0x0, 0x1);
        gbc.writeMem(0xa444, { 0x86 });
        gbc.writeMem(0xdbae, { 0xa9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8d93, gbc.sp());
        EXPECT(0xa445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa444));
        EXPECT(0xa9, gbc.readMem(0xdbae));
        // 86 0256
        gbc.setState(0x5eb9, 0x92d8, 0x1050, 0xb318, 0xf694, 0x77ea, 0x1, 0x0);
        gbc.writeMem(0x5eb9, { 0x86 });
        gbc.writeMem(0x77ea, { 0x7a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x92d8, gbc.sp());
        EXPECT(0x5eba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0257
        gbc.setState(0x34f4, 0x4e81, 0x73e0, 0xe896, 0xdd18, 0x855f, 0x1, 0x1);
        gbc.writeMem(0x34f4, { 0x86 });
        gbc.writeMem(0x855f, { 0xac });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4e81, gbc.sp());
        EXPECT(0x34f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x855f));
        // 86 0258
        gbc.setState(0x9c85, 0xe142, 0xadc0, 0x38d0, 0xe20, 0xf94b, 0x1, 0x0);
        gbc.writeMem(0x9c85, { 0x86 });
        gbc.writeMem(0xf94b, { 0x61 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe142, gbc.sp());
        EXPECT(0x9c86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9c85));
        EXPECT(0x61, gbc.readMem(0xf94b));
        // 86 0259
        gbc.setState(0xdcb0, 0xf2ec, 0xa850, 0x66, 0xc25a, 0x14b6, 0x1, 0x1);
        gbc.writeMem(0x14b6, { 0x5 });
        gbc.writeMem(0xdcb0, { 0x86 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf2ec, gbc.sp());
        EXPECT(0xdcb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xdcb0));
        // 86 025A
        gbc.setState(0x1f85, 0x315c, 0xb530, 0x99ff, 0xe445, 0x352a, 0x1, 0x0);
        gbc.writeMem(0x1f85, { 0x86 });
        gbc.writeMem(0x352a, { 0x72 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x315c, gbc.sp());
        EXPECT(0x1f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 025B
        gbc.setState(0x6e0d, 0x5d53, 0xfcc0, 0xfaed, 0x916a, 0xca40, 0x1, 0x0);
        gbc.writeMem(0x6e0d, { 0x86 });
        gbc.writeMem(0xca40, { 0x9a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5d53, gbc.sp());
        EXPECT(0x6e0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xca40));
        // 86 025C
        gbc.setState(0xc915, 0x8906, 0x5620, 0xa1b3, 0xca0b, 0x3c5f, 0x1, 0x1);
        gbc.writeMem(0x3c5f, { 0x11 });
        gbc.writeMem(0xc915, { 0x86 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8906, gbc.sp());
        EXPECT(0xc916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc915));
        // 86 025D
        gbc.setState(0x7e7a, 0x7bd4, 0x90a0, 0xdb89, 0x326b, 0x96a9, 0x1, 0x1);
        gbc.writeMem(0x7e7a, { 0x86 });
        gbc.writeMem(0x96a9, { 0x40 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7bd4, gbc.sp());
        EXPECT(0x7e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x96a9));
        // 86 025E
        gbc.setState(0x2b1f, 0xf826, 0x7c50, 0xb7fb, 0x5074, 0x276e, 0x1, 0x0);
        gbc.writeMem(0x276e, { 0x6b });
        gbc.writeMem(0x2b1f, { 0x86 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf826, gbc.sp());
        EXPECT(0x2b20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 025F
        gbc.setState(0x961c, 0xe425, 0x7180, 0x259f, 0xbbdd, 0xe912, 0x1, 0x1);
        gbc.writeMem(0x961c, { 0x86 });
        gbc.writeMem(0xe912, { 0xe7 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe425, gbc.sp());
        EXPECT(0x961d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x961c));
        EXPECT(0xe7, gbc.readMem(0xe912));
        // 86 0260
        gbc.setState(0x85bf, 0xd989, 0x8a10, 0x759a, 0x7ccd, 0x2165, 0x1, 0x0);
        gbc.writeMem(0x2165, { 0xf1 });
        gbc.writeMem(0x85bf, { 0x86 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd989, gbc.sp());
        EXPECT(0x85c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x85bf));
        // 86 0261
        gbc.setState(0xb1e3, 0xa849, 0xb3d0, 0xc714, 0x945, 0x9e45, 0x0, 0x1);
        gbc.writeMem(0x9e45, { 0xa9 });
        gbc.writeMem(0xb1e3, { 0x86 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa849, gbc.sp());
        EXPECT(0xb1e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x9e45));
        EXPECT(0x86, gbc.readMem(0xb1e3));
        // 86 0262
        gbc.setState(0x99f4, 0x5a1b, 0xe5d0, 0x44f3, 0xfc27, 0x5cf4, 0x1, 0x1);
        gbc.writeMem(0x5cf4, { 0x76 });
        gbc.writeMem(0x99f4, { 0x86 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5a1b, gbc.sp());
        EXPECT(0x99f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x99f4));
        // 86 0263
        gbc.setState(0x965d, 0xf9f7, 0x7750, 0x7a6f, 0x1903, 0x870c, 0x0, 0x0);
        gbc.writeMem(0x870c, { 0xc3 });
        gbc.writeMem(0x965d, { 0x86 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf9f7, gbc.sp());
        EXPECT(0x965e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x870c));
        EXPECT(0x86, gbc.readMem(0x965d));
        // 86 0264
        gbc.setState(0x7881, 0xa0dc, 0xcf60, 0x7571, 0x4bb2, 0x7beb, 0x0, 0x0);
        gbc.writeMem(0x7881, { 0x86 });
        gbc.writeMem(0x7beb, { 0x33 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa0dc, gbc.sp());
        EXPECT(0x7882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0265
        gbc.setState(0x3371, 0xd9b6, 0xcc70, 0xb408, 0xa021, 0x9a7d, 0x1, 0x1);
        gbc.writeMem(0x3371, { 0x86 });
        gbc.writeMem(0x9a7d, { 0x1d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd9b6, gbc.sp());
        EXPECT(0x3372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9a7d));
        // 86 0266
        gbc.setState(0x92a7, 0xd883, 0x30b0, 0x91a1, 0xfbf8, 0xf4cd, 0x0, 0x0);
        gbc.writeMem(0x92a7, { 0x86 });
        gbc.writeMem(0xf4cd, { 0x63 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd883, gbc.sp());
        EXPECT(0x92a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x92a7));
        EXPECT(0x63, gbc.readMem(0xf4cd));
        // 86 0267
        gbc.setState(0xd12b, 0x14d0, 0x4da0, 0x173c, 0xd48c, 0x253, 0x0, 0x1);
        gbc.writeMem(0x253, { 0x4b });
        gbc.writeMem(0xd12b, { 0x86 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x14d0, gbc.sp());
        EXPECT(0xd12c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd12b));
        // 86 0268
        gbc.setState(0xad44, 0x257e, 0xd020, 0xc11c, 0x1c1f, 0x56ae, 0x1, 0x0);
        gbc.writeMem(0x56ae, { 0x1f });
        gbc.writeMem(0xad44, { 0x86 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x257e, gbc.sp());
        EXPECT(0xad45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xad44));
        // 86 026A
        gbc.setState(0xd12f, 0x756d, 0x9ca0, 0x735d, 0xbba2, 0x4990, 0x1, 0x1);
        gbc.writeMem(0x4990, { 0x92 });
        gbc.writeMem(0xd12f, { 0x86 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x756d, gbc.sp());
        EXPECT(0xd130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd12f));
        // 86 026B
        gbc.setState(0x1aa7, 0x783a, 0x2f50, 0xbc9a, 0x98b2, 0x3686, 0x1, 0x1);
        gbc.writeMem(0x1aa7, { 0x86 });
        gbc.writeMem(0x3686, { 0x16 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x783a, gbc.sp());
        EXPECT(0x1aa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 026C
        gbc.setState(0xc593, 0xe9d5, 0xc840, 0xec8d, 0x7f27, 0xf2f3, 0x0, 0x1);
        gbc.writeMem(0xc593, { 0x86 });
        gbc.writeMem(0xf2f3, { 0x89 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe9d5, gbc.sp());
        EXPECT(0xc594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc593));
        EXPECT(0x89, gbc.readMem(0xf2f3));
        // 86 026E
        gbc.setState(0x31dc, 0x37d8, 0xc870, 0xfd98, 0x39b7, 0x2099, 0x0, 0x1);
        gbc.writeMem(0x2099, { 0xce });
        gbc.writeMem(0x31dc, { 0x86 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x37d8, gbc.sp());
        EXPECT(0x31dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 026F
        gbc.setState(0x6b6c, 0xfa69, 0x1230, 0x4e21, 0xd6a7, 0x74ad, 0x1, 0x1);
        gbc.writeMem(0x6b6c, { 0x86 });
        gbc.writeMem(0x74ad, { 0x27 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfa69, gbc.sp());
        EXPECT(0x6b6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0270
        gbc.setState(0x896a, 0xcd29, 0x1230, 0xc37c, 0x58f7, 0x21ad, 0x1, 0x0);
        gbc.writeMem(0x21ad, { 0xec });
        gbc.writeMem(0x896a, { 0x86 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xcd29, gbc.sp());
        EXPECT(0x896b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x896a));
        // 86 0271
        gbc.setState(0x7907, 0xc2f7, 0x9b10, 0xac0c, 0xb5d2, 0xa30a, 0x1, 0x0);
        gbc.writeMem(0x7907, { 0x86 });
        gbc.writeMem(0xa30a, { 0x1e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc2f7, gbc.sp());
        EXPECT(0x7908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xa30a));
        // 86 0272
        gbc.setState(0x68a3, 0x268c, 0x7be0, 0x8224, 0x669c, 0xa1a9, 0x0, 0x0);
        gbc.writeMem(0x68a3, { 0x86 });
        gbc.writeMem(0xa1a9, { 0x61 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x268c, gbc.sp());
        EXPECT(0x68a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa1a9));
        // 86 0273
        gbc.setState(0x8e16, 0x3df3, 0x3140, 0x6278, 0xd266, 0x57b2, 0x0, 0x1);
        gbc.writeMem(0x57b2, { 0xf1 });
        gbc.writeMem(0x8e16, { 0x86 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3df3, gbc.sp());
        EXPECT(0x8e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8e16));
        // 86 0274
        gbc.setState(0x731e, 0x5b8e, 0x1680, 0xb996, 0x8fd0, 0x579a, 0x1, 0x0);
        gbc.writeMem(0x579a, { 0x5c });
        gbc.writeMem(0x731e, { 0x86 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5b8e, gbc.sp());
        EXPECT(0x731f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0275
        gbc.setState(0x24c2, 0x2810, 0x8030, 0x3a9e, 0x50d4, 0x8c44, 0x1, 0x1);
        gbc.writeMem(0x24c2, { 0x86 });
        gbc.writeMem(0x8c44, { 0x4b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2810, gbc.sp());
        EXPECT(0x24c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8c44));
        // 86 0276
        gbc.setState(0x3d98, 0x745d, 0xd640, 0x668a, 0xf741, 0x475, 0x1, 0x1);
        gbc.writeMem(0x475, { 0x6f });
        gbc.writeMem(0x3d98, { 0x86 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x745d, gbc.sp());
        EXPECT(0x3d99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0277
        gbc.setState(0x6275, 0x6fdd, 0xcb10, 0x1d8a, 0xc332, 0x33fb, 0x1, 0x1);
        gbc.writeMem(0x33fb, { 0x86 });
        gbc.writeMem(0x6275, { 0x86 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6fdd, gbc.sp());
        EXPECT(0x6276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0278
        gbc.setState(0xe09, 0xe561, 0x7300, 0xabbc, 0xe500, 0x1aa5, 0x0, 0x1);
        gbc.writeMem(0xe09, { 0x86 });
        gbc.writeMem(0x1aa5, { 0xc9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe561, gbc.sp());
        EXPECT(0xe0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0279
        gbc.setState(0x710d, 0xf88c, 0xd630, 0x20ad, 0x2811, 0xdf2d, 0x1, 0x0);
        gbc.writeMem(0x710d, { 0x86 });
        gbc.writeMem(0xdf2d, { 0x5f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf88c, gbc.sp());
        EXPECT(0x710e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xdf2d));
        // 86 027A
        gbc.setState(0xc744, 0xbc5a, 0x6140, 0x7257, 0x5e1, 0x173b, 0x1, 0x0);
        gbc.writeMem(0x173b, { 0xbe });
        gbc.writeMem(0xc744, { 0x86 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbc5a, gbc.sp());
        EXPECT(0xc745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc744));
        // 86 027B
        gbc.setState(0x3202, 0x55f8, 0xb090, 0x105d, 0x9bdd, 0x28fd, 0x1, 0x0);
        gbc.writeMem(0x28fd, { 0xcb });
        gbc.writeMem(0x3202, { 0x86 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x55f8, gbc.sp());
        EXPECT(0x3203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 027C
        gbc.setState(0x5baa, 0x5620, 0x3e80, 0x3637, 0x4d2c, 0x45a3, 0x0, 0x1);
        gbc.writeMem(0x45a3, { 0xc });
        gbc.writeMem(0x5baa, { 0x86 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5620, gbc.sp());
        EXPECT(0x5bab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 027D
        gbc.setState(0x50df, 0x245d, 0xef50, 0x7b7, 0x2211, 0x4158, 0x0, 0x1);
        gbc.writeMem(0x4158, { 0x40 });
        gbc.writeMem(0x50df, { 0x86 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x245d, gbc.sp());
        EXPECT(0x50e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 027E
        gbc.setState(0x3c4f, 0x8eb0, 0x4e40, 0xd0ff, 0x1611, 0xc375, 0x1, 0x0);
        gbc.writeMem(0x3c4f, { 0x86 });
        gbc.writeMem(0xc375, { 0x74 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8eb0, gbc.sp());
        EXPECT(0x3c50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xc375));
        // 86 027F
        gbc.setState(0xae03, 0xdd5f, 0x3a20, 0x38c5, 0x655d, 0x7653, 0x0, 0x1);
        gbc.writeMem(0x7653, { 0xb2 });
        gbc.writeMem(0xae03, { 0x86 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdd5f, gbc.sp());
        EXPECT(0xae04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xae03));
        // 86 0280
        gbc.setState(0x917d, 0x4c62, 0xbf10, 0x6ec0, 0x2153, 0xedfe, 0x1, 0x1);
        gbc.writeMem(0x917d, { 0x86 });
        gbc.writeMem(0xedfe, { 0x1e });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4c62, gbc.sp());
        EXPECT(0x917e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x917d));
        EXPECT(0x1e, gbc.readMem(0xedfe));
        // 86 0282
        gbc.setState(0x5521, 0x6e4c, 0xbce0, 0xecce, 0x1f52, 0xe0b2, 0x0, 0x1);
        gbc.writeMem(0x5521, { 0x86 });
        gbc.writeMem(0xe0b2, { 0xb8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6e4c, gbc.sp());
        EXPECT(0x5522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xe0b2));
        // 86 0283
        gbc.setState(0x906c, 0xb6, 0xd20, 0x469b, 0x6589, 0x98e3, 0x0, 0x1);
        gbc.writeMem(0x906c, { 0x86 });
        gbc.writeMem(0x98e3, { 0xfa });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb6, gbc.sp());
        EXPECT(0x906d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x906c));
        EXPECT(0xfa, gbc.readMem(0x98e3));
        // 86 0284
        gbc.setState(0xa3c9, 0x486f, 0x7340, 0xb348, 0xb8f4, 0x840b, 0x1, 0x0);
        gbc.writeMem(0x840b, { 0x84 });
        gbc.writeMem(0xa3c9, { 0x86 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x486f, gbc.sp());
        EXPECT(0xa3ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x840b));
        EXPECT(0x86, gbc.readMem(0xa3c9));
        // 86 0285
        gbc.setState(0xc019, 0x88cd, 0x71c0, 0x9864, 0x65da, 0x376a, 0x0, 0x1);
        gbc.writeMem(0x376a, { 0x3d });
        gbc.writeMem(0xc019, { 0x86 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x88cd, gbc.sp());
        EXPECT(0xc01a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc019));
        // 86 0286
        gbc.setState(0x177f, 0xf861, 0x7ed0, 0xd343, 0x95bc, 0xff7, 0x1, 0x0);
        gbc.writeMem(0xff7, { 0xe2 });
        gbc.writeMem(0x177f, { 0x86 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf861, gbc.sp());
        EXPECT(0x1780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0287
        gbc.setState(0x349d, 0x3250, 0x78c0, 0x510f, 0x2428, 0x327a, 0x0, 0x1);
        gbc.writeMem(0x327a, { 0x74 });
        gbc.writeMem(0x349d, { 0x86 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3250, gbc.sp());
        EXPECT(0x349e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0288
        gbc.setState(0xd466, 0xc23f, 0xe530, 0x3136, 0x7600, 0x8b12, 0x1, 0x0);
        gbc.writeMem(0x8b12, { 0xf7 });
        gbc.writeMem(0xd466, { 0x86 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc23f, gbc.sp());
        EXPECT(0xd467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8b12));
        EXPECT(0x86, gbc.readMem(0xd466));
        // 86 0289
        gbc.setState(0x66f0, 0xe513, 0xe560, 0xbbb2, 0x3d10, 0x87dd, 0x1, 0x1);
        gbc.writeMem(0x66f0, { 0x86 });
        gbc.writeMem(0x87dd, { 0x45 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe513, gbc.sp());
        EXPECT(0x66f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x87dd));
        // 86 028A
        gbc.setState(0x57e5, 0x4ebc, 0x8a30, 0xa7cc, 0xfb1, 0x9f37, 0x1, 0x0);
        gbc.writeMem(0x57e5, { 0x86 });
        gbc.writeMem(0x9f37, { 0xb2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4ebc, gbc.sp());
        EXPECT(0x57e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9f37));
        // 86 028B
        gbc.setState(0x8695, 0x5ba2, 0x3360, 0xdebd, 0x8a06, 0xffd7, 0x1, 0x0);
        gbc.writeMem(0x8695, { 0x86 });
        gbc.writeMem(0xffd7, { 0x96 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5ba2, gbc.sp());
        EXPECT(0x8696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8695));
        EXPECT(0x96, gbc.readMem(0xffd7));
        // 86 028C
        gbc.setState(0xc001, 0xa037, 0x6290, 0xab95, 0xb9bd, 0x8098, 0x0, 0x1);
        gbc.writeMem(0x8098, { 0x76 });
        gbc.writeMem(0xc001, { 0x86 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa037, gbc.sp());
        EXPECT(0xc002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8098));
        EXPECT(0x86, gbc.readMem(0xc001));
        // 86 028D
        gbc.setState(0xaf64, 0x2440, 0x9c00, 0x38cb, 0x4180, 0xa6ee, 0x1, 0x1);
        gbc.writeMem(0xa6ee, { 0xfb });
        gbc.writeMem(0xaf64, { 0x86 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2440, gbc.sp());
        EXPECT(0xaf65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xa6ee));
        EXPECT(0x86, gbc.readMem(0xaf64));
        // 86 028E
        gbc.setState(0xb009, 0x6e9, 0x96f0, 0x5d02, 0x6066, 0x815a, 0x1, 0x0);
        gbc.writeMem(0x815a, { 0x4d });
        gbc.writeMem(0xb009, { 0x86 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6e9, gbc.sp());
        EXPECT(0xb00a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x815a));
        EXPECT(0x86, gbc.readMem(0xb009));
        // 86 028F
        gbc.setState(0xea4a, 0x89d8, 0x82f0, 0xc700, 0xfb92, 0x7cc3, 0x1, 0x1);
        gbc.writeMem(0x7cc3, { 0xe4 });
        gbc.writeMem(0xea4a, { 0x86 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x89d8, gbc.sp());
        EXPECT(0xea4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xea4a));
        // 86 0290
        gbc.setState(0x8c39, 0xd0bf, 0x9590, 0x326d, 0x7f04, 0x1674, 0x0, 0x1);
        gbc.writeMem(0x1674, { 0xd });
        gbc.writeMem(0x8c39, { 0x86 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd0bf, gbc.sp());
        EXPECT(0x8c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8c39));
        // 86 0291
        gbc.setState(0x8d86, 0x1aac, 0xa720, 0xb48d, 0x1434, 0x57ef, 0x1, 0x1);
        gbc.writeMem(0x57ef, { 0x4d });
        gbc.writeMem(0x8d86, { 0x86 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1aac, gbc.sp());
        EXPECT(0x8d87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8d86));
        // 86 0292
        gbc.setState(0xb3cb, 0x302d, 0xe360, 0x1836, 0xfe75, 0xb940, 0x1, 0x0);
        gbc.writeMem(0xb3cb, { 0x86 });
        gbc.writeMem(0xb940, { 0xc8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x302d, gbc.sp());
        EXPECT(0xb3cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb3cb));
        EXPECT(0xc8, gbc.readMem(0xb940));
        // 86 0293
        gbc.setState(0x4128, 0x2c3a, 0xf4d0, 0xb0fd, 0xacc9, 0xc669, 0x1, 0x0);
        gbc.writeMem(0x4128, { 0x86 });
        gbc.writeMem(0xc669, { 0x69 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2c3a, gbc.sp());
        EXPECT(0x4129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc669));
        // 86 0294
        gbc.setState(0x83a0, 0x7d80, 0x3d10, 0x6535, 0x651d, 0x9f51, 0x0, 0x1);
        gbc.writeMem(0x83a0, { 0x86 });
        gbc.writeMem(0x9f51, { 0x57 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7d80, gbc.sp());
        EXPECT(0x83a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x83a0));
        EXPECT(0x57, gbc.readMem(0x9f51));
        // 86 0295
        gbc.setState(0xc5dc, 0x9f82, 0x3f00, 0x95cd, 0x4c16, 0xf1b1, 0x0, 0x1);
        gbc.writeMem(0xc5dc, { 0x86 });
        gbc.writeMem(0xf1b1, { 0xf2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9f82, gbc.sp());
        EXPECT(0xc5dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc5dc));
        EXPECT(0xf2, gbc.readMem(0xf1b1));
        // 86 0296
        gbc.setState(0x59e4, 0xca6b, 0xfbc0, 0x46bc, 0x2592, 0x185a, 0x1, 0x0);
        gbc.writeMem(0x185a, { 0xed });
        gbc.writeMem(0x59e4, { 0x86 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xca6b, gbc.sp());
        EXPECT(0x59e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0297
        gbc.setState(0x70ae, 0x7401, 0x97c0, 0xf4d, 0xd849, 0x35df, 0x1, 0x0);
        gbc.writeMem(0x35df, { 0xa5 });
        gbc.writeMem(0x70ae, { 0x86 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7401, gbc.sp());
        EXPECT(0x70af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0298
        gbc.setState(0x12d9, 0x4744, 0x64c0, 0x45a7, 0x66c3, 0xfd1, 0x0, 0x1);
        gbc.writeMem(0xfd1, { 0x4c });
        gbc.writeMem(0x12d9, { 0x86 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4744, gbc.sp());
        EXPECT(0x12da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0299
        gbc.setState(0x5dac, 0xfb42, 0xfcf0, 0x5d54, 0x2566, 0xbd54, 0x1, 0x0);
        gbc.writeMem(0x5dac, { 0x86 });
        gbc.writeMem(0xbd54, { 0x6c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfb42, gbc.sp());
        EXPECT(0x5dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xbd54));
        // 86 029A
        gbc.setState(0x968a, 0x3ea5, 0x7fb0, 0x898d, 0x4d40, 0x71b0, 0x0, 0x0);
        gbc.writeMem(0x71b0, { 0x1b });
        gbc.writeMem(0x968a, { 0x86 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3ea5, gbc.sp());
        EXPECT(0x968b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x968a));
        // 86 029B
        gbc.setState(0x7d9a, 0x4b63, 0x6f40, 0x66b, 0x7e3f, 0x3240, 0x0, 0x0);
        gbc.writeMem(0x3240, { 0xc7 });
        gbc.writeMem(0x7d9a, { 0x86 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4b63, gbc.sp());
        EXPECT(0x7d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 029C
        gbc.setState(0x1220, 0xc6c1, 0xb830, 0x68cb, 0xb69, 0xf85b, 0x0, 0x1);
        gbc.writeMem(0x1220, { 0x86 });
        gbc.writeMem(0xf85b, { 0x3c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc6c1, gbc.sp());
        EXPECT(0x1221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xf85b));
        // 86 029D
        gbc.setState(0xb5e4, 0xc7ca, 0xe490, 0xee20, 0xb322, 0x4c65, 0x0, 0x1);
        gbc.writeMem(0x4c65, { 0xab });
        gbc.writeMem(0xb5e4, { 0x86 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc7ca, gbc.sp());
        EXPECT(0xb5e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb5e4));
        // 86 029E
        gbc.setState(0x32d, 0xc544, 0x9350, 0xd638, 0x7d69, 0xe89a, 0x1, 0x1);
        gbc.writeMem(0x32d, { 0x86 });
        gbc.writeMem(0xe89a, { 0x1c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc544, gbc.sp());
        EXPECT(0x32e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xe89a));
        // 86 029F
        gbc.setState(0x5314, 0x825f, 0x4410, 0xba7f, 0xaa60, 0xa89e, 0x0, 0x0);
        gbc.writeMem(0x5314, { 0x86 });
        gbc.writeMem(0xa89e, { 0x82 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x825f, gbc.sp());
        EXPECT(0x5315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa89e));
        // 86 02A0
        gbc.setState(0x6095, 0xa887, 0x8890, 0x98db, 0x201, 0x84d9, 0x1, 0x0);
        gbc.writeMem(0x6095, { 0x86 });
        gbc.writeMem(0x84d9, { 0xc8 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa887, gbc.sp());
        EXPECT(0x6096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x84d9));
        // 86 02A1
        gbc.setState(0xa82, 0xe351, 0xb0a0, 0x920f, 0x8077, 0x8a3a, 0x0, 0x1);
        gbc.writeMem(0xa82, { 0x86 });
        gbc.writeMem(0x8a3a, { 0x1d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe351, gbc.sp());
        EXPECT(0xa83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8a3a));
        // 86 02A2
        gbc.setState(0xb3ff, 0x678d, 0x8de0, 0xfba7, 0xb96a, 0x750f, 0x0, 0x1);
        gbc.writeMem(0x750f, { 0xaf });
        gbc.writeMem(0xb3ff, { 0x86 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x678d, gbc.sp());
        EXPECT(0xb400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb3ff));
        // 86 02A3
        gbc.setState(0xee3, 0x66bf, 0x77a0, 0x69fa, 0x3824, 0xc767, 0x0, 0x1);
        gbc.writeMem(0xee3, { 0x86 });
        gbc.writeMem(0xc767, { 0x17 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x66bf, gbc.sp());
        EXPECT(0xee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xc767));
        // 86 02A5
        gbc.setState(0x8bf2, 0x22c5, 0x9450, 0xa623, 0xae70, 0xd61, 0x0, 0x1);
        gbc.writeMem(0xd61, { 0x38 });
        gbc.writeMem(0x8bf2, { 0x86 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x22c5, gbc.sp());
        EXPECT(0x8bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8bf2));
        // 86 02A6
        gbc.setState(0xebb1, 0xc5e6, 0x42f0, 0x6b58, 0x3358, 0xaf09, 0x1, 0x1);
        gbc.writeMem(0xaf09, { 0xe9 });
        gbc.writeMem(0xebb1, { 0x86 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc5e6, gbc.sp());
        EXPECT(0xebb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xaf09));
        EXPECT(0x86, gbc.readMem(0xebb1));
        // 86 02A7
        gbc.setState(0x8b2c, 0x53e6, 0x2d60, 0xf4e6, 0xcbed, 0x1d5e, 0x0, 0x0);
        gbc.writeMem(0x1d5e, { 0x47 });
        gbc.writeMem(0x8b2c, { 0x86 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x53e6, gbc.sp());
        EXPECT(0x8b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8b2c));
        // 86 02A8
        gbc.setState(0xb15d, 0x927d, 0xc310, 0x77a4, 0xc7e4, 0x6480, 0x0, 0x1);
        gbc.writeMem(0x6480, { 0xdb });
        gbc.writeMem(0xb15d, { 0x86 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x927d, gbc.sp());
        EXPECT(0xb15e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb15d));
        // 86 02A9
        gbc.setState(0xd419, 0x9208, 0x7cb0, 0x44b6, 0x5f2d, 0xff3d, 0x1, 0x0);
        gbc.writeMem(0xd419, { 0x86 });
        gbc.writeMem(0xff3d, { 0xcb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9208, gbc.sp());
        EXPECT(0xd41a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd419));
        EXPECT(0xcb, gbc.readMem(0xff3d));
        // 86 02AA
        gbc.setState(0x98f6, 0x9a42, 0xa910, 0x1158, 0x12e7, 0xd7c2, 0x1, 0x0);
        gbc.writeMem(0x98f6, { 0x86 });
        gbc.writeMem(0xd7c2, { 0xff });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9a42, gbc.sp());
        EXPECT(0x98f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x98f6));
        EXPECT(0xff, gbc.readMem(0xd7c2));
        // 86 02AB
        gbc.setState(0x508b, 0x678, 0xcc30, 0x154a, 0x7e62, 0x5489, 0x0, 0x1);
        gbc.writeMem(0x508b, { 0x86 });
        gbc.writeMem(0x5489, { 0x14 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x678, gbc.sp());
        EXPECT(0x508c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 02AC
        gbc.setState(0xd858, 0xc65b, 0xd710, 0x756d, 0xd96e, 0x949b, 0x1, 0x1);
        gbc.writeMem(0x949b, { 0xb1 });
        gbc.writeMem(0xd858, { 0x86 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc65b, gbc.sp());
        EXPECT(0xd859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x949b));
        EXPECT(0x86, gbc.readMem(0xd858));
        // 86 02AD
        gbc.setState(0x8edf, 0x1c74, 0x3f00, 0x2342, 0x1e07, 0x5c2d, 0x1, 0x0);
        gbc.writeMem(0x5c2d, { 0x9f });
        gbc.writeMem(0x8edf, { 0x86 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1c74, gbc.sp());
        EXPECT(0x8ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8edf));
        // 86 02AE
        gbc.setState(0x38b7, 0x49c0, 0x6810, 0x2633, 0x4930, 0x41bd, 0x1, 0x1);
        gbc.writeMem(0x38b7, { 0x86 });
        gbc.writeMem(0x41bd, { 0x2c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x49c0, gbc.sp());
        EXPECT(0x38b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 02AF
        gbc.setState(0xdbb5, 0x8f83, 0x5440, 0x65e4, 0x3b82, 0xb891, 0x0, 0x0);
        gbc.writeMem(0xb891, { 0x66 });
        gbc.writeMem(0xdbb5, { 0x86 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8f83, gbc.sp());
        EXPECT(0xdbb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb891));
        EXPECT(0x86, gbc.readMem(0xdbb5));
        // 86 02B0
        gbc.setState(0x970a, 0x681d, 0xc970, 0x22cc, 0x6172, 0xf9d8, 0x1, 0x0);
        gbc.writeMem(0x970a, { 0x86 });
        gbc.writeMem(0xf9d8, { 0x9f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x681d, gbc.sp());
        EXPECT(0x970b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x970a));
        EXPECT(0x9f, gbc.readMem(0xf9d8));
        // 86 02B2
        gbc.setState(0x9a3f, 0x49d6, 0x5f80, 0xe726, 0x4cf, 0x8ef0, 0x1, 0x1);
        gbc.writeMem(0x8ef0, { 0xb9 });
        gbc.writeMem(0x9a3f, { 0x86 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x49d6, gbc.sp());
        EXPECT(0x9a40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8ef0));
        EXPECT(0x86, gbc.readMem(0x9a3f));
        // 86 02B3
        gbc.setState(0x28e1, 0xbbbe, 0xec50, 0x9187, 0xa38b, 0xc8ae, 0x0, 0x1);
        gbc.writeMem(0x28e1, { 0x86 });
        gbc.writeMem(0xc8ae, { 0x33 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xbbbe, gbc.sp());
        EXPECT(0x28e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc8ae));
        // 86 02B4
        gbc.setState(0x5b35, 0x90b7, 0x8c50, 0x88bd, 0x85a7, 0x3694, 0x1, 0x1);
        gbc.writeMem(0x3694, { 0xff });
        gbc.writeMem(0x5b35, { 0x86 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x90b7, gbc.sp());
        EXPECT(0x5b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 02B5
        gbc.setState(0xdd3a, 0xe86b, 0x4a20, 0xf291, 0x116, 0xf449, 0x0, 0x1);
        gbc.writeMem(0xdd3a, { 0x86 });
        gbc.writeMem(0xf449, { 0x8f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe86b, gbc.sp());
        EXPECT(0xdd3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xdd3a));
        EXPECT(0x8f, gbc.readMem(0xf449));
        // 86 02B6
        gbc.setState(0x5819, 0x7946, 0xc650, 0xf911, 0x2d07, 0x8d39, 0x0, 0x0);
        gbc.writeMem(0x5819, { 0x86 });
        gbc.writeMem(0x8d39, { 0x39 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7946, gbc.sp());
        EXPECT(0x581a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x8d39));
        // 86 02B7
        gbc.setState(0xaa0c, 0x33cf, 0xa9e0, 0xfd23, 0x89c8, 0x942d, 0x1, 0x0);
        gbc.writeMem(0x942d, { 0x37 });
        gbc.writeMem(0xaa0c, { 0x86 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x33cf, gbc.sp());
        EXPECT(0xaa0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x942d));
        EXPECT(0x86, gbc.readMem(0xaa0c));
        // 86 02B8
        gbc.setState(0x7011, 0x5e16, 0x7c00, 0x37b0, 0xb04a, 0x658f, 0x0, 0x0);
        gbc.writeMem(0x658f, { 0x5f });
        gbc.writeMem(0x7011, { 0x86 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5e16, gbc.sp());
        EXPECT(0x7012, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 02B9
        gbc.setState(0x15f9, 0x7591, 0x2e10, 0x8410, 0xe2f7, 0xfbc, 0x0, 0x0);
        gbc.writeMem(0xfbc, { 0xdf });
        gbc.writeMem(0x15f9, { 0x86 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7591, gbc.sp());
        EXPECT(0x15fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 02BA
        gbc.setState(0x54c9, 0x7bb0, 0x9a50, 0xe733, 0x8c9, 0x80e6, 0x0, 0x1);
        gbc.writeMem(0x54c9, { 0x86 });
        gbc.writeMem(0x80e6, { 0x86 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7bb0, gbc.sp());
        EXPECT(0x54ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x80e6));
        // 86 02BB
        gbc.setState(0x5e5, 0xe429, 0x2be0, 0x3382, 0xebd7, 0x322d, 0x0, 0x1);
        gbc.writeMem(0x5e5, { 0x86 });
        gbc.writeMem(0x322d, { 0x78 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe429, gbc.sp());
        EXPECT(0x5e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 02BC
        gbc.setState(0x25c, 0x3e4b, 0x4aa0, 0x620f, 0x516, 0x3811, 0x1, 0x1);
        gbc.writeMem(0x25c, { 0x86 });
        gbc.writeMem(0x3811, { 0xac });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3e4b, gbc.sp());
        EXPECT(0x25d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 02BD
        gbc.setState(0xedef, 0x58e8, 0x2c0, 0x109e, 0x333a, 0xd1c7, 0x1, 0x1);
        gbc.writeMem(0xd1c7, { 0xca });
        gbc.writeMem(0xedef, { 0x86 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x58e8, gbc.sp());
        EXPECT(0xedf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xd1c7));
        EXPECT(0x86, gbc.readMem(0xedef));
        // 86 02BE
        gbc.setState(0xbd51, 0xd0fa, 0x420, 0x3884, 0x3877, 0xb918, 0x0, 0x1);
        gbc.writeMem(0xb918, { 0x9f });
        gbc.writeMem(0xbd51, { 0x86 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd0fa, gbc.sp());
        EXPECT(0xbd52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb918));
        EXPECT(0x86, gbc.readMem(0xbd51));
        // 86 02BF
        gbc.setState(0x7945, 0x352c, 0x3d80, 0x93c4, 0xff67, 0xa999, 0x0, 0x0);
        gbc.writeMem(0x7945, { 0x86 });
        gbc.writeMem(0xa999, { 0xb7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x352c, gbc.sp());
        EXPECT(0x7946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa999));
        // 86 02C0
        gbc.setState(0xae8f, 0x5c1, 0xd770, 0x5174, 0xb72, 0x5e01, 0x1, 0x1);
        gbc.writeMem(0x5e01, { 0xf });
        gbc.writeMem(0xae8f, { 0x86 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5c1, gbc.sp());
        EXPECT(0xae90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xae8f));
        // 86 02C1
        gbc.setState(0x1b96, 0xab54, 0x6d40, 0xe4be, 0xc8a7, 0xda30, 0x0, 0x0);
        gbc.writeMem(0x1b96, { 0x86 });
        gbc.writeMem(0xda30, { 0x30 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xab54, gbc.sp());
        EXPECT(0x1b97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xda30));
        // 86 02C2
        gbc.setState(0x19b0, 0xc3cb, 0xe760, 0xa13, 0x7a5e, 0x6206, 0x1, 0x1);
        gbc.writeMem(0x19b0, { 0x86 });
        gbc.writeMem(0x6206, { 0xff });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc3cb, gbc.sp());
        EXPECT(0x19b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 02C3
        gbc.setState(0xa518, 0x747f, 0xc0d0, 0xaf6, 0xdbd, 0xee19, 0x1, 0x1);
        gbc.writeMem(0xa518, { 0x86 });
        gbc.writeMem(0xee19, { 0xac });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x747f, gbc.sp());
        EXPECT(0xa519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa518));
        EXPECT(0xac, gbc.readMem(0xee19));
        // 86 02C4
        gbc.setState(0x4f0c, 0xae51, 0x9120, 0xa0da, 0x9258, 0x3852, 0x1, 0x0);
        gbc.writeMem(0x3852, { 0xfb });
        gbc.writeMem(0x4f0c, { 0x86 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xae51, gbc.sp());
        EXPECT(0x4f0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 02C6
        gbc.setState(0x1b4a, 0x3b6d, 0xdb70, 0x7df0, 0x55c0, 0x3fb6, 0x0, 0x0);
        gbc.writeMem(0x1b4a, { 0x86 });
        gbc.writeMem(0x3fb6, { 0x8f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3b6d, gbc.sp());
        EXPECT(0x1b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 02C7
        gbc.setState(0xc4aa, 0x41d8, 0xf9b0, 0x76cf, 0xbfad, 0x8f77, 0x1, 0x0);
        gbc.writeMem(0x8f77, { 0x24 });
        gbc.writeMem(0xc4aa, { 0x86 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x41d8, gbc.sp());
        EXPECT(0xc4ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x8f77));
        EXPECT(0x86, gbc.readMem(0xc4aa));
        // 86 02C9
        gbc.setState(0xc9ec, 0xd004, 0x640, 0x6df2, 0xa512, 0x4254, 0x0, 0x0);
        gbc.writeMem(0x4254, { 0x77 });
        gbc.writeMem(0xc9ec, { 0x86 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd004, gbc.sp());
        EXPECT(0xc9ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc9ec));
        // 86 02CA
        gbc.setState(0x5af1, 0x2808, 0x9e00, 0xe164, 0xa722, 0xbba, 0x0, 0x0);
        gbc.writeMem(0xbba, { 0xe5 });
        gbc.writeMem(0x5af1, { 0x86 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2808, gbc.sp());
        EXPECT(0x5af2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 02CB
        gbc.setState(0x32ec, 0x8618, 0xb360, 0x5c6a, 0x9698, 0x3066, 0x1, 0x1);
        gbc.writeMem(0x3066, { 0x49 });
        gbc.writeMem(0x32ec, { 0x86 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8618, gbc.sp());
        EXPECT(0x32ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 02CD
        gbc.setState(0x157e, 0x3dd4, 0x3cb0, 0xf168, 0xaa43, 0xecaf, 0x0, 0x0);
        gbc.writeMem(0x157e, { 0x86 });
        gbc.writeMem(0xecaf, { 0x98 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3dd4, gbc.sp());
        EXPECT(0x157f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xecaf));
        // 86 02CE
        gbc.setState(0x923, 0x26df, 0x9380, 0xf00f, 0xef25, 0x159c, 0x0, 0x0);
        gbc.writeMem(0x923, { 0x86 });
        gbc.writeMem(0x159c, { 0x90 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x26df, gbc.sp());
        EXPECT(0x924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 02CF
        gbc.setState(0x3256, 0x88ea, 0x91e0, 0xd6b3, 0x9d3f, 0xba87, 0x0, 0x1);
        gbc.writeMem(0x3256, { 0x86 });
        gbc.writeMem(0xba87, { 0x8c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x88ea, gbc.sp());
        EXPECT(0x3257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xba87));
        // 86 02D0
        gbc.setState(0xa950, 0x9e23, 0x3e90, 0x56c2, 0xd419, 0xdb9b, 0x1, 0x1);
        gbc.writeMem(0xa950, { 0x86 });
        gbc.writeMem(0xdb9b, { 0xa4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9e23, gbc.sp());
        EXPECT(0xa951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa950));
        EXPECT(0xa4, gbc.readMem(0xdb9b));
        // 86 02D1
        gbc.setState(0xc04a, 0x893d, 0xafa0, 0x30bd, 0xbd40, 0x8082, 0x1, 0x1);
        gbc.writeMem(0x8082, { 0xc4 });
        gbc.writeMem(0xc04a, { 0x86 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x893d, gbc.sp());
        EXPECT(0xc04b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x8082));
        EXPECT(0x86, gbc.readMem(0xc04a));
        // 86 02D2
        gbc.setState(0x7fe3, 0x344b, 0x7040, 0xae0b, 0x4624, 0xf938, 0x1, 0x1);
        gbc.writeMem(0x7fe3, { 0x86 });
        gbc.writeMem(0xf938, { 0xb5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x344b, gbc.sp());
        EXPECT(0x7fe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xf938));
        // 86 02D3
        gbc.setState(0xb1fc, 0x76e7, 0x6c90, 0x12e7, 0x30c0, 0x1bc0, 0x1, 0x0);
        gbc.writeMem(0x1bc0, { 0xb7 });
        gbc.writeMem(0xb1fc, { 0x86 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x76e7, gbc.sp());
        EXPECT(0xb1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb1fc));
        // 86 02D4
        gbc.setState(0xb145, 0x52ad, 0x45b0, 0xdb30, 0xe295, 0xdada, 0x0, 0x0);
        gbc.writeMem(0xb145, { 0x86 });
        gbc.writeMem(0xdada, { 0x22 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x52ad, gbc.sp());
        EXPECT(0xb146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb145));
        EXPECT(0x22, gbc.readMem(0xdada));
        // 86 02D5
        gbc.setState(0x4ce2, 0x8a2d, 0x5120, 0x7356, 0x34ea, 0xe5c2, 0x0, 0x0);
        gbc.writeMem(0x4ce2, { 0x86 });
        gbc.writeMem(0xe5c2, { 0x79 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8a2d, gbc.sp());
        EXPECT(0x4ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe5c2));
        // 86 02D6
        gbc.setState(0x5a36, 0x74be, 0x62d0, 0xbbb8, 0x1b51, 0x1af5, 0x0, 0x0);
        gbc.writeMem(0x1af5, { 0xc7 });
        gbc.writeMem(0x5a36, { 0x86 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x74be, gbc.sp());
        EXPECT(0x5a37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 02D7
        gbc.setState(0x88bf, 0xd70a, 0xbe0, 0x14db, 0xea12, 0x42b2, 0x0, 0x1);
        gbc.writeMem(0x42b2, { 0xce });
        gbc.writeMem(0x88bf, { 0x86 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd70a, gbc.sp());
        EXPECT(0x88c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x88bf));
        // 86 02D8
        gbc.setState(0xd54e, 0x2f0e, 0xe4a0, 0xbddc, 0xe006, 0xf292, 0x1, 0x1);
        gbc.writeMem(0xd54e, { 0x86 });
        gbc.writeMem(0xf292, { 0x4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2f0e, gbc.sp());
        EXPECT(0xd54f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd54e));
        EXPECT(0x4, gbc.readMem(0xf292));
        // 86 02D9
        gbc.setState(0x5251, 0xd9fe, 0xac20, 0x5ef7, 0x70c5, 0x7e81, 0x0, 0x0);
        gbc.writeMem(0x5251, { 0x86 });
        gbc.writeMem(0x7e81, { 0xf0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd9fe, gbc.sp());
        EXPECT(0x5252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 02DA
        gbc.setState(0x1e2e, 0x840c, 0xc130, 0xa624, 0x4574, 0xf3d6, 0x1, 0x0);
        gbc.writeMem(0x1e2e, { 0x86 });
        gbc.writeMem(0xf3d6, { 0x30 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x840c, gbc.sp());
        EXPECT(0x1e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xf3d6));
        // 86 02DB
        gbc.setState(0xe196, 0x34f8, 0xdb70, 0x9c13, 0x112e, 0x9efb, 0x1, 0x1);
        gbc.writeMem(0x9efb, { 0xea });
        gbc.writeMem(0xe196, { 0x86 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x34f8, gbc.sp());
        EXPECT(0xe197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x9efb));
        EXPECT(0x86, gbc.readMem(0xe196));
        // 86 02DC
        gbc.setState(0x6841, 0xead7, 0xb00, 0x8581, 0xd5b5, 0x9c96, 0x1, 0x0);
        gbc.writeMem(0x6841, { 0x86 });
        gbc.writeMem(0x9c96, { 0xfd });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xead7, gbc.sp());
        EXPECT(0x6842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x9c96));
        // 86 02DD
        gbc.setState(0x2d54, 0x9b11, 0xbd60, 0x1e35, 0xc38, 0xde75, 0x0, 0x0);
        gbc.writeMem(0x2d54, { 0x86 });
        gbc.writeMem(0xde75, { 0x42 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9b11, gbc.sp());
        EXPECT(0x2d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xde75));
        // 86 02DE
        gbc.setState(0x1628, 0x285e, 0xfe00, 0xf119, 0x7b2f, 0xc951, 0x1, 0x0);
        gbc.writeMem(0x1628, { 0x86 });
        gbc.writeMem(0xc951, { 0x4f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x285e, gbc.sp());
        EXPECT(0x1629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xc951));
        // 86 02DF
        gbc.setState(0x46f4, 0xd74b, 0x4ac0, 0x7b31, 0xde7, 0x7613, 0x0, 0x1);
        gbc.writeMem(0x46f4, { 0x86 });
        gbc.writeMem(0x7613, { 0xd7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd74b, gbc.sp());
        EXPECT(0x46f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 02E0
        gbc.setState(0xe577, 0x1e62, 0xde30, 0x553c, 0xb328, 0x658c, 0x1, 0x1);
        gbc.writeMem(0x658c, { 0x7 });
        gbc.writeMem(0xe577, { 0x86 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1e62, gbc.sp());
        EXPECT(0xe578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xe577));
        // 86 02E1
        gbc.setState(0xb41e, 0x5a00, 0x4750, 0xe50c, 0xa534, 0xe54b, 0x0, 0x0);
        gbc.writeMem(0xb41e, { 0x86 });
        gbc.writeMem(0xe54b, { 0x92 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5a00, gbc.sp());
        EXPECT(0xb41f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb41e));
        EXPECT(0x92, gbc.readMem(0xe54b));
        // 86 02E2
        gbc.setState(0x9b9e, 0x9420, 0x5db0, 0x9a10, 0x1e99, 0x1435, 0x1, 0x1);
        gbc.writeMem(0x1435, { 0x3d });
        gbc.writeMem(0x9b9e, { 0x86 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9420, gbc.sp());
        EXPECT(0x9b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9b9e));
        // 86 02E3
        gbc.setState(0x35ce, 0xe2bc, 0x71b0, 0xd355, 0xde98, 0x9f9d, 0x1, 0x0);
        gbc.writeMem(0x35ce, { 0x86 });
        gbc.writeMem(0x9f9d, { 0x2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe2bc, gbc.sp());
        EXPECT(0x35cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x9f9d));
        // 86 02E4
        gbc.setState(0x8b24, 0x45e2, 0x1c60, 0xfd34, 0xe3bb, 0x2692, 0x0, 0x1);
        gbc.writeMem(0x2692, { 0xa2 });
        gbc.writeMem(0x8b24, { 0x86 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x45e2, gbc.sp());
        EXPECT(0x8b25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8b24));
        // 86 02E5
        gbc.setState(0xa427, 0xe27b, 0xf9d0, 0x6881, 0xf349, 0x30c4, 0x1, 0x1);
        gbc.writeMem(0x30c4, { 0xc3 });
        gbc.writeMem(0xa427, { 0x86 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe27b, gbc.sp());
        EXPECT(0xa428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa427));
        // 86 02E6
        gbc.setState(0x43b9, 0x17df, 0xb90, 0xafdd, 0x722f, 0x7ba8, 0x0, 0x1);
        gbc.writeMem(0x43b9, { 0x86 });
        gbc.writeMem(0x7ba8, { 0xe1 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x17df, gbc.sp());
        EXPECT(0x43ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 02E7
        gbc.setState(0x4fb, 0x6563, 0xfc50, 0xd35c, 0xd17d, 0x25e3, 0x0, 0x1);
        gbc.writeMem(0x4fb, { 0x86 });
        gbc.writeMem(0x25e3, { 0xb4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6563, gbc.sp());
        EXPECT(0x4fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 02E8
        gbc.setState(0xacc, 0x269c, 0xe910, 0xf5c2, 0x38e8, 0x7002, 0x1, 0x0);
        gbc.writeMem(0xacc, { 0x86 });
        gbc.writeMem(0x7002, { 0x4d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x269c, gbc.sp());
        EXPECT(0xacd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 02E9
        gbc.setState(0x905b, 0x3fb4, 0x1a00, 0x6391, 0xcc2a, 0x125d, 0x1, 0x0);
        gbc.writeMem(0x125d, { 0x0 });
        gbc.writeMem(0x905b, { 0x86 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3fb4, gbc.sp());
        EXPECT(0x905c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x905b));
        // 86 02EA
        gbc.setState(0x5d31, 0x343d, 0x92b0, 0x592c, 0x81df, 0xc220, 0x1, 0x0);
        gbc.writeMem(0x5d31, { 0x86 });
        gbc.writeMem(0xc220, { 0x8a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x343d, gbc.sp());
        EXPECT(0x5d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc220));
        // 86 02EB
        gbc.setState(0xb979, 0x4674, 0x9b80, 0x2259, 0x147a, 0x8a66, 0x1, 0x0);
        gbc.writeMem(0x8a66, { 0x8b });
        gbc.writeMem(0xb979, { 0x86 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4674, gbc.sp());
        EXPECT(0xb97a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x8a66));
        EXPECT(0x86, gbc.readMem(0xb979));
        // 86 02EE
        gbc.setState(0xd21e, 0xe314, 0xb40, 0xfc58, 0xd201, 0xa1e1, 0x1, 0x0);
        gbc.writeMem(0xa1e1, { 0x63 });
        gbc.writeMem(0xd21e, { 0x86 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe314, gbc.sp());
        EXPECT(0xd21f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xa1e1));
        EXPECT(0x86, gbc.readMem(0xd21e));
        // 86 02EF
        gbc.setState(0x6a3a, 0xd3f5, 0xe190, 0x8f88, 0xd818, 0xdf72, 0x0, 0x1);
        gbc.writeMem(0x6a3a, { 0x86 });
        gbc.writeMem(0xdf72, { 0x21 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd3f5, gbc.sp());
        EXPECT(0x6a3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xdf72));
        // 86 02F0
        gbc.setState(0x1a8c, 0xb0d3, 0x91a0, 0xb16b, 0xefbe, 0xd79, 0x0, 0x0);
        gbc.writeMem(0xd79, { 0x9 });
        gbc.writeMem(0x1a8c, { 0x86 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb0d3, gbc.sp());
        EXPECT(0x1a8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 02F1
        gbc.setState(0x80c5, 0xfa9d, 0x5d80, 0x93b7, 0xa5d0, 0xf1c, 0x0, 0x0);
        gbc.writeMem(0xf1c, { 0xd2 });
        gbc.writeMem(0x80c5, { 0x86 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfa9d, gbc.sp());
        EXPECT(0x80c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x80c5));
        // 86 02F2
        gbc.setState(0xc49e, 0x2c5, 0xb1a0, 0xd06c, 0x108d, 0xa6c5, 0x0, 0x0);
        gbc.writeMem(0xa6c5, { 0x30 });
        gbc.writeMem(0xc49e, { 0x86 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2c5, gbc.sp());
        EXPECT(0xc49f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xa6c5));
        EXPECT(0x86, gbc.readMem(0xc49e));
        // 86 02F3
        gbc.setState(0x8027, 0xc33a, 0x4850, 0x577e, 0xbeae, 0xe12c, 0x1, 0x0);
        gbc.writeMem(0x8027, { 0x86 });
        gbc.writeMem(0xe12c, { 0xcf });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc33a, gbc.sp());
        EXPECT(0x8028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8027));
        EXPECT(0xcf, gbc.readMem(0xe12c));
        // 86 02F4
        gbc.setState(0x6c16, 0x1c7f, 0x5810, 0x710d, 0x1af5, 0xc54d, 0x0, 0x1);
        gbc.writeMem(0x6c16, { 0x86 });
        gbc.writeMem(0xc54d, { 0x4c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1c7f, gbc.sp());
        EXPECT(0x6c17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc54d));
        // 86 02F5
        gbc.setState(0x1043, 0xcfea, 0x93c0, 0x6c7f, 0xf216, 0x9a9e, 0x1, 0x0);
        gbc.writeMem(0x1043, { 0x86 });
        gbc.writeMem(0x9a9e, { 0x73 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xcfea, gbc.sp());
        EXPECT(0x1044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x9a9e));
        // 86 02F6
        gbc.setState(0xa2a1, 0x1224, 0x58f0, 0x8922, 0xeaac, 0x8cf8, 0x0, 0x0);
        gbc.writeMem(0x8cf8, { 0x54 });
        gbc.writeMem(0xa2a1, { 0x86 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1224, gbc.sp());
        EXPECT(0xa2a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x8cf8));
        EXPECT(0x86, gbc.readMem(0xa2a1));
        // 86 02F9
        gbc.setState(0xb09f, 0xd556, 0xe620, 0x719a, 0xb983, 0x41a9, 0x0, 0x1);
        gbc.writeMem(0x41a9, { 0x4 });
        gbc.writeMem(0xb09f, { 0x86 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd556, gbc.sp());
        EXPECT(0xb0a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb09f));
        // 86 02FA
        gbc.setState(0xa5d, 0xa4d, 0xd130, 0x21dc, 0xf000, 0x9bfe, 0x1, 0x1);
        gbc.writeMem(0xa5d, { 0x86 });
        gbc.writeMem(0x9bfe, { 0x7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa4d, gbc.sp());
        EXPECT(0xa5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9bfe));
        // 86 02FB
        gbc.setState(0x17e8, 0x3a3, 0x7ee0, 0xd63f, 0xe098, 0xc630, 0x0, 0x0);
        gbc.writeMem(0x17e8, { 0x86 });
        gbc.writeMem(0xc630, { 0x7b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3a3, gbc.sp());
        EXPECT(0x17e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc630));
        // 86 02FC
        gbc.setState(0xb31, 0x3cce, 0xcf0, 0x5203, 0xf0ab, 0xc58d, 0x0, 0x1);
        gbc.writeMem(0xb31, { 0x86 });
        gbc.writeMem(0xc58d, { 0x21 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3cce, gbc.sp());
        EXPECT(0xb32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc58d));
        // 86 02FD
        gbc.setState(0x7f5b, 0xe24b, 0xe170, 0xae85, 0x461d, 0xb63e, 0x0, 0x1);
        gbc.writeMem(0x7f5b, { 0x86 });
        gbc.writeMem(0xb63e, { 0xa0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe24b, gbc.sp());
        EXPECT(0x7f5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xb63e));
        // 86 02FE
        gbc.setState(0xe887, 0x7431, 0xc250, 0x7d6c, 0x2dfb, 0x4d15, 0x0, 0x0);
        gbc.writeMem(0x4d15, { 0xb3 });
        gbc.writeMem(0xe887, { 0x86 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7431, gbc.sp());
        EXPECT(0xe888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xe887));
        // 86 02FF
        gbc.setState(0x2fc2, 0x6e24, 0x3190, 0xdf1, 0x4173, 0x7279, 0x1, 0x1);
        gbc.writeMem(0x2fc2, { 0x86 });
        gbc.writeMem(0x7279, { 0x4a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6e24, gbc.sp());
        EXPECT(0x2fc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0300
        gbc.setState(0x1398, 0xd668, 0x5bf0, 0x316a, 0x42c4, 0x9eee, 0x1, 0x1);
        gbc.writeMem(0x1398, { 0x86 });
        gbc.writeMem(0x9eee, { 0x3b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd668, gbc.sp());
        EXPECT(0x1399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9eee));
        // 86 0301
        gbc.setState(0x90db, 0xc0a, 0xaf70, 0x92b0, 0x769f, 0x9e5a, 0x0, 0x1);
        gbc.writeMem(0x90db, { 0x86 });
        gbc.writeMem(0x9e5a, { 0x57 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc0a, gbc.sp());
        EXPECT(0x90dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x90db));
        EXPECT(0x57, gbc.readMem(0x9e5a));
        // 86 0302
        gbc.setState(0x48d2, 0x387a, 0x78f0, 0xa715, 0x2982, 0x2892, 0x1, 0x1);
        gbc.writeMem(0x2892, { 0x52 });
        gbc.writeMem(0x48d2, { 0x86 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x387a, gbc.sp());
        EXPECT(0x48d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0303
        gbc.setState(0xdb82, 0xf4f3, 0x1e40, 0x762b, 0xdcac, 0x6d9e, 0x0, 0x1);
        gbc.writeMem(0x6d9e, { 0xae });
        gbc.writeMem(0xdb82, { 0x86 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf4f3, gbc.sp());
        EXPECT(0xdb83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xdb82));
        // 86 0305
        gbc.setState(0x5883, 0x4bf3, 0x1000, 0xd534, 0x2df8, 0x1013, 0x0, 0x1);
        gbc.writeMem(0x1013, { 0x90 });
        gbc.writeMem(0x5883, { 0x86 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4bf3, gbc.sp());
        EXPECT(0x5884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0306
        gbc.setState(0x16d0, 0x8500, 0x3c0, 0x3237, 0x2db3, 0x6b67, 0x0, 0x1);
        gbc.writeMem(0x16d0, { 0x86 });
        gbc.writeMem(0x6b67, { 0xee });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8500, gbc.sp());
        EXPECT(0x16d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0307
        gbc.setState(0x8822, 0xe705, 0x1e70, 0x7080, 0x12e4, 0xa2b9, 0x1, 0x0);
        gbc.writeMem(0x8822, { 0x86 });
        gbc.writeMem(0xa2b9, { 0xb5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe705, gbc.sp());
        EXPECT(0x8823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8822));
        EXPECT(0xb5, gbc.readMem(0xa2b9));
        // 86 0308
        gbc.setState(0xb82c, 0xaf91, 0x89e0, 0xd9dd, 0xbbab, 0x1ea3, 0x1, 0x1);
        gbc.writeMem(0x1ea3, { 0x9e });
        gbc.writeMem(0xb82c, { 0x86 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xaf91, gbc.sp());
        EXPECT(0xb82d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb82c));
        // 86 0309
        gbc.setState(0xc1c0, 0x4b44, 0x2a50, 0x723c, 0xb2c7, 0xdc7a, 0x1, 0x0);
        gbc.writeMem(0xc1c0, { 0x86 });
        gbc.writeMem(0xdc7a, { 0x16 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4b44, gbc.sp());
        EXPECT(0xc1c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc1c0));
        EXPECT(0x16, gbc.readMem(0xdc7a));
        // 86 030A
        gbc.setState(0x25d8, 0xa537, 0x7c30, 0x3f20, 0x957f, 0x1337, 0x0, 0x1);
        gbc.writeMem(0x1337, { 0xe0 });
        gbc.writeMem(0x25d8, { 0x86 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa537, gbc.sp());
        EXPECT(0x25d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 030B
        gbc.setState(0x4ddd, 0x5166, 0x80c0, 0x4e3e, 0x5772, 0xe278, 0x0, 0x0);
        gbc.writeMem(0x4ddd, { 0x86 });
        gbc.writeMem(0xe278, { 0x97 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5166, gbc.sp());
        EXPECT(0x4dde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xe278));
        // 86 030C
        gbc.setState(0x90d7, 0x657, 0x1430, 0x4014, 0x63de, 0xe235, 0x0, 0x1);
        gbc.writeMem(0x90d7, { 0x86 });
        gbc.writeMem(0xe235, { 0xe6 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x657, gbc.sp());
        EXPECT(0x90d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x90d7));
        EXPECT(0xe6, gbc.readMem(0xe235));
        // 86 030D
        gbc.setState(0x8139, 0x5080, 0x98f0, 0x2e23, 0x2955, 0x41cd, 0x0, 0x1);
        gbc.writeMem(0x41cd, { 0x27 });
        gbc.writeMem(0x8139, { 0x86 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5080, gbc.sp());
        EXPECT(0x813a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8139));
        // 86 030E
        gbc.setState(0x4e57, 0xadb9, 0x6540, 0xb740, 0x499e, 0x7b1c, 0x1, 0x1);
        gbc.writeMem(0x4e57, { 0x86 });
        gbc.writeMem(0x7b1c, { 0x4 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xadb9, gbc.sp());
        EXPECT(0x4e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 030F
        gbc.setState(0xc559, 0xe4ef, 0x5ed0, 0x6440, 0x8aa2, 0x37e9, 0x1, 0x0);
        gbc.writeMem(0x37e9, { 0x6f });
        gbc.writeMem(0xc559, { 0x86 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe4ef, gbc.sp());
        EXPECT(0xc55a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc559));
        // 86 0310
        gbc.setState(0xcde9, 0x710c, 0xef50, 0x28a0, 0xe10c, 0x57e7, 0x1, 0x0);
        gbc.writeMem(0x57e7, { 0x32 });
        gbc.writeMem(0xcde9, { 0x86 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x710c, gbc.sp());
        EXPECT(0xcdea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xcde9));
        // 86 0311
        gbc.setState(0x2fd7, 0x9cf, 0x2970, 0xceaa, 0xdf85, 0x84f2, 0x1, 0x0);
        gbc.writeMem(0x2fd7, { 0x86 });
        gbc.writeMem(0x84f2, { 0xe2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9cf, gbc.sp());
        EXPECT(0x2fd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x84f2));
        // 86 0312
        gbc.setState(0x2c60, 0x4831, 0xcc70, 0x421f, 0x8143, 0xb9b5, 0x1, 0x1);
        gbc.writeMem(0x2c60, { 0x86 });
        gbc.writeMem(0xb9b5, { 0x9e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4831, gbc.sp());
        EXPECT(0x2c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb9b5));
        // 86 0313
        gbc.setState(0x7ca7, 0x7d1e, 0x47f0, 0x444, 0x318a, 0xb9e8, 0x1, 0x0);
        gbc.writeMem(0x7ca7, { 0x86 });
        gbc.writeMem(0xb9e8, { 0xf5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7d1e, gbc.sp());
        EXPECT(0x7ca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb9e8));
        // 86 0314
        gbc.setState(0xebf0, 0x66f2, 0x1f00, 0x7ad, 0xd580, 0x26b6, 0x1, 0x1);
        gbc.writeMem(0x26b6, { 0x23 });
        gbc.writeMem(0xebf0, { 0x86 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x66f2, gbc.sp());
        EXPECT(0xebf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xebf0));
        // 86 0315
        gbc.setState(0xc35c, 0x9968, 0xbc0, 0xcddf, 0xcd15, 0x5fe0, 0x0, 0x1);
        gbc.writeMem(0x5fe0, { 0x6b });
        gbc.writeMem(0xc35c, { 0x86 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9968, gbc.sp());
        EXPECT(0xc35d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc35c));
        // 86 0316
        gbc.setState(0x8ee8, 0x22f6, 0x9a90, 0x50f7, 0xf76a, 0x62db, 0x0, 0x0);
        gbc.writeMem(0x62db, { 0xb0 });
        gbc.writeMem(0x8ee8, { 0x86 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x22f6, gbc.sp());
        EXPECT(0x8ee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8ee8));
        // 86 0317
        gbc.setState(0xe2df, 0xe6e5, 0x1460, 0x24a, 0x7075, 0xc377, 0x1, 0x1);
        gbc.writeMem(0xc377, { 0xc9 });
        gbc.writeMem(0xe2df, { 0x86 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe6e5, gbc.sp());
        EXPECT(0xe2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc377));
        EXPECT(0x86, gbc.readMem(0xe2df));
        // 86 0318
        gbc.setState(0x8b5, 0x4962, 0xfc00, 0xb654, 0x3def, 0x20a0, 0x0, 0x0);
        gbc.writeMem(0x8b5, { 0x86 });
        gbc.writeMem(0x20a0, { 0xd7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4962, gbc.sp());
        EXPECT(0x8b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0319
        gbc.setState(0xefe0, 0x1f27, 0xfc0, 0x740c, 0xb51f, 0x8e82, 0x1, 0x1);
        gbc.writeMem(0x8e82, { 0x2c });
        gbc.writeMem(0xefe0, { 0x86 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1f27, gbc.sp());
        EXPECT(0xefe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8e82));
        EXPECT(0x86, gbc.readMem(0xefe0));
        // 86 031A
        gbc.setState(0xeabc, 0xf0ca, 0xc960, 0x249a, 0x5e08, 0x8617, 0x0, 0x0);
        gbc.writeMem(0x8617, { 0xd7 });
        gbc.writeMem(0xeabc, { 0x86 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf0ca, gbc.sp());
        EXPECT(0xeabd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0x8617));
        EXPECT(0x86, gbc.readMem(0xeabc));
        // 86 031B
        gbc.setState(0x8923, 0xa317, 0x90d0, 0x84c, 0xc531, 0xbaf4, 0x1, 0x1);
        gbc.writeMem(0x8923, { 0x86 });
        gbc.writeMem(0xbaf4, { 0x13 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa317, gbc.sp());
        EXPECT(0x8924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8923));
        EXPECT(0x13, gbc.readMem(0xbaf4));
        // 86 031C
        gbc.setState(0x5e67, 0xcbbc, 0xdda0, 0x7ec6, 0xf049, 0xb710, 0x0, 0x1);
        gbc.writeMem(0x5e67, { 0x86 });
        gbc.writeMem(0xb710, { 0xfc });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcbbc, gbc.sp());
        EXPECT(0x5e68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xb710));
        // 86 031D
        gbc.setState(0xb200, 0x2ebe, 0x6140, 0x8f8, 0x1bdc, 0x48fd, 0x1, 0x0);
        gbc.writeMem(0x48fd, { 0x5a });
        gbc.writeMem(0xb200, { 0x86 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2ebe, gbc.sp());
        EXPECT(0xb201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb200));
        // 86 031E
        gbc.setState(0xddd7, 0xf723, 0xcaa0, 0x8c8c, 0x19b2, 0x30de, 0x1, 0x0);
        gbc.writeMem(0x30de, { 0x7a });
        gbc.writeMem(0xddd7, { 0x86 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf723, gbc.sp());
        EXPECT(0xddd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xddd7));
        // 86 031F
        gbc.setState(0x5c31, 0x1bb9, 0x8420, 0x4fce, 0xa85e, 0x1e0b, 0x1, 0x0);
        gbc.writeMem(0x1e0b, { 0x7 });
        gbc.writeMem(0x5c31, { 0x86 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1bb9, gbc.sp());
        EXPECT(0x5c32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0320
        gbc.setState(0xa8f0, 0xa35c, 0x29b0, 0x80e, 0x9268, 0xa7fe, 0x0, 0x0);
        gbc.writeMem(0xa7fe, { 0x39 });
        gbc.writeMem(0xa8f0, { 0x86 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa35c, gbc.sp());
        EXPECT(0xa8f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xa7fe));
        EXPECT(0x86, gbc.readMem(0xa8f0));
        // 86 0321
        gbc.setState(0xb26f, 0x6eaf, 0xce70, 0xb4a, 0xc0de, 0x7ad8, 0x1, 0x0);
        gbc.writeMem(0x7ad8, { 0xa7 });
        gbc.writeMem(0xb26f, { 0x86 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6eaf, gbc.sp());
        EXPECT(0xb270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb26f));
        // 86 0322
        gbc.setState(0x1d0c, 0x93c, 0x2370, 0xfe12, 0xedf1, 0x8a8, 0x0, 0x1);
        gbc.writeMem(0x8a8, { 0x46 });
        gbc.writeMem(0x1d0c, { 0x86 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x93c, gbc.sp());
        EXPECT(0x1d0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0323
        gbc.setState(0x7155, 0xa337, 0x6360, 0xad24, 0x1ec7, 0x4ff, 0x1, 0x1);
        gbc.writeMem(0x4ff, { 0x89 });
        gbc.writeMem(0x7155, { 0x86 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa337, gbc.sp());
        EXPECT(0x7156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0324
        gbc.setState(0x805d, 0xdb55, 0x1a20, 0x36d1, 0x322, 0x6d9, 0x0, 0x0);
        gbc.writeMem(0x6d9, { 0x60 });
        gbc.writeMem(0x805d, { 0x86 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xdb55, gbc.sp());
        EXPECT(0x805e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x805d));
        // 86 0325
        gbc.setState(0x909c, 0xcb2d, 0xf4d0, 0xacc9, 0x49a5, 0xec2f, 0x0, 0x0);
        gbc.writeMem(0x909c, { 0x86 });
        gbc.writeMem(0xec2f, { 0x28 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xcb2d, gbc.sp());
        EXPECT(0x909d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x909c));
        EXPECT(0x28, gbc.readMem(0xec2f));
        // 86 0326
        gbc.setState(0x98df, 0x76a0, 0x1950, 0x2417, 0xe1ec, 0xfe0c, 0x0, 0x0);
        gbc.writeMem(0x98df, { 0x86 });
        gbc.writeMem(0xfe0c, { 0x65 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x76a0, gbc.sp());
        EXPECT(0x98e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x98df));
        EXPECT(0x65, gbc.readMem(0xfe0c));
        // 86 0327
        gbc.setState(0x1734, 0x72d4, 0x22c0, 0x3767, 0xf4b4, 0x166b, 0x0, 0x1);
        gbc.writeMem(0x166b, { 0x38 });
        gbc.writeMem(0x1734, { 0x86 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x72d4, gbc.sp());
        EXPECT(0x1735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0328
        gbc.setState(0xdb6e, 0xbad, 0x1760, 0xc740, 0xed9e, 0x8b4b, 0x1, 0x1);
        gbc.writeMem(0x8b4b, { 0xe9 });
        gbc.writeMem(0xdb6e, { 0x86 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbad, gbc.sp());
        EXPECT(0xdb6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8b4b));
        EXPECT(0x86, gbc.readMem(0xdb6e));
        // 86 0329
        gbc.setState(0xbd0, 0xf990, 0xe960, 0x3999, 0x9aa, 0x70bc, 0x0, 0x1);
        gbc.writeMem(0xbd0, { 0x86 });
        gbc.writeMem(0x70bc, { 0x3b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf990, gbc.sp());
        EXPECT(0xbd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 032A
        gbc.setState(0xb7dc, 0x336d, 0xb680, 0xd5f2, 0xd731, 0x2282, 0x1, 0x0);
        gbc.writeMem(0x2282, { 0x55 });
        gbc.writeMem(0xb7dc, { 0x86 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x336d, gbc.sp());
        EXPECT(0xb7dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb7dc));
        // 86 032B
        gbc.setState(0x5da4, 0xbef6, 0x28e0, 0xa5a7, 0x68a1, 0x37ab, 0x1, 0x1);
        gbc.writeMem(0x37ab, { 0xd5 });
        gbc.writeMem(0x5da4, { 0x86 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbef6, gbc.sp());
        EXPECT(0x5da5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 032C
        gbc.setState(0x2738, 0xc336, 0x5cc0, 0x44d1, 0xabe1, 0xcc61, 0x0, 0x1);
        gbc.writeMem(0x2738, { 0x86 });
        gbc.writeMem(0xcc61, { 0xb5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc336, gbc.sp());
        EXPECT(0x2739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xcc61));
        // 86 032D
        gbc.setState(0x8a2d, 0x2930, 0xd7d0, 0xcd9b, 0x5d4d, 0x623e, 0x1, 0x1);
        gbc.writeMem(0x623e, { 0x29 });
        gbc.writeMem(0x8a2d, { 0x86 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2930, gbc.sp());
        EXPECT(0x8a2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8a2d));
        // 86 032E
        gbc.setState(0xea7a, 0x1f11, 0xa4b0, 0xf848, 0x8f36, 0x9532, 0x0, 0x1);
        gbc.writeMem(0x9532, { 0x96 });
        gbc.writeMem(0xea7a, { 0x86 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1f11, gbc.sp());
        EXPECT(0xea7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x9532));
        EXPECT(0x86, gbc.readMem(0xea7a));
        // 86 032F
        gbc.setState(0x76a, 0x7274, 0x8d00, 0xdac5, 0x7993, 0xbe8f, 0x0, 0x0);
        gbc.writeMem(0x76a, { 0x86 });
        gbc.writeMem(0xbe8f, { 0x19 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7274, gbc.sp());
        EXPECT(0x76b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbe8f));
        // 86 0330
        gbc.setState(0xae5f, 0xf455, 0x6670, 0xbb0f, 0x3a0a, 0xb0c1, 0x1, 0x1);
        gbc.writeMem(0xae5f, { 0x86 });
        gbc.writeMem(0xb0c1, { 0x21 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf455, gbc.sp());
        EXPECT(0xae60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xae5f));
        EXPECT(0x21, gbc.readMem(0xb0c1));
        // 86 0331
        gbc.setState(0x3e22, 0x8df, 0x6280, 0xd0c5, 0x6175, 0x428d, 0x0, 0x1);
        gbc.writeMem(0x3e22, { 0x86 });
        gbc.writeMem(0x428d, { 0x8a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8df, gbc.sp());
        EXPECT(0x3e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0332
        gbc.setState(0x7e35, 0xb698, 0xbaa0, 0xc5b, 0x2d33, 0xb2b9, 0x1, 0x0);
        gbc.writeMem(0x7e35, { 0x86 });
        gbc.writeMem(0xb2b9, { 0x3f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb698, gbc.sp());
        EXPECT(0x7e36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb2b9));
        // 86 0333
        gbc.setState(0x9282, 0x50, 0x8060, 0xf0a1, 0x9b55, 0xcef3, 0x1, 0x0);
        gbc.writeMem(0x9282, { 0x86 });
        gbc.writeMem(0xcef3, { 0xef });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x50, gbc.sp());
        EXPECT(0x9283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9282));
        EXPECT(0xef, gbc.readMem(0xcef3));
        // 86 0334
        gbc.setState(0x6c0f, 0x9220, 0x4090, 0xa923, 0x5951, 0x127b, 0x0, 0x0);
        gbc.writeMem(0x127b, { 0x6a });
        gbc.writeMem(0x6c0f, { 0x86 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9220, gbc.sp());
        EXPECT(0x6c10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0335
        gbc.setState(0x26e8, 0x220f, 0xf0c0, 0xc9f4, 0xa1b7, 0x25f5, 0x0, 0x0);
        gbc.writeMem(0x25f5, { 0xc6 });
        gbc.writeMem(0x26e8, { 0x86 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x220f, gbc.sp());
        EXPECT(0x26e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0336
        gbc.setState(0x9997, 0x74ed, 0x39f0, 0xc883, 0x4097, 0xcb84, 0x0, 0x0);
        gbc.writeMem(0x9997, { 0x86 });
        gbc.writeMem(0xcb84, { 0x5d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x74ed, gbc.sp());
        EXPECT(0x9998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9997));
        EXPECT(0x5d, gbc.readMem(0xcb84));
        // 86 0337
        gbc.setState(0x5df8, 0x5231, 0xfc30, 0x7e0c, 0xdadb, 0x7117, 0x1, 0x1);
        gbc.writeMem(0x5df8, { 0x86 });
        gbc.writeMem(0x7117, { 0x56 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5231, gbc.sp());
        EXPECT(0x5df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0338
        gbc.setState(0x2e3b, 0xa8c9, 0x4650, 0xc769, 0x7be7, 0x495d, 0x1, 0x1);
        gbc.writeMem(0x2e3b, { 0x86 });
        gbc.writeMem(0x495d, { 0xe1 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa8c9, gbc.sp());
        EXPECT(0x2e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0339
        gbc.setState(0x1104, 0x6ae2, 0x53a0, 0x1262, 0xeb5d, 0xf008, 0x1, 0x1);
        gbc.writeMem(0x1104, { 0x86 });
        gbc.writeMem(0xf008, { 0x2d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6ae2, gbc.sp());
        EXPECT(0x1105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xf008));
        // 86 033A
        gbc.setState(0xc98, 0x685f, 0xc9a0, 0x5059, 0xc2b1, 0x5d74, 0x0, 0x1);
        gbc.writeMem(0xc98, { 0x86 });
        gbc.writeMem(0x5d74, { 0x30 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x685f, gbc.sp());
        EXPECT(0xc99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 033B
        gbc.setState(0x4e93, 0xca21, 0x7d00, 0xb212, 0xf9df, 0xdb0a, 0x1, 0x1);
        gbc.writeMem(0x4e93, { 0x86 });
        gbc.writeMem(0xdb0a, { 0x81 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xca21, gbc.sp());
        EXPECT(0x4e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xdb0a));
        // 86 033C
        gbc.setState(0x2a6c, 0xb815, 0xb2f0, 0x8836, 0x79f1, 0xf1fc, 0x1, 0x1);
        gbc.writeMem(0x2a6c, { 0x86 });
        gbc.writeMem(0xf1fc, { 0x1b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb815, gbc.sp());
        EXPECT(0x2a6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xf1fc));
        // 86 033D
        gbc.setState(0x7c33, 0x5e8c, 0x2170, 0x8a23, 0x4a1d, 0xaf3e, 0x0, 0x0);
        gbc.writeMem(0x7c33, { 0x86 });
        gbc.writeMem(0xaf3e, { 0xcb });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5e8c, gbc.sp());
        EXPECT(0x7c34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf3e));
        // 86 033F
        gbc.setState(0x2f5a, 0x1405, 0x16a0, 0x4580, 0xe4e5, 0x75dd, 0x0, 0x0);
        gbc.writeMem(0x2f5a, { 0x86 });
        gbc.writeMem(0x75dd, { 0x44 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1405, gbc.sp());
        EXPECT(0x2f5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0340
        gbc.setState(0x5688, 0x5a88, 0xe440, 0xa69b, 0xd17c, 0x5873, 0x0, 0x1);
        gbc.writeMem(0x5688, { 0x86 });
        gbc.writeMem(0x5873, { 0xc4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5a88, gbc.sp());
        EXPECT(0x5689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0341
        gbc.setState(0xe50b, 0x125b, 0xa400, 0x5e9d, 0xf0eb, 0xed8c, 0x0, 0x1);
        gbc.writeMem(0xe50b, { 0x86 });
        gbc.writeMem(0xed8c, { 0x20 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x125b, gbc.sp());
        EXPECT(0xe50c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xe50b));
        EXPECT(0x20, gbc.readMem(0xed8c));
        // 86 0342
        gbc.setState(0x87f, 0x108c, 0x9c50, 0x2fec, 0x2d4e, 0xc71d, 0x1, 0x1);
        gbc.writeMem(0x87f, { 0x86 });
        gbc.writeMem(0xc71d, { 0x54 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x108c, gbc.sp());
        EXPECT(0x880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xc71d));
        // 86 0343
        gbc.setState(0x4eb0, 0xe356, 0x7810, 0xf2a9, 0x1424, 0x5c57, 0x0, 0x0);
        gbc.writeMem(0x4eb0, { 0x86 });
        gbc.writeMem(0x5c57, { 0x61 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe356, gbc.sp());
        EXPECT(0x4eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0344
        gbc.setState(0xc991, 0xcac7, 0x4ee0, 0x5ab0, 0x3d61, 0xd4b1, 0x0, 0x0);
        gbc.writeMem(0xc991, { 0x86 });
        gbc.writeMem(0xd4b1, { 0xfc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xcac7, gbc.sp());
        EXPECT(0xc992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc991));
        EXPECT(0xfc, gbc.readMem(0xd4b1));
        // 86 0345
        gbc.setState(0x74b0, 0x6cac, 0xffc0, 0x2cd7, 0x9b95, 0x39f3, 0x1, 0x0);
        gbc.writeMem(0x39f3, { 0x62 });
        gbc.writeMem(0x74b0, { 0x86 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6cac, gbc.sp());
        EXPECT(0x74b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0346
        gbc.setState(0x45f, 0xc05d, 0x6150, 0x71bf, 0x3ccf, 0x23e7, 0x0, 0x1);
        gbc.writeMem(0x45f, { 0x86 });
        gbc.writeMem(0x23e7, { 0xb4 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc05d, gbc.sp());
        EXPECT(0x460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0347
        gbc.setState(0x8aec, 0x6077, 0x3500, 0xfe76, 0x604, 0x5ca, 0x1, 0x1);
        gbc.writeMem(0x5ca, { 0x10 });
        gbc.writeMem(0x8aec, { 0x86 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6077, gbc.sp());
        EXPECT(0x8aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8aec));
        // 86 0348
        gbc.setState(0x45eb, 0x7d78, 0x4530, 0xe505, 0x27c2, 0xaa82, 0x0, 0x0);
        gbc.writeMem(0x45eb, { 0x86 });
        gbc.writeMem(0xaa82, { 0x28 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7d78, gbc.sp());
        EXPECT(0x45ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xaa82));
        // 86 0349
        gbc.setState(0xf8a, 0xb7f7, 0x1ab0, 0xd848, 0xc1f4, 0x14ec, 0x1, 0x0);
        gbc.writeMem(0xf8a, { 0x86 });
        gbc.writeMem(0x14ec, { 0x5a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb7f7, gbc.sp());
        EXPECT(0xf8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 034A
        gbc.setState(0x51c3, 0x581f, 0x1d30, 0xf17e, 0xf11f, 0x1c48, 0x0, 0x0);
        gbc.writeMem(0x1c48, { 0x87 });
        gbc.writeMem(0x51c3, { 0x86 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x581f, gbc.sp());
        EXPECT(0x51c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 034B
        gbc.setState(0xb8de, 0xb7f1, 0xf6d0, 0x31d6, 0x1a94, 0x3ab1, 0x0, 0x0);
        gbc.writeMem(0x3ab1, { 0x1 });
        gbc.writeMem(0xb8de, { 0x86 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb7f1, gbc.sp());
        EXPECT(0xb8df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb8de));
        // 86 034C
        gbc.setState(0x4cb6, 0xfecd, 0x1e00, 0x9941, 0x4d4c, 0x242a, 0x0, 0x1);
        gbc.writeMem(0x242a, { 0xeb });
        gbc.writeMem(0x4cb6, { 0x86 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfecd, gbc.sp());
        EXPECT(0x4cb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 034D
        gbc.setState(0xef59, 0xa1bc, 0x3980, 0x2061, 0xe416, 0x101, 0x0, 0x0);
        gbc.writeMem(0x101, { 0xaa });
        gbc.writeMem(0xef59, { 0x86 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa1bc, gbc.sp());
        EXPECT(0xef5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xef59));
        // 86 034E
        gbc.setState(0xe02d, 0x3e45, 0xc620, 0x55f2, 0x7c94, 0x1f10, 0x1, 0x0);
        gbc.writeMem(0x1f10, { 0x6c });
        gbc.writeMem(0xe02d, { 0x86 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3e45, gbc.sp());
        EXPECT(0xe02e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xe02d));
        // 86 034F
        gbc.setState(0x196c, 0x1aad, 0xed40, 0x231, 0x793b, 0xd780, 0x1, 0x0);
        gbc.writeMem(0x196c, { 0x86 });
        gbc.writeMem(0xd780, { 0x86 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1aad, gbc.sp());
        EXPECT(0x196d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd780));
        // 86 0350
        gbc.setState(0xdc4a, 0x847f, 0x4b00, 0x55fa, 0x6081, 0x55ab, 0x0, 0x0);
        gbc.writeMem(0x55ab, { 0xf5 });
        gbc.writeMem(0xdc4a, { 0x86 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x847f, gbc.sp());
        EXPECT(0xdc4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xdc4a));
        // 86 0351
        gbc.setState(0xb07f, 0xaca1, 0xf940, 0xc799, 0x461, 0xff88, 0x0, 0x0);
        gbc.writeMem(0xb07f, { 0x86 });
        gbc.writeMem(0xff88, { 0x49 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xaca1, gbc.sp());
        EXPECT(0xb080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb07f));
        EXPECT(0x49, gbc.readMem(0xff88));
        // 86 0352
        gbc.setState(0x61d2, 0xb80c, 0x7150, 0x9c5c, 0xd10a, 0x7f65, 0x1, 0x0);
        gbc.writeMem(0x61d2, { 0x86 });
        gbc.writeMem(0x7f65, { 0xb8 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb80c, gbc.sp());
        EXPECT(0x61d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0353
        gbc.setState(0x1a7e, 0x9774, 0x5c10, 0x9249, 0xe80e, 0x1719, 0x0, 0x1);
        gbc.writeMem(0x1719, { 0xfe });
        gbc.writeMem(0x1a7e, { 0x86 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9774, gbc.sp());
        EXPECT(0x1a7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0354
        gbc.setState(0x8386, 0x98a9, 0x1b0, 0x15de, 0x89cc, 0x77a2, 0x1, 0x1);
        gbc.writeMem(0x77a2, { 0xe9 });
        gbc.writeMem(0x8386, { 0x86 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x98a9, gbc.sp());
        EXPECT(0x8387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8386));
        // 86 0355
        gbc.setState(0x8270, 0xc678, 0x4b40, 0x3e62, 0x33c8, 0x77ec, 0x1, 0x0);
        gbc.writeMem(0x77ec, { 0x5f });
        gbc.writeMem(0x8270, { 0x86 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc678, gbc.sp());
        EXPECT(0x8271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8270));
        // 86 0356
        gbc.setState(0x7e43, 0xe934, 0xa760, 0x65a4, 0x87d5, 0x81f3, 0x1, 0x1);
        gbc.writeMem(0x7e43, { 0x86 });
        gbc.writeMem(0x81f3, { 0x1e });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe934, gbc.sp());
        EXPECT(0x7e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x81f3));
        // 86 0357
        gbc.setState(0x22af, 0x8cb, 0x6870, 0x6e1d, 0x1a72, 0x5498, 0x1, 0x0);
        gbc.writeMem(0x22af, { 0x86 });
        gbc.writeMem(0x5498, { 0xbf });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8cb, gbc.sp());
        EXPECT(0x22b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0358
        gbc.setState(0x559d, 0xe99, 0x7950, 0x487f, 0x1952, 0x5deb, 0x1, 0x1);
        gbc.writeMem(0x559d, { 0x86 });
        gbc.writeMem(0x5deb, { 0x87 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe99, gbc.sp());
        EXPECT(0x559e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0359
        gbc.setState(0xe92e, 0x42f5, 0x4e10, 0x2a27, 0xd912, 0x10b5, 0x1, 0x1);
        gbc.writeMem(0x10b5, { 0x24 });
        gbc.writeMem(0xe92e, { 0x86 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x42f5, gbc.sp());
        EXPECT(0xe92f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xe92e));
        // 86 035A
        gbc.setState(0xb9df, 0x35cf, 0xdcf0, 0x6b3d, 0x5d9e, 0x5dc8, 0x1, 0x0);
        gbc.writeMem(0x5dc8, { 0x4e });
        gbc.writeMem(0xb9df, { 0x86 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x35cf, gbc.sp());
        EXPECT(0xb9e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb9df));
        // 86 035B
        gbc.setState(0x17a7, 0x7d19, 0xb050, 0x8153, 0xc3de, 0x55b, 0x0, 0x1);
        gbc.writeMem(0x55b, { 0x7b });
        gbc.writeMem(0x17a7, { 0x86 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7d19, gbc.sp());
        EXPECT(0x17a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 035C
        gbc.setState(0xc474, 0xea7b, 0x5c70, 0x2ed2, 0xa899, 0x41c6, 0x1, 0x0);
        gbc.writeMem(0x41c6, { 0x86 });
        gbc.writeMem(0xc474, { 0x86 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xea7b, gbc.sp());
        EXPECT(0xc475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc474));
        // 86 035D
        gbc.setState(0xa7ff, 0x6195, 0xec20, 0xa9ce, 0xecd, 0x9c28, 0x0, 0x1);
        gbc.writeMem(0x9c28, { 0xf0 });
        gbc.writeMem(0xa7ff, { 0x86 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6195, gbc.sp());
        EXPECT(0xa800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9c28));
        EXPECT(0x86, gbc.readMem(0xa7ff));
        // 86 035E
        gbc.setState(0xb70f, 0x796, 0x51b0, 0xfa94, 0x1bc7, 0x4be9, 0x1, 0x1);
        gbc.writeMem(0x4be9, { 0x2 });
        gbc.writeMem(0xb70f, { 0x86 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x796, gbc.sp());
        EXPECT(0xb710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb70f));
        // 86 035F
        gbc.setState(0xa6ba, 0xfccb, 0xb020, 0xee4d, 0x19be, 0x62ab, 0x1, 0x1);
        gbc.writeMem(0x62ab, { 0x33 });
        gbc.writeMem(0xa6ba, { 0x86 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfccb, gbc.sp());
        EXPECT(0xa6bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa6ba));
        // 86 0360
        gbc.setState(0x3dde, 0x218b, 0x79e0, 0x45b5, 0x7814, 0xa926, 0x0, 0x0);
        gbc.writeMem(0x3dde, { 0x86 });
        gbc.writeMem(0xa926, { 0xfe });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x218b, gbc.sp());
        EXPECT(0x3ddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa926));
        // 86 0361
        gbc.setState(0xc474, 0x1ee5, 0xcbd0, 0x22f3, 0x1337, 0x6e6, 0x1, 0x0);
        gbc.writeMem(0x6e6, { 0x2 });
        gbc.writeMem(0xc474, { 0x86 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1ee5, gbc.sp());
        EXPECT(0xc475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc474));
        // 86 0362
        gbc.setState(0x5be6, 0xb29a, 0xac80, 0xf9b3, 0x56f6, 0x57db, 0x0, 0x0);
        gbc.writeMem(0x57db, { 0xfe });
        gbc.writeMem(0x5be6, { 0x86 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb29a, gbc.sp());
        EXPECT(0x5be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0363
        gbc.setState(0xe2c2, 0x6cb9, 0x84a0, 0x1e06, 0x23af, 0xc073, 0x0, 0x0);
        gbc.writeMem(0xc073, { 0xee });
        gbc.writeMem(0xe2c2, { 0x86 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6cb9, gbc.sp());
        EXPECT(0xe2c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xc073));
        EXPECT(0x86, gbc.readMem(0xe2c2));
        // 86 0364
        gbc.setState(0xae7b, 0x48ce, 0x7a20, 0x4a53, 0xd5a9, 0xb4c8, 0x1, 0x1);
        gbc.writeMem(0xae7b, { 0x86 });
        gbc.writeMem(0xb4c8, { 0xac });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x48ce, gbc.sp());
        EXPECT(0xae7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xae7b));
        EXPECT(0xac, gbc.readMem(0xb4c8));
        // 86 0365
        gbc.setState(0x14bb, 0xeaeb, 0x2550, 0x1cd2, 0x8b17, 0x8bbc, 0x0, 0x1);
        gbc.writeMem(0x14bb, { 0x86 });
        gbc.writeMem(0x8bbc, { 0x9d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xeaeb, gbc.sp());
        EXPECT(0x14bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8bbc));
        // 86 0366
        gbc.setState(0xbad2, 0x3ead, 0xb500, 0xc3ad, 0x1346, 0xca17, 0x1, 0x1);
        gbc.writeMem(0xbad2, { 0x86 });
        gbc.writeMem(0xca17, { 0x3e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3ead, gbc.sp());
        EXPECT(0xbad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xbad2));
        EXPECT(0x3e, gbc.readMem(0xca17));
        // 86 0368
        gbc.setState(0x67d3, 0xa7e9, 0x58e0, 0x5689, 0xcd11, 0x9a6e, 0x1, 0x1);
        gbc.writeMem(0x67d3, { 0x86 });
        gbc.writeMem(0x9a6e, { 0x13 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa7e9, gbc.sp());
        EXPECT(0x67d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9a6e));
        // 86 0369
        gbc.setState(0xbbd4, 0x9539, 0xd2c0, 0x4f83, 0x4c47, 0xa5b6, 0x0, 0x1);
        gbc.writeMem(0xa5b6, { 0xbf });
        gbc.writeMem(0xbbd4, { 0x86 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9539, gbc.sp());
        EXPECT(0xbbd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xa5b6));
        EXPECT(0x86, gbc.readMem(0xbbd4));
        // 86 036A
        gbc.setState(0xd467, 0x525b, 0x6000, 0x903d, 0x1ecd, 0x2263, 0x0, 0x1);
        gbc.writeMem(0x2263, { 0xd7 });
        gbc.writeMem(0xd467, { 0x86 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x525b, gbc.sp());
        EXPECT(0xd468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd467));
        // 86 036B
        gbc.setState(0xeaa6, 0xbcc8, 0xc480, 0xc309, 0x98fc, 0x7cf1, 0x0, 0x0);
        gbc.writeMem(0x7cf1, { 0x5a });
        gbc.writeMem(0xeaa6, { 0x86 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbcc8, gbc.sp());
        EXPECT(0xeaa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xeaa6));
        // 86 036C
        gbc.setState(0x4c79, 0xd770, 0xd9c0, 0x8743, 0xf3b3, 0x3692, 0x0, 0x1);
        gbc.writeMem(0x3692, { 0xf });
        gbc.writeMem(0x4c79, { 0x86 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd770, gbc.sp());
        EXPECT(0x4c7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 036D
        gbc.setState(0x93aa, 0x2a0c, 0x6360, 0x7488, 0xf5ad, 0x69b, 0x1, 0x0);
        gbc.writeMem(0x69b, { 0xdf });
        gbc.writeMem(0x93aa, { 0x86 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2a0c, gbc.sp());
        EXPECT(0x93ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x93aa));
        // 86 036E
        gbc.setState(0x4073, 0x3dc7, 0x14b0, 0x93bd, 0xeaff, 0x6c91, 0x1, 0x0);
        gbc.writeMem(0x4073, { 0x86 });
        gbc.writeMem(0x6c91, { 0x37 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3dc7, gbc.sp());
        EXPECT(0x4074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 036F
        gbc.setState(0x8628, 0xd86f, 0x99f0, 0xfced, 0x2f99, 0x57e5, 0x1, 0x0);
        gbc.writeMem(0x57e5, { 0xfc });
        gbc.writeMem(0x8628, { 0x86 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd86f, gbc.sp());
        EXPECT(0x8629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8628));
        // 86 0370
        gbc.setState(0xa830, 0xa21f, 0xf170, 0x1b4b, 0x5c18, 0xd1e, 0x1, 0x0);
        gbc.writeMem(0xd1e, { 0xf8 });
        gbc.writeMem(0xa830, { 0x86 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa21f, gbc.sp());
        EXPECT(0xa831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa830));
        // 86 0371
        gbc.setState(0xc3f6, 0xd28b, 0x80c0, 0x3943, 0xf447, 0x7f8a, 0x0, 0x1);
        gbc.writeMem(0x7f8a, { 0x9c });
        gbc.writeMem(0xc3f6, { 0x86 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd28b, gbc.sp());
        EXPECT(0xc3f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc3f6));
        // 86 0373
        gbc.setState(0x9b75, 0xc5a7, 0x5b60, 0xbc71, 0x5d4b, 0xfeaf, 0x1, 0x1);
        gbc.writeMem(0x9b75, { 0x86 });
        gbc.writeMem(0xfeaf, { 0xd9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc5a7, gbc.sp());
        EXPECT(0x9b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9b75));
        EXPECT(0xd9, gbc.readMem(0xfeaf));
        // 86 0374
        gbc.setState(0xbee1, 0xef60, 0x78e0, 0x3fdc, 0x84f6, 0x4740, 0x0, 0x0);
        gbc.writeMem(0x4740, { 0xb6 });
        gbc.writeMem(0xbee1, { 0x86 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xef60, gbc.sp());
        EXPECT(0xbee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xbee1));
        // 86 0375
        gbc.setState(0x1ac2, 0x837e, 0x4820, 0xbdb0, 0xe841, 0xd438, 0x0, 0x1);
        gbc.writeMem(0x1ac2, { 0x86 });
        gbc.writeMem(0xd438, { 0xdb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x837e, gbc.sp());
        EXPECT(0x1ac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xd438));
        // 86 0376
        gbc.setState(0xa55b, 0xf9a3, 0xfde0, 0xe44f, 0x7691, 0xcb94, 0x0, 0x0);
        gbc.writeMem(0xa55b, { 0x86 });
        gbc.writeMem(0xcb94, { 0x12 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf9a3, gbc.sp());
        EXPECT(0xa55c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa55b));
        EXPECT(0x12, gbc.readMem(0xcb94));
        // 86 0377
        gbc.setState(0x2e28, 0xe792, 0x4590, 0x2b24, 0x7a12, 0x2e61, 0x0, 0x1);
        gbc.writeMem(0x2e28, { 0x86 });
        gbc.writeMem(0x2e61, { 0x1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe792, gbc.sp());
        EXPECT(0x2e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0378
        gbc.setState(0xa37c, 0x4a36, 0xa470, 0xffa2, 0x35ea, 0xab46, 0x1, 0x0);
        gbc.writeMem(0xa37c, { 0x86 });
        gbc.writeMem(0xab46, { 0x40 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4a36, gbc.sp());
        EXPECT(0xa37d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa37c));
        EXPECT(0x40, gbc.readMem(0xab46));
        // 86 0379
        gbc.setState(0xbc01, 0x6ef2, 0x3930, 0x2f55, 0xc29a, 0x3676, 0x1, 0x0);
        gbc.writeMem(0x3676, { 0x7a });
        gbc.writeMem(0xbc01, { 0x86 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6ef2, gbc.sp());
        EXPECT(0xbc02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xbc01));
        // 86 037A
        gbc.setState(0xc86a, 0x56ef, 0xba80, 0x7d07, 0x6f66, 0xd770, 0x1, 0x1);
        gbc.writeMem(0xc86a, { 0x86 });
        gbc.writeMem(0xd770, { 0x1a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x56ef, gbc.sp());
        EXPECT(0xc86b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc86a));
        EXPECT(0x1a, gbc.readMem(0xd770));
        // 86 037B
        gbc.setState(0xc09f, 0x448a, 0xea0, 0xd882, 0x2909, 0xc052, 0x0, 0x0);
        gbc.writeMem(0xc052, { 0xb4 });
        gbc.writeMem(0xc09f, { 0x86 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x448a, gbc.sp());
        EXPECT(0xc0a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xc052));
        EXPECT(0x86, gbc.readMem(0xc09f));
        // 86 037C
        gbc.setState(0xd40d, 0x4829, 0xee50, 0xbc14, 0x2953, 0x3460, 0x1, 0x0);
        gbc.writeMem(0x3460, { 0x58 });
        gbc.writeMem(0xd40d, { 0x86 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4829, gbc.sp());
        EXPECT(0xd40e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd40d));
        // 86 037D
        gbc.setState(0x1658, 0x905f, 0xa5c0, 0xd9e3, 0x2159, 0x5fb8, 0x0, 0x1);
        gbc.writeMem(0x1658, { 0x86 });
        gbc.writeMem(0x5fb8, { 0xac });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x905f, gbc.sp());
        EXPECT(0x1659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 037E
        gbc.setState(0x40e1, 0xeada, 0x5620, 0x7a42, 0x338a, 0x3f71, 0x0, 0x1);
        gbc.writeMem(0x3f71, { 0x6 });
        gbc.writeMem(0x40e1, { 0x86 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xeada, gbc.sp());
        EXPECT(0x40e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 037F
        gbc.setState(0x4aff, 0xfea1, 0x1540, 0xc9f5, 0xc13b, 0xab41, 0x0, 0x0);
        gbc.writeMem(0x4aff, { 0x86 });
        gbc.writeMem(0xab41, { 0x23 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xfea1, gbc.sp());
        EXPECT(0x4b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xab41));
        // 86 0380
        gbc.setState(0x8e96, 0xe72c, 0x6fd0, 0x7377, 0xb456, 0x41ba, 0x0, 0x1);
        gbc.writeMem(0x41ba, { 0xe9 });
        gbc.writeMem(0x8e96, { 0x86 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe72c, gbc.sp());
        EXPECT(0x8e97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8e96));
        // 86 0381
        gbc.setState(0x3745, 0x1a70, 0x3940, 0x9745, 0xa9f0, 0x3553, 0x1, 0x0);
        gbc.writeMem(0x3553, { 0xa8 });
        gbc.writeMem(0x3745, { 0x86 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1a70, gbc.sp());
        EXPECT(0x3746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0382
        gbc.setState(0x8759, 0xd1b8, 0x3d0, 0xfb3e, 0xd3be, 0xebb1, 0x1, 0x1);
        gbc.writeMem(0x8759, { 0x86 });
        gbc.writeMem(0xebb1, { 0xbc });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd1b8, gbc.sp());
        EXPECT(0x875a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8759));
        EXPECT(0xbc, gbc.readMem(0xebb1));
        // 86 0383
        gbc.setState(0xb8b8, 0x40ad, 0x670, 0xe7c, 0x5079, 0x943, 0x0, 0x1);
        gbc.writeMem(0x943, { 0x5e });
        gbc.writeMem(0xb8b8, { 0x86 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x40ad, gbc.sp());
        EXPECT(0xb8b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb8b8));
        // 86 0384
        gbc.setState(0x4437, 0x774e, 0xccb0, 0x4ef9, 0xe0e4, 0x61fe, 0x1, 0x1);
        gbc.writeMem(0x4437, { 0x86 });
        gbc.writeMem(0x61fe, { 0x44 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x774e, gbc.sp());
        EXPECT(0x4438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0385
        gbc.setState(0x158f, 0xff0a, 0xcf40, 0x499, 0xe804, 0x8d6, 0x1, 0x1);
        gbc.writeMem(0x8d6, { 0x6f });
        gbc.writeMem(0x158f, { 0x86 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xff0a, gbc.sp());
        EXPECT(0x1590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0387
        gbc.setState(0xeecb, 0xfc6b, 0xf0a0, 0xff5e, 0x3592, 0xd94e, 0x1, 0x1);
        gbc.writeMem(0xd94e, { 0xef });
        gbc.writeMem(0xeecb, { 0x86 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfc6b, gbc.sp());
        EXPECT(0xeecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xd94e));
        EXPECT(0x86, gbc.readMem(0xeecb));
        // 86 0389
        gbc.setState(0x9e25, 0x907c, 0x9140, 0x83be, 0x4c25, 0xe904, 0x1, 0x1);
        gbc.writeMem(0x9e25, { 0x86 });
        gbc.writeMem(0xe904, { 0x70 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x907c, gbc.sp());
        EXPECT(0x9e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9e25));
        EXPECT(0x70, gbc.readMem(0xe904));
        // 86 038A
        gbc.setState(0x26dc, 0x4c65, 0x24a0, 0xa1a1, 0x72b0, 0x8411, 0x1, 0x0);
        gbc.writeMem(0x26dc, { 0x86 });
        gbc.writeMem(0x8411, { 0x47 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4c65, gbc.sp());
        EXPECT(0x26dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8411));
        // 86 038B
        gbc.setState(0x1970, 0xefa1, 0xa6a0, 0x9314, 0xaa15, 0x5b61, 0x0, 0x1);
        gbc.writeMem(0x1970, { 0x86 });
        gbc.writeMem(0x5b61, { 0xeb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xefa1, gbc.sp());
        EXPECT(0x1971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 038C
        gbc.setState(0xcc6b, 0x6c95, 0xdf10, 0xf72b, 0x8e9a, 0xcdb4, 0x1, 0x1);
        gbc.writeMem(0xcc6b, { 0x86 });
        gbc.writeMem(0xcdb4, { 0x96 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6c95, gbc.sp());
        EXPECT(0xcc6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xcc6b));
        EXPECT(0x96, gbc.readMem(0xcdb4));
        // 86 038D
        gbc.setState(0x653e, 0xc4a2, 0xfe0, 0xbff7, 0xab67, 0x4f20, 0x1, 0x1);
        gbc.writeMem(0x4f20, { 0xb9 });
        gbc.writeMem(0x653e, { 0x86 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc4a2, gbc.sp());
        EXPECT(0x653f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 038E
        gbc.setState(0xedff, 0x83ae, 0xbbc0, 0x5609, 0x669d, 0x7fa2, 0x0, 0x1);
        gbc.writeMem(0x7fa2, { 0x98 });
        gbc.writeMem(0xedff, { 0x86 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x83ae, gbc.sp());
        EXPECT(0xee00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xedff));
        // 86 038F
        gbc.setState(0x6cf6, 0xe45c, 0xd530, 0xed3, 0x8982, 0xe298, 0x0, 0x0);
        gbc.writeMem(0x6cf6, { 0x86 });
        gbc.writeMem(0xe298, { 0x17 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe45c, gbc.sp());
        EXPECT(0x6cf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xe298));
        // 86 0390
        gbc.setState(0x799e, 0xa7ce, 0xf5e0, 0x84fe, 0x396c, 0x2847, 0x0, 0x1);
        gbc.writeMem(0x2847, { 0xe0 });
        gbc.writeMem(0x799e, { 0x86 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa7ce, gbc.sp());
        EXPECT(0x799f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0391
        gbc.setState(0x2a08, 0xd9bd, 0x7200, 0x529b, 0x91a9, 0x58c, 0x1, 0x0);
        gbc.writeMem(0x58c, { 0xe5 });
        gbc.writeMem(0x2a08, { 0x86 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd9bd, gbc.sp());
        EXPECT(0x2a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 0392
        gbc.setState(0xcdbb, 0x7420, 0xf0a0, 0x9214, 0x202f, 0x6d43, 0x1, 0x0);
        gbc.writeMem(0x6d43, { 0x62 });
        gbc.writeMem(0xcdbb, { 0x86 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7420, gbc.sp());
        EXPECT(0xcdbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xcdbb));
        // 86 0393
        gbc.setState(0x768, 0x2e7f, 0xb0c0, 0xc7ff, 0x82eb, 0x5ce, 0x1, 0x0);
        gbc.writeMem(0x5ce, { 0x4d });
        gbc.writeMem(0x768, { 0x86 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2e7f, gbc.sp());
        EXPECT(0x769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0394
        gbc.setState(0x2f95, 0x868, 0x1180, 0xdba3, 0xf86e, 0xeb57, 0x0, 0x0);
        gbc.writeMem(0x2f95, { 0x86 });
        gbc.writeMem(0xeb57, { 0x2c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x868, gbc.sp());
        EXPECT(0x2f96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xeb57));
        // 86 0395
        gbc.setState(0xe9c8, 0xc983, 0x36d0, 0x18c, 0xeef7, 0xb4b7, 0x0, 0x0);
        gbc.writeMem(0xb4b7, { 0x5d });
        gbc.writeMem(0xe9c8, { 0x86 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc983, gbc.sp());
        EXPECT(0xe9c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb4b7));
        EXPECT(0x86, gbc.readMem(0xe9c8));
        // 86 0396
        gbc.setState(0xd643, 0xfbd4, 0x1dd0, 0x1a, 0x450b, 0xb2b, 0x1, 0x1);
        gbc.writeMem(0xb2b, { 0xbe });
        gbc.writeMem(0xd643, { 0x86 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfbd4, gbc.sp());
        EXPECT(0xd644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd643));
        // 86 0397
        gbc.setState(0x7ce6, 0x1286, 0x1ad0, 0x5641, 0x113b, 0x75d4, 0x0, 0x0);
        gbc.writeMem(0x75d4, { 0x2b });
        gbc.writeMem(0x7ce6, { 0x86 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1286, gbc.sp());
        EXPECT(0x7ce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 0398
        gbc.setState(0x81c8, 0x60b1, 0xaa90, 0x2ae8, 0xcfce, 0x1223, 0x0, 0x1);
        gbc.writeMem(0x1223, { 0x46 });
        gbc.writeMem(0x81c8, { 0x86 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x60b1, gbc.sp());
        EXPECT(0x81c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x81c8));
        // 86 0399
        gbc.setState(0x1b63, 0x3d0e, 0x9760, 0xf874, 0xcc13, 0x54f0, 0x1, 0x1);
        gbc.writeMem(0x1b63, { 0x86 });
        gbc.writeMem(0x54f0, { 0xdf });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3d0e, gbc.sp());
        EXPECT(0x1b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 039A
        gbc.setState(0x89c5, 0xeb0e, 0xca20, 0x1e4d, 0x9d2c, 0x91eb, 0x1, 0x1);
        gbc.writeMem(0x89c5, { 0x86 });
        gbc.writeMem(0x91eb, { 0x9b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xeb0e, gbc.sp());
        EXPECT(0x89c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x89c5));
        EXPECT(0x9b, gbc.readMem(0x91eb));
        // 86 039B
        gbc.setState(0x51a1, 0xdcfd, 0xff90, 0xdf1c, 0x404c, 0x5e1f, 0x1, 0x0);
        gbc.writeMem(0x51a1, { 0x86 });
        gbc.writeMem(0x5e1f, { 0xe9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdcfd, gbc.sp());
        EXPECT(0x51a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 039C
        gbc.setState(0xaabc, 0xa350, 0x1610, 0x2396, 0x5374, 0x23e4, 0x1, 0x1);
        gbc.writeMem(0x23e4, { 0x42 });
        gbc.writeMem(0xaabc, { 0x86 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa350, gbc.sp());
        EXPECT(0xaabd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xaabc));
        // 86 039D
        gbc.setState(0x24df, 0x510d, 0x96e0, 0x3580, 0x987c, 0x83ce, 0x0, 0x1);
        gbc.writeMem(0x24df, { 0x86 });
        gbc.writeMem(0x83ce, { 0x94 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x510d, gbc.sp());
        EXPECT(0x24e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x83ce));
        // 86 039E
        gbc.setState(0x9d6e, 0x89c4, 0xef0, 0x5a8d, 0xdf7d, 0xb495, 0x0, 0x0);
        gbc.writeMem(0x9d6e, { 0x86 });
        gbc.writeMem(0xb495, { 0x8d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x89c4, gbc.sp());
        EXPECT(0x9d6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9d6e));
        EXPECT(0x8d, gbc.readMem(0xb495));
        // 86 039F
        gbc.setState(0x9263, 0xdb1c, 0x2a0, 0xc49a, 0xa85b, 0xcf68, 0x1, 0x1);
        gbc.writeMem(0x9263, { 0x86 });
        gbc.writeMem(0xcf68, { 0x2e });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xdb1c, gbc.sp());
        EXPECT(0x9264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9263));
        EXPECT(0x2e, gbc.readMem(0xcf68));
        // 86 03A0
        gbc.setState(0x9912, 0x44ab, 0xc00, 0x7b34, 0x100b, 0xf935, 0x1, 0x1);
        gbc.writeMem(0x9912, { 0x86 });
        gbc.writeMem(0xf935, { 0x9e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x44ab, gbc.sp());
        EXPECT(0x9913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9912));
        EXPECT(0x9e, gbc.readMem(0xf935));
        // 86 03A2
        gbc.setState(0x6efb, 0x904e, 0x68e0, 0x81ee, 0x5673, 0xc43b, 0x1, 0x0);
        gbc.writeMem(0x6efb, { 0x86 });
        gbc.writeMem(0xc43b, { 0xa3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x904e, gbc.sp());
        EXPECT(0x6efc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc43b));
        // 86 03A3
        gbc.setState(0x6b49, 0xe687, 0x2100, 0xd2a5, 0xa6c9, 0x4fcd, 0x0, 0x0);
        gbc.writeMem(0x4fcd, { 0xfe });
        gbc.writeMem(0x6b49, { 0x86 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe687, gbc.sp());
        EXPECT(0x6b4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 03A4
        gbc.setState(0x1756, 0xd30c, 0x2fe0, 0xd18c, 0x83f7, 0x6327, 0x1, 0x0);
        gbc.writeMem(0x1756, { 0x86 });
        gbc.writeMem(0x6327, { 0x52 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd30c, gbc.sp());
        EXPECT(0x1757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 03A5
        gbc.setState(0xc3c, 0x1c34, 0xd7f0, 0x8aab, 0xf060, 0x1494, 0x1, 0x0);
        gbc.writeMem(0xc3c, { 0x86 });
        gbc.writeMem(0x1494, { 0xd });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1c34, gbc.sp());
        EXPECT(0xc3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 03A6
        gbc.setState(0xd0e6, 0xbadb, 0xb2a0, 0x707b, 0x8712, 0xde19, 0x1, 0x1);
        gbc.writeMem(0xd0e6, { 0x86 });
        gbc.writeMem(0xde19, { 0x2c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbadb, gbc.sp());
        EXPECT(0xd0e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd0e6));
        EXPECT(0x2c, gbc.readMem(0xde19));
        // 86 03A7
        gbc.setState(0x7f87, 0x7bac, 0x5b10, 0x14a8, 0x4fcc, 0x142, 0x0, 0x1);
        gbc.writeMem(0x142, { 0x19 });
        gbc.writeMem(0x7f87, { 0x86 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7bac, gbc.sp());
        EXPECT(0x7f88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 03A8
        gbc.setState(0x133, 0xc718, 0xc640, 0x1acd, 0xfcc0, 0x2f3b, 0x1, 0x0);
        gbc.writeMem(0x133, { 0x86 });
        gbc.writeMem(0x2f3b, { 0x5c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc718, gbc.sp());
        EXPECT(0x134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 03A9
        gbc.setState(0x876e, 0xe4d9, 0xea60, 0x7c51, 0x92f, 0xad95, 0x1, 0x0);
        gbc.writeMem(0x876e, { 0x86 });
        gbc.writeMem(0xad95, { 0x87 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe4d9, gbc.sp());
        EXPECT(0x876f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x876e));
        EXPECT(0x87, gbc.readMem(0xad95));
        // 86 03AA
        gbc.setState(0x2a8c, 0xa32d, 0xa320, 0xcd6b, 0xd6b9, 0x3f8d, 0x0, 0x1);
        gbc.writeMem(0x2a8c, { 0x86 });
        gbc.writeMem(0x3f8d, { 0x3a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa32d, gbc.sp());
        EXPECT(0x2a8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 03AB
        gbc.setState(0xe01a, 0x92f0, 0xb3b0, 0xb181, 0x824, 0x3dc1, 0x0, 0x0);
        gbc.writeMem(0x3dc1, { 0xc7 });
        gbc.writeMem(0xe01a, { 0x86 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x92f0, gbc.sp());
        EXPECT(0xe01b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xe01a));
        // 86 03AC
        gbc.setState(0x6f3c, 0xc83, 0xdb00, 0xb0df, 0xd2e6, 0xff40, 0x1, 0x0);
        gbc.writeMem(0x6f3c, { 0x86 });
        gbc.writeMem(0xff40, { 0x4b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc83, gbc.sp());
        EXPECT(0x6f3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xff40));
        // 86 03AE
        gbc.setState(0x82b0, 0x4536, 0x5870, 0x2354, 0xe716, 0x446e, 0x0, 0x0);
        gbc.writeMem(0x446e, { 0xa7 });
        gbc.writeMem(0x82b0, { 0x86 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4536, gbc.sp());
        EXPECT(0x82b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x82b0));
        // 86 03AF
        gbc.setState(0x9a59, 0x3ab5, 0xbe50, 0x2e9b, 0x1a72, 0xd3b, 0x0, 0x1);
        gbc.writeMem(0xd3b, { 0xf4 });
        gbc.writeMem(0x9a59, { 0x86 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3ab5, gbc.sp());
        EXPECT(0x9a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9a59));
        // 86 03B0
        gbc.setState(0x8e6c, 0xf207, 0xbf20, 0xc4c6, 0x3d01, 0x9744, 0x1, 0x1);
        gbc.writeMem(0x8e6c, { 0x86 });
        gbc.writeMem(0x9744, { 0xba });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf207, gbc.sp());
        EXPECT(0x8e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8e6c));
        EXPECT(0xba, gbc.readMem(0x9744));
        // 86 03B2
        gbc.setState(0x62a6, 0x1c6c, 0x8070, 0x59a6, 0x8e0a, 0x3cce, 0x0, 0x1);
        gbc.writeMem(0x3cce, { 0xf7 });
        gbc.writeMem(0x62a6, { 0x86 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1c6c, gbc.sp());
        EXPECT(0x62a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 03B3
        gbc.setState(0x51e9, 0xcca9, 0x2a70, 0xff78, 0x14b5, 0xdd63, 0x1, 0x1);
        gbc.writeMem(0x51e9, { 0x86 });
        gbc.writeMem(0xdd63, { 0x55 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xcca9, gbc.sp());
        EXPECT(0x51ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xdd63));
        // 86 03B4
        gbc.setState(0x65c5, 0xe501, 0xea70, 0x2fb5, 0x1e73, 0xf06c, 0x1, 0x1);
        gbc.writeMem(0x65c5, { 0x86 });
        gbc.writeMem(0xf06c, { 0xc6 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe501, gbc.sp());
        EXPECT(0x65c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xf06c));
        // 86 03B5
        gbc.setState(0x10e8, 0xb647, 0xa650, 0x73d6, 0x3957, 0xe0a, 0x0, 0x1);
        gbc.writeMem(0xe0a, { 0xd8 });
        gbc.writeMem(0x10e8, { 0x86 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb647, gbc.sp());
        EXPECT(0x10e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 03B6
        gbc.setState(0x811d, 0x7b04, 0x7070, 0x6937, 0x9820, 0x7206, 0x0, 0x0);
        gbc.writeMem(0x7206, { 0x23 });
        gbc.writeMem(0x811d, { 0x86 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7b04, gbc.sp());
        EXPECT(0x811e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x811d));
        // 86 03B7
        gbc.setState(0x9a0f, 0xf8d2, 0x4130, 0x6bd3, 0x296d, 0xb6b1, 0x1, 0x0);
        gbc.writeMem(0x9a0f, { 0x86 });
        gbc.writeMem(0xb6b1, { 0x27 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf8d2, gbc.sp());
        EXPECT(0x9a10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9a0f));
        EXPECT(0x27, gbc.readMem(0xb6b1));
        // 86 03B8
        gbc.setState(0x1d0c, 0xd8a5, 0x3430, 0xeebc, 0x54bb, 0xe400, 0x1, 0x1);
        gbc.writeMem(0x1d0c, { 0x86 });
        gbc.writeMem(0xe400, { 0x5d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd8a5, gbc.sp());
        EXPECT(0x1d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xe400));
        // 86 03B9
        gbc.setState(0x4c4e, 0xb1e0, 0x1aa0, 0x6a3, 0x1452, 0x5b39, 0x0, 0x0);
        gbc.writeMem(0x4c4e, { 0x86 });
        gbc.writeMem(0x5b39, { 0x9b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb1e0, gbc.sp());
        EXPECT(0x4c4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 03BA
        gbc.setState(0x6a07, 0xb126, 0x2910, 0x95a1, 0x8042, 0x2fa2, 0x0, 0x0);
        gbc.writeMem(0x2fa2, { 0xed });
        gbc.writeMem(0x6a07, { 0x86 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb126, gbc.sp());
        EXPECT(0x6a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 03BB
        gbc.setState(0xa4ee, 0x1701, 0x7d70, 0xaac1, 0x8fb7, 0x59c9, 0x0, 0x1);
        gbc.writeMem(0x59c9, { 0x14 });
        gbc.writeMem(0xa4ee, { 0x86 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1701, gbc.sp());
        EXPECT(0xa4ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa4ee));
        // 86 03BC
        gbc.setState(0x7905, 0x52a1, 0xa1c0, 0x3374, 0x9a5b, 0xeeb1, 0x0, 0x0);
        gbc.writeMem(0x7905, { 0x86 });
        gbc.writeMem(0xeeb1, { 0x43 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x52a1, gbc.sp());
        EXPECT(0x7906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xeeb1));
        // 86 03BE
        gbc.setState(0x2cde, 0xf2ef, 0xec30, 0x442d, 0xe4a1, 0x604d, 0x0, 0x1);
        gbc.writeMem(0x2cde, { 0x86 });
        gbc.writeMem(0x604d, { 0x52 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf2ef, gbc.sp());
        EXPECT(0x2cdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 03BF
        gbc.setState(0x5d40, 0xd0d1, 0x5130, 0x3262, 0x4617, 0x6416, 0x1, 0x0);
        gbc.writeMem(0x5d40, { 0x86 });
        gbc.writeMem(0x6416, { 0x6d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd0d1, gbc.sp());
        EXPECT(0x5d41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 03C0
        gbc.setState(0xa9e9, 0x704e, 0xd700, 0xe89b, 0x4090, 0x6781, 0x1, 0x1);
        gbc.writeMem(0x6781, { 0xd1 });
        gbc.writeMem(0xa9e9, { 0x86 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x704e, gbc.sp());
        EXPECT(0xa9ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa9e9));
        // 86 03C1
        gbc.setState(0x7ac6, 0x5b1e, 0xda80, 0x39d4, 0x2cee, 0x5b6c, 0x0, 0x1);
        gbc.writeMem(0x5b6c, { 0xbb });
        gbc.writeMem(0x7ac6, { 0x86 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5b1e, gbc.sp());
        EXPECT(0x7ac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 03C2
        gbc.setState(0x7f50, 0x4c12, 0xc6f0, 0xaf47, 0xbfcf, 0xfda0, 0x0, 0x1);
        gbc.writeMem(0x7f50, { 0x86 });
        gbc.writeMem(0xfda0, { 0x69 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4c12, gbc.sp());
        EXPECT(0x7f51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xfda0));
        // 86 03C3
        gbc.setState(0xdead, 0x969e, 0xe300, 0x6214, 0xb969, 0xabb4, 0x0, 0x0);
        gbc.writeMem(0xabb4, { 0x8f });
        gbc.writeMem(0xdead, { 0x86 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x969e, gbc.sp());
        EXPECT(0xdeae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xabb4));
        EXPECT(0x86, gbc.readMem(0xdead));
        // 86 03C4
        gbc.setState(0xb398, 0xe01b, 0x3d40, 0x2332, 0xfb6e, 0xf99d, 0x0, 0x1);
        gbc.writeMem(0xb398, { 0x86 });
        gbc.writeMem(0xf99d, { 0x24 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe01b, gbc.sp());
        EXPECT(0xb399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb398));
        EXPECT(0x24, gbc.readMem(0xf99d));
        // 86 03C5
        gbc.setState(0xeff5, 0xfdf4, 0x3d30, 0xac88, 0xfaf6, 0xf689, 0x1, 0x1);
        gbc.writeMem(0xeff5, { 0x86 });
        gbc.writeMem(0xf689, { 0x91 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xfdf4, gbc.sp());
        EXPECT(0xeff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xeff5));
        EXPECT(0x91, gbc.readMem(0xf689));
        // 86 03C6
        gbc.setState(0x403d, 0x44bf, 0x44f0, 0xfdae, 0x578b, 0x8ab5, 0x1, 0x1);
        gbc.writeMem(0x403d, { 0x86 });
        gbc.writeMem(0x8ab5, { 0x7a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x44bf, gbc.sp());
        EXPECT(0x403e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8ab5));
        // 86 03C7
        gbc.setState(0xa189, 0x9913, 0x5470, 0x1e30, 0xcbad, 0xb4a1, 0x0, 0x1);
        gbc.writeMem(0xa189, { 0x86 });
        gbc.writeMem(0xb4a1, { 0x7a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9913, gbc.sp());
        EXPECT(0xa18a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa189));
        EXPECT(0x7a, gbc.readMem(0xb4a1));
        // 86 03C9
        gbc.setState(0xdb8c, 0x919f, 0xfdd0, 0x4d89, 0x93e4, 0x36c8, 0x1, 0x1);
        gbc.writeMem(0x36c8, { 0xaf });
        gbc.writeMem(0xdb8c, { 0x86 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x919f, gbc.sp());
        EXPECT(0xdb8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xdb8c));
        // 86 03CA
        gbc.setState(0x2078, 0x501f, 0x9010, 0x7d8b, 0xab44, 0x98ef, 0x0, 0x0);
        gbc.writeMem(0x2078, { 0x86 });
        gbc.writeMem(0x98ef, { 0x44 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x501f, gbc.sp());
        EXPECT(0x2079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x98ef));
        // 86 03CB
        gbc.setState(0x5d96, 0xb3d7, 0x79e0, 0xa7a5, 0x5b94, 0x3859, 0x1, 0x1);
        gbc.writeMem(0x3859, { 0x2f });
        gbc.writeMem(0x5d96, { 0x86 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb3d7, gbc.sp());
        EXPECT(0x5d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 03CC
        gbc.setState(0x4ebc, 0xf778, 0xb6c0, 0x75ee, 0xb2d0, 0x2202, 0x0, 0x1);
        gbc.writeMem(0x2202, { 0x24 });
        gbc.writeMem(0x4ebc, { 0x86 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf778, gbc.sp());
        EXPECT(0x4ebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 03CE
        gbc.setState(0x23a, 0xdb9d, 0xa030, 0x8a48, 0x6c82, 0xa530, 0x0, 0x0);
        gbc.writeMem(0x23a, { 0x86 });
        gbc.writeMem(0xa530, { 0xa6 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdb9d, gbc.sp());
        EXPECT(0x23b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa530));
        // 86 03CF
        gbc.setState(0xdfd7, 0x47d7, 0x8510, 0xd9c5, 0x9110, 0xdbf4, 0x0, 0x1);
        gbc.writeMem(0xdbf4, { 0xbe });
        gbc.writeMem(0xdfd7, { 0x86 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x47d7, gbc.sp());
        EXPECT(0xdfd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xdbf4));
        EXPECT(0x86, gbc.readMem(0xdfd7));
        // 86 03D0
        gbc.setState(0xd22b, 0x9dff, 0xad50, 0x9162, 0xde7b, 0x78c8, 0x1, 0x0);
        gbc.writeMem(0x78c8, { 0xb8 });
        gbc.writeMem(0xd22b, { 0x86 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9dff, gbc.sp());
        EXPECT(0xd22c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd22b));
        // 86 03D1
        gbc.setState(0xd00f, 0xa, 0x4b40, 0xbbdd, 0x8c7e, 0x5876, 0x1, 0x1);
        gbc.writeMem(0x5876, { 0xbe });
        gbc.writeMem(0xd00f, { 0x86 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa, gbc.sp());
        EXPECT(0xd010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd00f));
        // 86 03D2
        gbc.setState(0xed1, 0x2814, 0xa760, 0xd0ad, 0xd7de, 0x3a22, 0x0, 0x0);
        gbc.writeMem(0xed1, { 0x86 });
        gbc.writeMem(0x3a22, { 0xd3 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2814, gbc.sp());
        EXPECT(0xed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 03D3
        gbc.setState(0x4126, 0xaade, 0x36e0, 0xf50d, 0x9041, 0x678b, 0x0, 0x1);
        gbc.writeMem(0x4126, { 0x86 });
        gbc.writeMem(0x678b, { 0x42 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xaade, gbc.sp());
        EXPECT(0x4127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 03D4
        gbc.setState(0x5921, 0x1424, 0xd1f0, 0x532e, 0x4e1d, 0xfa26, 0x1, 0x1);
        gbc.writeMem(0x5921, { 0x86 });
        gbc.writeMem(0xfa26, { 0x8a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1424, gbc.sp());
        EXPECT(0x5922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xfa26));
        // 86 03D5
        gbc.setState(0xdd01, 0xdff5, 0x50c0, 0xbba1, 0x752, 0xc812, 0x0, 0x1);
        gbc.writeMem(0xc812, { 0x73 });
        gbc.writeMem(0xdd01, { 0x86 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdff5, gbc.sp());
        EXPECT(0xdd02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xc812));
        EXPECT(0x86, gbc.readMem(0xdd01));
        // 86 03D6
        gbc.setState(0xcbbd, 0xba, 0xce10, 0xa709, 0x5069, 0x3eb8, 0x1, 0x1);
        gbc.writeMem(0x3eb8, { 0xf3 });
        gbc.writeMem(0xcbbd, { 0x86 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xba, gbc.sp());
        EXPECT(0xcbbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xcbbd));
        // 86 03D7
        gbc.setState(0xc9fb, 0x6e17, 0x44d0, 0xd080, 0xab0, 0xbb03, 0x1, 0x1);
        gbc.writeMem(0xbb03, { 0x4b });
        gbc.writeMem(0xc9fb, { 0x86 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6e17, gbc.sp());
        EXPECT(0xc9fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xbb03));
        EXPECT(0x86, gbc.readMem(0xc9fb));
        // 86 03D8
        gbc.setState(0x3a6b, 0xc5ff, 0x3770, 0x4341, 0xecd1, 0xed2c, 0x1, 0x0);
        gbc.writeMem(0x3a6b, { 0x86 });
        gbc.writeMem(0xed2c, { 0x38 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc5ff, gbc.sp());
        EXPECT(0x3a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xed2c));
        // 86 03D9
        gbc.setState(0x7be4, 0xed07, 0xd550, 0xf3e, 0x66f7, 0x594, 0x1, 0x1);
        gbc.writeMem(0x594, { 0xad });
        gbc.writeMem(0x7be4, { 0x86 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xed07, gbc.sp());
        EXPECT(0x7be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 86 03DA
        gbc.setState(0xb126, 0xceb9, 0x1320, 0xdaeb, 0xb1e1, 0xfad2, 0x0, 0x0);
        gbc.writeMem(0xb126, { 0x86 });
        gbc.writeMem(0xfad2, { 0xc8 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xceb9, gbc.sp());
        EXPECT(0xb127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb126));
        EXPECT(0xc8, gbc.readMem(0xfad2));
        // 86 03DB
        gbc.setState(0x541c, 0x21c6, 0x4ef0, 0xab2, 0xd27a, 0xd14e, 0x1, 0x1);
        gbc.writeMem(0x541c, { 0x86 });
        gbc.writeMem(0xd14e, { 0xff });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x21c6, gbc.sp());
        EXPECT(0x541d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xd14e));
        // 86 03DC
        gbc.setState(0xac97, 0x695, 0x1d70, 0x2f52, 0x8cbc, 0x4643, 0x1, 0x0);
        gbc.writeMem(0x4643, { 0xe });
        gbc.writeMem(0xac97, { 0x86 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x695, gbc.sp());
        EXPECT(0xac98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xac97));
        // 86 03DD
        gbc.setState(0x9dfb, 0xa508, 0xfd30, 0x7609, 0xd561, 0xe8cd, 0x1, 0x1);
        gbc.writeMem(0x9dfb, { 0x86 });
        gbc.writeMem(0xe8cd, { 0xb7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa508, gbc.sp());
        EXPECT(0x9dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9dfb));
        EXPECT(0xb7, gbc.readMem(0xe8cd));
        // 86 03DE
        gbc.setState(0x88c2, 0xc6fa, 0x4b80, 0x9e1a, 0x6e61, 0x55a6, 0x1, 0x1);
        gbc.writeMem(0x55a6, { 0x1e });
        gbc.writeMem(0x88c2, { 0x86 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc6fa, gbc.sp());
        EXPECT(0x88c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x88c2));
        // 86 03DF
        gbc.setState(0xb6f0, 0xfb0b, 0xbd90, 0x2f99, 0x7b66, 0x6493, 0x1, 0x1);
        gbc.writeMem(0x6493, { 0x18 });
        gbc.writeMem(0xb6f0, { 0x86 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xfb0b, gbc.sp());
        EXPECT(0xb6f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb6f0));
        // 86 03E0
        gbc.setState(0x8728, 0x80be, 0xa5b0, 0x4257, 0x5c80, 0x5594, 0x1, 0x0);
        gbc.writeMem(0x5594, { 0xc0 });
        gbc.writeMem(0x8728, { 0x86 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x80be, gbc.sp());
        EXPECT(0x8729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8728));
        // 86 03E1
        gbc.setState(0x82d7, 0x9852, 0x48e0, 0xd614, 0xda86, 0x2f4c, 0x0, 0x0);
        gbc.writeMem(0x2f4c, { 0xa4 });
        gbc.writeMem(0x82d7, { 0x86 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9852, gbc.sp());
        EXPECT(0x82d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x82d7));
        // 86 03E2
        gbc.setState(0xb337, 0x5fff, 0x5f60, 0x6300, 0x6bee, 0x2a7a, 0x1, 0x1);
        gbc.writeMem(0x2a7a, { 0xd2 });
        gbc.writeMem(0xb337, { 0x86 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5fff, gbc.sp());
        EXPECT(0xb338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb337));
        // 86 03E3
        gbc.setState(0x5cdb, 0x728d, 0x17f0, 0xe7eb, 0xb36a, 0x191, 0x0, 0x0);
        gbc.writeMem(0x191, { 0xb4 });
        gbc.writeMem(0x5cdb, { 0x86 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x728d, gbc.sp());
        EXPECT(0x5cdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 86 03E4
        gbc.setState(0x64f8, 0x25cf, 0xdb90, 0x4ea6, 0x5ca8, 0x8f88, 0x0, 0x1);
        gbc.writeMem(0x64f8, { 0x86 });
        gbc.writeMem(0x8f88, { 0x97 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x25cf, gbc.sp());
        EXPECT(0x64f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8f88));
        // 86 03E5
        gbc.setState(0x40ed, 0xc4bf, 0xe1d0, 0x62cb, 0xab60, 0xe74e, 0x0, 0x0);
        gbc.writeMem(0x40ed, { 0x86 });
        gbc.writeMem(0xe74e, { 0x11 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc4bf, gbc.sp());
        EXPECT(0x40ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe74e));
        // 86 03E7
        gbc.setState(0x7413, 0xbdde, 0x6520, 0x7173, 0x5313, 0xb889, 0x0, 0x0);
        gbc.writeMem(0x7413, { 0x86 });
        gbc.writeMem(0xb889, { 0x68 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbdde, gbc.sp());
        EXPECT(0x7414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb889));
    }
