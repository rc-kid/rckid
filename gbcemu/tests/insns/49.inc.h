    TEST(gbcemu, opcode_49) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 49 0000
        gbc.setState(0x576f, 0x357a, 0xd770, 0xf31b, 0xec62, 0x4863, 0x1, 0x1);
        gbc.writeMem(0x576f, { 0x49 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x357a, gbc.sp());
        EXPECT(0x5770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0001
        gbc.setState(0x42a4, 0xc0af, 0x8760, 0xf7d, 0x72fe, 0x8b77, 0x1, 0x1);
        gbc.writeMem(0x42a4, { 0x49 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc0af, gbc.sp());
        EXPECT(0x42a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0002
        gbc.setState(0x4d9b, 0xfde7, 0x4b0, 0x8b21, 0x1b66, 0x4c61, 0x1, 0x1);
        gbc.writeMem(0x4d9b, { 0x49 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xfde7, gbc.sp());
        EXPECT(0x4d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0003
        gbc.setState(0xee1c, 0xf796, 0x67c0, 0xdb02, 0x3dc0, 0x6622, 0x0, 0x0);
        gbc.writeMem(0xee1c, { 0x49 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf796, gbc.sp());
        EXPECT(0xee1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xee1c));
        // 49 0004
        gbc.setState(0x7927, 0x1141, 0x6bd0, 0xbf91, 0x4e53, 0xdac4, 0x1, 0x1);
        gbc.writeMem(0x7927, { 0x49 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1141, gbc.sp());
        EXPECT(0x7928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0005
        gbc.setState(0xb0bb, 0xad30, 0xb240, 0x7103, 0x8c76, 0x65c7, 0x0, 0x0);
        gbc.writeMem(0xb0bb, { 0x49 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xad30, gbc.sp());
        EXPECT(0xb0bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb0bb));
        // 49 0006
        gbc.setState(0x57ab, 0x3a07, 0xa80, 0x5fcb, 0x3092, 0x3f1a, 0x1, 0x0);
        gbc.writeMem(0x57ab, { 0x49 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3a07, gbc.sp());
        EXPECT(0x57ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0007
        gbc.setState(0xcf78, 0x2a7c, 0x5430, 0x52e4, 0x561c, 0xab26, 0x1, 0x1);
        gbc.writeMem(0xcf78, { 0x49 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2a7c, gbc.sp());
        EXPECT(0xcf79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xcf78));
        // 49 0008
        gbc.setState(0x9032, 0x8818, 0x2dc0, 0xa863, 0xd14a, 0x8e52, 0x0, 0x1);
        gbc.writeMem(0x9032, { 0x49 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8818, gbc.sp());
        EXPECT(0x9033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9032));
        // 49 0009
        gbc.setState(0x6ad7, 0x7fdd, 0xb160, 0x931, 0x3b65, 0x8c43, 0x1, 0x0);
        gbc.writeMem(0x6ad7, { 0x49 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7fdd, gbc.sp());
        EXPECT(0x6ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 000A
        gbc.setState(0x1e0c, 0x58ba, 0x6e10, 0xdd2c, 0xae4e, 0x9daa, 0x1, 0x0);
        gbc.writeMem(0x1e0c, { 0x49 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x58ba, gbc.sp());
        EXPECT(0x1e0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 000B
        gbc.setState(0x28ef, 0xce4c, 0x67f0, 0x53aa, 0xe6b5, 0x1b0c, 0x0, 0x1);
        gbc.writeMem(0x28ef, { 0x49 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xce4c, gbc.sp());
        EXPECT(0x28f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 000C
        gbc.setState(0x7d4f, 0xd619, 0x7900, 0xe8b2, 0x9ff5, 0x788b, 0x0, 0x0);
        gbc.writeMem(0x7d4f, { 0x49 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd619, gbc.sp());
        EXPECT(0x7d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 000D
        gbc.setState(0xef4d, 0xc425, 0xa210, 0xef2d, 0x3148, 0xc6c1, 0x1, 0x1);
        gbc.writeMem(0xef4d, { 0x49 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc425, gbc.sp());
        EXPECT(0xef4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xef4d));
        // 49 000E
        gbc.setState(0x5e13, 0xaaa8, 0x7f10, 0x4ce1, 0xa7e0, 0xe2a7, 0x1, 0x1);
        gbc.writeMem(0x5e13, { 0x49 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xaaa8, gbc.sp());
        EXPECT(0x5e14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 000F
        gbc.setState(0x1db3, 0xb09e, 0x8640, 0x3305, 0xadab, 0x7de8, 0x0, 0x0);
        gbc.writeMem(0x1db3, { 0x49 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb09e, gbc.sp());
        EXPECT(0x1db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0010
        gbc.setState(0x75bc, 0xef97, 0x9180, 0xd4c0, 0xe1b5, 0xb1cd, 0x0, 0x1);
        gbc.writeMem(0x75bc, { 0x49 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xef97, gbc.sp());
        EXPECT(0x75bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0011
        gbc.setState(0xbf90, 0xea24, 0x2580, 0xb921, 0xf6e1, 0x353b, 0x1, 0x0);
        gbc.writeMem(0xbf90, { 0x49 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xea24, gbc.sp());
        EXPECT(0xbf91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbf90));
        // 49 0012
        gbc.setState(0x51c3, 0x2078, 0x82f0, 0x1a58, 0xa4b1, 0xc770, 0x1, 0x0);
        gbc.writeMem(0x51c3, { 0x49 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2078, gbc.sp());
        EXPECT(0x51c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0013
        gbc.setState(0x894c, 0x7546, 0xec10, 0xb95f, 0x4772, 0x1b11, 0x0, 0x1);
        gbc.writeMem(0x894c, { 0x49 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7546, gbc.sp());
        EXPECT(0x894d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x894c));
        // 49 0014
        gbc.setState(0xb4cf, 0xa121, 0x4cd0, 0xe675, 0xdcd8, 0xf669, 0x1, 0x0);
        gbc.writeMem(0xb4cf, { 0x49 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa121, gbc.sp());
        EXPECT(0xb4d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb4cf));
        // 49 0015
        gbc.setState(0xca39, 0x1080, 0xa650, 0x7a4f, 0x34a1, 0xada2, 0x0, 0x0);
        gbc.writeMem(0xca39, { 0x49 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1080, gbc.sp());
        EXPECT(0xca3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xca39));
        // 49 0016
        gbc.setState(0x3713, 0x838a, 0x9a80, 0x84f6, 0xece3, 0x10a1, 0x0, 0x0);
        gbc.writeMem(0x3713, { 0x49 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x838a, gbc.sp());
        EXPECT(0x3714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0017
        gbc.setState(0x5a98, 0x5c6d, 0xf510, 0x7cd0, 0x23ea, 0x867f, 0x1, 0x1);
        gbc.writeMem(0x5a98, { 0x49 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5c6d, gbc.sp());
        EXPECT(0x5a99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0018
        gbc.setState(0xe1cf, 0x15e8, 0xe860, 0x5774, 0x2ac1, 0x8c28, 0x1, 0x1);
        gbc.writeMem(0xe1cf, { 0x49 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x15e8, gbc.sp());
        EXPECT(0xe1d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe1cf));
        // 49 0019
        gbc.setState(0x10e3, 0xe411, 0xbc70, 0xefc2, 0x9f1b, 0xd076, 0x1, 0x1);
        gbc.writeMem(0x10e3, { 0x49 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe411, gbc.sp());
        EXPECT(0x10e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 001A
        gbc.setState(0x362b, 0x8296, 0xaa10, 0xf75c, 0xdd6f, 0xc739, 0x0, 0x0);
        gbc.writeMem(0x362b, { 0x49 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8296, gbc.sp());
        EXPECT(0x362c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 001B
        gbc.setState(0xd4f8, 0x1de7, 0xa6d0, 0x9d17, 0x90df, 0xa05a, 0x0, 0x0);
        gbc.writeMem(0xd4f8, { 0x49 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1de7, gbc.sp());
        EXPECT(0xd4f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd4f8));
        // 49 001C
        gbc.setState(0xbb8a, 0xcb64, 0x4c70, 0x7931, 0x226b, 0xdcdd, 0x1, 0x0);
        gbc.writeMem(0xbb8a, { 0x49 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xcb64, gbc.sp());
        EXPECT(0xbb8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbb8a));
        // 49 0020
        gbc.setState(0x195f, 0x4b03, 0xadb0, 0x6275, 0x1b6c, 0x7296, 0x0, 0x1);
        gbc.writeMem(0x195f, { 0x49 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4b03, gbc.sp());
        EXPECT(0x1960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0021
        gbc.setState(0x8fe9, 0xa7c, 0xba80, 0x36f9, 0xfee, 0xb486, 0x1, 0x0);
        gbc.writeMem(0x8fe9, { 0x49 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa7c, gbc.sp());
        EXPECT(0x8fea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8fe9));
        // 49 0022
        gbc.setState(0xdf6, 0x2bb9, 0xdce0, 0xc74a, 0xdffd, 0xede4, 0x0, 0x0);
        gbc.writeMem(0xdf6, { 0x49 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2bb9, gbc.sp());
        EXPECT(0xdf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0023
        gbc.setState(0x56be, 0x4f71, 0x44c0, 0xb1ac, 0x9428, 0xd006, 0x0, 0x1);
        gbc.writeMem(0x56be, { 0x49 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4f71, gbc.sp());
        EXPECT(0x56bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0024
        gbc.setState(0x125d, 0xa46b, 0xfca0, 0x734e, 0x34ee, 0xcd60, 0x0, 0x0);
        gbc.writeMem(0x125d, { 0x49 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa46b, gbc.sp());
        EXPECT(0x125e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0025
        gbc.setState(0x317c, 0x4378, 0x1d50, 0x77cc, 0x6e6b, 0xf23, 0x0, 0x0);
        gbc.writeMem(0x317c, { 0x49 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4378, gbc.sp());
        EXPECT(0x317d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0026
        gbc.setState(0x922e, 0x6bba, 0x4290, 0xd561, 0x747d, 0xf224, 0x0, 0x0);
        gbc.writeMem(0x922e, { 0x49 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6bba, gbc.sp());
        EXPECT(0x922f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x922e));
        // 49 0028
        gbc.setState(0x2714, 0x58d1, 0x5690, 0xd65d, 0xa96a, 0x656b, 0x0, 0x0);
        gbc.writeMem(0x2714, { 0x49 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x58d1, gbc.sp());
        EXPECT(0x2715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0029
        gbc.setState(0x799, 0x14e2, 0x120, 0x3756, 0x74f2, 0xe2e7, 0x1, 0x1);
        gbc.writeMem(0x799, { 0x49 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x14e2, gbc.sp());
        EXPECT(0x79a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 002A
        gbc.setState(0x71b1, 0x8b97, 0x9dc0, 0x4523, 0xb609, 0x7f91, 0x1, 0x0);
        gbc.writeMem(0x71b1, { 0x49 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8b97, gbc.sp());
        EXPECT(0x71b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 002B
        gbc.setState(0x7a39, 0x7e0b, 0xfa30, 0x5a88, 0xcb24, 0xfdef, 0x1, 0x0);
        gbc.writeMem(0x7a39, { 0x49 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7e0b, gbc.sp());
        EXPECT(0x7a3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 002C
        gbc.setState(0xbb6b, 0x92e7, 0xf8a0, 0x6671, 0xf285, 0xf6e2, 0x0, 0x0);
        gbc.writeMem(0xbb6b, { 0x49 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x92e7, gbc.sp());
        EXPECT(0xbb6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbb6b));
        // 49 002D
        gbc.setState(0xb1ce, 0x44cf, 0xd5f0, 0x272a, 0x97d7, 0x54cc, 0x0, 0x0);
        gbc.writeMem(0xb1ce, { 0x49 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x44cf, gbc.sp());
        EXPECT(0xb1cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb1ce));
        // 49 002E
        gbc.setState(0x104e, 0xf928, 0xff80, 0x6c8d, 0x1c7, 0xa535, 0x1, 0x1);
        gbc.writeMem(0x104e, { 0x49 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf928, gbc.sp());
        EXPECT(0x104f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 002F
        gbc.setState(0x950e, 0xe902, 0xe70, 0xe370, 0x11fb, 0x3033, 0x1, 0x1);
        gbc.writeMem(0x950e, { 0x49 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe902, gbc.sp());
        EXPECT(0x950f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x950e));
        // 49 0030
        gbc.setState(0xac68, 0xdbb7, 0xfeb0, 0xcc5a, 0x64f5, 0x24c9, 0x0, 0x0);
        gbc.writeMem(0xac68, { 0x49 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdbb7, gbc.sp());
        EXPECT(0xac69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xac68));
        // 49 0031
        gbc.setState(0x805a, 0x7bd3, 0x7370, 0x99ae, 0x3bba, 0xdc4b, 0x1, 0x0);
        gbc.writeMem(0x805a, { 0x49 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7bd3, gbc.sp());
        EXPECT(0x805b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x805a));
        // 49 0033
        gbc.setState(0xc5e4, 0xbc93, 0x3040, 0xb7d3, 0xc802, 0xf4b9, 0x1, 0x1);
        gbc.writeMem(0xc5e4, { 0x49 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbc93, gbc.sp());
        EXPECT(0xc5e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc5e4));
        // 49 0034
        gbc.setState(0x4e4d, 0x4676, 0x6c40, 0x3282, 0x3372, 0xce2e, 0x0, 0x1);
        gbc.writeMem(0x4e4d, { 0x49 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4676, gbc.sp());
        EXPECT(0x4e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0035
        gbc.setState(0x6c5f, 0xdf1a, 0x14c0, 0xa376, 0x86e2, 0x8fe8, 0x0, 0x0);
        gbc.writeMem(0x6c5f, { 0x49 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdf1a, gbc.sp());
        EXPECT(0x6c60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0036
        gbc.setState(0x8d05, 0x6b66, 0xc3e0, 0xe2e, 0xacf8, 0x479b, 0x0, 0x0);
        gbc.writeMem(0x8d05, { 0x49 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6b66, gbc.sp());
        EXPECT(0x8d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8d05));
        // 49 0037
        gbc.setState(0x474b, 0x8359, 0x1940, 0xfa09, 0x5103, 0xb85b, 0x1, 0x1);
        gbc.writeMem(0x474b, { 0x49 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8359, gbc.sp());
        EXPECT(0x474c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0038
        gbc.setState(0xcac7, 0xf2af, 0xedb0, 0x9226, 0x6108, 0x245b, 0x1, 0x0);
        gbc.writeMem(0xcac7, { 0x49 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf2af, gbc.sp());
        EXPECT(0xcac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xcac7));
        // 49 0039
        gbc.setState(0x2d3, 0x5622, 0x9db0, 0xc364, 0xe838, 0x75d0, 0x1, 0x1);
        gbc.writeMem(0x2d3, { 0x49 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5622, gbc.sp());
        EXPECT(0x2d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 003A
        gbc.setState(0x7cf0, 0xbe48, 0x6a0, 0x6de3, 0x1ace, 0xfee5, 0x0, 0x0);
        gbc.writeMem(0x7cf0, { 0x49 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbe48, gbc.sp());
        EXPECT(0x7cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 003B
        gbc.setState(0xbf3a, 0x35ff, 0xf750, 0x2727, 0xc167, 0xc222, 0x1, 0x1);
        gbc.writeMem(0xbf3a, { 0x49 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x35ff, gbc.sp());
        EXPECT(0xbf3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbf3a));
        // 49 003C
        gbc.setState(0xff7, 0xc167, 0x4710, 0xea78, 0xd9bf, 0xd776, 0x1, 0x1);
        gbc.writeMem(0xff7, { 0x49 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc167, gbc.sp());
        EXPECT(0xff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 003E
        gbc.setState(0xeaa1, 0xec99, 0x8500, 0x1107, 0x351b, 0x6f1c, 0x0, 0x1);
        gbc.writeMem(0xeaa1, { 0x49 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xec99, gbc.sp());
        EXPECT(0xeaa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xeaa1));
        // 49 003F
        gbc.setState(0xe07, 0x4e97, 0xaab0, 0x8f91, 0xbd0e, 0x6cf0, 0x0, 0x0);
        gbc.writeMem(0xe07, { 0x49 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4e97, gbc.sp());
        EXPECT(0xe08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0040
        gbc.setState(0x2640, 0x4963, 0xcd70, 0x25e6, 0xf0f8, 0x8e6c, 0x0, 0x1);
        gbc.writeMem(0x2640, { 0x49 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4963, gbc.sp());
        EXPECT(0x2641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0042
        gbc.setState(0xd901, 0xfae5, 0xf7d0, 0x7659, 0x1f40, 0xc362, 0x0, 0x0);
        gbc.writeMem(0xd901, { 0x49 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfae5, gbc.sp());
        EXPECT(0xd902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd901));
        // 49 0043
        gbc.setState(0x5ed9, 0x4943, 0x90, 0xd57f, 0x4755, 0x5a4c, 0x1, 0x0);
        gbc.writeMem(0x5ed9, { 0x49 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4943, gbc.sp());
        EXPECT(0x5eda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0044
        gbc.setState(0x7a4f, 0x9f16, 0x8980, 0xee99, 0x64e2, 0x3c09, 0x1, 0x0);
        gbc.writeMem(0x7a4f, { 0x49 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9f16, gbc.sp());
        EXPECT(0x7a50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0045
        gbc.setState(0xa535, 0xe512, 0xd430, 0x58cc, 0x3373, 0x2d95, 0x1, 0x1);
        gbc.writeMem(0xa535, { 0x49 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe512, gbc.sp());
        EXPECT(0xa536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa535));
        // 49 0046
        gbc.setState(0x6972, 0x4bc8, 0x3e10, 0x4e44, 0xde01, 0x5532, 0x0, 0x1);
        gbc.writeMem(0x6972, { 0x49 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4bc8, gbc.sp());
        EXPECT(0x6973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0047
        gbc.setState(0x6661, 0x629d, 0x63c0, 0x9912, 0x8baf, 0xf532, 0x1, 0x0);
        gbc.writeMem(0x6661, { 0x49 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x629d, gbc.sp());
        EXPECT(0x6662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0048
        gbc.setState(0xd74b, 0xcdad, 0x300, 0x74b4, 0x4c6, 0x31b1, 0x1, 0x0);
        gbc.writeMem(0xd74b, { 0x49 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xcdad, gbc.sp());
        EXPECT(0xd74c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd74b));
        // 49 0049
        gbc.setState(0x197f, 0xed17, 0x93a0, 0x7125, 0x9d0e, 0xb81f, 0x1, 0x1);
        gbc.writeMem(0x197f, { 0x49 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xed17, gbc.sp());
        EXPECT(0x1980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 004A
        gbc.setState(0xb821, 0xf7f0, 0x6ca0, 0x86a9, 0x9a66, 0x67c7, 0x0, 0x1);
        gbc.writeMem(0xb821, { 0x49 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf7f0, gbc.sp());
        EXPECT(0xb822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb821));
        // 49 004B
        gbc.setState(0xae3f, 0xee67, 0x17e0, 0x8ce8, 0xf22e, 0xcf21, 0x0, 0x0);
        gbc.writeMem(0xae3f, { 0x49 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xee67, gbc.sp());
        EXPECT(0xae40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xae3f));
        // 49 004C
        gbc.setState(0xb88c, 0x9ae8, 0x3320, 0xf4c2, 0xfd96, 0x8fd5, 0x0, 0x1);
        gbc.writeMem(0xb88c, { 0x49 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9ae8, gbc.sp());
        EXPECT(0xb88d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb88c));
        // 49 004D
        gbc.setState(0x1fc5, 0xe05f, 0xe90, 0xa23f, 0xc228, 0x44ed, 0x1, 0x1);
        gbc.writeMem(0x1fc5, { 0x49 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe05f, gbc.sp());
        EXPECT(0x1fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 004E
        gbc.setState(0xee2c, 0xa9e6, 0xb700, 0xec60, 0x4583, 0x7f4f, 0x1, 0x0);
        gbc.writeMem(0xee2c, { 0x49 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa9e6, gbc.sp());
        EXPECT(0xee2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xee2c));
        // 49 004F
        gbc.setState(0xc779, 0xf89a, 0x2fa0, 0x36ad, 0x2683, 0x4eb4, 0x0, 0x1);
        gbc.writeMem(0xc779, { 0x49 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf89a, gbc.sp());
        EXPECT(0xc77a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc779));
        // 49 0050
        gbc.setState(0xbf22, 0x84b5, 0x4cb0, 0x2f95, 0xa1a6, 0x2a3a, 0x0, 0x0);
        gbc.writeMem(0xbf22, { 0x49 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x84b5, gbc.sp());
        EXPECT(0xbf23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbf22));
        // 49 0051
        gbc.setState(0xc612, 0x4cc7, 0x6420, 0x9d08, 0xe534, 0xc11d, 0x0, 0x0);
        gbc.writeMem(0xc612, { 0x49 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4cc7, gbc.sp());
        EXPECT(0xc613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc612));
        // 49 0052
        gbc.setState(0x67cc, 0x9e3a, 0xe550, 0x850b, 0x930a, 0xc12d, 0x1, 0x0);
        gbc.writeMem(0x67cc, { 0x49 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9e3a, gbc.sp());
        EXPECT(0x67cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0053
        gbc.setState(0x89a9, 0x5960, 0x57a0, 0xa406, 0x6f57, 0xfa52, 0x0, 0x0);
        gbc.writeMem(0x89a9, { 0x49 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5960, gbc.sp());
        EXPECT(0x89aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x89a9));
        // 49 0054
        gbc.setState(0x6a98, 0x3628, 0x6c00, 0x34c4, 0x9f71, 0xa4b, 0x0, 0x0);
        gbc.writeMem(0x6a98, { 0x49 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3628, gbc.sp());
        EXPECT(0x6a99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0055
        gbc.setState(0xe619, 0x8561, 0x3dd0, 0xa7be, 0xb0da, 0x4c47, 0x1, 0x1);
        gbc.writeMem(0xe619, { 0x49 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8561, gbc.sp());
        EXPECT(0xe61a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe619));
        // 49 0056
        gbc.setState(0x2bc4, 0x56fc, 0x8fe0, 0x2651, 0x6ba, 0xa51e, 0x1, 0x1);
        gbc.writeMem(0x2bc4, { 0x49 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x56fc, gbc.sp());
        EXPECT(0x2bc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0057
        gbc.setState(0xb5bd, 0x4a6e, 0x5060, 0x95aa, 0x24fd, 0x3c2d, 0x0, 0x0);
        gbc.writeMem(0xb5bd, { 0x49 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4a6e, gbc.sp());
        EXPECT(0xb5be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb5bd));
        // 49 0058
        gbc.setState(0x5fff, 0x9938, 0x5f80, 0x5fa6, 0xe9a, 0xf5a8, 0x1, 0x1);
        gbc.writeMem(0x5fff, { 0x49 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9938, gbc.sp());
        EXPECT(0x6000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0059
        gbc.setState(0x33f8, 0x68f8, 0x35c0, 0x1436, 0x8c68, 0x86ea, 0x1, 0x0);
        gbc.writeMem(0x33f8, { 0x49 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x68f8, gbc.sp());
        EXPECT(0x33f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 005B
        gbc.setState(0x7970, 0x7e87, 0x3940, 0x505b, 0x90d4, 0x8c6c, 0x0, 0x1);
        gbc.writeMem(0x7970, { 0x49 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7e87, gbc.sp());
        EXPECT(0x7971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 005C
        gbc.setState(0x69a1, 0x6e21, 0x1ec0, 0xfd7a, 0x9067, 0xc5d2, 0x0, 0x1);
        gbc.writeMem(0x69a1, { 0x49 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6e21, gbc.sp());
        EXPECT(0x69a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 005D
        gbc.setState(0xe6cd, 0xc2da, 0x9da0, 0xe245, 0x70b4, 0x2f9c, 0x1, 0x1);
        gbc.writeMem(0xe6cd, { 0x49 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc2da, gbc.sp());
        EXPECT(0xe6ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe6cd));
        // 49 005E
        gbc.setState(0xe015, 0xd5cd, 0x41a0, 0x5e08, 0x190d, 0x927c, 0x0, 0x1);
        gbc.writeMem(0xe015, { 0x49 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd5cd, gbc.sp());
        EXPECT(0xe016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe015));
        // 49 005F
        gbc.setState(0xd294, 0x21fc, 0xf460, 0xb489, 0xdc76, 0x2a24, 0x1, 0x0);
        gbc.writeMem(0xd294, { 0x49 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x21fc, gbc.sp());
        EXPECT(0xd295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd294));
        // 49 0061
        gbc.setState(0x6544, 0x4332, 0xf0a0, 0x1c7d, 0x81e8, 0x656f, 0x0, 0x0);
        gbc.writeMem(0x6544, { 0x49 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4332, gbc.sp());
        EXPECT(0x6545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0063
        gbc.setState(0xb547, 0xd92a, 0x26b0, 0x71e2, 0x69bc, 0x50f4, 0x1, 0x1);
        gbc.writeMem(0xb547, { 0x49 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd92a, gbc.sp());
        EXPECT(0xb548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb547));
        // 49 0064
        gbc.setState(0xc1f5, 0xed9d, 0x2d70, 0x4011, 0x2ac2, 0xa50d, 0x0, 0x0);
        gbc.writeMem(0xc1f5, { 0x49 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xed9d, gbc.sp());
        EXPECT(0xc1f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc1f5));
        // 49 0065
        gbc.setState(0x6948, 0xe8ef, 0x2570, 0xe478, 0xb542, 0xb08e, 0x1, 0x0);
        gbc.writeMem(0x6948, { 0x49 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe8ef, gbc.sp());
        EXPECT(0x6949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0066
        gbc.setState(0xdf1b, 0xc9f5, 0x21c0, 0xb6e3, 0x7f09, 0x358, 0x1, 0x0);
        gbc.writeMem(0xdf1b, { 0x49 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc9f5, gbc.sp());
        EXPECT(0xdf1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xdf1b));
        // 49 0067
        gbc.setState(0x183f, 0xefd8, 0xcb90, 0xc93d, 0x4616, 0x187f, 0x0, 0x0);
        gbc.writeMem(0x183f, { 0x49 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xefd8, gbc.sp());
        EXPECT(0x1840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0068
        gbc.setState(0xde20, 0xc1ed, 0x2d00, 0x4090, 0x6228, 0x1ec2, 0x1, 0x1);
        gbc.writeMem(0xde20, { 0x49 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc1ed, gbc.sp());
        EXPECT(0xde21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xde20));
        // 49 0069
        gbc.setState(0x95ef, 0xf313, 0x46e0, 0x5bf8, 0xe3d6, 0x15ca, 0x1, 0x0);
        gbc.writeMem(0x95ef, { 0x49 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf313, gbc.sp());
        EXPECT(0x95f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x95ef));
        // 49 006A
        gbc.setState(0x935e, 0xa123, 0x28d0, 0xb597, 0xb82, 0x7dad, 0x1, 0x0);
        gbc.writeMem(0x935e, { 0x49 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa123, gbc.sp());
        EXPECT(0x935f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x935e));
        // 49 006B
        gbc.setState(0x5f12, 0x9d5f, 0x27d0, 0xf353, 0x7ab7, 0x7628, 0x0, 0x1);
        gbc.writeMem(0x5f12, { 0x49 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9d5f, gbc.sp());
        EXPECT(0x5f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 006C
        gbc.setState(0x736c, 0xcc3f, 0x8af0, 0xa410, 0xe34b, 0xf4dd, 0x0, 0x1);
        gbc.writeMem(0x736c, { 0x49 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xcc3f, gbc.sp());
        EXPECT(0x736d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 006D
        gbc.setState(0x4fcf, 0x1326, 0xef00, 0x2e3e, 0xf9b5, 0x4b2, 0x0, 0x1);
        gbc.writeMem(0x4fcf, { 0x49 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1326, gbc.sp());
        EXPECT(0x4fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 006E
        gbc.setState(0x45b4, 0x4b6e, 0xcca0, 0x6e32, 0xa166, 0xae24, 0x1, 0x0);
        gbc.writeMem(0x45b4, { 0x49 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4b6e, gbc.sp());
        EXPECT(0x45b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 006F
        gbc.setState(0x7fac, 0xfba9, 0x8e70, 0x549c, 0x16fb, 0x8d5c, 0x1, 0x0);
        gbc.writeMem(0x7fac, { 0x49 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfba9, gbc.sp());
        EXPECT(0x7fad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0070
        gbc.setState(0xc912, 0x3ae, 0x4250, 0x4a, 0xc987, 0xaa93, 0x1, 0x1);
        gbc.writeMem(0xc912, { 0x49 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3ae, gbc.sp());
        EXPECT(0xc913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc912));
        // 49 0071
        gbc.setState(0xe7bd, 0xd743, 0x7120, 0xb358, 0x47da, 0xad78, 0x0, 0x0);
        gbc.writeMem(0xe7bd, { 0x49 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd743, gbc.sp());
        EXPECT(0xe7be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe7bd));
        // 49 0072
        gbc.setState(0x59f5, 0x45c3, 0xc8d0, 0xe692, 0xd6f8, 0xe4e0, 0x0, 0x0);
        gbc.writeMem(0x59f5, { 0x49 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x45c3, gbc.sp());
        EXPECT(0x59f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0073
        gbc.setState(0xc7e5, 0x24, 0xda70, 0x54df, 0x64e7, 0xabfe, 0x1, 0x1);
        gbc.writeMem(0xc7e5, { 0x49 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x24, gbc.sp());
        EXPECT(0xc7e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc7e5));
        // 49 0074
        gbc.setState(0xfaf, 0xad2e, 0xcbe0, 0xb7f, 0x4fd5, 0xd702, 0x1, 0x0);
        gbc.writeMem(0xfaf, { 0x49 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xad2e, gbc.sp());
        EXPECT(0xfb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0075
        gbc.setState(0x66d0, 0x9ea9, 0x4b10, 0xde6d, 0x4699, 0xc3df, 0x0, 0x0);
        gbc.writeMem(0x66d0, { 0x49 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9ea9, gbc.sp());
        EXPECT(0x66d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0077
        gbc.setState(0x8a4a, 0x791d, 0x52f0, 0xedd8, 0x4d40, 0xb165, 0x0, 0x1);
        gbc.writeMem(0x8a4a, { 0x49 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x791d, gbc.sp());
        EXPECT(0x8a4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8a4a));
        // 49 0078
        gbc.setState(0xc0c, 0xe968, 0xaf20, 0x2db6, 0x15d0, 0x4cdc, 0x1, 0x1);
        gbc.writeMem(0xc0c, { 0x49 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe968, gbc.sp());
        EXPECT(0xc0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0079
        gbc.setState(0xc922, 0xa9d, 0xe100, 0xd140, 0x441f, 0xf7b9, 0x0, 0x0);
        gbc.writeMem(0xc922, { 0x49 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa9d, gbc.sp());
        EXPECT(0xc923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc922));
        // 49 007A
        gbc.setState(0x5820, 0x5d0b, 0xcb40, 0xc29c, 0xd17a, 0xec2f, 0x0, 0x1);
        gbc.writeMem(0x5820, { 0x49 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5d0b, gbc.sp());
        EXPECT(0x5821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 007B
        gbc.setState(0xb46e, 0xb98c, 0x82c0, 0xbd63, 0xb163, 0x6dd8, 0x0, 0x0);
        gbc.writeMem(0xb46e, { 0x49 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb98c, gbc.sp());
        EXPECT(0xb46f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb46e));
        // 49 007C
        gbc.setState(0x3b50, 0x1f12, 0x6710, 0x3a3, 0x7d2a, 0xff61, 0x1, 0x0);
        gbc.writeMem(0x3b50, { 0x49 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1f12, gbc.sp());
        EXPECT(0x3b51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 007D
        gbc.setState(0x5cfb, 0xea34, 0xf700, 0xfc54, 0x7d27, 0x40ab, 0x0, 0x0);
        gbc.writeMem(0x5cfb, { 0x49 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xea34, gbc.sp());
        EXPECT(0x5cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 007E
        gbc.setState(0x3fd8, 0x25ed, 0x8c60, 0x9214, 0xf4c, 0xbbc3, 0x1, 0x0);
        gbc.writeMem(0x3fd8, { 0x49 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x25ed, gbc.sp());
        EXPECT(0x3fd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 007F
        gbc.setState(0xd9fa, 0x9d44, 0x96d0, 0x1dc4, 0xfdb5, 0x65a0, 0x1, 0x1);
        gbc.writeMem(0xd9fa, { 0x49 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9d44, gbc.sp());
        EXPECT(0xd9fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd9fa));
        // 49 0080
        gbc.setState(0xe92d, 0x9d14, 0x6da0, 0xd896, 0x4cf4, 0x5330, 0x1, 0x0);
        gbc.writeMem(0xe92d, { 0x49 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9d14, gbc.sp());
        EXPECT(0xe92e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe92d));
        // 49 0081
        gbc.setState(0x89fd, 0x7315, 0xbff0, 0xd2d4, 0x544, 0x2551, 0x0, 0x1);
        gbc.writeMem(0x89fd, { 0x49 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7315, gbc.sp());
        EXPECT(0x89fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x89fd));
        // 49 0083
        gbc.setState(0xbc0e, 0x2758, 0x4810, 0xdbb1, 0x3be5, 0x4aef, 0x0, 0x0);
        gbc.writeMem(0xbc0e, { 0x49 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2758, gbc.sp());
        EXPECT(0xbc0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbc0e));
        // 49 0085
        gbc.setState(0xeb7e, 0x8996, 0x610, 0x2e09, 0xaf29, 0xef88, 0x0, 0x1);
        gbc.writeMem(0xeb7e, { 0x49 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8996, gbc.sp());
        EXPECT(0xeb7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xeb7e));
        // 49 0086
        gbc.setState(0x32f4, 0x9fe, 0xf90, 0x4a99, 0x91dc, 0xdc3f, 0x0, 0x1);
        gbc.writeMem(0x32f4, { 0x49 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9fe, gbc.sp());
        EXPECT(0x32f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0087
        gbc.setState(0x71e7, 0xbfe4, 0x1e30, 0x16bf, 0x4562, 0x1d92, 0x0, 0x0);
        gbc.writeMem(0x71e7, { 0x49 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbfe4, gbc.sp());
        EXPECT(0x71e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0088
        gbc.setState(0xc86, 0x343b, 0xea30, 0xed05, 0xb8c0, 0x4a4a, 0x1, 0x1);
        gbc.writeMem(0xc86, { 0x49 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x343b, gbc.sp());
        EXPECT(0xc87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0089
        gbc.setState(0xbe48, 0x7e4c, 0x9e40, 0x594a, 0x17de, 0x70c9, 0x0, 0x1);
        gbc.writeMem(0xbe48, { 0x49 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7e4c, gbc.sp());
        EXPECT(0xbe49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbe48));
        // 49 008A
        gbc.setState(0x9e56, 0x8214, 0x57b0, 0xc2b3, 0xbadc, 0xe31, 0x1, 0x0);
        gbc.writeMem(0x9e56, { 0x49 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8214, gbc.sp());
        EXPECT(0x9e57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9e56));
        // 49 008B
        gbc.setState(0x119e, 0x41a, 0x9990, 0x57c9, 0x8c8, 0x6210, 0x0, 0x1);
        gbc.writeMem(0x119e, { 0x49 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x41a, gbc.sp());
        EXPECT(0x119f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 008C
        gbc.setState(0x5c3a, 0xf483, 0xf6f0, 0xdae2, 0x1db3, 0xe15a, 0x0, 0x0);
        gbc.writeMem(0x5c3a, { 0x49 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf483, gbc.sp());
        EXPECT(0x5c3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 008D
        gbc.setState(0x7a3a, 0x96d6, 0x7990, 0x8df3, 0x6e13, 0xefd3, 0x0, 0x1);
        gbc.writeMem(0x7a3a, { 0x49 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x96d6, gbc.sp());
        EXPECT(0x7a3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 008F
        gbc.setState(0x6915, 0xd4d5, 0xf790, 0x205a, 0x9e0f, 0x19fa, 0x0, 0x1);
        gbc.writeMem(0x6915, { 0x49 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd4d5, gbc.sp());
        EXPECT(0x6916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0090
        gbc.setState(0x1d18, 0x49e9, 0xb010, 0xd034, 0x6303, 0x3ce0, 0x1, 0x0);
        gbc.writeMem(0x1d18, { 0x49 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x49e9, gbc.sp());
        EXPECT(0x1d19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0091
        gbc.setState(0x4ab4, 0x51d0, 0x2810, 0xfffb, 0xdc29, 0xede3, 0x0, 0x0);
        gbc.writeMem(0x4ab4, { 0x49 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x51d0, gbc.sp());
        EXPECT(0x4ab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0092
        gbc.setState(0x388e, 0xa614, 0x91c0, 0xd170, 0x210, 0x3175, 0x0, 0x1);
        gbc.writeMem(0x388e, { 0x49 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa614, gbc.sp());
        EXPECT(0x388f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0093
        gbc.setState(0xa334, 0x630f, 0xabe0, 0x8785, 0x871c, 0xa939, 0x0, 0x0);
        gbc.writeMem(0xa334, { 0x49 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x630f, gbc.sp());
        EXPECT(0xa335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa334));
        // 49 0094
        gbc.setState(0xc21c, 0x5780, 0xf0, 0x6919, 0x617d, 0xd35e, 0x0, 0x1);
        gbc.writeMem(0xc21c, { 0x49 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5780, gbc.sp());
        EXPECT(0xc21d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc21c));
        // 49 0095
        gbc.setState(0xc595, 0xb73c, 0x3be0, 0xa26c, 0x71d3, 0xe264, 0x1, 0x0);
        gbc.writeMem(0xc595, { 0x49 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb73c, gbc.sp());
        EXPECT(0xc596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc595));
        // 49 0096
        gbc.setState(0xef67, 0x92ce, 0x3030, 0x794a, 0x2ad2, 0x6397, 0x1, 0x0);
        gbc.writeMem(0xef67, { 0x49 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x92ce, gbc.sp());
        EXPECT(0xef68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xef67));
        // 49 0097
        gbc.setState(0xb2a9, 0xc576, 0xae60, 0x807, 0x8fd1, 0xa263, 0x0, 0x1);
        gbc.writeMem(0xb2a9, { 0x49 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc576, gbc.sp());
        EXPECT(0xb2aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb2a9));
        // 49 0098
        gbc.setState(0x9c42, 0x3144, 0x9c80, 0x265a, 0x5703, 0x85d1, 0x1, 0x0);
        gbc.writeMem(0x9c42, { 0x49 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3144, gbc.sp());
        EXPECT(0x9c43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9c42));
        // 49 0099
        gbc.setState(0x210e, 0x7ddc, 0x4610, 0x83f5, 0x73e6, 0xe21d, 0x0, 0x1);
        gbc.writeMem(0x210e, { 0x49 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7ddc, gbc.sp());
        EXPECT(0x210f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 009A
        gbc.setState(0x2f12, 0x78d1, 0x5740, 0x7091, 0x15f, 0xf33e, 0x0, 0x0);
        gbc.writeMem(0x2f12, { 0x49 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x78d1, gbc.sp());
        EXPECT(0x2f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 009B
        gbc.setState(0x6a1c, 0xeb50, 0xa2a0, 0x27c5, 0x5399, 0xba00, 0x0, 0x0);
        gbc.writeMem(0x6a1c, { 0x49 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xeb50, gbc.sp());
        EXPECT(0x6a1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 009C
        gbc.setState(0x86e4, 0x875d, 0xd760, 0xa2bd, 0xab14, 0x216e, 0x1, 0x1);
        gbc.writeMem(0x86e4, { 0x49 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x875d, gbc.sp());
        EXPECT(0x86e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x86e4));
        // 49 009E
        gbc.setState(0xbb2f, 0xc4a0, 0x9ea0, 0x46ac, 0x4c93, 0x7c9c, 0x1, 0x0);
        gbc.writeMem(0xbb2f, { 0x49 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc4a0, gbc.sp());
        EXPECT(0xbb30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbb2f));
        // 49 009F
        gbc.setState(0x32e0, 0x1b35, 0xd540, 0xf67d, 0xe93d, 0xcf2e, 0x1, 0x1);
        gbc.writeMem(0x32e0, { 0x49 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1b35, gbc.sp());
        EXPECT(0x32e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00A0
        gbc.setState(0x51e, 0x8dd8, 0xbf0, 0xf829, 0x9277, 0x701, 0x1, 0x1);
        gbc.writeMem(0x51e, { 0x49 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8dd8, gbc.sp());
        EXPECT(0x51f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 00A1
        gbc.setState(0xdc33, 0xd609, 0x9370, 0x3b32, 0x7167, 0x7c4e, 0x0, 0x1);
        gbc.writeMem(0xdc33, { 0x49 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd609, gbc.sp());
        EXPECT(0xdc34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xdc33));
        // 49 00A2
        gbc.setState(0x64a4, 0x2893, 0x19d0, 0x34eb, 0x2eaa, 0xa724, 0x1, 0x0);
        gbc.writeMem(0x64a4, { 0x49 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2893, gbc.sp());
        EXPECT(0x64a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 00A3
        gbc.setState(0xb8d5, 0x346e, 0x8430, 0x4ddd, 0xba02, 0xcaa3, 0x0, 0x1);
        gbc.writeMem(0xb8d5, { 0x49 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x346e, gbc.sp());
        EXPECT(0xb8d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb8d5));
        // 49 00A4
        gbc.setState(0x1f97, 0xbf12, 0xd9e0, 0x626b, 0x20ab, 0x167, 0x0, 0x1);
        gbc.writeMem(0x1f97, { 0x49 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbf12, gbc.sp());
        EXPECT(0x1f98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00A5
        gbc.setState(0xace, 0x2392, 0x1270, 0x71e2, 0x905d, 0x4349, 0x0, 0x1);
        gbc.writeMem(0xace, { 0x49 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2392, gbc.sp());
        EXPECT(0xacf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 00A6
        gbc.setState(0xb6f3, 0x3dc, 0x72b0, 0xcd6b, 0xb56e, 0x48a2, 0x1, 0x1);
        gbc.writeMem(0xb6f3, { 0x49 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3dc, gbc.sp());
        EXPECT(0xb6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb6f3));
        // 49 00A7
        gbc.setState(0x2130, 0xa4bf, 0x4410, 0x746c, 0x7e7e, 0x6f77, 0x0, 0x0);
        gbc.writeMem(0x2130, { 0x49 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa4bf, gbc.sp());
        EXPECT(0x2131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 00A8
        gbc.setState(0xc34, 0x2bab, 0xd720, 0x8e8b, 0x563, 0x91c4, 0x1, 0x1);
        gbc.writeMem(0xc34, { 0x49 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2bab, gbc.sp());
        EXPECT(0xc35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00A9
        gbc.setState(0xca24, 0xc1bb, 0x9b10, 0x3208, 0xbd25, 0x2249, 0x0, 0x1);
        gbc.writeMem(0xca24, { 0x49 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc1bb, gbc.sp());
        EXPECT(0xca25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xca24));
        // 49 00AA
        gbc.setState(0x2ca2, 0xdc92, 0xac00, 0xcf9f, 0x9ec8, 0x9904, 0x1, 0x1);
        gbc.writeMem(0x2ca2, { 0x49 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdc92, gbc.sp());
        EXPECT(0x2ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00AB
        gbc.setState(0x6c91, 0x950e, 0x6840, 0x586b, 0xbb74, 0xc59, 0x1, 0x1);
        gbc.writeMem(0x6c91, { 0x49 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x950e, gbc.sp());
        EXPECT(0x6c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00AC
        gbc.setState(0x78f9, 0xc7b1, 0x93c0, 0x3d9f, 0xda0a, 0x3f5c, 0x0, 0x0);
        gbc.writeMem(0x78f9, { 0x49 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc7b1, gbc.sp());
        EXPECT(0x78fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00AD
        gbc.setState(0xd317, 0xdc72, 0xdc50, 0x600f, 0xae05, 0x12c7, 0x1, 0x1);
        gbc.writeMem(0xd317, { 0x49 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdc72, gbc.sp());
        EXPECT(0xd318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd317));
        // 49 00AE
        gbc.setState(0xa0a8, 0x3132, 0xb430, 0x863a, 0x5729, 0xbfc8, 0x1, 0x0);
        gbc.writeMem(0xa0a8, { 0x49 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3132, gbc.sp());
        EXPECT(0xa0a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa0a8));
        // 49 00AF
        gbc.setState(0x7ee8, 0x9e1b, 0x4f20, 0xce20, 0x9297, 0x730b, 0x1, 0x0);
        gbc.writeMem(0x7ee8, { 0x49 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9e1b, gbc.sp());
        EXPECT(0x7ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00B0
        gbc.setState(0x6be7, 0xbd1d, 0xdc50, 0xb995, 0xec5c, 0x97e0, 0x1, 0x1);
        gbc.writeMem(0x6be7, { 0x49 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbd1d, gbc.sp());
        EXPECT(0x6be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 00B1
        gbc.setState(0xaf2e, 0x6c7f, 0xf7c0, 0xe938, 0x3120, 0x825, 0x0, 0x0);
        gbc.writeMem(0xaf2e, { 0x49 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6c7f, gbc.sp());
        EXPECT(0xaf2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xaf2e));
        // 49 00B2
        gbc.setState(0x5236, 0x4880, 0x80b0, 0xb19e, 0xd87, 0x4aaf, 0x1, 0x0);
        gbc.writeMem(0x5236, { 0x49 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4880, gbc.sp());
        EXPECT(0x5237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 00B4
        gbc.setState(0xc580, 0xc0fe, 0x54d0, 0x9a40, 0x4728, 0x6a40, 0x0, 0x1);
        gbc.writeMem(0xc580, { 0x49 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc0fe, gbc.sp());
        EXPECT(0xc581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc580));
        // 49 00B5
        gbc.setState(0x142b, 0x66d7, 0xff00, 0x117d, 0xa12c, 0x896f, 0x0, 0x0);
        gbc.writeMem(0x142b, { 0x49 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x66d7, gbc.sp());
        EXPECT(0x142c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00B6
        gbc.setState(0xc09f, 0xfaea, 0x2ab0, 0xf6d4, 0xa8a8, 0xe429, 0x1, 0x1);
        gbc.writeMem(0xc09f, { 0x49 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfaea, gbc.sp());
        EXPECT(0xc0a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc09f));
        // 49 00B7
        gbc.setState(0x7e5b, 0xaa26, 0x9840, 0xa40a, 0x7ca6, 0x439a, 0x0, 0x1);
        gbc.writeMem(0x7e5b, { 0x49 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xaa26, gbc.sp());
        EXPECT(0x7e5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00B8
        gbc.setState(0xe84c, 0xdd7b, 0x2530, 0xf5d5, 0x26ba, 0x5e9b, 0x0, 0x1);
        gbc.writeMem(0xe84c, { 0x49 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdd7b, gbc.sp());
        EXPECT(0xe84d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe84c));
        // 49 00B9
        gbc.setState(0x8306, 0x73c8, 0xf520, 0x5f1, 0x3b36, 0x7ab6, 0x0, 0x0);
        gbc.writeMem(0x8306, { 0x49 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x73c8, gbc.sp());
        EXPECT(0x8307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8306));
        // 49 00BA
        gbc.setState(0xd55a, 0x4340, 0xde50, 0x11b7, 0xee6e, 0xe666, 0x0, 0x1);
        gbc.writeMem(0xd55a, { 0x49 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4340, gbc.sp());
        EXPECT(0xd55b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd55a));
        // 49 00BB
        gbc.setState(0x7299, 0xce1b, 0xb3c0, 0x72c0, 0x7683, 0xccff, 0x0, 0x0);
        gbc.writeMem(0x7299, { 0x49 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xce1b, gbc.sp());
        EXPECT(0x729a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00BC
        gbc.setState(0x6d61, 0x3a5d, 0xf0a0, 0x65e1, 0x558a, 0xcd4, 0x1, 0x0);
        gbc.writeMem(0x6d61, { 0x49 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3a5d, gbc.sp());
        EXPECT(0x6d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00BD
        gbc.setState(0xe079, 0x1c3e, 0x6b50, 0x8aeb, 0xf9d5, 0xe0f3, 0x1, 0x1);
        gbc.writeMem(0xe079, { 0x49 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1c3e, gbc.sp());
        EXPECT(0xe07a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe079));
        // 49 00BE
        gbc.setState(0x549c, 0x1b0d, 0xa910, 0xc2c0, 0xca75, 0xced4, 0x0, 0x0);
        gbc.writeMem(0x549c, { 0x49 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1b0d, gbc.sp());
        EXPECT(0x549d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 00BF
        gbc.setState(0x5e5f, 0xae81, 0x65b0, 0x676d, 0x228d, 0xbcb6, 0x1, 0x1);
        gbc.writeMem(0x5e5f, { 0x49 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xae81, gbc.sp());
        EXPECT(0x5e60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 00C0
        gbc.setState(0x980c, 0xbd9c, 0xdc60, 0xa3fe, 0xfc17, 0xe98c, 0x0, 0x0);
        gbc.writeMem(0x980c, { 0x49 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xbd9c, gbc.sp());
        EXPECT(0x980d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x980c));
        // 49 00C1
        gbc.setState(0xdf7, 0xf879, 0x9f20, 0x559f, 0x14fb, 0xcd77, 0x1, 0x1);
        gbc.writeMem(0xdf7, { 0x49 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf879, gbc.sp());
        EXPECT(0xdf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00C2
        gbc.setState(0x802c, 0xaa4, 0x72c0, 0x2dd1, 0x23d4, 0xc496, 0x0, 0x0);
        gbc.writeMem(0x802c, { 0x49 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xaa4, gbc.sp());
        EXPECT(0x802d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x802c));
        // 49 00C4
        gbc.setState(0x6d3a, 0xb127, 0x620, 0x99e2, 0x9e67, 0x44ae, 0x1, 0x1);
        gbc.writeMem(0x6d3a, { 0x49 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb127, gbc.sp());
        EXPECT(0x6d3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00C5
        gbc.setState(0xec82, 0xd565, 0xbdf0, 0xf201, 0x203f, 0xbf78, 0x1, 0x1);
        gbc.writeMem(0xec82, { 0x49 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd565, gbc.sp());
        EXPECT(0xec83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xec82));
        // 49 00C6
        gbc.setState(0x7942, 0x50ff, 0xd780, 0xf87d, 0x45e0, 0x7f2f, 0x0, 0x0);
        gbc.writeMem(0x7942, { 0x49 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x50ff, gbc.sp());
        EXPECT(0x7943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00C7
        gbc.setState(0x3ac0, 0x2c6e, 0xc130, 0x8bc6, 0xa188, 0x6bf4, 0x1, 0x1);
        gbc.writeMem(0x3ac0, { 0x49 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2c6e, gbc.sp());
        EXPECT(0x3ac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 00C8
        gbc.setState(0xe37b, 0xa079, 0x9df0, 0x42d6, 0x9ea8, 0x250e, 0x0, 0x0);
        gbc.writeMem(0xe37b, { 0x49 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa079, gbc.sp());
        EXPECT(0xe37c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe37b));
        // 49 00C9
        gbc.setState(0xbc12, 0x3731, 0x920, 0xe4b0, 0x7a88, 0xdb1e, 0x1, 0x1);
        gbc.writeMem(0xbc12, { 0x49 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3731, gbc.sp());
        EXPECT(0xbc13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbc12));
        // 49 00CA
        gbc.setState(0x64d9, 0xf02f, 0x4c60, 0xbfdf, 0x8b0b, 0x9073, 0x0, 0x1);
        gbc.writeMem(0x64d9, { 0x49 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf02f, gbc.sp());
        EXPECT(0x64da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00CB
        gbc.setState(0x30fc, 0x2574, 0xae80, 0x41b1, 0x99f3, 0x3a95, 0x1, 0x1);
        gbc.writeMem(0x30fc, { 0x49 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2574, gbc.sp());
        EXPECT(0x30fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00CC
        gbc.setState(0x51de, 0xbe37, 0x6d30, 0xee03, 0xb503, 0xf18, 0x0, 0x1);
        gbc.writeMem(0x51de, { 0x49 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbe37, gbc.sp());
        EXPECT(0x51df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 00CD
        gbc.setState(0xbe15, 0xe5b0, 0x1010, 0xf9fb, 0xc908, 0xa8c1, 0x1, 0x0);
        gbc.writeMem(0xbe15, { 0x49 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe5b0, gbc.sp());
        EXPECT(0xbe16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbe15));
        // 49 00CF
        gbc.setState(0x1a24, 0x134f, 0x2d80, 0xec75, 0x6f15, 0xf2e, 0x0, 0x0);
        gbc.writeMem(0x1a24, { 0x49 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x134f, gbc.sp());
        EXPECT(0x1a25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00D0
        gbc.setState(0x352d, 0xe11b, 0x5200, 0x3612, 0xd138, 0x7cdf, 0x1, 0x0);
        gbc.writeMem(0x352d, { 0x49 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe11b, gbc.sp());
        EXPECT(0x352e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00D1
        gbc.setState(0x8eae, 0x9aef, 0x1db0, 0x4936, 0xa3b3, 0xda0e, 0x0, 0x0);
        gbc.writeMem(0x8eae, { 0x49 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9aef, gbc.sp());
        EXPECT(0x8eaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8eae));
        // 49 00D2
        gbc.setState(0x4860, 0x8106, 0x50d0, 0xabf, 0x4ad5, 0x99eb, 0x1, 0x1);
        gbc.writeMem(0x4860, { 0x49 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8106, gbc.sp());
        EXPECT(0x4861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 00D3
        gbc.setState(0x687b, 0x22f6, 0x8dc0, 0x3590, 0x8428, 0x8295, 0x1, 0x1);
        gbc.writeMem(0x687b, { 0x49 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x22f6, gbc.sp());
        EXPECT(0x687c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00D4
        gbc.setState(0x36e1, 0x95d5, 0xb3c0, 0x6f7e, 0xbe58, 0xd835, 0x1, 0x0);
        gbc.writeMem(0x36e1, { 0x49 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x95d5, gbc.sp());
        EXPECT(0x36e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00D6
        gbc.setState(0x595c, 0x4955, 0xefa0, 0x8294, 0x152c, 0x91ec, 0x0, 0x0);
        gbc.writeMem(0x595c, { 0x49 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4955, gbc.sp());
        EXPECT(0x595d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00D7
        gbc.setState(0x3cf7, 0x65f1, 0xb50, 0xe0e1, 0xda20, 0xc5b1, 0x0, 0x0);
        gbc.writeMem(0x3cf7, { 0x49 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x65f1, gbc.sp());
        EXPECT(0x3cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 00D8
        gbc.setState(0xe893, 0xc29b, 0xedd0, 0xe4db, 0xd80, 0xdf15, 0x0, 0x0);
        gbc.writeMem(0xe893, { 0x49 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc29b, gbc.sp());
        EXPECT(0xe894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe893));
        // 49 00D9
        gbc.setState(0xa2f5, 0xa385, 0x9db0, 0x6dc3, 0xa8e8, 0xf51a, 0x1, 0x0);
        gbc.writeMem(0xa2f5, { 0x49 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa385, gbc.sp());
        EXPECT(0xa2f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa2f5));
        // 49 00DA
        gbc.setState(0x9220, 0x5e5, 0x8ef0, 0xde31, 0x6b82, 0xb7f2, 0x1, 0x1);
        gbc.writeMem(0x9220, { 0x49 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5e5, gbc.sp());
        EXPECT(0x9221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9220));
        // 49 00DB
        gbc.setState(0x52bf, 0xf9a1, 0x3e00, 0x3997, 0x639d, 0x8ccc, 0x1, 0x0);
        gbc.writeMem(0x52bf, { 0x49 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf9a1, gbc.sp());
        EXPECT(0x52c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00DC
        gbc.setState(0x5df5, 0x2bdc, 0xbeb0, 0xbbbd, 0xbbbc, 0xf8f8, 0x0, 0x1);
        gbc.writeMem(0x5df5, { 0x49 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2bdc, gbc.sp());
        EXPECT(0x5df6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 00DD
        gbc.setState(0x8ab1, 0xe867, 0x95b0, 0xb6fb, 0x924f, 0x7132, 0x1, 0x0);
        gbc.writeMem(0x8ab1, { 0x49 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe867, gbc.sp());
        EXPECT(0x8ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8ab1));
        // 49 00DE
        gbc.setState(0x1edd, 0x2aae, 0x8d00, 0x7e0f, 0x3413, 0x16fb, 0x1, 0x1);
        gbc.writeMem(0x1edd, { 0x49 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2aae, gbc.sp());
        EXPECT(0x1ede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00DF
        gbc.setState(0x98d3, 0xf94c, 0xe1b0, 0x712f, 0xb558, 0xf15b, 0x1, 0x1);
        gbc.writeMem(0x98d3, { 0x49 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf94c, gbc.sp());
        EXPECT(0x98d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x98d3));
        // 49 00E0
        gbc.setState(0x8244, 0xc60, 0x5330, 0x1f58, 0xe845, 0x51e7, 0x0, 0x0);
        gbc.writeMem(0x8244, { 0x49 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc60, gbc.sp());
        EXPECT(0x8245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8244));
        // 49 00E1
        gbc.setState(0xe198, 0x4de6, 0xf8a0, 0x5dd5, 0x3221, 0xa4a3, 0x0, 0x0);
        gbc.writeMem(0xe198, { 0x49 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4de6, gbc.sp());
        EXPECT(0xe199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe198));
        // 49 00E2
        gbc.setState(0xdbb4, 0x385f, 0x1dd0, 0xb254, 0x9e8c, 0x2ee2, 0x0, 0x0);
        gbc.writeMem(0xdbb4, { 0x49 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x385f, gbc.sp());
        EXPECT(0xdbb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xdbb4));
        // 49 00E3
        gbc.setState(0xe316, 0xe7bd, 0xbc20, 0xc686, 0xa8fb, 0x8aa3, 0x1, 0x0);
        gbc.writeMem(0xe316, { 0x49 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe7bd, gbc.sp());
        EXPECT(0xe317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe316));
        // 49 00E4
        gbc.setState(0xe90d, 0xcdbc, 0x43e0, 0xd249, 0x58b3, 0x9bf5, 0x0, 0x0);
        gbc.writeMem(0xe90d, { 0x49 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcdbc, gbc.sp());
        EXPECT(0xe90e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe90d));
        // 49 00E5
        gbc.setState(0xc531, 0x3877, 0xf3e0, 0x268e, 0x2fb, 0xdc06, 0x1, 0x0);
        gbc.writeMem(0xc531, { 0x49 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3877, gbc.sp());
        EXPECT(0xc532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc531));
        // 49 00E8
        gbc.setState(0xa698, 0x9dca, 0x7140, 0x8904, 0xa2ae, 0xa236, 0x0, 0x1);
        gbc.writeMem(0xa698, { 0x49 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9dca, gbc.sp());
        EXPECT(0xa699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa698));
        // 49 00E9
        gbc.setState(0x5350, 0x12aa, 0xc6b0, 0xfcc4, 0x2cbf, 0x19b8, 0x1, 0x0);
        gbc.writeMem(0x5350, { 0x49 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x12aa, gbc.sp());
        EXPECT(0x5351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 00EA
        gbc.setState(0x6b56, 0x7365, 0x77c0, 0xc79d, 0xdc3d, 0x81ca, 0x0, 0x0);
        gbc.writeMem(0x6b56, { 0x49 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7365, gbc.sp());
        EXPECT(0x6b57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00EC
        gbc.setState(0xe736, 0xaf0b, 0x87b0, 0x785b, 0x2891, 0x8392, 0x1, 0x0);
        gbc.writeMem(0xe736, { 0x49 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xaf0b, gbc.sp());
        EXPECT(0xe737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe736));
        // 49 00ED
        gbc.setState(0x4c59, 0x9fb8, 0x66b0, 0xa332, 0x6c5b, 0xce86, 0x0, 0x0);
        gbc.writeMem(0x4c59, { 0x49 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9fb8, gbc.sp());
        EXPECT(0x4c5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 00EE
        gbc.setState(0xb538, 0xdb03, 0xfef0, 0x52e4, 0x3d49, 0xbe58, 0x1, 0x0);
        gbc.writeMem(0xb538, { 0x49 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xdb03, gbc.sp());
        EXPECT(0xb539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb538));
        // 49 00EF
        gbc.setState(0x9576, 0x3cc4, 0x2bc0, 0x933e, 0xae7b, 0xeb44, 0x0, 0x0);
        gbc.writeMem(0x9576, { 0x49 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3cc4, gbc.sp());
        EXPECT(0x9577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9576));
        // 49 00F0
        gbc.setState(0x7cb3, 0x979c, 0xb30, 0xe0b0, 0x421, 0x350a, 0x1, 0x0);
        gbc.writeMem(0x7cb3, { 0x49 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x979c, gbc.sp());
        EXPECT(0x7cb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 00F1
        gbc.setState(0xa01d, 0x1bab, 0x5b80, 0xf77b, 0x686c, 0x307b, 0x0, 0x0);
        gbc.writeMem(0xa01d, { 0x49 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1bab, gbc.sp());
        EXPECT(0xa01e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa01d));
        // 49 00F2
        gbc.setState(0xdaf6, 0xed97, 0x23e0, 0x28a5, 0x4c60, 0xf5a7, 0x1, 0x1);
        gbc.writeMem(0xdaf6, { 0x49 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xed97, gbc.sp());
        EXPECT(0xdaf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xdaf6));
        // 49 00F3
        gbc.setState(0xee71, 0xbda, 0x2470, 0x2b45, 0xad20, 0x9d27, 0x1, 0x1);
        gbc.writeMem(0xee71, { 0x49 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbda, gbc.sp());
        EXPECT(0xee72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xee71));
        // 49 00F4
        gbc.setState(0xd1c1, 0xe998, 0xe440, 0x11a, 0xb76a, 0xd441, 0x0, 0x0);
        gbc.writeMem(0xd1c1, { 0x49 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe998, gbc.sp());
        EXPECT(0xd1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd1c1));
        // 49 00F5
        gbc.setState(0xb325, 0x652f, 0xc1f0, 0xd028, 0xff71, 0x39ac, 0x1, 0x1);
        gbc.writeMem(0xb325, { 0x49 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x652f, gbc.sp());
        EXPECT(0xb326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb325));
        // 49 00F6
        gbc.setState(0x43fe, 0x120, 0xdb30, 0x132f, 0xa706, 0x9b05, 0x0, 0x1);
        gbc.writeMem(0x43fe, { 0x49 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x120, gbc.sp());
        EXPECT(0x43ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 00F7
        gbc.setState(0x377a, 0x2259, 0x5100, 0x2ee0, 0x17c4, 0x2a2d, 0x0, 0x0);
        gbc.writeMem(0x377a, { 0x49 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2259, gbc.sp());
        EXPECT(0x377b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00F8
        gbc.setState(0x488e, 0xf068, 0x4c50, 0x52ab, 0x2f05, 0x9685, 0x0, 0x0);
        gbc.writeMem(0x488e, { 0x49 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf068, gbc.sp());
        EXPECT(0x488f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 00F9
        gbc.setState(0xce43, 0x6f3d, 0x56c0, 0x813b, 0xb440, 0x81c2, 0x1, 0x1);
        gbc.writeMem(0xce43, { 0x49 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6f3d, gbc.sp());
        EXPECT(0xce44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xce43));
        // 49 00FA
        gbc.setState(0x8ca5, 0x3314, 0x7670, 0x3ad1, 0xe19f, 0x6f65, 0x0, 0x0);
        gbc.writeMem(0x8ca5, { 0x49 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3314, gbc.sp());
        EXPECT(0x8ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8ca5));
        // 49 00FB
        gbc.setState(0x35bd, 0x8f7d, 0xea60, 0xa46d, 0xcb2b, 0xea53, 0x0, 0x1);
        gbc.writeMem(0x35bd, { 0x49 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8f7d, gbc.sp());
        EXPECT(0x35be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 00FC
        gbc.setState(0x4ed, 0x42f8, 0x61d0, 0x5386, 0xb926, 0xb56b, 0x0, 0x1);
        gbc.writeMem(0x4ed, { 0x49 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x42f8, gbc.sp());
        EXPECT(0x4ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 00FD
        gbc.setState(0x8837, 0xaade, 0xa5a0, 0xfca5, 0x8039, 0xbf50, 0x1, 0x0);
        gbc.writeMem(0x8837, { 0x49 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xaade, gbc.sp());
        EXPECT(0x8838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8837));
        // 49 00FE
        gbc.setState(0xd0c5, 0x9b0d, 0x7650, 0xfc3b, 0x9f9e, 0xef3d, 0x0, 0x1);
        gbc.writeMem(0xd0c5, { 0x49 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9b0d, gbc.sp());
        EXPECT(0xd0c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd0c5));
        // 49 00FF
        gbc.setState(0x2400, 0xa4c8, 0xd120, 0xea38, 0xd988, 0x1bf7, 0x0, 0x0);
        gbc.writeMem(0x2400, { 0x49 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa4c8, gbc.sp());
        EXPECT(0x2401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0100
        gbc.setState(0xe318, 0x5a40, 0x21e0, 0x272a, 0x8fe7, 0xef3e, 0x0, 0x0);
        gbc.writeMem(0xe318, { 0x49 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5a40, gbc.sp());
        EXPECT(0xe319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe318));
        // 49 0101
        gbc.setState(0x80c5, 0x31da, 0x7020, 0x9db3, 0x39ef, 0x68c5, 0x1, 0x0);
        gbc.writeMem(0x80c5, { 0x49 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x31da, gbc.sp());
        EXPECT(0x80c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x80c5));
        // 49 0102
        gbc.setState(0xb059, 0xd53d, 0x69a0, 0xef6a, 0x514f, 0xadb2, 0x0, 0x1);
        gbc.writeMem(0xb059, { 0x49 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd53d, gbc.sp());
        EXPECT(0xb05a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb059));
        // 49 0103
        gbc.setState(0x3f8b, 0xe737, 0x9930, 0x3750, 0xb125, 0xdb25, 0x1, 0x1);
        gbc.writeMem(0x3f8b, { 0x49 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe737, gbc.sp());
        EXPECT(0x3f8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0104
        gbc.setState(0x8f6f, 0x4cdd, 0xcf60, 0x98ba, 0xb200, 0xa1f, 0x0, 0x0);
        gbc.writeMem(0x8f6f, { 0x49 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4cdd, gbc.sp());
        EXPECT(0x8f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8f6f));
        // 49 0105
        gbc.setState(0xe7a4, 0x7a82, 0xb480, 0xa39f, 0x45b2, 0xc95d, 0x1, 0x1);
        gbc.writeMem(0xe7a4, { 0x49 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7a82, gbc.sp());
        EXPECT(0xe7a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe7a4));
        // 49 0106
        gbc.setState(0x2e47, 0xff46, 0xb7e0, 0xd4c9, 0xdba5, 0x1a3b, 0x0, 0x1);
        gbc.writeMem(0x2e47, { 0x49 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xff46, gbc.sp());
        EXPECT(0x2e48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0107
        gbc.setState(0x2d96, 0xb9e8, 0xd260, 0x9c10, 0x1526, 0x118e, 0x0, 0x0);
        gbc.writeMem(0x2d96, { 0x49 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb9e8, gbc.sp());
        EXPECT(0x2d97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0108
        gbc.setState(0x7dc6, 0xfc59, 0x77e0, 0xd814, 0x9311, 0x69fb, 0x1, 0x1);
        gbc.writeMem(0x7dc6, { 0x49 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfc59, gbc.sp());
        EXPECT(0x7dc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0109
        gbc.setState(0x608d, 0x9b9e, 0x8e00, 0x758e, 0x351d, 0x636e, 0x1, 0x1);
        gbc.writeMem(0x608d, { 0x49 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9b9e, gbc.sp());
        EXPECT(0x608e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 010A
        gbc.setState(0xbf44, 0xd0df, 0x50c0, 0x78e1, 0x5354, 0xd82d, 0x1, 0x0);
        gbc.writeMem(0xbf44, { 0x49 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd0df, gbc.sp());
        EXPECT(0xbf45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbf44));
        // 49 010B
        gbc.setState(0x140c, 0x58f4, 0xe1e0, 0xf749, 0x2e39, 0x73bc, 0x1, 0x0);
        gbc.writeMem(0x140c, { 0x49 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x58f4, gbc.sp());
        EXPECT(0x140d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 010C
        gbc.setState(0x3cdf, 0x848c, 0xca60, 0x6d96, 0xc855, 0x5374, 0x0, 0x1);
        gbc.writeMem(0x3cdf, { 0x49 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x848c, gbc.sp());
        EXPECT(0x3ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 010D
        gbc.setState(0x167b, 0xca04, 0x5ac0, 0x2d86, 0xfaec, 0x4f4e, 0x1, 0x1);
        gbc.writeMem(0x167b, { 0x49 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xca04, gbc.sp());
        EXPECT(0x167c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 010E
        gbc.setState(0x663, 0xe2b6, 0xa6c0, 0x8ddf, 0x2074, 0xdf13, 0x1, 0x0);
        gbc.writeMem(0x663, { 0x49 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe2b6, gbc.sp());
        EXPECT(0x664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0111
        gbc.setState(0xae8a, 0x6a7e, 0x3210, 0x27c1, 0x94ff, 0xa3ba, 0x1, 0x0);
        gbc.writeMem(0xae8a, { 0x49 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6a7e, gbc.sp());
        EXPECT(0xae8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xae8a));
        // 49 0112
        gbc.setState(0x2870, 0xc60e, 0x4540, 0xe0f1, 0xbcf8, 0x21b, 0x0, 0x0);
        gbc.writeMem(0x2870, { 0x49 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc60e, gbc.sp());
        EXPECT(0x2871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0113
        gbc.setState(0x8f98, 0x71f0, 0x4cd0, 0x10aa, 0xa130, 0x1c70, 0x0, 0x0);
        gbc.writeMem(0x8f98, { 0x49 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x71f0, gbc.sp());
        EXPECT(0x8f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8f98));
        // 49 0114
        gbc.setState(0x9acb, 0x2ab0, 0x4700, 0xcc89, 0xabdc, 0xef, 0x0, 0x1);
        gbc.writeMem(0x9acb, { 0x49 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2ab0, gbc.sp());
        EXPECT(0x9acc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9acb));
        // 49 0115
        gbc.setState(0x1f5c, 0xdb08, 0xd1b0, 0x27bf, 0x1f0f, 0x8571, 0x0, 0x1);
        gbc.writeMem(0x1f5c, { 0x49 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xdb08, gbc.sp());
        EXPECT(0x1f5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0116
        gbc.setState(0xc364, 0x1586, 0x4e10, 0x1546, 0xb6e9, 0x60, 0x0, 0x1);
        gbc.writeMem(0xc364, { 0x49 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1586, gbc.sp());
        EXPECT(0xc365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc364));
        // 49 0117
        gbc.setState(0xe5af, 0x816a, 0x5750, 0x22e2, 0xf105, 0x1dd, 0x1, 0x0);
        gbc.writeMem(0xe5af, { 0x49 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x816a, gbc.sp());
        EXPECT(0xe5b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe5af));
        // 49 0118
        gbc.setState(0xb318, 0xa6a4, 0xadf0, 0x9497, 0x20d9, 0x10fd, 0x1, 0x1);
        gbc.writeMem(0xb318, { 0x49 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa6a4, gbc.sp());
        EXPECT(0xb319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb318));
        // 49 0119
        gbc.setState(0x1138, 0x8300, 0xc970, 0x2982, 0xa98d, 0x7fb, 0x1, 0x0);
        gbc.writeMem(0x1138, { 0x49 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8300, gbc.sp());
        EXPECT(0x1139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 011A
        gbc.setState(0xa4c5, 0x4454, 0xd1e0, 0x9252, 0xc3e6, 0xd6af, 0x1, 0x1);
        gbc.writeMem(0xa4c5, { 0x49 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4454, gbc.sp());
        EXPECT(0xa4c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa4c5));
        // 49 011B
        gbc.setState(0x5b87, 0x361a, 0xcbd0, 0x822b, 0x3c21, 0x9d5a, 0x1, 0x1);
        gbc.writeMem(0x5b87, { 0x49 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x361a, gbc.sp());
        EXPECT(0x5b88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 011C
        gbc.setState(0xc10a, 0x19b1, 0xdae0, 0xeb2a, 0x9638, 0x8a76, 0x0, 0x0);
        gbc.writeMem(0xc10a, { 0x49 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x19b1, gbc.sp());
        EXPECT(0xc10b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc10a));
        // 49 011D
        gbc.setState(0xd9c1, 0x6d83, 0x55c0, 0xb4a3, 0x5e5c, 0x9d0e, 0x1, 0x1);
        gbc.writeMem(0xd9c1, { 0x49 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6d83, gbc.sp());
        EXPECT(0xd9c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd9c1));
        // 49 011E
        gbc.setState(0x80c0, 0xded2, 0x1ba0, 0xb123, 0x7e6, 0x9c96, 0x1, 0x1);
        gbc.writeMem(0x80c0, { 0x49 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xded2, gbc.sp());
        EXPECT(0x80c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x80c0));
        // 49 011F
        gbc.setState(0x2b37, 0x8934, 0xdbf0, 0xeaaf, 0xd9d0, 0xdc2f, 0x1, 0x0);
        gbc.writeMem(0x2b37, { 0x49 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8934, gbc.sp());
        EXPECT(0x2b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0120
        gbc.setState(0x9218, 0x76d4, 0xaeb0, 0x7254, 0x10be, 0x97a8, 0x1, 0x0);
        gbc.writeMem(0x9218, { 0x49 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x76d4, gbc.sp());
        EXPECT(0x9219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9218));
        // 49 0121
        gbc.setState(0x74e5, 0x5e14, 0x81e0, 0xde6d, 0xc752, 0x948d, 0x0, 0x1);
        gbc.writeMem(0x74e5, { 0x49 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5e14, gbc.sp());
        EXPECT(0x74e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0122
        gbc.setState(0xda2b, 0x41a0, 0xf7f0, 0x3e45, 0x672, 0x763, 0x1, 0x0);
        gbc.writeMem(0xda2b, { 0x49 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x41a0, gbc.sp());
        EXPECT(0xda2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xda2b));
        // 49 0123
        gbc.setState(0x9234, 0xf4aa, 0x1070, 0x42bc, 0xa82e, 0x86a7, 0x1, 0x0);
        gbc.writeMem(0x9234, { 0x49 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf4aa, gbc.sp());
        EXPECT(0x9235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9234));
        // 49 0124
        gbc.setState(0xe9f3, 0x8b8c, 0x2920, 0x5011, 0xade1, 0xc1fe, 0x1, 0x1);
        gbc.writeMem(0xe9f3, { 0x49 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8b8c, gbc.sp());
        EXPECT(0xe9f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe9f3));
        // 49 0125
        gbc.setState(0x81fa, 0x3393, 0x48b0, 0xf17, 0x4f5e, 0x7bbe, 0x1, 0x1);
        gbc.writeMem(0x81fa, { 0x49 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3393, gbc.sp());
        EXPECT(0x81fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x81fa));
        // 49 0126
        gbc.setState(0xbf29, 0x8a5d, 0x5280, 0x6030, 0xc433, 0xa32b, 0x0, 0x1);
        gbc.writeMem(0xbf29, { 0x49 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8a5d, gbc.sp());
        EXPECT(0xbf2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbf29));
        // 49 0127
        gbc.setState(0x557, 0xf88b, 0x4480, 0xf3eb, 0xf65f, 0xb74, 0x1, 0x0);
        gbc.writeMem(0x557, { 0x49 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf88b, gbc.sp());
        EXPECT(0x558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0128
        gbc.setState(0x8092, 0x5ba5, 0x95d0, 0x63b3, 0xe9df, 0x7de1, 0x1, 0x1);
        gbc.writeMem(0x8092, { 0x49 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5ba5, gbc.sp());
        EXPECT(0x8093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8092));
        // 49 0129
        gbc.setState(0xab64, 0x40cf, 0xd1c0, 0xd377, 0xa6c3, 0x56f0, 0x1, 0x0);
        gbc.writeMem(0xab64, { 0x49 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x40cf, gbc.sp());
        EXPECT(0xab65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xab64));
        // 49 012A
        gbc.setState(0xd4cb, 0x9cce, 0x7cd0, 0x1f2c, 0x2252, 0x26a2, 0x1, 0x0);
        gbc.writeMem(0xd4cb, { 0x49 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9cce, gbc.sp());
        EXPECT(0xd4cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd4cb));
        // 49 012B
        gbc.setState(0xe855, 0xc726, 0x89f0, 0x1d69, 0x1b18, 0x38d5, 0x1, 0x0);
        gbc.writeMem(0xe855, { 0x49 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc726, gbc.sp());
        EXPECT(0xe856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe855));
        // 49 012C
        gbc.setState(0xf55, 0x704a, 0xae30, 0x79e3, 0xdd6d, 0x3270, 0x1, 0x1);
        gbc.writeMem(0xf55, { 0x49 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x704a, gbc.sp());
        EXPECT(0xf56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 012D
        gbc.setState(0x5d72, 0x80c8, 0x8fb0, 0xcf01, 0x5c93, 0x57f, 0x0, 0x0);
        gbc.writeMem(0x5d72, { 0x49 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x80c8, gbc.sp());
        EXPECT(0x5d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 012E
        gbc.setState(0xc8aa, 0x4a5c, 0x1610, 0x7c6, 0x92dc, 0xc7a1, 0x0, 0x0);
        gbc.writeMem(0xc8aa, { 0x49 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4a5c, gbc.sp());
        EXPECT(0xc8ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc8aa));
        // 49 012F
        gbc.setState(0x740c, 0xe9d7, 0xabf0, 0x2eb4, 0x1eb2, 0xfdd4, 0x1, 0x0);
        gbc.writeMem(0x740c, { 0x49 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe9d7, gbc.sp());
        EXPECT(0x740d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0130
        gbc.setState(0x3d34, 0x30a2, 0x3cd0, 0x9dc9, 0xb06c, 0x8285, 0x1, 0x1);
        gbc.writeMem(0x3d34, { 0x49 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x30a2, gbc.sp());
        EXPECT(0x3d35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0131
        gbc.setState(0xcde6, 0xeb47, 0xcf00, 0x75e4, 0xecbb, 0x6a48, 0x0, 0x1);
        gbc.writeMem(0xcde6, { 0x49 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xeb47, gbc.sp());
        EXPECT(0xcde7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xcde6));
        // 49 0132
        gbc.setState(0xe22e, 0x9cd1, 0xa560, 0x1686, 0x337c, 0x68c9, 0x1, 0x0);
        gbc.writeMem(0xe22e, { 0x49 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9cd1, gbc.sp());
        EXPECT(0xe22f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe22e));
        // 49 0133
        gbc.setState(0x4cd1, 0xc153, 0xdb10, 0x5c5, 0x336c, 0x9778, 0x1, 0x1);
        gbc.writeMem(0x4cd1, { 0x49 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc153, gbc.sp());
        EXPECT(0x4cd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0134
        gbc.setState(0xa7b9, 0x6b49, 0x95f0, 0xa8bf, 0x2a17, 0x42db, 0x0, 0x1);
        gbc.writeMem(0xa7b9, { 0x49 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6b49, gbc.sp());
        EXPECT(0xa7ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa7b9));
        // 49 0135
        gbc.setState(0x7c97, 0x4ce9, 0x1e00, 0x412c, 0x5e1f, 0x2c84, 0x0, 0x1);
        gbc.writeMem(0x7c97, { 0x49 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4ce9, gbc.sp());
        EXPECT(0x7c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0136
        gbc.setState(0xaace, 0x4584, 0xbb0, 0x50bb, 0xb549, 0xcd9e, 0x0, 0x0);
        gbc.writeMem(0xaace, { 0x49 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4584, gbc.sp());
        EXPECT(0xaacf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xaace));
        // 49 0137
        gbc.setState(0x99f, 0x4747, 0xfdc0, 0xac86, 0xa28d, 0x505a, 0x1, 0x0);
        gbc.writeMem(0x99f, { 0x49 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4747, gbc.sp());
        EXPECT(0x9a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0138
        gbc.setState(0x65d5, 0x7cdd, 0x35c0, 0xc970, 0xe2c3, 0xf4b2, 0x1, 0x0);
        gbc.writeMem(0x65d5, { 0x49 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7cdd, gbc.sp());
        EXPECT(0x65d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 013A
        gbc.setState(0x6230, 0xf55d, 0x8e00, 0x633d, 0x226f, 0x2555, 0x1, 0x0);
        gbc.writeMem(0x6230, { 0x49 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf55d, gbc.sp());
        EXPECT(0x6231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 013B
        gbc.setState(0x47d5, 0x7394, 0x7fb0, 0x389c, 0x5e8f, 0xac12, 0x0, 0x1);
        gbc.writeMem(0x47d5, { 0x49 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7394, gbc.sp());
        EXPECT(0x47d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 013C
        gbc.setState(0xab05, 0xdacd, 0x9bc0, 0x89ed, 0xb9e7, 0x703f, 0x0, 0x1);
        gbc.writeMem(0xab05, { 0x49 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdacd, gbc.sp());
        EXPECT(0xab06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xab05));
        // 49 013E
        gbc.setState(0xd574, 0x58b7, 0xbf50, 0xe7b, 0xd63b, 0x4076, 0x1, 0x0);
        gbc.writeMem(0xd574, { 0x49 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x58b7, gbc.sp());
        EXPECT(0xd575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd574));
        // 49 013F
        gbc.setState(0x99c6, 0xe1cd, 0xed60, 0xf452, 0x81dc, 0x46ae, 0x0, 0x0);
        gbc.writeMem(0x99c6, { 0x49 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe1cd, gbc.sp());
        EXPECT(0x99c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x99c6));
        // 49 0141
        gbc.setState(0x971f, 0x2f1f, 0x43e0, 0xaea1, 0xb3de, 0xb081, 0x1, 0x0);
        gbc.writeMem(0x971f, { 0x49 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2f1f, gbc.sp());
        EXPECT(0x9720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x971f));
        // 49 0142
        gbc.setState(0x4cce, 0xb1d4, 0x8590, 0x3b6e, 0x7c4d, 0x1869, 0x0, 0x1);
        gbc.writeMem(0x4cce, { 0x49 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb1d4, gbc.sp());
        EXPECT(0x4ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0143
        gbc.setState(0xb2e7, 0x4f09, 0xd610, 0x4b23, 0x36c3, 0x714d, 0x1, 0x0);
        gbc.writeMem(0xb2e7, { 0x49 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4f09, gbc.sp());
        EXPECT(0xb2e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb2e7));
        // 49 0144
        gbc.setState(0xd51c, 0xbd10, 0x9010, 0xc2d2, 0x6699, 0x5678, 0x1, 0x0);
        gbc.writeMem(0xd51c, { 0x49 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbd10, gbc.sp());
        EXPECT(0xd51d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd51c));
        // 49 0145
        gbc.setState(0xee4d, 0x7381, 0x79c0, 0xebc1, 0x92ae, 0x7eea, 0x0, 0x0);
        gbc.writeMem(0xee4d, { 0x49 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7381, gbc.sp());
        EXPECT(0xee4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xee4d));
        // 49 0146
        gbc.setState(0x700a, 0x6450, 0xf270, 0xc1e8, 0x78a5, 0x2528, 0x0, 0x1);
        gbc.writeMem(0x700a, { 0x49 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6450, gbc.sp());
        EXPECT(0x700b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0147
        gbc.setState(0x235d, 0x63d, 0xe9c0, 0x3c00, 0xb926, 0x3dc1, 0x0, 0x0);
        gbc.writeMem(0x235d, { 0x49 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x63d, gbc.sp());
        EXPECT(0x235e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0148
        gbc.setState(0xacb0, 0xa57b, 0xde90, 0x2927, 0xe599, 0xf05b, 0x0, 0x1);
        gbc.writeMem(0xacb0, { 0x49 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa57b, gbc.sp());
        EXPECT(0xacb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xacb0));
        // 49 0149
        gbc.setState(0x7ff, 0xcb04, 0x7720, 0x3bc4, 0x5bad, 0xb213, 0x1, 0x1);
        gbc.writeMem(0x7ff, { 0x49 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xcb04, gbc.sp());
        EXPECT(0x800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 014A
        gbc.setState(0x3763, 0x12f2, 0x8a20, 0x47ef, 0x44ae, 0x2d04, 0x0, 0x0);
        gbc.writeMem(0x3763, { 0x49 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x12f2, gbc.sp());
        EXPECT(0x3764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 014B
        gbc.setState(0x9e4b, 0x4f59, 0x4870, 0xd121, 0x97b1, 0xe59a, 0x1, 0x0);
        gbc.writeMem(0x9e4b, { 0x49 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4f59, gbc.sp());
        EXPECT(0x9e4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9e4b));
        // 49 014C
        gbc.setState(0x56db, 0x747b, 0x910, 0xc466, 0xbd0d, 0x9d76, 0x0, 0x0);
        gbc.writeMem(0x56db, { 0x49 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x747b, gbc.sp());
        EXPECT(0x56dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 014D
        gbc.setState(0x5c52, 0x5dac, 0x930, 0x662a, 0x9ed4, 0x1ab5, 0x1, 0x0);
        gbc.writeMem(0x5c52, { 0x49 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5dac, gbc.sp());
        EXPECT(0x5c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 014E
        gbc.setState(0xa39c, 0x4724, 0x3860, 0x315d, 0xd4fc, 0xaf99, 0x1, 0x0);
        gbc.writeMem(0xa39c, { 0x49 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4724, gbc.sp());
        EXPECT(0xa39d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa39c));
        // 49 014F
        gbc.setState(0xa08, 0x3f13, 0x8620, 0xf167, 0xce14, 0x1625, 0x0, 0x0);
        gbc.writeMem(0xa08, { 0x49 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3f13, gbc.sp());
        EXPECT(0xa09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0151
        gbc.setState(0x7705, 0x3386, 0xa440, 0x7a29, 0xff1a, 0x67e9, 0x0, 0x1);
        gbc.writeMem(0x7705, { 0x49 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3386, gbc.sp());
        EXPECT(0x7706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0152
        gbc.setState(0xdea5, 0x7b16, 0x6050, 0xfda3, 0xe979, 0x12d1, 0x1, 0x0);
        gbc.writeMem(0xdea5, { 0x49 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7b16, gbc.sp());
        EXPECT(0xdea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xdea5));
        // 49 0153
        gbc.setState(0x72e9, 0x298e, 0xa950, 0xc8ee, 0x9b35, 0x4ca, 0x1, 0x1);
        gbc.writeMem(0x72e9, { 0x49 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x298e, gbc.sp());
        EXPECT(0x72ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0154
        gbc.setState(0x52ea, 0x2911, 0xd6e0, 0x811c, 0xe489, 0x2c2b, 0x0, 0x0);
        gbc.writeMem(0x52ea, { 0x49 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2911, gbc.sp());
        EXPECT(0x52eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0155
        gbc.setState(0xc51e, 0x91da, 0xb0e0, 0x7259, 0xf5ab, 0x9612, 0x1, 0x1);
        gbc.writeMem(0xc51e, { 0x49 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x91da, gbc.sp());
        EXPECT(0xc51f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc51e));
        // 49 0156
        gbc.setState(0x8a99, 0x93de, 0xc650, 0x6944, 0x22af, 0x6537, 0x1, 0x1);
        gbc.writeMem(0x8a99, { 0x49 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x93de, gbc.sp());
        EXPECT(0x8a9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8a99));
        // 49 0157
        gbc.setState(0x42e1, 0x2636, 0x4f30, 0xab98, 0xe18c, 0x2c3f, 0x0, 0x1);
        gbc.writeMem(0x42e1, { 0x49 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2636, gbc.sp());
        EXPECT(0x42e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0158
        gbc.setState(0x67b1, 0x9a04, 0x9f90, 0x6901, 0xfcf3, 0x144, 0x1, 0x1);
        gbc.writeMem(0x67b1, { 0x49 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9a04, gbc.sp());
        EXPECT(0x67b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0159
        gbc.setState(0x1c18, 0xc224, 0xe0d0, 0xa0a2, 0xc5f8, 0xbb77, 0x0, 0x0);
        gbc.writeMem(0x1c18, { 0x49 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc224, gbc.sp());
        EXPECT(0x1c19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 015A
        gbc.setState(0x4a35, 0x8ec2, 0x3530, 0x517c, 0x1f2f, 0xa63b, 0x0, 0x1);
        gbc.writeMem(0x4a35, { 0x49 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8ec2, gbc.sp());
        EXPECT(0x4a36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 015C
        gbc.setState(0xc1fe, 0x33c4, 0xba80, 0xf7a7, 0x87d1, 0x1e4f, 0x1, 0x1);
        gbc.writeMem(0xc1fe, { 0x49 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x33c4, gbc.sp());
        EXPECT(0xc1ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc1fe));
        // 49 015D
        gbc.setState(0x3671, 0x44cc, 0xf920, 0xa75d, 0x8347, 0xe398, 0x0, 0x0);
        gbc.writeMem(0x3671, { 0x49 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x44cc, gbc.sp());
        EXPECT(0x3672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 015E
        gbc.setState(0x9a25, 0xea27, 0x1820, 0x2e95, 0x3f7a, 0x604f, 0x1, 0x1);
        gbc.writeMem(0x9a25, { 0x49 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xea27, gbc.sp());
        EXPECT(0x9a26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9a25));
        // 49 015F
        gbc.setState(0xb123, 0x5ce3, 0x3920, 0x5e0d, 0x31e7, 0xa57, 0x0, 0x1);
        gbc.writeMem(0xb123, { 0x49 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5ce3, gbc.sp());
        EXPECT(0xb124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb123));
        // 49 0160
        gbc.setState(0xc16d, 0x3fc6, 0x38c0, 0x1ae8, 0xc092, 0xf880, 0x0, 0x0);
        gbc.writeMem(0xc16d, { 0x49 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3fc6, gbc.sp());
        EXPECT(0xc16e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc16d));
        // 49 0161
        gbc.setState(0xd76b, 0x1518, 0x7110, 0x6559, 0x884e, 0xe894, 0x0, 0x0);
        gbc.writeMem(0xd76b, { 0x49 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1518, gbc.sp());
        EXPECT(0xd76c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd76b));
        // 49 0162
        gbc.setState(0xe9ee, 0xcb46, 0x6f40, 0xbd49, 0x5ff3, 0x46e5, 0x0, 0x1);
        gbc.writeMem(0xe9ee, { 0x49 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcb46, gbc.sp());
        EXPECT(0xe9ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe9ee));
        // 49 0163
        gbc.setState(0x839, 0x5ebb, 0xbb50, 0x22a5, 0xd5dc, 0xbc18, 0x0, 0x0);
        gbc.writeMem(0x839, { 0x49 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5ebb, gbc.sp());
        EXPECT(0x83a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0164
        gbc.setState(0x78f0, 0x85db, 0x4bb0, 0x9527, 0xff76, 0xce73, 0x1, 0x0);
        gbc.writeMem(0x78f0, { 0x49 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x85db, gbc.sp());
        EXPECT(0x78f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0165
        gbc.setState(0x84dc, 0x72d2, 0xb6f0, 0x1104, 0xc8d, 0x384e, 0x0, 0x0);
        gbc.writeMem(0x84dc, { 0x49 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x72d2, gbc.sp());
        EXPECT(0x84dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x84dc));
        // 49 0166
        gbc.setState(0x3635, 0xebfb, 0xa4f0, 0xb0fa, 0x8fa0, 0xfba9, 0x1, 0x0);
        gbc.writeMem(0x3635, { 0x49 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xebfb, gbc.sp());
        EXPECT(0x3636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0167
        gbc.setState(0x39ee, 0xdebb, 0x90, 0xfdfb, 0xf5ae, 0xafe5, 0x0, 0x1);
        gbc.writeMem(0x39ee, { 0x49 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xdebb, gbc.sp());
        EXPECT(0x39ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0168
        gbc.setState(0xd444, 0xbf75, 0x2b40, 0x215c, 0x98ca, 0x715b, 0x1, 0x1);
        gbc.writeMem(0xd444, { 0x49 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbf75, gbc.sp());
        EXPECT(0xd445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd444));
        // 49 0169
        gbc.setState(0x93da, 0x1372, 0x4ea0, 0x9a6d, 0xd348, 0x9229, 0x1, 0x1);
        gbc.writeMem(0x93da, { 0x49 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1372, gbc.sp());
        EXPECT(0x93db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x93da));
        // 49 016A
        gbc.setState(0x4c9, 0xb11, 0x43f0, 0x70f7, 0xb535, 0xd76c, 0x1, 0x1);
        gbc.writeMem(0x4c9, { 0x49 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb11, gbc.sp());
        EXPECT(0x4ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 016B
        gbc.setState(0x2948, 0x4156, 0xcf60, 0xc1df, 0x97b1, 0xbcab, 0x1, 0x0);
        gbc.writeMem(0x2948, { 0x49 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4156, gbc.sp());
        EXPECT(0x2949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 016C
        gbc.setState(0xa810, 0x7e5c, 0x7640, 0xb779, 0x4236, 0x61b2, 0x1, 0x0);
        gbc.writeMem(0xa810, { 0x49 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7e5c, gbc.sp());
        EXPECT(0xa811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa810));
        // 49 016D
        gbc.setState(0x37db, 0x3df5, 0xdff0, 0x9bc, 0x981b, 0xf369, 0x1, 0x0);
        gbc.writeMem(0x37db, { 0x49 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3df5, gbc.sp());
        EXPECT(0x37dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 016E
        gbc.setState(0x87d6, 0xd9a, 0x82c0, 0xd3dd, 0xa399, 0x1fac, 0x0, 0x0);
        gbc.writeMem(0x87d6, { 0x49 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd9a, gbc.sp());
        EXPECT(0x87d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x87d6));
        // 49 016F
        gbc.setState(0x4f1e, 0x9bdf, 0xa90, 0x9854, 0x2bea, 0x1105, 0x0, 0x1);
        gbc.writeMem(0x4f1e, { 0x49 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9bdf, gbc.sp());
        EXPECT(0x4f1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0170
        gbc.setState(0x2b5e, 0xb093, 0xa840, 0x4118, 0xc438, 0x6c48, 0x1, 0x0);
        gbc.writeMem(0x2b5e, { 0x49 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb093, gbc.sp());
        EXPECT(0x2b5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0171
        gbc.setState(0x663b, 0x7f6c, 0xbd00, 0x9f33, 0xaae0, 0xdf46, 0x1, 0x0);
        gbc.writeMem(0x663b, { 0x49 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7f6c, gbc.sp());
        EXPECT(0x663c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0172
        gbc.setState(0xbf8b, 0xc441, 0x7780, 0x20c6, 0xd207, 0xd375, 0x0, 0x1);
        gbc.writeMem(0xbf8b, { 0x49 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc441, gbc.sp());
        EXPECT(0xbf8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbf8b));
        // 49 0173
        gbc.setState(0x586a, 0xd6a7, 0x220, 0x4533, 0x5fe4, 0x1ac2, 0x0, 0x1);
        gbc.writeMem(0x586a, { 0x49 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd6a7, gbc.sp());
        EXPECT(0x586b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0174
        gbc.setState(0xca40, 0xb10c, 0x860, 0xe81b, 0xac0a, 0x8b9e, 0x1, 0x0);
        gbc.writeMem(0xca40, { 0x49 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb10c, gbc.sp());
        EXPECT(0xca41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xca40));
        // 49 0176
        gbc.setState(0x11d3, 0xa133, 0x6f00, 0x2cc, 0xed5f, 0x5d79, 0x0, 0x0);
        gbc.writeMem(0x11d3, { 0x49 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa133, gbc.sp());
        EXPECT(0x11d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0177
        gbc.setState(0x7456, 0x5ea2, 0x8ea0, 0x4596, 0x5da2, 0x94dd, 0x0, 0x1);
        gbc.writeMem(0x7456, { 0x49 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5ea2, gbc.sp());
        EXPECT(0x7457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0178
        gbc.setState(0x3df3, 0x17a4, 0xea70, 0x8a32, 0xb7e1, 0x3f2a, 0x0, 0x0);
        gbc.writeMem(0x3df3, { 0x49 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x17a4, gbc.sp());
        EXPECT(0x3df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0179
        gbc.setState(0xd1ff, 0xe42, 0x1a40, 0xf628, 0xb47b, 0x29b8, 0x0, 0x0);
        gbc.writeMem(0xd1ff, { 0x49 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe42, gbc.sp());
        EXPECT(0xd200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd1ff));
        // 49 017C
        gbc.setState(0x3e7e, 0x6c3e, 0xede0, 0x1530, 0x3d40, 0xe593, 0x1, 0x1);
        gbc.writeMem(0x3e7e, { 0x49 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6c3e, gbc.sp());
        EXPECT(0x3e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 017D
        gbc.setState(0x597, 0xe42d, 0xaa20, 0xad72, 0x3752, 0x9d41, 0x1, 0x0);
        gbc.writeMem(0x597, { 0x49 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe42d, gbc.sp());
        EXPECT(0x598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 017E
        gbc.setState(0x9cf9, 0x346e, 0x4bd0, 0xb060, 0x3ceb, 0xf7ee, 0x0, 0x1);
        gbc.writeMem(0x9cf9, { 0x49 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x346e, gbc.sp());
        EXPECT(0x9cfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9cf9));
        // 49 017F
        gbc.setState(0xa06, 0xc20f, 0xc480, 0xc7eb, 0x16f4, 0x5cb7, 0x0, 0x0);
        gbc.writeMem(0xa06, { 0x49 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc20f, gbc.sp());
        EXPECT(0xa07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0180
        gbc.setState(0xcfb6, 0xeea7, 0x9f30, 0x4b0, 0xf9cc, 0xd590, 0x0, 0x1);
        gbc.writeMem(0xcfb6, { 0x49 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xeea7, gbc.sp());
        EXPECT(0xcfb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xcfb6));
        // 49 0181
        gbc.setState(0x700, 0x6cf9, 0x830, 0x308c, 0xcba8, 0x89b, 0x0, 0x0);
        gbc.writeMem(0x700, { 0x49 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6cf9, gbc.sp());
        EXPECT(0x701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0182
        gbc.setState(0xde29, 0xd1d4, 0x2e20, 0x19f6, 0x8542, 0xdb34, 0x1, 0x1);
        gbc.writeMem(0xde29, { 0x49 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd1d4, gbc.sp());
        EXPECT(0xde2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xde29));
        // 49 0183
        gbc.setState(0xddef, 0xada, 0x95e0, 0xc378, 0x5937, 0x7a2a, 0x0, 0x1);
        gbc.writeMem(0xddef, { 0x49 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xada, gbc.sp());
        EXPECT(0xddf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xddef));
        // 49 0184
        gbc.setState(0x9ed1, 0x5a2d, 0x37d0, 0x2c7c, 0x61d2, 0xdfd, 0x1, 0x0);
        gbc.writeMem(0x9ed1, { 0x49 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5a2d, gbc.sp());
        EXPECT(0x9ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9ed1));
        // 49 0185
        gbc.setState(0x6daf, 0x52d2, 0xe470, 0x166d, 0x3a81, 0xd61, 0x1, 0x1);
        gbc.writeMem(0x6daf, { 0x49 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x52d2, gbc.sp());
        EXPECT(0x6db0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0186
        gbc.setState(0x84cf, 0x7cb5, 0x9840, 0xbe42, 0x44c1, 0x7a07, 0x0, 0x0);
        gbc.writeMem(0x84cf, { 0x49 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7cb5, gbc.sp());
        EXPECT(0x84d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x84cf));
        // 49 0187
        gbc.setState(0xc852, 0x5ef9, 0x4c40, 0x5970, 0xc8bf, 0x2d64, 0x0, 0x0);
        gbc.writeMem(0xc852, { 0x49 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5ef9, gbc.sp());
        EXPECT(0xc853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc852));
        // 49 0188
        gbc.setState(0xb03c, 0x18e5, 0x7f60, 0x90d6, 0x5caf, 0xe6ab, 0x0, 0x0);
        gbc.writeMem(0xb03c, { 0x49 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x18e5, gbc.sp());
        EXPECT(0xb03d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb03c));
        // 49 018A
        gbc.setState(0xae61, 0xea9, 0x4d50, 0xe265, 0x63fe, 0xe70d, 0x1, 0x1);
        gbc.writeMem(0xae61, { 0x49 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xea9, gbc.sp());
        EXPECT(0xae62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xae61));
        // 49 018B
        gbc.setState(0x38fa, 0x89f6, 0x5300, 0x739f, 0x9524, 0xa57d, 0x0, 0x1);
        gbc.writeMem(0x38fa, { 0x49 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x89f6, gbc.sp());
        EXPECT(0x38fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 018C
        gbc.setState(0x53e2, 0x47c5, 0x61e0, 0xa5fa, 0x3e34, 0xef5a, 0x0, 0x1);
        gbc.writeMem(0x53e2, { 0x49 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x47c5, gbc.sp());
        EXPECT(0x53e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 018D
        gbc.setState(0x8c65, 0x20c4, 0x7320, 0x25c5, 0x19c2, 0xb0b4, 0x1, 0x1);
        gbc.writeMem(0x8c65, { 0x49 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x20c4, gbc.sp());
        EXPECT(0x8c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8c65));
        // 49 018E
        gbc.setState(0x8dfb, 0x739d, 0xaa80, 0x16a0, 0xcf6d, 0x7a6e, 0x0, 0x0);
        gbc.writeMem(0x8dfb, { 0x49 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x739d, gbc.sp());
        EXPECT(0x8dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8dfb));
        // 49 018F
        gbc.setState(0xd19a, 0x843c, 0xfd60, 0x807d, 0x4683, 0xafce, 0x1, 0x0);
        gbc.writeMem(0xd19a, { 0x49 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x843c, gbc.sp());
        EXPECT(0xd19b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd19a));
        // 49 0190
        gbc.setState(0x7509, 0xf42a, 0xfb70, 0xb673, 0x85f2, 0x7fb4, 0x0, 0x0);
        gbc.writeMem(0x7509, { 0x49 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf42a, gbc.sp());
        EXPECT(0x750a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0191
        gbc.setState(0x5345, 0x85ec, 0x1ae0, 0x6885, 0xa4a9, 0xfc79, 0x0, 0x1);
        gbc.writeMem(0x5345, { 0x49 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x85ec, gbc.sp());
        EXPECT(0x5346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0192
        gbc.setState(0x3f8, 0x1e07, 0x1be0, 0xc04d, 0xb461, 0x22da, 0x0, 0x1);
        gbc.writeMem(0x3f8, { 0x49 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1e07, gbc.sp());
        EXPECT(0x3f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0193
        gbc.setState(0xe859, 0x5bae, 0x7d90, 0x1600, 0xced4, 0xf97f, 0x1, 0x1);
        gbc.writeMem(0xe859, { 0x49 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5bae, gbc.sp());
        EXPECT(0xe85a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe859));
        // 49 0194
        gbc.setState(0x431f, 0x7f69, 0x6e20, 0x9c43, 0x70ed, 0xbc90, 0x0, 0x1);
        gbc.writeMem(0x431f, { 0x49 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7f69, gbc.sp());
        EXPECT(0x4320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0196
        gbc.setState(0xda9a, 0x35f0, 0xafd0, 0x1064, 0x6f5e, 0xba06, 0x1, 0x1);
        gbc.writeMem(0xda9a, { 0x49 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x35f0, gbc.sp());
        EXPECT(0xda9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xda9a));
        // 49 0197
        gbc.setState(0xd6d4, 0xe1c2, 0xbd30, 0xfbdb, 0x8241, 0x6f55, 0x1, 0x1);
        gbc.writeMem(0xd6d4, { 0x49 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe1c2, gbc.sp());
        EXPECT(0xd6d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd6d4));
        // 49 0198
        gbc.setState(0xd67a, 0x403, 0x9090, 0x538a, 0xf3a4, 0x55fe, 0x0, 0x1);
        gbc.writeMem(0xd67a, { 0x49 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x403, gbc.sp());
        EXPECT(0xd67b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd67a));
        // 49 0199
        gbc.setState(0x542e, 0xc155, 0x7b50, 0xa113, 0xc09e, 0x17bd, 0x0, 0x0);
        gbc.writeMem(0x542e, { 0x49 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc155, gbc.sp());
        EXPECT(0x542f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 019A
        gbc.setState(0x7882, 0x6f63, 0xf530, 0x50b8, 0xe7d7, 0xe257, 0x0, 0x0);
        gbc.writeMem(0x7882, { 0x49 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6f63, gbc.sp());
        EXPECT(0x7883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 019B
        gbc.setState(0x12f9, 0x87ee, 0x840, 0xefa3, 0xe068, 0x9ff6, 0x0, 0x1);
        gbc.writeMem(0x12f9, { 0x49 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x87ee, gbc.sp());
        EXPECT(0x12fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 019C
        gbc.setState(0x5f33, 0x71f5, 0xf070, 0xa2c1, 0xb6a7, 0x62fb, 0x0, 0x0);
        gbc.writeMem(0x5f33, { 0x49 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x71f5, gbc.sp());
        EXPECT(0x5f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 019D
        gbc.setState(0xd2f0, 0x1bab, 0xd8c0, 0x2be0, 0xa4c4, 0x925e, 0x0, 0x1);
        gbc.writeMem(0xd2f0, { 0x49 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1bab, gbc.sp());
        EXPECT(0xd2f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd2f0));
        // 49 019E
        gbc.setState(0x6901, 0xed3f, 0x2d70, 0x226e, 0x2ab1, 0x40f9, 0x1, 0x0);
        gbc.writeMem(0x6901, { 0x49 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xed3f, gbc.sp());
        EXPECT(0x6902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 019F
        gbc.setState(0x5d1, 0xc780, 0x4510, 0xb99b, 0x40e3, 0x9fc7, 0x0, 0x0);
        gbc.writeMem(0x5d1, { 0x49 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc780, gbc.sp());
        EXPECT(0x5d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 01A0
        gbc.setState(0x17ee, 0x3d70, 0xfe0, 0x5fac, 0x452d, 0xafe3, 0x1, 0x0);
        gbc.writeMem(0x17ee, { 0x49 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3d70, gbc.sp());
        EXPECT(0x17ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01A1
        gbc.setState(0x697a, 0xa220, 0x6120, 0x78a9, 0x9818, 0x2803, 0x1, 0x0);
        gbc.writeMem(0x697a, { 0x49 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa220, gbc.sp());
        EXPECT(0x697b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01A2
        gbc.setState(0x2689, 0xfd3d, 0xcf0, 0xdbcf, 0xe6f0, 0x8f31, 0x0, 0x1);
        gbc.writeMem(0x2689, { 0x49 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfd3d, gbc.sp());
        EXPECT(0x268a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 01A3
        gbc.setState(0xb5e9, 0xa370, 0x5f80, 0xb11, 0xf3f8, 0x6cac, 0x0, 0x0);
        gbc.writeMem(0xb5e9, { 0x49 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa370, gbc.sp());
        EXPECT(0xb5ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb5e9));
        // 49 01A4
        gbc.setState(0x48f9, 0xcc77, 0x9d40, 0xa9b2, 0x454a, 0xf2aa, 0x0, 0x1);
        gbc.writeMem(0x48f9, { 0x49 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xcc77, gbc.sp());
        EXPECT(0x48fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01A5
        gbc.setState(0x55f2, 0x212a, 0x1710, 0xc30f, 0xac8d, 0x9c7a, 0x0, 0x1);
        gbc.writeMem(0x55f2, { 0x49 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x212a, gbc.sp());
        EXPECT(0x55f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 01A6
        gbc.setState(0xee9c, 0xe916, 0xf940, 0xddad, 0xb95b, 0x38b6, 0x0, 0x0);
        gbc.writeMem(0xee9c, { 0x49 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe916, gbc.sp());
        EXPECT(0xee9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xee9c));
        // 49 01A7
        gbc.setState(0x4f69, 0xf16e, 0xaa0, 0x67bf, 0x249c, 0xcd37, 0x1, 0x1);
        gbc.writeMem(0x4f69, { 0x49 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf16e, gbc.sp());
        EXPECT(0x4f6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01A8
        gbc.setState(0x4bd0, 0xb412, 0x6a20, 0xcf5, 0x2561, 0x2d8f, 0x1, 0x0);
        gbc.writeMem(0x4bd0, { 0x49 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb412, gbc.sp());
        EXPECT(0x4bd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01A9
        gbc.setState(0x27c6, 0x6572, 0x3920, 0xba07, 0x4d8a, 0xb8f2, 0x1, 0x0);
        gbc.writeMem(0x27c6, { 0x49 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6572, gbc.sp());
        EXPECT(0x27c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01AA
        gbc.setState(0xc4bc, 0x786a, 0x4e90, 0xde4f, 0x38d3, 0x17a1, 0x0, 0x0);
        gbc.writeMem(0xc4bc, { 0x49 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x786a, gbc.sp());
        EXPECT(0xc4bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc4bc));
        // 49 01AB
        gbc.setState(0x3bc3, 0xea15, 0x92d0, 0x1949, 0xa689, 0x1988, 0x1, 0x0);
        gbc.writeMem(0x3bc3, { 0x49 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xea15, gbc.sp());
        EXPECT(0x3bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 01AC
        gbc.setState(0x1b0c, 0x3765, 0x2850, 0x8e14, 0x9af7, 0xd85, 0x0, 0x0);
        gbc.writeMem(0x1b0c, { 0x49 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3765, gbc.sp());
        EXPECT(0x1b0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 01AD
        gbc.setState(0x3f12, 0xb8f1, 0x49c0, 0x3e3b, 0x9f17, 0x5cf8, 0x1, 0x0);
        gbc.writeMem(0x3f12, { 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb8f1, gbc.sp());
        EXPECT(0x3f13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01AE
        gbc.setState(0xb117, 0xbc22, 0xe6e0, 0x6295, 0xbb57, 0x68d9, 0x1, 0x0);
        gbc.writeMem(0xb117, { 0x49 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbc22, gbc.sp());
        EXPECT(0xb118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb117));
        // 49 01AF
        gbc.setState(0x3a9b, 0x9016, 0xe010, 0x9c67, 0xb1f0, 0xfac9, 0x1, 0x1);
        gbc.writeMem(0x3a9b, { 0x49 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9016, gbc.sp());
        EXPECT(0x3a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 01B0
        gbc.setState(0x25ee, 0x379b, 0xb000, 0x21c2, 0x8949, 0x25ef, 0x1, 0x0);
        gbc.writeMem(0x25ee, { 0x49 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x379b, gbc.sp());
        EXPECT(0x25ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01B1
        gbc.setState(0x9048, 0x7163, 0xd430, 0x2204, 0x7c89, 0x7301, 0x1, 0x0);
        gbc.writeMem(0x9048, { 0x49 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7163, gbc.sp());
        EXPECT(0x9049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9048));
        // 49 01B2
        gbc.setState(0x618f, 0xf605, 0x9620, 0x52b0, 0xad18, 0xbc2d, 0x1, 0x0);
        gbc.writeMem(0x618f, { 0x49 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf605, gbc.sp());
        EXPECT(0x6190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01B3
        gbc.setState(0x40a0, 0xaa34, 0x6cf0, 0x6109, 0x7c41, 0x43e7, 0x0, 0x0);
        gbc.writeMem(0x40a0, { 0x49 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xaa34, gbc.sp());
        EXPECT(0x40a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 01B4
        gbc.setState(0x844, 0x4637, 0x6660, 0xdd2c, 0x7fbf, 0x86ca, 0x1, 0x0);
        gbc.writeMem(0x844, { 0x49 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4637, gbc.sp());
        EXPECT(0x845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01B5
        gbc.setState(0xc64, 0xd027, 0x9b00, 0xb542, 0xe489, 0xa333, 0x0, 0x0);
        gbc.writeMem(0xc64, { 0x49 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd027, gbc.sp());
        EXPECT(0xc65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01B6
        gbc.setState(0xbc29, 0xf56e, 0x6f40, 0xe399, 0x6173, 0xfd55, 0x1, 0x1);
        gbc.writeMem(0xbc29, { 0x49 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf56e, gbc.sp());
        EXPECT(0xbc2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbc29));
        // 49 01B7
        gbc.setState(0xe9, 0x73b2, 0x1870, 0x8263, 0x12d1, 0xbe68, 0x0, 0x0);
        gbc.writeMem(0xe9, { 0x49 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x73b2, gbc.sp());
        EXPECT(0xea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 01B8
        gbc.setState(0x5e0a, 0xd42b, 0xdee0, 0x3db3, 0x8330, 0xbcac, 0x0, 0x0);
        gbc.writeMem(0x5e0a, { 0x49 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd42b, gbc.sp());
        EXPECT(0x5e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01B9
        gbc.setState(0x92b, 0x8999, 0x92a0, 0x1c54, 0x9219, 0xa175, 0x1, 0x1);
        gbc.writeMem(0x92b, { 0x49 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8999, gbc.sp());
        EXPECT(0x92c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01BA
        gbc.setState(0xe385, 0x4778, 0x6610, 0xa4b4, 0x4762, 0xf98, 0x1, 0x1);
        gbc.writeMem(0xe385, { 0x49 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4778, gbc.sp());
        EXPECT(0xe386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe385));
        // 49 01BB
        gbc.setState(0x9685, 0xdde7, 0x6310, 0xaee8, 0xe99b, 0x74b0, 0x1, 0x1);
        gbc.writeMem(0x9685, { 0x49 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xdde7, gbc.sp());
        EXPECT(0x9686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9685));
        // 49 01BC
        gbc.setState(0x5609, 0x4b2c, 0x380, 0x63a9, 0x8063, 0x9306, 0x0, 0x1);
        gbc.writeMem(0x5609, { 0x49 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4b2c, gbc.sp());
        EXPECT(0x560a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01BD
        gbc.setState(0x3c47, 0x8d54, 0x1f10, 0x74cf, 0x3521, 0xb0f2, 0x0, 0x0);
        gbc.writeMem(0x3c47, { 0x49 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8d54, gbc.sp());
        EXPECT(0x3c48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 01BE
        gbc.setState(0x700e, 0x869e, 0xb850, 0x973f, 0xd67e, 0x1a30, 0x1, 0x0);
        gbc.writeMem(0x700e, { 0x49 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x869e, gbc.sp());
        EXPECT(0x700f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 01BF
        gbc.setState(0x4ab9, 0xd075, 0x1aa0, 0x22a7, 0x9a26, 0x23b6, 0x1, 0x0);
        gbc.writeMem(0x4ab9, { 0x49 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd075, gbc.sp());
        EXPECT(0x4aba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01C0
        gbc.setState(0x9ffe, 0x368, 0x950, 0xcd6, 0x4dd6, 0x3152, 0x1, 0x0);
        gbc.writeMem(0x9ffe, { 0x49 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x368, gbc.sp());
        EXPECT(0x9fff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9ffe));
        // 49 01C1
        gbc.setState(0xe804, 0x63dc, 0xbdb0, 0xec93, 0x565f, 0xd8a5, 0x1, 0x0);
        gbc.writeMem(0xe804, { 0x49 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x63dc, gbc.sp());
        EXPECT(0xe805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe804));
        // 49 01C2
        gbc.setState(0x9335, 0xc9ae, 0x3a40, 0x1590, 0xc59e, 0x3fe3, 0x0, 0x0);
        gbc.writeMem(0x9335, { 0x49 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc9ae, gbc.sp());
        EXPECT(0x9336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9335));
        // 49 01C3
        gbc.setState(0xd910, 0x97e6, 0x6450, 0x7a06, 0xed6, 0xfa9b, 0x1, 0x1);
        gbc.writeMem(0xd910, { 0x49 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x97e6, gbc.sp());
        EXPECT(0xd911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd910));
        // 49 01C6
        gbc.setState(0x3a47, 0x147e, 0xe00, 0xe0eb, 0x33f9, 0x1ed5, 0x1, 0x1);
        gbc.writeMem(0x3a47, { 0x49 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x147e, gbc.sp());
        EXPECT(0x3a48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01C7
        gbc.setState(0x4d55, 0xd27d, 0x8340, 0x819d, 0x7519, 0x16b8, 0x1, 0x1);
        gbc.writeMem(0x4d55, { 0x49 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd27d, gbc.sp());
        EXPECT(0x4d56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01C9
        gbc.setState(0x4110, 0xc4ed, 0x66a0, 0x352d, 0x5cd4, 0x3fe8, 0x0, 0x0);
        gbc.writeMem(0x4110, { 0x49 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc4ed, gbc.sp());
        EXPECT(0x4111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01CA
        gbc.setState(0x50a2, 0x52f8, 0x7ac0, 0x3b34, 0xa16, 0x2f7b, 0x1, 0x0);
        gbc.writeMem(0x50a2, { 0x49 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x52f8, gbc.sp());
        EXPECT(0x50a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01CB
        gbc.setState(0x8418, 0xc106, 0xf940, 0x4c9c, 0xbcc, 0x8dae, 0x1, 0x0);
        gbc.writeMem(0x8418, { 0x49 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc106, gbc.sp());
        EXPECT(0x8419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8418));
        // 49 01CC
        gbc.setState(0x2745, 0xf9ff, 0xe080, 0x8485, 0x4f5e, 0x2aea, 0x0, 0x0);
        gbc.writeMem(0x2745, { 0x49 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf9ff, gbc.sp());
        EXPECT(0x2746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01CD
        gbc.setState(0xde58, 0x955b, 0xd30, 0x7419, 0x9279, 0x562b, 0x0, 0x0);
        gbc.writeMem(0xde58, { 0x49 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x955b, gbc.sp());
        EXPECT(0xde59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xde58));
        // 49 01CE
        gbc.setState(0xe346, 0xaa70, 0x8330, 0xbfad, 0x9659, 0x30ed, 0x1, 0x1);
        gbc.writeMem(0xe346, { 0x49 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xaa70, gbc.sp());
        EXPECT(0xe347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe346));
        // 49 01CF
        gbc.setState(0x769d, 0x1605, 0xaae0, 0x291d, 0x90a6, 0x62a0, 0x1, 0x0);
        gbc.writeMem(0x769d, { 0x49 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1605, gbc.sp());
        EXPECT(0x769e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01D0
        gbc.setState(0x6934, 0x178, 0x3310, 0x6b27, 0xadb8, 0x6c51, 0x0, 0x1);
        gbc.writeMem(0x6934, { 0x49 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x178, gbc.sp());
        EXPECT(0x6935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 01D1
        gbc.setState(0x51e, 0xeb68, 0x1950, 0xdfb5, 0xe875, 0x1d17, 0x1, 0x0);
        gbc.writeMem(0x51e, { 0x49 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xeb68, gbc.sp());
        EXPECT(0x51f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 01D2
        gbc.setState(0xb786, 0x118d, 0x4020, 0xec5, 0x57fe, 0xa9ec, 0x1, 0x0);
        gbc.writeMem(0xb786, { 0x49 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x118d, gbc.sp());
        EXPECT(0xb787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb786));
        // 49 01D3
        gbc.setState(0x6656, 0xa428, 0x8f00, 0x7e46, 0x7bf6, 0x8879, 0x1, 0x1);
        gbc.writeMem(0x6656, { 0x49 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa428, gbc.sp());
        EXPECT(0x6657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01D4
        gbc.setState(0x6c9c, 0x54d3, 0x3460, 0x5f6e, 0xe7e2, 0x983c, 0x0, 0x0);
        gbc.writeMem(0x6c9c, { 0x49 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x54d3, gbc.sp());
        EXPECT(0x6c9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01D5
        gbc.setState(0x544c, 0x6cfc, 0xafd0, 0x1a2a, 0xa62c, 0x1cc3, 0x1, 0x1);
        gbc.writeMem(0x544c, { 0x49 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6cfc, gbc.sp());
        EXPECT(0x544d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 01D6
        gbc.setState(0x912d, 0xf936, 0x1cb0, 0xb4c9, 0xa3b2, 0x989d, 0x1, 0x0);
        gbc.writeMem(0x912d, { 0x49 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf936, gbc.sp());
        EXPECT(0x912e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x912d));
        // 49 01D7
        gbc.setState(0x7c9d, 0xd533, 0xf320, 0xb2f5, 0x3b0f, 0x39f8, 0x1, 0x0);
        gbc.writeMem(0x7c9d, { 0x49 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd533, gbc.sp());
        EXPECT(0x7c9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01D8
        gbc.setState(0xc277, 0x46ec, 0x9c60, 0x5607, 0xad3c, 0x77cb, 0x1, 0x0);
        gbc.writeMem(0xc277, { 0x49 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x46ec, gbc.sp());
        EXPECT(0xc278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc277));
        // 49 01D9
        gbc.setState(0x55ee, 0x838d, 0xfe90, 0xa4a7, 0x4664, 0x5ee8, 0x0, 0x1);
        gbc.writeMem(0x55ee, { 0x49 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x838d, gbc.sp());
        EXPECT(0x55ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 01DA
        gbc.setState(0x9f78, 0xd97c, 0xdfa0, 0x306b, 0x1a69, 0x6468, 0x1, 0x0);
        gbc.writeMem(0x9f78, { 0x49 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd97c, gbc.sp());
        EXPECT(0x9f79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9f78));
        // 49 01DB
        gbc.setState(0x2646, 0x6348, 0x87a0, 0xc05, 0x9f88, 0x6724, 0x0, 0x1);
        gbc.writeMem(0x2646, { 0x49 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6348, gbc.sp());
        EXPECT(0x2647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01DC
        gbc.setState(0x7321, 0xdc85, 0xfcf0, 0x6595, 0x56cb, 0x1806, 0x1, 0x1);
        gbc.writeMem(0x7321, { 0x49 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xdc85, gbc.sp());
        EXPECT(0x7322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 01DD
        gbc.setState(0xb2f7, 0x9b30, 0x3da0, 0x367, 0xf5ef, 0xec8e, 0x1, 0x1);
        gbc.writeMem(0xb2f7, { 0x49 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9b30, gbc.sp());
        EXPECT(0xb2f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb2f7));
        // 49 01DE
        gbc.setState(0xb126, 0xdcb4, 0xb50, 0x4fdb, 0x17fd, 0x4d5f, 0x1, 0x1);
        gbc.writeMem(0xb126, { 0x49 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xdcb4, gbc.sp());
        EXPECT(0xb127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb126));
        // 49 01DF
        gbc.setState(0x3033, 0x79c0, 0xad10, 0x28ba, 0xa685, 0x1ecd, 0x0, 0x0);
        gbc.writeMem(0x3033, { 0x49 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x79c0, gbc.sp());
        EXPECT(0x3034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 01E0
        gbc.setState(0xbeef, 0x99ff, 0x3340, 0xb949, 0x398a, 0x150f, 0x0, 0x1);
        gbc.writeMem(0xbeef, { 0x49 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x99ff, gbc.sp());
        EXPECT(0xbef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbeef));
        // 49 01E1
        gbc.setState(0xa057, 0xb320, 0xbc80, 0xcb1b, 0x14d4, 0x9b28, 0x0, 0x0);
        gbc.writeMem(0xa057, { 0x49 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb320, gbc.sp());
        EXPECT(0xa058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa057));
        // 49 01E2
        gbc.setState(0x5151, 0xc59d, 0x49c0, 0x22b9, 0x26ae, 0x579, 0x1, 0x0);
        gbc.writeMem(0x5151, { 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc59d, gbc.sp());
        EXPECT(0x5152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01E3
        gbc.setState(0x60ac, 0x99b8, 0xffc0, 0xf1f9, 0x7088, 0x1ea3, 0x0, 0x0);
        gbc.writeMem(0x60ac, { 0x49 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x99b8, gbc.sp());
        EXPECT(0x60ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01E4
        gbc.setState(0xc42d, 0xfe0f, 0x3670, 0x1e2, 0xf074, 0x26fc, 0x0, 0x1);
        gbc.writeMem(0xc42d, { 0x49 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfe0f, gbc.sp());
        EXPECT(0xc42e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc42d));
        // 49 01E5
        gbc.setState(0xb6b0, 0x7d0e, 0xd560, 0x5593, 0x14f9, 0x7fc4, 0x0, 0x0);
        gbc.writeMem(0xb6b0, { 0x49 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7d0e, gbc.sp());
        EXPECT(0xb6b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb6b0));
        // 49 01E6
        gbc.setState(0x1111, 0xd3ca, 0x7250, 0x6de4, 0xec8d, 0xa847, 0x1, 0x1);
        gbc.writeMem(0x1111, { 0x49 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd3ca, gbc.sp());
        EXPECT(0x1112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 01E7
        gbc.setState(0x3c28, 0x5dad, 0xe1c0, 0xc00, 0x8ca9, 0x3110, 0x1, 0x0);
        gbc.writeMem(0x3c28, { 0x49 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5dad, gbc.sp());
        EXPECT(0x3c29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01E8
        gbc.setState(0xca6e, 0x756e, 0xbbf0, 0xfdbe, 0x6a5e, 0xd4ad, 0x1, 0x0);
        gbc.writeMem(0xca6e, { 0x49 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x756e, gbc.sp());
        EXPECT(0xca6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xca6e));
        // 49 01E9
        gbc.setState(0xbf01, 0xf705, 0x550, 0x8a97, 0x1ba4, 0x8910, 0x1, 0x1);
        gbc.writeMem(0xbf01, { 0x49 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf705, gbc.sp());
        EXPECT(0xbf02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbf01));
        // 49 01EA
        gbc.setState(0xb412, 0x8071, 0x32d0, 0xf401, 0xbe58, 0xc0c6, 0x1, 0x1);
        gbc.writeMem(0xb412, { 0x49 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8071, gbc.sp());
        EXPECT(0xb413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb412));
        // 49 01EB
        gbc.setState(0x43e2, 0xf9e, 0x2b30, 0x1807, 0xcc75, 0xddf1, 0x1, 0x0);
        gbc.writeMem(0x43e2, { 0x49 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf9e, gbc.sp());
        EXPECT(0x43e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 01EC
        gbc.setState(0x398e, 0xfe24, 0xe4c0, 0x738c, 0x169b, 0x8ae8, 0x1, 0x0);
        gbc.writeMem(0x398e, { 0x49 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfe24, gbc.sp());
        EXPECT(0x398f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01ED
        gbc.setState(0x9c4d, 0xc29d, 0x63e0, 0xb5aa, 0xa97e, 0x5de, 0x1, 0x1);
        gbc.writeMem(0x9c4d, { 0x49 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc29d, gbc.sp());
        EXPECT(0x9c4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9c4d));
        // 49 01EE
        gbc.setState(0x5fb2, 0xfa53, 0x64c0, 0x23a1, 0x63a, 0x9da4, 0x1, 0x0);
        gbc.writeMem(0x5fb2, { 0x49 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xfa53, gbc.sp());
        EXPECT(0x5fb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01EF
        gbc.setState(0x54f6, 0x25ac, 0x9930, 0x3f29, 0xe6c6, 0x2c35, 0x0, 0x0);
        gbc.writeMem(0x54f6, { 0x49 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x25ac, gbc.sp());
        EXPECT(0x54f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 01F0
        gbc.setState(0x3290, 0xeb09, 0x620, 0x4c9, 0xd02b, 0x715c, 0x0, 0x1);
        gbc.writeMem(0x3290, { 0x49 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xeb09, gbc.sp());
        EXPECT(0x3291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01F1
        gbc.setState(0x36f1, 0x1ece, 0x89c0, 0x3383, 0xd9fd, 0xbed6, 0x1, 0x0);
        gbc.writeMem(0x36f1, { 0x49 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1ece, gbc.sp());
        EXPECT(0x36f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01F2
        gbc.setState(0x4e24, 0x2c7c, 0x98b0, 0x7317, 0xc9ae, 0xa176, 0x1, 0x1);
        gbc.writeMem(0x4e24, { 0x49 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2c7c, gbc.sp());
        EXPECT(0x4e25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 01F3
        gbc.setState(0x61fa, 0x7dde, 0x72e0, 0x4396, 0xdf09, 0x800e, 0x0, 0x0);
        gbc.writeMem(0x61fa, { 0x49 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7dde, gbc.sp());
        EXPECT(0x61fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01F4
        gbc.setState(0xa4f2, 0xe9d9, 0xc660, 0xe365, 0xda88, 0x560d, 0x0, 0x1);
        gbc.writeMem(0xa4f2, { 0x49 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe9d9, gbc.sp());
        EXPECT(0xa4f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa4f2));
        // 49 01F5
        gbc.setState(0xc7c5, 0x35e0, 0x7bc0, 0xc9ed, 0x49ab, 0x6e6c, 0x1, 0x0);
        gbc.writeMem(0xc7c5, { 0x49 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x35e0, gbc.sp());
        EXPECT(0xc7c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc7c5));
        // 49 01F6
        gbc.setState(0xec42, 0xd7cc, 0x95a0, 0xda50, 0xe181, 0x13a7, 0x1, 0x1);
        gbc.writeMem(0xec42, { 0x49 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd7cc, gbc.sp());
        EXPECT(0xec43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xec42));
        // 49 01F8
        gbc.setState(0x242, 0x6c5d, 0x91d0, 0xd876, 0x2903, 0xf8fd, 0x1, 0x1);
        gbc.writeMem(0x242, { 0x49 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6c5d, gbc.sp());
        EXPECT(0x243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 01F9
        gbc.setState(0xb7b3, 0x4b93, 0x2470, 0x2d65, 0xebcd, 0x13b3, 0x1, 0x0);
        gbc.writeMem(0xb7b3, { 0x49 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4b93, gbc.sp());
        EXPECT(0xb7b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb7b3));
        // 49 01FA
        gbc.setState(0x70c, 0xaa83, 0x3040, 0xe8b2, 0xda8e, 0xb537, 0x0, 0x0);
        gbc.writeMem(0x70c, { 0x49 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xaa83, gbc.sp());
        EXPECT(0x70d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01FB
        gbc.setState(0xd06c, 0x3f3a, 0xdcf0, 0x6ef0, 0xfa33, 0xd00d, 0x0, 0x0);
        gbc.writeMem(0xd06c, { 0x49 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3f3a, gbc.sp());
        EXPECT(0xd06d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd06c));
        // 49 01FC
        gbc.setState(0x84ce, 0x16c2, 0xb050, 0x761d, 0x33d9, 0x2e03, 0x0, 0x1);
        gbc.writeMem(0x84ce, { 0x49 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x16c2, gbc.sp());
        EXPECT(0x84cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x84ce));
        // 49 01FD
        gbc.setState(0x4057, 0x2d32, 0x4340, 0x78c5, 0x1091, 0x68dd, 0x1, 0x1);
        gbc.writeMem(0x4057, { 0x49 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2d32, gbc.sp());
        EXPECT(0x4058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 01FE
        gbc.setState(0x5d8b, 0x1c52, 0xe30, 0x5e11, 0xa19, 0x389b, 0x0, 0x0);
        gbc.writeMem(0x5d8b, { 0x49 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1c52, gbc.sp());
        EXPECT(0x5d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 01FF
        gbc.setState(0x9fa9, 0x3745, 0xd3d0, 0xf32c, 0x25d0, 0xa92c, 0x0, 0x1);
        gbc.writeMem(0x9fa9, { 0x49 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3745, gbc.sp());
        EXPECT(0x9faa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9fa9));
        // 49 0200
        gbc.setState(0x59b, 0x4348, 0xbd00, 0x5ef2, 0x2966, 0xcfb7, 0x1, 0x1);
        gbc.writeMem(0x59b, { 0x49 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4348, gbc.sp());
        EXPECT(0x59c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0201
        gbc.setState(0xe5b1, 0x10cb, 0xc0d0, 0x3e15, 0x17d0, 0x8d5c, 0x1, 0x1);
        gbc.writeMem(0xe5b1, { 0x49 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x10cb, gbc.sp());
        EXPECT(0xe5b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe5b1));
        // 49 0202
        gbc.setState(0x3e4a, 0xd478, 0xa40, 0x9ff9, 0xac7e, 0xddbc, 0x1, 0x0);
        gbc.writeMem(0x3e4a, { 0x49 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd478, gbc.sp());
        EXPECT(0x3e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0203
        gbc.setState(0x38e3, 0xdd33, 0x59d0, 0x43e9, 0xd59e, 0x36a5, 0x1, 0x1);
        gbc.writeMem(0x38e3, { 0x49 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xdd33, gbc.sp());
        EXPECT(0x38e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0204
        gbc.setState(0xd56e, 0x907c, 0xd500, 0xe771, 0x56d8, 0xfa62, 0x0, 0x0);
        gbc.writeMem(0xd56e, { 0x49 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x907c, gbc.sp());
        EXPECT(0xd56f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd56e));
        // 49 0205
        gbc.setState(0xa073, 0x7354, 0xd720, 0x6429, 0x3ec8, 0xc560, 0x1, 0x1);
        gbc.writeMem(0xa073, { 0x49 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7354, gbc.sp());
        EXPECT(0xa074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa073));
        // 49 0206
        gbc.setState(0x2c0b, 0x1ac5, 0xbac0, 0x8c5e, 0xcb2f, 0xc909, 0x1, 0x0);
        gbc.writeMem(0x2c0b, { 0x49 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1ac5, gbc.sp());
        EXPECT(0x2c0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0207
        gbc.setState(0xb52, 0xe466, 0xf030, 0x2b74, 0xf59a, 0xdc7d, 0x1, 0x0);
        gbc.writeMem(0xb52, { 0x49 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe466, gbc.sp());
        EXPECT(0xb53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0208
        gbc.setState(0x99e, 0xadc, 0x5940, 0x7727, 0x3a7d, 0x79c6, 0x0, 0x1);
        gbc.writeMem(0x99e, { 0x49 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xadc, gbc.sp());
        EXPECT(0x99f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0209
        gbc.setState(0xd1c8, 0x421c, 0x40f0, 0x5e7d, 0x7ff8, 0x58fa, 0x1, 0x0);
        gbc.writeMem(0xd1c8, { 0x49 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x421c, gbc.sp());
        EXPECT(0xd1c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd1c8));
        // 49 020A
        gbc.setState(0x7c45, 0x332c, 0x7ac0, 0xb63a, 0xa0cb, 0xe0c2, 0x1, 0x1);
        gbc.writeMem(0x7c45, { 0x49 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x332c, gbc.sp());
        EXPECT(0x7c46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 020C
        gbc.setState(0xdb1d, 0x546e, 0xf700, 0xde5a, 0x51dc, 0x59d3, 0x1, 0x1);
        gbc.writeMem(0xdb1d, { 0x49 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x546e, gbc.sp());
        EXPECT(0xdb1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xdb1d));
        // 49 020D
        gbc.setState(0xe284, 0x2184, 0xcbc0, 0x398b, 0xd84f, 0x4fdf, 0x0, 0x0);
        gbc.writeMem(0xe284, { 0x49 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2184, gbc.sp());
        EXPECT(0xe285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe284));
        // 49 020E
        gbc.setState(0xa1e5, 0x763d, 0x5ca0, 0xe0d5, 0x2720, 0x530a, 0x0, 0x0);
        gbc.writeMem(0xa1e5, { 0x49 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x763d, gbc.sp());
        EXPECT(0xa1e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa1e5));
        // 49 020F
        gbc.setState(0xab23, 0x7da3, 0x2b90, 0x3a5c, 0xc4ab, 0x4e65, 0x1, 0x0);
        gbc.writeMem(0xab23, { 0x49 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7da3, gbc.sp());
        EXPECT(0xab24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xab23));
        // 49 0210
        gbc.setState(0x9e3e, 0x2826, 0xd440, 0xf186, 0xc6d0, 0x1343, 0x1, 0x0);
        gbc.writeMem(0x9e3e, { 0x49 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2826, gbc.sp());
        EXPECT(0x9e3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9e3e));
        // 49 0211
        gbc.setState(0x179a, 0xf2dd, 0x3b30, 0xa5dd, 0x671d, 0x6b7d, 0x0, 0x1);
        gbc.writeMem(0x179a, { 0x49 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf2dd, gbc.sp());
        EXPECT(0x179b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0212
        gbc.setState(0xb436, 0x360c, 0x520, 0x7c8e, 0x322e, 0x5c68, 0x1, 0x0);
        gbc.writeMem(0xb436, { 0x49 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x360c, gbc.sp());
        EXPECT(0xb437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb436));
        // 49 0213
        gbc.setState(0xaa6a, 0x3029, 0xa520, 0xa107, 0x256a, 0x291f, 0x1, 0x0);
        gbc.writeMem(0xaa6a, { 0x49 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3029, gbc.sp());
        EXPECT(0xaa6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xaa6a));
        // 49 0214
        gbc.setState(0x7295, 0xda8e, 0x1b90, 0xeebf, 0xe5d7, 0x83c4, 0x1, 0x0);
        gbc.writeMem(0x7295, { 0x49 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xda8e, gbc.sp());
        EXPECT(0x7296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0215
        gbc.setState(0xa49d, 0xb4ef, 0x2460, 0x24ac, 0x352a, 0xb0c0, 0x1, 0x0);
        gbc.writeMem(0xa49d, { 0x49 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb4ef, gbc.sp());
        EXPECT(0xa49e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa49d));
        // 49 0216
        gbc.setState(0x38e3, 0x427, 0x63e0, 0x9460, 0x2f25, 0xb780, 0x1, 0x0);
        gbc.writeMem(0x38e3, { 0x49 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x427, gbc.sp());
        EXPECT(0x38e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0217
        gbc.setState(0x29ed, 0xbe83, 0x4cc0, 0xe8cd, 0xdc64, 0x10aa, 0x1, 0x1);
        gbc.writeMem(0x29ed, { 0x49 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbe83, gbc.sp());
        EXPECT(0x29ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0218
        gbc.setState(0x9496, 0xd66e, 0x24d0, 0x3f65, 0x12f5, 0xce38, 0x1, 0x0);
        gbc.writeMem(0x9496, { 0x49 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd66e, gbc.sp());
        EXPECT(0x9497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9496));
        // 49 0219
        gbc.setState(0x37c9, 0x5cc6, 0x9d90, 0xd7ca, 0x7248, 0xe731, 0x1, 0x1);
        gbc.writeMem(0x37c9, { 0x49 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5cc6, gbc.sp());
        EXPECT(0x37ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 021A
        gbc.setState(0x551a, 0xb017, 0x3420, 0x9b40, 0xb441, 0xfbe, 0x1, 0x0);
        gbc.writeMem(0x551a, { 0x49 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb017, gbc.sp());
        EXPECT(0x551b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 021B
        gbc.setState(0xa665, 0x9aba, 0xb8e0, 0xe97c, 0x6847, 0x404b, 0x0, 0x0);
        gbc.writeMem(0xa665, { 0x49 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9aba, gbc.sp());
        EXPECT(0xa666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa665));
        // 49 021C
        gbc.setState(0xe529, 0x89dd, 0xf830, 0xf064, 0xa743, 0x9c81, 0x1, 0x1);
        gbc.writeMem(0xe529, { 0x49 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x89dd, gbc.sp());
        EXPECT(0xe52a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe529));
        // 49 021D
        gbc.setState(0x336b, 0xf67a, 0x5740, 0x5273, 0xa011, 0x54c4, 0x1, 0x1);
        gbc.writeMem(0x336b, { 0x49 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf67a, gbc.sp());
        EXPECT(0x336c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 021E
        gbc.setState(0x40ba, 0x408d, 0x59a0, 0xbfde, 0x5a92, 0x2344, 0x1, 0x1);
        gbc.writeMem(0x40ba, { 0x49 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x408d, gbc.sp());
        EXPECT(0x40bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 021F
        gbc.setState(0x1808, 0x7ffc, 0xb10, 0xbef8, 0xd600, 0x56ba, 0x0, 0x0);
        gbc.writeMem(0x1808, { 0x49 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7ffc, gbc.sp());
        EXPECT(0x1809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0220
        gbc.setState(0x1517, 0x1220, 0x29e0, 0x771a, 0xfb63, 0x24fa, 0x0, 0x0);
        gbc.writeMem(0x1517, { 0x49 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1220, gbc.sp());
        EXPECT(0x1518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0221
        gbc.setState(0xe23, 0x114b, 0xab70, 0xbdd5, 0x37b5, 0xca5b, 0x1, 0x0);
        gbc.writeMem(0xe23, { 0x49 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x114b, gbc.sp());
        EXPECT(0xe24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0222
        gbc.setState(0x4ea9, 0xe6db, 0xbe30, 0x3b9a, 0xa442, 0x5f69, 0x1, 0x0);
        gbc.writeMem(0x4ea9, { 0x49 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe6db, gbc.sp());
        EXPECT(0x4eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0223
        gbc.setState(0x1b1a, 0xbe18, 0xe5a0, 0xa6a8, 0x1b4b, 0x6cca, 0x1, 0x1);
        gbc.writeMem(0x1b1a, { 0x49 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xbe18, gbc.sp());
        EXPECT(0x1b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0224
        gbc.setState(0x8675, 0xaf37, 0x2400, 0xf013, 0x3d32, 0x97d4, 0x0, 0x1);
        gbc.writeMem(0x8675, { 0x49 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xaf37, gbc.sp());
        EXPECT(0x8676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8675));
        // 49 0225
        gbc.setState(0x5027, 0x1550, 0x4c10, 0x3cc2, 0xb6b1, 0x77e7, 0x0, 0x0);
        gbc.writeMem(0x5027, { 0x49 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1550, gbc.sp());
        EXPECT(0x5028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0226
        gbc.setState(0x40bc, 0x6243, 0xcb80, 0x6951, 0x9d0, 0xaa16, 0x1, 0x0);
        gbc.writeMem(0x40bc, { 0x49 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6243, gbc.sp());
        EXPECT(0x40bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0227
        gbc.setState(0xc0ce, 0x58f, 0x6b20, 0x674a, 0x6765, 0x681a, 0x1, 0x0);
        gbc.writeMem(0xc0ce, { 0x49 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x58f, gbc.sp());
        EXPECT(0xc0cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc0ce));
        // 49 0228
        gbc.setState(0x15dc, 0x7b34, 0xb860, 0xc082, 0x1b69, 0xafcf, 0x1, 0x1);
        gbc.writeMem(0x15dc, { 0x49 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7b34, gbc.sp());
        EXPECT(0x15dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0229
        gbc.setState(0xd079, 0x2bfd, 0xf780, 0x28b3, 0xbd40, 0x10a5, 0x1, 0x0);
        gbc.writeMem(0xd079, { 0x49 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2bfd, gbc.sp());
        EXPECT(0xd07a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd079));
        // 49 022A
        gbc.setState(0xd8b0, 0x20ef, 0x5fb0, 0xdd0b, 0x8810, 0xa7bf, 0x1, 0x0);
        gbc.writeMem(0xd8b0, { 0x49 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x20ef, gbc.sp());
        EXPECT(0xd8b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd8b0));
        // 49 022C
        gbc.setState(0x6f01, 0x6719, 0x5190, 0x2120, 0x6f03, 0xa11c, 0x1, 0x0);
        gbc.writeMem(0x6f01, { 0x49 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6719, gbc.sp());
        EXPECT(0x6f02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 022D
        gbc.setState(0x9461, 0x3565, 0x6f60, 0x6945, 0xae2, 0x2442, 0x0, 0x1);
        gbc.writeMem(0x9461, { 0x49 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3565, gbc.sp());
        EXPECT(0x9462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9461));
        // 49 022E
        gbc.setState(0x31ff, 0xb651, 0x4b10, 0xbf3a, 0xbfe3, 0xb14c, 0x1, 0x0);
        gbc.writeMem(0x31ff, { 0x49 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb651, gbc.sp());
        EXPECT(0x3200, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0230
        gbc.setState(0x50ea, 0xb807, 0xc100, 0x28f7, 0x2729, 0x1bb, 0x1, 0x1);
        gbc.writeMem(0x50ea, { 0x49 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb807, gbc.sp());
        EXPECT(0x50eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0231
        gbc.setState(0xed19, 0x8999, 0x3f40, 0x20cf, 0x63a3, 0x3c2f, 0x0, 0x1);
        gbc.writeMem(0xed19, { 0x49 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8999, gbc.sp());
        EXPECT(0xed1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xed19));
        // 49 0232
        gbc.setState(0x4674, 0x7bd8, 0x9500, 0x839, 0xc10b, 0xc5b2, 0x1, 0x1);
        gbc.writeMem(0x4674, { 0x49 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7bd8, gbc.sp());
        EXPECT(0x4675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0233
        gbc.setState(0xed47, 0xcc4f, 0xe3c0, 0xb448, 0x759d, 0xadda, 0x0, 0x0);
        gbc.writeMem(0xed47, { 0x49 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xcc4f, gbc.sp());
        EXPECT(0xed48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xed47));
        // 49 0234
        gbc.setState(0x4249, 0x23e0, 0x50e0, 0x528c, 0xa582, 0x8c3c, 0x0, 0x1);
        gbc.writeMem(0x4249, { 0x49 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x23e0, gbc.sp());
        EXPECT(0x424a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0235
        gbc.setState(0x7832, 0x9ce8, 0xa30, 0x986a, 0x3bce, 0x76a6, 0x1, 0x0);
        gbc.writeMem(0x7832, { 0x49 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9ce8, gbc.sp());
        EXPECT(0x7833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0236
        gbc.setState(0xb118, 0x8ec, 0x1b60, 0x23, 0x297b, 0x8b0c, 0x0, 0x1);
        gbc.writeMem(0xb118, { 0x49 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8ec, gbc.sp());
        EXPECT(0xb119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb118));
        // 49 0237
        gbc.setState(0x86f4, 0x4e63, 0x96f0, 0xb777, 0x570a, 0xb97a, 0x1, 0x0);
        gbc.writeMem(0x86f4, { 0x49 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4e63, gbc.sp());
        EXPECT(0x86f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x86f4));
        // 49 0238
        gbc.setState(0x1234, 0x6a50, 0x9840, 0x88fc, 0x70b0, 0xd74a, 0x0, 0x0);
        gbc.writeMem(0x1234, { 0x49 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6a50, gbc.sp());
        EXPECT(0x1235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0239
        gbc.setState(0xe0fa, 0xf57, 0x44c0, 0xdc59, 0x2320, 0x84ac, 0x0, 0x1);
        gbc.writeMem(0xe0fa, { 0x49 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf57, gbc.sp());
        EXPECT(0xe0fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe0fa));
        // 49 023A
        gbc.setState(0x1c7e, 0x18a3, 0x3950, 0xfe6d, 0x89c7, 0xe17, 0x1, 0x1);
        gbc.writeMem(0x1c7e, { 0x49 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x18a3, gbc.sp());
        EXPECT(0x1c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 023B
        gbc.setState(0x6c21, 0xb2f7, 0x5ea0, 0xdf3d, 0xa01b, 0x7ad, 0x1, 0x0);
        gbc.writeMem(0x6c21, { 0x49 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb2f7, gbc.sp());
        EXPECT(0x6c22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 023C
        gbc.setState(0x9f2b, 0x8530, 0x6650, 0xc8d0, 0x6639, 0x800d, 0x0, 0x0);
        gbc.writeMem(0x9f2b, { 0x49 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8530, gbc.sp());
        EXPECT(0x9f2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9f2b));
        // 49 023D
        gbc.setState(0x5b84, 0x2d32, 0xbb0, 0xda71, 0xd4a9, 0x3587, 0x0, 0x1);
        gbc.writeMem(0x5b84, { 0x49 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2d32, gbc.sp());
        EXPECT(0x5b85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 023E
        gbc.setState(0xa8f5, 0x4423, 0xb160, 0xec4d, 0xbf4f, 0xddc3, 0x0, 0x0);
        gbc.writeMem(0xa8f5, { 0x49 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4423, gbc.sp());
        EXPECT(0xa8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa8f5));
        // 49 023F
        gbc.setState(0xc2e1, 0x4150, 0x97b0, 0x908f, 0xe0e1, 0xb5af, 0x0, 0x0);
        gbc.writeMem(0xc2e1, { 0x49 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4150, gbc.sp());
        EXPECT(0xc2e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc2e1));
        // 49 0240
        gbc.setState(0x29a7, 0x708b, 0xe810, 0x30d7, 0xe7d1, 0x5a35, 0x0, 0x0);
        gbc.writeMem(0x29a7, { 0x49 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x708b, gbc.sp());
        EXPECT(0x29a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0241
        gbc.setState(0x8f07, 0xa952, 0xea90, 0x90e2, 0xaf71, 0x132c, 0x1, 0x0);
        gbc.writeMem(0x8f07, { 0x49 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa952, gbc.sp());
        EXPECT(0x8f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8f07));
        // 49 0242
        gbc.setState(0x627a, 0xd712, 0x6ba0, 0xae8f, 0xe85, 0xed5e, 0x0, 0x1);
        gbc.writeMem(0x627a, { 0x49 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd712, gbc.sp());
        EXPECT(0x627b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0243
        gbc.setState(0x8113, 0xcd4a, 0x6fc0, 0x60a6, 0xbb3d, 0x8bd1, 0x1, 0x1);
        gbc.writeMem(0x8113, { 0x49 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xcd4a, gbc.sp());
        EXPECT(0x8114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8113));
        // 49 0244
        gbc.setState(0xcb90, 0x836f, 0x3850, 0x753f, 0xe396, 0xcf2f, 0x0, 0x0);
        gbc.writeMem(0xcb90, { 0x49 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x836f, gbc.sp());
        EXPECT(0xcb91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xcb90));
        // 49 0246
        gbc.setState(0x720c, 0x723d, 0x6790, 0x5a04, 0x457c, 0xb31c, 0x0, 0x0);
        gbc.writeMem(0x720c, { 0x49 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x723d, gbc.sp());
        EXPECT(0x720d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0247
        gbc.setState(0x8d39, 0x207e, 0xe550, 0x613, 0x1531, 0xeecd, 0x1, 0x1);
        gbc.writeMem(0x8d39, { 0x49 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x207e, gbc.sp());
        EXPECT(0x8d3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8d39));
        // 49 0248
        gbc.setState(0x3ddc, 0x7124, 0xfcc0, 0x9eb4, 0x28e4, 0xbc2a, 0x1, 0x0);
        gbc.writeMem(0x3ddc, { 0x49 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7124, gbc.sp());
        EXPECT(0x3ddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 024A
        gbc.setState(0x1cdc, 0xeeda, 0xc460, 0x8751, 0x130b, 0x2bea, 0x1, 0x0);
        gbc.writeMem(0x1cdc, { 0x49 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xeeda, gbc.sp());
        EXPECT(0x1cdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 024B
        gbc.setState(0x4c71, 0x42d1, 0x9ba0, 0x7ec9, 0x60f0, 0x28cb, 0x1, 0x0);
        gbc.writeMem(0x4c71, { 0x49 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x42d1, gbc.sp());
        EXPECT(0x4c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 024C
        gbc.setState(0x7af7, 0xef51, 0xa680, 0x31a4, 0x6db0, 0xc585, 0x0, 0x1);
        gbc.writeMem(0x7af7, { 0x49 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xef51, gbc.sp());
        EXPECT(0x7af8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 024D
        gbc.setState(0x7c34, 0x396c, 0x4590, 0xe834, 0x5ea2, 0x9a7a, 0x1, 0x0);
        gbc.writeMem(0x7c34, { 0x49 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x396c, gbc.sp());
        EXPECT(0x7c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 024E
        gbc.setState(0x387b, 0x855c, 0x86e0, 0x4209, 0x785e, 0x85e7, 0x0, 0x0);
        gbc.writeMem(0x387b, { 0x49 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x855c, gbc.sp());
        EXPECT(0x387c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 024F
        gbc.setState(0xc047, 0xf09e, 0xee30, 0xe274, 0x9866, 0xbea0, 0x1, 0x0);
        gbc.writeMem(0xc047, { 0x49 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf09e, gbc.sp());
        EXPECT(0xc048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc047));
        // 49 0250
        gbc.setState(0xe5b3, 0xceca, 0x7760, 0x2a02, 0x8980, 0xdc4, 0x0, 0x0);
        gbc.writeMem(0xe5b3, { 0x49 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xceca, gbc.sp());
        EXPECT(0xe5b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe5b3));
        // 49 0251
        gbc.setState(0x225a, 0xc389, 0xf0e0, 0xce3c, 0xe54c, 0xbecd, 0x1, 0x0);
        gbc.writeMem(0x225a, { 0x49 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc389, gbc.sp());
        EXPECT(0x225b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0252
        gbc.setState(0x81b9, 0x94f3, 0xbc00, 0x11f2, 0x310e, 0x36f9, 0x1, 0x1);
        gbc.writeMem(0x81b9, { 0x49 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x94f3, gbc.sp());
        EXPECT(0x81ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x81b9));
        // 49 0253
        gbc.setState(0x26d9, 0xf8a8, 0x1150, 0x3b96, 0x849d, 0x53c1, 0x1, 0x1);
        gbc.writeMem(0x26d9, { 0x49 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf8a8, gbc.sp());
        EXPECT(0x26da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0254
        gbc.setState(0x65f3, 0xdf3f, 0xe180, 0xe997, 0x8be5, 0x6c72, 0x0, 0x0);
        gbc.writeMem(0x65f3, { 0x49 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xdf3f, gbc.sp());
        EXPECT(0x65f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0255
        gbc.setState(0xccda, 0x74f6, 0x6820, 0x1267, 0x26f4, 0xf39f, 0x0, 0x0);
        gbc.writeMem(0xccda, { 0x49 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x74f6, gbc.sp());
        EXPECT(0xccdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xccda));
        // 49 0256
        gbc.setState(0x1fd9, 0xfb5a, 0x1980, 0xa3db, 0xc45d, 0x168a, 0x1, 0x1);
        gbc.writeMem(0x1fd9, { 0x49 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfb5a, gbc.sp());
        EXPECT(0x1fda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0257
        gbc.setState(0x1a7f, 0x59c9, 0xadb0, 0x88be, 0x9afe, 0x78fe, 0x0, 0x1);
        gbc.writeMem(0x1a7f, { 0x49 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x59c9, gbc.sp());
        EXPECT(0x1a80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0258
        gbc.setState(0x877e, 0x4d85, 0x3170, 0xa008, 0x7b9b, 0x40a3, 0x0, 0x0);
        gbc.writeMem(0x877e, { 0x49 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4d85, gbc.sp());
        EXPECT(0x877f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x877e));
        // 49 0259
        gbc.setState(0xe840, 0x900, 0xa470, 0xcb2e, 0xd8a8, 0xe380, 0x1, 0x0);
        gbc.writeMem(0xe840, { 0x49 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x900, gbc.sp());
        EXPECT(0xe841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe840));
        // 49 025A
        gbc.setState(0x3eb8, 0x447c, 0xd240, 0x1c47, 0x5f38, 0x86c5, 0x1, 0x1);
        gbc.writeMem(0x3eb8, { 0x49 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x447c, gbc.sp());
        EXPECT(0x3eb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 025B
        gbc.setState(0xe169, 0xed6a, 0x1e10, 0xfcf2, 0xbce7, 0x4ca4, 0x1, 0x1);
        gbc.writeMem(0xe169, { 0x49 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xed6a, gbc.sp());
        EXPECT(0xe16a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe169));
        // 49 025C
        gbc.setState(0x40b1, 0x5586, 0x2e50, 0xb5bd, 0x6ca7, 0x8bb8, 0x0, 0x0);
        gbc.writeMem(0x40b1, { 0x49 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5586, gbc.sp());
        EXPECT(0x40b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 025D
        gbc.setState(0xcb68, 0xc8ab, 0xb610, 0xb5e1, 0x2ac2, 0x36b0, 0x1, 0x1);
        gbc.writeMem(0xcb68, { 0x49 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc8ab, gbc.sp());
        EXPECT(0xcb69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xcb68));
        // 49 025F
        gbc.setState(0x8232, 0xf253, 0x95a0, 0xda5e, 0x7018, 0x7dd6, 0x0, 0x1);
        gbc.writeMem(0x8232, { 0x49 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf253, gbc.sp());
        EXPECT(0x8233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8232));
        // 49 0260
        gbc.setState(0x754c, 0x926f, 0x5ae0, 0xcf9e, 0x8822, 0xd030, 0x1, 0x1);
        gbc.writeMem(0x754c, { 0x49 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x926f, gbc.sp());
        EXPECT(0x754d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0261
        gbc.setState(0x614, 0xfc6c, 0x8290, 0xd387, 0x94f0, 0x3a4e, 0x1, 0x0);
        gbc.writeMem(0x614, { 0x49 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfc6c, gbc.sp());
        EXPECT(0x615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0262
        gbc.setState(0x85ee, 0xa27d, 0xda50, 0x8f6c, 0x72fa, 0x9cc, 0x0, 0x0);
        gbc.writeMem(0x85ee, { 0x49 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa27d, gbc.sp());
        EXPECT(0x85ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x85ee));
        // 49 0263
        gbc.setState(0xd41e, 0x6a6f, 0x4000, 0x5972, 0x7431, 0x43b7, 0x0, 0x0);
        gbc.writeMem(0xd41e, { 0x49 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6a6f, gbc.sp());
        EXPECT(0xd41f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd41e));
        // 49 0264
        gbc.setState(0x5db0, 0xae60, 0x2a20, 0xf3a1, 0x9604, 0x8be0, 0x1, 0x0);
        gbc.writeMem(0x5db0, { 0x49 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xae60, gbc.sp());
        EXPECT(0x5db1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0265
        gbc.setState(0xbd8f, 0xa8f4, 0x8e80, 0x4810, 0xaaeb, 0xdce9, 0x1, 0x0);
        gbc.writeMem(0xbd8f, { 0x49 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa8f4, gbc.sp());
        EXPECT(0xbd90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbd8f));
        // 49 0266
        gbc.setState(0x7755, 0xe07, 0x6860, 0xe2ae, 0xca97, 0xf791, 0x1, 0x1);
        gbc.writeMem(0x7755, { 0x49 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe07, gbc.sp());
        EXPECT(0x7756, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0269
        gbc.setState(0x6a87, 0x9cda, 0x8fd0, 0x28fb, 0x19c8, 0xd219, 0x0, 0x1);
        gbc.writeMem(0x6a87, { 0x49 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9cda, gbc.sp());
        EXPECT(0x6a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 026A
        gbc.setState(0x9454, 0x1fc0, 0x780, 0x8465, 0x26b4, 0x2e97, 0x1, 0x1);
        gbc.writeMem(0x9454, { 0x49 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1fc0, gbc.sp());
        EXPECT(0x9455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9454));
        // 49 026B
        gbc.setState(0x2aae, 0x56b4, 0x38e0, 0xee68, 0x61fa, 0x4a8f, 0x0, 0x1);
        gbc.writeMem(0x2aae, { 0x49 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x56b4, gbc.sp());
        EXPECT(0x2aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 026C
        gbc.setState(0xce0c, 0xbf80, 0xb9f0, 0x723, 0x8228, 0x39e1, 0x1, 0x0);
        gbc.writeMem(0xce0c, { 0x49 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xbf80, gbc.sp());
        EXPECT(0xce0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xce0c));
        // 49 026E
        gbc.setState(0x138d, 0xfbef, 0xc0f0, 0xacbe, 0xafe6, 0xd92, 0x1, 0x1);
        gbc.writeMem(0x138d, { 0x49 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfbef, gbc.sp());
        EXPECT(0x138e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0270
        gbc.setState(0x92ab, 0x24ac, 0x8ba0, 0x921a, 0x5870, 0x4a2a, 0x1, 0x1);
        gbc.writeMem(0x92ab, { 0x49 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x24ac, gbc.sp());
        EXPECT(0x92ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x92ab));
        // 49 0271
        gbc.setState(0x1431, 0xe3a3, 0xb730, 0xff83, 0x792e, 0x8e16, 0x0, 0x1);
        gbc.writeMem(0x1431, { 0x49 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe3a3, gbc.sp());
        EXPECT(0x1432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0272
        gbc.setState(0xe1d7, 0x377, 0x8600, 0x4e51, 0x3b9b, 0x487c, 0x0, 0x0);
        gbc.writeMem(0xe1d7, { 0x49 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x377, gbc.sp());
        EXPECT(0xe1d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe1d7));
        // 49 0273
        gbc.setState(0xc94b, 0x7dbb, 0x2330, 0x37d2, 0x5ba, 0x58d4, 0x0, 0x0);
        gbc.writeMem(0xc94b, { 0x49 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7dbb, gbc.sp());
        EXPECT(0xc94c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc94b));
        // 49 0274
        gbc.setState(0xd970, 0xd178, 0x73c0, 0x507c, 0xf5d6, 0x824, 0x0, 0x0);
        gbc.writeMem(0xd970, { 0x49 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd178, gbc.sp());
        EXPECT(0xd971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd970));
        // 49 0276
        gbc.setState(0x60bd, 0xa0e, 0x2e20, 0x9ece, 0x2098, 0xdb71, 0x0, 0x0);
        gbc.writeMem(0x60bd, { 0x49 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa0e, gbc.sp());
        EXPECT(0x60be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0277
        gbc.setState(0xb2fc, 0x60fc, 0x6e30, 0xe467, 0x95e3, 0x30e5, 0x0, 0x1);
        gbc.writeMem(0xb2fc, { 0x49 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x60fc, gbc.sp());
        EXPECT(0xb2fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb2fc));
        // 49 0278
        gbc.setState(0x64ad, 0x52c7, 0x65a0, 0x51e5, 0x54ae, 0x4626, 0x0, 0x1);
        gbc.writeMem(0x64ad, { 0x49 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x52c7, gbc.sp());
        EXPECT(0x64ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0279
        gbc.setState(0x22e0, 0xaa07, 0xb300, 0x3499, 0x128e, 0x359, 0x0, 0x0);
        gbc.writeMem(0x22e0, { 0x49 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xaa07, gbc.sp());
        EXPECT(0x22e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 027A
        gbc.setState(0x94bf, 0x73d7, 0xd200, 0x502f, 0x48ee, 0x2d06, 0x0, 0x0);
        gbc.writeMem(0x94bf, { 0x49 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x73d7, gbc.sp());
        EXPECT(0x94c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x94bf));
        // 49 027B
        gbc.setState(0x4892, 0xf44f, 0x73b0, 0x2a70, 0xe452, 0x7e38, 0x0, 0x1);
        gbc.writeMem(0x4892, { 0x49 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf44f, gbc.sp());
        EXPECT(0x4893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 027C
        gbc.setState(0xee5b, 0xe99a, 0x8c80, 0x80dd, 0x5e6, 0xe087, 0x1, 0x0);
        gbc.writeMem(0xee5b, { 0x49 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe99a, gbc.sp());
        EXPECT(0xee5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xee5b));
        // 49 027D
        gbc.setState(0x45ca, 0x11b9, 0x3780, 0x4fb3, 0xa500, 0xe384, 0x1, 0x0);
        gbc.writeMem(0x45ca, { 0x49 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x11b9, gbc.sp());
        EXPECT(0x45cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 027E
        gbc.setState(0x7b73, 0xe332, 0x5930, 0x6845, 0x87f5, 0x3704, 0x1, 0x0);
        gbc.writeMem(0x7b73, { 0x49 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe332, gbc.sp());
        EXPECT(0x7b74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 027F
        gbc.setState(0x17d0, 0x2ea, 0x15a0, 0x6322, 0xe74d, 0x38da, 0x0, 0x0);
        gbc.writeMem(0x17d0, { 0x49 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2ea, gbc.sp());
        EXPECT(0x17d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0281
        gbc.setState(0xcb22, 0xdbd8, 0xe140, 0xf0f3, 0x140a, 0xe702, 0x0, 0x0);
        gbc.writeMem(0xcb22, { 0x49 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdbd8, gbc.sp());
        EXPECT(0xcb23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xcb22));
        // 49 0282
        gbc.setState(0x8e9c, 0x1bf6, 0x1720, 0x6359, 0x1d6c, 0x9602, 0x1, 0x0);
        gbc.writeMem(0x8e9c, { 0x49 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1bf6, gbc.sp());
        EXPECT(0x8e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8e9c));
        // 49 0283
        gbc.setState(0x9a51, 0xe1d3, 0xbe60, 0x3ce2, 0x7573, 0xc18f, 0x0, 0x1);
        gbc.writeMem(0x9a51, { 0x49 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe1d3, gbc.sp());
        EXPECT(0x9a52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9a51));
        // 49 0284
        gbc.setState(0x103c, 0x8567, 0x6310, 0x3d9a, 0x5a00, 0x872e, 0x1, 0x0);
        gbc.writeMem(0x103c, { 0x49 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8567, gbc.sp());
        EXPECT(0x103d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0285
        gbc.setState(0xa14c, 0x675, 0x8410, 0xf6b9, 0x722c, 0x5846, 0x1, 0x0);
        gbc.writeMem(0xa14c, { 0x49 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x675, gbc.sp());
        EXPECT(0xa14d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa14c));
        // 49 0286
        gbc.setState(0x4709, 0xe777, 0x2140, 0x6200, 0xd490, 0x1d7c, 0x1, 0x1);
        gbc.writeMem(0x4709, { 0x49 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe777, gbc.sp());
        EXPECT(0x470a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0287
        gbc.setState(0x955b, 0x3840, 0x94d0, 0xb3e6, 0x8d4d, 0x5ec4, 0x1, 0x0);
        gbc.writeMem(0x955b, { 0x49 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3840, gbc.sp());
        EXPECT(0x955c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x955b));
        // 49 0288
        gbc.setState(0x2995, 0x3c38, 0xc60, 0x30e9, 0x9fcf, 0xdd83, 0x1, 0x1);
        gbc.writeMem(0x2995, { 0x49 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3c38, gbc.sp());
        EXPECT(0x2996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0289
        gbc.setState(0xc46e, 0x866a, 0x76e0, 0xa26e, 0xa1a0, 0xe109, 0x0, 0x1);
        gbc.writeMem(0xc46e, { 0x49 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x866a, gbc.sp());
        EXPECT(0xc46f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc46e));
        // 49 028A
        gbc.setState(0x8b4, 0x7765, 0xc420, 0xc945, 0x3afc, 0x48b2, 0x1, 0x1);
        gbc.writeMem(0x8b4, { 0x49 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7765, gbc.sp());
        EXPECT(0x8b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 028B
        gbc.setState(0x11b7, 0xea1e, 0xf130, 0x29b1, 0x5a20, 0xae15, 0x1, 0x0);
        gbc.writeMem(0x11b7, { 0x49 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xea1e, gbc.sp());
        EXPECT(0x11b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 028C
        gbc.setState(0x628, 0xab41, 0xf0e0, 0x747e, 0x3a82, 0x153c, 0x1, 0x0);
        gbc.writeMem(0x628, { 0x49 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xab41, gbc.sp());
        EXPECT(0x629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 028D
        gbc.setState(0x1fef, 0xe61, 0xc700, 0x7356, 0x1d99, 0x11a5, 0x0, 0x1);
        gbc.writeMem(0x1fef, { 0x49 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe61, gbc.sp());
        EXPECT(0x1ff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 028E
        gbc.setState(0xfab, 0x9539, 0x51e0, 0x6986, 0x9822, 0x105b, 0x1, 0x0);
        gbc.writeMem(0xfab, { 0x49 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9539, gbc.sp());
        EXPECT(0xfac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 028F
        gbc.setState(0x6a00, 0x1e34, 0x43f0, 0x70c4, 0xbc76, 0xfeec, 0x0, 0x0);
        gbc.writeMem(0x6a00, { 0x49 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1e34, gbc.sp());
        EXPECT(0x6a01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0290
        gbc.setState(0xf6, 0xacf2, 0x2900, 0xc73b, 0x6dde, 0xe884, 0x1, 0x1);
        gbc.writeMem(0xf6, { 0x49 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xacf2, gbc.sp());
        EXPECT(0xf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0291
        gbc.setState(0x94a1, 0x50c3, 0x86d0, 0x1165, 0xda38, 0x69ee, 0x0, 0x0);
        gbc.writeMem(0x94a1, { 0x49 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x50c3, gbc.sp());
        EXPECT(0x94a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x94a1));
        // 49 0292
        gbc.setState(0x98c, 0xb387, 0xa320, 0x52a4, 0xbd74, 0x191a, 0x0, 0x0);
        gbc.writeMem(0x98c, { 0x49 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb387, gbc.sp());
        EXPECT(0x98d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0293
        gbc.setState(0xc577, 0xa62a, 0x2f0, 0x7ea4, 0xbddb, 0x78fa, 0x0, 0x1);
        gbc.writeMem(0xc577, { 0x49 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa62a, gbc.sp());
        EXPECT(0xc578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc577));
        // 49 0294
        gbc.setState(0xde49, 0xa9fa, 0xc90, 0x9a74, 0x3a9d, 0x338e, 0x0, 0x0);
        gbc.writeMem(0xde49, { 0x49 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa9fa, gbc.sp());
        EXPECT(0xde4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xde49));
        // 49 0295
        gbc.setState(0xc92, 0x90d8, 0xe0f0, 0xee77, 0x7d02, 0xf1dd, 0x1, 0x0);
        gbc.writeMem(0xc92, { 0x49 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x90d8, gbc.sp());
        EXPECT(0xc93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0296
        gbc.setState(0xeddb, 0x5564, 0xe1a0, 0xdb74, 0x690a, 0x3dff, 0x1, 0x0);
        gbc.writeMem(0xeddb, { 0x49 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5564, gbc.sp());
        EXPECT(0xeddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xeddb));
        // 49 0297
        gbc.setState(0xeb67, 0x8b72, 0x7010, 0x92ce, 0x5f85, 0x20d, 0x0, 0x0);
        gbc.writeMem(0xeb67, { 0x49 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8b72, gbc.sp());
        EXPECT(0xeb68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xeb67));
        // 49 0298
        gbc.setState(0x9efa, 0xe722, 0x7210, 0x5b56, 0x43d, 0x58b1, 0x0, 0x0);
        gbc.writeMem(0x9efa, { 0x49 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe722, gbc.sp());
        EXPECT(0x9efb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9efa));
        // 49 029A
        gbc.setState(0x7d3c, 0xf031, 0x2f10, 0xa220, 0xe57f, 0x1854, 0x1, 0x1);
        gbc.writeMem(0x7d3c, { 0x49 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf031, gbc.sp());
        EXPECT(0x7d3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 029B
        gbc.setState(0xac09, 0xcca1, 0x83e0, 0x6812, 0x8487, 0x8dac, 0x0, 0x1);
        gbc.writeMem(0xac09, { 0x49 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcca1, gbc.sp());
        EXPECT(0xac0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xac09));
        // 49 029D
        gbc.setState(0x531d, 0xf9da, 0x5600, 0xbd42, 0xa152, 0x9b17, 0x0, 0x0);
        gbc.writeMem(0x531d, { 0x49 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf9da, gbc.sp());
        EXPECT(0x531e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 029E
        gbc.setState(0x7141, 0xbd65, 0xa470, 0xdfbc, 0x255e, 0xcc34, 0x0, 0x0);
        gbc.writeMem(0x7141, { 0x49 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xbd65, gbc.sp());
        EXPECT(0x7142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 029F
        gbc.setState(0xcde1, 0xa665, 0x60c0, 0x4ff7, 0xc401, 0xb2e9, 0x0, 0x0);
        gbc.writeMem(0xcde1, { 0x49 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa665, gbc.sp());
        EXPECT(0xcde2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xcde1));
        // 49 02A0
        gbc.setState(0xce86, 0x6aff, 0x3f0, 0x54df, 0xf7e3, 0xfae2, 0x1, 0x0);
        gbc.writeMem(0xce86, { 0x49 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6aff, gbc.sp());
        EXPECT(0xce87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xce86));
        // 49 02A1
        gbc.setState(0xd164, 0xd014, 0xb7e0, 0xb940, 0x5afc, 0xe7c9, 0x1, 0x1);
        gbc.writeMem(0xd164, { 0x49 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd014, gbc.sp());
        EXPECT(0xd165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd164));
        // 49 02A2
        gbc.setState(0xb614, 0x75d3, 0xa430, 0x41b6, 0x5778, 0xf307, 0x0, 0x1);
        gbc.writeMem(0xb614, { 0x49 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x75d3, gbc.sp());
        EXPECT(0xb615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb614));
        // 49 02A3
        gbc.setState(0x9998, 0xd92d, 0x5a70, 0xdb12, 0xb2b2, 0xd7f5, 0x1, 0x0);
        gbc.writeMem(0x9998, { 0x49 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd92d, gbc.sp());
        EXPECT(0x9999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9998));
        // 49 02A4
        gbc.setState(0x1348, 0x18d, 0xd700, 0x43ee, 0xbd86, 0x422f, 0x0, 0x1);
        gbc.writeMem(0x1348, { 0x49 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x18d, gbc.sp());
        EXPECT(0x1349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 02A5
        gbc.setState(0x6752, 0xe454, 0xdab0, 0xe145, 0x34bd, 0x411a, 0x0, 0x0);
        gbc.writeMem(0x6752, { 0x49 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe454, gbc.sp());
        EXPECT(0x6753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 02A6
        gbc.setState(0x943c, 0xb88, 0x2cd0, 0xa53, 0x208f, 0xaae3, 0x1, 0x0);
        gbc.writeMem(0x943c, { 0x49 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb88, gbc.sp());
        EXPECT(0x943d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x943c));
        // 49 02A8
        gbc.setState(0xc4c2, 0xd183, 0x8c60, 0xd517, 0x83e3, 0x3209, 0x0, 0x0);
        gbc.writeMem(0xc4c2, { 0x49 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd183, gbc.sp());
        EXPECT(0xc4c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc4c2));
        // 49 02A9
        gbc.setState(0xd61, 0x7b13, 0x660, 0x806a, 0x4225, 0xa3cd, 0x0, 0x0);
        gbc.writeMem(0xd61, { 0x49 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7b13, gbc.sp());
        EXPECT(0xd62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 02AA
        gbc.setState(0x93bb, 0x9ff0, 0x6d30, 0x2044, 0x31e2, 0x91b3, 0x1, 0x0);
        gbc.writeMem(0x93bb, { 0x49 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9ff0, gbc.sp());
        EXPECT(0x93bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x93bb));
        // 49 02AC
        gbc.setState(0x68c8, 0xbf46, 0xe350, 0xf43d, 0x5c5c, 0x5732, 0x0, 0x0);
        gbc.writeMem(0x68c8, { 0x49 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbf46, gbc.sp());
        EXPECT(0x68c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 02AD
        gbc.setState(0xd894, 0x1d18, 0x6850, 0x8cb3, 0x372a, 0x9ea, 0x0, 0x1);
        gbc.writeMem(0xd894, { 0x49 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1d18, gbc.sp());
        EXPECT(0xd895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd894));
        // 49 02AE
        gbc.setState(0x96ed, 0x29ec, 0xdd80, 0xd128, 0x9be6, 0x767a, 0x1, 0x0);
        gbc.writeMem(0x96ed, { 0x49 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x29ec, gbc.sp());
        EXPECT(0x96ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x96ed));
        // 49 02AF
        gbc.setState(0xe76b, 0xd33b, 0xfc30, 0xddac, 0xfa56, 0x4458, 0x1, 0x0);
        gbc.writeMem(0xe76b, { 0x49 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd33b, gbc.sp());
        EXPECT(0xe76c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe76b));
        // 49 02B0
        gbc.setState(0x6218, 0x2107, 0x20a0, 0xe9d5, 0x5560, 0x76e4, 0x1, 0x1);
        gbc.writeMem(0x6218, { 0x49 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2107, gbc.sp());
        EXPECT(0x6219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 02B1
        gbc.setState(0xb79b, 0xcd31, 0xce10, 0xdda6, 0x52df, 0xf4b2, 0x1, 0x1);
        gbc.writeMem(0xb79b, { 0x49 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xcd31, gbc.sp());
        EXPECT(0xb79c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb79b));
        // 49 02B2
        gbc.setState(0x1c48, 0xa19a, 0xdce0, 0xa63e, 0x2938, 0xcd7, 0x0, 0x1);
        gbc.writeMem(0x1c48, { 0x49 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa19a, gbc.sp());
        EXPECT(0x1c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 02B3
        gbc.setState(0x17a2, 0x84f1, 0x78e0, 0x8f9c, 0x3c1c, 0x5bef, 0x1, 0x1);
        gbc.writeMem(0x17a2, { 0x49 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x84f1, gbc.sp());
        EXPECT(0x17a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 02B4
        gbc.setState(0xa776, 0xc31, 0x390, 0x162e, 0x54ee, 0xc11a, 0x1, 0x0);
        gbc.writeMem(0xa776, { 0x49 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc31, gbc.sp());
        EXPECT(0xa777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa776));
        // 49 02B5
        gbc.setState(0x32fc, 0xe239, 0xf5f0, 0xf5df, 0x6eb1, 0x538d, 0x0, 0x1);
        gbc.writeMem(0x32fc, { 0x49 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe239, gbc.sp());
        EXPECT(0x32fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 02B6
        gbc.setState(0xa42a, 0x14a, 0x1d50, 0x60a, 0x6881, 0x6cb0, 0x1, 0x1);
        gbc.writeMem(0xa42a, { 0x49 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x14a, gbc.sp());
        EXPECT(0xa42b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa42a));
        // 49 02B7
        gbc.setState(0x8e70, 0x3385, 0xe850, 0x5c7c, 0xca31, 0x2bd4, 0x0, 0x0);
        gbc.writeMem(0x8e70, { 0x49 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3385, gbc.sp());
        EXPECT(0x8e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8e70));
        // 49 02B8
        gbc.setState(0x9789, 0xd33c, 0xacc0, 0x346f, 0xe33e, 0xa9c2, 0x0, 0x0);
        gbc.writeMem(0x9789, { 0x49 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd33c, gbc.sp());
        EXPECT(0x978a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9789));
        // 49 02B9
        gbc.setState(0x9bf8, 0xe530, 0xcdb0, 0xa1e3, 0x6c72, 0xa86e, 0x0, 0x0);
        gbc.writeMem(0x9bf8, { 0x49 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe530, gbc.sp());
        EXPECT(0x9bf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9bf8));
        // 49 02BA
        gbc.setState(0x7750, 0x820c, 0xd660, 0xa05b, 0x9325, 0xaae9, 0x0, 0x0);
        gbc.writeMem(0x7750, { 0x49 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x820c, gbc.sp());
        EXPECT(0x7751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 02BB
        gbc.setState(0xe75f, 0x76e8, 0xc970, 0x12ed, 0x4e8d, 0x1fd8, 0x0, 0x1);
        gbc.writeMem(0xe75f, { 0x49 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x76e8, gbc.sp());
        EXPECT(0xe760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe75f));
        // 49 02BC
        gbc.setState(0xec8a, 0xd405, 0x2990, 0xc94a, 0xa56a, 0xfd97, 0x0, 0x0);
        gbc.writeMem(0xec8a, { 0x49 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd405, gbc.sp());
        EXPECT(0xec8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xec8a));
        // 49 02BD
        gbc.setState(0x2f9d, 0x320d, 0x1a70, 0x447, 0xddb6, 0x133, 0x1, 0x0);
        gbc.writeMem(0x2f9d, { 0x49 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x320d, gbc.sp());
        EXPECT(0x2f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 02BE
        gbc.setState(0xb12, 0x14e7, 0x6e80, 0x3a72, 0x7e22, 0x5fe1, 0x0, 0x1);
        gbc.writeMem(0xb12, { 0x49 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x14e7, gbc.sp());
        EXPECT(0xb13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 02BF
        gbc.setState(0xd156, 0x287c, 0x8780, 0x7df4, 0x55b5, 0xb7e6, 0x0, 0x0);
        gbc.writeMem(0xd156, { 0x49 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x287c, gbc.sp());
        EXPECT(0xd157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd156));
        // 49 02C0
        gbc.setState(0x6f90, 0x456c, 0x190, 0x821a, 0x4f9d, 0x287e, 0x1, 0x0);
        gbc.writeMem(0x6f90, { 0x49 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x456c, gbc.sp());
        EXPECT(0x6f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 02C1
        gbc.setState(0x4138, 0x2c68, 0xccf0, 0x152c, 0x7e01, 0xdd2c, 0x1, 0x0);
        gbc.writeMem(0x4138, { 0x49 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2c68, gbc.sp());
        EXPECT(0x4139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 02C2
        gbc.setState(0x4a0d, 0x5fa6, 0x5250, 0x8659, 0xfd8, 0x43bc, 0x1, 0x0);
        gbc.writeMem(0x4a0d, { 0x49 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5fa6, gbc.sp());
        EXPECT(0x4a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 02C3
        gbc.setState(0xba7, 0x12c6, 0x9280, 0x9292, 0x47b5, 0x87e0, 0x1, 0x1);
        gbc.writeMem(0xba7, { 0x49 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x12c6, gbc.sp());
        EXPECT(0xba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 02C4
        gbc.setState(0x7152, 0x6098, 0x9200, 0xaa55, 0x1a37, 0x62b7, 0x1, 0x0);
        gbc.writeMem(0x7152, { 0x49 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6098, gbc.sp());
        EXPECT(0x7153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 02C6
        gbc.setState(0x8c65, 0x6323, 0x4a60, 0x9a89, 0x7ad9, 0xc4c2, 0x1, 0x1);
        gbc.writeMem(0x8c65, { 0x49 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6323, gbc.sp());
        EXPECT(0x8c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8c65));
        // 49 02C7
        gbc.setState(0xca62, 0x4ac0, 0x83e0, 0x8e78, 0x8daa, 0xfd7, 0x1, 0x0);
        gbc.writeMem(0xca62, { 0x49 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4ac0, gbc.sp());
        EXPECT(0xca63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xca62));
        // 49 02C8
        gbc.setState(0x16f0, 0x704d, 0x4c20, 0x8a14, 0xdf94, 0xd9d7, 0x0, 0x0);
        gbc.writeMem(0x16f0, { 0x49 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x704d, gbc.sp());
        EXPECT(0x16f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 02C9
        gbc.setState(0x310a, 0x8237, 0x2710, 0xa628, 0x84c1, 0xdd17, 0x1, 0x1);
        gbc.writeMem(0x310a, { 0x49 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8237, gbc.sp());
        EXPECT(0x310b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 02CC
        gbc.setState(0x3e0c, 0x3d3a, 0xb550, 0xf384, 0xa23a, 0x6973, 0x0, 0x0);
        gbc.writeMem(0x3e0c, { 0x49 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3d3a, gbc.sp());
        EXPECT(0x3e0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 02CD
        gbc.setState(0xca88, 0xbab3, 0x23c0, 0x448b, 0x50f3, 0x3399, 0x1, 0x1);
        gbc.writeMem(0xca88, { 0x49 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbab3, gbc.sp());
        EXPECT(0xca89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xca88));
        // 49 02CE
        gbc.setState(0x25f5, 0xda87, 0xf730, 0xe270, 0xa825, 0x8a4e, 0x1, 0x1);
        gbc.writeMem(0x25f5, { 0x49 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xda87, gbc.sp());
        EXPECT(0x25f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 02CF
        gbc.setState(0x13a6, 0xe13d, 0x92c0, 0x4d74, 0xe97b, 0x9c8a, 0x1, 0x0);
        gbc.writeMem(0x13a6, { 0x49 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe13d, gbc.sp());
        EXPECT(0x13a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 02D0
        gbc.setState(0x23a4, 0xa54d, 0xed70, 0x1f9, 0x6fe2, 0x2896, 0x1, 0x0);
        gbc.writeMem(0x23a4, { 0x49 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa54d, gbc.sp());
        EXPECT(0x23a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 02D1
        gbc.setState(0x646f, 0x551a, 0x4fd0, 0xf274, 0xc74b, 0xace1, 0x0, 0x0);
        gbc.writeMem(0x646f, { 0x49 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x551a, gbc.sp());
        EXPECT(0x6470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 02D2
        gbc.setState(0x9066, 0x4bc7, 0x4f60, 0x2ec7, 0x9c10, 0xe575, 0x1, 0x1);
        gbc.writeMem(0x9066, { 0x49 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4bc7, gbc.sp());
        EXPECT(0x9067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9066));
        // 49 02D3
        gbc.setState(0x77c1, 0xcc4e, 0xaa90, 0x5da9, 0x596e, 0x4c3b, 0x1, 0x1);
        gbc.writeMem(0x77c1, { 0x49 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xcc4e, gbc.sp());
        EXPECT(0x77c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 02D4
        gbc.setState(0x275b, 0x1ac5, 0xa40, 0x4b7f, 0x7bb0, 0x3d5a, 0x0, 0x1);
        gbc.writeMem(0x275b, { 0x49 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1ac5, gbc.sp());
        EXPECT(0x275c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 02D6
        gbc.setState(0xdd46, 0xc94f, 0x32d0, 0xb2f2, 0xdac, 0x23b0, 0x0, 0x0);
        gbc.writeMem(0xdd46, { 0x49 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc94f, gbc.sp());
        EXPECT(0xdd47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xdd46));
        // 49 02D7
        gbc.setState(0x2628, 0x5338, 0x8120, 0xb4d6, 0xc40c, 0xf21c, 0x1, 0x1);
        gbc.writeMem(0x2628, { 0x49 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5338, gbc.sp());
        EXPECT(0x2629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 02D8
        gbc.setState(0x6e1c, 0x88a6, 0x7910, 0x62ed, 0xd022, 0xcda1, 0x0, 0x0);
        gbc.writeMem(0x6e1c, { 0x49 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x88a6, gbc.sp());
        EXPECT(0x6e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 02D9
        gbc.setState(0x5142, 0x2c9, 0x3ff0, 0xbc81, 0xf5d5, 0x9a7f, 0x1, 0x0);
        gbc.writeMem(0x5142, { 0x49 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2c9, gbc.sp());
        EXPECT(0x5143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 02DA
        gbc.setState(0xa925, 0x1f04, 0x3090, 0x1fec, 0xfc34, 0xdc21, 0x0, 0x1);
        gbc.writeMem(0xa925, { 0x49 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1f04, gbc.sp());
        EXPECT(0xa926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa925));
        // 49 02DB
        gbc.setState(0x2ea1, 0x3574, 0xe750, 0x6459, 0x89d1, 0xa820, 0x0, 0x0);
        gbc.writeMem(0x2ea1, { 0x49 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3574, gbc.sp());
        EXPECT(0x2ea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 02DC
        gbc.setState(0x931e, 0x4faa, 0x6f70, 0x9099, 0x7fc7, 0x82d4, 0x0, 0x1);
        gbc.writeMem(0x931e, { 0x49 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4faa, gbc.sp());
        EXPECT(0x931f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x931e));
        // 49 02DD
        gbc.setState(0x5cc5, 0xbb11, 0xb510, 0x5a8, 0x720e, 0xcc0d, 0x1, 0x1);
        gbc.writeMem(0x5cc5, { 0x49 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xbb11, gbc.sp());
        EXPECT(0x5cc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 02DE
        gbc.setState(0x2148, 0xce71, 0x1f60, 0x1c0, 0xa19b, 0x31ff, 0x0, 0x0);
        gbc.writeMem(0x2148, { 0x49 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xce71, gbc.sp());
        EXPECT(0x2149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 02DF
        gbc.setState(0xdd1a, 0x4a02, 0xb2c0, 0xf0a1, 0xa8bf, 0xc99b, 0x1, 0x1);
        gbc.writeMem(0xdd1a, { 0x49 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4a02, gbc.sp());
        EXPECT(0xdd1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xdd1a));
        // 49 02E0
        gbc.setState(0x5d12, 0x61fe, 0xc490, 0x7e06, 0x247c, 0x5e87, 0x1, 0x1);
        gbc.writeMem(0x5d12, { 0x49 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x61fe, gbc.sp());
        EXPECT(0x5d13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 02E1
        gbc.setState(0xba8f, 0xd778, 0x4550, 0x15bd, 0x36e4, 0x4efb, 0x0, 0x0);
        gbc.writeMem(0xba8f, { 0x49 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd778, gbc.sp());
        EXPECT(0xba90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xba8f));
        // 49 02E2
        gbc.setState(0xbee1, 0xa8c8, 0x7720, 0xc0ea, 0x9343, 0x1bba, 0x0, 0x1);
        gbc.writeMem(0xbee1, { 0x49 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa8c8, gbc.sp());
        EXPECT(0xbee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbee1));
        // 49 02E3
        gbc.setState(0xa776, 0x7110, 0x2da0, 0x8622, 0xe377, 0x71e2, 0x0, 0x1);
        gbc.writeMem(0xa776, { 0x49 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7110, gbc.sp());
        EXPECT(0xa777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa776));
        // 49 02E4
        gbc.setState(0x7e2f, 0x41d9, 0xc20, 0x5430, 0x9fb5, 0x8857, 0x1, 0x1);
        gbc.writeMem(0x7e2f, { 0x49 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x41d9, gbc.sp());
        EXPECT(0x7e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 02E5
        gbc.setState(0x28b0, 0x241c, 0x71c0, 0xe2e, 0xd4c4, 0x9b13, 0x0, 0x0);
        gbc.writeMem(0x28b0, { 0x49 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x241c, gbc.sp());
        EXPECT(0x28b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 02E6
        gbc.setState(0xc372, 0x32f1, 0x5520, 0x3e79, 0xde6f, 0x8da9, 0x0, 0x0);
        gbc.writeMem(0xc372, { 0x49 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x32f1, gbc.sp());
        EXPECT(0xc373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc372));
        // 49 02E7
        gbc.setState(0xb68e, 0x2105, 0xee10, 0x4cec, 0xb08c, 0x60c6, 0x0, 0x1);
        gbc.writeMem(0xb68e, { 0x49 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2105, gbc.sp());
        EXPECT(0xb68f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb68e));
        // 49 02E8
        gbc.setState(0x2c6a, 0x5964, 0xcbb0, 0x7d65, 0x170c, 0x15f8, 0x0, 0x1);
        gbc.writeMem(0x2c6a, { 0x49 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5964, gbc.sp());
        EXPECT(0x2c6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 02E9
        gbc.setState(0xadc5, 0x9ed5, 0x8420, 0x5fe4, 0x2261, 0x2064, 0x1, 0x1);
        gbc.writeMem(0xadc5, { 0x49 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9ed5, gbc.sp());
        EXPECT(0xadc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xadc5));
        // 49 02EA
        gbc.setState(0x1150, 0x63b7, 0x9190, 0xe293, 0x7a22, 0x622a, 0x0, 0x1);
        gbc.writeMem(0x1150, { 0x49 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x63b7, gbc.sp());
        EXPECT(0x1151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 02EB
        gbc.setState(0x70ce, 0x7d9f, 0xcae0, 0xc1ff, 0x72d6, 0xbd2f, 0x0, 0x1);
        gbc.writeMem(0x70ce, { 0x49 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7d9f, gbc.sp());
        EXPECT(0x70cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 02EC
        gbc.setState(0x5671, 0x340a, 0xa790, 0x44eb, 0xf427, 0xf8d0, 0x1, 0x1);
        gbc.writeMem(0x5671, { 0x49 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x340a, gbc.sp());
        EXPECT(0x5672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 02EE
        gbc.setState(0x8cb8, 0x3761, 0xaf70, 0x67f6, 0xd65e, 0x178, 0x0, 0x1);
        gbc.writeMem(0x8cb8, { 0x49 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3761, gbc.sp());
        EXPECT(0x8cb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8cb8));
        // 49 02EF
        gbc.setState(0x8f9c, 0x7598, 0x7140, 0x8038, 0x986f, 0xb001, 0x1, 0x0);
        gbc.writeMem(0x8f9c, { 0x49 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7598, gbc.sp());
        EXPECT(0x8f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8f9c));
        // 49 02F0
        gbc.setState(0x838d, 0x3565, 0xb510, 0x6c18, 0xa335, 0xc1de, 0x1, 0x0);
        gbc.writeMem(0x838d, { 0x49 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3565, gbc.sp());
        EXPECT(0x838e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x838d));
        // 49 02F1
        gbc.setState(0x1a82, 0x85, 0x24b0, 0xa295, 0xaf5b, 0x44aa, 0x1, 0x1);
        gbc.writeMem(0x1a82, { 0x49 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x85, gbc.sp());
        EXPECT(0x1a83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 02F2
        gbc.setState(0x92d1, 0xb518, 0x7de0, 0xa7b5, 0x7fed, 0x7aa1, 0x0, 0x1);
        gbc.writeMem(0x92d1, { 0x49 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb518, gbc.sp());
        EXPECT(0x92d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x92d1));
        // 49 02F3
        gbc.setState(0xe46a, 0x4449, 0x4800, 0x5400, 0x54ca, 0x59e2, 0x1, 0x0);
        gbc.writeMem(0xe46a, { 0x49 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4449, gbc.sp());
        EXPECT(0xe46b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe46a));
        // 49 02F4
        gbc.setState(0x86c9, 0x636, 0xb510, 0x36b6, 0x74c4, 0x29aa, 0x0, 0x1);
        gbc.writeMem(0x86c9, { 0x49 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x636, gbc.sp());
        EXPECT(0x86ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x86c9));
        // 49 02F5
        gbc.setState(0xe795, 0xeb8, 0x89f0, 0xd512, 0xf901, 0x5615, 0x1, 0x1);
        gbc.writeMem(0xe795, { 0x49 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xeb8, gbc.sp());
        EXPECT(0xe796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe795));
        // 49 02F6
        gbc.setState(0xacc2, 0x5894, 0x27e0, 0xe68b, 0xd9f4, 0x6b3c, 0x0, 0x0);
        gbc.writeMem(0xacc2, { 0x49 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5894, gbc.sp());
        EXPECT(0xacc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xacc2));
        // 49 02F7
        gbc.setState(0x4ed0, 0xedaa, 0x180, 0x4033, 0xf9df, 0xfe71, 0x0, 0x0);
        gbc.writeMem(0x4ed0, { 0x49 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xedaa, gbc.sp());
        EXPECT(0x4ed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 02F8
        gbc.setState(0x5aa5, 0x23d6, 0x7ba0, 0x7fdf, 0x9094, 0xbca3, 0x1, 0x1);
        gbc.writeMem(0x5aa5, { 0x49 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x23d6, gbc.sp());
        EXPECT(0x5aa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 02F9
        gbc.setState(0x8290, 0xb457, 0x7f20, 0xfbfb, 0x29e0, 0x27a6, 0x0, 0x0);
        gbc.writeMem(0x8290, { 0x49 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb457, gbc.sp());
        EXPECT(0x8291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8290));
        // 49 02FA
        gbc.setState(0xe0b8, 0xaa06, 0x5960, 0x7f03, 0xfe43, 0x4e3, 0x1, 0x0);
        gbc.writeMem(0xe0b8, { 0x49 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xaa06, gbc.sp());
        EXPECT(0xe0b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe0b8));
        // 49 02FC
        gbc.setState(0x8497, 0x64d4, 0xab80, 0x4979, 0x1dd9, 0xcb76, 0x1, 0x1);
        gbc.writeMem(0x8497, { 0x49 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x64d4, gbc.sp());
        EXPECT(0x8498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8497));
        // 49 02FE
        gbc.setState(0x5517, 0x6b11, 0x49b0, 0xc78b, 0xc0e0, 0xdcc9, 0x0, 0x0);
        gbc.writeMem(0x5517, { 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6b11, gbc.sp());
        EXPECT(0x5518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 02FF
        gbc.setState(0xbf05, 0xe32f, 0x71f0, 0x33, 0xf7a6, 0x33db, 0x1, 0x1);
        gbc.writeMem(0xbf05, { 0x49 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe32f, gbc.sp());
        EXPECT(0xbf06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbf05));
        // 49 0300
        gbc.setState(0x13ff, 0x5ca0, 0xc950, 0x7453, 0x5e8d, 0x29e1, 0x0, 0x1);
        gbc.writeMem(0x13ff, { 0x49 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5ca0, gbc.sp());
        EXPECT(0x1400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0301
        gbc.setState(0x90b7, 0x272, 0x83f0, 0xece7, 0xe4ab, 0x7b4d, 0x0, 0x0);
        gbc.writeMem(0x90b7, { 0x49 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x272, gbc.sp());
        EXPECT(0x90b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x90b7));
        // 49 0302
        gbc.setState(0x3d76, 0xa965, 0xffd0, 0xc043, 0x38fc, 0x4e77, 0x0, 0x0);
        gbc.writeMem(0x3d76, { 0x49 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa965, gbc.sp());
        EXPECT(0x3d77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0303
        gbc.setState(0x4607, 0xf113, 0x3780, 0xf91d, 0xd7d4, 0xd14d, 0x1, 0x1);
        gbc.writeMem(0x4607, { 0x49 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf113, gbc.sp());
        EXPECT(0x4608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0304
        gbc.setState(0xdc08, 0x3b9b, 0xeaa0, 0x50c0, 0xd04c, 0x25bf, 0x0, 0x1);
        gbc.writeMem(0xdc08, { 0x49 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3b9b, gbc.sp());
        EXPECT(0xdc09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xdc08));
        // 49 0305
        gbc.setState(0xe455, 0x548b, 0x3b40, 0x55d7, 0xd9f5, 0x55f4, 0x1, 0x0);
        gbc.writeMem(0xe455, { 0x49 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x548b, gbc.sp());
        EXPECT(0xe456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe455));
        // 49 0306
        gbc.setState(0xc364, 0x93e0, 0x1780, 0x5b43, 0xaa9d, 0x92ee, 0x1, 0x1);
        gbc.writeMem(0xc364, { 0x49 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x93e0, gbc.sp());
        EXPECT(0xc365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc364));
        // 49 0307
        gbc.setState(0xac4a, 0x61c9, 0x8390, 0x84a7, 0xb026, 0x2c95, 0x1, 0x1);
        gbc.writeMem(0xac4a, { 0x49 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x61c9, gbc.sp());
        EXPECT(0xac4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xac4a));
        // 49 0308
        gbc.setState(0x820b, 0x5ee0, 0x8610, 0x39a1, 0x8112, 0x54a, 0x1, 0x0);
        gbc.writeMem(0x820b, { 0x49 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5ee0, gbc.sp());
        EXPECT(0x820c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x820b));
        // 49 0309
        gbc.setState(0xedc0, 0xd899, 0xfcf0, 0x48b0, 0x1636, 0x7e46, 0x0, 0x1);
        gbc.writeMem(0xedc0, { 0x49 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd899, gbc.sp());
        EXPECT(0xedc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xedc0));
        // 49 030A
        gbc.setState(0x1634, 0x990a, 0x52a0, 0xa521, 0x2d99, 0x721, 0x0, 0x1);
        gbc.writeMem(0x1634, { 0x49 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x990a, gbc.sp());
        EXPECT(0x1635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 030B
        gbc.setState(0x9fb1, 0xba67, 0x49d0, 0xcd62, 0x425, 0x6587, 0x1, 0x0);
        gbc.writeMem(0x9fb1, { 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xba67, gbc.sp());
        EXPECT(0x9fb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9fb1));
        // 49 030C
        gbc.setState(0x1586, 0x770b, 0x6230, 0x46, 0x64ee, 0x3af9, 0x0, 0x0);
        gbc.writeMem(0x1586, { 0x49 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x770b, gbc.sp());
        EXPECT(0x1587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 030D
        gbc.setState(0x83e6, 0x319c, 0x9100, 0x7e06, 0x56e4, 0x3c14, 0x0, 0x0);
        gbc.writeMem(0x83e6, { 0x49 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x319c, gbc.sp());
        EXPECT(0x83e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x83e6));
        // 49 030E
        gbc.setState(0x4feb, 0xbada, 0xc930, 0x46f4, 0x12aa, 0xf36, 0x1, 0x0);
        gbc.writeMem(0x4feb, { 0x49 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbada, gbc.sp());
        EXPECT(0x4fec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 030F
        gbc.setState(0xd0bd, 0xbdc5, 0xbcf0, 0xa69c, 0x7ec6, 0x8781, 0x1, 0x0);
        gbc.writeMem(0xd0bd, { 0x49 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbdc5, gbc.sp());
        EXPECT(0xd0be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd0bd));
        // 49 0311
        gbc.setState(0x6f89, 0x32e5, 0x9e20, 0x74d8, 0x1813, 0xf524, 0x0, 0x1);
        gbc.writeMem(0x6f89, { 0x49 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x32e5, gbc.sp());
        EXPECT(0x6f8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0312
        gbc.setState(0xe6fe, 0x94cd, 0xa6a0, 0x152b, 0x2e9c, 0x14e5, 0x0, 0x0);
        gbc.writeMem(0xe6fe, { 0x49 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x94cd, gbc.sp());
        EXPECT(0xe6ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe6fe));
        // 49 0313
        gbc.setState(0x26f6, 0x9763, 0x6450, 0x1e08, 0x4c68, 0xfd21, 0x0, 0x0);
        gbc.writeMem(0x26f6, { 0x49 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9763, gbc.sp());
        EXPECT(0x26f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0314
        gbc.setState(0x4ffa, 0x3b69, 0x8440, 0xc836, 0x915c, 0x9ed3, 0x1, 0x1);
        gbc.writeMem(0x4ffa, { 0x49 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3b69, gbc.sp());
        EXPECT(0x4ffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0315
        gbc.setState(0x562a, 0x57f1, 0x32e0, 0xbed5, 0x4adf, 0xe9b6, 0x0, 0x0);
        gbc.writeMem(0x562a, { 0x49 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x57f1, gbc.sp());
        EXPECT(0x562b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0316
        gbc.setState(0x9b84, 0x31c0, 0xe530, 0xf8c2, 0x5479, 0x6c87, 0x0, 0x0);
        gbc.writeMem(0x9b84, { 0x49 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x31c0, gbc.sp());
        EXPECT(0x9b85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9b84));
        // 49 0317
        gbc.setState(0x4636, 0x4f8b, 0x3070, 0x4b30, 0x89a5, 0x4673, 0x0, 0x1);
        gbc.writeMem(0x4636, { 0x49 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4f8b, gbc.sp());
        EXPECT(0x4637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0318
        gbc.setState(0x4086, 0x9fcd, 0xdb90, 0xe855, 0x41e6, 0x5cb7, 0x1, 0x0);
        gbc.writeMem(0x4086, { 0x49 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9fcd, gbc.sp());
        EXPECT(0x4087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0319
        gbc.setState(0xd0c3, 0xbbd3, 0xafb0, 0xdfe7, 0x4c9b, 0xf3fa, 0x1, 0x1);
        gbc.writeMem(0xd0c3, { 0x49 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xbbd3, gbc.sp());
        EXPECT(0xd0c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd0c3));
        // 49 031A
        gbc.setState(0x40fc, 0xa685, 0xc980, 0xd3eb, 0xf11d, 0x8513, 0x1, 0x1);
        gbc.writeMem(0x40fc, { 0x49 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa685, gbc.sp());
        EXPECT(0x40fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 031B
        gbc.setState(0x3534, 0x1aac, 0x95c0, 0x3c67, 0x9fbf, 0xa0b3, 0x1, 0x0);
        gbc.writeMem(0x3534, { 0x49 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1aac, gbc.sp());
        EXPECT(0x3535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 031C
        gbc.setState(0x3770, 0x2811, 0x60b0, 0x5aa1, 0xde2f, 0x1158, 0x0, 0x1);
        gbc.writeMem(0x3770, { 0x49 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2811, gbc.sp());
        EXPECT(0x3771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 031D
        gbc.setState(0xab52, 0x7a1a, 0x22e0, 0xec07, 0x2bef, 0xb363, 0x0, 0x0);
        gbc.writeMem(0xab52, { 0x49 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7a1a, gbc.sp());
        EXPECT(0xab53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xab52));
        // 49 031E
        gbc.setState(0x6c6d, 0x77e4, 0xd0c0, 0xdca9, 0xe183, 0x8163, 0x0, 0x0);
        gbc.writeMem(0x6c6d, { 0x49 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x77e4, gbc.sp());
        EXPECT(0x6c6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 031F
        gbc.setState(0x823d, 0xc17a, 0xa710, 0x8b2, 0xddc2, 0xb578, 0x0, 0x1);
        gbc.writeMem(0x823d, { 0x49 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc17a, gbc.sp());
        EXPECT(0x823e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x823d));
        // 49 0320
        gbc.setState(0x1962, 0xe337, 0x60, 0x75eb, 0x709e, 0x9519, 0x0, 0x0);
        gbc.writeMem(0x1962, { 0x49 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe337, gbc.sp());
        EXPECT(0x1963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0321
        gbc.setState(0xbd4, 0xc340, 0xbbb0, 0xea0d, 0xf178, 0xe56d, 0x1, 0x0);
        gbc.writeMem(0xbd4, { 0x49 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc340, gbc.sp());
        EXPECT(0xbd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0322
        gbc.setState(0x2014, 0x4ee4, 0xb590, 0x1409, 0x3dfe, 0x83bd, 0x1, 0x0);
        gbc.writeMem(0x2014, { 0x49 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4ee4, gbc.sp());
        EXPECT(0x2015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0323
        gbc.setState(0x51c0, 0x46eb, 0xfb60, 0x6ea3, 0xab22, 0x8577, 0x1, 0x1);
        gbc.writeMem(0x51c0, { 0x49 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x46eb, gbc.sp());
        EXPECT(0x51c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0324
        gbc.setState(0x2b6, 0xcad3, 0x8b20, 0x26b3, 0x21f6, 0xd9b5, 0x0, 0x1);
        gbc.writeMem(0x2b6, { 0x49 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xcad3, gbc.sp());
        EXPECT(0x2b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0325
        gbc.setState(0x175f, 0x526a, 0x6a90, 0x1a22, 0x33f, 0xf33a, 0x0, 0x1);
        gbc.writeMem(0x175f, { 0x49 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x526a, gbc.sp());
        EXPECT(0x1760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0326
        gbc.setState(0x4c9a, 0x28bc, 0x36f0, 0x519c, 0x90ce, 0x68a1, 0x0, 0x0);
        gbc.writeMem(0x4c9a, { 0x49 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x28bc, gbc.sp());
        EXPECT(0x4c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0327
        gbc.setState(0x266a, 0xca81, 0x50f0, 0xfb42, 0x3e57, 0x5c72, 0x1, 0x1);
        gbc.writeMem(0x266a, { 0x49 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xca81, gbc.sp());
        EXPECT(0x266b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0328
        gbc.setState(0xc79e, 0xc8f0, 0x1630, 0xdca9, 0x4172, 0xc69e, 0x0, 0x1);
        gbc.writeMem(0xc79e, { 0x49 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc8f0, gbc.sp());
        EXPECT(0xc79f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc79e));
        // 49 0329
        gbc.setState(0x8e7d, 0xc1a2, 0x4850, 0x6840, 0xedd2, 0x63e0, 0x1, 0x0);
        gbc.writeMem(0x8e7d, { 0x49 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc1a2, gbc.sp());
        EXPECT(0x8e7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8e7d));
        // 49 032A
        gbc.setState(0x42e4, 0x200c, 0x7450, 0xf82b, 0xa3f7, 0x1591, 0x1, 0x1);
        gbc.writeMem(0x42e4, { 0x49 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x200c, gbc.sp());
        EXPECT(0x42e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 032B
        gbc.setState(0xbed0, 0xbf7f, 0x9220, 0xcae7, 0x8dd5, 0xe767, 0x1, 0x0);
        gbc.writeMem(0xbed0, { 0x49 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbf7f, gbc.sp());
        EXPECT(0xbed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbed0));
        // 49 032C
        gbc.setState(0x3e5, 0xba38, 0x8650, 0x1dac, 0xfba1, 0xa611, 0x0, 0x1);
        gbc.writeMem(0x3e5, { 0x49 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xba38, gbc.sp());
        EXPECT(0x3e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 032D
        gbc.setState(0xb550, 0xb548, 0x8260, 0xada3, 0xe358, 0x9061, 0x0, 0x1);
        gbc.writeMem(0xb550, { 0x49 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb548, gbc.sp());
        EXPECT(0xb551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb550));
        // 49 032E
        gbc.setState(0x919c, 0xf03b, 0xca30, 0x4c59, 0xf867, 0x4a23, 0x1, 0x1);
        gbc.writeMem(0x919c, { 0x49 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf03b, gbc.sp());
        EXPECT(0x919d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x919c));
        // 49 032F
        gbc.setState(0x7c48, 0x6833, 0xf80, 0x8e6d, 0x239, 0xd6ae, 0x0, 0x1);
        gbc.writeMem(0x7c48, { 0x49 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6833, gbc.sp());
        EXPECT(0x7c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0330
        gbc.setState(0xe453, 0x249c, 0xc280, 0x8f12, 0xaa9c, 0x6c53, 0x1, 0x0);
        gbc.writeMem(0xe453, { 0x49 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x249c, gbc.sp());
        EXPECT(0xe454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe453));
        // 49 0331
        gbc.setState(0x7f16, 0x1176, 0xb9d0, 0x4f0c, 0x5e11, 0xaee5, 0x0, 0x1);
        gbc.writeMem(0x7f16, { 0x49 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1176, gbc.sp());
        EXPECT(0x7f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0332
        gbc.setState(0x739, 0xd1bb, 0x5700, 0x4670, 0x1d19, 0x696e, 0x1, 0x0);
        gbc.writeMem(0x739, { 0x49 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd1bb, gbc.sp());
        EXPECT(0x73a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0333
        gbc.setState(0x5cd, 0x750a, 0x70, 0xbe9a, 0x734f, 0xfb40, 0x0, 0x0);
        gbc.writeMem(0x5cd, { 0x49 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x750a, gbc.sp());
        EXPECT(0x5ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0334
        gbc.setState(0x1887, 0x4796, 0x79d0, 0xc4cf, 0xe55a, 0x92ed, 0x0, 0x0);
        gbc.writeMem(0x1887, { 0x49 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4796, gbc.sp());
        EXPECT(0x1888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0335
        gbc.setState(0x6dc5, 0x8da7, 0x67a0, 0x8da4, 0x80e1, 0x3c6, 0x0, 0x1);
        gbc.writeMem(0x6dc5, { 0x49 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8da7, gbc.sp());
        EXPECT(0x6dc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0336
        gbc.setState(0x9ba8, 0x67e, 0x2b90, 0x901, 0x7172, 0x79a, 0x1, 0x1);
        gbc.writeMem(0x9ba8, { 0x49 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x67e, gbc.sp());
        EXPECT(0x9ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9ba8));
        // 49 0337
        gbc.setState(0xdc38, 0x1aba, 0x2320, 0xdeea, 0xe37, 0xc3fa, 0x0, 0x0);
        gbc.writeMem(0xdc38, { 0x49 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1aba, gbc.sp());
        EXPECT(0xdc39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xdc38));
        // 49 0338
        gbc.setState(0xdeed, 0x7f19, 0x9120, 0x6e8c, 0xa21b, 0xda96, 0x1, 0x0);
        gbc.writeMem(0xdeed, { 0x49 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7f19, gbc.sp());
        EXPECT(0xdeee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xdeed));
        // 49 0339
        gbc.setState(0x475f, 0xc3b7, 0xd860, 0x3a26, 0x786f, 0xd2b8, 0x1, 0x0);
        gbc.writeMem(0x475f, { 0x49 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc3b7, gbc.sp());
        EXPECT(0x4760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 033A
        gbc.setState(0xdd93, 0x82b4, 0xe30, 0x996e, 0x3aec, 0x7450, 0x1, 0x1);
        gbc.writeMem(0xdd93, { 0x49 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x82b4, gbc.sp());
        EXPECT(0xdd94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xdd93));
        // 49 033C
        gbc.setState(0x9ab, 0x6d05, 0x7f60, 0x6986, 0xafed, 0xe7a9, 0x0, 0x0);
        gbc.writeMem(0x9ab, { 0x49 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6d05, gbc.sp());
        EXPECT(0x9ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 033D
        gbc.setState(0x1597, 0xcbb3, 0xeed0, 0x9ba3, 0x85cb, 0xadea, 0x0, 0x0);
        gbc.writeMem(0x1597, { 0x49 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xcbb3, gbc.sp());
        EXPECT(0x1598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 033E
        gbc.setState(0x3595, 0xab9b, 0x23e0, 0xf823, 0xae39, 0x722b, 0x0, 0x1);
        gbc.writeMem(0x3595, { 0x49 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xab9b, gbc.sp());
        EXPECT(0x3596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 033F
        gbc.setState(0x8a51, 0xe77c, 0x26b0, 0xcad7, 0xfbd6, 0x9c25, 0x0, 0x1);
        gbc.writeMem(0x8a51, { 0x49 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe77c, gbc.sp());
        EXPECT(0x8a52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8a51));
        // 49 0340
        gbc.setState(0xb8d5, 0x7e7f, 0x5540, 0xede5, 0xd3f9, 0xf75b, 0x0, 0x1);
        gbc.writeMem(0xb8d5, { 0x49 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7e7f, gbc.sp());
        EXPECT(0xb8d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb8d5));
        // 49 0341
        gbc.setState(0xd9e8, 0x6101, 0x4930, 0x79d, 0x5482, 0x663c, 0x1, 0x1);
        gbc.writeMem(0xd9e8, { 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6101, gbc.sp());
        EXPECT(0xd9e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd9e8));
        // 49 0342
        gbc.setState(0xd935, 0x61c2, 0x48f0, 0x7e0d, 0xde05, 0xe183, 0x1, 0x0);
        gbc.writeMem(0xd935, { 0x49 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x61c2, gbc.sp());
        EXPECT(0xd936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd935));
        // 49 0343
        gbc.setState(0x7a4d, 0x116d, 0xc7c0, 0x2ae0, 0x8af, 0xb738, 0x0, 0x1);
        gbc.writeMem(0x7a4d, { 0x49 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x116d, gbc.sp());
        EXPECT(0x7a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0344
        gbc.setState(0x1457, 0x373, 0xce50, 0x6759, 0x7cc, 0xb0d4, 0x1, 0x0);
        gbc.writeMem(0x1457, { 0x49 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x373, gbc.sp());
        EXPECT(0x1458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0345
        gbc.setState(0xd661, 0xab7b, 0xf440, 0x9f9a, 0xd0e8, 0xc784, 0x1, 0x0);
        gbc.writeMem(0xd661, { 0x49 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xab7b, gbc.sp());
        EXPECT(0xd662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd661));
        // 49 0346
        gbc.setState(0x68b0, 0xb01f, 0x3900, 0x8327, 0x7c42, 0xfd35, 0x0, 0x1);
        gbc.writeMem(0x68b0, { 0x49 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb01f, gbc.sp());
        EXPECT(0x68b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0347
        gbc.setState(0xcd9a, 0xa14a, 0xddf0, 0x27fa, 0xaf6b, 0x5c8a, 0x1, 0x0);
        gbc.writeMem(0xcd9a, { 0x49 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa14a, gbc.sp());
        EXPECT(0xcd9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xcd9a));
        // 49 0348
        gbc.setState(0xe3a7, 0xd986, 0x7a30, 0xf640, 0xde45, 0xe43a, 0x0, 0x1);
        gbc.writeMem(0xe3a7, { 0x49 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd986, gbc.sp());
        EXPECT(0xe3a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe3a7));
        // 49 0349
        gbc.setState(0xe6a2, 0x4538, 0x8d70, 0x923a, 0x6f9c, 0x2b1e, 0x1, 0x1);
        gbc.writeMem(0xe6a2, { 0x49 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4538, gbc.sp());
        EXPECT(0xe6a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe6a2));
        // 49 034A
        gbc.setState(0x4a53, 0x3249, 0x6870, 0x9011, 0x2f18, 0x1343, 0x1, 0x1);
        gbc.writeMem(0x4a53, { 0x49 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3249, gbc.sp());
        EXPECT(0x4a54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 034B
        gbc.setState(0x581a, 0x1f67, 0x39a0, 0x14ef, 0x9a44, 0xcf67, 0x1, 0x1);
        gbc.writeMem(0x581a, { 0x49 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1f67, gbc.sp());
        EXPECT(0x581b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 034C
        gbc.setState(0x45da, 0x7e38, 0xbaa0, 0x2fe9, 0xec4, 0x71f9, 0x1, 0x0);
        gbc.writeMem(0x45da, { 0x49 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7e38, gbc.sp());
        EXPECT(0x45db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 034D
        gbc.setState(0x9114, 0xc43a, 0x6170, 0xbb42, 0x1c86, 0x3fc5, 0x1, 0x0);
        gbc.writeMem(0x9114, { 0x49 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc43a, gbc.sp());
        EXPECT(0x9115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9114));
        // 49 034E
        gbc.setState(0xb96c, 0x210a, 0x8630, 0x9274, 0x1d6e, 0xb747, 0x0, 0x0);
        gbc.writeMem(0xb96c, { 0x49 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x210a, gbc.sp());
        EXPECT(0xb96d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb96c));
        // 49 034F
        gbc.setState(0x31b1, 0xc6de, 0x2d80, 0xa11c, 0x1660, 0xab4a, 0x1, 0x1);
        gbc.writeMem(0x31b1, { 0x49 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc6de, gbc.sp());
        EXPECT(0x31b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0350
        gbc.setState(0xa414, 0xc0e5, 0x1eb0, 0x9e02, 0xa5c9, 0xec31, 0x0, 0x1);
        gbc.writeMem(0xa414, { 0x49 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc0e5, gbc.sp());
        EXPECT(0xa415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa414));
        // 49 0351
        gbc.setState(0x7ba7, 0xabec, 0xd9b0, 0x5a94, 0x2be1, 0x8abf, 0x0, 0x0);
        gbc.writeMem(0x7ba7, { 0x49 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xabec, gbc.sp());
        EXPECT(0x7ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0352
        gbc.setState(0x5692, 0x3802, 0x5650, 0x6102, 0x2b91, 0xa9f0, 0x0, 0x0);
        gbc.writeMem(0x5692, { 0x49 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3802, gbc.sp());
        EXPECT(0x5693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0353
        gbc.setState(0xa9bc, 0xa9e4, 0x8a00, 0xd112, 0xb097, 0xbee3, 0x1, 0x1);
        gbc.writeMem(0xa9bc, { 0x49 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa9e4, gbc.sp());
        EXPECT(0xa9bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa9bc));
        // 49 0354
        gbc.setState(0xef59, 0x4bb3, 0xcf30, 0xd2a0, 0x3078, 0xa12, 0x0, 0x0);
        gbc.writeMem(0xef59, { 0x49 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4bb3, gbc.sp());
        EXPECT(0xef5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xef59));
        // 49 0355
        gbc.setState(0x69ad, 0x6f2e, 0xe090, 0xcd14, 0xb4ea, 0xf00c, 0x1, 0x0);
        gbc.writeMem(0x69ad, { 0x49 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6f2e, gbc.sp());
        EXPECT(0x69ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0356
        gbc.setState(0x8f0c, 0x6957, 0x1800, 0x6509, 0xdea3, 0x10eb, 0x0, 0x0);
        gbc.writeMem(0x8f0c, { 0x49 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6957, gbc.sp());
        EXPECT(0x8f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8f0c));
        // 49 0357
        gbc.setState(0x64c1, 0x77b2, 0x7ce0, 0xe965, 0x27d9, 0xaf32, 0x0, 0x0);
        gbc.writeMem(0x64c1, { 0x49 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x77b2, gbc.sp());
        EXPECT(0x64c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0358
        gbc.setState(0x1803, 0x6e52, 0xe790, 0x5bef, 0xdba6, 0xd8b9, 0x1, 0x0);
        gbc.writeMem(0x1803, { 0x49 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6e52, gbc.sp());
        EXPECT(0x1804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0359
        gbc.setState(0xbe04, 0xa6d1, 0xb240, 0x10e2, 0x7aa, 0x6d94, 0x0, 0x0);
        gbc.writeMem(0xbe04, { 0x49 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa6d1, gbc.sp());
        EXPECT(0xbe05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbe04));
        // 49 035A
        gbc.setState(0xc7d3, 0x49f4, 0xa650, 0xadc2, 0xcdad, 0x5f02, 0x0, 0x1);
        gbc.writeMem(0xc7d3, { 0x49 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x49f4, gbc.sp());
        EXPECT(0xc7d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc7d3));
        // 49 035B
        gbc.setState(0x16c6, 0xfb3c, 0x1e70, 0xad5b, 0xd615, 0xdee4, 0x0, 0x1);
        gbc.writeMem(0x16c6, { 0x49 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfb3c, gbc.sp());
        EXPECT(0x16c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 035C
        gbc.setState(0x5f66, 0x12c7, 0xb8c0, 0x91ea, 0x1a2d, 0x6936, 0x1, 0x1);
        gbc.writeMem(0x5f66, { 0x49 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x12c7, gbc.sp());
        EXPECT(0x5f67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 035D
        gbc.setState(0x38, 0x7309, 0xece0, 0x84ef, 0xf0ec, 0xa553, 0x1, 0x1);
        gbc.writeMem(0x38, { 0x49 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7309, gbc.sp());
        EXPECT(0x39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 035E
        gbc.setState(0x897f, 0x586e, 0x8970, 0x4abe, 0x7fdd, 0x1f3d, 0x1, 0x0);
        gbc.writeMem(0x897f, { 0x49 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x586e, gbc.sp());
        EXPECT(0x8980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x897f));
        // 49 035F
        gbc.setState(0x775c, 0x2d0a, 0xad0, 0xccb5, 0xbb02, 0xd386, 0x1, 0x0);
        gbc.writeMem(0x775c, { 0x49 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2d0a, gbc.sp());
        EXPECT(0x775d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0361
        gbc.setState(0x5871, 0x1dbf, 0xdd0, 0xfe3b, 0xada7, 0xa445, 0x0, 0x1);
        gbc.writeMem(0x5871, { 0x49 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1dbf, gbc.sp());
        EXPECT(0x5872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0362
        gbc.setState(0xb7ed, 0xf0c5, 0xfab0, 0x4555, 0xc1a6, 0x634c, 0x0, 0x0);
        gbc.writeMem(0xb7ed, { 0x49 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf0c5, gbc.sp());
        EXPECT(0xb7ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb7ed));
        // 49 0364
        gbc.setState(0xecc4, 0xb17d, 0xba50, 0x7da9, 0xa7b6, 0x1e7d, 0x1, 0x1);
        gbc.writeMem(0xecc4, { 0x49 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb17d, gbc.sp());
        EXPECT(0xecc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xecc4));
        // 49 0365
        gbc.setState(0xe04a, 0x85dc, 0x53d0, 0x931, 0xb485, 0x509d, 0x0, 0x0);
        gbc.writeMem(0xe04a, { 0x49 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x85dc, gbc.sp());
        EXPECT(0xe04b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe04a));
        // 49 0366
        gbc.setState(0x8495, 0xce49, 0x7df0, 0xd4f0, 0xea7e, 0x5e49, 0x0, 0x0);
        gbc.writeMem(0x8495, { 0x49 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xce49, gbc.sp());
        EXPECT(0x8496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8495));
        // 49 0367
        gbc.setState(0x279, 0x3d79, 0x32c0, 0xfeda, 0x396c, 0x5b3d, 0x1, 0x1);
        gbc.writeMem(0x279, { 0x49 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3d79, gbc.sp());
        EXPECT(0x27a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0368
        gbc.setState(0x4a23, 0xca51, 0xb9a0, 0xbaf1, 0x5f5e, 0xe183, 0x1, 0x1);
        gbc.writeMem(0x4a23, { 0x49 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xca51, gbc.sp());
        EXPECT(0x4a24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0369
        gbc.setState(0xebdc, 0x3880, 0xa0d0, 0x7d0c, 0x69e0, 0x69d0, 0x1, 0x1);
        gbc.writeMem(0xebdc, { 0x49 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3880, gbc.sp());
        EXPECT(0xebdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xebdc));
        // 49 036A
        gbc.setState(0x57ab, 0x21fc, 0x9cf0, 0x8c24, 0x915f, 0xb019, 0x1, 0x0);
        gbc.writeMem(0x57ab, { 0x49 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x21fc, gbc.sp());
        EXPECT(0x57ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 036B
        gbc.setState(0x657b, 0x2328, 0xd380, 0x515b, 0xbcf6, 0x2522, 0x1, 0x1);
        gbc.writeMem(0x657b, { 0x49 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2328, gbc.sp());
        EXPECT(0x657c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 036C
        gbc.setState(0xb0b9, 0x1614, 0xa2a0, 0x91c1, 0x8906, 0x6d01, 0x1, 0x0);
        gbc.writeMem(0xb0b9, { 0x49 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1614, gbc.sp());
        EXPECT(0xb0ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb0b9));
        // 49 036D
        gbc.setState(0x9bc3, 0x6f1, 0x3ed0, 0x5bbf, 0xeb23, 0x9830, 0x1, 0x0);
        gbc.writeMem(0x9bc3, { 0x49 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6f1, gbc.sp());
        EXPECT(0x9bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9bc3));
        // 49 036E
        gbc.setState(0x3874, 0xb380, 0xdbf0, 0xec04, 0x8fea, 0xd839, 0x1, 0x1);
        gbc.writeMem(0x3874, { 0x49 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb380, gbc.sp());
        EXPECT(0x3875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 036F
        gbc.setState(0x1e5b, 0x570c, 0x82b0, 0xcbab, 0xd018, 0xe182, 0x1, 0x1);
        gbc.writeMem(0x1e5b, { 0x49 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x570c, gbc.sp());
        EXPECT(0x1e5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0370
        gbc.setState(0x33c2, 0x11e9, 0x1b90, 0xf8a1, 0x50e6, 0x957, 0x0, 0x0);
        gbc.writeMem(0x33c2, { 0x49 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x11e9, gbc.sp());
        EXPECT(0x33c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0371
        gbc.setState(0xea21, 0x7b64, 0x28a0, 0x6e3e, 0x5ed6, 0xcf7, 0x1, 0x0);
        gbc.writeMem(0xea21, { 0x49 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7b64, gbc.sp());
        EXPECT(0xea22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xea21));
        // 49 0372
        gbc.setState(0xc19a, 0x3306, 0xe3e0, 0x3c0e, 0x383c, 0x6a3e, 0x1, 0x0);
        gbc.writeMem(0xc19a, { 0x49 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3306, gbc.sp());
        EXPECT(0xc19b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc19a));
        // 49 0373
        gbc.setState(0xb272, 0x200e, 0x4340, 0x6525, 0xc4e5, 0xf340, 0x0, 0x1);
        gbc.writeMem(0xb272, { 0x49 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x200e, gbc.sp());
        EXPECT(0xb273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb272));
        // 49 0374
        gbc.setState(0x7942, 0x816f, 0x41f0, 0x404, 0xd39d, 0xc30b, 0x1, 0x0);
        gbc.writeMem(0x7942, { 0x49 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x816f, gbc.sp());
        EXPECT(0x7943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0375
        gbc.setState(0x10e3, 0x550c, 0x9360, 0x5bb3, 0x9a2e, 0x8e3d, 0x1, 0x1);
        gbc.writeMem(0x10e3, { 0x49 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x550c, gbc.sp());
        EXPECT(0x10e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0376
        gbc.setState(0x68a8, 0xcb27, 0xc630, 0x49df, 0xbde9, 0xb868, 0x1, 0x0);
        gbc.writeMem(0x68a8, { 0x49 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xcb27, gbc.sp());
        EXPECT(0x68a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0377
        gbc.setState(0x7f3b, 0xeb0d, 0x4e80, 0x6b9d, 0xbda9, 0xcdcb, 0x0, 0x1);
        gbc.writeMem(0x7f3b, { 0x49 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xeb0d, gbc.sp());
        EXPECT(0x7f3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0378
        gbc.setState(0x239a, 0xa1cc, 0xd190, 0x274a, 0xba24, 0xc941, 0x0, 0x1);
        gbc.writeMem(0x239a, { 0x49 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa1cc, gbc.sp());
        EXPECT(0x239b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0379
        gbc.setState(0xca88, 0x9a16, 0xed30, 0x46d1, 0xd1cf, 0x4357, 0x1, 0x1);
        gbc.writeMem(0xca88, { 0x49 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9a16, gbc.sp());
        EXPECT(0xca89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xca88));
        // 49 037A
        gbc.setState(0x46ec, 0x96ce, 0x3aa0, 0x48a1, 0xe16c, 0x6598, 0x1, 0x1);
        gbc.writeMem(0x46ec, { 0x49 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x96ce, gbc.sp());
        EXPECT(0x46ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 037B
        gbc.setState(0x1b2e, 0xf273, 0x3440, 0x243e, 0x25e4, 0x34fa, 0x0, 0x0);
        gbc.writeMem(0x1b2e, { 0x49 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf273, gbc.sp());
        EXPECT(0x1b2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 037C
        gbc.setState(0xf53, 0x8ae8, 0x8200, 0xf633, 0x4d11, 0x2ed1, 0x0, 0x0);
        gbc.writeMem(0xf53, { 0x49 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8ae8, gbc.sp());
        EXPECT(0xf54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 037D
        gbc.setState(0x24d5, 0x59c, 0x2ef0, 0xbce6, 0xdb4e, 0x90dd, 0x1, 0x1);
        gbc.writeMem(0x24d5, { 0x49 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x59c, gbc.sp());
        EXPECT(0x24d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 037E
        gbc.setState(0x5acd, 0x4a2b, 0x6630, 0x9029, 0x2bae, 0xfadf, 0x0, 0x1);
        gbc.writeMem(0x5acd, { 0x49 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4a2b, gbc.sp());
        EXPECT(0x5ace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 037F
        gbc.setState(0x7b2, 0xe40, 0xa810, 0x6862, 0x504, 0x5fe7, 0x1, 0x1);
        gbc.writeMem(0x7b2, { 0x49 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe40, gbc.sp());
        EXPECT(0x7b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0380
        gbc.setState(0x6094, 0x205b, 0x75a0, 0xc3b8, 0x883, 0x8de2, 0x1, 0x0);
        gbc.writeMem(0x6094, { 0x49 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x205b, gbc.sp());
        EXPECT(0x6095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0381
        gbc.setState(0x2f59, 0x12cc, 0xf370, 0xec8a, 0x1e6a, 0xfc52, 0x0, 0x1);
        gbc.writeMem(0x2f59, { 0x49 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x12cc, gbc.sp());
        EXPECT(0x2f5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0382
        gbc.setState(0xe1fa, 0xb839, 0xa300, 0xe74b, 0xe0d1, 0x1ea0, 0x1, 0x0);
        gbc.writeMem(0xe1fa, { 0x49 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb839, gbc.sp());
        EXPECT(0xe1fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe1fa));
        // 49 0383
        gbc.setState(0xa771, 0xa484, 0x9d80, 0x8a1c, 0xe06f, 0x48f0, 0x0, 0x1);
        gbc.writeMem(0xa771, { 0x49 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa484, gbc.sp());
        EXPECT(0xa772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa771));
        // 49 0384
        gbc.setState(0xc23f, 0x3d9f, 0xc9d0, 0x3b44, 0xbd0b, 0x93a2, 0x1, 0x1);
        gbc.writeMem(0xc23f, { 0x49 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3d9f, gbc.sp());
        EXPECT(0xc240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc23f));
        // 49 0385
        gbc.setState(0x5817, 0x3c23, 0x63f0, 0x141c, 0x74f4, 0x957f, 0x0, 0x1);
        gbc.writeMem(0x5817, { 0x49 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3c23, gbc.sp());
        EXPECT(0x5818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0386
        gbc.setState(0xa9f8, 0x12ce, 0x790, 0xb2c3, 0x8685, 0xec6f, 0x1, 0x0);
        gbc.writeMem(0xa9f8, { 0x49 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x12ce, gbc.sp());
        EXPECT(0xa9f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa9f8));
        // 49 0387
        gbc.setState(0x3248, 0x8f72, 0x3870, 0xc430, 0x26bc, 0xc1a9, 0x1, 0x1);
        gbc.writeMem(0x3248, { 0x49 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8f72, gbc.sp());
        EXPECT(0x3249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0388
        gbc.setState(0x2b, 0x53cd, 0xb430, 0xdca3, 0x20d0, 0x5170, 0x0, 0x1);
        gbc.writeMem(0x2b, { 0x49 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x53cd, gbc.sp());
        EXPECT(0x2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0389
        gbc.setState(0xd4ba, 0x58e0, 0xec0, 0xf470, 0xa4d0, 0xb142, 0x1, 0x1);
        gbc.writeMem(0xd4ba, { 0x49 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x58e0, gbc.sp());
        EXPECT(0xd4bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd4ba));
        // 49 038A
        gbc.setState(0xdc3a, 0x8a91, 0x3380, 0x9ff3, 0x285e, 0x6d5e, 0x1, 0x0);
        gbc.writeMem(0xdc3a, { 0x49 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8a91, gbc.sp());
        EXPECT(0xdc3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xdc3a));
        // 49 038B
        gbc.setState(0xd30f, 0x9c05, 0xca70, 0x8042, 0xacca, 0x553d, 0x0, 0x0);
        gbc.writeMem(0xd30f, { 0x49 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9c05, gbc.sp());
        EXPECT(0xd310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd30f));
        // 49 038C
        gbc.setState(0x4766, 0xb95, 0xc1e0, 0xab5, 0xe48, 0x47a2, 0x0, 0x1);
        gbc.writeMem(0x4766, { 0x49 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb95, gbc.sp());
        EXPECT(0x4767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 038D
        gbc.setState(0x7e3f, 0x89ac, 0x74c0, 0x7c15, 0xae30, 0x3d99, 0x1, 0x1);
        gbc.writeMem(0x7e3f, { 0x49 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x89ac, gbc.sp());
        EXPECT(0x7e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 038E
        gbc.setState(0x7de8, 0x817e, 0x1a20, 0x9f34, 0x3887, 0x37e1, 0x0, 0x0);
        gbc.writeMem(0x7de8, { 0x49 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x817e, gbc.sp());
        EXPECT(0x7de9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 038F
        gbc.setState(0x147, 0xb7c4, 0x51b0, 0x6ddb, 0x73b0, 0x889, 0x0, 0x0);
        gbc.writeMem(0x147, { 0x49 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb7c4, gbc.sp());
        EXPECT(0x148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0390
        gbc.setState(0xe819, 0x4422, 0xa880, 0xcdf1, 0xa534, 0x6cad, 0x1, 0x1);
        gbc.writeMem(0xe819, { 0x49 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4422, gbc.sp());
        EXPECT(0xe81a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe819));
        // 49 0391
        gbc.setState(0x778f, 0xc6b0, 0xcc10, 0x2839, 0x7f85, 0xe6e3, 0x0, 0x1);
        gbc.writeMem(0x778f, { 0x49 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc6b0, gbc.sp());
        EXPECT(0x7790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0392
        gbc.setState(0x25bd, 0xd27c, 0xdf50, 0x451d, 0xf2a0, 0x987, 0x1, 0x0);
        gbc.writeMem(0x25bd, { 0x49 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd27c, gbc.sp());
        EXPECT(0x25be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0393
        gbc.setState(0xb47b, 0x95ca, 0x5af0, 0xbce4, 0xfa51, 0x9d5, 0x1, 0x1);
        gbc.writeMem(0xb47b, { 0x49 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x95ca, gbc.sp());
        EXPECT(0xb47c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb47b));
        // 49 0394
        gbc.setState(0x624c, 0x762d, 0x13f0, 0xfa7, 0x9c2c, 0xdc46, 0x1, 0x0);
        gbc.writeMem(0x624c, { 0x49 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x762d, gbc.sp());
        EXPECT(0x624d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 0395
        gbc.setState(0xa4e9, 0x7b68, 0x4480, 0x8013, 0x6db4, 0xb07f, 0x0, 0x1);
        gbc.writeMem(0xa4e9, { 0x49 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7b68, gbc.sp());
        EXPECT(0xa4ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa4e9));
        // 49 0396
        gbc.setState(0xcd26, 0x8efd, 0xa740, 0x6d9b, 0x8690, 0x8d6c, 0x0, 0x1);
        gbc.writeMem(0xcd26, { 0x49 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8efd, gbc.sp());
        EXPECT(0xcd27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xcd26));
        // 49 0397
        gbc.setState(0xbff, 0xe604, 0xe980, 0x1508, 0xf43a, 0xc658, 0x0, 0x0);
        gbc.writeMem(0xbff, { 0x49 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe604, gbc.sp());
        EXPECT(0xc00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 0398
        gbc.setState(0xcadc, 0x256f, 0xf440, 0x4286, 0xc9a3, 0xe0e0, 0x1, 0x1);
        gbc.writeMem(0xcadc, { 0x49 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x256f, gbc.sp());
        EXPECT(0xcadd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xcadc));
        // 49 0399
        gbc.setState(0xe7b5, 0xbdb0, 0x2d30, 0x7c41, 0xd591, 0x41de, 0x1, 0x0);
        gbc.writeMem(0xe7b5, { 0x49 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xbdb0, gbc.sp());
        EXPECT(0xe7b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe7b5));
        // 49 039A
        gbc.setState(0x5a56, 0xb0a8, 0xe1e0, 0xb71a, 0x10ba, 0x3cdc, 0x0, 0x0);
        gbc.writeMem(0x5a56, { 0x49 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb0a8, gbc.sp());
        EXPECT(0x5a57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 039B
        gbc.setState(0x2834, 0xfc43, 0x61e0, 0x9012, 0x60ae, 0xc75c, 0x0, 0x1);
        gbc.writeMem(0x2834, { 0x49 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfc43, gbc.sp());
        EXPECT(0x2835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 039C
        gbc.setState(0x6320, 0xd4be, 0x9e50, 0xe60c, 0xf830, 0x349e, 0x0, 0x0);
        gbc.writeMem(0x6320, { 0x49 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd4be, gbc.sp());
        EXPECT(0x6321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 039D
        gbc.setState(0x54c7, 0x377e, 0x26a0, 0x4307, 0x78c0, 0x8bef, 0x0, 0x1);
        gbc.writeMem(0x54c7, { 0x49 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x377e, gbc.sp());
        EXPECT(0x54c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 039E
        gbc.setState(0xe324, 0x3f78, 0x9460, 0xec15, 0xc343, 0xa81d, 0x0, 0x0);
        gbc.writeMem(0xe324, { 0x49 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3f78, gbc.sp());
        EXPECT(0xe325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe324));
        // 49 039F
        gbc.setState(0x5cc2, 0xc4b4, 0x9820, 0xfe26, 0x578b, 0xfbc1, 0x1, 0x0);
        gbc.writeMem(0x5cc2, { 0x49 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc4b4, gbc.sp());
        EXPECT(0x5cc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 03A0
        gbc.setState(0x27e4, 0xa632, 0x2200, 0x2e89, 0x765c, 0x8831, 0x0, 0x0);
        gbc.writeMem(0x27e4, { 0x49 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa632, gbc.sp());
        EXPECT(0x27e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 03A1
        gbc.setState(0xfd1, 0xe4a7, 0x8a70, 0x323a, 0x844e, 0xecfe, 0x0, 0x0);
        gbc.writeMem(0xfd1, { 0x49 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe4a7, gbc.sp());
        EXPECT(0xfd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 03A2
        gbc.setState(0xa3dc, 0xa171, 0xe1e0, 0x5427, 0xfabb, 0x4e0b, 0x0, 0x1);
        gbc.writeMem(0xa3dc, { 0x49 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa171, gbc.sp());
        EXPECT(0xa3dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa3dc));
        // 49 03A3
        gbc.setState(0x352, 0xc521, 0x6a10, 0xfe4, 0xad05, 0x361, 0x1, 0x1);
        gbc.writeMem(0x352, { 0x49 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc521, gbc.sp());
        EXPECT(0x353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 03A4
        gbc.setState(0x49d9, 0xcec3, 0xedf0, 0x1a9d, 0xa1c6, 0xe16b, 0x0, 0x0);
        gbc.writeMem(0x49d9, { 0x49 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xcec3, gbc.sp());
        EXPECT(0x49da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 03A5
        gbc.setState(0x6be, 0xd74d, 0xfda0, 0xca0f, 0x9e28, 0x1b7b, 0x1, 0x1);
        gbc.writeMem(0x6be, { 0x49 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd74d, gbc.sp());
        EXPECT(0x6bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 03A6
        gbc.setState(0x17df, 0x2782, 0xe980, 0x3ccf, 0x2084, 0x4c14, 0x0, 0x1);
        gbc.writeMem(0x17df, { 0x49 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2782, gbc.sp());
        EXPECT(0x17e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 03A7
        gbc.setState(0x1144, 0x812f, 0xf720, 0x8d65, 0x2717, 0x327, 0x0, 0x0);
        gbc.writeMem(0x1144, { 0x49 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x812f, gbc.sp());
        EXPECT(0x1145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 03A8
        gbc.setState(0x4f39, 0xfd2b, 0x9760, 0x1b3a, 0x3e7b, 0x36d5, 0x1, 0x1);
        gbc.writeMem(0x4f39, { 0x49 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfd2b, gbc.sp());
        EXPECT(0x4f3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 03A9
        gbc.setState(0xa433, 0xcab, 0x3370, 0x49b6, 0xc1ef, 0x5184, 0x1, 0x0);
        gbc.writeMem(0xa433, { 0x49 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcab, gbc.sp());
        EXPECT(0xa434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa433));
        // 49 03AA
        gbc.setState(0xd154, 0x2ec4, 0xf640, 0x9a7c, 0xadab, 0xda53, 0x0, 0x1);
        gbc.writeMem(0xd154, { 0x49 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2ec4, gbc.sp());
        EXPECT(0xd155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd154));
        // 49 03AB
        gbc.setState(0x5ff1, 0xf9c2, 0x110, 0x50a8, 0xde6d, 0xc80d, 0x1, 0x0);
        gbc.writeMem(0x5ff1, { 0x49 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf9c2, gbc.sp());
        EXPECT(0x5ff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 03AC
        gbc.setState(0xba84, 0xb24b, 0x48f0, 0x1b56, 0x2a7a, 0xf10c, 0x1, 0x1);
        gbc.writeMem(0xba84, { 0x49 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb24b, gbc.sp());
        EXPECT(0xba85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xba84));
        // 49 03AD
        gbc.setState(0xc00c, 0xf475, 0xc4b0, 0x918, 0x9194, 0x6cb8, 0x1, 0x1);
        gbc.writeMem(0xc00c, { 0x49 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf475, gbc.sp());
        EXPECT(0xc00d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc00c));
        // 49 03AE
        gbc.setState(0xb8ea, 0xaa81, 0xbfe0, 0xa8da, 0x1099, 0xc283, 0x0, 0x1);
        gbc.writeMem(0xb8ea, { 0x49 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xaa81, gbc.sp());
        EXPECT(0xb8eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb8ea));
        // 49 03AF
        gbc.setState(0xec6, 0xebe8, 0xc340, 0x3065, 0xd2, 0x4a7b, 0x0, 0x1);
        gbc.writeMem(0xec6, { 0x49 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xebe8, gbc.sp());
        EXPECT(0xec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 03B0
        gbc.setState(0xc2ed, 0x7e60, 0x31c0, 0xb78c, 0x67e7, 0xf708, 0x1, 0x0);
        gbc.writeMem(0xc2ed, { 0x49 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7e60, gbc.sp());
        EXPECT(0xc2ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc2ed));
        // 49 03B1
        gbc.setState(0x5b20, 0xd50c, 0x36f0, 0x1086, 0xc9c1, 0xd313, 0x0, 0x1);
        gbc.writeMem(0x5b20, { 0x49 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd50c, gbc.sp());
        EXPECT(0x5b21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 03B2
        gbc.setState(0xabdb, 0x65e1, 0xaf70, 0x6db9, 0xbd38, 0xdf37, 0x1, 0x0);
        gbc.writeMem(0xabdb, { 0x49 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x65e1, gbc.sp());
        EXPECT(0xabdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xabdb));
        // 49 03B3
        gbc.setState(0xf38, 0xbc11, 0xe720, 0x4893, 0x3c45, 0x8d58, 0x1, 0x0);
        gbc.writeMem(0xf38, { 0x49 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbc11, gbc.sp());
        EXPECT(0xf39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 03B4
        gbc.setState(0x473f, 0xc044, 0x83c0, 0xc6f0, 0xbfc0, 0x86c1, 0x1, 0x0);
        gbc.writeMem(0x473f, { 0x49 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc044, gbc.sp());
        EXPECT(0x4740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 03B5
        gbc.setState(0x9784, 0x40a4, 0x2f40, 0xc62e, 0x39f5, 0x53f9, 0x0, 0x1);
        gbc.writeMem(0x9784, { 0x49 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x40a4, gbc.sp());
        EXPECT(0x9785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9784));
        // 49 03B6
        gbc.setState(0xe059, 0xdc60, 0x1f60, 0x2544, 0x9be2, 0x8a22, 0x1, 0x1);
        gbc.writeMem(0xe059, { 0x49 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xdc60, gbc.sp());
        EXPECT(0xe05a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe059));
        // 49 03B7
        gbc.setState(0x82e1, 0x3765, 0xd950, 0xadae, 0x1510, 0x6dd5, 0x1, 0x1);
        gbc.writeMem(0x82e1, { 0x49 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3765, gbc.sp());
        EXPECT(0x82e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x82e1));
        // 49 03B8
        gbc.setState(0xe727, 0xbaf2, 0x6710, 0x25f, 0xb3c3, 0xe01f, 0x0, 0x0);
        gbc.writeMem(0xe727, { 0x49 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbaf2, gbc.sp());
        EXPECT(0xe728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xe727));
        // 49 03B9
        gbc.setState(0xeb76, 0x5e95, 0xea40, 0x1b88, 0x39a5, 0x269f, 0x0, 0x0);
        gbc.writeMem(0xeb76, { 0x49 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5e95, gbc.sp());
        EXPECT(0xeb77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xeb76));
        // 49 03BA
        gbc.setState(0x608, 0xea04, 0x34c0, 0x4235, 0xe26f, 0x97f7, 0x1, 0x0);
        gbc.writeMem(0x608, { 0x49 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xea04, gbc.sp());
        EXPECT(0x609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 03BC
        gbc.setState(0x4cca, 0x2299, 0xccc0, 0x137f, 0x2963, 0xd347, 0x1, 0x0);
        gbc.writeMem(0x4cca, { 0x49 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2299, gbc.sp());
        EXPECT(0x4ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 03BD
        gbc.setState(0x1e77, 0xd22c, 0x9410, 0x17de, 0xc9f0, 0x8705, 0x1, 0x0);
        gbc.writeMem(0x1e77, { 0x49 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd22c, gbc.sp());
        EXPECT(0x1e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 03BE
        gbc.setState(0x90b3, 0x140b, 0x7e70, 0xb100, 0x50f6, 0x180a, 0x1, 0x1);
        gbc.writeMem(0x90b3, { 0x49 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x140b, gbc.sp());
        EXPECT(0x90b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x90b3));
        // 49 03BF
        gbc.setState(0xc029, 0x27f0, 0xe910, 0x2ff4, 0xddeb, 0xb3f8, 0x0, 0x0);
        gbc.writeMem(0xc029, { 0x49 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x27f0, gbc.sp());
        EXPECT(0xc02a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc029));
        // 49 03C0
        gbc.setState(0x7c15, 0xa482, 0xae90, 0xa25f, 0xadd4, 0xdfbc, 0x1, 0x1);
        gbc.writeMem(0x7c15, { 0x49 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa482, gbc.sp());
        EXPECT(0x7c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 03C1
        gbc.setState(0x6fed, 0x4a17, 0xdb30, 0xe288, 0xa9d3, 0x2d6e, 0x0, 0x1);
        gbc.writeMem(0x6fed, { 0x49 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4a17, gbc.sp());
        EXPECT(0x6fee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 03C2
        gbc.setState(0x733c, 0xf2b2, 0x8be0, 0x27fe, 0x8355, 0x1246, 0x0, 0x0);
        gbc.writeMem(0x733c, { 0x49 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf2b2, gbc.sp());
        EXPECT(0x733d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 03C3
        gbc.setState(0x97d9, 0xe475, 0x5ef0, 0xad33, 0x8b6c, 0xe783, 0x1, 0x0);
        gbc.writeMem(0x97d9, { 0x49 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe475, gbc.sp());
        EXPECT(0x97da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x97d9));
        // 49 03C4
        gbc.setState(0x16e, 0x1aac, 0xabe0, 0x6850, 0x933, 0x7b6e, 0x0, 0x1);
        gbc.writeMem(0x16e, { 0x49 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1aac, gbc.sp());
        EXPECT(0x16f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 03C5
        gbc.setState(0xd359, 0xea21, 0xb490, 0x93ed, 0xbf6b, 0xb0ff, 0x0, 0x1);
        gbc.writeMem(0xd359, { 0x49 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xea21, gbc.sp());
        EXPECT(0xd35a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd359));
        // 49 03C6
        gbc.setState(0x59cd, 0x64ae, 0x9600, 0xaa5f, 0x6941, 0xbefe, 0x0, 0x1);
        gbc.writeMem(0x59cd, { 0x49 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x64ae, gbc.sp());
        EXPECT(0x59ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 03C7
        gbc.setState(0x69bd, 0xae25, 0x12b0, 0x5b92, 0x852e, 0xb6a5, 0x0, 0x0);
        gbc.writeMem(0x69bd, { 0x49 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xae25, gbc.sp());
        EXPECT(0x69be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 03C8
        gbc.setState(0xcbff, 0x8f54, 0x1a40, 0x6e09, 0x4a84, 0xd999, 0x0, 0x0);
        gbc.writeMem(0xcbff, { 0x49 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8f54, gbc.sp());
        EXPECT(0xcc00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xcbff));
        // 49 03C9
        gbc.setState(0x31c6, 0x2fe8, 0x40e0, 0xec8, 0x90b9, 0x5c09, 0x0, 0x0);
        gbc.writeMem(0x31c6, { 0x49 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2fe8, gbc.sp());
        EXPECT(0x31c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 03CA
        gbc.setState(0x584f, 0x12c0, 0x9490, 0x2e32, 0xfe5c, 0x2d28, 0x1, 0x0);
        gbc.writeMem(0x584f, { 0x49 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x12c0, gbc.sp());
        EXPECT(0x5850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 03CB
        gbc.setState(0xb418, 0xaa8, 0xf8c0, 0x9b1f, 0x217c, 0xee07, 0x0, 0x0);
        gbc.writeMem(0xb418, { 0x49 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xaa8, gbc.sp());
        EXPECT(0xb419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb418));
        // 49 03CC
        gbc.setState(0x1a2d, 0x5657, 0x5f80, 0xa45d, 0x1ff7, 0xf121, 0x1, 0x1);
        gbc.writeMem(0x1a2d, { 0x49 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5657, gbc.sp());
        EXPECT(0x1a2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 03CD
        gbc.setState(0x331a, 0xeddd, 0x1a50, 0x4842, 0x40bc, 0x9f43, 0x0, 0x0);
        gbc.writeMem(0x331a, { 0x49 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xeddd, gbc.sp());
        EXPECT(0x331b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 03CE
        gbc.setState(0xc110, 0xa20c, 0x3300, 0x204b, 0xf42e, 0xd5df, 0x0, 0x0);
        gbc.writeMem(0xc110, { 0x49 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa20c, gbc.sp());
        EXPECT(0xc111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc110));
        // 49 03CF
        gbc.setState(0x9ef, 0xeb1b, 0xa600, 0x2fc2, 0x8c59, 0xc745, 0x0, 0x0);
        gbc.writeMem(0x9ef, { 0x49 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xeb1b, gbc.sp());
        EXPECT(0x9f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 03D0
        gbc.setState(0x3ce1, 0x4204, 0x4010, 0x37b3, 0x47dc, 0xed19, 0x0, 0x0);
        gbc.writeMem(0x3ce1, { 0x49 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4204, gbc.sp());
        EXPECT(0x3ce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 03D1
        gbc.setState(0x9beb, 0xaa68, 0x9010, 0x4630, 0x635d, 0xfa5f, 0x0, 0x0);
        gbc.writeMem(0x9beb, { 0x49 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xaa68, gbc.sp());
        EXPECT(0x9bec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9beb));
        // 49 03D2
        gbc.setState(0xd241, 0xc91d, 0xbf70, 0xe8ed, 0xb04a, 0x1ddf, 0x0, 0x0);
        gbc.writeMem(0xd241, { 0x49 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc91d, gbc.sp());
        EXPECT(0xd242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xd241));
        // 49 03D3
        gbc.setState(0xadda, 0x1e7f, 0xb2f0, 0x37ac, 0x7066, 0x412f, 0x0, 0x1);
        gbc.writeMem(0xadda, { 0x49 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1e7f, gbc.sp());
        EXPECT(0xaddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xadda));
        // 49 03D4
        gbc.setState(0x6174, 0xd4da, 0x25c0, 0x82a0, 0x4af2, 0x173d, 0x0, 0x0);
        gbc.writeMem(0x6174, { 0x49 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd4da, gbc.sp());
        EXPECT(0x6175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 03D5
        gbc.setState(0x38f5, 0x771a, 0xbc10, 0x146e, 0xfdf6, 0x9fc1, 0x0, 0x0);
        gbc.writeMem(0x38f5, { 0x49 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x771a, gbc.sp());
        EXPECT(0x38f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 03D6
        gbc.setState(0x68f1, 0x8e3, 0xf6e0, 0x4343, 0xa9fb, 0xe991, 0x1, 0x0);
        gbc.writeMem(0x68f1, { 0x49 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8e3, gbc.sp());
        EXPECT(0x68f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 03D7
        gbc.setState(0x3517, 0x87c8, 0x8b70, 0x7df4, 0xc6fa, 0xcff7, 0x1, 0x1);
        gbc.writeMem(0x3517, { 0x49 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x87c8, gbc.sp());
        EXPECT(0x3518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 03D8
        gbc.setState(0x3cbf, 0xdb78, 0x3850, 0xa1ff, 0xa417, 0xd88e, 0x1, 0x0);
        gbc.writeMem(0x3cbf, { 0x49 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdb78, gbc.sp());
        EXPECT(0x3cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 03D9
        gbc.setState(0xca43, 0xd622, 0x7b50, 0xd350, 0x87e4, 0xc51, 0x1, 0x0);
        gbc.writeMem(0xca43, { 0x49 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd622, gbc.sp());
        EXPECT(0xca44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xca43));
        // 49 03DA
        gbc.setState(0x4a8f, 0x44d1, 0x9e30, 0x8a00, 0x2879, 0xb9ea, 0x0, 0x0);
        gbc.writeMem(0x4a8f, { 0x49 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x44d1, gbc.sp());
        EXPECT(0x4a90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 03DB
        gbc.setState(0x982b, 0xe0d6, 0x850, 0x227a, 0x8019, 0x4c58, 0x1, 0x0);
        gbc.writeMem(0x982b, { 0x49 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe0d6, gbc.sp());
        EXPECT(0x982c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x982b));
        // 49 03DC
        gbc.setState(0x1db2, 0x9908, 0x6fc0, 0xb965, 0xff3b, 0x29e4, 0x1, 0x1);
        gbc.writeMem(0x1db2, { 0x49 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9908, gbc.sp());
        EXPECT(0x1db3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 03DD
        gbc.setState(0x963c, 0xcec7, 0x2110, 0x8a9a, 0xaa54, 0x2732, 0x0, 0x0);
        gbc.writeMem(0x963c, { 0x49 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xcec7, gbc.sp());
        EXPECT(0x963d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x963c));
        // 49 03DE
        gbc.setState(0x52a, 0x760c, 0xe660, 0x529, 0xa187, 0xfae7, 0x0, 0x1);
        gbc.writeMem(0x52a, { 0x49 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x760c, gbc.sp());
        EXPECT(0x52b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 03DF
        gbc.setState(0xb0ca, 0xdf0b, 0x9280, 0xda6e, 0x8bb8, 0x94db, 0x1, 0x1);
        gbc.writeMem(0xb0ca, { 0x49 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xdf0b, gbc.sp());
        EXPECT(0xb0cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb0ca));
        // 49 03E0
        gbc.setState(0x9c68, 0x970a, 0x2430, 0xa738, 0xc886, 0x7bd3, 0x1, 0x1);
        gbc.writeMem(0x9c68, { 0x49 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x970a, gbc.sp());
        EXPECT(0x9c69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9c68));
        // 49 03E2
        gbc.setState(0x6d6a, 0x7727, 0x2d60, 0x9ebb, 0xf53a, 0xbb3b, 0x0, 0x0);
        gbc.writeMem(0x6d6a, { 0x49 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7727, gbc.sp());
        EXPECT(0x6d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 49 03E3
        gbc.setState(0xefbd, 0xe198, 0x5280, 0xbd66, 0xd1fa, 0x42b4, 0x1, 0x1);
        gbc.writeMem(0xefbd, { 0x49 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe198, gbc.sp());
        EXPECT(0xefbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xefbd));
        // 49 03E4
        gbc.setState(0x3917, 0x6e55, 0x5550, 0x823a, 0x71b2, 0x982f, 0x1, 0x1);
        gbc.writeMem(0x3917, { 0x49 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6e55, gbc.sp());
        EXPECT(0x3918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 03E5
        gbc.setState(0x3513, 0x5aca, 0xe150, 0x8c88, 0xc702, 0xbc76, 0x1, 0x0);
        gbc.writeMem(0x3513, { 0x49 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5aca, gbc.sp());
        EXPECT(0x3514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 49 03E6
        gbc.setState(0x5595, 0x13f9, 0x79f0, 0x3b6, 0x1c99, 0x9b8c, 0x0, 0x0);
        gbc.writeMem(0x5595, { 0x49 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x13f9, gbc.sp());
        EXPECT(0x5596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
