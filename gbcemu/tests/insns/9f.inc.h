    TEST(gbcemu, opcode_9f) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 9F 0000
        gbc.setState(0xde49, 0x95d7, 0x8c0, 0x6126, 0x349e, 0x3959, 0x0, 0x0);
        gbc.writeMem(0xde49, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x95d7, gbc.sp());
        EXPECT(0xde4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xde49));
        // 9F 0001
        gbc.setState(0x9ce, 0x5263, 0x2f50, 0x3551, 0xadff, 0xb4d2, 0x0, 0x1);
        gbc.writeMem(0x9ce, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5263, gbc.sp());
        EXPECT(0x9cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0002
        gbc.setState(0x251d, 0x8571, 0xede0, 0x9203, 0xd2c6, 0xf57b, 0x1, 0x1);
        gbc.writeMem(0x251d, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8571, gbc.sp());
        EXPECT(0x251e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0003
        gbc.setState(0xe8b0, 0xb09b, 0xb8a0, 0x7045, 0xdca1, 0x5dcb, 0x0, 0x1);
        gbc.writeMem(0xe8b0, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb09b, gbc.sp());
        EXPECT(0xe8b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe8b0));
        // 9F 0004
        gbc.setState(0x7384, 0xac6c, 0x9f00, 0x4ecc, 0x102a, 0xcb82, 0x0, 0x1);
        gbc.writeMem(0x7384, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xac6c, gbc.sp());
        EXPECT(0x7385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0005
        gbc.setState(0xc5ed, 0x3e22, 0x5640, 0x3b13, 0xf335, 0x1353, 0x0, 0x0);
        gbc.writeMem(0xc5ed, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3e22, gbc.sp());
        EXPECT(0xc5ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc5ed));
        // 9F 0006
        gbc.setState(0x4dfc, 0x64ac, 0xaab0, 0xb647, 0x89c5, 0x939e, 0x1, 0x1);
        gbc.writeMem(0x4dfc, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x64ac, gbc.sp());
        EXPECT(0x4dfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0007
        gbc.setState(0x259d, 0x9bff, 0xabd0, 0x627e, 0xaa68, 0xb6f1, 0x0, 0x1);
        gbc.writeMem(0x259d, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9bff, gbc.sp());
        EXPECT(0x259e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0008
        gbc.setState(0xc30f, 0x9ddb, 0xf850, 0x1982, 0x6e97, 0xf365, 0x0, 0x0);
        gbc.writeMem(0xc30f, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9ddb, gbc.sp());
        EXPECT(0xc310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc30f));
        // 9F 0009
        gbc.setState(0xd3b5, 0xedcd, 0xbb90, 0x36b, 0xd08d, 0xd400, 0x1, 0x1);
        gbc.writeMem(0xd3b5, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xedcd, gbc.sp());
        EXPECT(0xd3b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd3b5));
        // 9F 000A
        gbc.setState(0x1ca1, 0x91db, 0x81f0, 0xc744, 0x4366, 0x8a74, 0x1, 0x1);
        gbc.writeMem(0x1ca1, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x91db, gbc.sp());
        EXPECT(0x1ca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 000B
        gbc.setState(0x91e0, 0xed38, 0x1780, 0x8c42, 0xf7c, 0x7ed, 0x0, 0x0);
        gbc.writeMem(0x91e0, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xed38, gbc.sp());
        EXPECT(0x91e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x91e0));
        // 9F 000C
        gbc.setState(0x5f10, 0xd17a, 0x2c40, 0x54a2, 0xc654, 0x7e8f, 0x1, 0x1);
        gbc.writeMem(0x5f10, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd17a, gbc.sp());
        EXPECT(0x5f11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 000D
        gbc.setState(0x6586, 0xcde0, 0xe010, 0x21d7, 0x2c08, 0x8c9a, 0x0, 0x0);
        gbc.writeMem(0x6586, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xcde0, gbc.sp());
        EXPECT(0x6587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 000E
        gbc.setState(0x60f9, 0xcadc, 0x5600, 0xccf0, 0x8b2d, 0x416a, 0x1, 0x1);
        gbc.writeMem(0x60f9, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xcadc, gbc.sp());
        EXPECT(0x60fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 000F
        gbc.setState(0xaafb, 0x909d, 0x15f0, 0xb87c, 0x8f63, 0x47de, 0x0, 0x1);
        gbc.writeMem(0xaafb, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x909d, gbc.sp());
        EXPECT(0xaafc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xaafb));
        // 9F 0011
        gbc.setState(0x9f6e, 0x382d, 0x5440, 0x74b0, 0x414e, 0x63ca, 0x0, 0x0);
        gbc.writeMem(0x9f6e, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x382d, gbc.sp());
        EXPECT(0x9f6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9f6e));
        // 9F 0012
        gbc.setState(0x6da9, 0x60a1, 0x62e0, 0xb4d4, 0xbae, 0x4b4e, 0x0, 0x0);
        gbc.writeMem(0x6da9, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x60a1, gbc.sp());
        EXPECT(0x6daa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0014
        gbc.setState(0xe6cc, 0xf215, 0x8a80, 0x2713, 0xa396, 0x1a18, 0x1, 0x1);
        gbc.writeMem(0xe6cc, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf215, gbc.sp());
        EXPECT(0xe6cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe6cc));
        // 9F 0015
        gbc.setState(0xad79, 0x237c, 0x4b0, 0x14c1, 0x9ca0, 0xbe47, 0x1, 0x1);
        gbc.writeMem(0xad79, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x237c, gbc.sp());
        EXPECT(0xad7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xad79));
        // 9F 0016
        gbc.setState(0xdb47, 0x4245, 0x98e0, 0xd6d8, 0xac27, 0xf76c, 0x1, 0x0);
        gbc.writeMem(0xdb47, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4245, gbc.sp());
        EXPECT(0xdb48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xdb47));
        // 9F 0017
        gbc.setState(0x2e7, 0xe23b, 0xa1e0, 0xf269, 0x6c5d, 0xf419, 0x0, 0x1);
        gbc.writeMem(0x2e7, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe23b, gbc.sp());
        EXPECT(0x2e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0018
        gbc.setState(0xa84c, 0xf341, 0x29e0, 0xf5ba, 0x3bb2, 0x8885, 0x0, 0x0);
        gbc.writeMem(0xa84c, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf341, gbc.sp());
        EXPECT(0xa84d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa84c));
        // 9F 0019
        gbc.setState(0x6db6, 0x18d3, 0x2700, 0x767a, 0x1ddb, 0xcf8e, 0x0, 0x1);
        gbc.writeMem(0x6db6, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x18d3, gbc.sp());
        EXPECT(0x6db7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 001A
        gbc.setState(0x2964, 0xdde5, 0x5170, 0xfcd2, 0x39fa, 0xc6af, 0x0, 0x0);
        gbc.writeMem(0x2964, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xdde5, gbc.sp());
        EXPECT(0x2965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 001B
        gbc.setState(0x61a, 0x6827, 0x6110, 0xd3c9, 0xb75c, 0x492c, 0x0, 0x0);
        gbc.writeMem(0x61a, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6827, gbc.sp());
        EXPECT(0x61b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 001C
        gbc.setState(0x70b5, 0xd55b, 0x1750, 0xbcd0, 0x8a78, 0xcec3, 0x1, 0x0);
        gbc.writeMem(0x70b5, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd55b, gbc.sp());
        EXPECT(0x70b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 001D
        gbc.setState(0x644f, 0x9ba3, 0xf00, 0xfd33, 0xac13, 0xdcbd, 0x1, 0x1);
        gbc.writeMem(0x644f, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9ba3, gbc.sp());
        EXPECT(0x6450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 001E
        gbc.setState(0x2c10, 0x110c, 0x2190, 0x31f, 0x81f2, 0xc46e, 0x1, 0x0);
        gbc.writeMem(0x2c10, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x110c, gbc.sp());
        EXPECT(0x2c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 001F
        gbc.setState(0x3f04, 0x6ed, 0xae40, 0xcfb0, 0xd05e, 0xa69c, 0x1, 0x1);
        gbc.writeMem(0x3f04, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6ed, gbc.sp());
        EXPECT(0x3f05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0020
        gbc.setState(0xd495, 0x38c6, 0x680, 0x7e64, 0x816, 0xf3b7, 0x1, 0x1);
        gbc.writeMem(0xd495, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x38c6, gbc.sp());
        EXPECT(0xd496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd495));
        // 9F 0021
        gbc.setState(0xa0c0, 0x4832, 0xd1a0, 0x93ca, 0x7bfd, 0xef07, 0x1, 0x0);
        gbc.writeMem(0xa0c0, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4832, gbc.sp());
        EXPECT(0xa0c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa0c0));
        // 9F 0022
        gbc.setState(0x634a, 0x3661, 0x9190, 0xac07, 0x3d43, 0xac53, 0x1, 0x0);
        gbc.writeMem(0x634a, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3661, gbc.sp());
        EXPECT(0x634b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0023
        gbc.setState(0x2981, 0x810c, 0x4210, 0xc921, 0x5ac6, 0xaf2d, 0x0, 0x1);
        gbc.writeMem(0x2981, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x810c, gbc.sp());
        EXPECT(0x2982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0024
        gbc.setState(0x52aa, 0xb7a4, 0xa6e0, 0xdf6c, 0x807b, 0xfb42, 0x0, 0x1);
        gbc.writeMem(0x52aa, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb7a4, gbc.sp());
        EXPECT(0x52ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0025
        gbc.setState(0x6f9e, 0xa243, 0x7040, 0xf36f, 0xd9ff, 0x6e60, 0x0, 0x0);
        gbc.writeMem(0x6f9e, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa243, gbc.sp());
        EXPECT(0x6f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0026
        gbc.setState(0x6e69, 0xd322, 0xf910, 0x304b, 0x2670, 0x7611, 0x0, 0x1);
        gbc.writeMem(0x6e69, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd322, gbc.sp());
        EXPECT(0x6e6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0027
        gbc.setState(0x2735, 0x3708, 0xec10, 0x8b68, 0x4a18, 0x9274, 0x1, 0x0);
        gbc.writeMem(0x2735, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3708, gbc.sp());
        EXPECT(0x2736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0028
        gbc.setState(0x6cdd, 0x3d41, 0x8a10, 0x3ee0, 0x6c91, 0x5e07, 0x1, 0x1);
        gbc.writeMem(0x6cdd, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3d41, gbc.sp());
        EXPECT(0x6cde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0029
        gbc.setState(0x2dc2, 0x2d1f, 0x6340, 0x5cbb, 0xf9d1, 0xa1dd, 0x0, 0x1);
        gbc.writeMem(0x2dc2, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2d1f, gbc.sp());
        EXPECT(0x2dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 002A
        gbc.setState(0x9fc6, 0x3357, 0xe910, 0x2bad, 0x2739, 0xc70a, 0x0, 0x1);
        gbc.writeMem(0x9fc6, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3357, gbc.sp());
        EXPECT(0x9fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9fc6));
        // 9F 002B
        gbc.setState(0x669d, 0x71fa, 0x4100, 0xb3d7, 0x9520, 0xd40c, 0x1, 0x0);
        gbc.writeMem(0x669d, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x71fa, gbc.sp());
        EXPECT(0x669e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 002C
        gbc.setState(0x82e7, 0x1179, 0xbf40, 0xfb89, 0x2f2, 0xecd, 0x0, 0x1);
        gbc.writeMem(0x82e7, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1179, gbc.sp());
        EXPECT(0x82e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x82e7));
        // 9F 002D
        gbc.setState(0x976a, 0x649a, 0x12c0, 0x2a98, 0xff64, 0x6a55, 0x1, 0x1);
        gbc.writeMem(0x976a, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x649a, gbc.sp());
        EXPECT(0x976b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x976a));
        // 9F 002E
        gbc.setState(0xecfe, 0xca9b, 0x8460, 0x6e09, 0x9f08, 0xd1e3, 0x1, 0x0);
        gbc.writeMem(0xecfe, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xca9b, gbc.sp());
        EXPECT(0xecff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xecfe));
        // 9F 002F
        gbc.setState(0xa9d4, 0x3220, 0xc630, 0xe04e, 0x909e, 0xe443, 0x0, 0x1);
        gbc.writeMem(0xa9d4, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3220, gbc.sp());
        EXPECT(0xa9d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa9d4));
        // 9F 0030
        gbc.setState(0x25f0, 0xb053, 0xe620, 0x65ae, 0xf847, 0x800e, 0x0, 0x0);
        gbc.writeMem(0x25f0, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb053, gbc.sp());
        EXPECT(0x25f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0031
        gbc.setState(0x6f07, 0x60b7, 0x9780, 0x4c03, 0xd627, 0x459b, 0x1, 0x0);
        gbc.writeMem(0x6f07, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x60b7, gbc.sp());
        EXPECT(0x6f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0033
        gbc.setState(0x5dcf, 0xff46, 0x7e10, 0xab80, 0xad74, 0x389a, 0x1, 0x1);
        gbc.writeMem(0x5dcf, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xff46, gbc.sp());
        EXPECT(0x5dd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0034
        gbc.setState(0xa14a, 0x61e6, 0xe430, 0xa629, 0xa383, 0x903e, 0x1, 0x0);
        gbc.writeMem(0xa14a, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x61e6, gbc.sp());
        EXPECT(0xa14b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa14a));
        // 9F 0035
        gbc.setState(0xda35, 0x799b, 0x3a90, 0x6c82, 0x63f0, 0x2725, 0x1, 0x0);
        gbc.writeMem(0xda35, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x799b, gbc.sp());
        EXPECT(0xda36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xda35));
        // 9F 0036
        gbc.setState(0xc945, 0x8c44, 0xeed0, 0xc206, 0xf73c, 0xc0bf, 0x1, 0x1);
        gbc.writeMem(0xc945, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8c44, gbc.sp());
        EXPECT(0xc946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc945));
        // 9F 0037
        gbc.setState(0x517, 0x6e36, 0xc860, 0x622e, 0xd29, 0x2673, 0x0, 0x1);
        gbc.writeMem(0x517, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6e36, gbc.sp());
        EXPECT(0x518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0038
        gbc.setState(0x13c5, 0x37a8, 0x1600, 0x9cb2, 0x289b, 0xd2c5, 0x1, 0x0);
        gbc.writeMem(0x13c5, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x37a8, gbc.sp());
        EXPECT(0x13c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0039
        gbc.setState(0x3929, 0xe250, 0x4790, 0xab87, 0xf60a, 0x9c75, 0x1, 0x0);
        gbc.writeMem(0x3929, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe250, gbc.sp());
        EXPECT(0x392a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 003A
        gbc.setState(0x6235, 0xbcc4, 0x1e50, 0x66f9, 0xe39a, 0xaf04, 0x1, 0x0);
        gbc.writeMem(0x6235, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbcc4, gbc.sp());
        EXPECT(0x6236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 003B
        gbc.setState(0x120e, 0x5050, 0x9e00, 0xa919, 0xb834, 0x28bd, 0x1, 0x1);
        gbc.writeMem(0x120e, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5050, gbc.sp());
        EXPECT(0x120f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 003D
        gbc.setState(0x30ec, 0x991a, 0x930, 0x6d56, 0x254f, 0xe7a0, 0x0, 0x1);
        gbc.writeMem(0x30ec, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x991a, gbc.sp());
        EXPECT(0x30ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 003E
        gbc.setState(0xe1ab, 0x80ac, 0x7e30, 0xb073, 0xf0b6, 0x3ac0, 0x0, 0x0);
        gbc.writeMem(0xe1ab, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x80ac, gbc.sp());
        EXPECT(0xe1ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe1ab));
        // 9F 003F
        gbc.setState(0xc267, 0xbe3c, 0x84e0, 0x1717, 0xe561, 0xa660, 0x0, 0x1);
        gbc.writeMem(0xc267, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbe3c, gbc.sp());
        EXPECT(0xc268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc267));
        // 9F 0040
        gbc.setState(0xd472, 0x2440, 0x8120, 0xa689, 0xa24e, 0x2c72, 0x1, 0x0);
        gbc.writeMem(0xd472, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2440, gbc.sp());
        EXPECT(0xd473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd472));
        // 9F 0041
        gbc.setState(0x64af, 0x5ec8, 0x4c90, 0x22d7, 0xe0ce, 0x4571, 0x1, 0x0);
        gbc.writeMem(0x64af, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5ec8, gbc.sp());
        EXPECT(0x64b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0042
        gbc.setState(0x73c9, 0xe990, 0xf6d0, 0x83ad, 0x2e6e, 0x1b4d, 0x0, 0x1);
        gbc.writeMem(0x73c9, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe990, gbc.sp());
        EXPECT(0x73ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0043
        gbc.setState(0xc3af, 0x3c8e, 0x1780, 0xc4f0, 0xd376, 0x689b, 0x1, 0x0);
        gbc.writeMem(0xc3af, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3c8e, gbc.sp());
        EXPECT(0xc3b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc3af));
        // 9F 0045
        gbc.setState(0x559d, 0x3da4, 0x87c0, 0x71b8, 0x3a9, 0x4296, 0x1, 0x1);
        gbc.writeMem(0x559d, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3da4, gbc.sp());
        EXPECT(0x559e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0046
        gbc.setState(0x134e, 0x5ca6, 0x7e10, 0xa386, 0x9228, 0xd058, 0x0, 0x0);
        gbc.writeMem(0x134e, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5ca6, gbc.sp());
        EXPECT(0x134f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0047
        gbc.setState(0x3036, 0x4575, 0x5940, 0x5a36, 0x26a3, 0x1730, 0x0, 0x1);
        gbc.writeMem(0x3036, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4575, gbc.sp());
        EXPECT(0x3037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0048
        gbc.setState(0x90aa, 0x898d, 0x6910, 0xedd7, 0xeaf3, 0x4b7f, 0x0, 0x0);
        gbc.writeMem(0x90aa, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x898d, gbc.sp());
        EXPECT(0x90ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x90aa));
        // 9F 0049
        gbc.setState(0x8ca9, 0xe2e7, 0xb240, 0x3bb6, 0xfa0d, 0x203d, 0x1, 0x1);
        gbc.writeMem(0x8ca9, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe2e7, gbc.sp());
        EXPECT(0x8caa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8ca9));
        // 9F 004A
        gbc.setState(0x2bde, 0xfa9b, 0x1040, 0x62fd, 0x1f74, 0xcdce, 0x1, 0x1);
        gbc.writeMem(0x2bde, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xfa9b, gbc.sp());
        EXPECT(0x2bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 004B
        gbc.setState(0x6b0a, 0x35e1, 0x5c60, 0x11f3, 0xcadb, 0xf95f, 0x0, 0x1);
        gbc.writeMem(0x6b0a, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x35e1, gbc.sp());
        EXPECT(0x6b0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 004C
        gbc.setState(0x996b, 0x3952, 0x86b0, 0x45f4, 0x55e9, 0xd08b, 0x1, 0x0);
        gbc.writeMem(0x996b, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3952, gbc.sp());
        EXPECT(0x996c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x996b));
        // 9F 004E
        gbc.setState(0x6833, 0x97c6, 0xc170, 0x7ead, 0x133, 0xdd9f, 0x0, 0x1);
        gbc.writeMem(0x6833, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x97c6, gbc.sp());
        EXPECT(0x6834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 004F
        gbc.setState(0x43b0, 0xf6ac, 0xfe80, 0x4539, 0x1707, 0x2bc5, 0x0, 0x0);
        gbc.writeMem(0x43b0, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf6ac, gbc.sp());
        EXPECT(0x43b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0050
        gbc.setState(0x773a, 0x8557, 0x250, 0x13af, 0x7d88, 0xbc24, 0x1, 0x1);
        gbc.writeMem(0x773a, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8557, gbc.sp());
        EXPECT(0x773b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0051
        gbc.setState(0x1b5, 0xaede, 0x1d90, 0xb359, 0x36a6, 0xc322, 0x1, 0x1);
        gbc.writeMem(0x1b5, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xaede, gbc.sp());
        EXPECT(0x1b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0052
        gbc.setState(0x7202, 0x434a, 0x3f0, 0x6960, 0x463e, 0x3df8, 0x1, 0x1);
        gbc.writeMem(0x7202, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x434a, gbc.sp());
        EXPECT(0x7203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0053
        gbc.setState(0xc046, 0x36d, 0xe2b0, 0x9d5b, 0x71ae, 0xf80, 0x1, 0x1);
        gbc.writeMem(0xc046, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x36d, gbc.sp());
        EXPECT(0xc047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc046));
        // 9F 0054
        gbc.setState(0x475, 0xa695, 0x9cb0, 0xa1d9, 0x1225, 0x4fb1, 0x0, 0x0);
        gbc.writeMem(0x475, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa695, gbc.sp());
        EXPECT(0x476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0055
        gbc.setState(0x72dc, 0xafa4, 0xe450, 0x1db8, 0x9388, 0x9c7a, 0x1, 0x1);
        gbc.writeMem(0x72dc, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xafa4, gbc.sp());
        EXPECT(0x72dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0056
        gbc.setState(0x18ec, 0xefc, 0x51d0, 0x72de, 0x32ec, 0x5807, 0x0, 0x0);
        gbc.writeMem(0x18ec, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xefc, gbc.sp());
        EXPECT(0x18ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0057
        gbc.setState(0x1152, 0xb608, 0xf000, 0x9de8, 0xb5e, 0xcc90, 0x0, 0x0);
        gbc.writeMem(0x1152, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb608, gbc.sp());
        EXPECT(0x1153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0058
        gbc.setState(0x933a, 0x2aba, 0xba50, 0x9d14, 0xc8b7, 0x3472, 0x0, 0x0);
        gbc.writeMem(0x933a, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2aba, gbc.sp());
        EXPECT(0x933b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x933a));
        // 9F 0059
        gbc.setState(0x8b9a, 0xdc54, 0xcbc0, 0xd346, 0x873c, 0xae39, 0x1, 0x0);
        gbc.writeMem(0x8b9a, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xdc54, gbc.sp());
        EXPECT(0x8b9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8b9a));
        // 9F 005A
        gbc.setState(0x4efb, 0x6d29, 0x8ea0, 0xe751, 0x8d76, 0x334a, 0x1, 0x0);
        gbc.writeMem(0x4efb, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6d29, gbc.sp());
        EXPECT(0x4efc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 005B
        gbc.setState(0x9f52, 0x13e5, 0x4c50, 0xc672, 0xffbd, 0x862d, 0x0, 0x0);
        gbc.writeMem(0x9f52, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x13e5, gbc.sp());
        EXPECT(0x9f53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9f52));
        // 9F 005C
        gbc.setState(0xe02f, 0x2e88, 0x1b20, 0xccc0, 0x99a5, 0xe6b8, 0x1, 0x0);
        gbc.writeMem(0xe02f, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2e88, gbc.sp());
        EXPECT(0xe030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe02f));
        // 9F 005D
        gbc.setState(0x23aa, 0x17bf, 0x3ef0, 0x82ef, 0xc2d2, 0x682f, 0x1, 0x1);
        gbc.writeMem(0x23aa, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x17bf, gbc.sp());
        EXPECT(0x23ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 005E
        gbc.setState(0xbc6d, 0xa15c, 0xae00, 0x2e01, 0xb56, 0x5244, 0x1, 0x0);
        gbc.writeMem(0xbc6d, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa15c, gbc.sp());
        EXPECT(0xbc6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbc6d));
        // 9F 0060
        gbc.setState(0xd353, 0xa307, 0x7e10, 0x3e10, 0x4770, 0x60b0, 0x1, 0x1);
        gbc.writeMem(0xd353, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa307, gbc.sp());
        EXPECT(0xd354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd353));
        // 9F 0061
        gbc.setState(0x6763, 0x9be0, 0xc1e0, 0xbce5, 0x5741, 0xa531, 0x0, 0x1);
        gbc.writeMem(0x6763, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9be0, gbc.sp());
        EXPECT(0x6764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0063
        gbc.setState(0x632e, 0x8b76, 0xd270, 0x4636, 0xfddb, 0xbea6, 0x1, 0x0);
        gbc.writeMem(0x632e, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8b76, gbc.sp());
        EXPECT(0x632f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0064
        gbc.setState(0x6ae1, 0x991c, 0x6dd0, 0x778f, 0x5ddf, 0x6999, 0x1, 0x1);
        gbc.writeMem(0x6ae1, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x991c, gbc.sp());
        EXPECT(0x6ae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0065
        gbc.setState(0x7e88, 0xa55c, 0x8280, 0xba99, 0x7cda, 0x76e2, 0x0, 0x1);
        gbc.writeMem(0x7e88, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa55c, gbc.sp());
        EXPECT(0x7e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0066
        gbc.setState(0x593e, 0xfe54, 0x49a0, 0x6565, 0xce51, 0xcb94, 0x0, 0x0);
        gbc.writeMem(0x593e, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfe54, gbc.sp());
        EXPECT(0x593f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0067
        gbc.setState(0x8449, 0xef7c, 0x3bf0, 0x9d1a, 0x34f9, 0x30af, 0x1, 0x0);
        gbc.writeMem(0x8449, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xef7c, gbc.sp());
        EXPECT(0x844a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8449));
        // 9F 0068
        gbc.setState(0xa38d, 0x6b4a, 0x3c00, 0x5f4b, 0xe3c7, 0x2d0f, 0x1, 0x0);
        gbc.writeMem(0xa38d, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6b4a, gbc.sp());
        EXPECT(0xa38e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa38d));
        // 9F 0069
        gbc.setState(0x85e9, 0x795e, 0xb7d0, 0x8b90, 0x7164, 0xa0e, 0x0, 0x0);
        gbc.writeMem(0x85e9, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x795e, gbc.sp());
        EXPECT(0x85ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x85e9));
        // 9F 006A
        gbc.setState(0xe4c8, 0xac49, 0x43e0, 0xef4c, 0xb127, 0xc23d, 0x0, 0x0);
        gbc.writeMem(0xe4c8, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xac49, gbc.sp());
        EXPECT(0xe4c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe4c8));
        // 9F 006B
        gbc.setState(0xada4, 0x24f2, 0xdf60, 0xec28, 0xd9b3, 0x771b, 0x0, 0x0);
        gbc.writeMem(0xada4, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x24f2, gbc.sp());
        EXPECT(0xada5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xada4));
        // 9F 006C
        gbc.setState(0xee56, 0x22a, 0xeb10, 0xce6, 0xcb1c, 0xac26, 0x0, 0x0);
        gbc.writeMem(0xee56, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x22a, gbc.sp());
        EXPECT(0xee57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xee56));
        // 9F 006D
        gbc.setState(0xb52, 0xa8ad, 0x44b0, 0x2491, 0x4ecc, 0x4d53, 0x0, 0x0);
        gbc.writeMem(0xb52, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa8ad, gbc.sp());
        EXPECT(0xb53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 006E
        gbc.setState(0x464, 0x9635, 0x5640, 0x4f06, 0x494, 0x9ac5, 0x1, 0x0);
        gbc.writeMem(0x464, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9635, gbc.sp());
        EXPECT(0x465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 006F
        gbc.setState(0xdfb2, 0x5888, 0xb4b0, 0x4664, 0x2d7a, 0x707, 0x1, 0x0);
        gbc.writeMem(0xdfb2, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5888, gbc.sp());
        EXPECT(0xdfb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xdfb2));
        // 9F 0070
        gbc.setState(0x1967, 0x189f, 0xd080, 0x370a, 0x5b9f, 0xa7c4, 0x0, 0x0);
        gbc.writeMem(0x1967, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x189f, gbc.sp());
        EXPECT(0x1968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0071
        gbc.setState(0xc3bd, 0xd4cd, 0x6340, 0x7738, 0x4403, 0x8003, 0x1, 0x1);
        gbc.writeMem(0xc3bd, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd4cd, gbc.sp());
        EXPECT(0xc3be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc3bd));
        // 9F 0072
        gbc.setState(0xee3e, 0xca10, 0xb4f0, 0x163b, 0xc97c, 0x7b7a, 0x1, 0x0);
        gbc.writeMem(0xee3e, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xca10, gbc.sp());
        EXPECT(0xee3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xee3e));
        // 9F 0073
        gbc.setState(0xc4d9, 0xaa50, 0xdc00, 0xe38, 0x5de1, 0xa246, 0x1, 0x1);
        gbc.writeMem(0xc4d9, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xaa50, gbc.sp());
        EXPECT(0xc4da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc4d9));
        // 9F 0074
        gbc.setState(0x4709, 0x2e59, 0x9e60, 0xb310, 0x563c, 0x3446, 0x1, 0x0);
        gbc.writeMem(0x4709, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2e59, gbc.sp());
        EXPECT(0x470a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0075
        gbc.setState(0xc59a, 0x707a, 0xdc70, 0x2814, 0x4357, 0x76e5, 0x0, 0x0);
        gbc.writeMem(0xc59a, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x707a, gbc.sp());
        EXPECT(0xc59b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc59a));
        // 9F 0076
        gbc.setState(0xaf8e, 0x1613, 0xe540, 0xf1ed, 0xedd3, 0xaccc, 0x0, 0x1);
        gbc.writeMem(0xaf8e, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1613, gbc.sp());
        EXPECT(0xaf8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xaf8e));
        // 9F 0078
        gbc.setState(0x6b75, 0x47fb, 0xb060, 0x9e61, 0xb105, 0x8042, 0x0, 0x0);
        gbc.writeMem(0x6b75, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x47fb, gbc.sp());
        EXPECT(0x6b76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0079
        gbc.setState(0xd0a2, 0xde67, 0xf810, 0xf4e5, 0xbbc9, 0x4d55, 0x1, 0x0);
        gbc.writeMem(0xd0a2, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xde67, gbc.sp());
        EXPECT(0xd0a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd0a2));
        // 9F 007B
        gbc.setState(0x1d12, 0xdd32, 0x1250, 0x4c45, 0x5c04, 0x6f70, 0x0, 0x1);
        gbc.writeMem(0x1d12, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xdd32, gbc.sp());
        EXPECT(0x1d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 007C
        gbc.setState(0x2119, 0xcc8e, 0x63c0, 0x5e08, 0xc1e3, 0xa8df, 0x0, 0x0);
        gbc.writeMem(0x2119, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xcc8e, gbc.sp());
        EXPECT(0x211a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 007D
        gbc.setState(0x8a44, 0xe69f, 0x5300, 0x73c, 0xacc6, 0xdbba, 0x1, 0x1);
        gbc.writeMem(0x8a44, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe69f, gbc.sp());
        EXPECT(0x8a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8a44));
        // 9F 007F
        gbc.setState(0xe215, 0x3d95, 0xb9c0, 0xc327, 0xc65f, 0x9191, 0x0, 0x1);
        gbc.writeMem(0xe215, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3d95, gbc.sp());
        EXPECT(0xe216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe215));
        // 9F 0080
        gbc.setState(0xaddd, 0x305a, 0xec10, 0xc45b, 0x193c, 0x987, 0x1, 0x1);
        gbc.writeMem(0xaddd, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x305a, gbc.sp());
        EXPECT(0xadde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xaddd));
        // 9F 0081
        gbc.setState(0x12b5, 0xcba, 0xb0c0, 0xabd2, 0xa779, 0x1b8a, 0x1, 0x1);
        gbc.writeMem(0x12b5, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xcba, gbc.sp());
        EXPECT(0x12b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0083
        gbc.setState(0x542f, 0xf5ab, 0xfe0, 0x65f8, 0xa814, 0xed4, 0x0, 0x0);
        gbc.writeMem(0x542f, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf5ab, gbc.sp());
        EXPECT(0x5430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0084
        gbc.setState(0x9c82, 0xe273, 0x2510, 0xb025, 0x6446, 0xc2c2, 0x0, 0x1);
        gbc.writeMem(0x9c82, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe273, gbc.sp());
        EXPECT(0x9c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9c82));
        // 9F 0085
        gbc.setState(0xbc50, 0x5f2d, 0x2c40, 0xa981, 0x5382, 0x31f7, 0x0, 0x0);
        gbc.writeMem(0xbc50, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5f2d, gbc.sp());
        EXPECT(0xbc51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbc50));
        // 9F 0086
        gbc.setState(0x5785, 0x7991, 0x1200, 0x4690, 0x14c9, 0xbd0a, 0x0, 0x1);
        gbc.writeMem(0x5785, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7991, gbc.sp());
        EXPECT(0x5786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0088
        gbc.setState(0x7c6c, 0x410c, 0xc90, 0xf1e1, 0xa27e, 0x99a4, 0x1, 0x1);
        gbc.writeMem(0x7c6c, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x410c, gbc.sp());
        EXPECT(0x7c6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0089
        gbc.setState(0x5074, 0xdab, 0xfb60, 0xd75, 0xc596, 0x67c0, 0x1, 0x1);
        gbc.writeMem(0x5074, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xdab, gbc.sp());
        EXPECT(0x5075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 008C
        gbc.setState(0x69e0, 0xd3e, 0x44b0, 0xf79a, 0xf2d4, 0x29df, 0x0, 0x1);
        gbc.writeMem(0x69e0, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd3e, gbc.sp());
        EXPECT(0x69e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 008D
        gbc.setState(0xe387, 0xff52, 0x9050, 0x16f2, 0x69a7, 0xc60f, 0x1, 0x0);
        gbc.writeMem(0xe387, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xff52, gbc.sp());
        EXPECT(0xe388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe387));
        // 9F 008E
        gbc.setState(0xcdeb, 0x1e21, 0xa1e0, 0x71f7, 0xdc48, 0x7b90, 0x0, 0x0);
        gbc.writeMem(0xcdeb, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1e21, gbc.sp());
        EXPECT(0xcdec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcdeb));
        // 9F 008F
        gbc.setState(0xcb46, 0xc109, 0x7790, 0x356c, 0x7630, 0x9f62, 0x0, 0x1);
        gbc.writeMem(0xcb46, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc109, gbc.sp());
        EXPECT(0xcb47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcb46));
        // 9F 0090
        gbc.setState(0x6e90, 0xd28f, 0x55f0, 0x4199, 0x888, 0x3fd, 0x0, 0x1);
        gbc.writeMem(0x6e90, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd28f, gbc.sp());
        EXPECT(0x6e91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0091
        gbc.setState(0xab7c, 0x74e, 0x8530, 0xea57, 0xd4e2, 0xdbf3, 0x1, 0x0);
        gbc.writeMem(0xab7c, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x74e, gbc.sp());
        EXPECT(0xab7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xab7c));
        // 9F 0092
        gbc.setState(0xd1b0, 0x9c69, 0xe960, 0xb336, 0xc5a5, 0xeaa0, 0x1, 0x0);
        gbc.writeMem(0xd1b0, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9c69, gbc.sp());
        EXPECT(0xd1b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd1b0));
        // 9F 0093
        gbc.setState(0x8a23, 0xbe16, 0xb7b0, 0x1796, 0x5dee, 0xd87, 0x0, 0x1);
        gbc.writeMem(0x8a23, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xbe16, gbc.sp());
        EXPECT(0x8a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8a23));
        // 9F 0094
        gbc.setState(0x8a0f, 0x2e11, 0x8940, 0xa29, 0xc41c, 0xf42a, 0x0, 0x1);
        gbc.writeMem(0x8a0f, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2e11, gbc.sp());
        EXPECT(0x8a10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8a0f));
        // 9F 0095
        gbc.setState(0x22e1, 0x15ba, 0x2070, 0x4b97, 0x5c1f, 0x1ce2, 0x0, 0x1);
        gbc.writeMem(0x22e1, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x15ba, gbc.sp());
        EXPECT(0x22e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0096
        gbc.setState(0xb30c, 0x881a, 0x6c70, 0x194e, 0xbc30, 0x69df, 0x1, 0x0);
        gbc.writeMem(0xb30c, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x881a, gbc.sp());
        EXPECT(0xb30d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb30c));
        // 9F 0097
        gbc.setState(0xc9df, 0xe41, 0x4ca0, 0x2f21, 0x34ad, 0x8a40, 0x1, 0x1);
        gbc.writeMem(0xc9df, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe41, gbc.sp());
        EXPECT(0xc9e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc9df));
        // 9F 0098
        gbc.setState(0x4af0, 0x7c0c, 0xb680, 0xb706, 0x99f7, 0x5fff, 0x0, 0x1);
        gbc.writeMem(0x4af0, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7c0c, gbc.sp());
        EXPECT(0x4af1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0099
        gbc.setState(0x8205, 0x27d8, 0x43b0, 0xad78, 0x796f, 0xc307, 0x1, 0x1);
        gbc.writeMem(0x8205, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x27d8, gbc.sp());
        EXPECT(0x8206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8205));
        // 9F 009A
        gbc.setState(0x9dc8, 0x7722, 0x6d30, 0xb393, 0xa870, 0x9324, 0x1, 0x0);
        gbc.writeMem(0x9dc8, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7722, gbc.sp());
        EXPECT(0x9dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9dc8));
        // 9F 009B
        gbc.setState(0xd4aa, 0xabc2, 0x4090, 0x6ca9, 0x2a96, 0xd65d, 0x0, 0x1);
        gbc.writeMem(0xd4aa, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xabc2, gbc.sp());
        EXPECT(0xd4ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd4aa));
        // 9F 009C
        gbc.setState(0x286b, 0x702b, 0x6890, 0x2305, 0xd88, 0xf1db, 0x0, 0x0);
        gbc.writeMem(0x286b, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x702b, gbc.sp());
        EXPECT(0x286c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 009D
        gbc.setState(0xb9d6, 0x1b62, 0x8790, 0x7fd0, 0x60a3, 0x2d1a, 0x1, 0x1);
        gbc.writeMem(0xb9d6, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1b62, gbc.sp());
        EXPECT(0xb9d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb9d6));
        // 9F 009E
        gbc.setState(0xe5dc, 0x308b, 0xbb10, 0x8acc, 0x8d98, 0x2ef8, 0x1, 0x0);
        gbc.writeMem(0xe5dc, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x308b, gbc.sp());
        EXPECT(0xe5dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe5dc));
        // 9F 009F
        gbc.setState(0x2005, 0xc775, 0xf5c0, 0xaec, 0x5bef, 0x8954, 0x1, 0x1);
        gbc.writeMem(0x2005, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc775, gbc.sp());
        EXPECT(0x2006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00A0
        gbc.setState(0x9206, 0xcd1b, 0x4fe0, 0x91b8, 0x9eca, 0xc1cb, 0x0, 0x1);
        gbc.writeMem(0x9206, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcd1b, gbc.sp());
        EXPECT(0x9207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9206));
        // 9F 00A1
        gbc.setState(0x60cb, 0x7db2, 0xc3a0, 0x777d, 0x6417, 0x8b3c, 0x0, 0x0);
        gbc.writeMem(0x60cb, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7db2, gbc.sp());
        EXPECT(0x60cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00A2
        gbc.setState(0xb73d, 0xa067, 0x6050, 0x8304, 0xd82d, 0x9d4d, 0x1, 0x0);
        gbc.writeMem(0xb73d, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa067, gbc.sp());
        EXPECT(0xb73e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb73d));
        // 9F 00A4
        gbc.setState(0xd93e, 0xedf0, 0x7ba0, 0x6f1f, 0xa129, 0x8126, 0x0, 0x0);
        gbc.writeMem(0xd93e, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xedf0, gbc.sp());
        EXPECT(0xd93f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd93e));
        // 9F 00A5
        gbc.setState(0xda88, 0x45d6, 0x5140, 0x8f82, 0xfb16, 0xf05e, 0x0, 0x0);
        gbc.writeMem(0xda88, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x45d6, gbc.sp());
        EXPECT(0xda89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xda88));
        // 9F 00A6
        gbc.setState(0x5914, 0x921a, 0x8740, 0x692e, 0x297e, 0x25ab, 0x0, 0x1);
        gbc.writeMem(0x5914, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x921a, gbc.sp());
        EXPECT(0x5915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00A7
        gbc.setState(0x96c3, 0xfe35, 0xd190, 0x87b7, 0xa10d, 0xf1e6, 0x0, 0x1);
        gbc.writeMem(0x96c3, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfe35, gbc.sp());
        EXPECT(0x96c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x96c3));
        // 9F 00A8
        gbc.setState(0x5f70, 0xc65a, 0x4470, 0xa388, 0x8127, 0x3b71, 0x1, 0x1);
        gbc.writeMem(0x5f70, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc65a, gbc.sp());
        EXPECT(0x5f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00A9
        gbc.setState(0xc265, 0xabed, 0x44f0, 0x86d, 0xc2c, 0xc436, 0x0, 0x0);
        gbc.writeMem(0xc265, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xabed, gbc.sp());
        EXPECT(0xc266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc265));
        // 9F 00AA
        gbc.setState(0xcc45, 0x9af9, 0xb740, 0xf3a, 0xbd1b, 0x7f5e, 0x0, 0x0);
        gbc.writeMem(0xcc45, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9af9, gbc.sp());
        EXPECT(0xcc46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcc45));
        // 9F 00AB
        gbc.setState(0xa981, 0xabf9, 0x10a0, 0x2d94, 0x65aa, 0xc65a, 0x0, 0x0);
        gbc.writeMem(0xa981, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xabf9, gbc.sp());
        EXPECT(0xa982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa981));
        // 9F 00AC
        gbc.setState(0x5d84, 0x657c, 0x2460, 0xf71b, 0xb84e, 0x66a3, 0x1, 0x1);
        gbc.writeMem(0x5d84, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x657c, gbc.sp());
        EXPECT(0x5d85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00AD
        gbc.setState(0xe4ca, 0x5c17, 0xf800, 0x713, 0x885a, 0x93e4, 0x1, 0x0);
        gbc.writeMem(0xe4ca, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5c17, gbc.sp());
        EXPECT(0xe4cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe4ca));
        // 9F 00AE
        gbc.setState(0x582, 0x32cb, 0x87e0, 0x5826, 0xe534, 0xda8b, 0x1, 0x0);
        gbc.writeMem(0x582, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x32cb, gbc.sp());
        EXPECT(0x583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00AF
        gbc.setState(0xd8f1, 0xcc2e, 0x16b0, 0x34e0, 0x5ddd, 0x4afe, 0x1, 0x0);
        gbc.writeMem(0xd8f1, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xcc2e, gbc.sp());
        EXPECT(0xd8f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd8f1));
        // 9F 00B0
        gbc.setState(0x16cf, 0x1853, 0xa80, 0x20fc, 0x812c, 0x789d, 0x1, 0x1);
        gbc.writeMem(0x16cf, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1853, gbc.sp());
        EXPECT(0x16d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00B1
        gbc.setState(0x2616, 0xfa08, 0x2500, 0x4f43, 0x2e47, 0xf4f7, 0x1, 0x1);
        gbc.writeMem(0x2616, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfa08, gbc.sp());
        EXPECT(0x2617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00B2
        gbc.setState(0xc7c4, 0xa883, 0x9820, 0x7d4a, 0x30fe, 0x8c08, 0x1, 0x1);
        gbc.writeMem(0xc7c4, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa883, gbc.sp());
        EXPECT(0xc7c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc7c4));
        // 9F 00B3
        gbc.setState(0x551, 0x15cd, 0x53f0, 0x1a2b, 0x8c4c, 0x3f06, 0x0, 0x0);
        gbc.writeMem(0x551, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x15cd, gbc.sp());
        EXPECT(0x552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00B4
        gbc.setState(0x17b8, 0x9603, 0x4960, 0x82a1, 0x8014, 0x49a3, 0x0, 0x1);
        gbc.writeMem(0x17b8, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9603, gbc.sp());
        EXPECT(0x17b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00B5
        gbc.setState(0x3642, 0x8948, 0xc310, 0x3453, 0xd150, 0x6f34, 0x0, 0x1);
        gbc.writeMem(0x3642, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8948, gbc.sp());
        EXPECT(0x3643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00B6
        gbc.setState(0x7269, 0xa6e7, 0x2730, 0x70b6, 0xe978, 0x2870, 0x1, 0x1);
        gbc.writeMem(0x7269, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa6e7, gbc.sp());
        EXPECT(0x726a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00B7
        gbc.setState(0x14bd, 0xfca, 0x3b40, 0x6500, 0x5a00, 0x9ddf, 0x1, 0x0);
        gbc.writeMem(0x14bd, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfca, gbc.sp());
        EXPECT(0x14be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00B8
        gbc.setState(0x1402, 0x98ce, 0x1ad0, 0x7bcf, 0xffe6, 0xe8e7, 0x1, 0x1);
        gbc.writeMem(0x1402, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x98ce, gbc.sp());
        EXPECT(0x1403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00B9
        gbc.setState(0x15ed, 0xb44e, 0xbcf0, 0xdf53, 0xf06f, 0xe8b2, 0x0, 0x0);
        gbc.writeMem(0x15ed, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb44e, gbc.sp());
        EXPECT(0x15ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00BA
        gbc.setState(0x3e66, 0xb909, 0x1060, 0xda4a, 0x91e7, 0xabbb, 0x0, 0x1);
        gbc.writeMem(0x3e66, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb909, gbc.sp());
        EXPECT(0x3e67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00BB
        gbc.setState(0xb68c, 0xf732, 0x6590, 0x8eb, 0xb7e, 0x6dbd, 0x0, 0x1);
        gbc.writeMem(0xb68c, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf732, gbc.sp());
        EXPECT(0xb68d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb68c));
        // 9F 00BC
        gbc.setState(0x8bbc, 0x92f1, 0x2770, 0xa91c, 0xcb5a, 0x1aec, 0x0, 0x0);
        gbc.writeMem(0x8bbc, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x92f1, gbc.sp());
        EXPECT(0x8bbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8bbc));
        // 9F 00BD
        gbc.setState(0x3673, 0x32c8, 0xc650, 0xbc23, 0x2d1c, 0xd857, 0x0, 0x0);
        gbc.writeMem(0x3673, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x32c8, gbc.sp());
        EXPECT(0x3674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00BE
        gbc.setState(0xef85, 0x7bbe, 0xd4b0, 0x47e2, 0xcd65, 0xaaa6, 0x0, 0x1);
        gbc.writeMem(0xef85, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7bbe, gbc.sp());
        EXPECT(0xef86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xef85));
        // 9F 00BF
        gbc.setState(0x5d50, 0xa111, 0x2cc0, 0x8bfe, 0xf6fa, 0x3fd2, 0x0, 0x1);
        gbc.writeMem(0x5d50, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa111, gbc.sp());
        EXPECT(0x5d51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00C0
        gbc.setState(0x80e0, 0x3ddb, 0x9000, 0x696f, 0xf4b8, 0x5a89, 0x0, 0x1);
        gbc.writeMem(0x80e0, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3ddb, gbc.sp());
        EXPECT(0x80e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x80e0));
        // 9F 00C1
        gbc.setState(0x5442, 0xe256, 0xfa80, 0x2dae, 0x27ac, 0x70d0, 0x0, 0x1);
        gbc.writeMem(0x5442, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe256, gbc.sp());
        EXPECT(0x5443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00C2
        gbc.setState(0x5670, 0xb42f, 0x7af0, 0x9e5c, 0xa093, 0x1cec, 0x1, 0x1);
        gbc.writeMem(0x5670, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb42f, gbc.sp());
        EXPECT(0x5671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00C3
        gbc.setState(0x3c6b, 0xc099, 0x20e0, 0x8da7, 0x973b, 0x1bb, 0x1, 0x0);
        gbc.writeMem(0x3c6b, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc099, gbc.sp());
        EXPECT(0x3c6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00C4
        gbc.setState(0xa4a7, 0xb92, 0x4dc0, 0x4c23, 0x8eb1, 0xede8, 0x1, 0x1);
        gbc.writeMem(0xa4a7, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb92, gbc.sp());
        EXPECT(0xa4a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa4a7));
        // 9F 00C5
        gbc.setState(0x7cf1, 0x860f, 0x8860, 0xa2fc, 0x526b, 0x42ee, 0x0, 0x1);
        gbc.writeMem(0x7cf1, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x860f, gbc.sp());
        EXPECT(0x7cf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00C6
        gbc.setState(0x6ead, 0xde64, 0x5060, 0x1e87, 0xd79b, 0xc8e7, 0x1, 0x0);
        gbc.writeMem(0x6ead, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xde64, gbc.sp());
        EXPECT(0x6eae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00C7
        gbc.setState(0x273e, 0x8e0f, 0x4d0, 0x2073, 0x759a, 0x9d83, 0x0, 0x1);
        gbc.writeMem(0x273e, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8e0f, gbc.sp());
        EXPECT(0x273f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00C8
        gbc.setState(0x3097, 0xd602, 0x30c0, 0x4f4b, 0x2682, 0xb4a8, 0x0, 0x0);
        gbc.writeMem(0x3097, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd602, gbc.sp());
        EXPECT(0x3098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00C9
        gbc.setState(0x5292, 0x9d29, 0x4fd0, 0x9dd9, 0x2283, 0x316d, 0x1, 0x1);
        gbc.writeMem(0x5292, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9d29, gbc.sp());
        EXPECT(0x5293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00CA
        gbc.setState(0x7db0, 0xca97, 0xcec0, 0x13bf, 0x87ee, 0xd13f, 0x0, 0x1);
        gbc.writeMem(0x7db0, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xca97, gbc.sp());
        EXPECT(0x7db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00CB
        gbc.setState(0x6db6, 0x34d2, 0x3280, 0xf3ba, 0xb976, 0xcc4, 0x1, 0x0);
        gbc.writeMem(0x6db6, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x34d2, gbc.sp());
        EXPECT(0x6db7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00CC
        gbc.setState(0x18df, 0xf7d6, 0xa200, 0x72fa, 0xc00f, 0x4c34, 0x1, 0x0);
        gbc.writeMem(0x18df, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf7d6, gbc.sp());
        EXPECT(0x18e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00CD
        gbc.setState(0xa0d0, 0x2cf1, 0xbae0, 0xb0aa, 0x7a8f, 0xea81, 0x1, 0x0);
        gbc.writeMem(0xa0d0, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2cf1, gbc.sp());
        EXPECT(0xa0d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa0d0));
        // 9F 00CE
        gbc.setState(0x60d6, 0x79c5, 0x5520, 0xd360, 0xeee9, 0xa881, 0x0, 0x0);
        gbc.writeMem(0x60d6, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x79c5, gbc.sp());
        EXPECT(0x60d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00D0
        gbc.setState(0x1de7, 0x6d5e, 0x3870, 0x6577, 0x817b, 0x8930, 0x1, 0x1);
        gbc.writeMem(0x1de7, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6d5e, gbc.sp());
        EXPECT(0x1de8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00D1
        gbc.setState(0x901d, 0x71ca, 0xad0, 0x7c8, 0x8606, 0xdbec, 0x1, 0x1);
        gbc.writeMem(0x901d, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x71ca, gbc.sp());
        EXPECT(0x901e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x901d));
        // 9F 00D2
        gbc.setState(0x3613, 0xf7f0, 0xdef0, 0x2e7f, 0x8f70, 0xbdab, 0x1, 0x1);
        gbc.writeMem(0x3613, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf7f0, gbc.sp());
        EXPECT(0x3614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00D3
        gbc.setState(0x9a44, 0xd878, 0x3f50, 0xc94c, 0x64f9, 0xaf2, 0x0, 0x0);
        gbc.writeMem(0x9a44, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd878, gbc.sp());
        EXPECT(0x9a45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9a44));
        // 9F 00D4
        gbc.setState(0x2e09, 0x9b71, 0x3db0, 0x6f01, 0x8a1d, 0x79c, 0x0, 0x0);
        gbc.writeMem(0x2e09, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9b71, gbc.sp());
        EXPECT(0x2e0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00D5
        gbc.setState(0x1776, 0x9cf5, 0x7130, 0xe06c, 0xfb31, 0xac3a, 0x0, 0x0);
        gbc.writeMem(0x1776, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9cf5, gbc.sp());
        EXPECT(0x1777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00D6
        gbc.setState(0x6976, 0x235b, 0x7060, 0x40a9, 0x5f9b, 0x5529, 0x1, 0x1);
        gbc.writeMem(0x6976, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x235b, gbc.sp());
        EXPECT(0x6977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00D7
        gbc.setState(0x8ef, 0xc669, 0x5390, 0x3929, 0xa90d, 0x1647, 0x1, 0x1);
        gbc.writeMem(0x8ef, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc669, gbc.sp());
        EXPECT(0x8f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00D9
        gbc.setState(0xcc86, 0x13f, 0xade0, 0x9784, 0xaf6b, 0xeb71, 0x0, 0x1);
        gbc.writeMem(0xcc86, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x13f, gbc.sp());
        EXPECT(0xcc87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcc86));
        // 9F 00DA
        gbc.setState(0x7d3b, 0x518c, 0x70a0, 0x2bef, 0x83a, 0x27fc, 0x1, 0x1);
        gbc.writeMem(0x7d3b, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x518c, gbc.sp());
        EXPECT(0x7d3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00DC
        gbc.setState(0xd81f, 0x32ed, 0xe200, 0x5629, 0xcc05, 0x8913, 0x0, 0x1);
        gbc.writeMem(0xd81f, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x32ed, gbc.sp());
        EXPECT(0xd820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd81f));
        // 9F 00DD
        gbc.setState(0xd54f, 0x8f97, 0xd8a0, 0x1931, 0xbb90, 0x77d7, 0x1, 0x1);
        gbc.writeMem(0xd54f, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8f97, gbc.sp());
        EXPECT(0xd550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd54f));
        // 9F 00DE
        gbc.setState(0x3cbb, 0xa2c2, 0xa8d0, 0x5285, 0xf9dd, 0xfef7, 0x1, 0x0);
        gbc.writeMem(0x3cbb, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa2c2, gbc.sp());
        EXPECT(0x3cbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00E2
        gbc.setState(0xeb0a, 0xd72a, 0xb8f0, 0xeb21, 0x1b2b, 0xb6fd, 0x0, 0x0);
        gbc.writeMem(0xeb0a, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd72a, gbc.sp());
        EXPECT(0xeb0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xeb0a));
        // 9F 00E3
        gbc.setState(0x1cc6, 0x7bd, 0xf3b0, 0xdca6, 0xf8c4, 0x7947, 0x0, 0x1);
        gbc.writeMem(0x1cc6, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7bd, gbc.sp());
        EXPECT(0x1cc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00E4
        gbc.setState(0x95a8, 0x19a6, 0xcf70, 0x505a, 0xfb23, 0x326a, 0x1, 0x1);
        gbc.writeMem(0x95a8, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x19a6, gbc.sp());
        EXPECT(0x95a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x95a8));
        // 9F 00E5
        gbc.setState(0x44af, 0x7b7c, 0x2850, 0x3308, 0xfa68, 0x8130, 0x0, 0x1);
        gbc.writeMem(0x44af, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7b7c, gbc.sp());
        EXPECT(0x44b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00E6
        gbc.setState(0x7660, 0xc048, 0x3220, 0x63d5, 0x5343, 0xff0a, 0x0, 0x0);
        gbc.writeMem(0x7660, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc048, gbc.sp());
        EXPECT(0x7661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00E7
        gbc.setState(0x8fc2, 0x2e60, 0x9ca0, 0x9094, 0x96ac, 0xffa4, 0x0, 0x1);
        gbc.writeMem(0x8fc2, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2e60, gbc.sp());
        EXPECT(0x8fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8fc2));
        // 9F 00E8
        gbc.setState(0x2109, 0xb998, 0xea70, 0x570c, 0xd3df, 0x2128, 0x1, 0x1);
        gbc.writeMem(0x2109, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb998, gbc.sp());
        EXPECT(0x210a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00E9
        gbc.setState(0x74b7, 0x6be2, 0x650, 0x2c4c, 0x921b, 0x5bf8, 0x1, 0x1);
        gbc.writeMem(0x74b7, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6be2, gbc.sp());
        EXPECT(0x74b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00EA
        gbc.setState(0xe063, 0x148, 0x98a0, 0x8945, 0xd90d, 0x48ad, 0x1, 0x0);
        gbc.writeMem(0xe063, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x148, gbc.sp());
        EXPECT(0xe064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe063));
        // 9F 00EB
        gbc.setState(0x54fb, 0xca80, 0x9290, 0xacd1, 0x5d78, 0xa6df, 0x0, 0x1);
        gbc.writeMem(0x54fb, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xca80, gbc.sp());
        EXPECT(0x54fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00EC
        gbc.setState(0x36c6, 0x4756, 0x7220, 0x684, 0xcac3, 0x4a58, 0x0, 0x1);
        gbc.writeMem(0x36c6, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4756, gbc.sp());
        EXPECT(0x36c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00ED
        gbc.setState(0x63bd, 0x4e70, 0x5c00, 0xc58a, 0x414c, 0xcf61, 0x0, 0x1);
        gbc.writeMem(0x63bd, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4e70, gbc.sp());
        EXPECT(0x63be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00EE
        gbc.setState(0x7cd9, 0x9c13, 0x5760, 0xaf47, 0x49f0, 0x63ba, 0x0, 0x0);
        gbc.writeMem(0x7cd9, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9c13, gbc.sp());
        EXPECT(0x7cda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00EF
        gbc.setState(0xa3c6, 0xf492, 0x1d00, 0x8bd3, 0xbde0, 0x1384, 0x1, 0x0);
        gbc.writeMem(0xa3c6, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf492, gbc.sp());
        EXPECT(0xa3c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa3c6));
        // 9F 00F0
        gbc.setState(0x2251, 0x6b3c, 0xdc70, 0x708e, 0x587, 0x354d, 0x1, 0x0);
        gbc.writeMem(0x2251, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6b3c, gbc.sp());
        EXPECT(0x2252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00F1
        gbc.setState(0xd3ac, 0xf324, 0xc8f0, 0x5e56, 0xbe27, 0xe3a, 0x0, 0x0);
        gbc.writeMem(0xd3ac, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf324, gbc.sp());
        EXPECT(0xd3ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd3ac));
        // 9F 00F2
        gbc.setState(0x87ec, 0xe5b, 0xea80, 0x7e4f, 0x66a6, 0xa8df, 0x1, 0x0);
        gbc.writeMem(0x87ec, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe5b, gbc.sp());
        EXPECT(0x87ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x87ec));
        // 9F 00F3
        gbc.setState(0xb21a, 0x74c1, 0xc690, 0x503e, 0xb82a, 0xfbcf, 0x0, 0x0);
        gbc.writeMem(0xb21a, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x74c1, gbc.sp());
        EXPECT(0xb21b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb21a));
        // 9F 00F4
        gbc.setState(0xc607, 0x698, 0xdf90, 0xa063, 0x2efb, 0xddf7, 0x1, 0x0);
        gbc.writeMem(0xc607, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x698, gbc.sp());
        EXPECT(0xc608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc607));
        // 9F 00F5
        gbc.setState(0x9345, 0x928a, 0xe810, 0x3869, 0xec87, 0x3c8d, 0x0, 0x0);
        gbc.writeMem(0x9345, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x928a, gbc.sp());
        EXPECT(0x9346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9345));
        // 9F 00F6
        gbc.setState(0x7eb3, 0xe4d0, 0x1c50, 0x3980, 0xb4f4, 0xbfc6, 0x0, 0x1);
        gbc.writeMem(0x7eb3, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe4d0, gbc.sp());
        EXPECT(0x7eb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00F7
        gbc.setState(0x7ff7, 0x172d, 0xc990, 0x87c1, 0x12a0, 0x2a5a, 0x0, 0x0);
        gbc.writeMem(0x7ff7, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x172d, gbc.sp());
        EXPECT(0x7ff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00F8
        gbc.setState(0x438f, 0xffd1, 0x6900, 0x5663, 0x2fe2, 0x563f, 0x0, 0x1);
        gbc.writeMem(0x438f, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xffd1, gbc.sp());
        EXPECT(0x4390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00F9
        gbc.setState(0x32f, 0xb339, 0x5100, 0xd3a1, 0x9523, 0xa972, 0x1, 0x1);
        gbc.writeMem(0x32f, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb339, gbc.sp());
        EXPECT(0x330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00FA
        gbc.setState(0xb039, 0x8781, 0x85f0, 0x3e9e, 0xef9e, 0x4525, 0x1, 0x0);
        gbc.writeMem(0xb039, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8781, gbc.sp());
        EXPECT(0xb03a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb039));
        // 9F 00FB
        gbc.setState(0xd550, 0xedbb, 0x3fa0, 0xe73a, 0xff86, 0xcb97, 0x0, 0x0);
        gbc.writeMem(0xd550, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xedbb, gbc.sp());
        EXPECT(0xd551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd550));
        // 9F 00FC
        gbc.setState(0x5030, 0x86b6, 0x9690, 0xa92d, 0x60a2, 0xcff3, 0x0, 0x0);
        gbc.writeMem(0x5030, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x86b6, gbc.sp());
        EXPECT(0x5031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00FD
        gbc.setState(0xd53, 0x5771, 0x5b20, 0x6f5c, 0xe914, 0x498e, 0x1, 0x1);
        gbc.writeMem(0xd53, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5771, gbc.sp());
        EXPECT(0xd54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 00FE
        gbc.setState(0x39fd, 0x4793, 0xf8f0, 0xf75f, 0x5b36, 0x1f7e, 0x0, 0x1);
        gbc.writeMem(0x39fd, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4793, gbc.sp());
        EXPECT(0x39fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 00FF
        gbc.setState(0x9206, 0x232d, 0xc480, 0x200a, 0x2217, 0x318b, 0x1, 0x1);
        gbc.writeMem(0x9206, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x232d, gbc.sp());
        EXPECT(0x9207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9206));
        // 9F 0100
        gbc.setState(0xd344, 0x9c3e, 0xb0, 0xdeae, 0x34e2, 0x39ee, 0x0, 0x1);
        gbc.writeMem(0xd344, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9c3e, gbc.sp());
        EXPECT(0xd345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd344));
        // 9F 0101
        gbc.setState(0x7730, 0x1db3, 0xf4a0, 0xbb61, 0x7b11, 0xecda, 0x1, 0x0);
        gbc.writeMem(0x7730, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1db3, gbc.sp());
        EXPECT(0x7731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0102
        gbc.setState(0x536b, 0x8299, 0x38a0, 0x4b28, 0xdeaf, 0xaf72, 0x1, 0x1);
        gbc.writeMem(0x536b, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8299, gbc.sp());
        EXPECT(0x536c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0103
        gbc.setState(0x5eca, 0x3b5e, 0xcf10, 0x9293, 0xadec, 0x60e0, 0x0, 0x0);
        gbc.writeMem(0x5eca, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3b5e, gbc.sp());
        EXPECT(0x5ecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0104
        gbc.setState(0xe242, 0xfc51, 0xe120, 0xfb4, 0x898c, 0xdb37, 0x1, 0x0);
        gbc.writeMem(0xe242, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfc51, gbc.sp());
        EXPECT(0xe243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe242));
        // 9F 0105
        gbc.setState(0xe4aa, 0xb9b, 0x1d70, 0x656d, 0xb46d, 0xed6f, 0x1, 0x0);
        gbc.writeMem(0xe4aa, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb9b, gbc.sp());
        EXPECT(0xe4ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe4aa));
        // 9F 0106
        gbc.setState(0x5e2b, 0x2508, 0xca20, 0x9ee1, 0x11c8, 0x8463, 0x0, 0x1);
        gbc.writeMem(0x5e2b, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2508, gbc.sp());
        EXPECT(0x5e2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0107
        gbc.setState(0x68d6, 0xd599, 0xd240, 0xf7d9, 0x3f5d, 0x48a7, 0x1, 0x0);
        gbc.writeMem(0x68d6, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd599, gbc.sp());
        EXPECT(0x68d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0108
        gbc.setState(0xb5db, 0xd2e2, 0x5b20, 0x4c5b, 0x5c8a, 0xd1a6, 0x0, 0x1);
        gbc.writeMem(0xb5db, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd2e2, gbc.sp());
        EXPECT(0xb5dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb5db));
        // 9F 0109
        gbc.setState(0xbbb8, 0x8756, 0xbec0, 0xe1d0, 0x46b6, 0x3b6f, 0x1, 0x1);
        gbc.writeMem(0xbbb8, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8756, gbc.sp());
        EXPECT(0xbbb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbbb8));
        // 9F 010A
        gbc.setState(0x3c5a, 0x29c, 0x30e0, 0x6236, 0x9d38, 0x62c6, 0x0, 0x1);
        gbc.writeMem(0x3c5a, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x29c, gbc.sp());
        EXPECT(0x3c5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 010B
        gbc.setState(0x8cd2, 0x226f, 0xc6c0, 0xbb65, 0x7ab1, 0x517f, 0x0, 0x1);
        gbc.writeMem(0x8cd2, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x226f, gbc.sp());
        EXPECT(0x8cd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8cd2));
        // 9F 010C
        gbc.setState(0x76e1, 0x81d8, 0xf180, 0xb0ab, 0xde6c, 0x5e9d, 0x0, 0x0);
        gbc.writeMem(0x76e1, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x81d8, gbc.sp());
        EXPECT(0x76e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 010D
        gbc.setState(0x1d70, 0x86a3, 0x1b0, 0xd8c5, 0x55a6, 0xeca9, 0x0, 0x0);
        gbc.writeMem(0x1d70, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x86a3, gbc.sp());
        EXPECT(0x1d71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 010E
        gbc.setState(0x3543, 0x21c5, 0xe170, 0x1bef, 0xfd5f, 0x46d1, 0x0, 0x1);
        gbc.writeMem(0x3543, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x21c5, gbc.sp());
        EXPECT(0x3544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 010F
        gbc.setState(0x793a, 0x5340, 0x3440, 0xaae1, 0x258e, 0xfef3, 0x0, 0x1);
        gbc.writeMem(0x793a, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5340, gbc.sp());
        EXPECT(0x793b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0110
        gbc.setState(0x3ebb, 0xd6de, 0xc0, 0xec48, 0xa960, 0x8ac6, 0x1, 0x1);
        gbc.writeMem(0x3ebb, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd6de, gbc.sp());
        EXPECT(0x3ebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0111
        gbc.setState(0x3d07, 0xc326, 0x31c0, 0xa48c, 0x83e3, 0x4e55, 0x1, 0x1);
        gbc.writeMem(0x3d07, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc326, gbc.sp());
        EXPECT(0x3d08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0112
        gbc.setState(0x7cd3, 0xe669, 0x68a0, 0x51b7, 0x9b29, 0xe1a0, 0x1, 0x1);
        gbc.writeMem(0x7cd3, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe669, gbc.sp());
        EXPECT(0x7cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0113
        gbc.setState(0x53dd, 0x3538, 0xc030, 0x8bdb, 0x2d4e, 0x982c, 0x1, 0x1);
        gbc.writeMem(0x53dd, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3538, gbc.sp());
        EXPECT(0x53de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0114
        gbc.setState(0x71a0, 0xe568, 0xc330, 0x7d4c, 0xc57c, 0xd450, 0x0, 0x1);
        gbc.writeMem(0x71a0, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe568, gbc.sp());
        EXPECT(0x71a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0115
        gbc.setState(0x5364, 0x2dce, 0x6cf0, 0xc220, 0x701f, 0x3336, 0x1, 0x0);
        gbc.writeMem(0x5364, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2dce, gbc.sp());
        EXPECT(0x5365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0116
        gbc.setState(0x9e9f, 0xd775, 0xbab0, 0x6fd8, 0xcec2, 0x42f4, 0x1, 0x1);
        gbc.writeMem(0x9e9f, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd775, gbc.sp());
        EXPECT(0x9ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9e9f));
        // 9F 0117
        gbc.setState(0xe7ee, 0x5245, 0xb150, 0xb58a, 0xee78, 0xa5f7, 0x0, 0x1);
        gbc.writeMem(0xe7ee, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5245, gbc.sp());
        EXPECT(0xe7ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe7ee));
        // 9F 0118
        gbc.setState(0xec92, 0x4469, 0x48f0, 0x89d3, 0x39bf, 0x1711, 0x0, 0x0);
        gbc.writeMem(0xec92, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4469, gbc.sp());
        EXPECT(0xec93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xec92));
        // 9F 0119
        gbc.setState(0xc9e8, 0xa009, 0x74b0, 0xe891, 0x5f4d, 0x7967, 0x0, 0x0);
        gbc.writeMem(0xc9e8, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa009, gbc.sp());
        EXPECT(0xc9e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc9e8));
        // 9F 011A
        gbc.setState(0x8254, 0xb90b, 0x8e10, 0x700c, 0xa423, 0xdf47, 0x1, 0x1);
        gbc.writeMem(0x8254, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb90b, gbc.sp());
        EXPECT(0x8255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8254));
        // 9F 011B
        gbc.setState(0xaae5, 0xacbb, 0x9a40, 0x19be, 0xffd3, 0x5d75, 0x1, 0x0);
        gbc.writeMem(0xaae5, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xacbb, gbc.sp());
        EXPECT(0xaae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xaae5));
        // 9F 011C
        gbc.setState(0xe175, 0xab44, 0x6a70, 0xeffd, 0x41ca, 0xdcd1, 0x1, 0x1);
        gbc.writeMem(0xe175, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xab44, gbc.sp());
        EXPECT(0xe176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe175));
        // 9F 011D
        gbc.setState(0xcdae, 0xfdfc, 0x5c70, 0x29c2, 0x53c5, 0xf7b, 0x0, 0x1);
        gbc.writeMem(0xcdae, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfdfc, gbc.sp());
        EXPECT(0xcdaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcdae));
        // 9F 011E
        gbc.setState(0xd9ee, 0xc49a, 0x2170, 0xdcd8, 0xd86b, 0x28cc, 0x1, 0x0);
        gbc.writeMem(0xd9ee, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc49a, gbc.sp());
        EXPECT(0xd9ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd9ee));
        // 9F 011F
        gbc.setState(0x4c0, 0xa318, 0xa780, 0x44b6, 0x1bb0, 0x5aa8, 0x1, 0x0);
        gbc.writeMem(0x4c0, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa318, gbc.sp());
        EXPECT(0x4c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0120
        gbc.setState(0x18d0, 0x84f, 0x54d0, 0x6fb5, 0x3654, 0xb59d, 0x0, 0x0);
        gbc.writeMem(0x18d0, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x84f, gbc.sp());
        EXPECT(0x18d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0121
        gbc.setState(0xa336, 0x24a6, 0x1600, 0xdb72, 0x3c0b, 0xb424, 0x1, 0x1);
        gbc.writeMem(0xa336, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x24a6, gbc.sp());
        EXPECT(0xa337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa336));
        // 9F 0122
        gbc.setState(0x1e57, 0xa4a9, 0x5280, 0xdbb7, 0x2320, 0x6a1a, 0x0, 0x0);
        gbc.writeMem(0x1e57, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa4a9, gbc.sp());
        EXPECT(0x1e58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0123
        gbc.setState(0x7bb6, 0x7d79, 0x9ce0, 0xf47f, 0xedef, 0x346d, 0x0, 0x0);
        gbc.writeMem(0x7bb6, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7d79, gbc.sp());
        EXPECT(0x7bb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0124
        gbc.setState(0x3cb2, 0xf699, 0xd760, 0x2a3e, 0xd677, 0xaf7b, 0x1, 0x0);
        gbc.writeMem(0x3cb2, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf699, gbc.sp());
        EXPECT(0x3cb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0125
        gbc.setState(0x55ab, 0x7a20, 0x8760, 0xc4d1, 0xf480, 0x6e0f, 0x0, 0x1);
        gbc.writeMem(0x55ab, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7a20, gbc.sp());
        EXPECT(0x55ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0126
        gbc.setState(0x5f92, 0x560f, 0x7580, 0xe700, 0x7971, 0xa3a3, 0x0, 0x1);
        gbc.writeMem(0x5f92, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x560f, gbc.sp());
        EXPECT(0x5f93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0127
        gbc.setState(0x4356, 0x878e, 0x7bc0, 0xfeb5, 0x241e, 0x7229, 0x1, 0x0);
        gbc.writeMem(0x4356, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x878e, gbc.sp());
        EXPECT(0x4357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0128
        gbc.setState(0x3925, 0xecd1, 0x9de0, 0xb401, 0xcc5a, 0x9dc1, 0x1, 0x0);
        gbc.writeMem(0x3925, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xecd1, gbc.sp());
        EXPECT(0x3926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0129
        gbc.setState(0x8e9c, 0x567b, 0x4900, 0xfd78, 0x1223, 0x4055, 0x0, 0x1);
        gbc.writeMem(0x8e9c, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x567b, gbc.sp());
        EXPECT(0x8e9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8e9c));
        // 9F 012A
        gbc.setState(0x8a5d, 0x8123, 0x8cc0, 0xb97d, 0xc0fa, 0xe0e2, 0x0, 0x1);
        gbc.writeMem(0x8a5d, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8123, gbc.sp());
        EXPECT(0x8a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8a5d));
        // 9F 012B
        gbc.setState(0x1f60, 0xf64d, 0xb060, 0xfb6c, 0xcb7d, 0xa80a, 0x1, 0x0);
        gbc.writeMem(0x1f60, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf64d, gbc.sp());
        EXPECT(0x1f61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 012C
        gbc.setState(0x64a3, 0xbe45, 0xc550, 0x2e40, 0x840a, 0xbece, 0x0, 0x1);
        gbc.writeMem(0x64a3, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xbe45, gbc.sp());
        EXPECT(0x64a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 012D
        gbc.setState(0x9fa4, 0xa8b5, 0x32a0, 0x503c, 0xed40, 0xea4, 0x1, 0x1);
        gbc.writeMem(0x9fa4, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa8b5, gbc.sp());
        EXPECT(0x9fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9fa4));
        // 9F 012E
        gbc.setState(0x1a9a, 0x415d, 0xca60, 0xd36, 0x5aa7, 0xeece, 0x1, 0x0);
        gbc.writeMem(0x1a9a, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x415d, gbc.sp());
        EXPECT(0x1a9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 012F
        gbc.setState(0x3580, 0xba45, 0x550, 0x36a9, 0x9e02, 0x9da2, 0x0, 0x0);
        gbc.writeMem(0x3580, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xba45, gbc.sp());
        EXPECT(0x3581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0130
        gbc.setState(0x9734, 0xa58e, 0xf730, 0x79d2, 0x4b99, 0x2066, 0x1, 0x0);
        gbc.writeMem(0x9734, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa58e, gbc.sp());
        EXPECT(0x9735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9734));
        // 9F 0131
        gbc.setState(0x993b, 0xcf80, 0xf9d0, 0xb7d3, 0xf1d3, 0x946c, 0x1, 0x0);
        gbc.writeMem(0x993b, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcf80, gbc.sp());
        EXPECT(0x993c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x993b));
        // 9F 0132
        gbc.setState(0x2e59, 0xa582, 0x7290, 0xbd59, 0xc979, 0x4df5, 0x1, 0x1);
        gbc.writeMem(0x2e59, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa582, gbc.sp());
        EXPECT(0x2e5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0133
        gbc.setState(0x4f0, 0xe91a, 0xae0, 0xcff4, 0xad1b, 0x4e82, 0x1, 0x1);
        gbc.writeMem(0x4f0, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe91a, gbc.sp());
        EXPECT(0x4f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0134
        gbc.setState(0x274f, 0xc9be, 0xb650, 0x16d9, 0x3e0c, 0xebb0, 0x1, 0x0);
        gbc.writeMem(0x274f, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc9be, gbc.sp());
        EXPECT(0x2750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0135
        gbc.setState(0x8b3e, 0x24a9, 0x830, 0x199c, 0xbafc, 0x7d2c, 0x0, 0x0);
        gbc.writeMem(0x8b3e, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x24a9, gbc.sp());
        EXPECT(0x8b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8b3e));
        // 9F 0137
        gbc.setState(0x1325, 0x8014, 0x49a0, 0xf3a2, 0x4b16, 0x1d25, 0x0, 0x1);
        gbc.writeMem(0x1325, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8014, gbc.sp());
        EXPECT(0x1326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0139
        gbc.setState(0x7ac3, 0xd61f, 0x5030, 0x9690, 0xfce9, 0x4b48, 0x0, 0x1);
        gbc.writeMem(0x7ac3, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd61f, gbc.sp());
        EXPECT(0x7ac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 013A
        gbc.setState(0xba2e, 0xcb32, 0xab0, 0x1a7a, 0x31f7, 0xffd9, 0x1, 0x1);
        gbc.writeMem(0xba2e, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xcb32, gbc.sp());
        EXPECT(0xba2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xba2e));
        // 9F 013B
        gbc.setState(0xaba, 0x852f, 0x2480, 0x417a, 0x4954, 0xdec9, 0x0, 0x1);
        gbc.writeMem(0xaba, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x852f, gbc.sp());
        EXPECT(0xabb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 013C
        gbc.setState(0x66d7, 0xceb9, 0x31b0, 0x5a94, 0x4770, 0xbc33, 0x1, 0x0);
        gbc.writeMem(0x66d7, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xceb9, gbc.sp());
        EXPECT(0x66d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 013D
        gbc.setState(0x743e, 0x201d, 0x1f20, 0x43b5, 0x3650, 0x147c, 0x1, 0x0);
        gbc.writeMem(0x743e, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x201d, gbc.sp());
        EXPECT(0x743f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 013E
        gbc.setState(0x1daf, 0xdef7, 0x7fc0, 0x364, 0xe63a, 0x6538, 0x0, 0x0);
        gbc.writeMem(0x1daf, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xdef7, gbc.sp());
        EXPECT(0x1db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0140
        gbc.setState(0x2d87, 0x2ec9, 0x4580, 0xeef0, 0x8a3f, 0xfc41, 0x1, 0x1);
        gbc.writeMem(0x2d87, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2ec9, gbc.sp());
        EXPECT(0x2d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0141
        gbc.setState(0x32d6, 0xc4de, 0x18f0, 0x3e07, 0xfae, 0xe08e, 0x1, 0x1);
        gbc.writeMem(0x32d6, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc4de, gbc.sp());
        EXPECT(0x32d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0142
        gbc.setState(0x87f0, 0xefb5, 0x45d0, 0x708a, 0x5eaa, 0xe169, 0x1, 0x1);
        gbc.writeMem(0x87f0, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xefb5, gbc.sp());
        EXPECT(0x87f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x87f0));
        // 9F 0143
        gbc.setState(0xb031, 0x66a2, 0x3550, 0x5d9d, 0x4d54, 0x275d, 0x1, 0x0);
        gbc.writeMem(0xb031, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x66a2, gbc.sp());
        EXPECT(0xb032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb031));
        // 9F 0144
        gbc.setState(0xcb70, 0x4856, 0xb680, 0x76f4, 0xead1, 0xcb35, 0x0, 0x1);
        gbc.writeMem(0xcb70, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4856, gbc.sp());
        EXPECT(0xcb71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcb70));
        // 9F 0145
        gbc.setState(0xcaa3, 0x7027, 0x73c0, 0x75fa, 0xaab6, 0x39c2, 0x0, 0x1);
        gbc.writeMem(0xcaa3, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7027, gbc.sp());
        EXPECT(0xcaa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcaa3));
        // 9F 0146
        gbc.setState(0x69ff, 0x8602, 0x2570, 0x7326, 0x5e41, 0xc6b8, 0x1, 0x0);
        gbc.writeMem(0x69ff, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8602, gbc.sp());
        EXPECT(0x6a00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0148
        gbc.setState(0x90e8, 0x1b5e, 0xcb90, 0x4b1b, 0x39cc, 0xe1ad, 0x1, 0x0);
        gbc.writeMem(0x90e8, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1b5e, gbc.sp());
        EXPECT(0x90e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x90e8));
        // 9F 0149
        gbc.setState(0x56bd, 0xf532, 0x2210, 0xde43, 0xecff, 0xf336, 0x1, 0x0);
        gbc.writeMem(0x56bd, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf532, gbc.sp());
        EXPECT(0x56be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 014A
        gbc.setState(0x4732, 0x7a81, 0xdc80, 0xbb73, 0xd6d9, 0x9e5b, 0x0, 0x1);
        gbc.writeMem(0x4732, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7a81, gbc.sp());
        EXPECT(0x4733, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 014B
        gbc.setState(0x617a, 0x3376, 0xeae0, 0xd342, 0x7e90, 0xe3cb, 0x1, 0x1);
        gbc.writeMem(0x617a, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3376, gbc.sp());
        EXPECT(0x617b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 014C
        gbc.setState(0x333b, 0xae77, 0x3e00, 0x7c1e, 0xd6bf, 0x443f, 0x1, 0x0);
        gbc.writeMem(0x333b, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xae77, gbc.sp());
        EXPECT(0x333c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 014D
        gbc.setState(0x875d, 0xb6ad, 0x9f40, 0x10de, 0x7226, 0xf285, 0x1, 0x1);
        gbc.writeMem(0x875d, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb6ad, gbc.sp());
        EXPECT(0x875e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x875d));
        // 9F 014E
        gbc.setState(0x7f5c, 0x8ca5, 0x9090, 0xafc1, 0xe0cf, 0x3d9c, 0x0, 0x0);
        gbc.writeMem(0x7f5c, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8ca5, gbc.sp());
        EXPECT(0x7f5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 014F
        gbc.setState(0x9fe, 0x4d6e, 0xeb60, 0xf7b7, 0xa26b, 0x4f62, 0x0, 0x0);
        gbc.writeMem(0x9fe, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4d6e, gbc.sp());
        EXPECT(0x9ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0150
        gbc.setState(0x1024, 0x1d6c, 0xee30, 0x509b, 0xd402, 0x8ff9, 0x1, 0x1);
        gbc.writeMem(0x1024, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1d6c, gbc.sp());
        EXPECT(0x1025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0151
        gbc.setState(0x5118, 0x99d3, 0xbc50, 0x632, 0x63ff, 0xa6fd, 0x0, 0x0);
        gbc.writeMem(0x5118, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x99d3, gbc.sp());
        EXPECT(0x5119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0152
        gbc.setState(0x9b48, 0x339d, 0xbfb0, 0xfbab, 0xed05, 0x1088, 0x1, 0x0);
        gbc.writeMem(0x9b48, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x339d, gbc.sp());
        EXPECT(0x9b49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9b48));
        // 9F 0153
        gbc.setState(0x529a, 0x7298, 0x6ae0, 0x6cfa, 0x8f43, 0x1894, 0x1, 0x1);
        gbc.writeMem(0x529a, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7298, gbc.sp());
        EXPECT(0x529b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0154
        gbc.setState(0x26f8, 0xc28e, 0x6870, 0x26b8, 0x595f, 0x3c2c, 0x1, 0x0);
        gbc.writeMem(0x26f8, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc28e, gbc.sp());
        EXPECT(0x26f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0155
        gbc.setState(0x37d7, 0x907e, 0x6e20, 0x63c0, 0xab68, 0xe64, 0x1, 0x1);
        gbc.writeMem(0x37d7, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x907e, gbc.sp());
        EXPECT(0x37d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0156
        gbc.setState(0x427a, 0xd951, 0xcb60, 0x3497, 0x388a, 0x4d3a, 0x0, 0x1);
        gbc.writeMem(0x427a, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd951, gbc.sp());
        EXPECT(0x427b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0157
        gbc.setState(0xe92c, 0x5cb6, 0xc810, 0xbdee, 0x60c9, 0x3da6, 0x1, 0x1);
        gbc.writeMem(0xe92c, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5cb6, gbc.sp());
        EXPECT(0xe92d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe92c));
        // 9F 0158
        gbc.setState(0x7843, 0xe95d, 0x44c0, 0xbc54, 0xe669, 0x378d, 0x1, 0x1);
        gbc.writeMem(0x7843, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe95d, gbc.sp());
        EXPECT(0x7844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0159
        gbc.setState(0x48b8, 0x9dae, 0xe710, 0x135d, 0x9e87, 0x2783, 0x0, 0x1);
        gbc.writeMem(0x48b8, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9dae, gbc.sp());
        EXPECT(0x48b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 015A
        gbc.setState(0x9319, 0x5297, 0x58a0, 0x4c32, 0x3c2d, 0x4dc8, 0x0, 0x0);
        gbc.writeMem(0x9319, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5297, gbc.sp());
        EXPECT(0x931a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9319));
        // 9F 015B
        gbc.setState(0xabd8, 0x11dd, 0xd2a0, 0x1716, 0x2740, 0x2888, 0x1, 0x0);
        gbc.writeMem(0xabd8, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x11dd, gbc.sp());
        EXPECT(0xabd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xabd8));
        // 9F 015C
        gbc.setState(0x87fa, 0x9199, 0x6d50, 0x2445, 0x4957, 0xc1fa, 0x0, 0x0);
        gbc.writeMem(0x87fa, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9199, gbc.sp());
        EXPECT(0x87fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x87fa));
        // 9F 015D
        gbc.setState(0xe785, 0x9d88, 0x3a60, 0xea5c, 0x35e8, 0xd2cd, 0x0, 0x1);
        gbc.writeMem(0xe785, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9d88, gbc.sp());
        EXPECT(0xe786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe785));
        // 9F 015E
        gbc.setState(0xe011, 0xea25, 0x7ea0, 0x133b, 0xc144, 0xa9d6, 0x1, 0x1);
        gbc.writeMem(0xe011, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xea25, gbc.sp());
        EXPECT(0xe012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe011));
        // 9F 015F
        gbc.setState(0x4f91, 0xf84e, 0x89d0, 0x4e06, 0xc10f, 0x862d, 0x1, 0x1);
        gbc.writeMem(0x4f91, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf84e, gbc.sp());
        EXPECT(0x4f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0160
        gbc.setState(0x772c, 0xaa4, 0x30d0, 0x93f0, 0x505e, 0xfd62, 0x1, 0x1);
        gbc.writeMem(0x772c, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xaa4, gbc.sp());
        EXPECT(0x772d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0161
        gbc.setState(0xd84, 0xa03d, 0x19b0, 0x2c97, 0xa638, 0xf9de, 0x1, 0x0);
        gbc.writeMem(0xd84, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa03d, gbc.sp());
        EXPECT(0xd85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0162
        gbc.setState(0xa656, 0x16e3, 0x1490, 0x6467, 0xc403, 0x6188, 0x0, 0x1);
        gbc.writeMem(0xa656, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x16e3, gbc.sp());
        EXPECT(0xa657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa656));
        // 9F 0163
        gbc.setState(0x573, 0x5405, 0xaf00, 0x50e6, 0xd61e, 0x855d, 0x0, 0x0);
        gbc.writeMem(0x573, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5405, gbc.sp());
        EXPECT(0x574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0164
        gbc.setState(0x4e52, 0xf965, 0xe440, 0xfb6f, 0x3b6, 0x5b4, 0x1, 0x0);
        gbc.writeMem(0x4e52, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf965, gbc.sp());
        EXPECT(0x4e53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0165
        gbc.setState(0x6c7b, 0x511, 0x97e0, 0xad11, 0x5d02, 0x8d85, 0x1, 0x0);
        gbc.writeMem(0x6c7b, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x511, gbc.sp());
        EXPECT(0x6c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0166
        gbc.setState(0xe1c1, 0xd7e2, 0xa550, 0x91c3, 0xa358, 0x53b0, 0x1, 0x0);
        gbc.writeMem(0xe1c1, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd7e2, gbc.sp());
        EXPECT(0xe1c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe1c1));
        // 9F 0167
        gbc.setState(0x1f7c, 0xacbf, 0x85c0, 0x4eb6, 0x755a, 0x3583, 0x0, 0x1);
        gbc.writeMem(0x1f7c, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xacbf, gbc.sp());
        EXPECT(0x1f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0168
        gbc.setState(0x9def, 0x58f0, 0x2770, 0xba7b, 0x420f, 0x2fb0, 0x1, 0x1);
        gbc.writeMem(0x9def, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x58f0, gbc.sp());
        EXPECT(0x9df0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9def));
        // 9F 0169
        gbc.setState(0xbb3d, 0x69b2, 0xc5e0, 0x49d0, 0xe8cb, 0xdde4, 0x1, 0x0);
        gbc.writeMem(0xbb3d, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x69b2, gbc.sp());
        EXPECT(0xbb3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbb3d));
        // 9F 016A
        gbc.setState(0x466f, 0x5e4d, 0x13d0, 0x7dd0, 0xc4d9, 0xdac4, 0x1, 0x0);
        gbc.writeMem(0x466f, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5e4d, gbc.sp());
        EXPECT(0x4670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 016B
        gbc.setState(0x8c4, 0xf08b, 0x1c30, 0xb8b0, 0xcd34, 0xa875, 0x1, 0x1);
        gbc.writeMem(0x8c4, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf08b, gbc.sp());
        EXPECT(0x8c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 016C
        gbc.setState(0xbacb, 0x758b, 0x6330, 0x344d, 0xc815, 0xbdab, 0x0, 0x1);
        gbc.writeMem(0xbacb, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x758b, gbc.sp());
        EXPECT(0xbacc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbacb));
        // 9F 016D
        gbc.setState(0xc8ee, 0x926b, 0x8bb0, 0x2857, 0xce5e, 0x5374, 0x0, 0x1);
        gbc.writeMem(0xc8ee, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x926b, gbc.sp());
        EXPECT(0xc8ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc8ee));
        // 9F 016E
        gbc.setState(0x25dd, 0xc8b0, 0xc8b0, 0xd80c, 0x5fd0, 0xdd86, 0x0, 0x0);
        gbc.writeMem(0x25dd, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc8b0, gbc.sp());
        EXPECT(0x25de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 016F
        gbc.setState(0x11a7, 0x2f48, 0x1c70, 0xafc1, 0x3398, 0x9b1, 0x1, 0x1);
        gbc.writeMem(0x11a7, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2f48, gbc.sp());
        EXPECT(0x11a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0170
        gbc.setState(0xacff, 0x489b, 0xa4d0, 0xb432, 0x65a1, 0x3eb4, 0x1, 0x0);
        gbc.writeMem(0xacff, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x489b, gbc.sp());
        EXPECT(0xad00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xacff));
        // 9F 0171
        gbc.setState(0x185c, 0x4c2b, 0x18b0, 0xe201, 0x7c1, 0xd738, 0x0, 0x1);
        gbc.writeMem(0x185c, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4c2b, gbc.sp());
        EXPECT(0x185d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0172
        gbc.setState(0x2ea5, 0x5ddb, 0x9620, 0x2518, 0x69d9, 0xb, 0x0, 0x1);
        gbc.writeMem(0x2ea5, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5ddb, gbc.sp());
        EXPECT(0x2ea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0173
        gbc.setState(0x388a, 0x398b, 0x4540, 0x3132, 0x337b, 0x4de9, 0x0, 0x0);
        gbc.writeMem(0x388a, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x398b, gbc.sp());
        EXPECT(0x388b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0174
        gbc.setState(0x5b81, 0xea93, 0xf750, 0x74ed, 0x43f, 0x90ec, 0x0, 0x0);
        gbc.writeMem(0x5b81, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xea93, gbc.sp());
        EXPECT(0x5b82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0175
        gbc.setState(0x1fde, 0xec06, 0xb300, 0x9ba6, 0x5548, 0x4676, 0x0, 0x1);
        gbc.writeMem(0x1fde, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xec06, gbc.sp());
        EXPECT(0x1fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0176
        gbc.setState(0x7d42, 0x2dc, 0x7850, 0xe568, 0xda23, 0x1367, 0x0, 0x1);
        gbc.writeMem(0x7d42, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2dc, gbc.sp());
        EXPECT(0x7d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0177
        gbc.setState(0xbe87, 0x3cfc, 0xd140, 0x7a8d, 0xa511, 0x3cf4, 0x0, 0x0);
        gbc.writeMem(0xbe87, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3cfc, gbc.sp());
        EXPECT(0xbe88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbe87));
        // 9F 0178
        gbc.setState(0x962a, 0x22d9, 0x38b0, 0x4ac6, 0x9104, 0xbbf7, 0x0, 0x1);
        gbc.writeMem(0x962a, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x22d9, gbc.sp());
        EXPECT(0x962b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x962a));
        // 9F 0179
        gbc.setState(0xe6f1, 0x18c5, 0x9d90, 0x530, 0xfbf, 0xe50a, 0x0, 0x1);
        gbc.writeMem(0xe6f1, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x18c5, gbc.sp());
        EXPECT(0xe6f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe6f1));
        // 9F 017A
        gbc.setState(0xa35b, 0xb7d9, 0x3120, 0xd259, 0x51d2, 0x6d0f, 0x0, 0x1);
        gbc.writeMem(0xa35b, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb7d9, gbc.sp());
        EXPECT(0xa35c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa35b));
        // 9F 017B
        gbc.setState(0x197a, 0x1156, 0x3d0, 0x3a2a, 0x613f, 0x5b15, 0x0, 0x1);
        gbc.writeMem(0x197a, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1156, gbc.sp());
        EXPECT(0x197b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 017C
        gbc.setState(0x9c19, 0xb9ab, 0x8dd0, 0x191e, 0xfe5b, 0x7f94, 0x1, 0x0);
        gbc.writeMem(0x9c19, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb9ab, gbc.sp());
        EXPECT(0x9c1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9c19));
        // 9F 017E
        gbc.setState(0x7da5, 0x9199, 0x4120, 0x9343, 0xd10, 0x1db, 0x0, 0x1);
        gbc.writeMem(0x7da5, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9199, gbc.sp());
        EXPECT(0x7da6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 017F
        gbc.setState(0x9972, 0x1326, 0x59a0, 0x5699, 0x265e, 0x15f0, 0x1, 0x0);
        gbc.writeMem(0x9972, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1326, gbc.sp());
        EXPECT(0x9973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9972));
        // 9F 0180
        gbc.setState(0x25c4, 0xb260, 0x3b60, 0x5199, 0x3f95, 0x47fc, 0x0, 0x0);
        gbc.writeMem(0x25c4, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb260, gbc.sp());
        EXPECT(0x25c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0181
        gbc.setState(0xc9cb, 0x7557, 0x4ba0, 0x8d2a, 0xbeb8, 0xf14a, 0x0, 0x0);
        gbc.writeMem(0xc9cb, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7557, gbc.sp());
        EXPECT(0xc9cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc9cb));
        // 9F 0182
        gbc.setState(0xcd68, 0x4855, 0xb990, 0x6f0e, 0x5dff, 0x50cb, 0x0, 0x1);
        gbc.writeMem(0xcd68, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4855, gbc.sp());
        EXPECT(0xcd69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcd68));
        // 9F 0183
        gbc.setState(0xc480, 0x820d, 0x780, 0xcf3e, 0xade9, 0x153, 0x0, 0x0);
        gbc.writeMem(0xc480, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x820d, gbc.sp());
        EXPECT(0xc481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc480));
        // 9F 0184
        gbc.setState(0x4fbb, 0x9446, 0x8d0, 0x9b6a, 0xd15f, 0x183d, 0x1, 0x0);
        gbc.writeMem(0x4fbb, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9446, gbc.sp());
        EXPECT(0x4fbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0185
        gbc.setState(0xb569, 0x19aa, 0xc6d0, 0x4bf0, 0xce13, 0x2309, 0x0, 0x1);
        gbc.writeMem(0xb569, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x19aa, gbc.sp());
        EXPECT(0xb56a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb569));
        // 9F 0186
        gbc.setState(0x4baa, 0xe0ee, 0xbe80, 0x3858, 0x6d07, 0xd376, 0x1, 0x1);
        gbc.writeMem(0x4baa, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe0ee, gbc.sp());
        EXPECT(0x4bab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0187
        gbc.setState(0xbc22, 0xb08c, 0x6e60, 0xe39d, 0x6fc1, 0x3bf8, 0x0, 0x1);
        gbc.writeMem(0xbc22, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb08c, gbc.sp());
        EXPECT(0xbc23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbc22));
        // 9F 0188
        gbc.setState(0x2c6e, 0xef6d, 0xaa0, 0xb115, 0xbf7e, 0xe666, 0x1, 0x0);
        gbc.writeMem(0x2c6e, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xef6d, gbc.sp());
        EXPECT(0x2c6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0189
        gbc.setState(0x941d, 0x8a37, 0xa830, 0x7878, 0x6c82, 0x49c1, 0x1, 0x0);
        gbc.writeMem(0x941d, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8a37, gbc.sp());
        EXPECT(0x941e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x941d));
        // 9F 018A
        gbc.setState(0x2d96, 0xba5a, 0x1fe0, 0xcbf3, 0xfcb8, 0xfdb4, 0x0, 0x0);
        gbc.writeMem(0x2d96, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xba5a, gbc.sp());
        EXPECT(0x2d97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 018B
        gbc.setState(0x946d, 0x35b3, 0xded0, 0x3498, 0x6a6e, 0xc98e, 0x1, 0x1);
        gbc.writeMem(0x946d, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x35b3, gbc.sp());
        EXPECT(0x946e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x946d));
        // 9F 018C
        gbc.setState(0x3644, 0xbecb, 0xed0, 0x6d5a, 0xdf44, 0xeae6, 0x0, 0x0);
        gbc.writeMem(0x3644, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbecb, gbc.sp());
        EXPECT(0x3645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 018E
        gbc.setState(0xee82, 0x5f59, 0x45f0, 0x99f, 0x34ca, 0x3b63, 0x0, 0x1);
        gbc.writeMem(0xee82, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5f59, gbc.sp());
        EXPECT(0xee83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xee82));
        // 9F 018F
        gbc.setState(0x6282, 0xb7d9, 0x60a0, 0xb9f3, 0xac3f, 0xaeae, 0x0, 0x0);
        gbc.writeMem(0x6282, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb7d9, gbc.sp());
        EXPECT(0x6283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0190
        gbc.setState(0x6386, 0x1417, 0xda80, 0x62ec, 0xdff6, 0x6b4, 0x1, 0x1);
        gbc.writeMem(0x6386, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1417, gbc.sp());
        EXPECT(0x6387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0191
        gbc.setState(0xbf30, 0x5d09, 0x2ea0, 0x1e8c, 0x7a6b, 0xe727, 0x1, 0x0);
        gbc.writeMem(0xbf30, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5d09, gbc.sp());
        EXPECT(0xbf31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbf30));
        // 9F 0192
        gbc.setState(0xaecb, 0x407c, 0x80f0, 0x6f91, 0x1150, 0x3bfb, 0x1, 0x1);
        gbc.writeMem(0xaecb, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x407c, gbc.sp());
        EXPECT(0xaecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xaecb));
        // 9F 0193
        gbc.setState(0x6f31, 0xa52, 0x6130, 0x3d2a, 0xdf3f, 0xd3e2, 0x1, 0x1);
        gbc.writeMem(0x6f31, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa52, gbc.sp());
        EXPECT(0x6f32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0194
        gbc.setState(0x4f09, 0x1bd8, 0xa250, 0xbc7a, 0x3605, 0x5094, 0x1, 0x0);
        gbc.writeMem(0x4f09, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1bd8, gbc.sp());
        EXPECT(0x4f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0196
        gbc.setState(0x4d54, 0x8498, 0x2050, 0x342d, 0x4a57, 0x2c2c, 0x0, 0x0);
        gbc.writeMem(0x4d54, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8498, gbc.sp());
        EXPECT(0x4d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0197
        gbc.setState(0xa1fa, 0x11d1, 0xa60, 0xc438, 0x3d75, 0x824b, 0x1, 0x1);
        gbc.writeMem(0xa1fa, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x11d1, gbc.sp());
        EXPECT(0xa1fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa1fa));
        // 9F 0198
        gbc.setState(0x3a83, 0x7fa, 0x5a80, 0xedd1, 0xb3f7, 0xf7a2, 0x1, 0x1);
        gbc.writeMem(0x3a83, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7fa, gbc.sp());
        EXPECT(0x3a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0199
        gbc.setState(0xd26, 0xfc16, 0x6560, 0x6271, 0xf22f, 0xc2d8, 0x1, 0x0);
        gbc.writeMem(0xd26, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xfc16, gbc.sp());
        EXPECT(0xd27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 019A
        gbc.setState(0xffd, 0xe106, 0xb890, 0xce38, 0xe54d, 0xa7a, 0x0, 0x1);
        gbc.writeMem(0xffd, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe106, gbc.sp());
        EXPECT(0xffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 019B
        gbc.setState(0x709, 0xa72d, 0x7b0, 0xfde2, 0x1cf6, 0x2198, 0x1, 0x1);
        gbc.writeMem(0x709, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa72d, gbc.sp());
        EXPECT(0x70a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 019D
        gbc.setState(0xb128, 0x6815, 0xd7a0, 0xcd31, 0x6780, 0x2e55, 0x1, 0x0);
        gbc.writeMem(0xb128, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6815, gbc.sp());
        EXPECT(0xb129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb128));
        // 9F 019E
        gbc.setState(0x1ed, 0xb563, 0xb390, 0x2945, 0xa2a3, 0xdea4, 0x0, 0x0);
        gbc.writeMem(0x1ed, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb563, gbc.sp());
        EXPECT(0x1ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 019F
        gbc.setState(0x45e0, 0x9e39, 0xd4f0, 0xef4e, 0x3461, 0x7336, 0x1, 0x0);
        gbc.writeMem(0x45e0, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9e39, gbc.sp());
        EXPECT(0x45e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 01A0
        gbc.setState(0x52e9, 0x3d56, 0xa070, 0x86d0, 0x22c9, 0x94bd, 0x0, 0x1);
        gbc.writeMem(0x52e9, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3d56, gbc.sp());
        EXPECT(0x52ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 01A1
        gbc.setState(0xc7ac, 0x8bf9, 0x1730, 0x87b4, 0x1fe7, 0x6ae4, 0x1, 0x0);
        gbc.writeMem(0xc7ac, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8bf9, gbc.sp());
        EXPECT(0xc7ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc7ac));
        // 9F 01A2
        gbc.setState(0x5b11, 0x30dc, 0x1ad0, 0xed92, 0xcecd, 0xcdb6, 0x1, 0x1);
        gbc.writeMem(0x5b11, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x30dc, gbc.sp());
        EXPECT(0x5b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 01A3
        gbc.setState(0x7167, 0x96e1, 0xa590, 0xa0b9, 0x56f1, 0x60b1, 0x0, 0x1);
        gbc.writeMem(0x7167, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x96e1, gbc.sp());
        EXPECT(0x7168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 01A4
        gbc.setState(0xacd0, 0x18c8, 0x2170, 0xf51, 0x66fb, 0x9ed7, 0x1, 0x1);
        gbc.writeMem(0xacd0, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x18c8, gbc.sp());
        EXPECT(0xacd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xacd0));
        // 9F 01A5
        gbc.setState(0x4bba, 0xe416, 0x8680, 0xb3e5, 0x128c, 0x64f8, 0x0, 0x1);
        gbc.writeMem(0x4bba, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe416, gbc.sp());
        EXPECT(0x4bbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01A6
        gbc.setState(0xba3f, 0x1828, 0x60a0, 0x59a3, 0x4cb5, 0x1e82, 0x1, 0x1);
        gbc.writeMem(0xba3f, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1828, gbc.sp());
        EXPECT(0xba40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xba3f));
        // 9F 01A7
        gbc.setState(0x113d, 0x764c, 0x200, 0x8a88, 0x271c, 0x4154, 0x0, 0x1);
        gbc.writeMem(0x113d, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x764c, gbc.sp());
        EXPECT(0x113e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01A8
        gbc.setState(0x1535, 0x9392, 0x7160, 0x7592, 0x5735, 0x7955, 0x1, 0x0);
        gbc.writeMem(0x1535, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9392, gbc.sp());
        EXPECT(0x1536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01A9
        gbc.setState(0x1405, 0x2134, 0xd590, 0x3c4e, 0xc74f, 0xc0c3, 0x1, 0x1);
        gbc.writeMem(0x1405, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2134, gbc.sp());
        EXPECT(0x1406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 01AA
        gbc.setState(0x5c73, 0x14d3, 0x2d80, 0x45d6, 0x2684, 0x60a0, 0x1, 0x1);
        gbc.writeMem(0x5c73, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x14d3, gbc.sp());
        EXPECT(0x5c74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01AB
        gbc.setState(0x8bb1, 0x3f26, 0xfc30, 0xa7d4, 0xd435, 0x5da0, 0x1, 0x0);
        gbc.writeMem(0x8bb1, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3f26, gbc.sp());
        EXPECT(0x8bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8bb1));
        // 9F 01AC
        gbc.setState(0xd2ee, 0x4b8f, 0x1dc0, 0xef4, 0xd14c, 0xc706, 0x0, 0x1);
        gbc.writeMem(0xd2ee, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4b8f, gbc.sp());
        EXPECT(0xd2ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd2ee));
        // 9F 01AD
        gbc.setState(0x7c0c, 0x1a7d, 0xb4a0, 0x5c4, 0x6e83, 0x1df3, 0x1, 0x0);
        gbc.writeMem(0x7c0c, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1a7d, gbc.sp());
        EXPECT(0x7c0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01AE
        gbc.setState(0xd681, 0x8409, 0x9780, 0x595e, 0x1a8, 0x5d3f, 0x1, 0x0);
        gbc.writeMem(0xd681, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8409, gbc.sp());
        EXPECT(0xd682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd681));
        // 9F 01AF
        gbc.setState(0x46f7, 0xac0e, 0xa0f0, 0x7162, 0x4b4d, 0x6e77, 0x0, 0x0);
        gbc.writeMem(0x46f7, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xac0e, gbc.sp());
        EXPECT(0x46f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 01B0
        gbc.setState(0x3c95, 0x2b70, 0x93f0, 0x6ffe, 0xaf8a, 0x1d66, 0x0, 0x0);
        gbc.writeMem(0x3c95, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2b70, gbc.sp());
        EXPECT(0x3c96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 01B1
        gbc.setState(0xcd5, 0x67d5, 0x8d40, 0x1609, 0x1597, 0x61ca, 0x0, 0x1);
        gbc.writeMem(0xcd5, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x67d5, gbc.sp());
        EXPECT(0xcd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01B2
        gbc.setState(0x93f, 0x5bb2, 0x9db0, 0x7043, 0xc311, 0x1f5d, 0x0, 0x0);
        gbc.writeMem(0x93f, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5bb2, gbc.sp());
        EXPECT(0x940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 01B4
        gbc.setState(0x150d, 0x7a61, 0x6680, 0xffee, 0x313, 0x20b3, 0x1, 0x1);
        gbc.writeMem(0x150d, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7a61, gbc.sp());
        EXPECT(0x150e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01B5
        gbc.setState(0x455, 0x8dbc, 0x1f00, 0x241e, 0x5a6b, 0x124f, 0x0, 0x0);
        gbc.writeMem(0x455, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8dbc, gbc.sp());
        EXPECT(0x456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01B6
        gbc.setState(0xc92, 0x548b, 0x42b0, 0xb2b6, 0xcd41, 0x9d0c, 0x0, 0x0);
        gbc.writeMem(0xc92, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x548b, gbc.sp());
        EXPECT(0xc93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 01B7
        gbc.setState(0x965a, 0x4527, 0x740, 0xfdbd, 0x2471, 0xe22a, 0x1, 0x1);
        gbc.writeMem(0x965a, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4527, gbc.sp());
        EXPECT(0x965b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x965a));
        // 9F 01B8
        gbc.setState(0x90bd, 0x68ba, 0xc460, 0x8499, 0xade0, 0xd07a, 0x0, 0x0);
        gbc.writeMem(0x90bd, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x68ba, gbc.sp());
        EXPECT(0x90be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x90bd));
        // 9F 01B9
        gbc.setState(0xb1e2, 0xcd53, 0xd4a0, 0xa91b, 0x96ad, 0x332e, 0x0, 0x0);
        gbc.writeMem(0xb1e2, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcd53, gbc.sp());
        EXPECT(0xb1e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb1e2));
        // 9F 01BB
        gbc.setState(0x24fd, 0xff93, 0xa3c0, 0x27f7, 0xc35a, 0x3dfd, 0x0, 0x0);
        gbc.writeMem(0x24fd, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xff93, gbc.sp());
        EXPECT(0x24fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01BC
        gbc.setState(0x1802, 0x677a, 0xccc0, 0xb14f, 0x72a8, 0x8da5, 0x0, 0x0);
        gbc.writeMem(0x1802, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x677a, gbc.sp());
        EXPECT(0x1803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01BD
        gbc.setState(0xbc8f, 0x8185, 0xa820, 0xe286, 0xe780, 0xb8ae, 0x1, 0x1);
        gbc.writeMem(0xbc8f, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8185, gbc.sp());
        EXPECT(0xbc90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbc8f));
        // 9F 01BE
        gbc.setState(0xc78a, 0x15a9, 0xb930, 0x63c2, 0xa1c3, 0x8507, 0x0, 0x1);
        gbc.writeMem(0xc78a, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x15a9, gbc.sp());
        EXPECT(0xc78b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc78a));
        // 9F 01BF
        gbc.setState(0x93e4, 0x72b4, 0x8ce0, 0xea93, 0xdd7c, 0x1f32, 0x0, 0x0);
        gbc.writeMem(0x93e4, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x72b4, gbc.sp());
        EXPECT(0x93e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x93e4));
        // 9F 01C0
        gbc.setState(0xc782, 0xfc12, 0x53b0, 0x6951, 0x8c79, 0x9b6f, 0x0, 0x1);
        gbc.writeMem(0xc782, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xfc12, gbc.sp());
        EXPECT(0xc783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc782));
        // 9F 01C1
        gbc.setState(0xcea2, 0xeeaf, 0xa3d0, 0xa90c, 0x7e75, 0x7acd, 0x0, 0x1);
        gbc.writeMem(0xcea2, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xeeaf, gbc.sp());
        EXPECT(0xcea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcea2));
        // 9F 01C2
        gbc.setState(0xa3d7, 0x819d, 0x90e0, 0x40b, 0x4950, 0x6011, 0x0, 0x0);
        gbc.writeMem(0xa3d7, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x819d, gbc.sp());
        EXPECT(0xa3d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa3d7));
        // 9F 01C3
        gbc.setState(0x3502, 0xba26, 0x8790, 0x1950, 0x578d, 0xc76c, 0x0, 0x0);
        gbc.writeMem(0x3502, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xba26, gbc.sp());
        EXPECT(0x3503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 01C4
        gbc.setState(0xa40e, 0x533, 0xae50, 0x8b9, 0xd349, 0x612d, 0x0, 0x0);
        gbc.writeMem(0xa40e, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x533, gbc.sp());
        EXPECT(0xa40f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa40e));
        // 9F 01C5
        gbc.setState(0x97cd, 0x4e5a, 0x2610, 0x5e4c, 0x2205, 0x774a, 0x1, 0x1);
        gbc.writeMem(0x97cd, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4e5a, gbc.sp());
        EXPECT(0x97ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x97cd));
        // 9F 01C6
        gbc.setState(0xaaf8, 0xfb2b, 0xf3c0, 0x8599, 0x7bb0, 0x88cf, 0x1, 0x0);
        gbc.writeMem(0xaaf8, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xfb2b, gbc.sp());
        EXPECT(0xaaf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xaaf8));
        // 9F 01C7
        gbc.setState(0x22e6, 0x3db4, 0xc6c0, 0xcfb, 0x8865, 0x47c9, 0x1, 0x0);
        gbc.writeMem(0x22e6, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3db4, gbc.sp());
        EXPECT(0x22e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01C8
        gbc.setState(0x9244, 0xe2fb, 0x1620, 0x2651, 0x39aa, 0xdec8, 0x0, 0x0);
        gbc.writeMem(0x9244, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe2fb, gbc.sp());
        EXPECT(0x9245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9244));
        // 9F 01C9
        gbc.setState(0xc76e, 0x2f06, 0x20, 0xe1cc, 0xb3cf, 0x88b2, 0x0, 0x0);
        gbc.writeMem(0xc76e, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2f06, gbc.sp());
        EXPECT(0xc76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc76e));
        // 9F 01CA
        gbc.setState(0xeee3, 0x317f, 0x23a0, 0x9007, 0x600d, 0x2cd3, 0x0, 0x1);
        gbc.writeMem(0xeee3, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x317f, gbc.sp());
        EXPECT(0xeee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xeee3));
        // 9F 01CB
        gbc.setState(0x2063, 0x1bc5, 0x7e10, 0x91e4, 0x3688, 0xa88b, 0x1, 0x0);
        gbc.writeMem(0x2063, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1bc5, gbc.sp());
        EXPECT(0x2064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 01CC
        gbc.setState(0x8909, 0x51a0, 0xe670, 0xf207, 0x267e, 0x56a9, 0x1, 0x0);
        gbc.writeMem(0x8909, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x51a0, gbc.sp());
        EXPECT(0x890a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8909));
        // 9F 01CD
        gbc.setState(0xddb5, 0xe262, 0x4190, 0x161, 0xef96, 0x3681, 0x0, 0x1);
        gbc.writeMem(0xddb5, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe262, gbc.sp());
        EXPECT(0xddb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xddb5));
        // 9F 01CE
        gbc.setState(0x7e64, 0x5ac3, 0xcbd0, 0x3ea2, 0xbf5f, 0x780f, 0x1, 0x0);
        gbc.writeMem(0x7e64, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5ac3, gbc.sp());
        EXPECT(0x7e65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 01CF
        gbc.setState(0x70b7, 0xd15, 0x6630, 0xc2a7, 0x2607, 0x1530, 0x1, 0x1);
        gbc.writeMem(0x70b7, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd15, gbc.sp());
        EXPECT(0x70b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 01D0
        gbc.setState(0x7949, 0x789, 0x63e0, 0x6653, 0xbf2e, 0x1508, 0x1, 0x0);
        gbc.writeMem(0x7949, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x789, gbc.sp());
        EXPECT(0x794a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01D1
        gbc.setState(0x76da, 0xa477, 0xdbc0, 0xc554, 0x5631, 0x25c6, 0x0, 0x0);
        gbc.writeMem(0x76da, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa477, gbc.sp());
        EXPECT(0x76db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01D2
        gbc.setState(0x4958, 0xc8cc, 0xb820, 0x9e0, 0x4386, 0xd1e4, 0x0, 0x1);
        gbc.writeMem(0x4958, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc8cc, gbc.sp());
        EXPECT(0x4959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01D3
        gbc.setState(0x88ed, 0xd965, 0x9f80, 0x7d97, 0x772e, 0xc75a, 0x1, 0x1);
        gbc.writeMem(0x88ed, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd965, gbc.sp());
        EXPECT(0x88ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x88ed));
        // 9F 01D4
        gbc.setState(0x538b, 0xe20, 0x16a0, 0x31ce, 0xf72, 0x26bd, 0x0, 0x0);
        gbc.writeMem(0x538b, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe20, gbc.sp());
        EXPECT(0x538c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01D5
        gbc.setState(0xd6f6, 0x9c53, 0xe430, 0xee89, 0x915, 0x17cd, 0x0, 0x1);
        gbc.writeMem(0xd6f6, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9c53, gbc.sp());
        EXPECT(0xd6f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd6f6));
        // 9F 01D6
        gbc.setState(0x81df, 0xf606, 0xc6b0, 0x295d, 0xdb0d, 0x78d4, 0x0, 0x1);
        gbc.writeMem(0x81df, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf606, gbc.sp());
        EXPECT(0x81e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x81df));
        // 9F 01D7
        gbc.setState(0x2e62, 0x22, 0x4340, 0x753, 0x2b65, 0x915e, 0x1, 0x1);
        gbc.writeMem(0x2e62, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x22, gbc.sp());
        EXPECT(0x2e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01D8
        gbc.setState(0x978b, 0xf3d2, 0xec80, 0x4201, 0x8ce3, 0x851f, 0x0, 0x1);
        gbc.writeMem(0x978b, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf3d2, gbc.sp());
        EXPECT(0x978c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x978b));
        // 9F 01D9
        gbc.setState(0xccb9, 0xf6a8, 0xf630, 0xa54e, 0x4e76, 0x2b47, 0x0, 0x0);
        gbc.writeMem(0xccb9, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf6a8, gbc.sp());
        EXPECT(0xccba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xccb9));
        // 9F 01DA
        gbc.setState(0x732f, 0x205e, 0xe9b0, 0x7836, 0x1f4d, 0xc82b, 0x0, 0x0);
        gbc.writeMem(0x732f, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x205e, gbc.sp());
        EXPECT(0x7330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 01DB
        gbc.setState(0x85ba, 0xe103, 0x80a0, 0x90e5, 0x9b0c, 0x4df9, 0x0, 0x1);
        gbc.writeMem(0x85ba, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe103, gbc.sp());
        EXPECT(0x85bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x85ba));
        // 9F 01DC
        gbc.setState(0x9e60, 0xa96e, 0xd910, 0x191e, 0x36f, 0x1e00, 0x0, 0x1);
        gbc.writeMem(0x9e60, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa96e, gbc.sp());
        EXPECT(0x9e61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9e60));
        // 9F 01DD
        gbc.setState(0xe200, 0x4397, 0x8750, 0x11fa, 0xb525, 0x5fa9, 0x1, 0x0);
        gbc.writeMem(0xe200, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4397, gbc.sp());
        EXPECT(0xe201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe200));
        // 9F 01DE
        gbc.setState(0xdf43, 0xa8e9, 0xa530, 0x1531, 0xe09e, 0x4d0d, 0x1, 0x0);
        gbc.writeMem(0xdf43, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa8e9, gbc.sp());
        EXPECT(0xdf44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xdf43));
        // 9F 01DF
        gbc.setState(0xbdf2, 0x5d43, 0x6230, 0xa416, 0xe33a, 0x577e, 0x0, 0x0);
        gbc.writeMem(0xbdf2, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5d43, gbc.sp());
        EXPECT(0xbdf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbdf2));
        // 9F 01E0
        gbc.setState(0xa077, 0x820a, 0xed60, 0x4b8d, 0xa2bc, 0x90c2, 0x0, 0x0);
        gbc.writeMem(0xa077, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x820a, gbc.sp());
        EXPECT(0xa078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa077));
        // 9F 01E1
        gbc.setState(0xb729, 0x9b27, 0x5280, 0x3747, 0xadb3, 0xd1d9, 0x0, 0x0);
        gbc.writeMem(0xb729, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9b27, gbc.sp());
        EXPECT(0xb72a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb729));
        // 9F 01E3
        gbc.setState(0x168f, 0xf792, 0x5890, 0x3b21, 0xa720, 0xb8e0, 0x0, 0x0);
        gbc.writeMem(0x168f, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf792, gbc.sp());
        EXPECT(0x1690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 01E4
        gbc.setState(0xb6f9, 0x33b3, 0xec40, 0x856, 0xdb92, 0xcc41, 0x1, 0x0);
        gbc.writeMem(0xb6f9, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x33b3, gbc.sp());
        EXPECT(0xb6fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb6f9));
        // 9F 01E5
        gbc.setState(0x32f, 0x77bf, 0xc0d0, 0xdb54, 0x8286, 0xaa3a, 0x0, 0x1);
        gbc.writeMem(0x32f, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x77bf, gbc.sp());
        EXPECT(0x330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 01E6
        gbc.setState(0x808c, 0x3f33, 0x5dd0, 0xc060, 0x3fe1, 0xdcbd, 0x0, 0x0);
        gbc.writeMem(0x808c, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3f33, gbc.sp());
        EXPECT(0x808d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x808c));
        // 9F 01E7
        gbc.setState(0x7a18, 0x3e41, 0xffa0, 0xc48b, 0x88de, 0x993a, 0x1, 0x0);
        gbc.writeMem(0x7a18, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3e41, gbc.sp());
        EXPECT(0x7a19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01E8
        gbc.setState(0xa0d, 0x2da0, 0x5370, 0x601b, 0xd03, 0x8844, 0x1, 0x1);
        gbc.writeMem(0xa0d, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2da0, gbc.sp());
        EXPECT(0xa0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 01E9
        gbc.setState(0x7505, 0xdb0e, 0xcb00, 0x17f9, 0x82e4, 0xa68a, 0x1, 0x1);
        gbc.writeMem(0x7505, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xdb0e, gbc.sp());
        EXPECT(0x7506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01EA
        gbc.setState(0xa99e, 0x6ad5, 0x1e70, 0xe861, 0xf82c, 0x312e, 0x0, 0x0);
        gbc.writeMem(0xa99e, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6ad5, gbc.sp());
        EXPECT(0xa99f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa99e));
        // 9F 01EB
        gbc.setState(0x35b6, 0x783d, 0x4690, 0x6884, 0x3019, 0xe1da, 0x0, 0x1);
        gbc.writeMem(0x35b6, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x783d, gbc.sp());
        EXPECT(0x35b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 01EC
        gbc.setState(0x20f8, 0xfc43, 0x8d50, 0x1d08, 0x9521, 0x2e96, 0x1, 0x0);
        gbc.writeMem(0x20f8, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xfc43, gbc.sp());
        EXPECT(0x20f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 01ED
        gbc.setState(0x9964, 0x4075, 0xff0, 0xe968, 0x39a8, 0x8995, 0x1, 0x1);
        gbc.writeMem(0x9964, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4075, gbc.sp());
        EXPECT(0x9965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9964));
        // 9F 01EF
        gbc.setState(0xa8a5, 0x1014, 0xfe50, 0x9ded, 0x93f0, 0xf49, 0x1, 0x1);
        gbc.writeMem(0xa8a5, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1014, gbc.sp());
        EXPECT(0xa8a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa8a5));
        // 9F 01F0
        gbc.setState(0x3a51, 0x8fec, 0x8f90, 0xb4e7, 0x4dde, 0x3c76, 0x1, 0x1);
        gbc.writeMem(0x3a51, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8fec, gbc.sp());
        EXPECT(0x3a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 01F1
        gbc.setState(0x8218, 0xbdb5, 0xa40, 0xee20, 0xb9e9, 0x8d3, 0x0, 0x0);
        gbc.writeMem(0x8218, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbdb5, gbc.sp());
        EXPECT(0x8219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8218));
        // 9F 01F2
        gbc.setState(0x7d14, 0x49a5, 0x9860, 0x9166, 0xc6f0, 0x15b7, 0x0, 0x1);
        gbc.writeMem(0x7d14, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x49a5, gbc.sp());
        EXPECT(0x7d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01F3
        gbc.setState(0x3965, 0xc7e7, 0x58c0, 0x4c8, 0x9d4, 0x617, 0x1, 0x1);
        gbc.writeMem(0x3965, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc7e7, gbc.sp());
        EXPECT(0x3966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01F4
        gbc.setState(0xc11a, 0x6f2c, 0xe70, 0x9783, 0xf93, 0x8ba8, 0x1, 0x1);
        gbc.writeMem(0xc11a, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6f2c, gbc.sp());
        EXPECT(0xc11b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc11a));
        // 9F 01F5
        gbc.setState(0x488f, 0x29f2, 0x3620, 0x3607, 0x25ec, 0x30ca, 0x0, 0x0);
        gbc.writeMem(0x488f, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x29f2, gbc.sp());
        EXPECT(0x4890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01F6
        gbc.setState(0x7285, 0x243d, 0x6b70, 0x3d2f, 0xe5c7, 0xd503, 0x0, 0x0);
        gbc.writeMem(0x7285, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x243d, gbc.sp());
        EXPECT(0x7286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 01F8
        gbc.setState(0x338c, 0x8217, 0xce70, 0x2b7, 0x805, 0xc299, 0x1, 0x0);
        gbc.writeMem(0x338c, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8217, gbc.sp());
        EXPECT(0x338d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 01F9
        gbc.setState(0x25cc, 0x965a, 0x8980, 0xe1f, 0x932b, 0x1529, 0x0, 0x1);
        gbc.writeMem(0x25cc, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x965a, gbc.sp());
        EXPECT(0x25cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01FA
        gbc.setState(0x3a72, 0xee2b, 0x22e0, 0xa4a, 0x3497, 0x371, 0x0, 0x1);
        gbc.writeMem(0x3a72, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xee2b, gbc.sp());
        EXPECT(0x3a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01FB
        gbc.setState(0xf17, 0xbd2b, 0x47b0, 0xbcd4, 0xab8d, 0xd4a3, 0x1, 0x1);
        gbc.writeMem(0xf17, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbd2b, gbc.sp());
        EXPECT(0xf18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 01FD
        gbc.setState(0xdd84, 0x8b12, 0x39a0, 0xec73, 0x1310, 0x39b0, 0x0, 0x1);
        gbc.writeMem(0xdd84, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8b12, gbc.sp());
        EXPECT(0xdd85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xdd84));
        // 9F 01FE
        gbc.setState(0x355, 0x8f8b, 0xe720, 0x84c4, 0x6a32, 0x4aad, 0x0, 0x1);
        gbc.writeMem(0x355, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8f8b, gbc.sp());
        EXPECT(0x356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 01FF
        gbc.setState(0x1ec7, 0x30bf, 0x9220, 0xf3f3, 0xb292, 0xacb9, 0x1, 0x1);
        gbc.writeMem(0x1ec7, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x30bf, gbc.sp());
        EXPECT(0x1ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0200
        gbc.setState(0x2c08, 0xe589, 0xa330, 0x6cf2, 0xd7b3, 0x3670, 0x1, 0x0);
        gbc.writeMem(0x2c08, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe589, gbc.sp());
        EXPECT(0x2c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0201
        gbc.setState(0x9926, 0xd9b4, 0x23d0, 0x84de, 0xcfab, 0xf20b, 0x0, 0x1);
        gbc.writeMem(0x9926, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd9b4, gbc.sp());
        EXPECT(0x9927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9926));
        // 9F 0202
        gbc.setState(0xdbf, 0x1da6, 0x9be0, 0x921c, 0xe152, 0xa92c, 0x1, 0x0);
        gbc.writeMem(0xdbf, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1da6, gbc.sp());
        EXPECT(0xdc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0204
        gbc.setState(0xd1f6, 0x87dd, 0x6ec0, 0x582d, 0xa482, 0xf560, 0x0, 0x0);
        gbc.writeMem(0xd1f6, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x87dd, gbc.sp());
        EXPECT(0xd1f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd1f6));
        // 9F 0205
        gbc.setState(0x2f0c, 0x8963, 0x2280, 0xfc8a, 0xa73d, 0xe1b5, 0x0, 0x1);
        gbc.writeMem(0x2f0c, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8963, gbc.sp());
        EXPECT(0x2f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0206
        gbc.setState(0x7425, 0x3273, 0x1910, 0xc5ba, 0x4369, 0xab78, 0x0, 0x1);
        gbc.writeMem(0x7425, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3273, gbc.sp());
        EXPECT(0x7426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0207
        gbc.setState(0xd57c, 0xc04e, 0xed40, 0x9a18, 0x686a, 0x3d6a, 0x0, 0x1);
        gbc.writeMem(0xd57c, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc04e, gbc.sp());
        EXPECT(0xd57d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd57c));
        // 9F 0208
        gbc.setState(0x51a9, 0xef2f, 0xb1f0, 0x8ba0, 0x325d, 0xcd4b, 0x1, 0x0);
        gbc.writeMem(0x51a9, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xef2f, gbc.sp());
        EXPECT(0x51aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0209
        gbc.setState(0x8ea1, 0x67a3, 0x510, 0x547d, 0xfc05, 0x8ff, 0x1, 0x0);
        gbc.writeMem(0x8ea1, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x67a3, gbc.sp());
        EXPECT(0x8ea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8ea1));
        // 9F 020B
        gbc.setState(0x671a, 0xc263, 0x2200, 0xd1a3, 0xef02, 0xeb83, 0x0, 0x0);
        gbc.writeMem(0x671a, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc263, gbc.sp());
        EXPECT(0x671b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 020C
        gbc.setState(0xc03d, 0x1eb8, 0x79c0, 0xad5a, 0xc4c2, 0xc281, 0x1, 0x0);
        gbc.writeMem(0xc03d, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1eb8, gbc.sp());
        EXPECT(0xc03e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc03d));
        // 9F 020D
        gbc.setState(0x2497, 0x20c9, 0xc10, 0x97a5, 0xccf, 0x6f02, 0x1, 0x1);
        gbc.writeMem(0x2497, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x20c9, gbc.sp());
        EXPECT(0x2498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 020E
        gbc.setState(0x26a7, 0xe788, 0xcdc0, 0xa1e6, 0x2333, 0x5f86, 0x1, 0x1);
        gbc.writeMem(0x26a7, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe788, gbc.sp());
        EXPECT(0x26a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0210
        gbc.setState(0x527e, 0xaae7, 0x4700, 0x5d13, 0xb273, 0x9a12, 0x1, 0x0);
        gbc.writeMem(0x527e, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xaae7, gbc.sp());
        EXPECT(0x527f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0212
        gbc.setState(0x24f6, 0x8324, 0xb100, 0xa949, 0xbba2, 0x3bbe, 0x0, 0x1);
        gbc.writeMem(0x24f6, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8324, gbc.sp());
        EXPECT(0x24f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0213
        gbc.setState(0x9d3e, 0x602e, 0x5c50, 0x94d, 0xdf0b, 0x5d96, 0x1, 0x0);
        gbc.writeMem(0x9d3e, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x602e, gbc.sp());
        EXPECT(0x9d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9d3e));
        // 9F 0214
        gbc.setState(0x6d45, 0x119b, 0x11f0, 0xf2e4, 0xba21, 0x31e, 0x1, 0x0);
        gbc.writeMem(0x6d45, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x119b, gbc.sp());
        EXPECT(0x6d46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0215
        gbc.setState(0x2b3b, 0x60bd, 0x7ed0, 0xf085, 0xb1d2, 0x46da, 0x1, 0x0);
        gbc.writeMem(0x2b3b, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x60bd, gbc.sp());
        EXPECT(0x2b3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0216
        gbc.setState(0x55d2, 0x7c86, 0x52c0, 0xdae6, 0x8773, 0x8f12, 0x0, 0x1);
        gbc.writeMem(0x55d2, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7c86, gbc.sp());
        EXPECT(0x55d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0217
        gbc.setState(0x7618, 0xd895, 0x48c0, 0xf116, 0x9a34, 0x34ad, 0x1, 0x0);
        gbc.writeMem(0x7618, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd895, gbc.sp());
        EXPECT(0x7619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0219
        gbc.setState(0xe982, 0x2ec9, 0x15d0, 0x1f1a, 0xe606, 0x6ec, 0x0, 0x1);
        gbc.writeMem(0xe982, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2ec9, gbc.sp());
        EXPECT(0xe983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe982));
        // 9F 021A
        gbc.setState(0x4cee, 0x4441, 0xb050, 0xd42d, 0xa6f, 0x125b, 0x0, 0x1);
        gbc.writeMem(0x4cee, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4441, gbc.sp());
        EXPECT(0x4cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 021B
        gbc.setState(0xadf2, 0xcde2, 0x9fd0, 0x3a59, 0x9396, 0x5c99, 0x0, 0x0);
        gbc.writeMem(0xadf2, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcde2, gbc.sp());
        EXPECT(0xadf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xadf2));
        // 9F 021C
        gbc.setState(0x989d, 0xe718, 0x7340, 0x3748, 0x489c, 0x1f47, 0x1, 0x1);
        gbc.writeMem(0x989d, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe718, gbc.sp());
        EXPECT(0x989e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x989d));
        // 9F 021D
        gbc.setState(0x2f74, 0x83d3, 0x43a0, 0x347c, 0x880b, 0xcdbb, 0x1, 0x1);
        gbc.writeMem(0x2f74, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x83d3, gbc.sp());
        EXPECT(0x2f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 021E
        gbc.setState(0x392e, 0x24ea, 0x8cf0, 0xb8a, 0x4448, 0x2a11, 0x0, 0x1);
        gbc.writeMem(0x392e, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x24ea, gbc.sp());
        EXPECT(0x392f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 021F
        gbc.setState(0x8346, 0xd905, 0x1480, 0xa5de, 0x3487, 0x802d, 0x0, 0x0);
        gbc.writeMem(0x8346, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd905, gbc.sp());
        EXPECT(0x8347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8346));
        // 9F 0220
        gbc.setState(0xae9c, 0xc6d6, 0x13f0, 0xd4f2, 0x1707, 0xe393, 0x1, 0x1);
        gbc.writeMem(0xae9c, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc6d6, gbc.sp());
        EXPECT(0xae9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xae9c));
        // 9F 0221
        gbc.setState(0xb227, 0xdf84, 0x76d0, 0x42a6, 0x6844, 0xae6d, 0x1, 0x0);
        gbc.writeMem(0xb227, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xdf84, gbc.sp());
        EXPECT(0xb228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb227));
        // 9F 0222
        gbc.setState(0xdafe, 0x1e76, 0x81c0, 0x4118, 0x498a, 0x501, 0x1, 0x1);
        gbc.writeMem(0xdafe, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1e76, gbc.sp());
        EXPECT(0xdaff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xdafe));
        // 9F 0223
        gbc.setState(0x626f, 0xdd47, 0xc7d0, 0x2c5f, 0xb904, 0xc45f, 0x1, 0x1);
        gbc.writeMem(0x626f, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xdd47, gbc.sp());
        EXPECT(0x6270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0224
        gbc.setState(0x2f26, 0x158e, 0xd200, 0xb949, 0xd6, 0xe89b, 0x0, 0x1);
        gbc.writeMem(0x2f26, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x158e, gbc.sp());
        EXPECT(0x2f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0225
        gbc.setState(0xc135, 0x9230, 0x5050, 0x94a7, 0x3a32, 0xb850, 0x0, 0x0);
        gbc.writeMem(0xc135, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9230, gbc.sp());
        EXPECT(0xc136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc135));
        // 9F 0226
        gbc.setState(0x63c2, 0xd70f, 0x5c60, 0x9795, 0x86ad, 0x8fba, 0x1, 0x0);
        gbc.writeMem(0x63c2, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd70f, gbc.sp());
        EXPECT(0x63c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0227
        gbc.setState(0x8ec1, 0x1951, 0xbc60, 0x7507, 0x448c, 0xe825, 0x1, 0x0);
        gbc.writeMem(0x8ec1, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1951, gbc.sp());
        EXPECT(0x8ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8ec1));
        // 9F 0229
        gbc.setState(0x28f, 0xb168, 0xe370, 0x825, 0xee69, 0x2625, 0x1, 0x0);
        gbc.writeMem(0x28f, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb168, gbc.sp());
        EXPECT(0x290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 022A
        gbc.setState(0x1238, 0x704e, 0x5bd0, 0x37b8, 0x8cd9, 0xa443, 0x1, 0x1);
        gbc.writeMem(0x1238, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x704e, gbc.sp());
        EXPECT(0x1239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 022B
        gbc.setState(0x5d45, 0xdb3a, 0xfd0, 0x6a1f, 0xd693, 0x47c9, 0x0, 0x1);
        gbc.writeMem(0x5d45, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdb3a, gbc.sp());
        EXPECT(0x5d46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 022C
        gbc.setState(0x3772, 0xbcb5, 0x72e0, 0xae9a, 0x2f43, 0x8fc8, 0x1, 0x1);
        gbc.writeMem(0x3772, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbcb5, gbc.sp());
        EXPECT(0x3773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 022D
        gbc.setState(0xe59f, 0x8936, 0xae50, 0x592f, 0x3584, 0xd8db, 0x1, 0x0);
        gbc.writeMem(0xe59f, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8936, gbc.sp());
        EXPECT(0xe5a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe59f));
        // 9F 022E
        gbc.setState(0x8a6f, 0xc5d4, 0x8d70, 0x194c, 0xbb0c, 0xa300, 0x0, 0x1);
        gbc.writeMem(0x8a6f, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc5d4, gbc.sp());
        EXPECT(0x8a70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8a6f));
        // 9F 022F
        gbc.setState(0xeff0, 0xf8c3, 0x8e0, 0xf1fd, 0x951f, 0x96a6, 0x0, 0x0);
        gbc.writeMem(0xeff0, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf8c3, gbc.sp());
        EXPECT(0xeff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xeff0));
        // 9F 0230
        gbc.setState(0x313e, 0x9622, 0x7770, 0x2778, 0x7f3f, 0x2eb6, 0x0, 0x1);
        gbc.writeMem(0x313e, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9622, gbc.sp());
        EXPECT(0x313f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0231
        gbc.setState(0x883, 0xff78, 0x8e60, 0xf032, 0x6fa0, 0x2519, 0x0, 0x0);
        gbc.writeMem(0x883, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xff78, gbc.sp());
        EXPECT(0x884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0232
        gbc.setState(0x3aa4, 0xed78, 0x6850, 0x15f6, 0x15e2, 0xfe26, 0x0, 0x0);
        gbc.writeMem(0x3aa4, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xed78, gbc.sp());
        EXPECT(0x3aa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0233
        gbc.setState(0x51aa, 0xfc0c, 0xd970, 0x7353, 0x73f7, 0xf9fe, 0x0, 0x1);
        gbc.writeMem(0x51aa, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfc0c, gbc.sp());
        EXPECT(0x51ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0234
        gbc.setState(0xace0, 0x6a8a, 0x41e0, 0x8e0, 0x6f1e, 0xbe1c, 0x1, 0x0);
        gbc.writeMem(0xace0, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6a8a, gbc.sp());
        EXPECT(0xace1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xace0));
        // 9F 0235
        gbc.setState(0x3c53, 0x28b2, 0x2b30, 0x8317, 0x5c44, 0x178, 0x0, 0x1);
        gbc.writeMem(0x3c53, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x28b2, gbc.sp());
        EXPECT(0x3c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0236
        gbc.setState(0x13a9, 0xc688, 0x3760, 0x985f, 0x2b24, 0xc7f3, 0x0, 0x0);
        gbc.writeMem(0x13a9, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc688, gbc.sp());
        EXPECT(0x13aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0237
        gbc.setState(0xab15, 0x3a3b, 0xe0d0, 0x1194, 0x9b2, 0x9289, 0x0, 0x0);
        gbc.writeMem(0xab15, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3a3b, gbc.sp());
        EXPECT(0xab16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xab15));
        // 9F 0238
        gbc.setState(0xcba1, 0x85d1, 0x4cd0, 0x7074, 0x7cf6, 0x94d, 0x0, 0x1);
        gbc.writeMem(0xcba1, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x85d1, gbc.sp());
        EXPECT(0xcba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcba1));
        // 9F 0239
        gbc.setState(0xcc51, 0x4f90, 0x89f0, 0xf400, 0xabee, 0xde0d, 0x0, 0x1);
        gbc.writeMem(0xcc51, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4f90, gbc.sp());
        EXPECT(0xcc52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcc51));
        // 9F 023A
        gbc.setState(0xc7e0, 0xa43a, 0x55e0, 0x2d49, 0x9c16, 0xfe10, 0x0, 0x0);
        gbc.writeMem(0xc7e0, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa43a, gbc.sp());
        EXPECT(0xc7e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc7e0));
        // 9F 023B
        gbc.setState(0x31a, 0xc63c, 0x4f30, 0x3de0, 0x694c, 0x4e09, 0x0, 0x0);
        gbc.writeMem(0x31a, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc63c, gbc.sp());
        EXPECT(0x31b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 023C
        gbc.setState(0x2673, 0x149b, 0x2060, 0xff4a, 0x571, 0x6ea8, 0x0, 0x0);
        gbc.writeMem(0x2673, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x149b, gbc.sp());
        EXPECT(0x2674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 023D
        gbc.setState(0x5139, 0xf82, 0xc060, 0x77af, 0x136b, 0xe229, 0x1, 0x0);
        gbc.writeMem(0x5139, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf82, gbc.sp());
        EXPECT(0x513a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 023E
        gbc.setState(0x5fd1, 0xd0d9, 0xd620, 0x7ccb, 0x5612, 0x50b6, 0x1, 0x0);
        gbc.writeMem(0x5fd1, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd0d9, gbc.sp());
        EXPECT(0x5fd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 023F
        gbc.setState(0xa3fa, 0x87b6, 0x5b10, 0x2cc3, 0x7c11, 0xcb01, 0x1, 0x1);
        gbc.writeMem(0xa3fa, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x87b6, gbc.sp());
        EXPECT(0xa3fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa3fa));
        // 9F 0240
        gbc.setState(0x296e, 0xbf32, 0xc160, 0x1487, 0x9ab4, 0x7183, 0x0, 0x0);
        gbc.writeMem(0x296e, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbf32, gbc.sp());
        EXPECT(0x296f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0241
        gbc.setState(0xb33b, 0x485d, 0xfdc0, 0x9e2d, 0x6ffb, 0x17b, 0x0, 0x1);
        gbc.writeMem(0xb33b, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x485d, gbc.sp());
        EXPECT(0xb33c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb33b));
        // 9F 0242
        gbc.setState(0xc45f, 0x1395, 0x4ea0, 0x3f03, 0x6b2b, 0x7e92, 0x1, 0x1);
        gbc.writeMem(0xc45f, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1395, gbc.sp());
        EXPECT(0xc460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc45f));
        // 9F 0243
        gbc.setState(0x2e52, 0xa9cf, 0x57e0, 0xdecd, 0x5276, 0x1cd5, 0x0, 0x1);
        gbc.writeMem(0x2e52, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa9cf, gbc.sp());
        EXPECT(0x2e53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0244
        gbc.setState(0x7fd6, 0xcd87, 0x75b0, 0x96c3, 0xd34a, 0x9a15, 0x0, 0x0);
        gbc.writeMem(0x7fd6, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xcd87, gbc.sp());
        EXPECT(0x7fd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0245
        gbc.setState(0x8e66, 0x478c, 0x4150, 0x1ed6, 0x3373, 0xe3d5, 0x0, 0x0);
        gbc.writeMem(0x8e66, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x478c, gbc.sp());
        EXPECT(0x8e67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8e66));
        // 9F 0246
        gbc.setState(0xeb04, 0xd4c5, 0xa3d0, 0x3418, 0x7505, 0xb5e1, 0x1, 0x1);
        gbc.writeMem(0xeb04, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd4c5, gbc.sp());
        EXPECT(0xeb05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xeb04));
        // 9F 0247
        gbc.setState(0x1b78, 0x59c6, 0x31f0, 0x74f3, 0xd655, 0x66c3, 0x0, 0x0);
        gbc.writeMem(0x1b78, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x59c6, gbc.sp());
        EXPECT(0x1b79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0248
        gbc.setState(0x436b, 0x49ff, 0x1330, 0xa2df, 0xd02, 0x6735, 0x0, 0x1);
        gbc.writeMem(0x436b, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x49ff, gbc.sp());
        EXPECT(0x436c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0249
        gbc.setState(0x449a, 0x4cb5, 0x72e0, 0x4205, 0xa62a, 0xb91a, 0x0, 0x1);
        gbc.writeMem(0x449a, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4cb5, gbc.sp());
        EXPECT(0x449b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 024A
        gbc.setState(0xe6c4, 0x1d9c, 0xa40, 0x60bd, 0xae49, 0xde58, 0x1, 0x1);
        gbc.writeMem(0xe6c4, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1d9c, gbc.sp());
        EXPECT(0xe6c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe6c4));
        // 9F 024B
        gbc.setState(0x72dd, 0x7478, 0x3ce0, 0xfa5c, 0x40a2, 0x4603, 0x1, 0x0);
        gbc.writeMem(0x72dd, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7478, gbc.sp());
        EXPECT(0x72de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 024C
        gbc.setState(0xab60, 0xc40a, 0xaff0, 0x7353, 0xff70, 0x8cde, 0x0, 0x0);
        gbc.writeMem(0xab60, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc40a, gbc.sp());
        EXPECT(0xab61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xab60));
        // 9F 024D
        gbc.setState(0x8856, 0x20a0, 0x89f0, 0xd0d1, 0x26c8, 0x46cf, 0x0, 0x1);
        gbc.writeMem(0x8856, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x20a0, gbc.sp());
        EXPECT(0x8857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8856));
        // 9F 024E
        gbc.setState(0x3609, 0x58d, 0x9130, 0x673d, 0xd22b, 0xdc73, 0x1, 0x0);
        gbc.writeMem(0x3609, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x58d, gbc.sp());
        EXPECT(0x360a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 024F
        gbc.setState(0xe86a, 0x2437, 0xe430, 0xac6b, 0x10cc, 0x5beb, 0x0, 0x1);
        gbc.writeMem(0xe86a, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2437, gbc.sp());
        EXPECT(0xe86b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe86a));
        // 9F 0250
        gbc.setState(0x1ed5, 0xc66f, 0xd4f0, 0x3107, 0xf774, 0x39c9, 0x0, 0x1);
        gbc.writeMem(0x1ed5, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc66f, gbc.sp());
        EXPECT(0x1ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0251
        gbc.setState(0x4203, 0xa25, 0xd730, 0x2242, 0x6c8b, 0xdf4f, 0x1, 0x0);
        gbc.writeMem(0x4203, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa25, gbc.sp());
        EXPECT(0x4204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0253
        gbc.setState(0xa86a, 0x1e22, 0x14b0, 0x81e7, 0x1b18, 0x86bc, 0x0, 0x0);
        gbc.writeMem(0xa86a, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1e22, gbc.sp());
        EXPECT(0xa86b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa86a));
        // 9F 0254
        gbc.setState(0x2fc5, 0x1ab8, 0xcce0, 0xa0bb, 0xe294, 0x6d70, 0x1, 0x0);
        gbc.writeMem(0x2fc5, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1ab8, gbc.sp());
        EXPECT(0x2fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0255
        gbc.setState(0x7496, 0x70d0, 0x9410, 0x8c25, 0xda74, 0x83b1, 0x1, 0x0);
        gbc.writeMem(0x7496, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x70d0, gbc.sp());
        EXPECT(0x7497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0256
        gbc.setState(0xbcec, 0xae0e, 0xecc0, 0xb6eb, 0xd617, 0xaa13, 0x0, 0x1);
        gbc.writeMem(0xbcec, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xae0e, gbc.sp());
        EXPECT(0xbced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbcec));
        // 9F 0257
        gbc.setState(0xb75e, 0x44ed, 0xae10, 0x7053, 0xb62c, 0xb197, 0x0, 0x0);
        gbc.writeMem(0xb75e, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x44ed, gbc.sp());
        EXPECT(0xb75f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb75e));
        // 9F 0258
        gbc.setState(0x98e5, 0x77e2, 0x9620, 0xdc7, 0x7952, 0x7e74, 0x1, 0x1);
        gbc.writeMem(0x98e5, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x77e2, gbc.sp());
        EXPECT(0x98e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x98e5));
        // 9F 0259
        gbc.setState(0xe49b, 0x1231, 0x24c0, 0xac61, 0xde8f, 0x5d23, 0x0, 0x0);
        gbc.writeMem(0xe49b, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1231, gbc.sp());
        EXPECT(0xe49c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe49b));
        // 9F 025A
        gbc.setState(0xdf2, 0xcbc9, 0x8950, 0x28b9, 0x70b3, 0x3d6a, 0x1, 0x1);
        gbc.writeMem(0xdf2, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xcbc9, gbc.sp());
        EXPECT(0xdf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 025B
        gbc.setState(0x15b, 0xdaad, 0x800, 0xa7d, 0x37fa, 0x777b, 0x0, 0x1);
        gbc.writeMem(0x15b, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xdaad, gbc.sp());
        EXPECT(0x15c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 025C
        gbc.setState(0x2550, 0x210e, 0x77b0, 0x2c39, 0xebbd, 0xe635, 0x0, 0x1);
        gbc.writeMem(0x2550, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x210e, gbc.sp());
        EXPECT(0x2551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 025D
        gbc.setState(0x8769, 0x25a0, 0x87f0, 0x5d5f, 0xcb9c, 0xd2f7, 0x1, 0x0);
        gbc.writeMem(0x8769, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x25a0, gbc.sp());
        EXPECT(0x876a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8769));
        // 9F 025E
        gbc.setState(0xedd8, 0x3fb, 0x2d0, 0xeb75, 0x6176, 0x3e74, 0x1, 0x1);
        gbc.writeMem(0xedd8, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3fb, gbc.sp());
        EXPECT(0xedd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xedd8));
        // 9F 025F
        gbc.setState(0xcb78, 0xa15a, 0x7f80, 0xea91, 0xc3fb, 0xa368, 0x0, 0x0);
        gbc.writeMem(0xcb78, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa15a, gbc.sp());
        EXPECT(0xcb79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcb78));
        // 9F 0260
        gbc.setState(0x99c, 0x9263, 0x6e60, 0x61a8, 0x3943, 0x1dd2, 0x0, 0x0);
        gbc.writeMem(0x99c, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9263, gbc.sp());
        EXPECT(0x99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0261
        gbc.setState(0x4ed2, 0x5c8c, 0x5d60, 0x930e, 0xaf32, 0x8afe, 0x0, 0x1);
        gbc.writeMem(0x4ed2, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5c8c, gbc.sp());
        EXPECT(0x4ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0262
        gbc.setState(0x41e4, 0xa048, 0xded0, 0x38b0, 0xf30, 0x1dda, 0x1, 0x0);
        gbc.writeMem(0x41e4, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa048, gbc.sp());
        EXPECT(0x41e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0263
        gbc.setState(0xea86, 0xffe4, 0xa8d0, 0xf05a, 0x5dbc, 0x3e07, 0x1, 0x1);
        gbc.writeMem(0xea86, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xffe4, gbc.sp());
        EXPECT(0xea87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xea86));
        // 9F 0264
        gbc.setState(0xb0c1, 0xc4f8, 0xa000, 0xb908, 0x56e1, 0x131f, 0x1, 0x0);
        gbc.writeMem(0xb0c1, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc4f8, gbc.sp());
        EXPECT(0xb0c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb0c1));
        // 9F 0265
        gbc.setState(0xd446, 0x52d1, 0xfdc0, 0xef35, 0x295b, 0xb88d, 0x0, 0x1);
        gbc.writeMem(0xd446, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x52d1, gbc.sp());
        EXPECT(0xd447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd446));
        // 9F 0266
        gbc.setState(0x5f61, 0xfe12, 0xf4c0, 0xdd08, 0xed8a, 0x30c6, 0x1, 0x1);
        gbc.writeMem(0x5f61, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfe12, gbc.sp());
        EXPECT(0x5f62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0267
        gbc.setState(0xe0f9, 0xe24f, 0x6190, 0x9d4c, 0x1b2a, 0xaef1, 0x0, 0x1);
        gbc.writeMem(0xe0f9, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe24f, gbc.sp());
        EXPECT(0xe0fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe0f9));
        // 9F 0268
        gbc.setState(0x9219, 0x829b, 0xbd20, 0x727d, 0x46c1, 0x5e92, 0x0, 0x1);
        gbc.writeMem(0x9219, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x829b, gbc.sp());
        EXPECT(0x921a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9219));
        // 9F 0269
        gbc.setState(0x5cb2, 0xd52e, 0x7830, 0xb20b, 0xdcb0, 0xf264, 0x1, 0x0);
        gbc.writeMem(0x5cb2, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd52e, gbc.sp());
        EXPECT(0x5cb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 026A
        gbc.setState(0xbd73, 0x95c, 0x91a0, 0x53e8, 0x538b, 0xe9a6, 0x1, 0x1);
        gbc.writeMem(0xbd73, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x95c, gbc.sp());
        EXPECT(0xbd74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbd73));
        // 9F 026B
        gbc.setState(0xc4d6, 0xc1fe, 0x4cd0, 0x88b0, 0x8ba0, 0x23c5, 0x1, 0x1);
        gbc.writeMem(0xc4d6, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc1fe, gbc.sp());
        EXPECT(0xc4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc4d6));
        // 9F 026C
        gbc.setState(0x86b1, 0xb887, 0x6690, 0x655, 0xb305, 0x2fa, 0x0, 0x0);
        gbc.writeMem(0x86b1, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb887, gbc.sp());
        EXPECT(0x86b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x86b1));
        // 9F 026D
        gbc.setState(0xd1e9, 0x1602, 0xa760, 0x3922, 0x946c, 0x5805, 0x0, 0x1);
        gbc.writeMem(0xd1e9, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1602, gbc.sp());
        EXPECT(0xd1ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd1e9));
        // 9F 026E
        gbc.setState(0x4fcc, 0xbb18, 0x6d20, 0x83da, 0x2eb2, 0xf71e, 0x1, 0x0);
        gbc.writeMem(0x4fcc, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xbb18, gbc.sp());
        EXPECT(0x4fcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 026F
        gbc.setState(0xc30a, 0xf65d, 0xf2f0, 0x79e5, 0xb545, 0x49c8, 0x1, 0x1);
        gbc.writeMem(0xc30a, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf65d, gbc.sp());
        EXPECT(0xc30b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc30a));
        // 9F 0270
        gbc.setState(0x757a, 0x6821, 0x6c90, 0x2aae, 0xd6d9, 0x1c7d, 0x0, 0x1);
        gbc.writeMem(0x757a, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6821, gbc.sp());
        EXPECT(0x757b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0271
        gbc.setState(0x407f, 0xdce7, 0xb4e0, 0x0, 0x88d3, 0xc6d5, 0x1, 0x0);
        gbc.writeMem(0x407f, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdce7, gbc.sp());
        EXPECT(0x4080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0272
        gbc.setState(0x7784, 0x53ba, 0xe6e0, 0xec02, 0x9b35, 0x6f0f, 0x1, 0x1);
        gbc.writeMem(0x7784, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x53ba, gbc.sp());
        EXPECT(0x7785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0273
        gbc.setState(0xe3ba, 0x328f, 0xb670, 0x3c16, 0x724d, 0x1e24, 0x0, 0x0);
        gbc.writeMem(0xe3ba, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x328f, gbc.sp());
        EXPECT(0xe3bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe3ba));
        // 9F 0274
        gbc.setState(0x54dd, 0xfee1, 0x6fd0, 0x489b, 0x9bd7, 0x2d51, 0x1, 0x1);
        gbc.writeMem(0x54dd, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfee1, gbc.sp());
        EXPECT(0x54de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0275
        gbc.setState(0x3266, 0x15f5, 0x8bb0, 0x7b45, 0x8eca, 0xf1f4, 0x0, 0x0);
        gbc.writeMem(0x3266, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x15f5, gbc.sp());
        EXPECT(0x3267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0276
        gbc.setState(0x86b1, 0x1a39, 0x1830, 0x79f, 0xd5c0, 0x9ad7, 0x0, 0x1);
        gbc.writeMem(0x86b1, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1a39, gbc.sp());
        EXPECT(0x86b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x86b1));
        // 9F 0277
        gbc.setState(0xb43a, 0x65e9, 0x8a70, 0x1ece, 0x9680, 0x1f42, 0x0, 0x0);
        gbc.writeMem(0xb43a, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x65e9, gbc.sp());
        EXPECT(0xb43b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb43a));
        // 9F 0278
        gbc.setState(0xd5fb, 0x6a91, 0xd070, 0x136, 0xa8f0, 0x8a68, 0x1, 0x1);
        gbc.writeMem(0xd5fb, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6a91, gbc.sp());
        EXPECT(0xd5fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd5fb));
        // 9F 0279
        gbc.setState(0xc22e, 0x4c9b, 0xe7e0, 0x621f, 0xcf0f, 0xd945, 0x1, 0x0);
        gbc.writeMem(0xc22e, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4c9b, gbc.sp());
        EXPECT(0xc22f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc22e));
        // 9F 027A
        gbc.setState(0xcd72, 0x81a3, 0xdb00, 0xae15, 0xacef, 0x58d1, 0x0, 0x1);
        gbc.writeMem(0xcd72, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x81a3, gbc.sp());
        EXPECT(0xcd73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcd72));
        // 9F 027B
        gbc.setState(0x6486, 0x8a8d, 0xa6f0, 0xaa13, 0x7c, 0x646d, 0x1, 0x1);
        gbc.writeMem(0x6486, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8a8d, gbc.sp());
        EXPECT(0x6487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 027C
        gbc.setState(0xc857, 0xde8c, 0x48a0, 0x1e5e, 0xee8d, 0xb485, 0x1, 0x0);
        gbc.writeMem(0xc857, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xde8c, gbc.sp());
        EXPECT(0xc858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc857));
        // 9F 027D
        gbc.setState(0x9e14, 0x95ef, 0x250, 0xc411, 0x5c93, 0xcb9f, 0x0, 0x1);
        gbc.writeMem(0x9e14, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x95ef, gbc.sp());
        EXPECT(0x9e15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9e14));
        // 9F 027E
        gbc.setState(0x3a32, 0x89d6, 0x8c80, 0x5b8e, 0x96dc, 0x78fe, 0x1, 0x0);
        gbc.writeMem(0x3a32, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x89d6, gbc.sp());
        EXPECT(0x3a33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 027F
        gbc.setState(0x8025, 0x6379, 0xdc30, 0x3b45, 0xe5d3, 0x20bc, 0x1, 0x1);
        gbc.writeMem(0x8025, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6379, gbc.sp());
        EXPECT(0x8026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8025));
        // 9F 0280
        gbc.setState(0x4a30, 0x4591, 0x1090, 0x6e5b, 0x66ef, 0x5f94, 0x0, 0x1);
        gbc.writeMem(0x4a30, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4591, gbc.sp());
        EXPECT(0x4a31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0281
        gbc.setState(0xb61d, 0x9f7e, 0x6340, 0xe8dc, 0x9463, 0xd0c0, 0x0, 0x1);
        gbc.writeMem(0xb61d, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9f7e, gbc.sp());
        EXPECT(0xb61e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb61d));
        // 9F 0282
        gbc.setState(0x13c2, 0x352b, 0xcb00, 0x5b13, 0x1d30, 0xdf39, 0x1, 0x1);
        gbc.writeMem(0x13c2, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x352b, gbc.sp());
        EXPECT(0x13c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0283
        gbc.setState(0x6c6b, 0x5d94, 0x7ee0, 0x161b, 0x6ef8, 0xd1c9, 0x0, 0x1);
        gbc.writeMem(0x6c6b, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5d94, gbc.sp());
        EXPECT(0x6c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0284
        gbc.setState(0x63f9, 0x528e, 0xf7f0, 0x9785, 0x2c41, 0x761c, 0x0, 0x1);
        gbc.writeMem(0x63f9, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x528e, gbc.sp());
        EXPECT(0x63fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0285
        gbc.setState(0x6fd5, 0xdf13, 0x4db0, 0xeb00, 0x959d, 0x595c, 0x1, 0x0);
        gbc.writeMem(0x6fd5, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdf13, gbc.sp());
        EXPECT(0x6fd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0286
        gbc.setState(0x4be5, 0x949c, 0x6400, 0x60b1, 0xadf9, 0xfe20, 0x1, 0x0);
        gbc.writeMem(0x4be5, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x949c, gbc.sp());
        EXPECT(0x4be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0287
        gbc.setState(0x416d, 0x145f, 0x7200, 0x7c9d, 0x13d0, 0x9251, 0x0, 0x0);
        gbc.writeMem(0x416d, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x145f, gbc.sp());
        EXPECT(0x416e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0288
        gbc.setState(0x4d32, 0xdd04, 0xe930, 0x2ebc, 0x851b, 0x2954, 0x1, 0x1);
        gbc.writeMem(0x4d32, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xdd04, gbc.sp());
        EXPECT(0x4d33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0289
        gbc.setState(0xd355, 0x2ae4, 0x6410, 0xa71, 0x6869, 0xf420, 0x1, 0x0);
        gbc.writeMem(0xd355, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2ae4, gbc.sp());
        EXPECT(0xd356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd355));
        // 9F 028A
        gbc.setState(0x6380, 0xdcd7, 0x9c30, 0x4dc9, 0x6566, 0xa87f, 0x1, 0x1);
        gbc.writeMem(0x6380, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xdcd7, gbc.sp());
        EXPECT(0x6381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 028B
        gbc.setState(0xeae1, 0xa615, 0xf790, 0xd6bd, 0xc0d5, 0xb422, 0x0, 0x1);
        gbc.writeMem(0xeae1, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa615, gbc.sp());
        EXPECT(0xeae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xeae1));
        // 9F 028C
        gbc.setState(0xb489, 0x60f1, 0x5100, 0xb6f3, 0x84b1, 0x2f4f, 0x0, 0x1);
        gbc.writeMem(0xb489, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x60f1, gbc.sp());
        EXPECT(0xb48a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb489));
        // 9F 028D
        gbc.setState(0x91a2, 0x5650, 0xbc80, 0x35, 0xeda, 0x51f2, 0x1, 0x0);
        gbc.writeMem(0x91a2, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5650, gbc.sp());
        EXPECT(0x91a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x91a2));
        // 9F 028E
        gbc.setState(0xbe31, 0x3c51, 0xb7a0, 0x57ff, 0x3b2c, 0x77d3, 0x1, 0x0);
        gbc.writeMem(0xbe31, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3c51, gbc.sp());
        EXPECT(0xbe32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbe31));
        // 9F 028F
        gbc.setState(0x13f4, 0xd3ba, 0x9f00, 0x3cc1, 0x8859, 0x7382, 0x0, 0x0);
        gbc.writeMem(0x13f4, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd3ba, gbc.sp());
        EXPECT(0x13f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0290
        gbc.setState(0xe461, 0xa81f, 0x7a10, 0x3951, 0x5a8f, 0xd26c, 0x0, 0x1);
        gbc.writeMem(0xe461, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa81f, gbc.sp());
        EXPECT(0xe462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe461));
        // 9F 0291
        gbc.setState(0x2587, 0x1004, 0x3ce0, 0xb0df, 0xbf0c, 0x5bd5, 0x1, 0x0);
        gbc.writeMem(0x2587, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1004, gbc.sp());
        EXPECT(0x2588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0292
        gbc.setState(0xbe13, 0x84, 0x9f50, 0x7a36, 0x95e, 0x4ea9, 0x1, 0x0);
        gbc.writeMem(0xbe13, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x84, gbc.sp());
        EXPECT(0xbe14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbe13));
        // 9F 0293
        gbc.setState(0x8473, 0xf251, 0xddc0, 0xa316, 0xdb59, 0x3cc6, 0x1, 0x1);
        gbc.writeMem(0x8473, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf251, gbc.sp());
        EXPECT(0x8474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8473));
        // 9F 0294
        gbc.setState(0x9c7e, 0xe5a6, 0xc3a0, 0xdb61, 0x5f30, 0xdcbb, 0x0, 0x0);
        gbc.writeMem(0x9c7e, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe5a6, gbc.sp());
        EXPECT(0x9c7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9c7e));
        // 9F 0295
        gbc.setState(0x201a, 0xc40c, 0xac40, 0x1349, 0x825e, 0x107d, 0x0, 0x0);
        gbc.writeMem(0x201a, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc40c, gbc.sp());
        EXPECT(0x201b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0296
        gbc.setState(0x55b7, 0x8860, 0xf6d0, 0x254c, 0x5c91, 0x361d, 0x0, 0x1);
        gbc.writeMem(0x55b7, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8860, gbc.sp());
        EXPECT(0x55b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0297
        gbc.setState(0xec3b, 0xacc0, 0x1ac0, 0xde3c, 0xdf64, 0x8f4e, 0x1, 0x1);
        gbc.writeMem(0xec3b, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xacc0, gbc.sp());
        EXPECT(0xec3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xec3b));
        // 9F 0298
        gbc.setState(0x94a4, 0x4d24, 0xa6a0, 0xa040, 0x2f5c, 0xa4e8, 0x0, 0x1);
        gbc.writeMem(0x94a4, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4d24, gbc.sp());
        EXPECT(0x94a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x94a4));
        // 9F 0299
        gbc.setState(0x8ab6, 0x445a, 0x9930, 0x75ae, 0xf4ff, 0x7142, 0x0, 0x0);
        gbc.writeMem(0x8ab6, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x445a, gbc.sp());
        EXPECT(0x8ab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8ab6));
        // 9F 029A
        gbc.setState(0x7a3a, 0x861b, 0x50e0, 0x5d17, 0xaad5, 0xb2ee, 0x0, 0x1);
        gbc.writeMem(0x7a3a, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x861b, gbc.sp());
        EXPECT(0x7a3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 029B
        gbc.setState(0xfeb, 0x8337, 0xfa0, 0x6269, 0xcd79, 0x5d01, 0x0, 0x1);
        gbc.writeMem(0xfeb, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8337, gbc.sp());
        EXPECT(0xfec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 029C
        gbc.setState(0xee1a, 0x4f28, 0x1cd0, 0x1941, 0xd3c2, 0xe0a3, 0x0, 0x0);
        gbc.writeMem(0xee1a, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4f28, gbc.sp());
        EXPECT(0xee1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xee1a));
        // 9F 029D
        gbc.setState(0x239, 0xb351, 0xcbe0, 0x6bc9, 0x1ab4, 0xea7c, 0x0, 0x0);
        gbc.writeMem(0x239, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb351, gbc.sp());
        EXPECT(0x23a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 029E
        gbc.setState(0x7b2f, 0x12a3, 0xa640, 0xa7f7, 0x8ef8, 0x90dd, 0x0, 0x0);
        gbc.writeMem(0x7b2f, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x12a3, gbc.sp());
        EXPECT(0x7b30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02A0
        gbc.setState(0xca8d, 0xb62e, 0x5940, 0x8248, 0x3506, 0xa487, 0x1, 0x1);
        gbc.writeMem(0xca8d, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb62e, gbc.sp());
        EXPECT(0xca8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xca8d));
        // 9F 02A1
        gbc.setState(0x6439, 0x8cea, 0x3ee0, 0x720b, 0xe5c8, 0x4010, 0x1, 0x0);
        gbc.writeMem(0x6439, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8cea, gbc.sp());
        EXPECT(0x643a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02A2
        gbc.setState(0xaf4, 0x5238, 0x27c0, 0xd49f, 0xb5d3, 0xdc30, 0x1, 0x0);
        gbc.writeMem(0xaf4, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5238, gbc.sp());
        EXPECT(0xaf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02A3
        gbc.setState(0x13a1, 0x5ae2, 0xf980, 0x1571, 0xfc03, 0x963c, 0x1, 0x1);
        gbc.writeMem(0x13a1, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5ae2, gbc.sp());
        EXPECT(0x13a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02A4
        gbc.setState(0xd6f5, 0x355d, 0xd370, 0x7e32, 0x1cf4, 0xa960, 0x0, 0x1);
        gbc.writeMem(0xd6f5, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x355d, gbc.sp());
        EXPECT(0xd6f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd6f5));
        // 9F 02A5
        gbc.setState(0x6e71, 0xd9df, 0x1750, 0xa499, 0x57c7, 0xf2bf, 0x1, 0x1);
        gbc.writeMem(0x6e71, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd9df, gbc.sp());
        EXPECT(0x6e72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02A6
        gbc.setState(0x7949, 0x7bea, 0xafe0, 0xb0a5, 0xe9ee, 0xd061, 0x0, 0x0);
        gbc.writeMem(0x7949, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7bea, gbc.sp());
        EXPECT(0x794a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02A7
        gbc.setState(0xa152, 0xf22d, 0x350, 0x9f05, 0x97d7, 0x972f, 0x0, 0x1);
        gbc.writeMem(0xa152, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf22d, gbc.sp());
        EXPECT(0xa153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa152));
        // 9F 02A8
        gbc.setState(0x1258, 0xd2d0, 0xc7a0, 0xdb75, 0xb14e, 0x1940, 0x1, 0x0);
        gbc.writeMem(0x1258, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd2d0, gbc.sp());
        EXPECT(0x1259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02AA
        gbc.setState(0x1b91, 0x66d9, 0x5dd0, 0xe567, 0x3dad, 0xe0a, 0x1, 0x1);
        gbc.writeMem(0x1b91, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x66d9, gbc.sp());
        EXPECT(0x1b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02AB
        gbc.setState(0x5f96, 0x409e, 0x76c0, 0x7579, 0xa108, 0x51bb, 0x0, 0x0);
        gbc.writeMem(0x5f96, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x409e, gbc.sp());
        EXPECT(0x5f97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02AC
        gbc.setState(0x2197, 0xaa4f, 0xaad0, 0xebd1, 0x4f56, 0xf5c6, 0x1, 0x1);
        gbc.writeMem(0x2197, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xaa4f, gbc.sp());
        EXPECT(0x2198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02AD
        gbc.setState(0xc6f, 0x2a77, 0xd370, 0x695a, 0x2e42, 0x26bf, 0x0, 0x1);
        gbc.writeMem(0xc6f, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2a77, gbc.sp());
        EXPECT(0xc70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02AF
        gbc.setState(0x64b1, 0xc8b3, 0x3250, 0x356c, 0xb4ec, 0x4432, 0x1, 0x0);
        gbc.writeMem(0x64b1, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc8b3, gbc.sp());
        EXPECT(0x64b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02B0
        gbc.setState(0xb76e, 0x454e, 0x2050, 0xa13, 0x3dc9, 0x1795, 0x0, 0x1);
        gbc.writeMem(0xb76e, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x454e, gbc.sp());
        EXPECT(0xb76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb76e));
        // 9F 02B1
        gbc.setState(0x885b, 0x1ddf, 0x7f20, 0x2a3b, 0xd3bb, 0xa2be, 0x0, 0x1);
        gbc.writeMem(0x885b, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1ddf, gbc.sp());
        EXPECT(0x885c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x885b));
        // 9F 02B2
        gbc.setState(0xd3f1, 0xdc5d, 0xf4e0, 0xe42b, 0x3aa0, 0x3fc6, 0x1, 0x1);
        gbc.writeMem(0xd3f1, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xdc5d, gbc.sp());
        EXPECT(0xd3f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd3f1));
        // 9F 02B4
        gbc.setState(0xdf96, 0xb559, 0xbf90, 0x473c, 0x536, 0x2a0f, 0x0, 0x1);
        gbc.writeMem(0xdf96, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb559, gbc.sp());
        EXPECT(0xdf97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xdf96));
        // 9F 02B5
        gbc.setState(0x4fd2, 0x3aaa, 0xe900, 0xeba6, 0x6f4d, 0x376c, 0x0, 0x1);
        gbc.writeMem(0x4fd2, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3aaa, gbc.sp());
        EXPECT(0x4fd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02B6
        gbc.setState(0x470b, 0x1a0, 0x9ef0, 0x2426, 0x1f58, 0xc084, 0x1, 0x0);
        gbc.writeMem(0x470b, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1a0, gbc.sp());
        EXPECT(0x470c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02B7
        gbc.setState(0xc05, 0xe0fa, 0x5000, 0xa336, 0xf32b, 0xb699, 0x0, 0x0);
        gbc.writeMem(0xc05, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe0fa, gbc.sp());
        EXPECT(0xc06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02B8
        gbc.setState(0x5f2f, 0x7728, 0x7af0, 0xc6, 0xcc67, 0xc525, 0x1, 0x1);
        gbc.writeMem(0x5f2f, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7728, gbc.sp());
        EXPECT(0x5f30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02B9
        gbc.setState(0x8518, 0x937d, 0x83c0, 0xacd3, 0xec4f, 0x3084, 0x0, 0x1);
        gbc.writeMem(0x8518, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x937d, gbc.sp());
        EXPECT(0x8519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8518));
        // 9F 02BA
        gbc.setState(0xd9b1, 0xd753, 0x170, 0xf4c4, 0x8ecb, 0xa21e, 0x1, 0x0);
        gbc.writeMem(0xd9b1, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd753, gbc.sp());
        EXPECT(0xd9b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd9b1));
        // 9F 02BB
        gbc.setState(0x6608, 0x18a2, 0x1270, 0xe1d, 0x6eca, 0x1320, 0x0, 0x1);
        gbc.writeMem(0x6608, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x18a2, gbc.sp());
        EXPECT(0x6609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02BC
        gbc.setState(0x6665, 0xb8e5, 0x9220, 0xc5c, 0xb2c2, 0x47b, 0x1, 0x1);
        gbc.writeMem(0x6665, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb8e5, gbc.sp());
        EXPECT(0x6666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02BD
        gbc.setState(0xc843, 0xfc8, 0xab00, 0x5088, 0xcd13, 0x7d89, 0x1, 0x1);
        gbc.writeMem(0xc843, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xfc8, gbc.sp());
        EXPECT(0xc844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc843));
        // 9F 02BE
        gbc.setState(0xd189, 0x974e, 0x9bd0, 0xe3fe, 0x5d92, 0x8af4, 0x1, 0x0);
        gbc.writeMem(0xd189, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x974e, gbc.sp());
        EXPECT(0xd18a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd189));
        // 9F 02BF
        gbc.setState(0x1048, 0x56d4, 0xc470, 0xde99, 0x86b8, 0x3480, 0x0, 0x1);
        gbc.writeMem(0x1048, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x56d4, gbc.sp());
        EXPECT(0x1049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02C0
        gbc.setState(0x6bbf, 0xd4b2, 0x7280, 0xa29a, 0xd4a2, 0xe6bf, 0x0, 0x0);
        gbc.writeMem(0x6bbf, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd4b2, gbc.sp());
        EXPECT(0x6bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02C1
        gbc.setState(0xad5e, 0x188, 0xb5e0, 0x833e, 0x3c2e, 0x210b, 0x1, 0x0);
        gbc.writeMem(0xad5e, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x188, gbc.sp());
        EXPECT(0xad5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xad5e));
        // 9F 02C2
        gbc.setState(0x313b, 0x47d, 0x1240, 0xbe6d, 0x8618, 0x62cc, 0x0, 0x1);
        gbc.writeMem(0x313b, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x47d, gbc.sp());
        EXPECT(0x313c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02C3
        gbc.setState(0xa5a0, 0xcea, 0xabf0, 0x2bd7, 0x11c5, 0x8303, 0x0, 0x1);
        gbc.writeMem(0xa5a0, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcea, gbc.sp());
        EXPECT(0xa5a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa5a0));
        // 9F 02C4
        gbc.setState(0xdc0, 0xafe5, 0x5e00, 0xbfef, 0xce0f, 0xf9c4, 0x1, 0x0);
        gbc.writeMem(0xdc0, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xafe5, gbc.sp());
        EXPECT(0xdc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02C5
        gbc.setState(0x834c, 0x1917, 0x8750, 0xc593, 0x9a6d, 0x3dd8, 0x1, 0x1);
        gbc.writeMem(0x834c, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1917, gbc.sp());
        EXPECT(0x834d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x834c));
        // 9F 02C6
        gbc.setState(0x1b3c, 0xb0f1, 0x780, 0x191, 0xc3ed, 0x7778, 0x1, 0x1);
        gbc.writeMem(0x1b3c, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb0f1, gbc.sp());
        EXPECT(0x1b3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02C7
        gbc.setState(0x22b9, 0x382, 0xab70, 0x325b, 0xd5cb, 0x8c69, 0x1, 0x0);
        gbc.writeMem(0x22b9, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x382, gbc.sp());
        EXPECT(0x22ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02C8
        gbc.setState(0x4de, 0xbade, 0x3a0, 0x7ef5, 0x6c30, 0xe983, 0x1, 0x0);
        gbc.writeMem(0x4de, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbade, gbc.sp());
        EXPECT(0x4df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02C9
        gbc.setState(0xb49a, 0xd0fe, 0x2100, 0x91b, 0x72c6, 0x8248, 0x0, 0x0);
        gbc.writeMem(0xb49a, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd0fe, gbc.sp());
        EXPECT(0xb49b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb49a));
        // 9F 02CA
        gbc.setState(0x3909, 0xbda4, 0xfa30, 0xca7b, 0xa626, 0x7c34, 0x0, 0x1);
        gbc.writeMem(0x3909, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xbda4, gbc.sp());
        EXPECT(0x390a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02CB
        gbc.setState(0x2e8d, 0x78b5, 0xcf00, 0x2759, 0x37a7, 0xab85, 0x1, 0x0);
        gbc.writeMem(0x2e8d, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x78b5, gbc.sp());
        EXPECT(0x2e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02CC
        gbc.setState(0x863f, 0x7c5, 0x4190, 0x3e1b, 0xae3, 0x4eae, 0x0, 0x0);
        gbc.writeMem(0x863f, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7c5, gbc.sp());
        EXPECT(0x8640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x863f));
        // 9F 02CD
        gbc.setState(0x9e8c, 0x10ae, 0xeb20, 0xed2f, 0x6848, 0x5679, 0x0, 0x0);
        gbc.writeMem(0x9e8c, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x10ae, gbc.sp());
        EXPECT(0x9e8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9e8c));
        // 9F 02CE
        gbc.setState(0xd7ad, 0x7140, 0x1700, 0x44e2, 0xca22, 0xd5b1, 0x0, 0x1);
        gbc.writeMem(0xd7ad, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7140, gbc.sp());
        EXPECT(0xd7ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd7ad));
        // 9F 02CF
        gbc.setState(0xd3ab, 0xf755, 0x2860, 0x5741, 0x7508, 0x8c36, 0x1, 0x1);
        gbc.writeMem(0xd3ab, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf755, gbc.sp());
        EXPECT(0xd3ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd3ab));
        // 9F 02D0
        gbc.setState(0xd6ae, 0x82ee, 0xf990, 0x2b2b, 0x4fff, 0xbb0, 0x0, 0x0);
        gbc.writeMem(0xd6ae, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x82ee, gbc.sp());
        EXPECT(0xd6af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd6ae));
        // 9F 02D1
        gbc.setState(0x6b15, 0x7df3, 0x7240, 0x60cf, 0x9059, 0xc3b6, 0x1, 0x0);
        gbc.writeMem(0x6b15, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7df3, gbc.sp());
        EXPECT(0x6b16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02D2
        gbc.setState(0xbca4, 0xaded, 0x5ea0, 0xd2dd, 0x7cf8, 0x3f3e, 0x0, 0x1);
        gbc.writeMem(0xbca4, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xaded, gbc.sp());
        EXPECT(0xbca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbca4));
        // 9F 02D3
        gbc.setState(0x88f1, 0x3207, 0x69c0, 0x4743, 0x693c, 0x63ea, 0x1, 0x1);
        gbc.writeMem(0x88f1, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3207, gbc.sp());
        EXPECT(0x88f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x88f1));
        // 9F 02D4
        gbc.setState(0xc68a, 0x1e5d, 0x8320, 0x1b04, 0x1c3a, 0x4520, 0x0, 0x1);
        gbc.writeMem(0xc68a, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1e5d, gbc.sp());
        EXPECT(0xc68b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc68a));
        // 9F 02D5
        gbc.setState(0x78b3, 0x9e1e, 0xb2d0, 0x3493, 0x5360, 0xc52f, 0x0, 0x1);
        gbc.writeMem(0x78b3, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9e1e, gbc.sp());
        EXPECT(0x78b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02D6
        gbc.setState(0x70c6, 0x63e4, 0xf340, 0xa6f9, 0x1943, 0xd110, 0x1, 0x1);
        gbc.writeMem(0x70c6, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x63e4, gbc.sp());
        EXPECT(0x70c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02D7
        gbc.setState(0x354a, 0x64f5, 0xfe90, 0xf2f8, 0xd5f3, 0xc0d6, 0x0, 0x0);
        gbc.writeMem(0x354a, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x64f5, gbc.sp());
        EXPECT(0x354b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02D8
        gbc.setState(0xbf0, 0x5e57, 0xe790, 0x25a9, 0x1fe8, 0x1d2c, 0x0, 0x0);
        gbc.writeMem(0xbf0, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5e57, gbc.sp());
        EXPECT(0xbf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02D9
        gbc.setState(0x8e0b, 0x461d, 0xe100, 0xb5d8, 0x1d04, 0xb96d, 0x0, 0x1);
        gbc.writeMem(0x8e0b, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x461d, gbc.sp());
        EXPECT(0x8e0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8e0b));
        // 9F 02DA
        gbc.setState(0x67be, 0x5d08, 0x4960, 0xdf87, 0xb641, 0x1f5a, 0x1, 0x0);
        gbc.writeMem(0x67be, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5d08, gbc.sp());
        EXPECT(0x67bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02DB
        gbc.setState(0x9dbd, 0x4299, 0x9140, 0x6cca, 0xb762, 0x5c7c, 0x1, 0x1);
        gbc.writeMem(0x9dbd, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4299, gbc.sp());
        EXPECT(0x9dbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9dbd));
        // 9F 02DC
        gbc.setState(0x3988, 0x477f, 0x9950, 0x51a7, 0xa964, 0x871e, 0x0, 0x1);
        gbc.writeMem(0x3988, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x477f, gbc.sp());
        EXPECT(0x3989, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02DD
        gbc.setState(0x7a5, 0xaef7, 0x6dc0, 0xf8e6, 0x8edc, 0x6e04, 0x0, 0x0);
        gbc.writeMem(0x7a5, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xaef7, gbc.sp());
        EXPECT(0x7a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02DE
        gbc.setState(0x8de4, 0xee1e, 0x5cf0, 0x8363, 0xfc9b, 0xbe6d, 0x1, 0x1);
        gbc.writeMem(0x8de4, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xee1e, gbc.sp());
        EXPECT(0x8de5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8de4));
        // 9F 02DF
        gbc.setState(0x184e, 0xeb8f, 0x35d0, 0xe05c, 0x53b6, 0x4788, 0x1, 0x0);
        gbc.writeMem(0x184e, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xeb8f, gbc.sp());
        EXPECT(0x184f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02E0
        gbc.setState(0x4978, 0x3c2a, 0x4ae0, 0x95f9, 0xc0dc, 0xe11d, 0x0, 0x0);
        gbc.writeMem(0x4978, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3c2a, gbc.sp());
        EXPECT(0x4979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02E1
        gbc.setState(0xeb66, 0xdbb4, 0x8740, 0xc643, 0x4491, 0xbd6c, 0x1, 0x0);
        gbc.writeMem(0xeb66, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdbb4, gbc.sp());
        EXPECT(0xeb67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xeb66));
        // 9F 02E2
        gbc.setState(0x1363, 0x4a4, 0x77b0, 0xcbfe, 0xa167, 0xaa72, 0x0, 0x1);
        gbc.writeMem(0x1363, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4a4, gbc.sp());
        EXPECT(0x1364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02E3
        gbc.setState(0x655f, 0x53f, 0x2260, 0xeee5, 0xf7ef, 0xd81c, 0x1, 0x0);
        gbc.writeMem(0x655f, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x53f, gbc.sp());
        EXPECT(0x6560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02E4
        gbc.setState(0x3226, 0xb518, 0x3350, 0x5f08, 0x8675, 0x713b, 0x0, 0x1);
        gbc.writeMem(0x3226, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb518, gbc.sp());
        EXPECT(0x3227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02E5
        gbc.setState(0x5491, 0x2562, 0x4680, 0xa629, 0x14f0, 0xa31b, 0x1, 0x1);
        gbc.writeMem(0x5491, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2562, gbc.sp());
        EXPECT(0x5492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02E6
        gbc.setState(0x672e, 0x616a, 0x3e00, 0xd272, 0xf9fc, 0x626, 0x1, 0x1);
        gbc.writeMem(0x672e, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x616a, gbc.sp());
        EXPECT(0x672f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02E7
        gbc.setState(0xae63, 0xc63a, 0x3b20, 0x11ca, 0x2d8a, 0xca4, 0x1, 0x0);
        gbc.writeMem(0xae63, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc63a, gbc.sp());
        EXPECT(0xae64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xae63));
        // 9F 02E8
        gbc.setState(0x6082, 0xa395, 0xd690, 0x744, 0x4829, 0xfb06, 0x0, 0x0);
        gbc.writeMem(0x6082, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa395, gbc.sp());
        EXPECT(0x6083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02EA
        gbc.setState(0x1054, 0x79ea, 0xc670, 0xfefa, 0x9f4a, 0x2893, 0x1, 0x1);
        gbc.writeMem(0x1054, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x79ea, gbc.sp());
        EXPECT(0x1055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02EB
        gbc.setState(0x88ae, 0x4ae8, 0xb320, 0xfc03, 0x9b5e, 0x29a2, 0x1, 0x1);
        gbc.writeMem(0x88ae, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4ae8, gbc.sp());
        EXPECT(0x88af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x88ae));
        // 9F 02EC
        gbc.setState(0x1be7, 0xf9ef, 0x5730, 0x9e1b, 0xa630, 0xbcd0, 0x0, 0x1);
        gbc.writeMem(0x1be7, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf9ef, gbc.sp());
        EXPECT(0x1be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02ED
        gbc.setState(0x43af, 0x351, 0xf790, 0x7ee2, 0x3587, 0x3a3a, 0x1, 0x0);
        gbc.writeMem(0x43af, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x351, gbc.sp());
        EXPECT(0x43b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02EE
        gbc.setState(0xb502, 0x5472, 0xb530, 0xc062, 0x96aa, 0x4dd2, 0x0, 0x0);
        gbc.writeMem(0xb502, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5472, gbc.sp());
        EXPECT(0xb503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb502));
        // 9F 02EF
        gbc.setState(0x793, 0x45e6, 0xd6c0, 0x3f66, 0xdac2, 0x14b1, 0x0, 0x0);
        gbc.writeMem(0x793, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x45e6, gbc.sp());
        EXPECT(0x794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02F0
        gbc.setState(0xb061, 0x9f3, 0x5370, 0x8409, 0xeade, 0x265e, 0x0, 0x1);
        gbc.writeMem(0xb061, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9f3, gbc.sp());
        EXPECT(0xb062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb061));
        // 9F 02F1
        gbc.setState(0x3b42, 0x387, 0x7310, 0x9829, 0x3101, 0xf5c8, 0x0, 0x1);
        gbc.writeMem(0x3b42, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x387, gbc.sp());
        EXPECT(0x3b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02F2
        gbc.setState(0x6dae, 0xa805, 0xdcc0, 0xd22e, 0xa617, 0x81ae, 0x1, 0x0);
        gbc.writeMem(0x6dae, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa805, gbc.sp());
        EXPECT(0x6daf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02F3
        gbc.setState(0x43d7, 0xd686, 0xd990, 0x286f, 0x3274, 0x8ac1, 0x1, 0x0);
        gbc.writeMem(0x43d7, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd686, gbc.sp());
        EXPECT(0x43d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02F4
        gbc.setState(0xcd3e, 0xf08d, 0x7960, 0x3dce, 0x7cd3, 0xa90b, 0x1, 0x1);
        gbc.writeMem(0xcd3e, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf08d, gbc.sp());
        EXPECT(0xcd3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcd3e));
        // 9F 02F5
        gbc.setState(0x3a99, 0x11d6, 0xaca0, 0xcd74, 0x9171, 0xe3, 0x1, 0x0);
        gbc.writeMem(0x3a99, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x11d6, gbc.sp());
        EXPECT(0x3a9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02F6
        gbc.setState(0xe5ea, 0xc6b6, 0x4690, 0x3658, 0xf9d5, 0x66af, 0x0, 0x0);
        gbc.writeMem(0xe5ea, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc6b6, gbc.sp());
        EXPECT(0xe5eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe5ea));
        // 9F 02F7
        gbc.setState(0xe969, 0x42b0, 0x2720, 0xa9cd, 0x2d2a, 0x4c44, 0x0, 0x1);
        gbc.writeMem(0xe969, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x42b0, gbc.sp());
        EXPECT(0xe96a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe969));
        // 9F 02F8
        gbc.setState(0xbf5e, 0xb840, 0xbc50, 0x61d2, 0x71f1, 0x5ca7, 0x1, 0x0);
        gbc.writeMem(0xbf5e, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb840, gbc.sp());
        EXPECT(0xbf5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbf5e));
        // 9F 02F9
        gbc.setState(0xef69, 0x3d34, 0xeb0, 0xc78e, 0xb516, 0x905, 0x1, 0x1);
        gbc.writeMem(0xef69, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3d34, gbc.sp());
        EXPECT(0xef6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xef69));
        // 9F 02FA
        gbc.setState(0x2dae, 0xf279, 0x9cd0, 0x1c74, 0xa3d3, 0x6a41, 0x0, 0x0);
        gbc.writeMem(0x2dae, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf279, gbc.sp());
        EXPECT(0x2daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02FB
        gbc.setState(0x5f85, 0xaa3b, 0x3d90, 0xb44b, 0x4e2, 0x3c65, 0x1, 0x1);
        gbc.writeMem(0x5f85, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xaa3b, gbc.sp());
        EXPECT(0x5f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 02FC
        gbc.setState(0xde21, 0xe9d9, 0x18c0, 0x4bce, 0x8120, 0x3914, 0x1, 0x1);
        gbc.writeMem(0xde21, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe9d9, gbc.sp());
        EXPECT(0xde22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xde21));
        // 9F 02FD
        gbc.setState(0x3dae, 0x92f9, 0x6c0, 0x8253, 0x59ce, 0x77e7, 0x0, 0x0);
        gbc.writeMem(0x3dae, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x92f9, gbc.sp());
        EXPECT(0x3daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 02FE
        gbc.setState(0xa4a4, 0x2e5b, 0x97b0, 0x68a, 0xbfb6, 0xf41, 0x1, 0x1);
        gbc.writeMem(0xa4a4, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2e5b, gbc.sp());
        EXPECT(0xa4a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa4a4));
        // 9F 02FF
        gbc.setState(0xa2b6, 0xa56b, 0x21d0, 0x77f3, 0x5454, 0xae11, 0x0, 0x0);
        gbc.writeMem(0xa2b6, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa56b, gbc.sp());
        EXPECT(0xa2b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa2b6));
        // 9F 0300
        gbc.setState(0xe63, 0x70b9, 0xf1d0, 0xc515, 0x8922, 0xbaf8, 0x1, 0x0);
        gbc.writeMem(0xe63, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x70b9, gbc.sp());
        EXPECT(0xe64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0301
        gbc.setState(0x20b, 0xd27b, 0x1350, 0x30c8, 0x7bc, 0x522d, 0x1, 0x1);
        gbc.writeMem(0x20b, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd27b, gbc.sp());
        EXPECT(0x20c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0303
        gbc.setState(0x6e3c, 0x5504, 0x83d0, 0x3ec5, 0x2ac1, 0x8566, 0x0, 0x1);
        gbc.writeMem(0x6e3c, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5504, gbc.sp());
        EXPECT(0x6e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0304
        gbc.setState(0x11ee, 0x710, 0xb5f0, 0x6368, 0xe0f5, 0x3f28, 0x0, 0x1);
        gbc.writeMem(0x11ee, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x710, gbc.sp());
        EXPECT(0x11ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0305
        gbc.setState(0xc460, 0xf845, 0x1990, 0x1465, 0xf777, 0x40d, 0x0, 0x1);
        gbc.writeMem(0xc460, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf845, gbc.sp());
        EXPECT(0xc461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc460));
        // 9F 0306
        gbc.setState(0xe4c1, 0x8e6d, 0x6df0, 0x5535, 0xba4d, 0xcd2f, 0x0, 0x0);
        gbc.writeMem(0xe4c1, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8e6d, gbc.sp());
        EXPECT(0xe4c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe4c1));
        // 9F 0307
        gbc.setState(0xed84, 0xeed8, 0xb6d0, 0xd81c, 0xdc0d, 0x74a, 0x1, 0x1);
        gbc.writeMem(0xed84, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xeed8, gbc.sp());
        EXPECT(0xed85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xed84));
        // 9F 0308
        gbc.setState(0x3a62, 0xcf10, 0x60b0, 0x59ff, 0xe04a, 0xef1b, 0x1, 0x1);
        gbc.writeMem(0x3a62, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xcf10, gbc.sp());
        EXPECT(0x3a63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0309
        gbc.setState(0x452e, 0xc571, 0x8110, 0x56e5, 0x565a, 0x7e25, 0x1, 0x1);
        gbc.writeMem(0x452e, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc571, gbc.sp());
        EXPECT(0x452f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 030A
        gbc.setState(0xdc7, 0xe899, 0x6380, 0x83d2, 0x21c2, 0xdbcf, 0x1, 0x0);
        gbc.writeMem(0xdc7, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe899, gbc.sp());
        EXPECT(0xdc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 030B
        gbc.setState(0x1be6, 0xfb5, 0xa230, 0x3707, 0xd18c, 0xe37f, 0x1, 0x1);
        gbc.writeMem(0x1be6, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xfb5, gbc.sp());
        EXPECT(0x1be7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 030C
        gbc.setState(0xe29a, 0x85c7, 0xb1c0, 0xf22c, 0xdc5, 0x18c8, 0x1, 0x0);
        gbc.writeMem(0xe29a, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x85c7, gbc.sp());
        EXPECT(0xe29b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe29a));
        // 9F 030D
        gbc.setState(0x779d, 0x61fe, 0x7d0, 0xa6b7, 0xc87d, 0x56f9, 0x1, 0x0);
        gbc.writeMem(0x779d, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x61fe, gbc.sp());
        EXPECT(0x779e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 030E
        gbc.setState(0x2cc2, 0x7661, 0x5300, 0x8eff, 0xd1de, 0x9b6f, 0x1, 0x1);
        gbc.writeMem(0x2cc2, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7661, gbc.sp());
        EXPECT(0x2cc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 030F
        gbc.setState(0x3c11, 0xbddb, 0xaa0, 0x9f83, 0x17a6, 0x8dc4, 0x0, 0x1);
        gbc.writeMem(0x3c11, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbddb, gbc.sp());
        EXPECT(0x3c12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0310
        gbc.setState(0x853, 0x589f, 0x5a0, 0x45d0, 0x3c9e, 0xe63c, 0x0, 0x1);
        gbc.writeMem(0x853, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x589f, gbc.sp());
        EXPECT(0x854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0311
        gbc.setState(0xc12a, 0x3610, 0xe6f0, 0x5ada, 0xc07, 0xfada, 0x1, 0x1);
        gbc.writeMem(0xc12a, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3610, gbc.sp());
        EXPECT(0xc12b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc12a));
        // 9F 0312
        gbc.setState(0x5681, 0x6a4e, 0xd0f0, 0xcdd8, 0x6041, 0xce81, 0x1, 0x0);
        gbc.writeMem(0x5681, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6a4e, gbc.sp());
        EXPECT(0x5682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0313
        gbc.setState(0xa42f, 0x280c, 0xd560, 0x546e, 0x997d, 0xfc7, 0x1, 0x0);
        gbc.writeMem(0xa42f, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x280c, gbc.sp());
        EXPECT(0xa430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa42f));
        // 9F 0314
        gbc.setState(0xebca, 0x91b2, 0xdfa0, 0x748, 0x8098, 0x6e36, 0x1, 0x1);
        gbc.writeMem(0xebca, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x91b2, gbc.sp());
        EXPECT(0xebcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xebca));
        // 9F 0316
        gbc.setState(0xccbf, 0xd865, 0x4210, 0xcca0, 0x1cac, 0x8ea0, 0x0, 0x1);
        gbc.writeMem(0xccbf, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd865, gbc.sp());
        EXPECT(0xccc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xccbf));
        // 9F 0317
        gbc.setState(0xfc1, 0x8d3, 0x1c20, 0x17ad, 0x4140, 0x7a25, 0x0, 0x1);
        gbc.writeMem(0xfc1, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8d3, gbc.sp());
        EXPECT(0xfc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0318
        gbc.setState(0x9839, 0xc74d, 0x6d40, 0xde0b, 0x9124, 0x3b05, 0x0, 0x1);
        gbc.writeMem(0x9839, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc74d, gbc.sp());
        EXPECT(0x983a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9839));
        // 9F 0319
        gbc.setState(0x3560, 0xca8c, 0x2a30, 0xc51, 0x9f56, 0x6f9d, 0x1, 0x1);
        gbc.writeMem(0x3560, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xca8c, gbc.sp());
        EXPECT(0x3561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 031A
        gbc.setState(0xcddd, 0x4b45, 0x94b0, 0x1107, 0x4998, 0x6de2, 0x1, 0x1);
        gbc.writeMem(0xcddd, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4b45, gbc.sp());
        EXPECT(0xcdde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcddd));
        // 9F 031B
        gbc.setState(0xcf98, 0xc116, 0x1430, 0x3bfa, 0xb44d, 0xc402, 0x1, 0x0);
        gbc.writeMem(0xcf98, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc116, gbc.sp());
        EXPECT(0xcf99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcf98));
        // 9F 031C
        gbc.setState(0xee0d, 0x40bf, 0xcb30, 0x77e3, 0x14c4, 0x6167, 0x1, 0x1);
        gbc.writeMem(0xee0d, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x40bf, gbc.sp());
        EXPECT(0xee0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xee0d));
        // 9F 031D
        gbc.setState(0xb185, 0xea7c, 0x1e40, 0x2461, 0xc5cd, 0xd7c, 0x1, 0x0);
        gbc.writeMem(0xb185, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xea7c, gbc.sp());
        EXPECT(0xb186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb185));
        // 9F 031E
        gbc.setState(0x7d2c, 0x66d, 0xfaa0, 0xb2a8, 0x22f, 0xcd97, 0x0, 0x0);
        gbc.writeMem(0x7d2c, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x66d, gbc.sp());
        EXPECT(0x7d2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 031F
        gbc.setState(0xe573, 0xdffa, 0xea0, 0x8f95, 0x4a58, 0x265a, 0x0, 0x1);
        gbc.writeMem(0xe573, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xdffa, gbc.sp());
        EXPECT(0xe574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe573));
        // 9F 0320
        gbc.setState(0xd5a5, 0x44af, 0x4960, 0xd459, 0x7b29, 0xfed5, 0x0, 0x1);
        gbc.writeMem(0xd5a5, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x44af, gbc.sp());
        EXPECT(0xd5a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd5a5));
        // 9F 0321
        gbc.setState(0x476f, 0x407a, 0x9c60, 0x94e7, 0x5e9f, 0xb884, 0x0, 0x1);
        gbc.writeMem(0x476f, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x407a, gbc.sp());
        EXPECT(0x4770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0322
        gbc.setState(0xcc8f, 0xae00, 0xb710, 0x4a3c, 0x4ba6, 0x4e05, 0x0, 0x0);
        gbc.writeMem(0xcc8f, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xae00, gbc.sp());
        EXPECT(0xcc90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcc8f));
        // 9F 0323
        gbc.setState(0x5139, 0xd766, 0xe290, 0x727b, 0x6d8f, 0x7254, 0x0, 0x0);
        gbc.writeMem(0x5139, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd766, gbc.sp());
        EXPECT(0x513a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0324
        gbc.setState(0x4dfc, 0xa9fc, 0x9cd0, 0xcffe, 0x576b, 0xdba1, 0x1, 0x0);
        gbc.writeMem(0x4dfc, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa9fc, gbc.sp());
        EXPECT(0x4dfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0325
        gbc.setState(0x6336, 0xcea0, 0x4f20, 0x3d39, 0x91f, 0xe007, 0x1, 0x1);
        gbc.writeMem(0x6336, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xcea0, gbc.sp());
        EXPECT(0x6337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0326
        gbc.setState(0x9790, 0xa19, 0x30a0, 0xaf64, 0x97f9, 0x8af1, 0x1, 0x0);
        gbc.writeMem(0x9790, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa19, gbc.sp());
        EXPECT(0x9791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9790));
        // 9F 0327
        gbc.setState(0xc33e, 0xc43b, 0x5cf0, 0xfd5b, 0xbd52, 0x22b5, 0x0, 0x0);
        gbc.writeMem(0xc33e, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc43b, gbc.sp());
        EXPECT(0xc33f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc33e));
        // 9F 0329
        gbc.setState(0xcb3d, 0x2c21, 0x2fd0, 0xdedf, 0x70b, 0x9f4b, 0x1, 0x1);
        gbc.writeMem(0xcb3d, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2c21, gbc.sp());
        EXPECT(0xcb3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcb3d));
        // 9F 032A
        gbc.setState(0x5d42, 0x8660, 0x4220, 0xafae, 0x2ecf, 0x348, 0x0, 0x1);
        gbc.writeMem(0x5d42, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8660, gbc.sp());
        EXPECT(0x5d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 032B
        gbc.setState(0xb916, 0x939b, 0x4700, 0x89ec, 0x7fd5, 0xe35b, 0x0, 0x0);
        gbc.writeMem(0xb916, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x939b, gbc.sp());
        EXPECT(0xb917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb916));
        // 9F 032C
        gbc.setState(0x8e09, 0x8c2a, 0x58b0, 0x1479, 0x49f0, 0x1171, 0x0, 0x0);
        gbc.writeMem(0x8e09, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8c2a, gbc.sp());
        EXPECT(0x8e0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8e09));
        // 9F 032D
        gbc.setState(0x277, 0xba9, 0xb8b0, 0x9185, 0xb070, 0xeded, 0x1, 0x1);
        gbc.writeMem(0x277, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xba9, gbc.sp());
        EXPECT(0x278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 032F
        gbc.setState(0x5ad1, 0xa68f, 0xf6a0, 0x341c, 0x8704, 0xc808, 0x1, 0x0);
        gbc.writeMem(0x5ad1, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa68f, gbc.sp());
        EXPECT(0x5ad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0331
        gbc.setState(0xbc06, 0x3c80, 0xea00, 0xa4de, 0x252, 0x36c, 0x0, 0x1);
        gbc.writeMem(0xbc06, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3c80, gbc.sp());
        EXPECT(0xbc07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbc06));
        // 9F 0333
        gbc.setState(0x92fb, 0x1039, 0x17b0, 0x3be0, 0xe34c, 0x745f, 0x0, 0x1);
        gbc.writeMem(0x92fb, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1039, gbc.sp());
        EXPECT(0x92fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x92fb));
        // 9F 0334
        gbc.setState(0x30f9, 0xa2b2, 0x7db0, 0x2662, 0x3562, 0x83bb, 0x0, 0x1);
        gbc.writeMem(0x30f9, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa2b2, gbc.sp());
        EXPECT(0x30fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0335
        gbc.setState(0x7019, 0xadb5, 0x23f0, 0x1fd6, 0x75d6, 0x86a0, 0x1, 0x0);
        gbc.writeMem(0x7019, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xadb5, gbc.sp());
        EXPECT(0x701a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0336
        gbc.setState(0xbf54, 0xfad8, 0x6af0, 0x3869, 0xf1d3, 0x5129, 0x0, 0x0);
        gbc.writeMem(0xbf54, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfad8, gbc.sp());
        EXPECT(0xbf55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbf54));
        // 9F 0337
        gbc.setState(0xb7a6, 0x2344, 0xf7a0, 0x64c2, 0xc9fb, 0xf6db, 0x0, 0x0);
        gbc.writeMem(0xb7a6, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2344, gbc.sp());
        EXPECT(0xb7a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb7a6));
        // 9F 0338
        gbc.setState(0xde61, 0xb288, 0x4d30, 0xff1b, 0xb00d, 0xb1f9, 0x0, 0x0);
        gbc.writeMem(0xde61, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb288, gbc.sp());
        EXPECT(0xde62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xde61));
        // 9F 033A
        gbc.setState(0x4a18, 0xa898, 0x1730, 0x8d59, 0x7ebe, 0x818b, 0x0, 0x0);
        gbc.writeMem(0x4a18, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa898, gbc.sp());
        EXPECT(0x4a19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 033B
        gbc.setState(0x6275, 0x1e52, 0xec60, 0x9e0a, 0xdd6a, 0x8b23, 0x1, 0x1);
        gbc.writeMem(0x6275, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1e52, gbc.sp());
        EXPECT(0x6276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 033C
        gbc.setState(0xc945, 0xf514, 0x1710, 0xc748, 0x62f5, 0x712e, 0x1, 0x1);
        gbc.writeMem(0xc945, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf514, gbc.sp());
        EXPECT(0xc946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc945));
        // 9F 033D
        gbc.setState(0x55fe, 0xc20a, 0x3c50, 0x25a4, 0xb592, 0xe710, 0x1, 0x1);
        gbc.writeMem(0x55fe, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc20a, gbc.sp());
        EXPECT(0x55ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 033E
        gbc.setState(0x55d6, 0x6cf9, 0xa140, 0x6924, 0x543c, 0x105, 0x1, 0x0);
        gbc.writeMem(0x55d6, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6cf9, gbc.sp());
        EXPECT(0x55d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 033F
        gbc.setState(0x7ab3, 0x42b7, 0xe4c0, 0x56c9, 0xba7, 0x8cfe, 0x0, 0x1);
        gbc.writeMem(0x7ab3, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x42b7, gbc.sp());
        EXPECT(0x7ab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0340
        gbc.setState(0x3cb2, 0x8cba, 0x5a20, 0x386c, 0x47bd, 0xc4c4, 0x0, 0x0);
        gbc.writeMem(0x3cb2, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8cba, gbc.sp());
        EXPECT(0x3cb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0341
        gbc.setState(0x3b75, 0x443d, 0x3880, 0xb72e, 0x61c5, 0x9205, 0x0, 0x0);
        gbc.writeMem(0x3b75, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x443d, gbc.sp());
        EXPECT(0x3b76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0342
        gbc.setState(0x9427, 0x4935, 0x6090, 0x2a83, 0x7571, 0xfad0, 0x1, 0x1);
        gbc.writeMem(0x9427, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4935, gbc.sp());
        EXPECT(0x9428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9427));
        // 9F 0343
        gbc.setState(0x1d49, 0xc0ef, 0x7b70, 0x8b49, 0xbee8, 0xaac6, 0x1, 0x0);
        gbc.writeMem(0x1d49, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc0ef, gbc.sp());
        EXPECT(0x1d4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0344
        gbc.setState(0xa2af, 0x7e24, 0xfe50, 0x3e39, 0x3f84, 0x88e, 0x1, 0x0);
        gbc.writeMem(0xa2af, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7e24, gbc.sp());
        EXPECT(0xa2b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa2af));
        // 9F 0345
        gbc.setState(0x6acd, 0x4f50, 0x8e40, 0xd6b0, 0x4b53, 0xad06, 0x0, 0x0);
        gbc.writeMem(0x6acd, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4f50, gbc.sp());
        EXPECT(0x6ace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0346
        gbc.setState(0x8348, 0x777c, 0x41f0, 0x1d31, 0xfa61, 0xdd77, 0x0, 0x1);
        gbc.writeMem(0x8348, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x777c, gbc.sp());
        EXPECT(0x8349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8348));
        // 9F 0347
        gbc.setState(0xa92f, 0x9f85, 0x8a90, 0xf010, 0x82a2, 0x5547, 0x1, 0x0);
        gbc.writeMem(0xa92f, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9f85, gbc.sp());
        EXPECT(0xa930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa92f));
        // 9F 0348
        gbc.setState(0x171a, 0xf3f2, 0x32e0, 0x6d3a, 0xe402, 0xfc70, 0x0, 0x1);
        gbc.writeMem(0x171a, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf3f2, gbc.sp());
        EXPECT(0x171b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0349
        gbc.setState(0x40c6, 0xcdc2, 0xe2a0, 0x4cd0, 0x2ad1, 0x6fd0, 0x0, 0x1);
        gbc.writeMem(0x40c6, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcdc2, gbc.sp());
        EXPECT(0x40c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 034A
        gbc.setState(0xd79c, 0x19, 0xf6c0, 0xd88f, 0x6217, 0xde1, 0x0, 0x0);
        gbc.writeMem(0xd79c, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x19, gbc.sp());
        EXPECT(0xd79d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd79c));
        // 9F 034B
        gbc.setState(0x5695, 0x1bd, 0x4600, 0x4102, 0x7fca, 0x8a7c, 0x0, 0x0);
        gbc.writeMem(0x5695, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1bd, gbc.sp());
        EXPECT(0x5696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 034C
        gbc.setState(0x2f36, 0xaaf3, 0x9270, 0x4963, 0x8a71, 0x7fe, 0x1, 0x0);
        gbc.writeMem(0x2f36, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xaaf3, gbc.sp());
        EXPECT(0x2f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 034D
        gbc.setState(0x801e, 0x2bf2, 0xa6a0, 0xe7b2, 0xb961, 0x7de6, 0x1, 0x0);
        gbc.writeMem(0x801e, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2bf2, gbc.sp());
        EXPECT(0x801f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x801e));
        // 9F 034E
        gbc.setState(0x32ec, 0x1ced, 0x6bb0, 0xc1c4, 0x5207, 0x506, 0x0, 0x1);
        gbc.writeMem(0x32ec, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1ced, gbc.sp());
        EXPECT(0x32ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 034F
        gbc.setState(0x6d99, 0x17d4, 0xbc00, 0x2b71, 0x6938, 0xed9, 0x1, 0x1);
        gbc.writeMem(0x6d99, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x17d4, gbc.sp());
        EXPECT(0x6d9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0350
        gbc.setState(0x5c1d, 0x3bdf, 0xb660, 0xb113, 0x3880, 0xbc19, 0x0, 0x1);
        gbc.writeMem(0x5c1d, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3bdf, gbc.sp());
        EXPECT(0x5c1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0351
        gbc.setState(0x10ed, 0x622c, 0x3830, 0x85ac, 0xa075, 0xa738, 0x0, 0x0);
        gbc.writeMem(0x10ed, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x622c, gbc.sp());
        EXPECT(0x10ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0352
        gbc.setState(0xb426, 0x6187, 0x35e0, 0x4b81, 0x9f10, 0xb031, 0x0, 0x0);
        gbc.writeMem(0xb426, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6187, gbc.sp());
        EXPECT(0xb427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb426));
        // 9F 0353
        gbc.setState(0xa7b8, 0x5d4b, 0x5900, 0x9447, 0x3672, 0xca7b, 0x1, 0x0);
        gbc.writeMem(0xa7b8, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5d4b, gbc.sp());
        EXPECT(0xa7b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa7b8));
        // 9F 0354
        gbc.setState(0x2662, 0x4d4c, 0x95e0, 0xe463, 0xc046, 0xbfd4, 0x1, 0x1);
        gbc.writeMem(0x2662, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4d4c, gbc.sp());
        EXPECT(0x2663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0355
        gbc.setState(0x89be, 0xad2e, 0x5770, 0xd850, 0x69a4, 0x570d, 0x1, 0x1);
        gbc.writeMem(0x89be, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xad2e, gbc.sp());
        EXPECT(0x89bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x89be));
        // 9F 0356
        gbc.setState(0xa77a, 0x96b, 0x5ae0, 0x6af4, 0x68e0, 0x35df, 0x0, 0x1);
        gbc.writeMem(0xa77a, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x96b, gbc.sp());
        EXPECT(0xa77b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa77a));
        // 9F 0357
        gbc.setState(0x72d, 0x6ac3, 0x460, 0xca30, 0x27cb, 0x904c, 0x0, 0x0);
        gbc.writeMem(0x72d, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6ac3, gbc.sp());
        EXPECT(0x72e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0358
        gbc.setState(0x6afe, 0xfed7, 0x6990, 0xade1, 0x6821, 0x90f, 0x0, 0x0);
        gbc.writeMem(0x6afe, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfed7, gbc.sp());
        EXPECT(0x6aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0359
        gbc.setState(0x5f93, 0xfe01, 0x4670, 0xfb11, 0xbc09, 0xc029, 0x1, 0x0);
        gbc.writeMem(0x5f93, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfe01, gbc.sp());
        EXPECT(0x5f94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 035A
        gbc.setState(0xec7c, 0xe8c8, 0xae90, 0xb9c7, 0xc965, 0x358, 0x1, 0x1);
        gbc.writeMem(0xec7c, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe8c8, gbc.sp());
        EXPECT(0xec7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xec7c));
        // 9F 035B
        gbc.setState(0x9827, 0x9a62, 0xf970, 0xdc56, 0x4dc9, 0x47c1, 0x0, 0x1);
        gbc.writeMem(0x9827, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9a62, gbc.sp());
        EXPECT(0x9828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9827));
        // 9F 035C
        gbc.setState(0xb4df, 0xddb8, 0x7dd0, 0xc73a, 0xd7e8, 0x29aa, 0x0, 0x1);
        gbc.writeMem(0xb4df, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xddb8, gbc.sp());
        EXPECT(0xb4e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb4df));
        // 9F 035D
        gbc.setState(0x273f, 0xcb27, 0x8940, 0x76e, 0x74f6, 0xbde1, 0x0, 0x1);
        gbc.writeMem(0x273f, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xcb27, gbc.sp());
        EXPECT(0x2740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 035F
        gbc.setState(0xa895, 0xc2b4, 0xbf0, 0x9af7, 0xcc21, 0x7653, 0x0, 0x0);
        gbc.writeMem(0xa895, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc2b4, gbc.sp());
        EXPECT(0xa896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa895));
        // 9F 0360
        gbc.setState(0x1582, 0xf2b, 0x1650, 0x2463, 0xafdb, 0x1af1, 0x0, 0x0);
        gbc.writeMem(0x1582, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf2b, gbc.sp());
        EXPECT(0x1583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0361
        gbc.setState(0x499c, 0x7ae2, 0x4e90, 0xb847, 0x3ca1, 0x1ed0, 0x1, 0x1);
        gbc.writeMem(0x499c, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7ae2, gbc.sp());
        EXPECT(0x499d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0362
        gbc.setState(0x6841, 0x404b, 0xa9a0, 0x8a29, 0x6a07, 0xb27, 0x0, 0x0);
        gbc.writeMem(0x6841, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x404b, gbc.sp());
        EXPECT(0x6842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0363
        gbc.setState(0x4017, 0x29d6, 0x63c0, 0xec49, 0xaf50, 0x58cb, 0x0, 0x0);
        gbc.writeMem(0x4017, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x29d6, gbc.sp());
        EXPECT(0x4018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0364
        gbc.setState(0x288e, 0xf24b, 0xd5e0, 0xb9b4, 0x43ff, 0x85be, 0x0, 0x1);
        gbc.writeMem(0x288e, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf24b, gbc.sp());
        EXPECT(0x288f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0365
        gbc.setState(0x681a, 0x7cf6, 0xbb10, 0x822c, 0x3d20, 0x69e1, 0x0, 0x1);
        gbc.writeMem(0x681a, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7cf6, gbc.sp());
        EXPECT(0x681b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0366
        gbc.setState(0xeb1b, 0x252, 0x1e60, 0xea43, 0xe5e1, 0xac62, 0x0, 0x0);
        gbc.writeMem(0xeb1b, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x252, gbc.sp());
        EXPECT(0xeb1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xeb1b));
        // 9F 0367
        gbc.setState(0xd95a, 0x3d80, 0x56d0, 0xb4, 0x983f, 0x9c86, 0x0, 0x1);
        gbc.writeMem(0xd95a, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3d80, gbc.sp());
        EXPECT(0xd95b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd95a));
        // 9F 0368
        gbc.setState(0x9526, 0x4d39, 0xbfb0, 0x795c, 0xe21b, 0xbd82, 0x1, 0x0);
        gbc.writeMem(0x9526, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4d39, gbc.sp());
        EXPECT(0x9527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9526));
        // 9F 0369
        gbc.setState(0x3e7e, 0xda8d, 0x1cd0, 0xe7ea, 0xef6c, 0x9bc4, 0x1, 0x0);
        gbc.writeMem(0x3e7e, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xda8d, gbc.sp());
        EXPECT(0x3e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 036A
        gbc.setState(0x750, 0x6a93, 0xaf20, 0xea2a, 0xe0d8, 0x26c8, 0x0, 0x0);
        gbc.writeMem(0x750, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6a93, gbc.sp());
        EXPECT(0x751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 036B
        gbc.setState(0x8e67, 0xebdc, 0xfad0, 0x2f78, 0x6837, 0x2724, 0x1, 0x1);
        gbc.writeMem(0x8e67, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xebdc, gbc.sp());
        EXPECT(0x8e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8e67));
        // 9F 036C
        gbc.setState(0xe979, 0xc658, 0xccd0, 0xdd14, 0xb5f5, 0x1cb7, 0x1, 0x0);
        gbc.writeMem(0xe979, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc658, gbc.sp());
        EXPECT(0xe97a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe979));
        // 9F 036D
        gbc.setState(0xcd57, 0x3b5, 0x5460, 0xac2b, 0xfc97, 0x8d32, 0x1, 0x0);
        gbc.writeMem(0xcd57, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3b5, gbc.sp());
        EXPECT(0xcd58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcd57));
        // 9F 036E
        gbc.setState(0x4f97, 0x46eb, 0xf0d0, 0xf8b7, 0x730b, 0xf16, 0x1, 0x0);
        gbc.writeMem(0x4f97, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x46eb, gbc.sp());
        EXPECT(0x4f98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0370
        gbc.setState(0x9180, 0xb3da, 0x6ac0, 0xf23c, 0x85cc, 0x25af, 0x1, 0x0);
        gbc.writeMem(0x9180, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb3da, gbc.sp());
        EXPECT(0x9181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9180));
        // 9F 0371
        gbc.setState(0xb025, 0x26bf, 0x2090, 0xd6a0, 0x9f06, 0x2d0e, 0x1, 0x1);
        gbc.writeMem(0xb025, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x26bf, gbc.sp());
        EXPECT(0xb026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb025));
        // 9F 0372
        gbc.setState(0x3b57, 0x585a, 0xc0e0, 0x3822, 0x96d8, 0xb868, 0x1, 0x0);
        gbc.writeMem(0x3b57, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x585a, gbc.sp());
        EXPECT(0x3b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0373
        gbc.setState(0x920c, 0x8897, 0xa420, 0xc88, 0xd2c8, 0x1c72, 0x0, 0x1);
        gbc.writeMem(0x920c, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8897, gbc.sp());
        EXPECT(0x920d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x920c));
        // 9F 0374
        gbc.setState(0xe7c7, 0x7bc9, 0x4430, 0x882d, 0x7af, 0x18d6, 0x1, 0x1);
        gbc.writeMem(0xe7c7, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7bc9, gbc.sp());
        EXPECT(0xe7c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe7c7));
        // 9F 0375
        gbc.setState(0x30b4, 0x2c30, 0x51b0, 0xda2b, 0x7d63, 0xf27a, 0x1, 0x0);
        gbc.writeMem(0x30b4, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2c30, gbc.sp());
        EXPECT(0x30b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0376
        gbc.setState(0x2a28, 0x4375, 0xb1f0, 0x658a, 0x84ca, 0x83a2, 0x1, 0x1);
        gbc.writeMem(0x2a28, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4375, gbc.sp());
        EXPECT(0x2a29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0377
        gbc.setState(0xb61, 0x72af, 0x1560, 0x85e9, 0x335c, 0x4fbf, 0x0, 0x1);
        gbc.writeMem(0xb61, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x72af, gbc.sp());
        EXPECT(0xb62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0378
        gbc.setState(0x2ef6, 0x7d67, 0xd510, 0xfab4, 0xb9dc, 0x462c, 0x0, 0x1);
        gbc.writeMem(0x2ef6, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7d67, gbc.sp());
        EXPECT(0x2ef7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0379
        gbc.setState(0x5d5d, 0xdda9, 0x8090, 0xd5ca, 0xf7d2, 0xe065, 0x0, 0x1);
        gbc.writeMem(0x5d5d, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xdda9, gbc.sp());
        EXPECT(0x5d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 037A
        gbc.setState(0xa7ee, 0x282b, 0xc410, 0xfb8f, 0x3803, 0x9497, 0x0, 0x1);
        gbc.writeMem(0xa7ee, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x282b, gbc.sp());
        EXPECT(0xa7ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa7ee));
        // 9F 037D
        gbc.setState(0x485e, 0xd4bb, 0xbfa0, 0x80de, 0x57e2, 0x67a7, 0x1, 0x0);
        gbc.writeMem(0x485e, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd4bb, gbc.sp());
        EXPECT(0x485f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 037E
        gbc.setState(0x8307, 0x173f, 0x2520, 0x8d20, 0x16b0, 0x5cb2, 0x1, 0x1);
        gbc.writeMem(0x8307, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x173f, gbc.sp());
        EXPECT(0x8308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8307));
        // 9F 037F
        gbc.setState(0xc963, 0x267f, 0xa590, 0x53f4, 0x47d1, 0xdabf, 0x0, 0x1);
        gbc.writeMem(0xc963, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x267f, gbc.sp());
        EXPECT(0xc964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc963));
        // 9F 0380
        gbc.setState(0x6621, 0x4e7b, 0xe5c0, 0x1d8f, 0x4fcb, 0xd3e0, 0x0, 0x1);
        gbc.writeMem(0x6621, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4e7b, gbc.sp());
        EXPECT(0x6622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0381
        gbc.setState(0xb762, 0x180a, 0x1840, 0x5c97, 0x457e, 0xf568, 0x1, 0x0);
        gbc.writeMem(0xb762, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x180a, gbc.sp());
        EXPECT(0xb763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb762));
        // 9F 0382
        gbc.setState(0xb308, 0xe586, 0xc760, 0x10ae, 0x481, 0x5b42, 0x0, 0x1);
        gbc.writeMem(0xb308, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe586, gbc.sp());
        EXPECT(0xb309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb308));
        // 9F 0383
        gbc.setState(0xa03, 0xdb44, 0x2e90, 0x2bad, 0xd59f, 0x5eb4, 0x0, 0x0);
        gbc.writeMem(0xa03, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdb44, gbc.sp());
        EXPECT(0xa04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0384
        gbc.setState(0x5427, 0x616f, 0x2350, 0x2f7a, 0x2f6, 0x382c, 0x0, 0x0);
        gbc.writeMem(0x5427, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x616f, gbc.sp());
        EXPECT(0x5428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0385
        gbc.setState(0x7308, 0x87ce, 0x2cc0, 0xa9f3, 0x57ec, 0xea07, 0x1, 0x0);
        gbc.writeMem(0x7308, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x87ce, gbc.sp());
        EXPECT(0x7309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0386
        gbc.setState(0xf1d, 0xc2cc, 0x29f0, 0x8149, 0x805a, 0x8162, 0x1, 0x1);
        gbc.writeMem(0xf1d, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc2cc, gbc.sp());
        EXPECT(0xf1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0387
        gbc.setState(0xc830, 0x868, 0x2720, 0x97eb, 0xa399, 0xedb5, 0x0, 0x0);
        gbc.writeMem(0xc830, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x868, gbc.sp());
        EXPECT(0xc831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc830));
        // 9F 0388
        gbc.setState(0xb829, 0x787f, 0xaeb0, 0xf1de, 0x427d, 0x1c59, 0x1, 0x0);
        gbc.writeMem(0xb829, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x787f, gbc.sp());
        EXPECT(0xb82a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb829));
        // 9F 0389
        gbc.setState(0x6a29, 0x4387, 0xdb80, 0xf350, 0x7ef, 0x61c3, 0x0, 0x1);
        gbc.writeMem(0x6a29, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4387, gbc.sp());
        EXPECT(0x6a2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 038A
        gbc.setState(0x4cb1, 0xbffe, 0x2de0, 0xf65, 0xa320, 0xfd15, 0x0, 0x1);
        gbc.writeMem(0x4cb1, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbffe, gbc.sp());
        EXPECT(0x4cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 038B
        gbc.setState(0x35e, 0x7250, 0xfba0, 0x1652, 0x4194, 0x1eac, 0x1, 0x1);
        gbc.writeMem(0x35e, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7250, gbc.sp());
        EXPECT(0x35f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 038D
        gbc.setState(0xa731, 0xf975, 0x4040, 0x6482, 0xefa7, 0xf8eb, 0x1, 0x0);
        gbc.writeMem(0xa731, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf975, gbc.sp());
        EXPECT(0xa732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa731));
        // 9F 038E
        gbc.setState(0x4902, 0xdff, 0x5c10, 0xd51, 0x7fa8, 0x7c6e, 0x1, 0x0);
        gbc.writeMem(0x4902, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdff, gbc.sp());
        EXPECT(0x4903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 038F
        gbc.setState(0x3c19, 0x752c, 0xa190, 0xd414, 0x1f17, 0xf558, 0x1, 0x1);
        gbc.writeMem(0x3c19, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x752c, gbc.sp());
        EXPECT(0x3c1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0390
        gbc.setState(0xe2f0, 0x6be5, 0x4a50, 0xf61d, 0x837e, 0x7904, 0x1, 0x0);
        gbc.writeMem(0xe2f0, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6be5, gbc.sp());
        EXPECT(0xe2f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe2f0));
        // 9F 0392
        gbc.setState(0x1d32, 0x68a9, 0xd560, 0xf5, 0xc06a, 0x56bd, 0x0, 0x1);
        gbc.writeMem(0x1d32, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x68a9, gbc.sp());
        EXPECT(0x1d33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0393
        gbc.setState(0x47b1, 0x4628, 0x3b70, 0x203d, 0xc4f7, 0xd69c, 0x0, 0x1);
        gbc.writeMem(0x47b1, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4628, gbc.sp());
        EXPECT(0x47b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0394
        gbc.setState(0x4861, 0x6465, 0x9b0, 0xfa9, 0x79b0, 0xaedf, 0x1, 0x1);
        gbc.writeMem(0x4861, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6465, gbc.sp());
        EXPECT(0x4862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0395
        gbc.setState(0x3f1, 0x9db1, 0xae80, 0x5584, 0x8efe, 0x529c, 0x1, 0x0);
        gbc.writeMem(0x3f1, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9db1, gbc.sp());
        EXPECT(0x3f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 0396
        gbc.setState(0x8326, 0xbad6, 0x4420, 0x1f42, 0xe580, 0x7c36, 0x0, 0x0);
        gbc.writeMem(0x8326, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbad6, gbc.sp());
        EXPECT(0x8327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8326));
        // 9F 0397
        gbc.setState(0x2710, 0x68ef, 0x2230, 0xd6ca, 0x42b1, 0xec0d, 0x1, 0x1);
        gbc.writeMem(0x2710, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x68ef, gbc.sp());
        EXPECT(0x2711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 0398
        gbc.setState(0x9569, 0x2cf7, 0x6470, 0x5b9d, 0x5f6e, 0x18cd, 0x1, 0x0);
        gbc.writeMem(0x9569, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2cf7, gbc.sp());
        EXPECT(0x956a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9569));
        // 9F 039A
        gbc.setState(0xcd52, 0x2000, 0x2010, 0xd34, 0x68d3, 0x8936, 0x0, 0x0);
        gbc.writeMem(0xcd52, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2000, gbc.sp());
        EXPECT(0xcd53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcd52));
        // 9F 039B
        gbc.setState(0x16a2, 0xab66, 0xa590, 0xf536, 0x424b, 0x481e, 0x1, 0x0);
        gbc.writeMem(0x16a2, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xab66, gbc.sp());
        EXPECT(0x16a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 039D
        gbc.setState(0x9cff, 0x581c, 0x6a40, 0x3fd1, 0xfb4c, 0x3b90, 0x1, 0x1);
        gbc.writeMem(0x9cff, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x581c, gbc.sp());
        EXPECT(0x9d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9cff));
        // 9F 039E
        gbc.setState(0x464f, 0x67d1, 0xf3d0, 0x2efb, 0x305d, 0xdf1c, 0x0, 0x1);
        gbc.writeMem(0x464f, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x67d1, gbc.sp());
        EXPECT(0x4650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 039F
        gbc.setState(0x90c1, 0x5d6e, 0x8b40, 0x40f5, 0x6020, 0xc69a, 0x1, 0x1);
        gbc.writeMem(0x90c1, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5d6e, gbc.sp());
        EXPECT(0x90c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x90c1));
        // 9F 03A0
        gbc.setState(0x7a6e, 0x6df8, 0xc270, 0x9bc4, 0x7736, 0x53da, 0x0, 0x0);
        gbc.writeMem(0x7a6e, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6df8, gbc.sp());
        EXPECT(0x7a6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 03A1
        gbc.setState(0x4380, 0xbc66, 0xf640, 0x2837, 0x71c, 0x20d4, 0x1, 0x0);
        gbc.writeMem(0x4380, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbc66, gbc.sp());
        EXPECT(0x4381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 03A2
        gbc.setState(0x93d1, 0x6b5, 0xe8f0, 0x5912, 0x4c39, 0xfa3b, 0x0, 0x0);
        gbc.writeMem(0x93d1, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6b5, gbc.sp());
        EXPECT(0x93d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x93d1));
        // 9F 03A3
        gbc.setState(0x1508, 0x846d, 0xc330, 0x27c7, 0x8053, 0x2d90, 0x1, 0x1);
        gbc.writeMem(0x1508, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x846d, gbc.sp());
        EXPECT(0x1509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 03A4
        gbc.setState(0xece, 0xb1ec, 0x25a0, 0x5887, 0x2497, 0xf4be, 0x0, 0x1);
        gbc.writeMem(0xece, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb1ec, gbc.sp());
        EXPECT(0xecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 03A5
        gbc.setState(0xd315, 0xad6, 0xc410, 0x9456, 0xe3ad, 0xb1ad, 0x1, 0x1);
        gbc.writeMem(0xd315, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xad6, gbc.sp());
        EXPECT(0xd316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd315));
        // 9F 03A6
        gbc.setState(0x19c9, 0x17df, 0x8ea0, 0xf02e, 0xc06d, 0x7bc0, 0x1, 0x0);
        gbc.writeMem(0x19c9, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x17df, gbc.sp());
        EXPECT(0x19ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 03A7
        gbc.setState(0x3b81, 0x652c, 0x8980, 0x1e22, 0xad74, 0xd128, 0x1, 0x1);
        gbc.writeMem(0x3b81, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x652c, gbc.sp());
        EXPECT(0x3b82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 03AA
        gbc.setState(0xb9af, 0xdd3c, 0x5170, 0xe449, 0x4e1, 0xf3b2, 0x0, 0x1);
        gbc.writeMem(0xb9af, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xdd3c, gbc.sp());
        EXPECT(0xb9b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb9af));
        // 9F 03AB
        gbc.setState(0xabfd, 0x7297, 0x33e0, 0xe77c, 0x3a77, 0xf582, 0x0, 0x1);
        gbc.writeMem(0xabfd, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7297, gbc.sp());
        EXPECT(0xabfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xabfd));
        // 9F 03AC
        gbc.setState(0x465f, 0x34e4, 0xfe90, 0xc474, 0x652c, 0xc46a, 0x1, 0x0);
        gbc.writeMem(0x465f, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x34e4, gbc.sp());
        EXPECT(0x4660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 03AD
        gbc.setState(0xbc18, 0x412e, 0x4c90, 0xeb6c, 0x44f9, 0x70d2, 0x1, 0x0);
        gbc.writeMem(0xbc18, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x412e, gbc.sp());
        EXPECT(0xbc19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbc18));
        // 9F 03AE
        gbc.setState(0x2306, 0x9bcd, 0xd910, 0x7142, 0xa2c7, 0x5598, 0x0, 0x1);
        gbc.writeMem(0x2306, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9bcd, gbc.sp());
        EXPECT(0x2307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 03B1
        gbc.setState(0x8b10, 0x87c4, 0x1f30, 0xc210, 0x20ad, 0x1928, 0x0, 0x1);
        gbc.writeMem(0x8b10, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x87c4, gbc.sp());
        EXPECT(0x8b11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8b10));
        // 9F 03B2
        gbc.setState(0xb927, 0xdfff, 0xd870, 0x7619, 0xe1a4, 0x3907, 0x0, 0x0);
        gbc.writeMem(0xb927, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdfff, gbc.sp());
        EXPECT(0xb928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb927));
        // 9F 03B3
        gbc.setState(0x8fc2, 0xfe1c, 0xd9c0, 0xf9f6, 0xf621, 0x1138, 0x1, 0x1);
        gbc.writeMem(0x8fc2, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfe1c, gbc.sp());
        EXPECT(0x8fc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8fc2));
        // 9F 03B4
        gbc.setState(0x40d8, 0x5f7a, 0x8190, 0x7460, 0x99a8, 0x62c4, 0x1, 0x1);
        gbc.writeMem(0x40d8, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5f7a, gbc.sp());
        EXPECT(0x40d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 03B5
        gbc.setState(0x6d2c, 0x83a1, 0xdaa0, 0x49e4, 0xa849, 0x1ed7, 0x1, 0x0);
        gbc.writeMem(0x6d2c, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x83a1, gbc.sp());
        EXPECT(0x6d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 03B6
        gbc.setState(0xc61b, 0xcfbf, 0xa2c0, 0xf535, 0x8a0b, 0xe1de, 0x0, 0x1);
        gbc.writeMem(0xc61b, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcfbf, gbc.sp());
        EXPECT(0xc61c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc61b));
        // 9F 03B7
        gbc.setState(0x18e3, 0x187f, 0x6000, 0xb5ed, 0x1030, 0x7bff, 0x0, 0x0);
        gbc.writeMem(0x18e3, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x187f, gbc.sp());
        EXPECT(0x18e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 03B8
        gbc.setState(0xb660, 0x7e9c, 0x92e0, 0x3e0d, 0x1a4c, 0x4323, 0x1, 0x1);
        gbc.writeMem(0xb660, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7e9c, gbc.sp());
        EXPECT(0xb661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb660));
        // 9F 03B9
        gbc.setState(0x2714, 0x1e60, 0xb460, 0x90ee, 0xcd40, 0x42ef, 0x0, 0x1);
        gbc.writeMem(0x2714, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1e60, gbc.sp());
        EXPECT(0x2715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 03BA
        gbc.setState(0x562b, 0x55a6, 0x7100, 0x9e6f, 0xccd6, 0x10e2, 0x1, 0x1);
        gbc.writeMem(0x562b, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x55a6, gbc.sp());
        EXPECT(0x562c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 03BB
        gbc.setState(0x40ae, 0x90bf, 0xdd90, 0x268b, 0x4a1f, 0xc02, 0x1, 0x1);
        gbc.writeMem(0x40ae, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x90bf, gbc.sp());
        EXPECT(0x40af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 03BC
        gbc.setState(0xa472, 0x3a8, 0x34c0, 0xc0c1, 0x1740, 0x1439, 0x0, 0x0);
        gbc.writeMem(0xa472, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3a8, gbc.sp());
        EXPECT(0xa473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa472));
        // 9F 03BD
        gbc.setState(0x1728, 0x3aec, 0x16a0, 0xc430, 0x723b, 0xc94e, 0x1, 0x0);
        gbc.writeMem(0x1728, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3aec, gbc.sp());
        EXPECT(0x1729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 03BE
        gbc.setState(0x44b1, 0xa8a, 0x79e0, 0xcb8f, 0xf32e, 0xe4ba, 0x0, 0x0);
        gbc.writeMem(0x44b1, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa8a, gbc.sp());
        EXPECT(0x44b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 03BF
        gbc.setState(0xd488, 0x35c2, 0x6ca0, 0xa2be, 0xdb1f, 0x2588, 0x1, 0x1);
        gbc.writeMem(0xd488, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x35c2, gbc.sp());
        EXPECT(0xd489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xd488));
        // 9F 03C0
        gbc.setState(0x9238, 0xe51, 0xfd90, 0xf38a, 0x1427, 0xfaf, 0x1, 0x0);
        gbc.writeMem(0x9238, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe51, gbc.sp());
        EXPECT(0x9239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9238));
        // 9F 03C1
        gbc.setState(0x8581, 0xdf28, 0xa100, 0x97ad, 0x3d03, 0x50c, 0x0, 0x0);
        gbc.writeMem(0x8581, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xdf28, gbc.sp());
        EXPECT(0x8582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8581));
        // 9F 03C2
        gbc.setState(0x6195, 0x2ee7, 0xcfa0, 0x141f, 0x96e3, 0x6477, 0x1, 0x0);
        gbc.writeMem(0x6195, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2ee7, gbc.sp());
        EXPECT(0x6196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 03C3
        gbc.setState(0x9c9f, 0xe251, 0xd100, 0x3d0c, 0x4288, 0xc62f, 0x0, 0x1);
        gbc.writeMem(0x9c9f, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe251, gbc.sp());
        EXPECT(0x9ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9c9f));
        // 9F 03C4
        gbc.setState(0x8408, 0xd571, 0xbc10, 0xfe0e, 0x881d, 0x8973, 0x0, 0x0);
        gbc.writeMem(0x8408, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd571, gbc.sp());
        EXPECT(0x8409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8408));
        // 9F 03C6
        gbc.setState(0x4dad, 0x537c, 0xaec0, 0x41fa, 0x378b, 0xb19, 0x1, 0x1);
        gbc.writeMem(0x4dad, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x537c, gbc.sp());
        EXPECT(0x4dae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 03C7
        gbc.setState(0x5bec, 0xc48d, 0x8270, 0x6a74, 0x5a46, 0xa029, 0x1, 0x1);
        gbc.writeMem(0x5bec, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc48d, gbc.sp());
        EXPECT(0x5bed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 03C8
        gbc.setState(0x51cb, 0x2f35, 0xfbd0, 0x42ff, 0xf39b, 0x7753, 0x1, 0x0);
        gbc.writeMem(0x51cb, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2f35, gbc.sp());
        EXPECT(0x51cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 03C9
        gbc.setState(0x4d02, 0xbb94, 0x6c30, 0xca03, 0xce29, 0xd39, 0x0, 0x0);
        gbc.writeMem(0x4d02, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbb94, gbc.sp());
        EXPECT(0x4d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 03CA
        gbc.setState(0x54ae, 0xf623, 0x830, 0x5d9d, 0xd5fb, 0xdb62, 0x0, 0x1);
        gbc.writeMem(0x54ae, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf623, gbc.sp());
        EXPECT(0x54af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 03CB
        gbc.setState(0xbfb8, 0xf9f4, 0x4dd0, 0x8e3f, 0x1a48, 0x78b1, 0x0, 0x0);
        gbc.writeMem(0xbfb8, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf9f4, gbc.sp());
        EXPECT(0xbfb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbfb8));
        // 9F 03CD
        gbc.setState(0x187b, 0x4acb, 0x80f0, 0xad1f, 0x6039, 0x9fcd, 0x0, 0x0);
        gbc.writeMem(0x187b, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4acb, gbc.sp());
        EXPECT(0x187c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 03CE
        gbc.setState(0x859, 0xed99, 0x17d0, 0x3a61, 0x8d4a, 0xced4, 0x1, 0x0);
        gbc.writeMem(0x859, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xed99, gbc.sp());
        EXPECT(0x85a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 03CF
        gbc.setState(0x4d21, 0xd8a7, 0x5290, 0x8f29, 0xb819, 0xc941, 0x1, 0x0);
        gbc.writeMem(0x4d21, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd8a7, gbc.sp());
        EXPECT(0x4d22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 03D0
        gbc.setState(0x4dd8, 0x679e, 0x8bd0, 0xe3bc, 0x6a17, 0x7b1e, 0x1, 0x1);
        gbc.writeMem(0x4dd8, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x679e, gbc.sp());
        EXPECT(0x4dd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 03D4
        gbc.setState(0xbe50, 0xff3c, 0x5820, 0xd081, 0xb00c, 0xe99d, 0x1, 0x1);
        gbc.writeMem(0xbe50, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xff3c, gbc.sp());
        EXPECT(0xbe51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xbe50));
        // 9F 03D5
        gbc.setState(0x28bf, 0xbc89, 0x8160, 0x56e9, 0x991, 0x275b, 0x0, 0x1);
        gbc.writeMem(0x28bf, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbc89, gbc.sp());
        EXPECT(0x28c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 03D6
        gbc.setState(0x49ac, 0x43ee, 0x5110, 0xe0d, 0xb4a1, 0x21dd, 0x0, 0x1);
        gbc.writeMem(0x49ac, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x43ee, gbc.sp());
        EXPECT(0x49ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 03D7
        gbc.setState(0x16dd, 0xbb76, 0x4390, 0xe943, 0x939c, 0xcf72, 0x1, 0x1);
        gbc.writeMem(0x16dd, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xbb76, gbc.sp());
        EXPECT(0x16de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 03D8
        gbc.setState(0x9316, 0xfe7f, 0x35f0, 0xfb8d, 0x9671, 0xe7cb, 0x1, 0x0);
        gbc.writeMem(0x9316, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xfe7f, gbc.sp());
        EXPECT(0x9317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9316));
        // 9F 03D9
        gbc.setState(0xe276, 0x48c7, 0xe3e0, 0xc353, 0x2cd4, 0x79c9, 0x1, 0x1);
        gbc.writeMem(0xe276, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x48c7, gbc.sp());
        EXPECT(0xe277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe276));
        // 9F 03DA
        gbc.setState(0x9ff9, 0x78b2, 0xbe20, 0x37cf, 0x7be1, 0xa0af, 0x0, 0x1);
        gbc.writeMem(0x9ff9, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x78b2, gbc.sp());
        EXPECT(0x9ffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9ff9));
        // 9F 03DB
        gbc.setState(0x722e, 0x10c3, 0xb6f0, 0x6fb8, 0xa93b, 0x6940, 0x0, 0x1);
        gbc.writeMem(0x722e, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x10c3, gbc.sp());
        EXPECT(0x722f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 03DC
        gbc.setState(0x46cf, 0x6eaa, 0xc350, 0x5f3a, 0xa804, 0xc0e6, 0x1, 0x1);
        gbc.writeMem(0x46cf, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6eaa, gbc.sp());
        EXPECT(0x46d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 03DD
        gbc.setState(0xe030, 0xa915, 0x3620, 0x9c27, 0xc8a0, 0x1ac9, 0x1, 0x0);
        gbc.writeMem(0xe030, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa915, gbc.sp());
        EXPECT(0xe031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe030));
        // 9F 03DE
        gbc.setState(0xe6b9, 0x3427, 0x9300, 0x1a32, 0x9585, 0x7fd8, 0x1, 0x0);
        gbc.writeMem(0xe6b9, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3427, gbc.sp());
        EXPECT(0xe6ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe6b9));
        // 9F 03DF
        gbc.setState(0x8ac, 0x834f, 0xb180, 0xd75b, 0x6d50, 0x7c80, 0x0, 0x0);
        gbc.writeMem(0x8ac, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x834f, gbc.sp());
        EXPECT(0x8ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 03E0
        gbc.setState(0xabe8, 0x86d1, 0x7cc0, 0x20eb, 0xef7e, 0xbc83, 0x0, 0x0);
        gbc.writeMem(0xabe8, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x86d1, gbc.sp());
        EXPECT(0xabe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xabe8));
        // 9F 03E1
        gbc.setState(0x8fd1, 0x835d, 0x8fd0, 0x433a, 0x2c67, 0xa56e, 0x0, 0x1);
        gbc.writeMem(0x8fd1, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x835d, gbc.sp());
        EXPECT(0x8fd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x8fd1));
        // 9F 03E2
        gbc.setState(0x4a3e, 0x1ae2, 0x52f0, 0x1bea, 0x89f6, 0xd469, 0x1, 0x0);
        gbc.writeMem(0x4a3e, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1ae2, gbc.sp());
        EXPECT(0x4a3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 03E3
        gbc.setState(0xd4d, 0x9ba7, 0x6590, 0x4fa6, 0xb37d, 0xd1f6, 0x0, 0x1);
        gbc.writeMem(0xd4d, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9ba7, gbc.sp());
        EXPECT(0xd4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 03E4
        gbc.setState(0x69e1, 0xaa09, 0x7250, 0xfbee, 0x8530, 0xa4c8, 0x1, 0x1);
        gbc.writeMem(0x69e1, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xaa09, gbc.sp());
        EXPECT(0x69e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9F 03E5
        gbc.setState(0x4b30, 0xb4c0, 0x7e0, 0x2d57, 0x5b6e, 0xb289, 0x0, 0x0);
        gbc.writeMem(0x4b30, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb4c0, gbc.sp());
        EXPECT(0x4b31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9F 03E6
        gbc.setState(0xc2e7, 0x3a75, 0x3bc0, 0x9ba5, 0xd588, 0x35e0, 0x0, 0x0);
        gbc.writeMem(0xc2e7, { 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3a75, gbc.sp());
        EXPECT(0xc2e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc2e7));
        // 9F 03E7
        gbc.setState(0xe9a4, 0xee71, 0x5d50, 0x7038, 0x3a47, 0x8df6, 0x0, 0x0);
        gbc.writeMem(0xe9a4, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xee71, gbc.sp());
        EXPECT(0xe9a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe9a4));
    }
