    TEST(gbcemu, opcode_cb_2f) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 2F 0000
        gbc.setState(0xde87, 0x2b88, 0xee10, 0x390e, 0x9b7f, 0x6846, 0x1, 0x0);
        gbc.writeMem(0xde87, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2b88, gbc.sp());
        EXPECT(0xde89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde87));
        EXPECT(0x2f, gbc.readMem(0xde88));
        // CB 2F 0001
        gbc.setState(0x8d6f, 0x71b6, 0xc290, 0xc82e, 0x358a, 0xba63, 0x1, 0x1);
        gbc.writeMem(0x8d6f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x71b6, gbc.sp());
        EXPECT(0x8d71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d6f));
        EXPECT(0x2f, gbc.readMem(0x8d70));
        // CB 2F 0002
        gbc.setState(0xb7e6, 0xb498, 0x7520, 0x9b9f, 0x5bd1, 0x619e, 0x1, 0x0);
        gbc.writeMem(0xb7e6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb498, gbc.sp());
        EXPECT(0xb7e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e6));
        EXPECT(0x2f, gbc.readMem(0xb7e7));
        // CB 2F 0003
        gbc.setState(0x6253, 0xa4f4, 0x2ac0, 0x94c8, 0xafd1, 0xc0e3, 0x0, 0x1);
        gbc.writeMem(0x6253, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa4f4, gbc.sp());
        EXPECT(0x6255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0005
        gbc.setState(0xc8c2, 0x3702, 0x30c0, 0xff1c, 0xe365, 0xce82, 0x0, 0x1);
        gbc.writeMem(0xc8c2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3702, gbc.sp());
        EXPECT(0xc8c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8c2));
        EXPECT(0x2f, gbc.readMem(0xc8c3));
        // CB 2F 0006
        gbc.setState(0x5dd4, 0xe0b5, 0xb2c0, 0x4ef5, 0x4e54, 0x2ff5, 0x0, 0x1);
        gbc.writeMem(0x5dd4, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe0b5, gbc.sp());
        EXPECT(0x5dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0007
        gbc.setState(0xdce4, 0xf487, 0x20e0, 0x6841, 0x579e, 0xb38a, 0x0, 0x1);
        gbc.writeMem(0xdce4, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf487, gbc.sp());
        EXPECT(0xdce6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdce4));
        EXPECT(0x2f, gbc.readMem(0xdce5));
        // CB 2F 0008
        gbc.setState(0x3c5d, 0xdfba, 0x81f0, 0xccc7, 0x1e87, 0x9aea, 0x0, 0x1);
        gbc.writeMem(0x3c5d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xdfba, gbc.sp());
        EXPECT(0x3c5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0009
        gbc.setState(0xbcd2, 0xae50, 0xf950, 0x186, 0xb761, 0x41e3, 0x0, 0x0);
        gbc.writeMem(0xbcd2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xae50, gbc.sp());
        EXPECT(0xbcd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcd2));
        EXPECT(0x2f, gbc.readMem(0xbcd3));
        // CB 2F 000A
        gbc.setState(0x7397, 0x2929, 0x6120, 0x29a7, 0x5d38, 0xf31c, 0x1, 0x0);
        gbc.writeMem(0x7397, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2929, gbc.sp());
        EXPECT(0x7399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 000B
        gbc.setState(0x3066, 0x3d51, 0x5760, 0x9d34, 0xc3ee, 0x5f18, 0x0, 0x0);
        gbc.writeMem(0x3066, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3d51, gbc.sp());
        EXPECT(0x3068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 000C
        gbc.setState(0x460b, 0xa908, 0xc640, 0x2433, 0x2509, 0xc650, 0x1, 0x0);
        gbc.writeMem(0x460b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa908, gbc.sp());
        EXPECT(0x460d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 000D
        gbc.setState(0x85e8, 0x2ca5, 0xa8c0, 0x86ba, 0x3973, 0x869b, 0x1, 0x0);
        gbc.writeMem(0x85e8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2ca5, gbc.sp());
        EXPECT(0x85ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85e8));
        EXPECT(0x2f, gbc.readMem(0x85e9));
        // CB 2F 000E
        gbc.setState(0x259a, 0x2046, 0x31b0, 0xda6f, 0x39ba, 0xc721, 0x1, 0x0);
        gbc.writeMem(0x259a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2046, gbc.sp());
        EXPECT(0x259c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 000F
        gbc.setState(0xea7d, 0xe6f4, 0x22b0, 0x12f8, 0x584, 0x3360, 0x1, 0x1);
        gbc.writeMem(0xea7d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe6f4, gbc.sp());
        EXPECT(0xea7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea7d));
        EXPECT(0x2f, gbc.readMem(0xea7e));
        // CB 2F 0010
        gbc.setState(0x1ed7, 0x6bb9, 0xc6a0, 0x5ca4, 0x5a74, 0xb95a, 0x0, 0x0);
        gbc.writeMem(0x1ed7, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6bb9, gbc.sp());
        EXPECT(0x1ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0011
        gbc.setState(0x81e9, 0x9903, 0xfaa0, 0xe997, 0xa57b, 0x48c8, 0x0, 0x1);
        gbc.writeMem(0x81e9, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9903, gbc.sp());
        EXPECT(0x81eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81e9));
        EXPECT(0x2f, gbc.readMem(0x81ea));
        // CB 2F 0012
        gbc.setState(0x407, 0x4afd, 0x5210, 0xecf3, 0xab5b, 0xf15e, 0x0, 0x0);
        gbc.writeMem(0x407, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4afd, gbc.sp());
        EXPECT(0x409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0013
        gbc.setState(0x1da3, 0x9e74, 0x11d0, 0xf8d6, 0xa93c, 0xbef, 0x1, 0x1);
        gbc.writeMem(0x1da3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9e74, gbc.sp());
        EXPECT(0x1da5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0014
        gbc.setState(0x2502, 0x2bda, 0xae70, 0x2c4b, 0x647f, 0xe58e, 0x0, 0x1);
        gbc.writeMem(0x2502, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2bda, gbc.sp());
        EXPECT(0x2504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0015
        gbc.setState(0xce42, 0x4837, 0x7950, 0x66e3, 0xc9d1, 0xb6b8, 0x0, 0x0);
        gbc.writeMem(0xce42, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4837, gbc.sp());
        EXPECT(0xce44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce42));
        EXPECT(0x2f, gbc.readMem(0xce43));
        // CB 2F 0016
        gbc.setState(0x125f, 0xb9d7, 0x37e0, 0xb3c5, 0x482e, 0xa2, 0x1, 0x1);
        gbc.writeMem(0x125f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb9d7, gbc.sp());
        EXPECT(0x1261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0017
        gbc.setState(0xe3d2, 0x506, 0x4360, 0xecf8, 0x6ce4, 0x7226, 0x1, 0x1);
        gbc.writeMem(0xe3d2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x506, gbc.sp());
        EXPECT(0xe3d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3d2));
        EXPECT(0x2f, gbc.readMem(0xe3d3));
        // CB 2F 0018
        gbc.setState(0xc4fe, 0x3684, 0x64d0, 0x7ea5, 0xfa4f, 0xbe61, 0x0, 0x0);
        gbc.writeMem(0xc4fe, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3684, gbc.sp());
        EXPECT(0xc500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4fe));
        EXPECT(0x2f, gbc.readMem(0xc4ff));
        // CB 2F 0019
        gbc.setState(0xdf53, 0xe10, 0x5770, 0xc34e, 0x575, 0x9ca9, 0x1, 0x1);
        gbc.writeMem(0xdf53, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe10, gbc.sp());
        EXPECT(0xdf55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf53));
        EXPECT(0x2f, gbc.readMem(0xdf54));
        // CB 2F 001A
        gbc.setState(0x4e82, 0xa5f1, 0xd6b0, 0xc19f, 0x3e6d, 0x7acc, 0x0, 0x1);
        gbc.writeMem(0x4e82, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa5f1, gbc.sp());
        EXPECT(0x4e84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 001B
        gbc.setState(0x33ca, 0x86f9, 0x42c0, 0xfd1b, 0x3539, 0xe2b7, 0x0, 0x1);
        gbc.writeMem(0x33ca, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x86f9, gbc.sp());
        EXPECT(0x33cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 001C
        gbc.setState(0x8190, 0x16ee, 0xabd0, 0xa9ec, 0x7af5, 0x4b38, 0x0, 0x1);
        gbc.writeMem(0x8190, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x16ee, gbc.sp());
        EXPECT(0x8192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8190));
        EXPECT(0x2f, gbc.readMem(0x8191));
        // CB 2F 001D
        gbc.setState(0x4428, 0x255f, 0xaed0, 0xa26f, 0x58a7, 0x6a9a, 0x0, 0x1);
        gbc.writeMem(0x4428, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x255f, gbc.sp());
        EXPECT(0x442a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 001E
        gbc.setState(0x10bb, 0x6c6f, 0x9da0, 0x8330, 0x2ba6, 0xa1cc, 0x1, 0x1);
        gbc.writeMem(0x10bb, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6c6f, gbc.sp());
        EXPECT(0x10bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 001F
        gbc.setState(0xef36, 0x2030, 0xd100, 0x26da, 0xf57b, 0xfb4c, 0x0, 0x0);
        gbc.writeMem(0xef36, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2030, gbc.sp());
        EXPECT(0xef38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef36));
        EXPECT(0x2f, gbc.readMem(0xef37));
        // CB 2F 0020
        gbc.setState(0xaf3e, 0x7af3, 0xe7b0, 0xa08, 0xcc2e, 0xe6aa, 0x0, 0x0);
        gbc.writeMem(0xaf3e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7af3, gbc.sp());
        EXPECT(0xaf40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf3e));
        EXPECT(0x2f, gbc.readMem(0xaf3f));
        // CB 2F 0021
        gbc.setState(0xda1, 0x4752, 0x72e0, 0x6970, 0x417, 0x9656, 0x0, 0x0);
        gbc.writeMem(0xda1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4752, gbc.sp());
        EXPECT(0xda3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0023
        gbc.setState(0xd38, 0xbd4, 0xc0f0, 0x911, 0x351d, 0x5a1d, 0x1, 0x0);
        gbc.writeMem(0xd38, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xbd4, gbc.sp());
        EXPECT(0xd3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0024
        gbc.setState(0x4654, 0xec4, 0xc20, 0x5f7d, 0x5002, 0x4d7f, 0x0, 0x0);
        gbc.writeMem(0x4654, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xec4, gbc.sp());
        EXPECT(0x4656, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0025
        gbc.setState(0xb4bc, 0xe65a, 0x84a0, 0xc880, 0xa9fd, 0x6d9b, 0x1, 0x0);
        gbc.writeMem(0xb4bc, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe65a, gbc.sp());
        EXPECT(0xb4be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4bc));
        EXPECT(0x2f, gbc.readMem(0xb4bd));
        // CB 2F 0026
        gbc.setState(0x4269, 0xdc6, 0x8e40, 0x20f2, 0xac44, 0x7647, 0x0, 0x0);
        gbc.writeMem(0x4269, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xdc6, gbc.sp());
        EXPECT(0x426b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0027
        gbc.setState(0xeb83, 0x6999, 0x4850, 0xddbf, 0x1ada, 0xd5a1, 0x1, 0x1);
        gbc.writeMem(0xeb83, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6999, gbc.sp());
        EXPECT(0xeb85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb83));
        EXPECT(0x2f, gbc.readMem(0xeb84));
        // CB 2F 0028
        gbc.setState(0x73d7, 0x6f82, 0xb3c0, 0x7691, 0xad42, 0x74fb, 0x1, 0x1);
        gbc.writeMem(0x73d7, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6f82, gbc.sp());
        EXPECT(0x73d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0029
        gbc.setState(0xb54, 0x6272, 0x72a0, 0x1232, 0x1c0e, 0xa48a, 0x0, 0x1);
        gbc.writeMem(0xb54, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6272, gbc.sp());
        EXPECT(0xb56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 002A
        gbc.setState(0xd095, 0xf547, 0xed10, 0xdf4e, 0xe88c, 0x684d, 0x1, 0x1);
        gbc.writeMem(0xd095, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf547, gbc.sp());
        EXPECT(0xd097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd095));
        EXPECT(0x2f, gbc.readMem(0xd096));
        // CB 2F 002B
        gbc.setState(0x7886, 0x9580, 0xb650, 0xb1e9, 0x495a, 0x65f5, 0x1, 0x0);
        gbc.writeMem(0x7886, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9580, gbc.sp());
        EXPECT(0x7888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 002C
        gbc.setState(0xabab, 0xdd97, 0x43b0, 0x2517, 0x446f, 0x72f9, 0x0, 0x1);
        gbc.writeMem(0xabab, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xdd97, gbc.sp());
        EXPECT(0xabad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabab));
        EXPECT(0x2f, gbc.readMem(0xabac));
        // CB 2F 002D
        gbc.setState(0x48b2, 0x59f, 0xcee0, 0x85fc, 0x3b02, 0x5a3b, 0x1, 0x1);
        gbc.writeMem(0x48b2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x59f, gbc.sp());
        EXPECT(0x48b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 002E
        gbc.setState(0x5d18, 0x5f32, 0x39c0, 0x29db, 0x6793, 0x1a14, 0x0, 0x0);
        gbc.writeMem(0x5d18, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5f32, gbc.sp());
        EXPECT(0x5d1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 002F
        gbc.setState(0x6e60, 0xa5dd, 0x8d10, 0xf711, 0x8cc3, 0x854f, 0x0, 0x1);
        gbc.writeMem(0x6e60, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa5dd, gbc.sp());
        EXPECT(0x6e62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0030
        gbc.setState(0xa8d3, 0xea4e, 0x2740, 0xaa38, 0xf2f8, 0xd891, 0x1, 0x1);
        gbc.writeMem(0xa8d3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xea4e, gbc.sp());
        EXPECT(0xa8d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d3));
        EXPECT(0x2f, gbc.readMem(0xa8d4));
        // CB 2F 0031
        gbc.setState(0x9bbf, 0xa2d8, 0x8a60, 0x1b75, 0x6e57, 0xbfdf, 0x1, 0x1);
        gbc.writeMem(0x9bbf, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa2d8, gbc.sp());
        EXPECT(0x9bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bbf));
        EXPECT(0x2f, gbc.readMem(0x9bc0));
        // CB 2F 0032
        gbc.setState(0xe3fd, 0xb893, 0x6930, 0x408a, 0x6b1b, 0xab6f, 0x0, 0x1);
        gbc.writeMem(0xe3fd, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb893, gbc.sp());
        EXPECT(0xe3ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3fd));
        EXPECT(0x2f, gbc.readMem(0xe3fe));
        // CB 2F 0033
        gbc.setState(0x97b1, 0x5e3c, 0xd420, 0x6318, 0x8465, 0x57a, 0x1, 0x1);
        gbc.writeMem(0x97b1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5e3c, gbc.sp());
        EXPECT(0x97b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97b1));
        EXPECT(0x2f, gbc.readMem(0x97b2));
        // CB 2F 0034
        gbc.setState(0x95b9, 0x862e, 0xc940, 0xe71f, 0x2bfa, 0xf784, 0x0, 0x1);
        gbc.writeMem(0x95b9, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x862e, gbc.sp());
        EXPECT(0x95bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b9));
        EXPECT(0x2f, gbc.readMem(0x95ba));
        // CB 2F 0035
        gbc.setState(0x28b8, 0x23c5, 0x9b70, 0x591e, 0xda7, 0x67bb, 0x0, 0x1);
        gbc.writeMem(0x28b8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x23c5, gbc.sp());
        EXPECT(0x28ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0036
        gbc.setState(0x20e6, 0x746d, 0x85a0, 0x3819, 0x65a, 0x7f75, 0x1, 0x1);
        gbc.writeMem(0x20e6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x746d, gbc.sp());
        EXPECT(0x20e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0037
        gbc.setState(0xd250, 0x7866, 0x7c00, 0x4098, 0xb88c, 0x53f2, 0x0, 0x1);
        gbc.writeMem(0xd250, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7866, gbc.sp());
        EXPECT(0xd252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd250));
        EXPECT(0x2f, gbc.readMem(0xd251));
        // CB 2F 0038
        gbc.setState(0x91d6, 0x34b7, 0x80, 0xa7c1, 0x22d4, 0x5468, 0x0, 0x1);
        gbc.writeMem(0x91d6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x34b7, gbc.sp());
        EXPECT(0x91d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91d6));
        EXPECT(0x2f, gbc.readMem(0x91d7));
        // CB 2F 0039
        gbc.setState(0x1c8e, 0x27bf, 0x2f50, 0x53d, 0xf245, 0xc465, 0x0, 0x1);
        gbc.writeMem(0x1c8e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x27bf, gbc.sp());
        EXPECT(0x1c90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 003A
        gbc.setState(0x8a70, 0x22d0, 0x6930, 0x7aa1, 0x3831, 0x6e2e, 0x1, 0x0);
        gbc.writeMem(0x8a70, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x22d0, gbc.sp());
        EXPECT(0x8a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a70));
        EXPECT(0x2f, gbc.readMem(0x8a71));
        // CB 2F 003B
        gbc.setState(0xc664, 0xddb2, 0x6af0, 0x7298, 0xfdfa, 0x4a49, 0x0, 0x1);
        gbc.writeMem(0xc664, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xddb2, gbc.sp());
        EXPECT(0xc666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc664));
        EXPECT(0x2f, gbc.readMem(0xc665));
        // CB 2F 003C
        gbc.setState(0x9bc1, 0x2ea3, 0x22d0, 0xb2a0, 0x94dc, 0x7d62, 0x1, 0x1);
        gbc.writeMem(0x9bc1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2ea3, gbc.sp());
        EXPECT(0x9bc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bc1));
        EXPECT(0x2f, gbc.readMem(0x9bc2));
        // CB 2F 003D
        gbc.setState(0xe72c, 0xfcaa, 0x8e60, 0x8d09, 0x9163, 0xfc5a, 0x1, 0x1);
        gbc.writeMem(0xe72c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfcaa, gbc.sp());
        EXPECT(0xe72e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe72c));
        EXPECT(0x2f, gbc.readMem(0xe72d));
        // CB 2F 003F
        gbc.setState(0x4b88, 0xd41a, 0x2380, 0x4cf6, 0xecd7, 0x1001, 0x1, 0x1);
        gbc.writeMem(0x4b88, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd41a, gbc.sp());
        EXPECT(0x4b8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0040
        gbc.setState(0x7a1d, 0x36fb, 0xe050, 0xd9e3, 0xe363, 0x9cab, 0x1, 0x1);
        gbc.writeMem(0x7a1d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x36fb, gbc.sp());
        EXPECT(0x7a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0041
        gbc.setState(0xb938, 0x2d1f, 0xadd0, 0xda1f, 0xefa4, 0x7a70, 0x1, 0x1);
        gbc.writeMem(0xb938, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2d1f, gbc.sp());
        EXPECT(0xb93a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb938));
        EXPECT(0x2f, gbc.readMem(0xb939));
        // CB 2F 0042
        gbc.setState(0x6e92, 0xd113, 0x5160, 0xd688, 0x8c41, 0xc67c, 0x1, 0x0);
        gbc.writeMem(0x6e92, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd113, gbc.sp());
        EXPECT(0x6e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0043
        gbc.setState(0x5bff, 0x6f70, 0xfff0, 0xdbce, 0x8b83, 0xf2d8, 0x1, 0x0);
        gbc.writeMem(0x5bff, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6f70, gbc.sp());
        EXPECT(0x5c01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0044
        gbc.setState(0xd582, 0x60d8, 0x7110, 0x8262, 0x4cbe, 0xd62b, 0x1, 0x0);
        gbc.writeMem(0xd582, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x60d8, gbc.sp());
        EXPECT(0xd584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd582));
        EXPECT(0x2f, gbc.readMem(0xd583));
        // CB 2F 0045
        gbc.setState(0xeffc, 0xf9ec, 0xdd80, 0x2d9a, 0xf757, 0x6209, 0x0, 0x1);
        gbc.writeMem(0xeffc, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf9ec, gbc.sp());
        EXPECT(0xeffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeffc));
        EXPECT(0x2f, gbc.readMem(0xeffd));
        // CB 2F 0046
        gbc.setState(0x9aa, 0xc1d0, 0x810, 0xb648, 0x3157, 0xe451, 0x0, 0x1);
        gbc.writeMem(0x9aa, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc1d0, gbc.sp());
        EXPECT(0x9ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0047
        gbc.setState(0x76cc, 0x88f7, 0xc030, 0xc09f, 0xe500, 0x242b, 0x1, 0x0);
        gbc.writeMem(0x76cc, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x88f7, gbc.sp());
        EXPECT(0x76ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0048
        gbc.setState(0xcab1, 0xdde7, 0xbd30, 0xd0fe, 0xed9a, 0x78d7, 0x0, 0x0);
        gbc.writeMem(0xcab1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xdde7, gbc.sp());
        EXPECT(0xcab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcab1));
        EXPECT(0x2f, gbc.readMem(0xcab2));
        // CB 2F 0049
        gbc.setState(0x8f22, 0x6d3e, 0xf1a0, 0xc37a, 0x709b, 0x48b0, 0x1, 0x1);
        gbc.writeMem(0x8f22, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6d3e, gbc.sp());
        EXPECT(0x8f24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f22));
        EXPECT(0x2f, gbc.readMem(0x8f23));
        // CB 2F 004A
        gbc.setState(0x1c25, 0x6b88, 0x8f60, 0x3878, 0x8206, 0xf709, 0x1, 0x1);
        gbc.writeMem(0x1c25, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6b88, gbc.sp());
        EXPECT(0x1c27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 004B
        gbc.setState(0x3e01, 0xef0b, 0x2ef0, 0xaeec, 0xefca, 0xf007, 0x1, 0x0);
        gbc.writeMem(0x3e01, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xef0b, gbc.sp());
        EXPECT(0x3e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 004C
        gbc.setState(0xdf6e, 0x6c6c, 0xf050, 0xbf38, 0x68ba, 0xa480, 0x1, 0x0);
        gbc.writeMem(0xdf6e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6c6c, gbc.sp());
        EXPECT(0xdf70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf6e));
        EXPECT(0x2f, gbc.readMem(0xdf6f));
        // CB 2F 004D
        gbc.setState(0x8e6e, 0x4420, 0x5190, 0xe926, 0x7fd2, 0xc929, 0x0, 0x1);
        gbc.writeMem(0x8e6e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4420, gbc.sp());
        EXPECT(0x8e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e6e));
        EXPECT(0x2f, gbc.readMem(0x8e6f));
        // CB 2F 004E
        gbc.setState(0xdfdc, 0x436a, 0xbc10, 0x96c7, 0x6cc4, 0x2230, 0x0, 0x0);
        gbc.writeMem(0xdfdc, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x436a, gbc.sp());
        EXPECT(0xdfde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfdc));
        EXPECT(0x2f, gbc.readMem(0xdfdd));
        // CB 2F 0050
        gbc.setState(0x16c2, 0x3b95, 0xa7e0, 0xe1bf, 0x238b, 0xef72, 0x1, 0x0);
        gbc.writeMem(0x16c2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3b95, gbc.sp());
        EXPECT(0x16c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0051
        gbc.setState(0x62f0, 0xf94a, 0x3f50, 0x92fe, 0xa8e2, 0x102b, 0x0, 0x1);
        gbc.writeMem(0x62f0, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf94a, gbc.sp());
        EXPECT(0x62f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0052
        gbc.setState(0xae84, 0xef2a, 0x3470, 0x1590, 0xddf2, 0xedd0, 0x1, 0x0);
        gbc.writeMem(0xae84, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xef2a, gbc.sp());
        EXPECT(0xae86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae84));
        EXPECT(0x2f, gbc.readMem(0xae85));
        // CB 2F 0053
        gbc.setState(0x80c5, 0xdac3, 0xb50, 0x405f, 0x1a93, 0x1b0e, 0x0, 0x1);
        gbc.writeMem(0x80c5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xdac3, gbc.sp());
        EXPECT(0x80c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80c5));
        EXPECT(0x2f, gbc.readMem(0x80c6));
        // CB 2F 0054
        gbc.setState(0x42c5, 0x4fb7, 0x8690, 0xb273, 0xb9e5, 0xaad7, 0x0, 0x0);
        gbc.writeMem(0x42c5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4fb7, gbc.sp());
        EXPECT(0x42c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0055
        gbc.setState(0x263c, 0xf874, 0x36a0, 0xe9c0, 0xf9b0, 0xe19c, 0x0, 0x0);
        gbc.writeMem(0x263c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf874, gbc.sp());
        EXPECT(0x263e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0056
        gbc.setState(0x3b23, 0xd387, 0xf8f0, 0x66fe, 0x235, 0xda92, 0x1, 0x0);
        gbc.writeMem(0x3b23, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd387, gbc.sp());
        EXPECT(0x3b25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0057
        gbc.setState(0x8166, 0xb5bb, 0xab10, 0x9ef6, 0xd907, 0x3eca, 0x0, 0x0);
        gbc.writeMem(0x8166, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb5bb, gbc.sp());
        EXPECT(0x8168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8166));
        EXPECT(0x2f, gbc.readMem(0x8167));
        // CB 2F 0058
        gbc.setState(0x2df9, 0x1a87, 0xbc40, 0x2f6e, 0x8ff8, 0x4342, 0x1, 0x1);
        gbc.writeMem(0x2df9, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1a87, gbc.sp());
        EXPECT(0x2dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0059
        gbc.setState(0x86de, 0xf141, 0x2690, 0x78c7, 0x476a, 0xcdb, 0x1, 0x1);
        gbc.writeMem(0x86de, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf141, gbc.sp());
        EXPECT(0x86e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86de));
        EXPECT(0x2f, gbc.readMem(0x86df));
        // CB 2F 005A
        gbc.setState(0x193c, 0xe613, 0x3450, 0x93ed, 0x2988, 0x6c52, 0x0, 0x1);
        gbc.writeMem(0x193c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe613, gbc.sp());
        EXPECT(0x193e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 005B
        gbc.setState(0x26cb, 0xc6cf, 0xc950, 0x62c, 0xb955, 0x315, 0x1, 0x0);
        gbc.writeMem(0x26cb, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc6cf, gbc.sp());
        EXPECT(0x26cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 005E
        gbc.setState(0x1eec, 0x7bd9, 0x2650, 0x68c0, 0xb051, 0xf05f, 0x0, 0x0);
        gbc.writeMem(0x1eec, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7bd9, gbc.sp());
        EXPECT(0x1eee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 005F
        gbc.setState(0xe1a2, 0xc11d, 0x5ff0, 0xdf6, 0xfd45, 0x95cf, 0x1, 0x1);
        gbc.writeMem(0xe1a2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc11d, gbc.sp());
        EXPECT(0xe1a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a2));
        EXPECT(0x2f, gbc.readMem(0xe1a3));
        // CB 2F 0060
        gbc.setState(0xa36b, 0xbf03, 0xc900, 0xf358, 0x33e, 0x5eed, 0x1, 0x0);
        gbc.writeMem(0xa36b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbf03, gbc.sp());
        EXPECT(0xa36d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa36b));
        EXPECT(0x2f, gbc.readMem(0xa36c));
        // CB 2F 0061
        gbc.setState(0xeb76, 0x956c, 0x9130, 0xf771, 0x1dac, 0xd722, 0x1, 0x0);
        gbc.writeMem(0xeb76, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x956c, gbc.sp());
        EXPECT(0xeb78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb76));
        EXPECT(0x2f, gbc.readMem(0xeb77));
        // CB 2F 0062
        gbc.setState(0x7c3c, 0x352b, 0x2540, 0x1260, 0x11c1, 0xf418, 0x0, 0x1);
        gbc.writeMem(0x7c3c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x352b, gbc.sp());
        EXPECT(0x7c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0063
        gbc.setState(0x8d1a, 0x7b7b, 0xc5f0, 0x3fe8, 0xfa47, 0x7ff, 0x1, 0x1);
        gbc.writeMem(0x8d1a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7b7b, gbc.sp());
        EXPECT(0x8d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d1a));
        EXPECT(0x2f, gbc.readMem(0x8d1b));
        // CB 2F 0064
        gbc.setState(0x418c, 0x20ad, 0xd6b0, 0x24d9, 0x4a9c, 0x75f9, 0x1, 0x0);
        gbc.writeMem(0x418c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x20ad, gbc.sp());
        EXPECT(0x418e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0065
        gbc.setState(0xd432, 0xb95d, 0xcf70, 0xce0a, 0x1a56, 0x5210, 0x1, 0x1);
        gbc.writeMem(0xd432, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb95d, gbc.sp());
        EXPECT(0xd434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd432));
        EXPECT(0x2f, gbc.readMem(0xd433));
        // CB 2F 0066
        gbc.setState(0xd77, 0xe8d8, 0xed30, 0xf4e, 0xf446, 0x4e62, 0x0, 0x0);
        gbc.writeMem(0xd77, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe8d8, gbc.sp());
        EXPECT(0xd79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0067
        gbc.setState(0x1be8, 0x2b75, 0x2b80, 0xd413, 0x3451, 0x5e29, 0x0, 0x0);
        gbc.writeMem(0x1be8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2b75, gbc.sp());
        EXPECT(0x1bea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0068
        gbc.setState(0x7f17, 0xa64b, 0x9ea0, 0x69f, 0x2e5f, 0x24f1, 0x1, 0x1);
        gbc.writeMem(0x7f17, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa64b, gbc.sp());
        EXPECT(0x7f19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0069
        gbc.setState(0xd461, 0x81e2, 0x7120, 0x975, 0x9f56, 0x2ef7, 0x0, 0x0);
        gbc.writeMem(0xd461, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x81e2, gbc.sp());
        EXPECT(0xd463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd461));
        EXPECT(0x2f, gbc.readMem(0xd462));
        // CB 2F 006A
        gbc.setState(0x2d1d, 0x3575, 0x2d80, 0x74ed, 0x8e3, 0xdd90, 0x0, 0x0);
        gbc.writeMem(0x2d1d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3575, gbc.sp());
        EXPECT(0x2d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 006B
        gbc.setState(0x2f09, 0xd077, 0xf750, 0x8c0c, 0xe069, 0x9414, 0x1, 0x0);
        gbc.writeMem(0x2f09, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd077, gbc.sp());
        EXPECT(0x2f0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 006C
        gbc.setState(0x2e24, 0xfa3e, 0xd6b0, 0xf7f4, 0x770c, 0x7cc8, 0x0, 0x1);
        gbc.writeMem(0x2e24, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfa3e, gbc.sp());
        EXPECT(0x2e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 006D
        gbc.setState(0x274, 0x175f, 0xc060, 0x8b3e, 0xf6ad, 0x6b54, 0x0, 0x0);
        gbc.writeMem(0x274, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x175f, gbc.sp());
        EXPECT(0x276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 006E
        gbc.setState(0x2e0e, 0x899b, 0xb3b0, 0xab63, 0x2e66, 0x2bf6, 0x0, 0x0);
        gbc.writeMem(0x2e0e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x899b, gbc.sp());
        EXPECT(0x2e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0070
        gbc.setState(0x89d7, 0x6030, 0xf920, 0xa6cf, 0x32d7, 0xb971, 0x1, 0x1);
        gbc.writeMem(0x89d7, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6030, gbc.sp());
        EXPECT(0x89d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d7));
        EXPECT(0x2f, gbc.readMem(0x89d8));
        // CB 2F 0071
        gbc.setState(0xcfa3, 0xfce1, 0x5b50, 0xd372, 0xcf1d, 0x63ac, 0x0, 0x1);
        gbc.writeMem(0xcfa3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfce1, gbc.sp());
        EXPECT(0xcfa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfa3));
        EXPECT(0x2f, gbc.readMem(0xcfa4));
        // CB 2F 0072
        gbc.setState(0x459c, 0xea38, 0xae80, 0x7751, 0xf3fe, 0x6f71, 0x0, 0x1);
        gbc.writeMem(0x459c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xea38, gbc.sp());
        EXPECT(0x459e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0073
        gbc.setState(0xdcac, 0x2af7, 0x2890, 0x1967, 0xa15c, 0xf49, 0x1, 0x1);
        gbc.writeMem(0xdcac, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2af7, gbc.sp());
        EXPECT(0xdcae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcac));
        EXPECT(0x2f, gbc.readMem(0xdcad));
        // CB 2F 0074
        gbc.setState(0x15ff, 0x75be, 0xd610, 0xc253, 0x1956, 0xe300, 0x0, 0x1);
        gbc.writeMem(0x15ff, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x75be, gbc.sp());
        EXPECT(0x1601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0075
        gbc.setState(0x9ae5, 0xcc4d, 0x66b0, 0x35be, 0x62b0, 0xbf0f, 0x0, 0x0);
        gbc.writeMem(0x9ae5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcc4d, gbc.sp());
        EXPECT(0x9ae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae5));
        EXPECT(0x2f, gbc.readMem(0x9ae6));
        // CB 2F 0076
        gbc.setState(0xbf97, 0xf422, 0x4950, 0x848c, 0x90e5, 0x77de, 0x0, 0x0);
        gbc.writeMem(0xbf97, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf422, gbc.sp());
        EXPECT(0xbf99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf97));
        EXPECT(0x2f, gbc.readMem(0xbf98));
        // CB 2F 0077
        gbc.setState(0x3a63, 0x7fa7, 0xb490, 0x74a8, 0xccbf, 0xbd9e, 0x0, 0x1);
        gbc.writeMem(0x3a63, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7fa7, gbc.sp());
        EXPECT(0x3a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0078
        gbc.setState(0x34c8, 0x147e, 0x2670, 0xd653, 0xd484, 0xaca3, 0x0, 0x1);
        gbc.writeMem(0x34c8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x147e, gbc.sp());
        EXPECT(0x34ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0079
        gbc.setState(0x6908, 0x25a, 0x5d50, 0x83af, 0x21fd, 0x932b, 0x1, 0x0);
        gbc.writeMem(0x6908, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x25a, gbc.sp());
        EXPECT(0x690a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 007A
        gbc.setState(0x499d, 0x553, 0xfc60, 0x7b2c, 0xee77, 0x644b, 0x1, 0x0);
        gbc.writeMem(0x499d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x553, gbc.sp());
        EXPECT(0x499f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 007B
        gbc.setState(0xc16b, 0xd362, 0x4800, 0x6d0, 0x57df, 0xec39, 0x1, 0x0);
        gbc.writeMem(0xc16b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd362, gbc.sp());
        EXPECT(0xc16d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc16b));
        EXPECT(0x2f, gbc.readMem(0xc16c));
        // CB 2F 007C
        gbc.setState(0x48ec, 0x9cdb, 0x6900, 0x67f8, 0x8ff1, 0x7a00, 0x0, 0x0);
        gbc.writeMem(0x48ec, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9cdb, gbc.sp());
        EXPECT(0x48ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 007D
        gbc.setState(0x91ea, 0x5a45, 0x36b0, 0xc035, 0x9e86, 0x637e, 0x0, 0x1);
        gbc.writeMem(0x91ea, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5a45, gbc.sp());
        EXPECT(0x91ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ea));
        EXPECT(0x2f, gbc.readMem(0x91eb));
        // CB 2F 007F
        gbc.setState(0x7df2, 0xfae7, 0x3120, 0xaa7a, 0x3e70, 0x4c65, 0x0, 0x0);
        gbc.writeMem(0x7df2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfae7, gbc.sp());
        EXPECT(0x7df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0080
        gbc.setState(0xa8d3, 0xb0ba, 0x70d0, 0x1fc8, 0x98ea, 0x904a, 0x0, 0x0);
        gbc.writeMem(0xa8d3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb0ba, gbc.sp());
        EXPECT(0xa8d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d3));
        EXPECT(0x2f, gbc.readMem(0xa8d4));
        // CB 2F 0081
        gbc.setState(0x44fb, 0xe91a, 0x9620, 0x83b0, 0x7f14, 0xe86e, 0x1, 0x1);
        gbc.writeMem(0x44fb, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe91a, gbc.sp());
        EXPECT(0x44fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0082
        gbc.setState(0x3212, 0x7427, 0x6970, 0xb7f1, 0xffb7, 0x697f, 0x1, 0x0);
        gbc.writeMem(0x3212, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7427, gbc.sp());
        EXPECT(0x3214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0083
        gbc.setState(0xad5b, 0x1dfb, 0xc640, 0x43f1, 0x8480, 0x9d18, 0x1, 0x1);
        gbc.writeMem(0xad5b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1dfb, gbc.sp());
        EXPECT(0xad5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad5b));
        EXPECT(0x2f, gbc.readMem(0xad5c));
        // CB 2F 0084
        gbc.setState(0x9fc6, 0x766d, 0xc280, 0xe7b7, 0x3c71, 0xe558, 0x0, 0x0);
        gbc.writeMem(0x9fc6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x766d, gbc.sp());
        EXPECT(0x9fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc6));
        EXPECT(0x2f, gbc.readMem(0x9fc7));
        // CB 2F 0085
        gbc.setState(0xe094, 0x1e21, 0xfc0, 0xe6bd, 0x7be9, 0x4014, 0x0, 0x0);
        gbc.writeMem(0xe094, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1e21, gbc.sp());
        EXPECT(0xe096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe094));
        EXPECT(0x2f, gbc.readMem(0xe095));
        // CB 2F 0086
        gbc.setState(0x5ec9, 0x718e, 0x2ac0, 0x7aa1, 0x47b6, 0xc815, 0x0, 0x0);
        gbc.writeMem(0x5ec9, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x718e, gbc.sp());
        EXPECT(0x5ecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0087
        gbc.setState(0x1dbd, 0x4c30, 0xe7d0, 0x1d62, 0xae37, 0x7ad1, 0x0, 0x1);
        gbc.writeMem(0x1dbd, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4c30, gbc.sp());
        EXPECT(0x1dbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0089
        gbc.setState(0x36d5, 0x4c15, 0x61a0, 0x593c, 0x3b36, 0xace3, 0x0, 0x1);
        gbc.writeMem(0x36d5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4c15, gbc.sp());
        EXPECT(0x36d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 008A
        gbc.setState(0xc273, 0x1a76, 0x3de0, 0x2a05, 0x676b, 0x5767, 0x1, 0x0);
        gbc.writeMem(0xc273, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1a76, gbc.sp());
        EXPECT(0xc275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc273));
        EXPECT(0x2f, gbc.readMem(0xc274));
        // CB 2F 008B
        gbc.setState(0x8eed, 0x94b, 0x2900, 0xc41e, 0x5806, 0xbd0e, 0x0, 0x1);
        gbc.writeMem(0x8eed, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x94b, gbc.sp());
        EXPECT(0x8eef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eed));
        EXPECT(0x2f, gbc.readMem(0x8eee));
        // CB 2F 008C
        gbc.setState(0xbb7b, 0xf17c, 0x4470, 0x734d, 0xd1d, 0xa989, 0x1, 0x1);
        gbc.writeMem(0xbb7b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf17c, gbc.sp());
        EXPECT(0xbb7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb7b));
        EXPECT(0x2f, gbc.readMem(0xbb7c));
        // CB 2F 008D
        gbc.setState(0xb57d, 0xfcc4, 0x3ee0, 0x50a9, 0x13c5, 0xee8, 0x1, 0x0);
        gbc.writeMem(0xb57d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfcc4, gbc.sp());
        EXPECT(0xb57f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb57d));
        EXPECT(0x2f, gbc.readMem(0xb57e));
        // CB 2F 008E
        gbc.setState(0x351c, 0x9a2a, 0xa0, 0x13b9, 0x76fb, 0xab2f, 0x0, 0x0);
        gbc.writeMem(0x351c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9a2a, gbc.sp());
        EXPECT(0x351e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 008F
        gbc.setState(0xdd0, 0x3640, 0xb630, 0xd57e, 0x8e0, 0x24e1, 0x0, 0x0);
        gbc.writeMem(0xdd0, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3640, gbc.sp());
        EXPECT(0xdd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0090
        gbc.setState(0x2952, 0x9498, 0x85d0, 0xfacb, 0xf15d, 0x3612, 0x1, 0x0);
        gbc.writeMem(0x2952, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9498, gbc.sp());
        EXPECT(0x2954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0091
        gbc.setState(0xe602, 0x3c6, 0x2b10, 0x9248, 0x58b, 0x52a9, 0x1, 0x0);
        gbc.writeMem(0xe602, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3c6, gbc.sp());
        EXPECT(0xe604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe602));
        EXPECT(0x2f, gbc.readMem(0xe603));
        // CB 2F 0092
        gbc.setState(0xb83a, 0xddda, 0xc3a0, 0x82d, 0xc24a, 0x93b9, 0x1, 0x0);
        gbc.writeMem(0xb83a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xddda, gbc.sp());
        EXPECT(0xb83c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb83a));
        EXPECT(0x2f, gbc.readMem(0xb83b));
        // CB 2F 0093
        gbc.setState(0xaeb2, 0x2b08, 0x21f0, 0xf294, 0xdc30, 0x62f0, 0x1, 0x0);
        gbc.writeMem(0xaeb2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2b08, gbc.sp());
        EXPECT(0xaeb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeb2));
        EXPECT(0x2f, gbc.readMem(0xaeb3));
        // CB 2F 0094
        gbc.setState(0xcdee, 0xa3b0, 0x4ec0, 0xf717, 0x2ad2, 0xc95, 0x1, 0x1);
        gbc.writeMem(0xcdee, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa3b0, gbc.sp());
        EXPECT(0xcdf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdee));
        EXPECT(0x2f, gbc.readMem(0xcdef));
        // CB 2F 0095
        gbc.setState(0x7f75, 0x2948, 0xd9e0, 0x4727, 0x5533, 0x5b, 0x0, 0x1);
        gbc.writeMem(0x7f75, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2948, gbc.sp());
        EXPECT(0x7f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0096
        gbc.setState(0x5664, 0x63be, 0xc110, 0xdf5f, 0x406, 0x4c14, 0x1, 0x1);
        gbc.writeMem(0x5664, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x63be, gbc.sp());
        EXPECT(0x5666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0097
        gbc.setState(0x87c, 0x7a8c, 0xcf30, 0x656d, 0x9366, 0x726f, 0x1, 0x1);
        gbc.writeMem(0x87c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7a8c, gbc.sp());
        EXPECT(0x87e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0098
        gbc.setState(0xeaf5, 0xea6f, 0xa490, 0xa68b, 0xafdd, 0x9dd8, 0x1, 0x0);
        gbc.writeMem(0xeaf5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xea6f, gbc.sp());
        EXPECT(0xeaf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaf5));
        EXPECT(0x2f, gbc.readMem(0xeaf6));
        // CB 2F 0099
        gbc.setState(0x738e, 0x18c6, 0x3ff0, 0x9719, 0x83b5, 0x53a4, 0x1, 0x0);
        gbc.writeMem(0x738e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x18c6, gbc.sp());
        EXPECT(0x7390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 009A
        gbc.setState(0xa0a8, 0x67aa, 0x7d70, 0x7eb4, 0x304, 0xe68c, 0x1, 0x0);
        gbc.writeMem(0xa0a8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x67aa, gbc.sp());
        EXPECT(0xa0aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a8));
        EXPECT(0x2f, gbc.readMem(0xa0a9));
        // CB 2F 009C
        gbc.setState(0x716c, 0x3ae1, 0xfae0, 0x194a, 0xca8e, 0xb254, 0x1, 0x0);
        gbc.writeMem(0x716c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3ae1, gbc.sp());
        EXPECT(0x716e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 009D
        gbc.setState(0x9d7b, 0xb9d5, 0xa640, 0xb4c9, 0xfef2, 0x6b8b, 0x1, 0x1);
        gbc.writeMem(0x9d7b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb9d5, gbc.sp());
        EXPECT(0x9d7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d7b));
        EXPECT(0x2f, gbc.readMem(0x9d7c));
        // CB 2F 009E
        gbc.setState(0xc40a, 0xe80c, 0x9a10, 0x1f4f, 0xd754, 0xa7a0, 0x1, 0x1);
        gbc.writeMem(0xc40a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe80c, gbc.sp());
        EXPECT(0xc40c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc40a));
        EXPECT(0x2f, gbc.readMem(0xc40b));
        // CB 2F 009F
        gbc.setState(0xc70d, 0x4709, 0x20d0, 0x9b03, 0x2c7f, 0x8e44, 0x0, 0x1);
        gbc.writeMem(0xc70d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4709, gbc.sp());
        EXPECT(0xc70f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc70d));
        EXPECT(0x2f, gbc.readMem(0xc70e));
        // CB 2F 00A0
        gbc.setState(0xd5b7, 0xb268, 0x4ac0, 0xcbdd, 0x25b8, 0x8814, 0x0, 0x0);
        gbc.writeMem(0xd5b7, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb268, gbc.sp());
        EXPECT(0xd5b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b7));
        EXPECT(0x2f, gbc.readMem(0xd5b8));
        // CB 2F 00A3
        gbc.setState(0x58a4, 0xb309, 0x7a10, 0x4767, 0x34c2, 0x7cf7, 0x0, 0x1);
        gbc.writeMem(0x58a4, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb309, gbc.sp());
        EXPECT(0x58a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00A4
        gbc.setState(0x4cae, 0x26d5, 0x4cc0, 0xdd60, 0x1c75, 0x7c43, 0x0, 0x1);
        gbc.writeMem(0x4cae, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x26d5, gbc.sp());
        EXPECT(0x4cb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00A5
        gbc.setState(0xc8cb, 0xde83, 0xf770, 0x7b1f, 0xcffe, 0x8e03, 0x1, 0x0);
        gbc.writeMem(0xc8cb, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xde83, gbc.sp());
        EXPECT(0xc8cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8cb));
        EXPECT(0x2f, gbc.readMem(0xc8cc));
        // CB 2F 00A6
        gbc.setState(0xd72d, 0x47b1, 0xa590, 0x9686, 0x5a45, 0x671d, 0x0, 0x1);
        gbc.writeMem(0xd72d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x47b1, gbc.sp());
        EXPECT(0xd72f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd72d));
        EXPECT(0x2f, gbc.readMem(0xd72e));
        // CB 2F 00A8
        gbc.setState(0xc3c9, 0xec2c, 0x5fa0, 0x60a3, 0x882e, 0x7a16, 0x0, 0x0);
        gbc.writeMem(0xc3c9, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xec2c, gbc.sp());
        EXPECT(0xc3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3c9));
        EXPECT(0x2f, gbc.readMem(0xc3ca));
        // CB 2F 00A9
        gbc.setState(0xe2d2, 0x2710, 0x1440, 0x10b8, 0x92a4, 0x4c4a, 0x1, 0x1);
        gbc.writeMem(0xe2d2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2710, gbc.sp());
        EXPECT(0xe2d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2d2));
        EXPECT(0x2f, gbc.readMem(0xe2d3));
        // CB 2F 00AA
        gbc.setState(0x9e72, 0x71c5, 0x9090, 0x5b54, 0x134a, 0xee9e, 0x0, 0x0);
        gbc.writeMem(0x9e72, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x71c5, gbc.sp());
        EXPECT(0x9e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e72));
        EXPECT(0x2f, gbc.readMem(0x9e73));
        // CB 2F 00AB
        gbc.setState(0xcca1, 0xc913, 0x1d10, 0xd013, 0x8c32, 0x8157, 0x1, 0x0);
        gbc.writeMem(0xcca1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc913, gbc.sp());
        EXPECT(0xcca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcca1));
        EXPECT(0x2f, gbc.readMem(0xcca2));
        // CB 2F 00AD
        gbc.setState(0x27cf, 0x22c9, 0x7200, 0x985f, 0x5dee, 0x3026, 0x0, 0x1);
        gbc.writeMem(0x27cf, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x22c9, gbc.sp());
        EXPECT(0x27d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00AE
        gbc.setState(0xbb, 0xa321, 0x2880, 0x7bb0, 0x4d20, 0xc0ac, 0x0, 0x1);
        gbc.writeMem(0xbb, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa321, gbc.sp());
        EXPECT(0xbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00AF
        gbc.setState(0x4eb7, 0xc980, 0xe910, 0xa7d8, 0x51e5, 0x5024, 0x1, 0x0);
        gbc.writeMem(0x4eb7, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc980, gbc.sp());
        EXPECT(0x4eb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 00B1
        gbc.setState(0xd594, 0xb38c, 0x2380, 0xd584, 0x1532, 0x250e, 0x1, 0x1);
        gbc.writeMem(0xd594, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb38c, gbc.sp());
        EXPECT(0xd596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd594));
        EXPECT(0x2f, gbc.readMem(0xd595));
        // CB 2F 00B3
        gbc.setState(0xedff, 0xc30d, 0xc7b0, 0x3d35, 0x3dcf, 0xdffe, 0x0, 0x0);
        gbc.writeMem(0xedff, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc30d, gbc.sp());
        EXPECT(0xee01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedff));
        EXPECT(0x2f, gbc.readMem(0xee00));
        // CB 2F 00B4
        gbc.setState(0x9509, 0x8c68, 0x4a30, 0x6867, 0xe0ed, 0xe8d8, 0x0, 0x0);
        gbc.writeMem(0x9509, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8c68, gbc.sp());
        EXPECT(0x950b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9509));
        EXPECT(0x2f, gbc.readMem(0x950a));
        // CB 2F 00B5
        gbc.setState(0xc33e, 0xa17e, 0xc020, 0xaccc, 0xa1f0, 0xa6be, 0x0, 0x0);
        gbc.writeMem(0xc33e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa17e, gbc.sp());
        EXPECT(0xc340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc33e));
        EXPECT(0x2f, gbc.readMem(0xc33f));
        // CB 2F 00B7
        gbc.setState(0xadf5, 0xdd80, 0x7d20, 0x1fd5, 0xfc18, 0xae7c, 0x0, 0x0);
        gbc.writeMem(0xadf5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdd80, gbc.sp());
        EXPECT(0xadf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf5));
        EXPECT(0x2f, gbc.readMem(0xadf6));
        // CB 2F 00B8
        gbc.setState(0xaa86, 0xc741, 0xc500, 0x2078, 0x1c08, 0x1689, 0x0, 0x0);
        gbc.writeMem(0xaa86, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc741, gbc.sp());
        EXPECT(0xaa88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa86));
        EXPECT(0x2f, gbc.readMem(0xaa87));
        // CB 2F 00B9
        gbc.setState(0xafca, 0x3fe7, 0x6a80, 0x6bd7, 0x8a42, 0xc74d, 0x1, 0x1);
        gbc.writeMem(0xafca, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3fe7, gbc.sp());
        EXPECT(0xafcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafca));
        EXPECT(0x2f, gbc.readMem(0xafcb));
        // CB 2F 00BA
        gbc.setState(0x5472, 0x70db, 0x1350, 0xa4a7, 0xd580, 0x45ab, 0x1, 0x1);
        gbc.writeMem(0x5472, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x70db, gbc.sp());
        EXPECT(0x5474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 00BB
        gbc.setState(0x3384, 0x8045, 0x8150, 0xd34c, 0x390d, 0x3161, 0x0, 0x1);
        gbc.writeMem(0x3384, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8045, gbc.sp());
        EXPECT(0x3386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 00BC
        gbc.setState(0xb236, 0x457f, 0xa4f0, 0x3300, 0x6cce, 0x18a2, 0x0, 0x1);
        gbc.writeMem(0xb236, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x457f, gbc.sp());
        EXPECT(0xb238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb236));
        EXPECT(0x2f, gbc.readMem(0xb237));
        // CB 2F 00BE
        gbc.setState(0x5aff, 0x1539, 0x7d90, 0xd9bd, 0xc50c, 0x8b92, 0x1, 0x0);
        gbc.writeMem(0x5aff, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1539, gbc.sp());
        EXPECT(0x5b01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 00BF
        gbc.setState(0xd417, 0xeb65, 0x5a90, 0x6ce1, 0xa3b1, 0xab9c, 0x0, 0x0);
        gbc.writeMem(0xd417, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xeb65, gbc.sp());
        EXPECT(0xd419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd417));
        EXPECT(0x2f, gbc.readMem(0xd418));
        // CB 2F 00C0
        gbc.setState(0xc7ee, 0x15e0, 0x5c90, 0xa776, 0xfb2b, 0x5e77, 0x1, 0x0);
        gbc.writeMem(0xc7ee, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x15e0, gbc.sp());
        EXPECT(0xc7f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ee));
        EXPECT(0x2f, gbc.readMem(0xc7ef));
        // CB 2F 00C1
        gbc.setState(0x5092, 0xf67b, 0x7f70, 0xed04, 0x8785, 0xc295, 0x0, 0x1);
        gbc.writeMem(0x5092, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf67b, gbc.sp());
        EXPECT(0x5094, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 00C2
        gbc.setState(0xaf2d, 0x54cd, 0x8d30, 0x9655, 0x396c, 0xead, 0x1, 0x1);
        gbc.writeMem(0xaf2d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x54cd, gbc.sp());
        EXPECT(0xaf2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf2d));
        EXPECT(0x2f, gbc.readMem(0xaf2e));
        // CB 2F 00C3
        gbc.setState(0x17c6, 0xb6c4, 0xaea0, 0xcfb3, 0x8652, 0x4511, 0x1, 0x1);
        gbc.writeMem(0x17c6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb6c4, gbc.sp());
        EXPECT(0x17c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00C4
        gbc.setState(0x7d97, 0x6809, 0xce50, 0xb51b, 0xa08d, 0x9a98, 0x0, 0x0);
        gbc.writeMem(0x7d97, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6809, gbc.sp());
        EXPECT(0x7d99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00C5
        gbc.setState(0x51f4, 0x5f3, 0xc2f0, 0xade8, 0xf6f1, 0xac7f, 0x0, 0x0);
        gbc.writeMem(0x51f4, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5f3, gbc.sp());
        EXPECT(0x51f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00C6
        gbc.setState(0x2d1d, 0xee12, 0x8a30, 0x9589, 0x60d5, 0xa234, 0x0, 0x1);
        gbc.writeMem(0x2d1d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xee12, gbc.sp());
        EXPECT(0x2d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00C7
        gbc.setState(0x9f65, 0x847d, 0xb840, 0x8336, 0x8789, 0x8143, 0x0, 0x1);
        gbc.writeMem(0x9f65, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x847d, gbc.sp());
        EXPECT(0x9f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f65));
        EXPECT(0x2f, gbc.readMem(0x9f66));
        // CB 2F 00C8
        gbc.setState(0x6c5, 0xe393, 0xdbf0, 0xc380, 0xc8db, 0x1337, 0x0, 0x1);
        gbc.writeMem(0x6c5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe393, gbc.sp());
        EXPECT(0x6c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 00CA
        gbc.setState(0x73d6, 0x2ebf, 0x1090, 0xf7, 0x7278, 0x749f, 0x0, 0x0);
        gbc.writeMem(0x73d6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2ebf, gbc.sp());
        EXPECT(0x73d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00CB
        gbc.setState(0xd56d, 0x3ded, 0x7c80, 0x28d9, 0xcdd, 0xa29, 0x1, 0x1);
        gbc.writeMem(0xd56d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3ded, gbc.sp());
        EXPECT(0xd56f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd56d));
        EXPECT(0x2f, gbc.readMem(0xd56e));
        // CB 2F 00CC
        gbc.setState(0x545c, 0xbb30, 0xd370, 0x1e94, 0x82db, 0x6f5, 0x0, 0x0);
        gbc.writeMem(0x545c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbb30, gbc.sp());
        EXPECT(0x545e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 00CD
        gbc.setState(0xbba7, 0x106a, 0x73b0, 0x4665, 0xe099, 0x6003, 0x0, 0x1);
        gbc.writeMem(0xbba7, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x106a, gbc.sp());
        EXPECT(0xbba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbba7));
        EXPECT(0x2f, gbc.readMem(0xbba8));
        // CB 2F 00CE
        gbc.setState(0x1f37, 0x4734, 0x6470, 0xc04f, 0x73af, 0x444e, 0x1, 0x0);
        gbc.writeMem(0x1f37, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4734, gbc.sp());
        EXPECT(0x1f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00CF
        gbc.setState(0xdc19, 0x83c6, 0x1ec0, 0xfff8, 0xf252, 0x5e2e, 0x1, 0x0);
        gbc.writeMem(0xdc19, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x83c6, gbc.sp());
        EXPECT(0xdc1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc19));
        EXPECT(0x2f, gbc.readMem(0xdc1a));
        // CB 2F 00D0
        gbc.setState(0x7dae, 0x8080, 0xb9c0, 0x14b7, 0x4e8e, 0x1e5e, 0x0, 0x0);
        gbc.writeMem(0x7dae, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8080, gbc.sp());
        EXPECT(0x7db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 00D1
        gbc.setState(0x9f18, 0x1179, 0x5d70, 0x92fc, 0x17af, 0x56b, 0x0, 0x1);
        gbc.writeMem(0x9f18, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1179, gbc.sp());
        EXPECT(0x9f1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f18));
        EXPECT(0x2f, gbc.readMem(0x9f19));
        // CB 2F 00D2
        gbc.setState(0x65bf, 0xbb86, 0xcdc0, 0xb1a9, 0xab55, 0x43cd, 0x1, 0x1);
        gbc.writeMem(0x65bf, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbb86, gbc.sp());
        EXPECT(0x65c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 00D3
        gbc.setState(0x3dce, 0x1ee0, 0xb050, 0x8a13, 0xbf2, 0x5c3e, 0x0, 0x1);
        gbc.writeMem(0x3dce, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1ee0, gbc.sp());
        EXPECT(0x3dd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00D4
        gbc.setState(0x38ab, 0x495a, 0xfa50, 0x2ae2, 0x5a2a, 0x852e, 0x1, 0x0);
        gbc.writeMem(0x38ab, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x495a, gbc.sp());
        EXPECT(0x38ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00D5
        gbc.setState(0x18, 0x523c, 0x3400, 0xbfcf, 0x39e3, 0x7fc9, 0x1, 0x0);
        gbc.writeMem(0x18, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x523c, gbc.sp());
        EXPECT(0x1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00D6
        gbc.setState(0x28c5, 0x6c21, 0xbae0, 0xd57c, 0xdd72, 0xcce9, 0x1, 0x1);
        gbc.writeMem(0x28c5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6c21, gbc.sp());
        EXPECT(0x28c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00D7
        gbc.setState(0x1e19, 0x7712, 0xf860, 0x1711, 0xa56e, 0xe242, 0x0, 0x1);
        gbc.writeMem(0x1e19, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7712, gbc.sp());
        EXPECT(0x1e1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00D8
        gbc.setState(0x91fa, 0xcc39, 0xa2f0, 0x2303, 0xc0fd, 0xf842, 0x0, 0x1);
        gbc.writeMem(0x91fa, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xcc39, gbc.sp());
        EXPECT(0x91fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91fa));
        EXPECT(0x2f, gbc.readMem(0x91fb));
        // CB 2F 00D9
        gbc.setState(0x9a2e, 0xf605, 0x6e80, 0xce09, 0x73f9, 0xe981, 0x0, 0x1);
        gbc.writeMem(0x9a2e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf605, gbc.sp());
        EXPECT(0x9a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a2e));
        EXPECT(0x2f, gbc.readMem(0x9a2f));
        // CB 2F 00DA
        gbc.setState(0x8815, 0x29b3, 0x8a20, 0x1211, 0xaefa, 0xb9d5, 0x0, 0x1);
        gbc.writeMem(0x8815, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x29b3, gbc.sp());
        EXPECT(0x8817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8815));
        EXPECT(0x2f, gbc.readMem(0x8816));
        // CB 2F 00DB
        gbc.setState(0x6b96, 0x7f66, 0x76b0, 0x479a, 0x87b3, 0x5770, 0x0, 0x0);
        gbc.writeMem(0x6b96, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7f66, gbc.sp());
        EXPECT(0x6b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00DC
        gbc.setState(0xb8c1, 0xea6, 0xf50, 0x785a, 0x3fe8, 0x7575, 0x0, 0x0);
        gbc.writeMem(0xb8c1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xea6, gbc.sp());
        EXPECT(0xb8c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8c1));
        EXPECT(0x2f, gbc.readMem(0xb8c2));
        // CB 2F 00DD
        gbc.setState(0x775d, 0x1bef, 0xdeb0, 0x23e1, 0x6412, 0xe813, 0x1, 0x0);
        gbc.writeMem(0x775d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1bef, gbc.sp());
        EXPECT(0x775f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00DE
        gbc.setState(0x28ac, 0x7070, 0xfb70, 0x8a62, 0x4d8b, 0x155e, 0x1, 0x1);
        gbc.writeMem(0x28ac, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7070, gbc.sp());
        EXPECT(0x28ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 00DF
        gbc.setState(0xbd9e, 0xfd4c, 0xe510, 0x5e99, 0x3b27, 0xe044, 0x1, 0x0);
        gbc.writeMem(0xbd9e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfd4c, gbc.sp());
        EXPECT(0xbda0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd9e));
        EXPECT(0x2f, gbc.readMem(0xbd9f));
        // CB 2F 00E0
        gbc.setState(0x3fb8, 0x85f4, 0xdaf0, 0x8afe, 0x3b85, 0x8944, 0x0, 0x1);
        gbc.writeMem(0x3fb8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x85f4, gbc.sp());
        EXPECT(0x3fba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00E1
        gbc.setState(0x4611, 0x7a44, 0x7830, 0xcb07, 0x8a98, 0x408c, 0x0, 0x0);
        gbc.writeMem(0x4611, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7a44, gbc.sp());
        EXPECT(0x4613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00E2
        gbc.setState(0x7fe8, 0xd69c, 0xb590, 0x9108, 0x899a, 0xa81, 0x1, 0x1);
        gbc.writeMem(0x7fe8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd69c, gbc.sp());
        EXPECT(0x7fea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 00E3
        gbc.setState(0x67ff, 0x7571, 0x1960, 0x786f, 0x3d60, 0xb355, 0x1, 0x0);
        gbc.writeMem(0x67ff, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7571, gbc.sp());
        EXPECT(0x6801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 00E4
        gbc.setState(0x45f3, 0xac02, 0xab90, 0x391b, 0x8b17, 0x528a, 0x0, 0x1);
        gbc.writeMem(0x45f3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xac02, gbc.sp());
        EXPECT(0x45f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 00E5
        gbc.setState(0x8c71, 0xdaa2, 0x5c40, 0xe574, 0xe5c9, 0xf23, 0x0, 0x0);
        gbc.writeMem(0x8c71, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xdaa2, gbc.sp());
        EXPECT(0x8c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c71));
        EXPECT(0x2f, gbc.readMem(0x8c72));
        // CB 2F 00E7
        gbc.setState(0xc45b, 0x65e1, 0xb170, 0xe56f, 0xa84e, 0x33f9, 0x0, 0x1);
        gbc.writeMem(0xc45b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x65e1, gbc.sp());
        EXPECT(0xc45d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45b));
        EXPECT(0x2f, gbc.readMem(0xc45c));
        // CB 2F 00E8
        gbc.setState(0x9a94, 0xa6be, 0x47c0, 0xdf4f, 0x8673, 0xaf69, 0x1, 0x0);
        gbc.writeMem(0x9a94, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa6be, gbc.sp());
        EXPECT(0x9a96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a94));
        EXPECT(0x2f, gbc.readMem(0x9a95));
        // CB 2F 00E9
        gbc.setState(0x57ef, 0xed7c, 0x7a60, 0xe256, 0x36aa, 0x5750, 0x1, 0x0);
        gbc.writeMem(0x57ef, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xed7c, gbc.sp());
        EXPECT(0x57f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00EA
        gbc.setState(0xe0b2, 0x6c88, 0xae80, 0xe9b7, 0xb2a, 0xae7a, 0x0, 0x1);
        gbc.writeMem(0xe0b2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6c88, gbc.sp());
        EXPECT(0xe0b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b2));
        EXPECT(0x2f, gbc.readMem(0xe0b3));
        // CB 2F 00EB
        gbc.setState(0xd470, 0x728, 0xf6b0, 0x86d9, 0x9824, 0x4684, 0x1, 0x0);
        gbc.writeMem(0xd470, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x728, gbc.sp());
        EXPECT(0xd472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd470));
        EXPECT(0x2f, gbc.readMem(0xd471));
        // CB 2F 00EC
        gbc.setState(0x8e6c, 0xc4c6, 0x1b40, 0xf307, 0x307b, 0x9bca, 0x0, 0x1);
        gbc.writeMem(0x8e6c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc4c6, gbc.sp());
        EXPECT(0x8e6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e6c));
        EXPECT(0x2f, gbc.readMem(0x8e6d));
        // CB 2F 00EE
        gbc.setState(0x46f2, 0x9e5f, 0xd5d0, 0x5d78, 0x4421, 0xfc07, 0x0, 0x0);
        gbc.writeMem(0x46f2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9e5f, gbc.sp());
        EXPECT(0x46f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 00EF
        gbc.setState(0xd0ad, 0x689c, 0xf730, 0x9ec6, 0xb521, 0x25ee, 0x1, 0x0);
        gbc.writeMem(0xd0ad, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x689c, gbc.sp());
        EXPECT(0xd0af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ad));
        EXPECT(0x2f, gbc.readMem(0xd0ae));
        // CB 2F 00F0
        gbc.setState(0x83d3, 0x12c5, 0xfb10, 0x5657, 0xa7e9, 0x428, 0x1, 0x0);
        gbc.writeMem(0x83d3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x12c5, gbc.sp());
        EXPECT(0x83d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d3));
        EXPECT(0x2f, gbc.readMem(0x83d4));
        // CB 2F 00F1
        gbc.setState(0x9d7e, 0xead5, 0xdf00, 0x1274, 0x7a04, 0x4360, 0x1, 0x0);
        gbc.writeMem(0x9d7e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xead5, gbc.sp());
        EXPECT(0x9d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d7e));
        EXPECT(0x2f, gbc.readMem(0x9d7f));
        // CB 2F 00F2
        gbc.setState(0x1e06, 0xafc7, 0xdef0, 0x2c83, 0x6f18, 0x82f2, 0x1, 0x1);
        gbc.writeMem(0x1e06, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xafc7, gbc.sp());
        EXPECT(0x1e08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00F3
        gbc.setState(0x2d1b, 0xdc2f, 0x4a0, 0xc0f5, 0x8ef, 0x845e, 0x1, 0x0);
        gbc.writeMem(0x2d1b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xdc2f, gbc.sp());
        EXPECT(0x2d1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00F4
        gbc.setState(0x3133, 0xed7, 0x72e0, 0xb21c, 0xb23d, 0xed5c, 0x0, 0x1);
        gbc.writeMem(0x3133, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xed7, gbc.sp());
        EXPECT(0x3135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00F5
        gbc.setState(0x4156, 0xc74e, 0x1b80, 0xdfac, 0x1a48, 0xc886, 0x1, 0x0);
        gbc.writeMem(0x4156, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc74e, gbc.sp());
        EXPECT(0x4158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 00F6
        gbc.setState(0xbb38, 0x5881, 0xb110, 0x3bac, 0x7898, 0x5cba, 0x1, 0x0);
        gbc.writeMem(0xbb38, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5881, gbc.sp());
        EXPECT(0xbb3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb38));
        EXPECT(0x2f, gbc.readMem(0xbb39));
        // CB 2F 00F7
        gbc.setState(0x5f92, 0x8953, 0xb790, 0xaee0, 0x9170, 0x986c, 0x1, 0x0);
        gbc.writeMem(0x5f92, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8953, gbc.sp());
        EXPECT(0x5f94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 00F8
        gbc.setState(0x52ce, 0xf3d5, 0x8720, 0x9257, 0x210b, 0x2a02, 0x0, 0x1);
        gbc.writeMem(0x52ce, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf3d5, gbc.sp());
        EXPECT(0x52d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 00F9
        gbc.setState(0xe7f8, 0x745f, 0xbde0, 0x7db4, 0x98a, 0x2e20, 0x1, 0x0);
        gbc.writeMem(0xe7f8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x745f, gbc.sp());
        EXPECT(0xe7fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f8));
        EXPECT(0x2f, gbc.readMem(0xe7f9));
        // CB 2F 00FA
        gbc.setState(0xd806, 0x47a, 0x1cd0, 0x18f0, 0x62fd, 0x2bf6, 0x0, 0x1);
        gbc.writeMem(0xd806, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x47a, gbc.sp());
        EXPECT(0xd808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd806));
        EXPECT(0x2f, gbc.readMem(0xd807));
        // CB 2F 00FC
        gbc.setState(0x2b32, 0xfa75, 0x9a40, 0x30fb, 0x1960, 0x9c7e, 0x1, 0x0);
        gbc.writeMem(0x2b32, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xfa75, gbc.sp());
        EXPECT(0x2b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 00FD
        gbc.setState(0x372a, 0x71e0, 0x5350, 0x241c, 0xbeed, 0x3113, 0x0, 0x0);
        gbc.writeMem(0x372a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x71e0, gbc.sp());
        EXPECT(0x372c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 00FE
        gbc.setState(0xb4bc, 0xd13d, 0xb930, 0x3afa, 0x767c, 0xe938, 0x0, 0x1);
        gbc.writeMem(0xb4bc, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd13d, gbc.sp());
        EXPECT(0xb4be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4bc));
        EXPECT(0x2f, gbc.readMem(0xb4bd));
        // CB 2F 00FF
        gbc.setState(0x4d66, 0xa281, 0xfd0, 0x1a6d, 0x16a, 0x6ad1, 0x0, 0x1);
        gbc.writeMem(0x4d66, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa281, gbc.sp());
        EXPECT(0x4d68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0100
        gbc.setState(0x75d3, 0x1f3e, 0xae00, 0x9a9d, 0xc563, 0x7348, 0x1, 0x1);
        gbc.writeMem(0x75d3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1f3e, gbc.sp());
        EXPECT(0x75d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0101
        gbc.setState(0xe696, 0xa10d, 0x8040, 0x1df, 0x330f, 0x8355, 0x1, 0x0);
        gbc.writeMem(0xe696, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa10d, gbc.sp());
        EXPECT(0xe698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe696));
        EXPECT(0x2f, gbc.readMem(0xe697));
        // CB 2F 0102
        gbc.setState(0x118e, 0x13b6, 0x1470, 0x6a49, 0x285a, 0xbfe2, 0x1, 0x0);
        gbc.writeMem(0x118e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x13b6, gbc.sp());
        EXPECT(0x1190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0103
        gbc.setState(0xb9f7, 0xa626, 0xf5d0, 0x7bb7, 0xf9c8, 0x5d56, 0x0, 0x1);
        gbc.writeMem(0xb9f7, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa626, gbc.sp());
        EXPECT(0xb9f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f7));
        EXPECT(0x2f, gbc.readMem(0xb9f8));
        // CB 2F 0104
        gbc.setState(0x487, 0x21fc, 0x8f90, 0xd50d, 0x8f51, 0x3cf0, 0x1, 0x1);
        gbc.writeMem(0x487, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x21fc, gbc.sp());
        EXPECT(0x489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0105
        gbc.setState(0x13b3, 0xc148, 0xe680, 0xf26b, 0x85ac, 0x376d, 0x0, 0x0);
        gbc.writeMem(0x13b3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc148, gbc.sp());
        EXPECT(0x13b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0106
        gbc.setState(0xb046, 0xeda3, 0xb530, 0xe43e, 0xb3f3, 0x8b22, 0x1, 0x0);
        gbc.writeMem(0xb046, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xeda3, gbc.sp());
        EXPECT(0xb048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb046));
        EXPECT(0x2f, gbc.readMem(0xb047));
        // CB 2F 0107
        gbc.setState(0x4c31, 0x59fb, 0xac40, 0x3bd3, 0x5633, 0x5c55, 0x1, 0x0);
        gbc.writeMem(0x4c31, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x59fb, gbc.sp());
        EXPECT(0x4c33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0108
        gbc.setState(0x32bf, 0xc2b5, 0xda70, 0xa76, 0xe648, 0x2e1d, 0x0, 0x0);
        gbc.writeMem(0x32bf, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc2b5, gbc.sp());
        EXPECT(0x32c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0109
        gbc.setState(0x4607, 0x6aac, 0xaeb0, 0xb234, 0xb800, 0x3902, 0x1, 0x0);
        gbc.writeMem(0x4607, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6aac, gbc.sp());
        EXPECT(0x4609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 010A
        gbc.setState(0x427a, 0x5d69, 0x1890, 0x8fa3, 0xe400, 0x50d1, 0x0, 0x0);
        gbc.writeMem(0x427a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5d69, gbc.sp());
        EXPECT(0x427c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 010B
        gbc.setState(0x38aa, 0x6b95, 0x7290, 0xed7b, 0xd370, 0x62b2, 0x1, 0x0);
        gbc.writeMem(0x38aa, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6b95, gbc.sp());
        EXPECT(0x38ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 010C
        gbc.setState(0x5b79, 0x4b76, 0x7f0, 0xecd3, 0x38a2, 0x302c, 0x1, 0x1);
        gbc.writeMem(0x5b79, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4b76, gbc.sp());
        EXPECT(0x5b7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 010D
        gbc.setState(0x4b5f, 0xaddc, 0x5640, 0x3794, 0xe6db, 0xf2f6, 0x0, 0x0);
        gbc.writeMem(0x4b5f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xaddc, gbc.sp());
        EXPECT(0x4b61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 010E
        gbc.setState(0x6ddc, 0x7df, 0x8f20, 0x8260, 0x5193, 0xa3e9, 0x0, 0x1);
        gbc.writeMem(0x6ddc, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7df, gbc.sp());
        EXPECT(0x6dde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 010F
        gbc.setState(0xe6c9, 0x207, 0x3770, 0xd09e, 0xfb61, 0x26a6, 0x0, 0x0);
        gbc.writeMem(0xe6c9, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x207, gbc.sp());
        EXPECT(0xe6cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6c9));
        EXPECT(0x2f, gbc.readMem(0xe6ca));
        // CB 2F 0111
        gbc.setState(0x30a1, 0x1a03, 0x4950, 0x221a, 0x1fac, 0x2d64, 0x0, 0x0);
        gbc.writeMem(0x30a1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1a03, gbc.sp());
        EXPECT(0x30a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0112
        gbc.setState(0xe85d, 0x2a65, 0xba40, 0x4c75, 0x482a, 0xb97b, 0x0, 0x0);
        gbc.writeMem(0xe85d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2a65, gbc.sp());
        EXPECT(0xe85f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe85d));
        EXPECT(0x2f, gbc.readMem(0xe85e));
        // CB 2F 0113
        gbc.setState(0x4554, 0xa0d7, 0xca70, 0x5647, 0x6d7b, 0xa64e, 0x0, 0x0);
        gbc.writeMem(0x4554, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa0d7, gbc.sp());
        EXPECT(0x4556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0114
        gbc.setState(0x2f21, 0xbe24, 0xa5d0, 0x30aa, 0x708, 0xb7ac, 0x1, 0x0);
        gbc.writeMem(0x2f21, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbe24, gbc.sp());
        EXPECT(0x2f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0115
        gbc.setState(0xa74d, 0x7702, 0xf390, 0x5187, 0x5621, 0xe9aa, 0x0, 0x1);
        gbc.writeMem(0xa74d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7702, gbc.sp());
        EXPECT(0xa74f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa74d));
        EXPECT(0x2f, gbc.readMem(0xa74e));
        // CB 2F 0116
        gbc.setState(0x3f14, 0x8826, 0x32b0, 0x3df1, 0x47ff, 0x1f34, 0x0, 0x0);
        gbc.writeMem(0x3f14, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8826, gbc.sp());
        EXPECT(0x3f16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0117
        gbc.setState(0x3e6e, 0xbb1, 0xde70, 0x1fbc, 0xa452, 0x187a, 0x0, 0x0);
        gbc.writeMem(0x3e6e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbb1, gbc.sp());
        EXPECT(0x3e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0118
        gbc.setState(0x35b8, 0xaa57, 0xa590, 0xc08d, 0xfb7, 0x24c3, 0x0, 0x1);
        gbc.writeMem(0x35b8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xaa57, gbc.sp());
        EXPECT(0x35ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0119
        gbc.setState(0x23d7, 0xb8e8, 0x7110, 0x6f65, 0x71e2, 0xec8a, 0x0, 0x0);
        gbc.writeMem(0x23d7, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb8e8, gbc.sp());
        EXPECT(0x23d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 011A
        gbc.setState(0xc58b, 0x16d9, 0x76a0, 0x1009, 0x6d4d, 0x5745, 0x1, 0x1);
        gbc.writeMem(0xc58b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x16d9, gbc.sp());
        EXPECT(0xc58d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc58b));
        EXPECT(0x2f, gbc.readMem(0xc58c));
        // CB 2F 011B
        gbc.setState(0xd7d6, 0x603e, 0x4290, 0xc386, 0xa968, 0xf031, 0x1, 0x1);
        gbc.writeMem(0xd7d6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x603e, gbc.sp());
        EXPECT(0xd7d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d6));
        EXPECT(0x2f, gbc.readMem(0xd7d7));
        // CB 2F 011C
        gbc.setState(0x7e3d, 0x364f, 0x7730, 0x38de, 0xdaad, 0xb1ae, 0x1, 0x0);
        gbc.writeMem(0x7e3d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x364f, gbc.sp());
        EXPECT(0x7e3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 011D
        gbc.setState(0x2970, 0x1325, 0x25d0, 0xb15f, 0x9d97, 0xb4ea, 0x0, 0x0);
        gbc.writeMem(0x2970, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1325, gbc.sp());
        EXPECT(0x2972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 011E
        gbc.setState(0x26d, 0x5dec, 0xf700, 0x8ab, 0x3092, 0xb0cd, 0x1, 0x0);
        gbc.writeMem(0x26d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5dec, gbc.sp());
        EXPECT(0x26f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 011F
        gbc.setState(0x2577, 0xe6ee, 0xd9c0, 0xd3be, 0xf553, 0x3cbd, 0x0, 0x0);
        gbc.writeMem(0x2577, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe6ee, gbc.sp());
        EXPECT(0x2579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0120
        gbc.setState(0x944b, 0xb9bb, 0x30f0, 0xc5ad, 0xeca, 0xb362, 0x0, 0x1);
        gbc.writeMem(0x944b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb9bb, gbc.sp());
        EXPECT(0x944d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x944b));
        EXPECT(0x2f, gbc.readMem(0x944c));
        // CB 2F 0121
        gbc.setState(0x4f48, 0xe8d5, 0x1e90, 0x766a, 0x57eb, 0xd7c3, 0x0, 0x0);
        gbc.writeMem(0x4f48, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe8d5, gbc.sp());
        EXPECT(0x4f4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0122
        gbc.setState(0x83db, 0x9e93, 0xaef0, 0x1b3e, 0xb663, 0xa052, 0x1, 0x0);
        gbc.writeMem(0x83db, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9e93, gbc.sp());
        EXPECT(0x83dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83db));
        EXPECT(0x2f, gbc.readMem(0x83dc));
        // CB 2F 0124
        gbc.setState(0xde7c, 0x5c27, 0x18a0, 0x42b0, 0x54a3, 0xf75c, 0x0, 0x1);
        gbc.writeMem(0xde7c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5c27, gbc.sp());
        EXPECT(0xde7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde7c));
        EXPECT(0x2f, gbc.readMem(0xde7d));
        // CB 2F 0125
        gbc.setState(0xa64, 0xaf2a, 0xabd0, 0x64f6, 0x9fa1, 0xa41a, 0x1, 0x0);
        gbc.writeMem(0xa64, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xaf2a, gbc.sp());
        EXPECT(0xa66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0126
        gbc.setState(0xdc98, 0x4e51, 0x4170, 0xd470, 0x3603, 0xe5a5, 0x0, 0x1);
        gbc.writeMem(0xdc98, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4e51, gbc.sp());
        EXPECT(0xdc9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc98));
        EXPECT(0x2f, gbc.readMem(0xdc99));
        // CB 2F 0127
        gbc.setState(0xe445, 0x9669, 0xa3e0, 0x7563, 0x208f, 0x282c, 0x0, 0x0);
        gbc.writeMem(0xe445, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9669, gbc.sp());
        EXPECT(0xe447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe445));
        EXPECT(0x2f, gbc.readMem(0xe446));
        // CB 2F 0128
        gbc.setState(0x5610, 0x785, 0x46b0, 0xbf2e, 0xb843, 0x4acc, 0x0, 0x1);
        gbc.writeMem(0x5610, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x785, gbc.sp());
        EXPECT(0x5612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0129
        gbc.setState(0x3b3f, 0x24c7, 0xa730, 0x9558, 0x76fd, 0x26fe, 0x1, 0x0);
        gbc.writeMem(0x3b3f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x24c7, gbc.sp());
        EXPECT(0x3b41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 012A
        gbc.setState(0xc0d8, 0xb14, 0x510, 0x108f, 0xc953, 0x132c, 0x1, 0x0);
        gbc.writeMem(0xc0d8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb14, gbc.sp());
        EXPECT(0xc0da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0d8));
        EXPECT(0x2f, gbc.readMem(0xc0d9));
        // CB 2F 012B
        gbc.setState(0x5647, 0xb41d, 0xb510, 0xf9e2, 0x8fa2, 0xcb63, 0x1, 0x0);
        gbc.writeMem(0x5647, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb41d, gbc.sp());
        EXPECT(0x5649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 012C
        gbc.setState(0x8f0b, 0x367, 0x7f90, 0x9412, 0xa462, 0x697b, 0x1, 0x0);
        gbc.writeMem(0x8f0b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x367, gbc.sp());
        EXPECT(0x8f0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f0b));
        EXPECT(0x2f, gbc.readMem(0x8f0c));
        // CB 2F 012D
        gbc.setState(0x68ac, 0x9f11, 0x26a0, 0x5385, 0xc5aa, 0x5aa6, 0x1, 0x1);
        gbc.writeMem(0x68ac, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9f11, gbc.sp());
        EXPECT(0x68ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 012E
        gbc.setState(0x6088, 0x9fcf, 0xd4f0, 0xea41, 0xd822, 0xc80b, 0x1, 0x1);
        gbc.writeMem(0x6088, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9fcf, gbc.sp());
        EXPECT(0x608a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 012F
        gbc.setState(0x83a, 0x7a11, 0xce00, 0x3a3d, 0x660b, 0xe62d, 0x0, 0x0);
        gbc.writeMem(0x83a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7a11, gbc.sp());
        EXPECT(0x83c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0130
        gbc.setState(0x85e5, 0x37e4, 0xa70, 0x541e, 0x7f7f, 0x150d, 0x1, 0x0);
        gbc.writeMem(0x85e5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x37e4, gbc.sp());
        EXPECT(0x85e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85e5));
        EXPECT(0x2f, gbc.readMem(0x85e6));
        // CB 2F 0131
        gbc.setState(0x4f23, 0xd835, 0x7cc0, 0x96e3, 0x87ee, 0xb70e, 0x0, 0x1);
        gbc.writeMem(0x4f23, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd835, gbc.sp());
        EXPECT(0x4f25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0132
        gbc.setState(0x5715, 0xfe8c, 0x56d0, 0xa11c, 0xed03, 0x8a47, 0x0, 0x1);
        gbc.writeMem(0x5715, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfe8c, gbc.sp());
        EXPECT(0x5717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0133
        gbc.setState(0x7c72, 0xa463, 0xa10, 0x1b45, 0xba2e, 0xfcf1, 0x0, 0x1);
        gbc.writeMem(0x7c72, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa463, gbc.sp());
        EXPECT(0x7c74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0135
        gbc.setState(0xdbf5, 0x5e0b, 0xfd20, 0x61ec, 0x434, 0xc470, 0x0, 0x0);
        gbc.writeMem(0xdbf5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5e0b, gbc.sp());
        EXPECT(0xdbf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf5));
        EXPECT(0x2f, gbc.readMem(0xdbf6));
        // CB 2F 0136
        gbc.setState(0xbf19, 0x66c1, 0xb1f0, 0xb5f0, 0x979b, 0xc058, 0x1, 0x1);
        gbc.writeMem(0xbf19, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x66c1, gbc.sp());
        EXPECT(0xbf1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf19));
        EXPECT(0x2f, gbc.readMem(0xbf1a));
        // CB 2F 0137
        gbc.setState(0x1302, 0x9017, 0x4600, 0xa0bc, 0x6181, 0x375f, 0x0, 0x1);
        gbc.writeMem(0x1302, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9017, gbc.sp());
        EXPECT(0x1304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0138
        gbc.setState(0xc39d, 0xfe3d, 0x5440, 0xf9e9, 0x2b82, 0x4617, 0x0, 0x0);
        gbc.writeMem(0xc39d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfe3d, gbc.sp());
        EXPECT(0xc39f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc39d));
        EXPECT(0x2f, gbc.readMem(0xc39e));
        // CB 2F 0139
        gbc.setState(0x49a7, 0x38b, 0x9720, 0x9aad, 0x2705, 0x8d8e, 0x0, 0x1);
        gbc.writeMem(0x49a7, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x38b, gbc.sp());
        EXPECT(0x49a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 013A
        gbc.setState(0x4c45, 0x3c5b, 0xd1c0, 0xab39, 0x895a, 0xcd27, 0x0, 0x0);
        gbc.writeMem(0x4c45, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3c5b, gbc.sp());
        EXPECT(0x4c47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 013C
        gbc.setState(0x7f54, 0x756c, 0xa8e0, 0xeffe, 0x3acf, 0x317b, 0x1, 0x0);
        gbc.writeMem(0x7f54, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x756c, gbc.sp());
        EXPECT(0x7f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 013D
        gbc.setState(0x244f, 0xdb16, 0x8690, 0x8d51, 0xdfca, 0x660, 0x1, 0x1);
        gbc.writeMem(0x244f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdb16, gbc.sp());
        EXPECT(0x2451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 013E
        gbc.setState(0x76a1, 0x64f9, 0x5680, 0x63ce, 0xa54, 0x3876, 0x0, 0x1);
        gbc.writeMem(0x76a1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x64f9, gbc.sp());
        EXPECT(0x76a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 013F
        gbc.setState(0x4bfd, 0xc94c, 0x4690, 0xe399, 0xd0f9, 0xf0e9, 0x1, 0x1);
        gbc.writeMem(0x4bfd, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc94c, gbc.sp());
        EXPECT(0x4bff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0140
        gbc.setState(0x6eb8, 0xfcfc, 0xf310, 0xb12e, 0xfef5, 0x1a8a, 0x1, 0x1);
        gbc.writeMem(0x6eb8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfcfc, gbc.sp());
        EXPECT(0x6eba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0141
        gbc.setState(0x5efd, 0xa051, 0xdea0, 0x97b1, 0x52d7, 0xf86a, 0x1, 0x0);
        gbc.writeMem(0x5efd, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa051, gbc.sp());
        EXPECT(0x5eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0142
        gbc.setState(0xa057, 0x5537, 0x690, 0x257a, 0xf4e5, 0xe1aa, 0x1, 0x1);
        gbc.writeMem(0xa057, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5537, gbc.sp());
        EXPECT(0xa059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa057));
        EXPECT(0x2f, gbc.readMem(0xa058));
        // CB 2F 0143
        gbc.setState(0xecc1, 0x2ab0, 0x6460, 0xf6fb, 0x86ac, 0xc39f, 0x1, 0x1);
        gbc.writeMem(0xecc1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2ab0, gbc.sp());
        EXPECT(0xecc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecc1));
        EXPECT(0x2f, gbc.readMem(0xecc2));
        // CB 2F 0144
        gbc.setState(0xb279, 0x3bde, 0xa9e0, 0x6550, 0x3653, 0xb0, 0x1, 0x1);
        gbc.writeMem(0xb279, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3bde, gbc.sp());
        EXPECT(0xb27b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb279));
        EXPECT(0x2f, gbc.readMem(0xb27a));
        // CB 2F 0145
        gbc.setState(0x1bc9, 0x1911, 0x2830, 0x8106, 0x3f6e, 0xbfdb, 0x1, 0x0);
        gbc.writeMem(0x1bc9, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1911, gbc.sp());
        EXPECT(0x1bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0146
        gbc.setState(0x7007, 0xe835, 0xfce0, 0x6802, 0x47b8, 0x516a, 0x1, 0x1);
        gbc.writeMem(0x7007, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe835, gbc.sp());
        EXPECT(0x7009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0147
        gbc.setState(0xd7dc, 0x7e6b, 0xc420, 0x393a, 0x6101, 0x7870, 0x0, 0x0);
        gbc.writeMem(0xd7dc, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7e6b, gbc.sp());
        EXPECT(0xd7de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7dc));
        EXPECT(0x2f, gbc.readMem(0xd7dd));
        // CB 2F 0148
        gbc.setState(0x2f87, 0x9524, 0xe890, 0x27c3, 0xf18e, 0x84ee, 0x0, 0x0);
        gbc.writeMem(0x2f87, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9524, gbc.sp());
        EXPECT(0x2f89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0149
        gbc.setState(0xc979, 0x27e7, 0x5940, 0x2db1, 0x5713, 0x8acb, 0x0, 0x1);
        gbc.writeMem(0xc979, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x27e7, gbc.sp());
        EXPECT(0xc97b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc979));
        EXPECT(0x2f, gbc.readMem(0xc97a));
        // CB 2F 014A
        gbc.setState(0xa6e5, 0x38d6, 0xbb90, 0xf76e, 0xfcb, 0xfa33, 0x1, 0x1);
        gbc.writeMem(0xa6e5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x38d6, gbc.sp());
        EXPECT(0xa6e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6e5));
        EXPECT(0x2f, gbc.readMem(0xa6e6));
        // CB 2F 014B
        gbc.setState(0x8ac2, 0x3e53, 0x5620, 0x948b, 0x1443, 0x361d, 0x1, 0x1);
        gbc.writeMem(0x8ac2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3e53, gbc.sp());
        EXPECT(0x8ac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac2));
        EXPECT(0x2f, gbc.readMem(0x8ac3));
        // CB 2F 014C
        gbc.setState(0xdd05, 0xef8, 0xb000, 0x7e61, 0x6cd3, 0xc733, 0x1, 0x0);
        gbc.writeMem(0xdd05, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xef8, gbc.sp());
        EXPECT(0xdd07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd05));
        EXPECT(0x2f, gbc.readMem(0xdd06));
        // CB 2F 014D
        gbc.setState(0xef3c, 0x3290, 0xefc0, 0xeb38, 0xf3d8, 0x4ca2, 0x1, 0x0);
        gbc.writeMem(0xef3c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3290, gbc.sp());
        EXPECT(0xef3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef3c));
        EXPECT(0x2f, gbc.readMem(0xef3d));
        // CB 2F 014E
        gbc.setState(0xcbb, 0xc621, 0xada0, 0x2a1, 0xf8ed, 0xdfdd, 0x1, 0x1);
        gbc.writeMem(0xcbb, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc621, gbc.sp());
        EXPECT(0xcbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 014F
        gbc.setState(0xdc38, 0xb00, 0x3b0, 0xcf1c, 0x3275, 0x9096, 0x0, 0x0);
        gbc.writeMem(0xdc38, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb00, gbc.sp());
        EXPECT(0xdc3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc38));
        EXPECT(0x2f, gbc.readMem(0xdc39));
        // CB 2F 0150
        gbc.setState(0x44f9, 0xe406, 0x2df0, 0xc11d, 0x45b2, 0x2591, 0x1, 0x1);
        gbc.writeMem(0x44f9, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe406, gbc.sp());
        EXPECT(0x44fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0151
        gbc.setState(0xb4f5, 0xaf17, 0x81a0, 0xcda5, 0xc940, 0x54ff, 0x1, 0x1);
        gbc.writeMem(0xb4f5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xaf17, gbc.sp());
        EXPECT(0xb4f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f5));
        EXPECT(0x2f, gbc.readMem(0xb4f6));
        // CB 2F 0152
        gbc.setState(0x98a3, 0x20df, 0xfa10, 0xbcd6, 0xd1fd, 0xe388, 0x0, 0x0);
        gbc.writeMem(0x98a3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x20df, gbc.sp());
        EXPECT(0x98a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98a3));
        EXPECT(0x2f, gbc.readMem(0x98a4));
        // CB 2F 0153
        gbc.setState(0x8b44, 0xb1d7, 0xdd70, 0x649f, 0x305d, 0x73b5, 0x1, 0x1);
        gbc.writeMem(0x8b44, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb1d7, gbc.sp());
        EXPECT(0x8b46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b44));
        EXPECT(0x2f, gbc.readMem(0x8b45));
        // CB 2F 0154
        gbc.setState(0xde1f, 0x6ccb, 0xabf0, 0x1804, 0x2d01, 0x74b, 0x0, 0x1);
        gbc.writeMem(0xde1f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6ccb, gbc.sp());
        EXPECT(0xde21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde1f));
        EXPECT(0x2f, gbc.readMem(0xde20));
        // CB 2F 0155
        gbc.setState(0xa2af, 0x62ff, 0x49a0, 0x9b40, 0xc9a1, 0xc4bf, 0x1, 0x1);
        gbc.writeMem(0xa2af, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x62ff, gbc.sp());
        EXPECT(0xa2b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2af));
        EXPECT(0x2f, gbc.readMem(0xa2b0));
        // CB 2F 0156
        gbc.setState(0x9b89, 0xc03e, 0x1260, 0xd50f, 0xe7bf, 0x1ea8, 0x1, 0x1);
        gbc.writeMem(0x9b89, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc03e, gbc.sp());
        EXPECT(0x9b8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b89));
        EXPECT(0x2f, gbc.readMem(0x9b8a));
        // CB 2F 0157
        gbc.setState(0x65eb, 0x1419, 0x7c60, 0xe3dc, 0x7ad4, 0x9755, 0x0, 0x0);
        gbc.writeMem(0x65eb, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1419, gbc.sp());
        EXPECT(0x65ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0158
        gbc.setState(0xbb12, 0x3d70, 0xe550, 0x20f4, 0x6d, 0x73be, 0x1, 0x1);
        gbc.writeMem(0xbb12, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3d70, gbc.sp());
        EXPECT(0xbb14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb12));
        EXPECT(0x2f, gbc.readMem(0xbb13));
        // CB 2F 0159
        gbc.setState(0x390b, 0x9a9d, 0xc140, 0xefe0, 0xd82e, 0x2ec1, 0x0, 0x1);
        gbc.writeMem(0x390b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9a9d, gbc.sp());
        EXPECT(0x390d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 015A
        gbc.setState(0xb618, 0x3947, 0xdd50, 0xdd62, 0xa802, 0x8fb6, 0x0, 0x0);
        gbc.writeMem(0xb618, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3947, gbc.sp());
        EXPECT(0xb61a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb618));
        EXPECT(0x2f, gbc.readMem(0xb619));
        // CB 2F 015B
        gbc.setState(0xadac, 0xa15c, 0x3bf0, 0x8a6b, 0x7d0a, 0x8bff, 0x0, 0x1);
        gbc.writeMem(0xadac, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa15c, gbc.sp());
        EXPECT(0xadae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadac));
        EXPECT(0x2f, gbc.readMem(0xadad));
        // CB 2F 015C
        gbc.setState(0x23f1, 0x712b, 0x53b0, 0x944a, 0x9c65, 0x39bc, 0x0, 0x1);
        gbc.writeMem(0x23f1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x712b, gbc.sp());
        EXPECT(0x23f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 015D
        gbc.setState(0xe0c5, 0xda1, 0xdeb0, 0x9f7e, 0x3c64, 0xf6a7, 0x0, 0x0);
        gbc.writeMem(0xe0c5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xda1, gbc.sp());
        EXPECT(0xe0c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0c5));
        EXPECT(0x2f, gbc.readMem(0xe0c6));
        // CB 2F 015E
        gbc.setState(0xa532, 0xa465, 0x6480, 0x8702, 0xaa99, 0xbd1e, 0x1, 0x1);
        gbc.writeMem(0xa532, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa465, gbc.sp());
        EXPECT(0xa534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa532));
        EXPECT(0x2f, gbc.readMem(0xa533));
        // CB 2F 015F
        gbc.setState(0xa904, 0xfcb9, 0x5660, 0x8786, 0xe15c, 0xb73b, 0x1, 0x1);
        gbc.writeMem(0xa904, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfcb9, gbc.sp());
        EXPECT(0xa906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa904));
        EXPECT(0x2f, gbc.readMem(0xa905));
        // CB 2F 0160
        gbc.setState(0xacbc, 0xaa63, 0x3a80, 0x37ab, 0xd7a8, 0x680f, 0x1, 0x1);
        gbc.writeMem(0xacbc, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xaa63, gbc.sp());
        EXPECT(0xacbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacbc));
        EXPECT(0x2f, gbc.readMem(0xacbd));
        // CB 2F 0161
        gbc.setState(0x30d3, 0xafc, 0xeb00, 0xabd5, 0x2d5c, 0xbf97, 0x1, 0x0);
        gbc.writeMem(0x30d3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xafc, gbc.sp());
        EXPECT(0x30d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0162
        gbc.setState(0x28c6, 0xb5f4, 0x9990, 0x8953, 0x5728, 0x1ba8, 0x0, 0x1);
        gbc.writeMem(0x28c6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb5f4, gbc.sp());
        EXPECT(0x28c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0163
        gbc.setState(0x307b, 0xf29e, 0x2c30, 0xcc5a, 0xd590, 0xc5aa, 0x1, 0x1);
        gbc.writeMem(0x307b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf29e, gbc.sp());
        EXPECT(0x307d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0164
        gbc.setState(0x7c13, 0x74a1, 0x15d0, 0x1d0c, 0x4496, 0xcc, 0x1, 0x0);
        gbc.writeMem(0x7c13, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x74a1, gbc.sp());
        EXPECT(0x7c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0165
        gbc.setState(0x96ba, 0xf3e9, 0x4ab0, 0x1898, 0x7812, 0xc4cb, 0x1, 0x0);
        gbc.writeMem(0x96ba, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf3e9, gbc.sp());
        EXPECT(0x96bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ba));
        EXPECT(0x2f, gbc.readMem(0x96bb));
        // CB 2F 0166
        gbc.setState(0x5ce9, 0x6a81, 0x3240, 0xc4b5, 0xa647, 0xda8a, 0x0, 0x0);
        gbc.writeMem(0x5ce9, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6a81, gbc.sp());
        EXPECT(0x5ceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0168
        gbc.setState(0x41e3, 0x4743, 0x53c0, 0xcade, 0xee69, 0xd782, 0x0, 0x0);
        gbc.writeMem(0x41e3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4743, gbc.sp());
        EXPECT(0x41e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0169
        gbc.setState(0x12d, 0x4415, 0x5680, 0x9e4b, 0xc844, 0xec16, 0x1, 0x1);
        gbc.writeMem(0x12d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4415, gbc.sp());
        EXPECT(0x12f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 016A
        gbc.setState(0x595f, 0xa4f3, 0xe790, 0x139d, 0x461f, 0x32a, 0x1, 0x0);
        gbc.writeMem(0x595f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa4f3, gbc.sp());
        EXPECT(0x5961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 016B
        gbc.setState(0xcee1, 0x9cdb, 0x1ce0, 0x555f, 0xebe2, 0x6906, 0x0, 0x0);
        gbc.writeMem(0xcee1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9cdb, gbc.sp());
        EXPECT(0xcee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee1));
        EXPECT(0x2f, gbc.readMem(0xcee2));
        // CB 2F 016D
        gbc.setState(0x5604, 0x8d41, 0x27c0, 0x4322, 0x534, 0xc45f, 0x1, 0x1);
        gbc.writeMem(0x5604, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8d41, gbc.sp());
        EXPECT(0x5606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 016F
        gbc.setState(0xc89f, 0x848e, 0x6cb0, 0xbe5e, 0x22b6, 0xd710, 0x1, 0x0);
        gbc.writeMem(0xc89f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x848e, gbc.sp());
        EXPECT(0xc8a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc89f));
        EXPECT(0x2f, gbc.readMem(0xc8a0));
        // CB 2F 0170
        gbc.setState(0x80f2, 0xd85b, 0x1300, 0xe40a, 0x391c, 0xebfc, 0x1, 0x0);
        gbc.writeMem(0x80f2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd85b, gbc.sp());
        EXPECT(0x80f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80f2));
        EXPECT(0x2f, gbc.readMem(0x80f3));
        // CB 2F 0171
        gbc.setState(0xc66, 0x5e12, 0x8a0, 0xc51f, 0x14e0, 0x2ea6, 0x0, 0x0);
        gbc.writeMem(0xc66, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5e12, gbc.sp());
        EXPECT(0xc68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0173
        gbc.setState(0xc06, 0xa88e, 0xeb10, 0xcc31, 0xb0b7, 0x82c4, 0x0, 0x1);
        gbc.writeMem(0xc06, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa88e, gbc.sp());
        EXPECT(0xc08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0174
        gbc.setState(0x9978, 0x5678, 0x5c60, 0x3ee1, 0x84c3, 0x49a8, 0x1, 0x1);
        gbc.writeMem(0x9978, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5678, gbc.sp());
        EXPECT(0x997a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9978));
        EXPECT(0x2f, gbc.readMem(0x9979));
        // CB 2F 0175
        gbc.setState(0x3cbb, 0xcf0f, 0x23d0, 0x3214, 0xb275, 0xc413, 0x0, 0x0);
        gbc.writeMem(0x3cbb, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xcf0f, gbc.sp());
        EXPECT(0x3cbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0176
        gbc.setState(0x762a, 0xe980, 0x8f00, 0xb127, 0x3708, 0x9ef1, 0x1, 0x1);
        gbc.writeMem(0x762a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe980, gbc.sp());
        EXPECT(0x762c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0178
        gbc.setState(0x1e3, 0x3530, 0xce20, 0xf7a, 0x60f1, 0xdcfc, 0x1, 0x0);
        gbc.writeMem(0x1e3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3530, gbc.sp());
        EXPECT(0x1e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0179
        gbc.setState(0x4d51, 0xfcc, 0x6060, 0x32b5, 0xc4dd, 0x3339, 0x0, 0x0);
        gbc.writeMem(0x4d51, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xfcc, gbc.sp());
        EXPECT(0x4d53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 017A
        gbc.setState(0xa2a0, 0x84dd, 0x8a50, 0x771, 0x7280, 0x8a6b, 0x0, 0x0);
        gbc.writeMem(0xa2a0, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x84dd, gbc.sp());
        EXPECT(0xa2a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a0));
        EXPECT(0x2f, gbc.readMem(0xa2a1));
        // CB 2F 017B
        gbc.setState(0xda11, 0x89c4, 0x9840, 0x10b9, 0x2abc, 0x3d6, 0x1, 0x1);
        gbc.writeMem(0xda11, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x89c4, gbc.sp());
        EXPECT(0xda13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda11));
        EXPECT(0x2f, gbc.readMem(0xda12));
        // CB 2F 017C
        gbc.setState(0xa161, 0x3646, 0x4650, 0xb823, 0x6a5, 0x1f31, 0x1, 0x0);
        gbc.writeMem(0xa161, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3646, gbc.sp());
        EXPECT(0xa163, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa161));
        EXPECT(0x2f, gbc.readMem(0xa162));
        // CB 2F 017D
        gbc.setState(0x750d, 0x773e, 0x7800, 0x7bf8, 0xdf15, 0x6528, 0x1, 0x0);
        gbc.writeMem(0x750d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x773e, gbc.sp());
        EXPECT(0x750f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 017F
        gbc.setState(0x8bdd, 0xad2d, 0xb1c0, 0x60f0, 0x8172, 0x5b29, 0x1, 0x0);
        gbc.writeMem(0x8bdd, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xad2d, gbc.sp());
        EXPECT(0x8bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bdd));
        EXPECT(0x2f, gbc.readMem(0x8bde));
        // CB 2F 0180
        gbc.setState(0x65a5, 0x820e, 0xf570, 0xf07, 0x86a0, 0x5c0, 0x0, 0x0);
        gbc.writeMem(0x65a5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x820e, gbc.sp());
        EXPECT(0x65a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0181
        gbc.setState(0x50bb, 0xd96e, 0x1b60, 0x69c6, 0x9da6, 0xcf0d, 0x1, 0x1);
        gbc.writeMem(0x50bb, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd96e, gbc.sp());
        EXPECT(0x50bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0182
        gbc.setState(0x8006, 0xa1fe, 0x91b0, 0xb014, 0x3aef, 0x49c1, 0x0, 0x0);
        gbc.writeMem(0x8006, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa1fe, gbc.sp());
        EXPECT(0x8008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8006));
        EXPECT(0x2f, gbc.readMem(0x8007));
        // CB 2F 0183
        gbc.setState(0x9d8, 0xe686, 0x3240, 0x6035, 0x2a8, 0xf72f, 0x0, 0x1);
        gbc.writeMem(0x9d8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe686, gbc.sp());
        EXPECT(0x9da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0185
        gbc.setState(0x864c, 0x6af4, 0x1f70, 0x2c5d, 0x65b9, 0x6347, 0x1, 0x0);
        gbc.writeMem(0x864c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6af4, gbc.sp());
        EXPECT(0x864e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x864c));
        EXPECT(0x2f, gbc.readMem(0x864d));
        // CB 2F 0186
        gbc.setState(0x5a93, 0x5e6e, 0xb850, 0x5bf7, 0x23c0, 0xb675, 0x1, 0x0);
        gbc.writeMem(0x5a93, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5e6e, gbc.sp());
        EXPECT(0x5a95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0187
        gbc.setState(0x69e3, 0x3e22, 0x4a90, 0x486e, 0xfdf6, 0xe1bb, 0x1, 0x0);
        gbc.writeMem(0x69e3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3e22, gbc.sp());
        EXPECT(0x69e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0188
        gbc.setState(0x62a2, 0xd398, 0xd090, 0xcd62, 0x4c64, 0x1fe7, 0x1, 0x1);
        gbc.writeMem(0x62a2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd398, gbc.sp());
        EXPECT(0x62a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0189
        gbc.setState(0x711c, 0x3d7c, 0x580, 0x67ea, 0x2d29, 0xfa42, 0x1, 0x1);
        gbc.writeMem(0x711c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3d7c, gbc.sp());
        EXPECT(0x711e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 018A
        gbc.setState(0xdc30, 0x9b0d, 0xb8b0, 0x79c4, 0x1707, 0x8a7e, 0x1, 0x1);
        gbc.writeMem(0xdc30, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9b0d, gbc.sp());
        EXPECT(0xdc32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc30));
        EXPECT(0x2f, gbc.readMem(0xdc31));
        // CB 2F 018B
        gbc.setState(0x265a, 0x808f, 0xb8c0, 0x6fcb, 0x13c0, 0x67a8, 0x0, 0x0);
        gbc.writeMem(0x265a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x808f, gbc.sp());
        EXPECT(0x265c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 018C
        gbc.setState(0x1c4b, 0xb51f, 0xaa60, 0xce2d, 0x934d, 0x5e82, 0x0, 0x0);
        gbc.writeMem(0x1c4b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb51f, gbc.sp());
        EXPECT(0x1c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 018D
        gbc.setState(0x83fa, 0xd34d, 0x2520, 0x3192, 0x6be5, 0x5621, 0x1, 0x0);
        gbc.writeMem(0x83fa, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd34d, gbc.sp());
        EXPECT(0x83fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83fa));
        EXPECT(0x2f, gbc.readMem(0x83fb));
        // CB 2F 018E
        gbc.setState(0x8747, 0xbe0c, 0x9560, 0x1ad9, 0x5146, 0x46a4, 0x1, 0x0);
        gbc.writeMem(0x8747, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xbe0c, gbc.sp());
        EXPECT(0x8749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8747));
        EXPECT(0x2f, gbc.readMem(0x8748));
        // CB 2F 018F
        gbc.setState(0x3e42, 0x5f99, 0x2e0, 0x824f, 0xf6ec, 0xf7f8, 0x1, 0x0);
        gbc.writeMem(0x3e42, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5f99, gbc.sp());
        EXPECT(0x3e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0190
        gbc.setState(0x7cc0, 0x60da, 0xee10, 0xef71, 0xd65b, 0x9569, 0x0, 0x0);
        gbc.writeMem(0x7cc0, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x60da, gbc.sp());
        EXPECT(0x7cc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0191
        gbc.setState(0xb610, 0xab4a, 0xed70, 0x4abc, 0x610a, 0x36fe, 0x1, 0x0);
        gbc.writeMem(0xb610, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xab4a, gbc.sp());
        EXPECT(0xb612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb610));
        EXPECT(0x2f, gbc.readMem(0xb611));
        // CB 2F 0192
        gbc.setState(0x3c96, 0x10df, 0xcaa0, 0x1d8f, 0x1a47, 0xb44a, 0x1, 0x1);
        gbc.writeMem(0x3c96, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x10df, gbc.sp());
        EXPECT(0x3c98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0193
        gbc.setState(0x9879, 0x783a, 0x7de0, 0x3231, 0xf27b, 0xbcee, 0x1, 0x1);
        gbc.writeMem(0x9879, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x783a, gbc.sp());
        EXPECT(0x987b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9879));
        EXPECT(0x2f, gbc.readMem(0x987a));
        // CB 2F 0194
        gbc.setState(0x2a6f, 0xb4d5, 0xab80, 0xafaa, 0x3078, 0xfd34, 0x0, 0x1);
        gbc.writeMem(0x2a6f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb4d5, gbc.sp());
        EXPECT(0x2a71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0195
        gbc.setState(0x80dd, 0x946d, 0x270, 0x375, 0x1ca2, 0xd6b5, 0x0, 0x0);
        gbc.writeMem(0x80dd, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x946d, gbc.sp());
        EXPECT(0x80df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80dd));
        EXPECT(0x2f, gbc.readMem(0x80de));
        // CB 2F 0196
        gbc.setState(0x97b, 0xf7a6, 0x1ee0, 0x52a3, 0x4836, 0xb0f6, 0x1, 0x0);
        gbc.writeMem(0x97b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf7a6, gbc.sp());
        EXPECT(0x97d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0197
        gbc.setState(0x74ab, 0x683c, 0xc140, 0x226d, 0xd1f9, 0xf3f1, 0x0, 0x1);
        gbc.writeMem(0x74ab, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x683c, gbc.sp());
        EXPECT(0x74ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0198
        gbc.setState(0xb8c3, 0xbd07, 0x2900, 0x97b, 0xfe68, 0x903f, 0x0, 0x0);
        gbc.writeMem(0xb8c3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbd07, gbc.sp());
        EXPECT(0xb8c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8c3));
        EXPECT(0x2f, gbc.readMem(0xb8c4));
        // CB 2F 0199
        gbc.setState(0xe4aa, 0x8c87, 0xcc10, 0x9d7d, 0x89f4, 0x3f49, 0x0, 0x1);
        gbc.writeMem(0xe4aa, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8c87, gbc.sp());
        EXPECT(0xe4ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4aa));
        EXPECT(0x2f, gbc.readMem(0xe4ab));
        // CB 2F 019A
        gbc.setState(0x8bd4, 0xc22d, 0x4580, 0x4e81, 0x3bb6, 0xca0d, 0x0, 0x0);
        gbc.writeMem(0x8bd4, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc22d, gbc.sp());
        EXPECT(0x8bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd4));
        EXPECT(0x2f, gbc.readMem(0x8bd5));
        // CB 2F 019B
        gbc.setState(0x18cb, 0x347c, 0x66d0, 0xbf02, 0xe07a, 0x8e26, 0x1, 0x1);
        gbc.writeMem(0x18cb, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x347c, gbc.sp());
        EXPECT(0x18cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 019C
        gbc.setState(0x202c, 0x284, 0xa970, 0x2f18, 0x57a7, 0xc849, 0x0, 0x1);
        gbc.writeMem(0x202c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x284, gbc.sp());
        EXPECT(0x202e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 019D
        gbc.setState(0x3dec, 0x5902, 0xe1e0, 0x4b93, 0x6b27, 0x1154, 0x1, 0x0);
        gbc.writeMem(0x3dec, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5902, gbc.sp());
        EXPECT(0x3dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 019E
        gbc.setState(0x17f8, 0x30ae, 0x7f20, 0x6a7c, 0xb976, 0xabd1, 0x0, 0x1);
        gbc.writeMem(0x17f8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x30ae, gbc.sp());
        EXPECT(0x17fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 019F
        gbc.setState(0x19e1, 0x4378, 0x4620, 0x9b99, 0x8781, 0xd4c5, 0x1, 0x0);
        gbc.writeMem(0x19e1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4378, gbc.sp());
        EXPECT(0x19e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01A0
        gbc.setState(0xb1a4, 0x5c77, 0xa180, 0xd6b6, 0x26f5, 0x578b, 0x1, 0x1);
        gbc.writeMem(0xb1a4, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5c77, gbc.sp());
        EXPECT(0xb1a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1a4));
        EXPECT(0x2f, gbc.readMem(0xb1a5));
        // CB 2F 01A1
        gbc.setState(0xedaa, 0x1c53, 0xaf70, 0xad99, 0xb816, 0x1bd7, 0x0, 0x1);
        gbc.writeMem(0xedaa, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1c53, gbc.sp());
        EXPECT(0xedac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedaa));
        EXPECT(0x2f, gbc.readMem(0xedab));
        // CB 2F 01A2
        gbc.setState(0x79ab, 0x625, 0xbf80, 0x7ddb, 0x5b64, 0xeaef, 0x1, 0x0);
        gbc.writeMem(0x79ab, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x625, gbc.sp());
        EXPECT(0x79ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01A3
        gbc.setState(0x79b3, 0x70aa, 0x8be0, 0x6b2e, 0x5717, 0xd427, 0x0, 0x0);
        gbc.writeMem(0x79b3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x70aa, gbc.sp());
        EXPECT(0x79b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01A4
        gbc.setState(0xed35, 0x61bc, 0x7640, 0x1665, 0xb3d4, 0x4d79, 0x0, 0x1);
        gbc.writeMem(0xed35, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x61bc, gbc.sp());
        EXPECT(0xed37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed35));
        EXPECT(0x2f, gbc.readMem(0xed36));
        // CB 2F 01A5
        gbc.setState(0x512, 0xc3dc, 0x1b20, 0x521f, 0x2cdb, 0xe7d7, 0x1, 0x1);
        gbc.writeMem(0x512, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc3dc, gbc.sp());
        EXPECT(0x514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01A6
        gbc.setState(0xb090, 0xbae7, 0x2c80, 0x7af, 0xc333, 0x872e, 0x1, 0x0);
        gbc.writeMem(0xb090, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbae7, gbc.sp());
        EXPECT(0xb092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb090));
        EXPECT(0x2f, gbc.readMem(0xb091));
        // CB 2F 01A7
        gbc.setState(0xcc49, 0x6d9d, 0x12c0, 0xe4fc, 0x7230, 0x1899, 0x0, 0x1);
        gbc.writeMem(0xcc49, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6d9d, gbc.sp());
        EXPECT(0xcc4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc49));
        EXPECT(0x2f, gbc.readMem(0xcc4a));
        // CB 2F 01A8
        gbc.setState(0xa4a, 0x7ded, 0xbc60, 0x790d, 0xfc39, 0x1261, 0x1, 0x0);
        gbc.writeMem(0xa4a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7ded, gbc.sp());
        EXPECT(0xa4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01A9
        gbc.setState(0x557f, 0x8a3c, 0xb860, 0x4e47, 0x2410, 0x3c7c, 0x0, 0x0);
        gbc.writeMem(0x557f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8a3c, gbc.sp());
        EXPECT(0x5581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01AA
        gbc.setState(0x6011, 0x244a, 0x1780, 0x99b3, 0x94da, 0xc29f, 0x0, 0x0);
        gbc.writeMem(0x6011, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x244a, gbc.sp());
        EXPECT(0x6013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01AB
        gbc.setState(0x765e, 0x3ee5, 0x5520, 0x1cd1, 0x9c04, 0x8db7, 0x1, 0x0);
        gbc.writeMem(0x765e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3ee5, gbc.sp());
        EXPECT(0x7660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01AC
        gbc.setState(0xbb2c, 0x70df, 0x62f0, 0x35e0, 0x8ed6, 0xbf52, 0x0, 0x1);
        gbc.writeMem(0xbb2c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x70df, gbc.sp());
        EXPECT(0xbb2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb2c));
        EXPECT(0x2f, gbc.readMem(0xbb2d));
        // CB 2F 01AD
        gbc.setState(0xa03a, 0x7aaf, 0xb6b0, 0x5cd, 0x29a0, 0xf690, 0x0, 0x0);
        gbc.writeMem(0xa03a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7aaf, gbc.sp());
        EXPECT(0xa03c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa03a));
        EXPECT(0x2f, gbc.readMem(0xa03b));
        // CB 2F 01AE
        gbc.setState(0x1ac1, 0xfe85, 0x83b0, 0x8f8b, 0xbde3, 0x75bf, 0x1, 0x0);
        gbc.writeMem(0x1ac1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfe85, gbc.sp());
        EXPECT(0x1ac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01AF
        gbc.setState(0x79ce, 0xb447, 0xa9a0, 0x4d03, 0xc909, 0x425f, 0x0, 0x1);
        gbc.writeMem(0x79ce, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb447, gbc.sp());
        EXPECT(0x79d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01B0
        gbc.setState(0x5dd6, 0x883e, 0x2ba0, 0xca83, 0x178e, 0x7a35, 0x1, 0x1);
        gbc.writeMem(0x5dd6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x883e, gbc.sp());
        EXPECT(0x5dd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01B1
        gbc.setState(0x83d1, 0xb942, 0xaed0, 0xddad, 0xdb59, 0x41b, 0x0, 0x0);
        gbc.writeMem(0x83d1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb942, gbc.sp());
        EXPECT(0x83d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d1));
        EXPECT(0x2f, gbc.readMem(0x83d2));
        // CB 2F 01B2
        gbc.setState(0x738f, 0x74d0, 0xa9a0, 0x44a5, 0x69c4, 0x409d, 0x1, 0x0);
        gbc.writeMem(0x738f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x74d0, gbc.sp());
        EXPECT(0x7391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01B3
        gbc.setState(0xa4a0, 0x3538, 0x47a0, 0xa88b, 0x5ce8, 0x3e4e, 0x0, 0x1);
        gbc.writeMem(0xa4a0, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3538, gbc.sp());
        EXPECT(0xa4a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4a0));
        EXPECT(0x2f, gbc.readMem(0xa4a1));
        // CB 2F 01B4
        gbc.setState(0xcad2, 0x71af, 0xed0, 0xeddd, 0x23a0, 0x8d6c, 0x1, 0x0);
        gbc.writeMem(0xcad2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x71af, gbc.sp());
        EXPECT(0xcad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcad2));
        EXPECT(0x2f, gbc.readMem(0xcad3));
        // CB 2F 01B5
        gbc.setState(0x6e7d, 0xfc00, 0x5e10, 0xb491, 0x55d8, 0xba3a, 0x1, 0x0);
        gbc.writeMem(0x6e7d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfc00, gbc.sp());
        EXPECT(0x6e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01B6
        gbc.setState(0x4f1b, 0xc4b8, 0x3230, 0xdde0, 0xa3e0, 0x1f55, 0x0, 0x1);
        gbc.writeMem(0x4f1b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc4b8, gbc.sp());
        EXPECT(0x4f1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01B7
        gbc.setState(0x29c4, 0xcabf, 0x5d40, 0xf84f, 0x5067, 0xeb53, 0x1, 0x0);
        gbc.writeMem(0x29c4, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcabf, gbc.sp());
        EXPECT(0x29c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01B8
        gbc.setState(0x15a4, 0xe5b1, 0x9a80, 0x2952, 0xacc4, 0x766b, 0x0, 0x0);
        gbc.writeMem(0x15a4, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe5b1, gbc.sp());
        EXPECT(0x15a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01B9
        gbc.setState(0x6faf, 0xf80f, 0x5590, 0x5b71, 0xd425, 0xbb33, 0x1, 0x0);
        gbc.writeMem(0x6faf, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf80f, gbc.sp());
        EXPECT(0x6fb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01BA
        gbc.setState(0xd7d, 0xa7c0, 0x8010, 0xbc78, 0xeba7, 0xb896, 0x1, 0x1);
        gbc.writeMem(0xd7d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa7c0, gbc.sp());
        EXPECT(0xd7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01BC
        gbc.setState(0x2de7, 0xcd1d, 0xe560, 0x6027, 0x9a0a, 0x796b, 0x1, 0x0);
        gbc.writeMem(0x2de7, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xcd1d, gbc.sp());
        EXPECT(0x2de9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01BE
        gbc.setState(0x3372, 0x1864, 0xb020, 0x7da3, 0xc28d, 0x368c, 0x0, 0x0);
        gbc.writeMem(0x3372, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1864, gbc.sp());
        EXPECT(0x3374, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01BF
        gbc.setState(0x5599, 0x7b49, 0x9840, 0xf9ea, 0x5a7a, 0x4144, 0x0, 0x0);
        gbc.writeMem(0x5599, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7b49, gbc.sp());
        EXPECT(0x559b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01C0
        gbc.setState(0x1c9f, 0x84ac, 0x90, 0x4df9, 0x1714, 0x727c, 0x0, 0x1);
        gbc.writeMem(0x1c9f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x84ac, gbc.sp());
        EXPECT(0x1ca1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01C1
        gbc.setState(0xd1d5, 0x1a1b, 0x2e40, 0xa6e4, 0xbe8e, 0x219f, 0x0, 0x1);
        gbc.writeMem(0xd1d5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1a1b, gbc.sp());
        EXPECT(0xd1d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d5));
        EXPECT(0x2f, gbc.readMem(0xd1d6));
        // CB 2F 01C2
        gbc.setState(0x8ad1, 0xac04, 0xa900, 0x3c0, 0xabb1, 0xa2c2, 0x1, 0x0);
        gbc.writeMem(0x8ad1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xac04, gbc.sp());
        EXPECT(0x8ad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad1));
        EXPECT(0x2f, gbc.readMem(0x8ad2));
        // CB 2F 01C3
        gbc.setState(0xe1f9, 0x89b4, 0x58c0, 0xdd16, 0x4036, 0x6095, 0x0, 0x0);
        gbc.writeMem(0xe1f9, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x89b4, gbc.sp());
        EXPECT(0xe1fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f9));
        EXPECT(0x2f, gbc.readMem(0xe1fa));
        // CB 2F 01C4
        gbc.setState(0x6315, 0xac2a, 0x26e0, 0x9e31, 0xe9f6, 0xc32b, 0x0, 0x0);
        gbc.writeMem(0x6315, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xac2a, gbc.sp());
        EXPECT(0x6317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01C5
        gbc.setState(0x4c18, 0x22b9, 0x9ad0, 0x9f4b, 0x801d, 0x6403, 0x0, 0x1);
        gbc.writeMem(0x4c18, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x22b9, gbc.sp());
        EXPECT(0x4c1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01C6
        gbc.setState(0x13f1, 0xeb2e, 0x9290, 0xcc4f, 0x193f, 0x3b05, 0x0, 0x1);
        gbc.writeMem(0x13f1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xeb2e, gbc.sp());
        EXPECT(0x13f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01C8
        gbc.setState(0x3151, 0x6c36, 0xcd60, 0x6eca, 0x6377, 0x90ce, 0x1, 0x0);
        gbc.writeMem(0x3151, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6c36, gbc.sp());
        EXPECT(0x3153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01C9
        gbc.setState(0x3901, 0x8e50, 0x6120, 0x707b, 0x6638, 0x3754, 0x1, 0x1);
        gbc.writeMem(0x3901, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8e50, gbc.sp());
        EXPECT(0x3903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01CA
        gbc.setState(0x9202, 0x292d, 0xbe60, 0xd344, 0x8f33, 0xf643, 0x0, 0x0);
        gbc.writeMem(0x9202, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x292d, gbc.sp());
        EXPECT(0x9204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9202));
        EXPECT(0x2f, gbc.readMem(0x9203));
        // CB 2F 01CB
        gbc.setState(0xede5, 0x5767, 0xd7e0, 0x2c42, 0x2baa, 0xb38f, 0x0, 0x1);
        gbc.writeMem(0xede5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5767, gbc.sp());
        EXPECT(0xede7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xede5));
        EXPECT(0x2f, gbc.readMem(0xede6));
        // CB 2F 01CC
        gbc.setState(0x94cd, 0x9f6e, 0x37d0, 0xd271, 0x915b, 0xe82b, 0x1, 0x0);
        gbc.writeMem(0x94cd, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9f6e, gbc.sp());
        EXPECT(0x94cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94cd));
        EXPECT(0x2f, gbc.readMem(0x94ce));
        // CB 2F 01CD
        gbc.setState(0x2f98, 0xf715, 0x3f40, 0x3846, 0x2ecb, 0xeec0, 0x0, 0x0);
        gbc.writeMem(0x2f98, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf715, gbc.sp());
        EXPECT(0x2f9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01CE
        gbc.setState(0xedea, 0x10fd, 0xaea0, 0x81cc, 0xe068, 0x2760, 0x0, 0x1);
        gbc.writeMem(0xedea, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x10fd, gbc.sp());
        EXPECT(0xedec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedea));
        EXPECT(0x2f, gbc.readMem(0xedeb));
        // CB 2F 01CF
        gbc.setState(0x88b6, 0x57a0, 0x8a40, 0x8bf8, 0x8224, 0xf848, 0x0, 0x1);
        gbc.writeMem(0x88b6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x57a0, gbc.sp());
        EXPECT(0x88b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b6));
        EXPECT(0x2f, gbc.readMem(0x88b7));
        // CB 2F 01D0
        gbc.setState(0x2dff, 0x9970, 0x9e10, 0x5ba9, 0x125f, 0x259f, 0x0, 0x1);
        gbc.writeMem(0x2dff, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9970, gbc.sp());
        EXPECT(0x2e01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01D1
        gbc.setState(0x43d9, 0xb1d5, 0x7b60, 0x799, 0x1a7e, 0x27d3, 0x0, 0x0);
        gbc.writeMem(0x43d9, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb1d5, gbc.sp());
        EXPECT(0x43db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01D3
        gbc.setState(0xbb6a, 0x7f7b, 0x2100, 0x2d25, 0xfaad, 0x8737, 0x1, 0x1);
        gbc.writeMem(0xbb6a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7f7b, gbc.sp());
        EXPECT(0xbb6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb6a));
        EXPECT(0x2f, gbc.readMem(0xbb6b));
        // CB 2F 01D4
        gbc.setState(0x9462, 0x49c8, 0xee0, 0xff11, 0x3ada, 0xe52f, 0x0, 0x1);
        gbc.writeMem(0x9462, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x49c8, gbc.sp());
        EXPECT(0x9464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9462));
        EXPECT(0x2f, gbc.readMem(0x9463));
        // CB 2F 01D5
        gbc.setState(0x76b2, 0x4ecc, 0x1200, 0x16cd, 0x4657, 0x43b4, 0x1, 0x1);
        gbc.writeMem(0x76b2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4ecc, gbc.sp());
        EXPECT(0x76b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01D6
        gbc.setState(0x514d, 0xb69e, 0x34a0, 0xe9e3, 0xabd0, 0xcb13, 0x0, 0x0);
        gbc.writeMem(0x514d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb69e, gbc.sp());
        EXPECT(0x514f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01D7
        gbc.setState(0xafe2, 0x735d, 0x2750, 0xf19e, 0x55d4, 0xa4b2, 0x1, 0x1);
        gbc.writeMem(0xafe2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x735d, gbc.sp());
        EXPECT(0xafe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafe2));
        EXPECT(0x2f, gbc.readMem(0xafe3));
        // CB 2F 01D8
        gbc.setState(0xd6cf, 0x6e7f, 0x5c10, 0xe43a, 0xa5e9, 0xb8bc, 0x0, 0x1);
        gbc.writeMem(0xd6cf, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6e7f, gbc.sp());
        EXPECT(0xd6d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6cf));
        EXPECT(0x2f, gbc.readMem(0xd6d0));
        // CB 2F 01D9
        gbc.setState(0x44c2, 0x3235, 0x30c0, 0x5c8, 0xab64, 0xfa65, 0x0, 0x0);
        gbc.writeMem(0x44c2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3235, gbc.sp());
        EXPECT(0x44c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01DA
        gbc.setState(0xcee6, 0xa22a, 0x8760, 0x682a, 0x566, 0x6718, 0x1, 0x1);
        gbc.writeMem(0xcee6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa22a, gbc.sp());
        EXPECT(0xcee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee6));
        EXPECT(0x2f, gbc.readMem(0xcee7));
        // CB 2F 01DB
        gbc.setState(0x2ab6, 0x3e2e, 0x5fc0, 0xb11d, 0x70dc, 0x132c, 0x0, 0x0);
        gbc.writeMem(0x2ab6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3e2e, gbc.sp());
        EXPECT(0x2ab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01DC
        gbc.setState(0xe99b, 0xe1b2, 0xc760, 0x2323, 0x5d29, 0xf308, 0x1, 0x1);
        gbc.writeMem(0xe99b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe1b2, gbc.sp());
        EXPECT(0xe99d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe99b));
        EXPECT(0x2f, gbc.readMem(0xe99c));
        // CB 2F 01DD
        gbc.setState(0xd91b, 0x8dd3, 0x4310, 0x5e9a, 0xcc29, 0x96de, 0x1, 0x0);
        gbc.writeMem(0xd91b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8dd3, gbc.sp());
        EXPECT(0xd91d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd91b));
        EXPECT(0x2f, gbc.readMem(0xd91c));
        // CB 2F 01DF
        gbc.setState(0x9447, 0x78f, 0x6d90, 0x8d37, 0x61ce, 0x81da, 0x1, 0x1);
        gbc.writeMem(0x9447, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x78f, gbc.sp());
        EXPECT(0x9449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9447));
        EXPECT(0x2f, gbc.readMem(0x9448));
        // CB 2F 01E0
        gbc.setState(0x5832, 0x4c34, 0x8220, 0x2da4, 0x8a6a, 0x7591, 0x0, 0x0);
        gbc.writeMem(0x5832, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4c34, gbc.sp());
        EXPECT(0x5834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01E1
        gbc.setState(0x9986, 0x26b5, 0xb2a0, 0x6624, 0xe6b2, 0x1103, 0x1, 0x1);
        gbc.writeMem(0x9986, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x26b5, gbc.sp());
        EXPECT(0x9988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9986));
        EXPECT(0x2f, gbc.readMem(0x9987));
        // CB 2F 01E2
        gbc.setState(0x16d5, 0x9991, 0x52c0, 0x5657, 0x6cb1, 0x606, 0x0, 0x0);
        gbc.writeMem(0x16d5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9991, gbc.sp());
        EXPECT(0x16d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01E4
        gbc.setState(0x17ed, 0x8485, 0x2310, 0x3840, 0x16ed, 0x668a, 0x0, 0x1);
        gbc.writeMem(0x17ed, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8485, gbc.sp());
        EXPECT(0x17ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01E5
        gbc.setState(0xf39, 0x33ac, 0xe410, 0x9724, 0x692d, 0x96c6, 0x0, 0x1);
        gbc.writeMem(0xf39, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x33ac, gbc.sp());
        EXPECT(0xf3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01E6
        gbc.setState(0xc300, 0xa97e, 0x6470, 0xf6f4, 0x99eb, 0x89b3, 0x0, 0x1);
        gbc.writeMem(0xc300, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa97e, gbc.sp());
        EXPECT(0xc302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc300));
        EXPECT(0x2f, gbc.readMem(0xc301));
        // CB 2F 01E7
        gbc.setState(0x586a, 0x6268, 0x23e0, 0xdb91, 0xc975, 0x3c0e, 0x1, 0x0);
        gbc.writeMem(0x586a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6268, gbc.sp());
        EXPECT(0x586c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01E9
        gbc.setState(0x1d8f, 0x824, 0xaf30, 0x66ee, 0x3469, 0x88cf, 0x1, 0x0);
        gbc.writeMem(0x1d8f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x824, gbc.sp());
        EXPECT(0x1d91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01EA
        gbc.setState(0xbcdc, 0x2b6c, 0xc0f0, 0xf2c9, 0xe7e, 0x671b, 0x1, 0x0);
        gbc.writeMem(0xbcdc, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2b6c, gbc.sp());
        EXPECT(0xbcde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcdc));
        EXPECT(0x2f, gbc.readMem(0xbcdd));
        // CB 2F 01EB
        gbc.setState(0x84b5, 0x1c2c, 0xc010, 0xb0e6, 0x9d61, 0xb598, 0x0, 0x1);
        gbc.writeMem(0x84b5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1c2c, gbc.sp());
        EXPECT(0x84b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b5));
        EXPECT(0x2f, gbc.readMem(0x84b6));
        // CB 2F 01EC
        gbc.setState(0x4ece, 0x6f69, 0x2510, 0x2ab7, 0x6e8a, 0xc593, 0x0, 0x0);
        gbc.writeMem(0x4ece, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6f69, gbc.sp());
        EXPECT(0x4ed0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01ED
        gbc.setState(0x1338, 0x8b2b, 0xe490, 0x3dc4, 0xc53e, 0x80f8, 0x0, 0x1);
        gbc.writeMem(0x1338, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8b2b, gbc.sp());
        EXPECT(0x133a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01EE
        gbc.setState(0x5ea5, 0xf9a7, 0xb90, 0xd4f0, 0x8053, 0x7397, 0x1, 0x0);
        gbc.writeMem(0x5ea5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf9a7, gbc.sp());
        EXPECT(0x5ea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01EF
        gbc.setState(0x7ed4, 0x3760, 0x2060, 0x1d52, 0x5149, 0xd641, 0x1, 0x0);
        gbc.writeMem(0x7ed4, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3760, gbc.sp());
        EXPECT(0x7ed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01F0
        gbc.setState(0x8386, 0x2292, 0x1050, 0x845a, 0x69cb, 0x73ce, 0x1, 0x1);
        gbc.writeMem(0x8386, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2292, gbc.sp());
        EXPECT(0x8388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8386));
        EXPECT(0x2f, gbc.readMem(0x8387));
        // CB 2F 01F1
        gbc.setState(0xa185, 0x46c9, 0x9290, 0x833, 0xcbe, 0xded0, 0x0, 0x0);
        gbc.writeMem(0xa185, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x46c9, gbc.sp());
        EXPECT(0xa187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa185));
        EXPECT(0x2f, gbc.readMem(0xa186));
        // CB 2F 01F2
        gbc.setState(0x2e57, 0xb276, 0x4e90, 0x9403, 0x956e, 0x6e6a, 0x1, 0x1);
        gbc.writeMem(0x2e57, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb276, gbc.sp());
        EXPECT(0x2e59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01F3
        gbc.setState(0x3c99, 0x3056, 0xdca0, 0x35c4, 0xb60f, 0xc2da, 0x0, 0x1);
        gbc.writeMem(0x3c99, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3056, gbc.sp());
        EXPECT(0x3c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01F4
        gbc.setState(0xa4c8, 0x7008, 0x8ce0, 0x6d92, 0xf810, 0x54, 0x0, 0x1);
        gbc.writeMem(0xa4c8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7008, gbc.sp());
        EXPECT(0xa4ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c8));
        EXPECT(0x2f, gbc.readMem(0xa4c9));
        // CB 2F 01F5
        gbc.setState(0x9823, 0x748a, 0xbd00, 0x5a90, 0xc3bd, 0xad99, 0x1, 0x1);
        gbc.writeMem(0x9823, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x748a, gbc.sp());
        EXPECT(0x9825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9823));
        EXPECT(0x2f, gbc.readMem(0x9824));
        // CB 2F 01F6
        gbc.setState(0x914c, 0x3929, 0xa2e0, 0xd48, 0x659b, 0x3755, 0x0, 0x1);
        gbc.writeMem(0x914c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3929, gbc.sp());
        EXPECT(0x914e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x914c));
        EXPECT(0x2f, gbc.readMem(0x914d));
        // CB 2F 01F7
        gbc.setState(0xe215, 0x163, 0x90f0, 0x98e0, 0x5653, 0xf61d, 0x1, 0x1);
        gbc.writeMem(0xe215, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x163, gbc.sp());
        EXPECT(0xe217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe215));
        EXPECT(0x2f, gbc.readMem(0xe216));
        // CB 2F 01F8
        gbc.setState(0xd2fa, 0x6fef, 0x18d0, 0x90a8, 0xe2ba, 0xd97c, 0x0, 0x0);
        gbc.writeMem(0xd2fa, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6fef, gbc.sp());
        EXPECT(0xd2fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2fa));
        EXPECT(0x2f, gbc.readMem(0xd2fb));
        // CB 2F 01F9
        gbc.setState(0x5cd7, 0x945f, 0x80a0, 0x6fc7, 0x4305, 0x1fdf, 0x0, 0x1);
        gbc.writeMem(0x5cd7, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x945f, gbc.sp());
        EXPECT(0x5cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01FA
        gbc.setState(0x3084, 0x4703, 0x7b60, 0x90bd, 0xe867, 0x5474, 0x1, 0x0);
        gbc.writeMem(0x3084, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4703, gbc.sp());
        EXPECT(0x3086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01FB
        gbc.setState(0xae7e, 0x357e, 0x3730, 0xa53, 0x63a1, 0xa098, 0x0, 0x1);
        gbc.writeMem(0xae7e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x357e, gbc.sp());
        EXPECT(0xae80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae7e));
        EXPECT(0x2f, gbc.readMem(0xae7f));
        // CB 2F 01FD
        gbc.setState(0x33fc, 0xe220, 0xcf50, 0x208f, 0x8e9a, 0xe799, 0x1, 0x1);
        gbc.writeMem(0x33fc, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe220, gbc.sp());
        EXPECT(0x33fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 01FE
        gbc.setState(0x3280, 0xb7d2, 0x3c50, 0xfe92, 0x7960, 0x78c8, 0x1, 0x0);
        gbc.writeMem(0x3280, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb7d2, gbc.sp());
        EXPECT(0x3282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 01FF
        gbc.setState(0x30fc, 0x6841, 0xe780, 0x9915, 0xe831, 0xa508, 0x0, 0x0);
        gbc.writeMem(0x30fc, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6841, gbc.sp());
        EXPECT(0x30fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0200
        gbc.setState(0x4806, 0xdc12, 0xa330, 0x8cad, 0x9b03, 0xaeb0, 0x0, 0x1);
        gbc.writeMem(0x4806, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xdc12, gbc.sp());
        EXPECT(0x4808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0201
        gbc.setState(0x4363, 0xadb8, 0x78a0, 0x78c2, 0x22ab, 0x4e89, 0x0, 0x0);
        gbc.writeMem(0x4363, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xadb8, gbc.sp());
        EXPECT(0x4365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0202
        gbc.setState(0x6b53, 0x8fdc, 0x8dd0, 0xf1e, 0xbc2e, 0xfb4a, 0x1, 0x0);
        gbc.writeMem(0x6b53, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8fdc, gbc.sp());
        EXPECT(0x6b55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0203
        gbc.setState(0x4f75, 0xaa28, 0x7e90, 0xd9c6, 0x8ae7, 0xc5d1, 0x0, 0x0);
        gbc.writeMem(0x4f75, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xaa28, gbc.sp());
        EXPECT(0x4f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0204
        gbc.setState(0x426b, 0xa4b5, 0xa2d0, 0x3586, 0xdd84, 0xc804, 0x1, 0x0);
        gbc.writeMem(0x426b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa4b5, gbc.sp());
        EXPECT(0x426d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0205
        gbc.setState(0x6e49, 0xcc27, 0xfbf0, 0x83fa, 0xddfd, 0x36b6, 0x0, 0x0);
        gbc.writeMem(0x6e49, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xcc27, gbc.sp());
        EXPECT(0x6e4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0206
        gbc.setState(0xb106, 0x3ac5, 0x7ba0, 0x1c9d, 0x74fa, 0x383b, 0x1, 0x0);
        gbc.writeMem(0xb106, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3ac5, gbc.sp());
        EXPECT(0xb108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb106));
        EXPECT(0x2f, gbc.readMem(0xb107));
        // CB 2F 0207
        gbc.setState(0xb233, 0x7482, 0x8f90, 0xdfbf, 0xcc84, 0x326, 0x1, 0x1);
        gbc.writeMem(0xb233, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7482, gbc.sp());
        EXPECT(0xb235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb233));
        EXPECT(0x2f, gbc.readMem(0xb234));
        // CB 2F 0208
        gbc.setState(0xefcb, 0x4227, 0x40a0, 0xfb2, 0xa265, 0xeb8f, 0x1, 0x1);
        gbc.writeMem(0xefcb, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4227, gbc.sp());
        EXPECT(0xefcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefcb));
        EXPECT(0x2f, gbc.readMem(0xefcc));
        // CB 2F 0209
        gbc.setState(0x9342, 0x2af8, 0x95c0, 0xb071, 0xacb7, 0xb3f0, 0x1, 0x0);
        gbc.writeMem(0x9342, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2af8, gbc.sp());
        EXPECT(0x9344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9342));
        EXPECT(0x2f, gbc.readMem(0x9343));
        // CB 2F 020A
        gbc.setState(0x7d67, 0xf2dc, 0xdea0, 0x1610, 0x6417, 0x3edf, 0x0, 0x0);
        gbc.writeMem(0x7d67, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf2dc, gbc.sp());
        EXPECT(0x7d69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 020B
        gbc.setState(0x1ff3, 0xd518, 0xbd40, 0xaf82, 0x12e6, 0xb25a, 0x1, 0x1);
        gbc.writeMem(0x1ff3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd518, gbc.sp());
        EXPECT(0x1ff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 020C
        gbc.setState(0x37dd, 0x83fb, 0x4670, 0x57e1, 0xb372, 0xe7da, 0x0, 0x0);
        gbc.writeMem(0x37dd, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x83fb, gbc.sp());
        EXPECT(0x37df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 020D
        gbc.setState(0x78ce, 0xe2f8, 0x1a50, 0x7b26, 0xfab1, 0xcbd5, 0x1, 0x0);
        gbc.writeMem(0x78ce, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe2f8, gbc.sp());
        EXPECT(0x78d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 020E
        gbc.setState(0x3656, 0x8935, 0x4f0, 0x18d6, 0xd92f, 0x15d0, 0x0, 0x1);
        gbc.writeMem(0x3656, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8935, gbc.sp());
        EXPECT(0x3658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 020F
        gbc.setState(0x353f, 0xc29b, 0x6d30, 0x643d, 0x8220, 0xcf, 0x0, 0x1);
        gbc.writeMem(0x353f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc29b, gbc.sp());
        EXPECT(0x3541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0210
        gbc.setState(0x73b3, 0x5088, 0x50f0, 0x84db, 0x307c, 0x4dca, 0x1, 0x0);
        gbc.writeMem(0x73b3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5088, gbc.sp());
        EXPECT(0x73b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0211
        gbc.setState(0x4dc5, 0xd3ca, 0xf910, 0x1017, 0x837c, 0x12e7, 0x1, 0x0);
        gbc.writeMem(0x4dc5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd3ca, gbc.sp());
        EXPECT(0x4dc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0213
        gbc.setState(0x75f0, 0xe067, 0x67f0, 0xcb53, 0x54e0, 0x1574, 0x0, 0x0);
        gbc.writeMem(0x75f0, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe067, gbc.sp());
        EXPECT(0x75f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0214
        gbc.setState(0x1d1, 0xca18, 0x9d80, 0xdb58, 0xdcc5, 0x41a5, 0x0, 0x1);
        gbc.writeMem(0x1d1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xca18, gbc.sp());
        EXPECT(0x1d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0215
        gbc.setState(0xe8b4, 0x1e5f, 0xa660, 0xe47c, 0x50c9, 0xcf4, 0x0, 0x1);
        gbc.writeMem(0xe8b4, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1e5f, gbc.sp());
        EXPECT(0xe8b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b4));
        EXPECT(0x2f, gbc.readMem(0xe8b5));
        // CB 2F 0216
        gbc.setState(0xb29a, 0x1929, 0xfe0, 0xcf10, 0x3894, 0xbeef, 0x1, 0x1);
        gbc.writeMem(0xb29a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1929, gbc.sp());
        EXPECT(0xb29c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb29a));
        EXPECT(0x2f, gbc.readMem(0xb29b));
        // CB 2F 0217
        gbc.setState(0x5ce1, 0x697, 0xf880, 0xe913, 0xc085, 0xa24c, 0x0, 0x1);
        gbc.writeMem(0x5ce1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x697, gbc.sp());
        EXPECT(0x5ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0218
        gbc.setState(0xe993, 0xd502, 0xc40, 0xb471, 0x1947, 0xadf6, 0x1, 0x1);
        gbc.writeMem(0xe993, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd502, gbc.sp());
        EXPECT(0xe995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe993));
        EXPECT(0x2f, gbc.readMem(0xe994));
        // CB 2F 0219
        gbc.setState(0xb68d, 0x55ce, 0x5230, 0xe7e5, 0x901d, 0x58d3, 0x1, 0x1);
        gbc.writeMem(0xb68d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x55ce, gbc.sp());
        EXPECT(0xb68f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb68d));
        EXPECT(0x2f, gbc.readMem(0xb68e));
        // CB 2F 021A
        gbc.setState(0xcba3, 0xca9b, 0x8690, 0x657e, 0xa5c1, 0x2ecb, 0x0, 0x1);
        gbc.writeMem(0xcba3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xca9b, gbc.sp());
        EXPECT(0xcba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba3));
        EXPECT(0x2f, gbc.readMem(0xcba4));
        // CB 2F 021C
        gbc.setState(0xc31e, 0xbe16, 0x2740, 0x56ec, 0xccd1, 0xb4a0, 0x1, 0x1);
        gbc.writeMem(0xc31e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xbe16, gbc.sp());
        EXPECT(0xc320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc31e));
        EXPECT(0x2f, gbc.readMem(0xc31f));
        // CB 2F 021D
        gbc.setState(0xc95e, 0x4790, 0xb7e0, 0x6161, 0x538c, 0x7946, 0x0, 0x0);
        gbc.writeMem(0xc95e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4790, gbc.sp());
        EXPECT(0xc960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc95e));
        EXPECT(0x2f, gbc.readMem(0xc95f));
        // CB 2F 021E
        gbc.setState(0x849c, 0x42ee, 0x9e80, 0x43d, 0xde31, 0x7659, 0x0, 0x1);
        gbc.writeMem(0x849c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x42ee, gbc.sp());
        EXPECT(0x849e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x849c));
        EXPECT(0x2f, gbc.readMem(0x849d));
        // CB 2F 021F
        gbc.setState(0xd0a6, 0x7070, 0x7b70, 0xcc95, 0xa961, 0x5232, 0x0, 0x1);
        gbc.writeMem(0xd0a6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7070, gbc.sp());
        EXPECT(0xd0a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0a6));
        EXPECT(0x2f, gbc.readMem(0xd0a7));
        // CB 2F 0220
        gbc.setState(0x8, 0xee1e, 0x4930, 0x5375, 0xd031, 0x5143, 0x0, 0x1);
        gbc.writeMem(0x8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xee1e, gbc.sp());
        EXPECT(0xa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0221
        gbc.setState(0x586c, 0x8516, 0xcda0, 0x10b7, 0x1894, 0xb664, 0x0, 0x0);
        gbc.writeMem(0x586c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8516, gbc.sp());
        EXPECT(0x586e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0222
        gbc.setState(0x3628, 0x269f, 0xd200, 0x219f, 0xd45f, 0x5e57, 0x0, 0x1);
        gbc.writeMem(0x3628, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x269f, gbc.sp());
        EXPECT(0x362a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0223
        gbc.setState(0x93a3, 0x5ae9, 0xe080, 0xd470, 0x7da0, 0xe0a0, 0x0, 0x1);
        gbc.writeMem(0x93a3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5ae9, gbc.sp());
        EXPECT(0x93a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a3));
        EXPECT(0x2f, gbc.readMem(0x93a4));
        // CB 2F 0224
        gbc.setState(0xb866, 0x5eb8, 0x2490, 0x4c9f, 0xc8f4, 0xa9ca, 0x1, 0x1);
        gbc.writeMem(0xb866, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5eb8, gbc.sp());
        EXPECT(0xb868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb866));
        EXPECT(0x2f, gbc.readMem(0xb867));
        // CB 2F 0225
        gbc.setState(0xa41a, 0xba6, 0xd1f0, 0x5c7a, 0xd51c, 0x7aef, 0x0, 0x1);
        gbc.writeMem(0xa41a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xba6, gbc.sp());
        EXPECT(0xa41c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa41a));
        EXPECT(0x2f, gbc.readMem(0xa41b));
        // CB 2F 0226
        gbc.setState(0x966d, 0xbcf8, 0x3590, 0xa926, 0x3b12, 0xc7c5, 0x0, 0x0);
        gbc.writeMem(0x966d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xbcf8, gbc.sp());
        EXPECT(0x966f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x966d));
        EXPECT(0x2f, gbc.readMem(0x966e));
        // CB 2F 0227
        gbc.setState(0xa474, 0x6663, 0xcc0, 0x3467, 0x93ff, 0x35e1, 0x1, 0x1);
        gbc.writeMem(0xa474, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6663, gbc.sp());
        EXPECT(0xa476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa474));
        EXPECT(0x2f, gbc.readMem(0xa475));
        // CB 2F 0228
        gbc.setState(0xa25c, 0xcfe9, 0xb120, 0x349e, 0xb81d, 0xbee, 0x0, 0x0);
        gbc.writeMem(0xa25c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xcfe9, gbc.sp());
        EXPECT(0xa25e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa25c));
        EXPECT(0x2f, gbc.readMem(0xa25d));
        // CB 2F 0229
        gbc.setState(0xdb04, 0x57f0, 0x4950, 0xc868, 0x5476, 0x318b, 0x1, 0x0);
        gbc.writeMem(0xdb04, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x57f0, gbc.sp());
        EXPECT(0xdb06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb04));
        EXPECT(0x2f, gbc.readMem(0xdb05));
        // CB 2F 022A
        gbc.setState(0x41c7, 0x2b4e, 0xce30, 0xb8ad, 0xe886, 0x780f, 0x1, 0x0);
        gbc.writeMem(0x41c7, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2b4e, gbc.sp());
        EXPECT(0x41c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 022B
        gbc.setState(0x6af8, 0xa4f8, 0xdb70, 0x8dd5, 0x7e34, 0x2e06, 0x1, 0x1);
        gbc.writeMem(0x6af8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa4f8, gbc.sp());
        EXPECT(0x6afa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 022C
        gbc.setState(0x4539, 0xce89, 0xce60, 0x2762, 0xc56, 0x600a, 0x0, 0x1);
        gbc.writeMem(0x4539, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xce89, gbc.sp());
        EXPECT(0x453b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 022D
        gbc.setState(0x8864, 0xcc52, 0xc6a0, 0xd9d5, 0xabe1, 0xb694, 0x1, 0x1);
        gbc.writeMem(0x8864, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcc52, gbc.sp());
        EXPECT(0x8866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8864));
        EXPECT(0x2f, gbc.readMem(0x8865));
        // CB 2F 022E
        gbc.setState(0x49f4, 0x4dd0, 0xbcb0, 0x662f, 0xc578, 0x91d5, 0x0, 0x1);
        gbc.writeMem(0x49f4, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4dd0, gbc.sp());
        EXPECT(0x49f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 022F
        gbc.setState(0xe1c1, 0x285f, 0x8e50, 0x9ef7, 0xb716, 0x4798, 0x1, 0x1);
        gbc.writeMem(0xe1c1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x285f, gbc.sp());
        EXPECT(0xe1c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c1));
        EXPECT(0x2f, gbc.readMem(0xe1c2));
        // CB 2F 0230
        gbc.setState(0xd66c, 0x40e1, 0x8500, 0x79c8, 0xe8c, 0x2138, 0x1, 0x0);
        gbc.writeMem(0xd66c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x40e1, gbc.sp());
        EXPECT(0xd66e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd66c));
        EXPECT(0x2f, gbc.readMem(0xd66d));
        // CB 2F 0232
        gbc.setState(0x3255, 0x1616, 0x1470, 0xab91, 0x97ef, 0xfe99, 0x0, 0x0);
        gbc.writeMem(0x3255, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1616, gbc.sp());
        EXPECT(0x3257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0233
        gbc.setState(0x2562, 0x9932, 0x2890, 0x51f1, 0x42cf, 0x52bd, 0x1, 0x1);
        gbc.writeMem(0x2562, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9932, gbc.sp());
        EXPECT(0x2564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0234
        gbc.setState(0x387b, 0xe21a, 0xe310, 0xad66, 0xa44b, 0x7b22, 0x1, 0x0);
        gbc.writeMem(0x387b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe21a, gbc.sp());
        EXPECT(0x387d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0235
        gbc.setState(0xa1d1, 0xa3e4, 0xc7b0, 0x9826, 0xe63c, 0xd53, 0x1, 0x0);
        gbc.writeMem(0xa1d1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa3e4, gbc.sp());
        EXPECT(0xa1d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d1));
        EXPECT(0x2f, gbc.readMem(0xa1d2));
        // CB 2F 0236
        gbc.setState(0x540d, 0x6398, 0xc010, 0x24c, 0xe76b, 0xa44d, 0x0, 0x0);
        gbc.writeMem(0x540d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6398, gbc.sp());
        EXPECT(0x540f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0238
        gbc.setState(0xd9e2, 0x7f89, 0x6230, 0x6c04, 0x4826, 0x2296, 0x1, 0x0);
        gbc.writeMem(0xd9e2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7f89, gbc.sp());
        EXPECT(0xd9e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e2));
        EXPECT(0x2f, gbc.readMem(0xd9e3));
        // CB 2F 0239
        gbc.setState(0x1778, 0xe400, 0xd1c0, 0x71ab, 0xfd5d, 0xcda7, 0x0, 0x1);
        gbc.writeMem(0x1778, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe400, gbc.sp());
        EXPECT(0x177a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 023A
        gbc.setState(0x762b, 0x3e03, 0x4110, 0x6861, 0xf16e, 0x9e8d, 0x1, 0x0);
        gbc.writeMem(0x762b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3e03, gbc.sp());
        EXPECT(0x762d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 023B
        gbc.setState(0x55e, 0xa4bb, 0xe760, 0x62a2, 0xfd53, 0x20d2, 0x0, 0x1);
        gbc.writeMem(0x55e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa4bb, gbc.sp());
        EXPECT(0x560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 023D
        gbc.setState(0xa500, 0x8a61, 0x64e0, 0x7000, 0xb633, 0x63f4, 0x1, 0x0);
        gbc.writeMem(0xa500, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8a61, gbc.sp());
        EXPECT(0xa502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa500));
        EXPECT(0x2f, gbc.readMem(0xa501));
        // CB 2F 023E
        gbc.setState(0x1d4c, 0xa546, 0xac90, 0x6d4, 0xde25, 0x65c7, 0x0, 0x1);
        gbc.writeMem(0x1d4c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa546, gbc.sp());
        EXPECT(0x1d4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 023F
        gbc.setState(0xb0a0, 0xf386, 0xf30, 0xe0b0, 0x8442, 0xaa98, 0x1, 0x0);
        gbc.writeMem(0xb0a0, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf386, gbc.sp());
        EXPECT(0xb0a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a0));
        EXPECT(0x2f, gbc.readMem(0xb0a1));
        // CB 2F 0240
        gbc.setState(0x9a11, 0x5398, 0xbbf0, 0xd25d, 0x5f79, 0x3fb8, 0x1, 0x0);
        gbc.writeMem(0x9a11, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5398, gbc.sp());
        EXPECT(0x9a13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a11));
        EXPECT(0x2f, gbc.readMem(0x9a12));
        // CB 2F 0241
        gbc.setState(0x6a3d, 0x67c4, 0x7810, 0xbb8e, 0xf58b, 0x7854, 0x0, 0x1);
        gbc.writeMem(0x6a3d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x67c4, gbc.sp());
        EXPECT(0x6a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0242
        gbc.setState(0xaee3, 0x9d6e, 0x2ae0, 0xe912, 0xc554, 0x6865, 0x0, 0x1);
        gbc.writeMem(0xaee3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9d6e, gbc.sp());
        EXPECT(0xaee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee3));
        EXPECT(0x2f, gbc.readMem(0xaee4));
        // CB 2F 0243
        gbc.setState(0x2887, 0x1c2b, 0xe10, 0x3b4, 0xb052, 0xc235, 0x1, 0x1);
        gbc.writeMem(0x2887, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1c2b, gbc.sp());
        EXPECT(0x2889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0244
        gbc.setState(0x73d7, 0xbffd, 0x1160, 0xa2f, 0xa316, 0xa5fc, 0x0, 0x0);
        gbc.writeMem(0x73d7, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbffd, gbc.sp());
        EXPECT(0x73d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0245
        gbc.setState(0x68ae, 0x7f80, 0x8b10, 0x3de0, 0xfd4, 0xa368, 0x1, 0x0);
        gbc.writeMem(0x68ae, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7f80, gbc.sp());
        EXPECT(0x68b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0246
        gbc.setState(0x7533, 0xd6ff, 0x3e70, 0xc3bb, 0x6ee4, 0x40d2, 0x0, 0x0);
        gbc.writeMem(0x7533, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd6ff, gbc.sp());
        EXPECT(0x7535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0247
        gbc.setState(0xe20b, 0x6f7d, 0x43d0, 0x88f, 0xa356, 0xf3ec, 0x0, 0x1);
        gbc.writeMem(0xe20b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6f7d, gbc.sp());
        EXPECT(0xe20d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe20b));
        EXPECT(0x2f, gbc.readMem(0xe20c));
        // CB 2F 0248
        gbc.setState(0x21a, 0xfdbf, 0xac0, 0xd954, 0xe43e, 0x81df, 0x0, 0x0);
        gbc.writeMem(0x21a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfdbf, gbc.sp());
        EXPECT(0x21c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0249
        gbc.setState(0x750a, 0x158, 0xb800, 0xed5a, 0x9124, 0x5ea8, 0x0, 0x0);
        gbc.writeMem(0x750a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x158, gbc.sp());
        EXPECT(0x750c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 024A
        gbc.setState(0x47a5, 0x4baa, 0xc0f0, 0xe83a, 0x1433, 0x9050, 0x0, 0x0);
        gbc.writeMem(0x47a5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4baa, gbc.sp());
        EXPECT(0x47a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 024B
        gbc.setState(0xd468, 0xe40, 0x7e30, 0x337, 0x6a6c, 0xd246, 0x0, 0x0);
        gbc.writeMem(0xd468, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe40, gbc.sp());
        EXPECT(0xd46a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd468));
        EXPECT(0x2f, gbc.readMem(0xd469));
        // CB 2F 024C
        gbc.setState(0x5558, 0xd451, 0x2210, 0x953c, 0xcd8c, 0x9fde, 0x0, 0x0);
        gbc.writeMem(0x5558, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd451, gbc.sp());
        EXPECT(0x555a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 024D
        gbc.setState(0x20ee, 0xaff, 0x3930, 0x43da, 0x5c85, 0xafde, 0x0, 0x1);
        gbc.writeMem(0x20ee, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xaff, gbc.sp());
        EXPECT(0x20f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 024E
        gbc.setState(0x4df8, 0xbc75, 0x6e90, 0x959, 0x8319, 0xcccb, 0x0, 0x0);
        gbc.writeMem(0x4df8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbc75, gbc.sp());
        EXPECT(0x4dfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 024F
        gbc.setState(0x143e, 0x4c19, 0x40f0, 0x34bb, 0x2b28, 0xfe9, 0x1, 0x0);
        gbc.writeMem(0x143e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4c19, gbc.sp());
        EXPECT(0x1440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0250
        gbc.setState(0xd3c8, 0x8c82, 0x7190, 0x9b77, 0x112b, 0x66ca, 0x1, 0x1);
        gbc.writeMem(0xd3c8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8c82, gbc.sp());
        EXPECT(0xd3ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c8));
        EXPECT(0x2f, gbc.readMem(0xd3c9));
        // CB 2F 0251
        gbc.setState(0xa351, 0xd374, 0xa2d0, 0xa28d, 0x72b8, 0xdb8a, 0x1, 0x1);
        gbc.writeMem(0xa351, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd374, gbc.sp());
        EXPECT(0xa353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa351));
        EXPECT(0x2f, gbc.readMem(0xa352));
        // CB 2F 0252
        gbc.setState(0x93ac, 0xb3c3, 0x3a70, 0x8f13, 0x6c97, 0x7760, 0x1, 0x0);
        gbc.writeMem(0x93ac, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb3c3, gbc.sp());
        EXPECT(0x93ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ac));
        EXPECT(0x2f, gbc.readMem(0x93ad));
        // CB 2F 0253
        gbc.setState(0x1698, 0x52be, 0xd9c0, 0xa775, 0x88da, 0x69a9, 0x0, 0x1);
        gbc.writeMem(0x1698, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x52be, gbc.sp());
        EXPECT(0x169a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0254
        gbc.setState(0x5eb0, 0xeafc, 0xb2e0, 0xc619, 0x6bc4, 0x6cc9, 0x1, 0x1);
        gbc.writeMem(0x5eb0, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xeafc, gbc.sp());
        EXPECT(0x5eb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0255
        gbc.setState(0x7a7c, 0xd251, 0xfe60, 0xa243, 0x5781, 0x6b4d, 0x0, 0x1);
        gbc.writeMem(0x7a7c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd251, gbc.sp());
        EXPECT(0x7a7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0256
        gbc.setState(0x5b13, 0x6337, 0xdfc0, 0x546d, 0xfb2d, 0x504c, 0x1, 0x0);
        gbc.writeMem(0x5b13, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6337, gbc.sp());
        EXPECT(0x5b15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0257
        gbc.setState(0xd664, 0xddcd, 0x85f0, 0xbd0, 0x9b0a, 0xbde8, 0x1, 0x1);
        gbc.writeMem(0xd664, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xddcd, gbc.sp());
        EXPECT(0xd666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd664));
        EXPECT(0x2f, gbc.readMem(0xd665));
        // CB 2F 0258
        gbc.setState(0xda9d, 0x6f3c, 0x3120, 0x3ffd, 0xbbb2, 0x23bd, 0x0, 0x1);
        gbc.writeMem(0xda9d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6f3c, gbc.sp());
        EXPECT(0xda9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda9d));
        EXPECT(0x2f, gbc.readMem(0xda9e));
        // CB 2F 0259
        gbc.setState(0x76b1, 0xa5e3, 0xe880, 0xb361, 0xc318, 0xe1aa, 0x0, 0x1);
        gbc.writeMem(0x76b1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa5e3, gbc.sp());
        EXPECT(0x76b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 025A
        gbc.setState(0xd81e, 0xed40, 0xf5d0, 0x97cb, 0x7345, 0x6de1, 0x1, 0x0);
        gbc.writeMem(0xd81e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xed40, gbc.sp());
        EXPECT(0xd820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd81e));
        EXPECT(0x2f, gbc.readMem(0xd81f));
        // CB 2F 025B
        gbc.setState(0xd65d, 0x5c78, 0x6c00, 0x59d3, 0xcc9, 0x4de, 0x1, 0x1);
        gbc.writeMem(0xd65d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5c78, gbc.sp());
        EXPECT(0xd65f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd65d));
        EXPECT(0x2f, gbc.readMem(0xd65e));
        // CB 2F 025C
        gbc.setState(0x4d31, 0x7f50, 0x230, 0x679, 0xec2e, 0x92df, 0x0, 0x1);
        gbc.writeMem(0x4d31, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7f50, gbc.sp());
        EXPECT(0x4d33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 025D
        gbc.setState(0x8bd5, 0xcbee, 0x2b0, 0x216, 0xe448, 0x16d8, 0x1, 0x1);
        gbc.writeMem(0x8bd5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcbee, gbc.sp());
        EXPECT(0x8bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd5));
        EXPECT(0x2f, gbc.readMem(0x8bd6));
        // CB 2F 025E
        gbc.setState(0x527, 0xb28e, 0x9fa0, 0x4395, 0xea90, 0x76ff, 0x1, 0x1);
        gbc.writeMem(0x527, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb28e, gbc.sp());
        EXPECT(0x529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 025F
        gbc.setState(0x9f94, 0x6596, 0xfa00, 0x4dec, 0xfef8, 0x6839, 0x0, 0x0);
        gbc.writeMem(0x9f94, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6596, gbc.sp());
        EXPECT(0x9f96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f94));
        EXPECT(0x2f, gbc.readMem(0x9f95));
        // CB 2F 0260
        gbc.setState(0xd7c6, 0x15e9, 0xe300, 0x5602, 0x330c, 0xeafe, 0x0, 0x1);
        gbc.writeMem(0xd7c6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x15e9, gbc.sp());
        EXPECT(0xd7c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c6));
        EXPECT(0x2f, gbc.readMem(0xd7c7));
        // CB 2F 0261
        gbc.setState(0x8990, 0x76c1, 0xf2c0, 0xbeb7, 0xa8a0, 0xa46a, 0x0, 0x0);
        gbc.writeMem(0x8990, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x76c1, gbc.sp());
        EXPECT(0x8992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8990));
        EXPECT(0x2f, gbc.readMem(0x8991));
        // CB 2F 0262
        gbc.setState(0xea78, 0xab8c, 0x2b10, 0xea33, 0x947a, 0xa4d8, 0x1, 0x1);
        gbc.writeMem(0xea78, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xab8c, gbc.sp());
        EXPECT(0xea7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea78));
        EXPECT(0x2f, gbc.readMem(0xea79));
        // CB 2F 0263
        gbc.setState(0xc043, 0x8cbf, 0x4340, 0xef9d, 0x1d30, 0xe9c1, 0x0, 0x1);
        gbc.writeMem(0xc043, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8cbf, gbc.sp());
        EXPECT(0xc045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc043));
        EXPECT(0x2f, gbc.readMem(0xc044));
        // CB 2F 0264
        gbc.setState(0x6312, 0xb1d3, 0x82a0, 0xd036, 0x65f8, 0xd85c, 0x1, 0x0);
        gbc.writeMem(0x6312, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb1d3, gbc.sp());
        EXPECT(0x6314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0265
        gbc.setState(0xdecf, 0xd49e, 0x5930, 0x685f, 0xef7d, 0x6f60, 0x0, 0x1);
        gbc.writeMem(0xdecf, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd49e, gbc.sp());
        EXPECT(0xded1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdecf));
        EXPECT(0x2f, gbc.readMem(0xded0));
        // CB 2F 0266
        gbc.setState(0x8c57, 0x6748, 0x9090, 0x8e3a, 0x59c0, 0x10d8, 0x0, 0x1);
        gbc.writeMem(0x8c57, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6748, gbc.sp());
        EXPECT(0x8c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c57));
        EXPECT(0x2f, gbc.readMem(0x8c58));
        // CB 2F 0267
        gbc.setState(0xc931, 0x74c4, 0x9b90, 0x9f82, 0xd951, 0xf60f, 0x1, 0x0);
        gbc.writeMem(0xc931, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x74c4, gbc.sp());
        EXPECT(0xc933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc931));
        EXPECT(0x2f, gbc.readMem(0xc932));
        // CB 2F 0268
        gbc.setState(0x1413, 0xb44f, 0x6c00, 0xdb3d, 0xa20b, 0xff7d, 0x1, 0x0);
        gbc.writeMem(0x1413, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb44f, gbc.sp());
        EXPECT(0x1415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0269
        gbc.setState(0xbfdc, 0xdf75, 0x8370, 0x73f9, 0x55ae, 0xb189, 0x1, 0x1);
        gbc.writeMem(0xbfdc, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xdf75, gbc.sp());
        EXPECT(0xbfde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfdc));
        EXPECT(0x2f, gbc.readMem(0xbfdd));
        // CB 2F 026A
        gbc.setState(0xc117, 0x2b22, 0x6630, 0xd228, 0xf37e, 0x343f, 0x1, 0x1);
        gbc.writeMem(0xc117, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2b22, gbc.sp());
        EXPECT(0xc119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc117));
        EXPECT(0x2f, gbc.readMem(0xc118));
        // CB 2F 026B
        gbc.setState(0xb5a, 0xeecf, 0xa2c0, 0x56dc, 0x7ff9, 0x8944, 0x1, 0x1);
        gbc.writeMem(0xb5a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xeecf, gbc.sp());
        EXPECT(0xb5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 026C
        gbc.setState(0x2840, 0xd2d7, 0x4620, 0xda44, 0x3bfb, 0x400b, 0x1, 0x0);
        gbc.writeMem(0x2840, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd2d7, gbc.sp());
        EXPECT(0x2842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 026D
        gbc.setState(0xb065, 0xdc07, 0xaaf0, 0xeb1d, 0x424d, 0x83e7, 0x1, 0x1);
        gbc.writeMem(0xb065, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xdc07, gbc.sp());
        EXPECT(0xb067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb065));
        EXPECT(0x2f, gbc.readMem(0xb066));
        // CB 2F 026E
        gbc.setState(0xa8c, 0x3961, 0x5780, 0xc616, 0xa88, 0xa392, 0x1, 0x0);
        gbc.writeMem(0xa8c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3961, gbc.sp());
        EXPECT(0xa8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0271
        gbc.setState(0xbba4, 0xbff7, 0x7960, 0x44b3, 0x9374, 0x3f92, 0x0, 0x1);
        gbc.writeMem(0xbba4, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbff7, gbc.sp());
        EXPECT(0xbba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbba4));
        EXPECT(0x2f, gbc.readMem(0xbba5));
        // CB 2F 0272
        gbc.setState(0x4f28, 0x60f5, 0xaad0, 0xd3f1, 0xa018, 0x7b8b, 0x1, 0x1);
        gbc.writeMem(0x4f28, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x60f5, gbc.sp());
        EXPECT(0x4f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0273
        gbc.setState(0x1e79, 0xba7, 0x9a00, 0x1eb3, 0xd131, 0xe500, 0x1, 0x0);
        gbc.writeMem(0x1e79, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xba7, gbc.sp());
        EXPECT(0x1e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0274
        gbc.setState(0xae8b, 0xc49, 0xd980, 0x81a6, 0x29b4, 0xc099, 0x1, 0x1);
        gbc.writeMem(0xae8b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc49, gbc.sp());
        EXPECT(0xae8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae8b));
        EXPECT(0x2f, gbc.readMem(0xae8c));
        // CB 2F 0276
        gbc.setState(0x4769, 0xbbdd, 0xc820, 0x7f13, 0x4d06, 0xa79d, 0x1, 0x0);
        gbc.writeMem(0x4769, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xbbdd, gbc.sp());
        EXPECT(0x476b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0277
        gbc.setState(0x81ec, 0xaa95, 0x7400, 0xc7aa, 0x78da, 0xee0e, 0x1, 0x0);
        gbc.writeMem(0x81ec, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xaa95, gbc.sp());
        EXPECT(0x81ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ec));
        EXPECT(0x2f, gbc.readMem(0x81ed));
        // CB 2F 0278
        gbc.setState(0x8539, 0x584f, 0x38d0, 0x42c0, 0x405c, 0x717c, 0x0, 0x1);
        gbc.writeMem(0x8539, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x584f, gbc.sp());
        EXPECT(0x853b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8539));
        EXPECT(0x2f, gbc.readMem(0x853a));
        // CB 2F 0279
        gbc.setState(0xb0a0, 0x9d3b, 0x5660, 0xd873, 0x7bb9, 0x6230, 0x1, 0x1);
        gbc.writeMem(0xb0a0, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9d3b, gbc.sp());
        EXPECT(0xb0a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a0));
        EXPECT(0x2f, gbc.readMem(0xb0a1));
        // CB 2F 027A
        gbc.setState(0xe6bd, 0xc037, 0x1b00, 0xbaa6, 0x5f15, 0xb412, 0x0, 0x0);
        gbc.writeMem(0xe6bd, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc037, gbc.sp());
        EXPECT(0xe6bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6bd));
        EXPECT(0x2f, gbc.readMem(0xe6be));
        // CB 2F 027B
        gbc.setState(0x6cd5, 0xcd1c, 0x7bb0, 0x1329, 0x686a, 0x73c7, 0x1, 0x1);
        gbc.writeMem(0x6cd5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xcd1c, gbc.sp());
        EXPECT(0x6cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 027C
        gbc.setState(0x5c90, 0x4877, 0x2270, 0xc053, 0x35d1, 0xc3f0, 0x0, 0x0);
        gbc.writeMem(0x5c90, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4877, gbc.sp());
        EXPECT(0x5c92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 027D
        gbc.setState(0x42ad, 0x582d, 0x3d0, 0x14f, 0x659b, 0x315, 0x1, 0x1);
        gbc.writeMem(0x42ad, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x582d, gbc.sp());
        EXPECT(0x42af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 027E
        gbc.setState(0x4761, 0x9daa, 0x9bb0, 0xd8f6, 0x1904, 0xa273, 0x0, 0x1);
        gbc.writeMem(0x4761, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9daa, gbc.sp());
        EXPECT(0x4763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 027F
        gbc.setState(0x338b, 0x77ca, 0xcf60, 0xf763, 0x21a6, 0x1010, 0x1, 0x1);
        gbc.writeMem(0x338b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x77ca, gbc.sp());
        EXPECT(0x338d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0282
        gbc.setState(0xcd8a, 0x1411, 0x6740, 0x1d68, 0x8586, 0xc7f0, 0x0, 0x1);
        gbc.writeMem(0xcd8a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1411, gbc.sp());
        EXPECT(0xcd8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd8a));
        EXPECT(0x2f, gbc.readMem(0xcd8b));
        // CB 2F 0283
        gbc.setState(0xb7ae, 0xa2b7, 0x63a0, 0xa62f, 0x3f05, 0xf2d8, 0x1, 0x0);
        gbc.writeMem(0xb7ae, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa2b7, gbc.sp());
        EXPECT(0xb7b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ae));
        EXPECT(0x2f, gbc.readMem(0xb7af));
        // CB 2F 0284
        gbc.setState(0x3a84, 0x6168, 0x4bc0, 0x8ae4, 0xa356, 0xff71, 0x1, 0x0);
        gbc.writeMem(0x3a84, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6168, gbc.sp());
        EXPECT(0x3a86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0285
        gbc.setState(0x4052, 0x9c3e, 0x81c0, 0x4840, 0x47c9, 0x76c7, 0x0, 0x0);
        gbc.writeMem(0x4052, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9c3e, gbc.sp());
        EXPECT(0x4054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0286
        gbc.setState(0x3aaf, 0x120d, 0x4620, 0xf7f2, 0x6c64, 0x8dc6, 0x0, 0x0);
        gbc.writeMem(0x3aaf, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x120d, gbc.sp());
        EXPECT(0x3ab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0287
        gbc.setState(0x3b35, 0xc45a, 0x69a0, 0x18da, 0x665b, 0xea6f, 0x1, 0x0);
        gbc.writeMem(0x3b35, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc45a, gbc.sp());
        EXPECT(0x3b37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0289
        gbc.setState(0x1794, 0xca31, 0x3710, 0xaf97, 0xa8a8, 0x317b, 0x0, 0x0);
        gbc.writeMem(0x1794, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xca31, gbc.sp());
        EXPECT(0x1796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 028A
        gbc.setState(0x1f64, 0xd313, 0x77b0, 0x329, 0xdce8, 0xf928, 0x1, 0x1);
        gbc.writeMem(0x1f64, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd313, gbc.sp());
        EXPECT(0x1f66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 028B
        gbc.setState(0xea3f, 0x5fd2, 0x2140, 0xf9f7, 0x8774, 0x83c9, 0x1, 0x0);
        gbc.writeMem(0xea3f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5fd2, gbc.sp());
        EXPECT(0xea41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea3f));
        EXPECT(0x2f, gbc.readMem(0xea40));
        // CB 2F 028C
        gbc.setState(0x4726, 0xe6, 0x8640, 0xabff, 0xb2c8, 0xc040, 0x0, 0x0);
        gbc.writeMem(0x4726, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe6, gbc.sp());
        EXPECT(0x4728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 028D
        gbc.setState(0x7721, 0x9b80, 0x2c20, 0xeea2, 0xb184, 0x708e, 0x1, 0x1);
        gbc.writeMem(0x7721, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9b80, gbc.sp());
        EXPECT(0x7723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 028E
        gbc.setState(0x15e1, 0xf7a8, 0x95b0, 0xf61b, 0xcb76, 0x91a5, 0x1, 0x1);
        gbc.writeMem(0x15e1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf7a8, gbc.sp());
        EXPECT(0x15e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 028F
        gbc.setState(0x7797, 0x3eea, 0x7f60, 0xb644, 0x7e9b, 0x102c, 0x1, 0x1);
        gbc.writeMem(0x7797, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3eea, gbc.sp());
        EXPECT(0x7799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0290
        gbc.setState(0xbe9b, 0x9596, 0xe960, 0xe793, 0x3e04, 0xcdf7, 0x1, 0x1);
        gbc.writeMem(0xbe9b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9596, gbc.sp());
        EXPECT(0xbe9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe9b));
        EXPECT(0x2f, gbc.readMem(0xbe9c));
        // CB 2F 0291
        gbc.setState(0xa126, 0xcf17, 0x34c0, 0xcb8e, 0xd407, 0x43f5, 0x0, 0x0);
        gbc.writeMem(0xa126, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcf17, gbc.sp());
        EXPECT(0xa128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa126));
        EXPECT(0x2f, gbc.readMem(0xa127));
        // CB 2F 0292
        gbc.setState(0xc47c, 0x5617, 0x8450, 0xa27f, 0xd00f, 0x620b, 0x0, 0x0);
        gbc.writeMem(0xc47c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5617, gbc.sp());
        EXPECT(0xc47e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc47c));
        EXPECT(0x2f, gbc.readMem(0xc47d));
        // CB 2F 0293
        gbc.setState(0x9fad, 0x6ac5, 0x4910, 0x9781, 0x7edf, 0xb94e, 0x1, 0x1);
        gbc.writeMem(0x9fad, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6ac5, gbc.sp());
        EXPECT(0x9faf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fad));
        EXPECT(0x2f, gbc.readMem(0x9fae));
        // CB 2F 0294
        gbc.setState(0x7044, 0x20eb, 0xb370, 0xd43f, 0x5afd, 0xbc72, 0x1, 0x1);
        gbc.writeMem(0x7044, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x20eb, gbc.sp());
        EXPECT(0x7046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0295
        gbc.setState(0x1db5, 0xf118, 0x3b40, 0x1f28, 0xc6ce, 0xcdfd, 0x1, 0x1);
        gbc.writeMem(0x1db5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf118, gbc.sp());
        EXPECT(0x1db7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0296
        gbc.setState(0xb79f, 0xef20, 0x17d0, 0x3708, 0x6d79, 0x4c98, 0x0, 0x0);
        gbc.writeMem(0xb79f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xef20, gbc.sp());
        EXPECT(0xb7a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb79f));
        EXPECT(0x2f, gbc.readMem(0xb7a0));
        // CB 2F 0298
        gbc.setState(0x94cd, 0xb3c5, 0x88e0, 0xa494, 0xade9, 0xda20, 0x0, 0x0);
        gbc.writeMem(0x94cd, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb3c5, gbc.sp());
        EXPECT(0x94cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94cd));
        EXPECT(0x2f, gbc.readMem(0x94ce));
        // CB 2F 0299
        gbc.setState(0xd15b, 0x8adc, 0x6a60, 0x3056, 0x92af, 0x3974, 0x1, 0x0);
        gbc.writeMem(0xd15b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8adc, gbc.sp());
        EXPECT(0xd15d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd15b));
        EXPECT(0x2f, gbc.readMem(0xd15c));
        // CB 2F 029A
        gbc.setState(0x3ae, 0x1a1e, 0x4b40, 0x9c5c, 0xa9ec, 0xa3f0, 0x0, 0x0);
        gbc.writeMem(0x3ae, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1a1e, gbc.sp());
        EXPECT(0x3b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 029B
        gbc.setState(0x9aab, 0x1d94, 0xc990, 0xec65, 0x4626, 0x8a60, 0x0, 0x1);
        gbc.writeMem(0x9aab, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1d94, gbc.sp());
        EXPECT(0x9aad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aab));
        EXPECT(0x2f, gbc.readMem(0x9aac));
        // CB 2F 029C
        gbc.setState(0x1a3d, 0x7322, 0x1900, 0x8436, 0x8e4d, 0xdd6e, 0x1, 0x1);
        gbc.writeMem(0x1a3d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7322, gbc.sp());
        EXPECT(0x1a3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 029D
        gbc.setState(0x49f2, 0xd343, 0xf2c0, 0x502d, 0x1ab9, 0x3d83, 0x1, 0x1);
        gbc.writeMem(0x49f2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd343, gbc.sp());
        EXPECT(0x49f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 029E
        gbc.setState(0x7756, 0x9cda, 0xa750, 0x4b1d, 0x821a, 0x8da3, 0x1, 0x1);
        gbc.writeMem(0x7756, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9cda, gbc.sp());
        EXPECT(0x7758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 029F
        gbc.setState(0x4b01, 0x3e3f, 0x6b00, 0x3bdb, 0x6cee, 0x6373, 0x1, 0x1);
        gbc.writeMem(0x4b01, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3e3f, gbc.sp());
        EXPECT(0x4b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 02A0
        gbc.setState(0x9349, 0x728, 0xe660, 0x60ac, 0xcf, 0xa10b, 0x0, 0x1);
        gbc.writeMem(0x9349, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x728, gbc.sp());
        EXPECT(0x934b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9349));
        EXPECT(0x2f, gbc.readMem(0x934a));
        // CB 2F 02A1
        gbc.setState(0xa592, 0x399, 0x38d0, 0x76ee, 0x50b5, 0x8027, 0x0, 0x0);
        gbc.writeMem(0xa592, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x399, gbc.sp());
        EXPECT(0xa594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa592));
        EXPECT(0x2f, gbc.readMem(0xa593));
        // CB 2F 02A2
        gbc.setState(0x905c, 0x545, 0x1510, 0x6ad7, 0x5a03, 0x2380, 0x0, 0x0);
        gbc.writeMem(0x905c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x545, gbc.sp());
        EXPECT(0x905e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x905c));
        EXPECT(0x2f, gbc.readMem(0x905d));
        // CB 2F 02A3
        gbc.setState(0xcede, 0xdfac, 0x9f50, 0xb5f4, 0xb4bd, 0x678, 0x0, 0x1);
        gbc.writeMem(0xcede, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdfac, gbc.sp());
        EXPECT(0xcee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcede));
        EXPECT(0x2f, gbc.readMem(0xcedf));
        // CB 2F 02A4
        gbc.setState(0xef33, 0xcee9, 0xf420, 0xb02d, 0xbc22, 0x7c, 0x0, 0x0);
        gbc.writeMem(0xef33, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xcee9, gbc.sp());
        EXPECT(0xef35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef33));
        EXPECT(0x2f, gbc.readMem(0xef34));
        // CB 2F 02A5
        gbc.setState(0x7736, 0x843c, 0xf9f0, 0x82dd, 0x11df, 0x7cba, 0x1, 0x0);
        gbc.writeMem(0x7736, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x843c, gbc.sp());
        EXPECT(0x7738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 02A6
        gbc.setState(0x4a52, 0x3fd5, 0x9c70, 0x1f4, 0xba9d, 0xdae, 0x1, 0x0);
        gbc.writeMem(0x4a52, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3fd5, gbc.sp());
        EXPECT(0x4a54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02A7
        gbc.setState(0xb21a, 0x2d4e, 0xf300, 0xd599, 0x5ee2, 0xd737, 0x0, 0x0);
        gbc.writeMem(0xb21a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2d4e, gbc.sp());
        EXPECT(0xb21c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb21a));
        EXPECT(0x2f, gbc.readMem(0xb21b));
        // CB 2F 02A8
        gbc.setState(0x6a5d, 0xeeb1, 0x6ed0, 0xef2, 0x3653, 0x2a16, 0x1, 0x1);
        gbc.writeMem(0x6a5d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xeeb1, gbc.sp());
        EXPECT(0x6a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02A9
        gbc.setState(0x676b, 0xed59, 0x90f0, 0xd088, 0x39ed, 0xd9b6, 0x1, 0x1);
        gbc.writeMem(0x676b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xed59, gbc.sp());
        EXPECT(0x676d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02AA
        gbc.setState(0xd1eb, 0xa2ad, 0xfe60, 0x68d, 0x42ea, 0x656b, 0x0, 0x0);
        gbc.writeMem(0xd1eb, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa2ad, gbc.sp());
        EXPECT(0xd1ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1eb));
        EXPECT(0x2f, gbc.readMem(0xd1ec));
        // CB 2F 02AB
        gbc.setState(0x42a1, 0xd57a, 0x3050, 0xf5e0, 0x9e84, 0xbf26, 0x1, 0x0);
        gbc.writeMem(0x42a1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd57a, gbc.sp());
        EXPECT(0x42a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02AC
        gbc.setState(0xbef2, 0x79b5, 0x46d0, 0xe19a, 0xab27, 0xab8b, 0x1, 0x0);
        gbc.writeMem(0xbef2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x79b5, gbc.sp());
        EXPECT(0xbef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbef2));
        EXPECT(0x2f, gbc.readMem(0xbef3));
        // CB 2F 02AD
        gbc.setState(0x96e7, 0x1b2, 0x4b20, 0xd594, 0x6bf7, 0xbda0, 0x1, 0x0);
        gbc.writeMem(0x96e7, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1b2, gbc.sp());
        EXPECT(0x96e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e7));
        EXPECT(0x2f, gbc.readMem(0x96e8));
        // CB 2F 02AE
        gbc.setState(0x23df, 0xcbcc, 0xd10, 0xafb6, 0x9235, 0x2d4c, 0x1, 0x0);
        gbc.writeMem(0x23df, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xcbcc, gbc.sp());
        EXPECT(0x23e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 02AF
        gbc.setState(0xc656, 0x54c6, 0x28f0, 0xe5e2, 0x7431, 0x1b20, 0x0, 0x0);
        gbc.writeMem(0xc656, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x54c6, gbc.sp());
        EXPECT(0xc658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc656));
        EXPECT(0x2f, gbc.readMem(0xc657));
        // CB 2F 02B0
        gbc.setState(0x2b5e, 0x7609, 0xeb00, 0x1315, 0x5e9a, 0xc47, 0x1, 0x0);
        gbc.writeMem(0x2b5e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7609, gbc.sp());
        EXPECT(0x2b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 02B1
        gbc.setState(0x5f8f, 0x5ca1, 0x8cc0, 0x4743, 0x822d, 0xbc73, 0x1, 0x0);
        gbc.writeMem(0x5f8f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5ca1, gbc.sp());
        EXPECT(0x5f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02B2
        gbc.setState(0xa398, 0x61f0, 0xba10, 0x7304, 0x1de7, 0x1bdd, 0x1, 0x1);
        gbc.writeMem(0xa398, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x61f0, gbc.sp());
        EXPECT(0xa39a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa398));
        EXPECT(0x2f, gbc.readMem(0xa399));
        // CB 2F 02B3
        gbc.setState(0x75f9, 0x83ac, 0x1260, 0x34f5, 0xc5f9, 0x8bc7, 0x0, 0x0);
        gbc.writeMem(0x75f9, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x83ac, gbc.sp());
        EXPECT(0x75fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02B4
        gbc.setState(0xb090, 0x5c51, 0xdb0, 0x80cf, 0xdb5e, 0x112c, 0x0, 0x0);
        gbc.writeMem(0xb090, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5c51, gbc.sp());
        EXPECT(0xb092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb090));
        EXPECT(0x2f, gbc.readMem(0xb091));
        // CB 2F 02B5
        gbc.setState(0x2ae6, 0xedcd, 0x5880, 0x9d8b, 0xfe1f, 0x4155, 0x0, 0x1);
        gbc.writeMem(0x2ae6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xedcd, gbc.sp());
        EXPECT(0x2ae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02B6
        gbc.setState(0x5bc5, 0x2853, 0xa330, 0x5981, 0x6bb8, 0x6b78, 0x1, 0x0);
        gbc.writeMem(0x5bc5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2853, gbc.sp());
        EXPECT(0x5bc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 02B7
        gbc.setState(0x102c, 0x897f, 0x6a40, 0xb1f8, 0x5c37, 0x1132, 0x0, 0x0);
        gbc.writeMem(0x102c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x897f, gbc.sp());
        EXPECT(0x102e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02B8
        gbc.setState(0x2d3, 0xc285, 0x6e20, 0xe871, 0x360e, 0x82b3, 0x1, 0x0);
        gbc.writeMem(0x2d3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc285, gbc.sp());
        EXPECT(0x2d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02B9
        gbc.setState(0x20af, 0xf6d1, 0x84a0, 0xcab, 0x95a2, 0xd8d7, 0x1, 0x0);
        gbc.writeMem(0x20af, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf6d1, gbc.sp());
        EXPECT(0x20b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02BA
        gbc.setState(0x4b7e, 0x89b9, 0x6a00, 0x881a, 0xd1f9, 0xbff6, 0x0, 0x0);
        gbc.writeMem(0x4b7e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x89b9, gbc.sp());
        EXPECT(0x4b80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02BB
        gbc.setState(0x53bd, 0x2bde, 0x6120, 0x271e, 0x9520, 0x65af, 0x1, 0x1);
        gbc.writeMem(0x53bd, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2bde, gbc.sp());
        EXPECT(0x53bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 02BC
        gbc.setState(0x7913, 0xb487, 0xf3d0, 0xf7ee, 0x6066, 0x9496, 0x0, 0x0);
        gbc.writeMem(0x7913, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb487, gbc.sp());
        EXPECT(0x7915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 02BD
        gbc.setState(0xa939, 0xb537, 0x5b70, 0xeae6, 0x1758, 0x472a, 0x0, 0x1);
        gbc.writeMem(0xa939, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb537, gbc.sp());
        EXPECT(0xa93b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa939));
        EXPECT(0x2f, gbc.readMem(0xa93a));
        // CB 2F 02BE
        gbc.setState(0x1fa9, 0x5575, 0xb80, 0x7745, 0xc0cc, 0x919b, 0x0, 0x1);
        gbc.writeMem(0x1fa9, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5575, gbc.sp());
        EXPECT(0x1fab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 02BF
        gbc.setState(0xd130, 0x7741, 0x7c80, 0x21d4, 0x3348, 0x4b26, 0x0, 0x0);
        gbc.writeMem(0xd130, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7741, gbc.sp());
        EXPECT(0xd132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd130));
        EXPECT(0x2f, gbc.readMem(0xd131));
        // CB 2F 02C0
        gbc.setState(0xaceb, 0xa636, 0xc990, 0xcfd0, 0x5dd2, 0xfb18, 0x1, 0x0);
        gbc.writeMem(0xaceb, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa636, gbc.sp());
        EXPECT(0xaced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaceb));
        EXPECT(0x2f, gbc.readMem(0xacec));
        // CB 2F 02C2
        gbc.setState(0x58bf, 0x1c91, 0xc6d0, 0x63ab, 0x814b, 0x9a6a, 0x0, 0x0);
        gbc.writeMem(0x58bf, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1c91, gbc.sp());
        EXPECT(0x58c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02C3
        gbc.setState(0xef70, 0xee75, 0x9cf0, 0x1fb3, 0xaa5b, 0xd29b, 0x1, 0x1);
        gbc.writeMem(0xef70, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xee75, gbc.sp());
        EXPECT(0xef72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef70));
        EXPECT(0x2f, gbc.readMem(0xef71));
        // CB 2F 02C4
        gbc.setState(0x5e48, 0xd9a6, 0x4990, 0x409c, 0xd413, 0x7e7d, 0x0, 0x0);
        gbc.writeMem(0x5e48, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd9a6, gbc.sp());
        EXPECT(0x5e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 02C5
        gbc.setState(0x973a, 0xe6dd, 0x9770, 0x78b9, 0x1b98, 0xbb9c, 0x1, 0x0);
        gbc.writeMem(0x973a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe6dd, gbc.sp());
        EXPECT(0x973c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x973a));
        EXPECT(0x2f, gbc.readMem(0x973b));
        // CB 2F 02C6
        gbc.setState(0x5c1c, 0xbaab, 0x4ca0, 0xbf12, 0xc77c, 0x4d1e, 0x1, 0x0);
        gbc.writeMem(0x5c1c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xbaab, gbc.sp());
        EXPECT(0x5c1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02C7
        gbc.setState(0x6476, 0x9317, 0x1c0, 0x3d9d, 0x5829, 0x69e, 0x0, 0x1);
        gbc.writeMem(0x6476, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9317, gbc.sp());
        EXPECT(0x6478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 02C8
        gbc.setState(0x8086, 0x9bf5, 0x5130, 0x36e4, 0x83ad, 0x20e6, 0x1, 0x0);
        gbc.writeMem(0x8086, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9bf5, gbc.sp());
        EXPECT(0x8088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8086));
        EXPECT(0x2f, gbc.readMem(0x8087));
        // CB 2F 02C9
        gbc.setState(0x80f9, 0xa0f2, 0xa2f0, 0xe784, 0x9b37, 0xdc8b, 0x1, 0x1);
        gbc.writeMem(0x80f9, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa0f2, gbc.sp());
        EXPECT(0x80fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80f9));
        EXPECT(0x2f, gbc.readMem(0x80fa));
        // CB 2F 02CA
        gbc.setState(0xd215, 0x4a3e, 0xa770, 0x1c84, 0xd852, 0xe3a1, 0x0, 0x0);
        gbc.writeMem(0xd215, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4a3e, gbc.sp());
        EXPECT(0xd217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd215));
        EXPECT(0x2f, gbc.readMem(0xd216));
        // CB 2F 02CB
        gbc.setState(0xc6b9, 0x2412, 0xb110, 0xf9b0, 0x89e9, 0x6059, 0x1, 0x1);
        gbc.writeMem(0xc6b9, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2412, gbc.sp());
        EXPECT(0xc6bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6b9));
        EXPECT(0x2f, gbc.readMem(0xc6ba));
        // CB 2F 02CC
        gbc.setState(0x3e14, 0xface, 0x2420, 0x89ae, 0x6414, 0x5065, 0x0, 0x0);
        gbc.writeMem(0x3e14, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xface, gbc.sp());
        EXPECT(0x3e16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02CD
        gbc.setState(0x6b96, 0x11fa, 0xd410, 0xb47b, 0x2370, 0xf7e4, 0x0, 0x1);
        gbc.writeMem(0x6b96, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x11fa, gbc.sp());
        EXPECT(0x6b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02CE
        gbc.setState(0x6b59, 0xd20d, 0x500, 0x9825, 0x175a, 0xd362, 0x1, 0x1);
        gbc.writeMem(0x6b59, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd20d, gbc.sp());
        EXPECT(0x6b5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 02CF
        gbc.setState(0x58e6, 0x27dc, 0xf5c0, 0x70cd, 0x1de8, 0xa954, 0x1, 0x1);
        gbc.writeMem(0x58e6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x27dc, gbc.sp());
        EXPECT(0x58e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 02D0
        gbc.setState(0x9fc6, 0x5a67, 0x87f0, 0xc54d, 0x4e08, 0xd763, 0x1, 0x0);
        gbc.writeMem(0x9fc6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5a67, gbc.sp());
        EXPECT(0x9fc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc6));
        EXPECT(0x2f, gbc.readMem(0x9fc7));
        // CB 2F 02D1
        gbc.setState(0x57be, 0xada7, 0x2950, 0x3c54, 0xc3e8, 0xa669, 0x0, 0x1);
        gbc.writeMem(0x57be, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xada7, gbc.sp());
        EXPECT(0x57c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 02D2
        gbc.setState(0x1ba0, 0x8cc8, 0x6430, 0xfa8, 0x5f6e, 0x9ebb, 0x0, 0x1);
        gbc.writeMem(0x1ba0, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8cc8, gbc.sp());
        EXPECT(0x1ba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02D3
        gbc.setState(0x29a4, 0xca2, 0x5e30, 0x39be, 0x1c8, 0xa770, 0x0, 0x0);
        gbc.writeMem(0x29a4, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xca2, gbc.sp());
        EXPECT(0x29a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02D4
        gbc.setState(0x863f, 0x4fdd, 0xccf0, 0x2eb, 0x6092, 0x8ab, 0x0, 0x0);
        gbc.writeMem(0x863f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4fdd, gbc.sp());
        EXPECT(0x8641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x863f));
        EXPECT(0x2f, gbc.readMem(0x8640));
        // CB 2F 02D5
        gbc.setState(0x763c, 0xd2f4, 0x6420, 0x49c4, 0xe7a9, 0x9e40, 0x1, 0x1);
        gbc.writeMem(0x763c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd2f4, gbc.sp());
        EXPECT(0x763e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02D6
        gbc.setState(0xa543, 0x4628, 0x8c80, 0x7141, 0x6118, 0x4f76, 0x0, 0x0);
        gbc.writeMem(0xa543, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4628, gbc.sp());
        EXPECT(0xa545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa543));
        EXPECT(0x2f, gbc.readMem(0xa544));
        // CB 2F 02D7
        gbc.setState(0x4b44, 0x3961, 0x4ac0, 0x41b4, 0x4450, 0x4544, 0x0, 0x0);
        gbc.writeMem(0x4b44, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3961, gbc.sp());
        EXPECT(0x4b46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02D8
        gbc.setState(0xace4, 0x5282, 0xe420, 0x92f3, 0xd9fd, 0x6f5d, 0x0, 0x0);
        gbc.writeMem(0xace4, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5282, gbc.sp());
        EXPECT(0xace6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xace4));
        EXPECT(0x2f, gbc.readMem(0xace5));
        // CB 2F 02D9
        gbc.setState(0xb9c1, 0xec6b, 0x9140, 0x1118, 0x6ee7, 0xd7c7, 0x0, 0x1);
        gbc.writeMem(0xb9c1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xec6b, gbc.sp());
        EXPECT(0xb9c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9c1));
        EXPECT(0x2f, gbc.readMem(0xb9c2));
        // CB 2F 02DA
        gbc.setState(0x1507, 0x6258, 0x3110, 0xbb9, 0xd4ed, 0xbe54, 0x1, 0x0);
        gbc.writeMem(0x1507, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6258, gbc.sp());
        EXPECT(0x1509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 02DB
        gbc.setState(0xde67, 0x73c2, 0xb630, 0x56c5, 0xf65e, 0x122a, 0x0, 0x1);
        gbc.writeMem(0xde67, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x73c2, gbc.sp());
        EXPECT(0xde69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde67));
        EXPECT(0x2f, gbc.readMem(0xde68));
        // CB 2F 02DC
        gbc.setState(0xece7, 0x951e, 0x6e90, 0x49a6, 0xb3d, 0xf4dc, 0x0, 0x1);
        gbc.writeMem(0xece7, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x951e, gbc.sp());
        EXPECT(0xece9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xece7));
        EXPECT(0x2f, gbc.readMem(0xece8));
        // CB 2F 02DD
        gbc.setState(0xbdb7, 0x4b8, 0x8a0, 0x9489, 0x7bf6, 0x6740, 0x1, 0x1);
        gbc.writeMem(0xbdb7, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4b8, gbc.sp());
        EXPECT(0xbdb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb7));
        EXPECT(0x2f, gbc.readMem(0xbdb8));
        // CB 2F 02DE
        gbc.setState(0x6fc, 0xf8c5, 0x8ed0, 0x24b0, 0x7c8c, 0xc60d, 0x1, 0x1);
        gbc.writeMem(0x6fc, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf8c5, gbc.sp());
        EXPECT(0x6fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02DF
        gbc.setState(0x9628, 0xdb25, 0x9ce0, 0xa35, 0xb300, 0x7369, 0x0, 0x1);
        gbc.writeMem(0x9628, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdb25, gbc.sp());
        EXPECT(0x962a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9628));
        EXPECT(0x2f, gbc.readMem(0x9629));
        // CB 2F 02E0
        gbc.setState(0x37f2, 0x45d4, 0x5d50, 0x138e, 0x708d, 0x8126, 0x0, 0x1);
        gbc.writeMem(0x37f2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x45d4, gbc.sp());
        EXPECT(0x37f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 02E1
        gbc.setState(0x5941, 0x720c, 0x7cb0, 0x504f, 0x8eb6, 0x1db4, 0x0, 0x1);
        gbc.writeMem(0x5941, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x720c, gbc.sp());
        EXPECT(0x5943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02E2
        gbc.setState(0x22ee, 0xfca0, 0xed50, 0x9203, 0x153f, 0xe7d8, 0x0, 0x0);
        gbc.writeMem(0x22ee, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xfca0, gbc.sp());
        EXPECT(0x22f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 02E3
        gbc.setState(0xddeb, 0x49fe, 0x87b0, 0xb412, 0xf9a9, 0x1835, 0x0, 0x1);
        gbc.writeMem(0xddeb, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x49fe, gbc.sp());
        EXPECT(0xdded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddeb));
        EXPECT(0x2f, gbc.readMem(0xddec));
        // CB 2F 02E4
        gbc.setState(0xa98a, 0x806, 0x6980, 0x68a4, 0x94ed, 0x13d6, 0x0, 0x0);
        gbc.writeMem(0xa98a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x806, gbc.sp());
        EXPECT(0xa98c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa98a));
        EXPECT(0x2f, gbc.readMem(0xa98b));
        // CB 2F 02E5
        gbc.setState(0x5bcc, 0x33ab, 0xfa10, 0xb39e, 0xb990, 0x4663, 0x1, 0x1);
        gbc.writeMem(0x5bcc, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x33ab, gbc.sp());
        EXPECT(0x5bce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02E8
        gbc.setState(0x8b50, 0x3581, 0xe4a0, 0x96bf, 0x1f57, 0x5842, 0x0, 0x1);
        gbc.writeMem(0x8b50, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3581, gbc.sp());
        EXPECT(0x8b52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b50));
        EXPECT(0x2f, gbc.readMem(0x8b51));
        // CB 2F 02E9
        gbc.setState(0xa73c, 0xe40e, 0xda70, 0xfe58, 0xdff3, 0xfd06, 0x0, 0x1);
        gbc.writeMem(0xa73c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe40e, gbc.sp());
        EXPECT(0xa73e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa73c));
        EXPECT(0x2f, gbc.readMem(0xa73d));
        // CB 2F 02EA
        gbc.setState(0xbb8e, 0x2d9d, 0xb640, 0x8eb6, 0x4487, 0x64c5, 0x1, 0x0);
        gbc.writeMem(0xbb8e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2d9d, gbc.sp());
        EXPECT(0xbb90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb8e));
        EXPECT(0x2f, gbc.readMem(0xbb8f));
        // CB 2F 02EC
        gbc.setState(0xa78, 0x2b78, 0xa770, 0xd89e, 0xbc5a, 0x5142, 0x1, 0x0);
        gbc.writeMem(0xa78, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2b78, gbc.sp());
        EXPECT(0xa7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 02EF
        gbc.setState(0xe010, 0xa639, 0x5420, 0x36ed, 0x2e25, 0x9f06, 0x1, 0x1);
        gbc.writeMem(0xe010, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa639, gbc.sp());
        EXPECT(0xe012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe010));
        EXPECT(0x2f, gbc.readMem(0xe011));
        // CB 2F 02F1
        gbc.setState(0x539b, 0xf3c0, 0xbb70, 0xa728, 0x1f60, 0x26b9, 0x0, 0x0);
        gbc.writeMem(0x539b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf3c0, gbc.sp());
        EXPECT(0x539d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 02F2
        gbc.setState(0x2eb6, 0x7295, 0x63d0, 0x1031, 0x6829, 0xdbbb, 0x1, 0x1);
        gbc.writeMem(0x2eb6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7295, gbc.sp());
        EXPECT(0x2eb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 02F3
        gbc.setState(0x48f, 0x2674, 0x3390, 0x81fb, 0xee0d, 0xf85b, 0x0, 0x1);
        gbc.writeMem(0x48f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2674, gbc.sp());
        EXPECT(0x491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 02F4
        gbc.setState(0x6054, 0x6e5b, 0x23e0, 0xb511, 0x974c, 0xe714, 0x1, 0x1);
        gbc.writeMem(0x6054, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6e5b, gbc.sp());
        EXPECT(0x6056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 02F5
        gbc.setState(0x5be9, 0x7e5e, 0x7860, 0x53c9, 0x9619, 0x1958, 0x1, 0x1);
        gbc.writeMem(0x5be9, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7e5e, gbc.sp());
        EXPECT(0x5beb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02F6
        gbc.setState(0xb914, 0x987e, 0x2630, 0xcb77, 0x7618, 0xdd07, 0x1, 0x0);
        gbc.writeMem(0xb914, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x987e, gbc.sp());
        EXPECT(0xb916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb914));
        EXPECT(0x2f, gbc.readMem(0xb915));
        // CB 2F 02F7
        gbc.setState(0x50e6, 0xd29, 0x6ee0, 0x277f, 0x82ce, 0xeaf0, 0x0, 0x0);
        gbc.writeMem(0x50e6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd29, gbc.sp());
        EXPECT(0x50e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02F8
        gbc.setState(0x3763, 0x9f98, 0x5800, 0x1884, 0x1a08, 0x17f4, 0x1, 0x0);
        gbc.writeMem(0x3763, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9f98, gbc.sp());
        EXPECT(0x3765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02F9
        gbc.setState(0xbaeb, 0xd9ea, 0x4260, 0x8992, 0x6a86, 0xdd1a, 0x0, 0x0);
        gbc.writeMem(0xbaeb, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd9ea, gbc.sp());
        EXPECT(0xbaed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaeb));
        EXPECT(0x2f, gbc.readMem(0xbaec));
        // CB 2F 02FB
        gbc.setState(0xeaba, 0x60a9, 0x8b80, 0x8199, 0x9182, 0x2039, 0x1, 0x1);
        gbc.writeMem(0xeaba, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x60a9, gbc.sp());
        EXPECT(0xeabc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaba));
        EXPECT(0x2f, gbc.readMem(0xeabb));
        // CB 2F 02FC
        gbc.setState(0x6cd6, 0x93dc, 0xfa50, 0x7e92, 0x204d, 0x5cb3, 0x0, 0x0);
        gbc.writeMem(0x6cd6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x93dc, gbc.sp());
        EXPECT(0x6cd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02FD
        gbc.setState(0xd8d, 0x7298, 0xb6a0, 0xa477, 0x107d, 0x66d4, 0x1, 0x1);
        gbc.writeMem(0xd8d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7298, gbc.sp());
        EXPECT(0xd8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 02FE
        gbc.setState(0xea85, 0xca81, 0x9330, 0xd993, 0xa4ec, 0x9cdc, 0x0, 0x1);
        gbc.writeMem(0xea85, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xca81, gbc.sp());
        EXPECT(0xea87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea85));
        EXPECT(0x2f, gbc.readMem(0xea86));
        // CB 2F 02FF
        gbc.setState(0x7921, 0x12a1, 0x70a0, 0x505b, 0xdfbb, 0xd1b1, 0x0, 0x0);
        gbc.writeMem(0x7921, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x12a1, gbc.sp());
        EXPECT(0x7923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0300
        gbc.setState(0x9fb0, 0x25b1, 0x6ae0, 0x5b58, 0x89f1, 0x5a1, 0x1, 0x0);
        gbc.writeMem(0x9fb0, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x25b1, gbc.sp());
        EXPECT(0x9fb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb0));
        EXPECT(0x2f, gbc.readMem(0x9fb1));
        // CB 2F 0301
        gbc.setState(0xc081, 0x6b53, 0xd020, 0x37c6, 0x377e, 0x170f, 0x0, 0x1);
        gbc.writeMem(0xc081, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6b53, gbc.sp());
        EXPECT(0xc083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc081));
        EXPECT(0x2f, gbc.readMem(0xc082));
        // CB 2F 0302
        gbc.setState(0x52c9, 0x4cac, 0xf40, 0xe36a, 0x949a, 0xe46b, 0x1, 0x1);
        gbc.writeMem(0x52c9, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4cac, gbc.sp());
        EXPECT(0x52cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0303
        gbc.setState(0x7fdf, 0x396, 0xf580, 0xcc5c, 0x253e, 0xab6d, 0x0, 0x0);
        gbc.writeMem(0x7fdf, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x396, gbc.sp());
        EXPECT(0x7fe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0304
        gbc.setState(0xa708, 0x40fc, 0x2ee0, 0x43f, 0xbbc5, 0x7b8c, 0x0, 0x0);
        gbc.writeMem(0xa708, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x40fc, gbc.sp());
        EXPECT(0xa70a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa708));
        EXPECT(0x2f, gbc.readMem(0xa709));
        // CB 2F 0305
        gbc.setState(0x7cca, 0x81c5, 0xe650, 0x7739, 0xbbd4, 0x2b4a, 0x1, 0x1);
        gbc.writeMem(0x7cca, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x81c5, gbc.sp());
        EXPECT(0x7ccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0306
        gbc.setState(0xb8a9, 0x9f0f, 0xeb20, 0xc198, 0x9c02, 0xc7c9, 0x1, 0x1);
        gbc.writeMem(0xb8a9, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9f0f, gbc.sp());
        EXPECT(0xb8ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a9));
        EXPECT(0x2f, gbc.readMem(0xb8aa));
        // CB 2F 0307
        gbc.setState(0x2709, 0xd69, 0x1920, 0xf88b, 0xbbb4, 0x3bfa, 0x0, 0x1);
        gbc.writeMem(0x2709, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd69, gbc.sp());
        EXPECT(0x270b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0308
        gbc.setState(0xd8a8, 0xe0e9, 0xe7a0, 0x8525, 0x620c, 0x3a6b, 0x1, 0x1);
        gbc.writeMem(0xd8a8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe0e9, gbc.sp());
        EXPECT(0xd8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8a8));
        EXPECT(0x2f, gbc.readMem(0xd8a9));
        // CB 2F 0309
        gbc.setState(0x65f5, 0x80b6, 0x920, 0xb22, 0x77a4, 0x97d8, 0x1, 0x1);
        gbc.writeMem(0x65f5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x80b6, gbc.sp());
        EXPECT(0x65f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 030A
        gbc.setState(0x5651, 0xa7ad, 0x4630, 0x3778, 0x220, 0x6086, 0x0, 0x1);
        gbc.writeMem(0x5651, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa7ad, gbc.sp());
        EXPECT(0x5653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 030B
        gbc.setState(0xe3af, 0x7bde, 0x8ad0, 0xeb87, 0x9b38, 0xf5cf, 0x0, 0x1);
        gbc.writeMem(0xe3af, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7bde, gbc.sp());
        EXPECT(0xe3b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3af));
        EXPECT(0x2f, gbc.readMem(0xe3b0));
        // CB 2F 030C
        gbc.setState(0x3b1b, 0x33dc, 0x5a10, 0x8eba, 0x24ec, 0xa84, 0x0, 0x0);
        gbc.writeMem(0x3b1b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x33dc, gbc.sp());
        EXPECT(0x3b1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 030D
        gbc.setState(0xb0fd, 0xfd15, 0xc5c0, 0xf4ac, 0x56c6, 0x7a8a, 0x1, 0x0);
        gbc.writeMem(0xb0fd, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfd15, gbc.sp());
        EXPECT(0xb0ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0fd));
        EXPECT(0x2f, gbc.readMem(0xb0fe));
        // CB 2F 030E
        gbc.setState(0xdebe, 0x7839, 0x4f60, 0xbff, 0x2aca, 0xa728, 0x0, 0x0);
        gbc.writeMem(0xdebe, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7839, gbc.sp());
        EXPECT(0xdec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdebe));
        EXPECT(0x2f, gbc.readMem(0xdebf));
        // CB 2F 030F
        gbc.setState(0x5aeb, 0x5b3f, 0xbe40, 0xa900, 0x1d21, 0x9ffc, 0x0, 0x0);
        gbc.writeMem(0x5aeb, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5b3f, gbc.sp());
        EXPECT(0x5aed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0311
        gbc.setState(0xe67b, 0x7b0, 0xf700, 0xec8, 0xff71, 0xc6d2, 0x1, 0x0);
        gbc.writeMem(0xe67b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7b0, gbc.sp());
        EXPECT(0xe67d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe67b));
        EXPECT(0x2f, gbc.readMem(0xe67c));
        // CB 2F 0312
        gbc.setState(0xb0e6, 0x614, 0x2fc0, 0x64f4, 0xf3c8, 0x34c9, 0x1, 0x0);
        gbc.writeMem(0xb0e6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x614, gbc.sp());
        EXPECT(0xb0e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e6));
        EXPECT(0x2f, gbc.readMem(0xb0e7));
        // CB 2F 0313
        gbc.setState(0x494c, 0x8161, 0xf5b0, 0x446a, 0x1389, 0x2c94, 0x0, 0x1);
        gbc.writeMem(0x494c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8161, gbc.sp());
        EXPECT(0x494e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0314
        gbc.setState(0x1a86, 0x37b3, 0xbc00, 0xca75, 0xe8d4, 0xfa1c, 0x0, 0x0);
        gbc.writeMem(0x1a86, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x37b3, gbc.sp());
        EXPECT(0x1a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0315
        gbc.setState(0x4c33, 0x24a4, 0x64c0, 0xa8a, 0x4890, 0x79a1, 0x1, 0x0);
        gbc.writeMem(0x4c33, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x24a4, gbc.sp());
        EXPECT(0x4c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0316
        gbc.setState(0x4e1d, 0x114b, 0xd580, 0x806c, 0x6577, 0x9fae, 0x1, 0x1);
        gbc.writeMem(0x4e1d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x114b, gbc.sp());
        EXPECT(0x4e1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0317
        gbc.setState(0x723a, 0x8ac2, 0x9c0, 0xc99e, 0xd62c, 0xccd6, 0x1, 0x0);
        gbc.writeMem(0x723a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8ac2, gbc.sp());
        EXPECT(0x723c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0318
        gbc.setState(0x8f0d, 0x3b9b, 0x8e60, 0x8ee5, 0x4514, 0xcb2b, 0x0, 0x0);
        gbc.writeMem(0x8f0d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3b9b, gbc.sp());
        EXPECT(0x8f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f0d));
        EXPECT(0x2f, gbc.readMem(0x8f0e));
        // CB 2F 0319
        gbc.setState(0x2aa8, 0x8f76, 0xc790, 0xf39f, 0xf0a3, 0xfa2b, 0x1, 0x1);
        gbc.writeMem(0x2aa8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8f76, gbc.sp());
        EXPECT(0x2aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 031A
        gbc.setState(0x3897, 0x12c8, 0x6410, 0x1441, 0xf25f, 0x9181, 0x1, 0x1);
        gbc.writeMem(0x3897, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x12c8, gbc.sp());
        EXPECT(0x3899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 031B
        gbc.setState(0x9c9a, 0x69b0, 0x2ca0, 0x45d6, 0xb167, 0x8b4c, 0x0, 0x1);
        gbc.writeMem(0x9c9a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x69b0, gbc.sp());
        EXPECT(0x9c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c9a));
        EXPECT(0x2f, gbc.readMem(0x9c9b));
        // CB 2F 031C
        gbc.setState(0xe2a1, 0x35fa, 0x7f80, 0x29cd, 0xb481, 0xb975, 0x1, 0x1);
        gbc.writeMem(0xe2a1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x35fa, gbc.sp());
        EXPECT(0xe2a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a1));
        EXPECT(0x2f, gbc.readMem(0xe2a2));
        // CB 2F 031D
        gbc.setState(0xc96f, 0xc8f4, 0x8250, 0xce2b, 0xef29, 0xa257, 0x0, 0x1);
        gbc.writeMem(0xc96f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc8f4, gbc.sp());
        EXPECT(0xc971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc96f));
        EXPECT(0x2f, gbc.readMem(0xc970));
        // CB 2F 031E
        gbc.setState(0xdb18, 0x6884, 0x8c40, 0xa9c1, 0x2c3, 0x324a, 0x1, 0x0);
        gbc.writeMem(0xdb18, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6884, gbc.sp());
        EXPECT(0xdb1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb18));
        EXPECT(0x2f, gbc.readMem(0xdb19));
        // CB 2F 031F
        gbc.setState(0x12c9, 0xe99, 0x39e0, 0x7d12, 0xbb34, 0xabb3, 0x0, 0x1);
        gbc.writeMem(0x12c9, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe99, gbc.sp());
        EXPECT(0x12cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0320
        gbc.setState(0x662, 0x5eb8, 0x83d0, 0x5b9d, 0xf91, 0xadc4, 0x1, 0x1);
        gbc.writeMem(0x662, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5eb8, gbc.sp());
        EXPECT(0x664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0321
        gbc.setState(0xabc5, 0x1ba0, 0xbf50, 0x3274, 0x3e86, 0x7967, 0x0, 0x0);
        gbc.writeMem(0xabc5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1ba0, gbc.sp());
        EXPECT(0xabc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabc5));
        EXPECT(0x2f, gbc.readMem(0xabc6));
        // CB 2F 0322
        gbc.setState(0x3411, 0x9ae2, 0x5a20, 0xfbeb, 0x9e3, 0x5e81, 0x0, 0x1);
        gbc.writeMem(0x3411, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9ae2, gbc.sp());
        EXPECT(0x3413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0323
        gbc.setState(0x2fe5, 0xccc7, 0xb8d0, 0xc994, 0x7e69, 0x9c22, 0x0, 0x0);
        gbc.writeMem(0x2fe5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xccc7, gbc.sp());
        EXPECT(0x2fe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0324
        gbc.setState(0xcf92, 0x2f97, 0x1f60, 0xcb18, 0xeec, 0x2ec9, 0x0, 0x1);
        gbc.writeMem(0xcf92, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2f97, gbc.sp());
        EXPECT(0xcf94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf92));
        EXPECT(0x2f, gbc.readMem(0xcf93));
        // CB 2F 0325
        gbc.setState(0xaad8, 0x2293, 0xa2f0, 0x41c7, 0x7590, 0xc95d, 0x0, 0x0);
        gbc.writeMem(0xaad8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2293, gbc.sp());
        EXPECT(0xaada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad8));
        EXPECT(0x2f, gbc.readMem(0xaad9));
        // CB 2F 0326
        gbc.setState(0x4e18, 0xc5c3, 0xa300, 0xebec, 0x4eac, 0x5b1c, 0x1, 0x0);
        gbc.writeMem(0x4e18, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc5c3, gbc.sp());
        EXPECT(0x4e1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0327
        gbc.setState(0xd8b0, 0xf7fd, 0xe4b0, 0x3a72, 0xd0f3, 0x2fe7, 0x0, 0x0);
        gbc.writeMem(0xd8b0, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf7fd, gbc.sp());
        EXPECT(0xd8b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b0));
        EXPECT(0x2f, gbc.readMem(0xd8b1));
        // CB 2F 0328
        gbc.setState(0x9d05, 0x9d0a, 0xa0c0, 0x50f, 0x9661, 0xacfa, 0x0, 0x0);
        gbc.writeMem(0x9d05, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9d0a, gbc.sp());
        EXPECT(0x9d07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d05));
        EXPECT(0x2f, gbc.readMem(0x9d06));
        // CB 2F 0329
        gbc.setState(0x3992, 0x6e85, 0xa250, 0x8696, 0x5b5f, 0xc131, 0x0, 0x1);
        gbc.writeMem(0x3992, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6e85, gbc.sp());
        EXPECT(0x3994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 032A
        gbc.setState(0x61a5, 0xcc73, 0x4f00, 0x35a3, 0xfdf7, 0xe343, 0x1, 0x0);
        gbc.writeMem(0x61a5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcc73, gbc.sp());
        EXPECT(0x61a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 032B
        gbc.setState(0xeec2, 0x7876, 0xb060, 0x21d3, 0x1f4a, 0x7722, 0x1, 0x1);
        gbc.writeMem(0xeec2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7876, gbc.sp());
        EXPECT(0xeec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeec2));
        EXPECT(0x2f, gbc.readMem(0xeec3));
        // CB 2F 032C
        gbc.setState(0x162, 0x840d, 0xb810, 0xc011, 0xbc29, 0xe903, 0x1, 0x1);
        gbc.writeMem(0x162, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x840d, gbc.sp());
        EXPECT(0x164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 032D
        gbc.setState(0x4e01, 0xda7, 0xd720, 0x4f9a, 0x554f, 0x10e1, 0x1, 0x0);
        gbc.writeMem(0x4e01, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xda7, gbc.sp());
        EXPECT(0x4e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 032E
        gbc.setState(0x7fa5, 0x3e2d, 0x58a0, 0xcc1a, 0x1776, 0x34d3, 0x1, 0x1);
        gbc.writeMem(0x7fa5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3e2d, gbc.sp());
        EXPECT(0x7fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 032F
        gbc.setState(0xefb1, 0x4064, 0x5040, 0xdc75, 0x35f, 0xdb4c, 0x0, 0x1);
        gbc.writeMem(0xefb1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4064, gbc.sp());
        EXPECT(0xefb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb1));
        EXPECT(0x2f, gbc.readMem(0xefb2));
        // CB 2F 0330
        gbc.setState(0xec16, 0x64ab, 0x61f0, 0xd8d6, 0x98af, 0x3b64, 0x0, 0x1);
        gbc.writeMem(0xec16, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x64ab, gbc.sp());
        EXPECT(0xec18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec16));
        EXPECT(0x2f, gbc.readMem(0xec17));
        // CB 2F 0331
        gbc.setState(0xa043, 0x1604, 0x7c0, 0xbbe0, 0x5525, 0x9ec6, 0x1, 0x0);
        gbc.writeMem(0xa043, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1604, gbc.sp());
        EXPECT(0xa045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa043));
        EXPECT(0x2f, gbc.readMem(0xa044));
        // CB 2F 0332
        gbc.setState(0xd625, 0x3727, 0x13f0, 0xa388, 0x2428, 0x3bf2, 0x1, 0x1);
        gbc.writeMem(0xd625, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3727, gbc.sp());
        EXPECT(0xd627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd625));
        EXPECT(0x2f, gbc.readMem(0xd626));
        // CB 2F 0333
        gbc.setState(0xa31c, 0x879a, 0x9500, 0xa946, 0x18f1, 0xe8e4, 0x0, 0x0);
        gbc.writeMem(0xa31c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x879a, gbc.sp());
        EXPECT(0xa31e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa31c));
        EXPECT(0x2f, gbc.readMem(0xa31d));
        // CB 2F 0334
        gbc.setState(0x5c03, 0x65c3, 0xb600, 0x2a5d, 0x9cec, 0x4492, 0x0, 0x1);
        gbc.writeMem(0x5c03, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x65c3, gbc.sp());
        EXPECT(0x5c05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0335
        gbc.setState(0x7f51, 0xf38c, 0x3360, 0x2b34, 0xc5db, 0x3a70, 0x0, 0x0);
        gbc.writeMem(0x7f51, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf38c, gbc.sp());
        EXPECT(0x7f53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0336
        gbc.setState(0x3f8, 0x2a40, 0x1a80, 0xc594, 0x817b, 0xff0f, 0x0, 0x1);
        gbc.writeMem(0x3f8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2a40, gbc.sp());
        EXPECT(0x3fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0337
        gbc.setState(0x2897, 0x77e6, 0x6a40, 0xbbb1, 0xd47f, 0xb548, 0x0, 0x0);
        gbc.writeMem(0x2897, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x77e6, gbc.sp());
        EXPECT(0x2899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0338
        gbc.setState(0x850d, 0x893b, 0xd590, 0xc15f, 0x89a1, 0xb801, 0x0, 0x0);
        gbc.writeMem(0x850d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x893b, gbc.sp());
        EXPECT(0x850f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x850d));
        EXPECT(0x2f, gbc.readMem(0x850e));
        // CB 2F 033A
        gbc.setState(0xa7de, 0xe207, 0x1dc0, 0x2fae, 0xcd20, 0x4cf3, 0x1, 0x1);
        gbc.writeMem(0xa7de, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe207, gbc.sp());
        EXPECT(0xa7e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7de));
        EXPECT(0x2f, gbc.readMem(0xa7df));
        // CB 2F 033B
        gbc.setState(0x4ae9, 0x62bc, 0xf580, 0xe6cd, 0x69c6, 0x32ba, 0x1, 0x1);
        gbc.writeMem(0x4ae9, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x62bc, gbc.sp());
        EXPECT(0x4aeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 033C
        gbc.setState(0x7f50, 0xff5c, 0x320, 0x12cd, 0x6bd3, 0xbfb7, 0x0, 0x0);
        gbc.writeMem(0x7f50, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xff5c, gbc.sp());
        EXPECT(0x7f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 033D
        gbc.setState(0xbb5c, 0x3a2f, 0xb0d0, 0x5724, 0xfe4f, 0x1f36, 0x0, 0x0);
        gbc.writeMem(0xbb5c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3a2f, gbc.sp());
        EXPECT(0xbb5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb5c));
        EXPECT(0x2f, gbc.readMem(0xbb5d));
        // CB 2F 033F
        gbc.setState(0x9626, 0x3902, 0x11a0, 0x47f, 0x10d6, 0x9e35, 0x0, 0x0);
        gbc.writeMem(0x9626, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3902, gbc.sp());
        EXPECT(0x9628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9626));
        EXPECT(0x2f, gbc.readMem(0x9627));
        // CB 2F 0340
        gbc.setState(0x10bd, 0x8c25, 0xa330, 0xb933, 0xeff, 0xd231, 0x1, 0x1);
        gbc.writeMem(0x10bd, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8c25, gbc.sp());
        EXPECT(0x10bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0342
        gbc.setState(0x9787, 0xc18e, 0xd700, 0x975, 0x5fd5, 0xa4eb, 0x1, 0x1);
        gbc.writeMem(0x9787, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc18e, gbc.sp());
        EXPECT(0x9789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9787));
        EXPECT(0x2f, gbc.readMem(0x9788));
        // CB 2F 0343
        gbc.setState(0x1f90, 0x1c9d, 0x99a0, 0x3267, 0xbfa, 0x9a0a, 0x1, 0x0);
        gbc.writeMem(0x1f90, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1c9d, gbc.sp());
        EXPECT(0x1f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0344
        gbc.setState(0xa8c7, 0x104, 0xc3c0, 0xba61, 0x5b66, 0xfaa7, 0x1, 0x1);
        gbc.writeMem(0xa8c7, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x104, gbc.sp());
        EXPECT(0xa8c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c7));
        EXPECT(0x2f, gbc.readMem(0xa8c8));
        // CB 2F 0345
        gbc.setState(0xb318, 0x36ac, 0x8770, 0x7cd3, 0x623b, 0x636e, 0x0, 0x0);
        gbc.writeMem(0xb318, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x36ac, gbc.sp());
        EXPECT(0xb31a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb318));
        EXPECT(0x2f, gbc.readMem(0xb319));
        // CB 2F 0346
        gbc.setState(0x30f7, 0xc0a, 0x5480, 0x6e0, 0xf1e6, 0xe07b, 0x0, 0x1);
        gbc.writeMem(0x30f7, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc0a, gbc.sp());
        EXPECT(0x30f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0347
        gbc.setState(0x3ae, 0xbefb, 0x21b0, 0x8cd5, 0xbf24, 0x17e2, 0x1, 0x0);
        gbc.writeMem(0x3ae, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xbefb, gbc.sp());
        EXPECT(0x3b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0348
        gbc.setState(0xeff6, 0xf5b8, 0x4970, 0x48ff, 0x3514, 0xc1e3, 0x0, 0x1);
        gbc.writeMem(0xeff6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf5b8, gbc.sp());
        EXPECT(0xeff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeff6));
        EXPECT(0x2f, gbc.readMem(0xeff7));
        // CB 2F 0349
        gbc.setState(0xb1c, 0xb092, 0x54a0, 0x326d, 0x345b, 0xb626, 0x0, 0x0);
        gbc.writeMem(0xb1c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb092, gbc.sp());
        EXPECT(0xb1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 034A
        gbc.setState(0x52d4, 0xaf5b, 0xecf0, 0x7314, 0x28d4, 0xf057, 0x0, 0x1);
        gbc.writeMem(0x52d4, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xaf5b, gbc.sp());
        EXPECT(0x52d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 034B
        gbc.setState(0x191a, 0xcc79, 0x27e0, 0xae53, 0x7f15, 0x75b8, 0x1, 0x1);
        gbc.writeMem(0x191a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xcc79, gbc.sp());
        EXPECT(0x191c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 034C
        gbc.setState(0xed59, 0xe7fe, 0x450, 0x1706, 0x5746, 0x5fdf, 0x1, 0x0);
        gbc.writeMem(0xed59, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe7fe, gbc.sp());
        EXPECT(0xed5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed59));
        EXPECT(0x2f, gbc.readMem(0xed5a));
        // CB 2F 034D
        gbc.setState(0xaa80, 0x7431, 0x85a0, 0x3c40, 0x21d2, 0xd0ed, 0x1, 0x1);
        gbc.writeMem(0xaa80, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7431, gbc.sp());
        EXPECT(0xaa82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa80));
        EXPECT(0x2f, gbc.readMem(0xaa81));
        // CB 2F 034E
        gbc.setState(0x5e65, 0xd586, 0xdfb0, 0x53d3, 0x815f, 0x1066, 0x1, 0x0);
        gbc.writeMem(0x5e65, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd586, gbc.sp());
        EXPECT(0x5e67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 034F
        gbc.setState(0x5db6, 0x3c66, 0x3890, 0x8be0, 0x4e78, 0xf8d0, 0x0, 0x1);
        gbc.writeMem(0x5db6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3c66, gbc.sp());
        EXPECT(0x5db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0350
        gbc.setState(0x6e00, 0x5a72, 0xfd90, 0x51b0, 0x4c63, 0x19e3, 0x1, 0x0);
        gbc.writeMem(0x6e00, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5a72, gbc.sp());
        EXPECT(0x6e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0351
        gbc.setState(0x8d28, 0xee84, 0xf440, 0x39b, 0x326d, 0x58e6, 0x1, 0x0);
        gbc.writeMem(0x8d28, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xee84, gbc.sp());
        EXPECT(0x8d2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d28));
        EXPECT(0x2f, gbc.readMem(0x8d29));
        // CB 2F 0352
        gbc.setState(0x978, 0x95e2, 0xcc90, 0xf3c2, 0x3e61, 0x25dd, 0x0, 0x0);
        gbc.writeMem(0x978, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x95e2, gbc.sp());
        EXPECT(0x97a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0354
        gbc.setState(0x7bc2, 0x6678, 0xa010, 0x84d8, 0xdc6e, 0xaa80, 0x0, 0x0);
        gbc.writeMem(0x7bc2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6678, gbc.sp());
        EXPECT(0x7bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0355
        gbc.setState(0x268d, 0xe633, 0x52e0, 0x5f5f, 0xd488, 0x2b2, 0x0, 0x1);
        gbc.writeMem(0x268d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe633, gbc.sp());
        EXPECT(0x268f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0356
        gbc.setState(0xcb52, 0x9547, 0x4c60, 0x57db, 0xf163, 0x2332, 0x1, 0x0);
        gbc.writeMem(0xcb52, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9547, gbc.sp());
        EXPECT(0xcb54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb52));
        EXPECT(0x2f, gbc.readMem(0xcb53));
        // CB 2F 0358
        gbc.setState(0xebc8, 0xe5fd, 0x1d60, 0x281d, 0xe4f4, 0xfcd7, 0x1, 0x0);
        gbc.writeMem(0xebc8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe5fd, gbc.sp());
        EXPECT(0xebca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebc8));
        EXPECT(0x2f, gbc.readMem(0xebc9));
        // CB 2F 0359
        gbc.setState(0xb368, 0x2a8e, 0x5450, 0x5228, 0x57a2, 0x36ab, 0x1, 0x1);
        gbc.writeMem(0xb368, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2a8e, gbc.sp());
        EXPECT(0xb36a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb368));
        EXPECT(0x2f, gbc.readMem(0xb369));
        // CB 2F 035A
        gbc.setState(0x3c50, 0xce21, 0x8cc0, 0x6c3b, 0xc96c, 0x385a, 0x1, 0x1);
        gbc.writeMem(0x3c50, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xce21, gbc.sp());
        EXPECT(0x3c52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 035B
        gbc.setState(0xf89, 0x957a, 0xcfc0, 0x471, 0x3168, 0x97d6, 0x0, 0x0);
        gbc.writeMem(0xf89, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x957a, gbc.sp());
        EXPECT(0xf8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 035C
        gbc.setState(0xd15c, 0xc722, 0x2500, 0x8444, 0x3d3d, 0x5cf0, 0x1, 0x0);
        gbc.writeMem(0xd15c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc722, gbc.sp());
        EXPECT(0xd15e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd15c));
        EXPECT(0x2f, gbc.readMem(0xd15d));
        // CB 2F 035D
        gbc.setState(0x4f17, 0x87f6, 0xc060, 0x1836, 0xa5a7, 0x9253, 0x0, 0x0);
        gbc.writeMem(0x4f17, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x87f6, gbc.sp());
        EXPECT(0x4f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 035E
        gbc.setState(0xe660, 0x4c7c, 0x8570, 0x2fb4, 0x576e, 0xf680, 0x1, 0x0);
        gbc.writeMem(0xe660, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4c7c, gbc.sp());
        EXPECT(0xe662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe660));
        EXPECT(0x2f, gbc.readMem(0xe661));
        // CB 2F 035F
        gbc.setState(0x8b72, 0x6741, 0xb390, 0xcc42, 0xf7d6, 0xfcae, 0x1, 0x1);
        gbc.writeMem(0x8b72, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6741, gbc.sp());
        EXPECT(0x8b74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b72));
        EXPECT(0x2f, gbc.readMem(0x8b73));
        // CB 2F 0360
        gbc.setState(0xac2f, 0x4d00, 0xd160, 0xaad0, 0xdbe, 0xc548, 0x0, 0x1);
        gbc.writeMem(0xac2f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4d00, gbc.sp());
        EXPECT(0xac31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac2f));
        EXPECT(0x2f, gbc.readMem(0xac30));
        // CB 2F 0361
        gbc.setState(0xe730, 0x172c, 0xa740, 0x69d8, 0x999e, 0x9714, 0x1, 0x0);
        gbc.writeMem(0xe730, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x172c, gbc.sp());
        EXPECT(0xe732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe730));
        EXPECT(0x2f, gbc.readMem(0xe731));
        // CB 2F 0362
        gbc.setState(0x34d5, 0x48cd, 0x6ee0, 0x1a69, 0x2b63, 0x4ee6, 0x1, 0x1);
        gbc.writeMem(0x34d5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x48cd, gbc.sp());
        EXPECT(0x34d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0363
        gbc.setState(0x6810, 0xf595, 0x5210, 0xcd01, 0x14ca, 0x5618, 0x0, 0x0);
        gbc.writeMem(0x6810, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf595, gbc.sp());
        EXPECT(0x6812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0364
        gbc.setState(0x6953, 0xb623, 0x6490, 0x2b03, 0x669e, 0xb474, 0x0, 0x1);
        gbc.writeMem(0x6953, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb623, gbc.sp());
        EXPECT(0x6955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0365
        gbc.setState(0xe653, 0x4088, 0x7590, 0x68d9, 0x6b24, 0x95b6, 0x0, 0x1);
        gbc.writeMem(0xe653, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4088, gbc.sp());
        EXPECT(0xe655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe653));
        EXPECT(0x2f, gbc.readMem(0xe654));
        // CB 2F 0366
        gbc.setState(0xaa17, 0x7e8f, 0xe430, 0x7112, 0x26ce, 0x859e, 0x1, 0x1);
        gbc.writeMem(0xaa17, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7e8f, gbc.sp());
        EXPECT(0xaa19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa17));
        EXPECT(0x2f, gbc.readMem(0xaa18));
        // CB 2F 0367
        gbc.setState(0xbfa4, 0xc265, 0x8a80, 0x1fa3, 0xd526, 0xc48c, 0x0, 0x0);
        gbc.writeMem(0xbfa4, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc265, gbc.sp());
        EXPECT(0xbfa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfa4));
        EXPECT(0x2f, gbc.readMem(0xbfa5));
        // CB 2F 0368
        gbc.setState(0xcf8b, 0x81d3, 0x5f30, 0xce39, 0xcdb5, 0x4a16, 0x1, 0x0);
        gbc.writeMem(0xcf8b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x81d3, gbc.sp());
        EXPECT(0xcf8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf8b));
        EXPECT(0x2f, gbc.readMem(0xcf8c));
        // CB 2F 0369
        gbc.setState(0x113c, 0xd426, 0x9390, 0x5cd, 0x233, 0xf7b5, 0x1, 0x1);
        gbc.writeMem(0x113c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd426, gbc.sp());
        EXPECT(0x113e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 036A
        gbc.setState(0x8058, 0x8d75, 0x4770, 0xa3ee, 0x617, 0xa3ed, 0x1, 0x0);
        gbc.writeMem(0x8058, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8d75, gbc.sp());
        EXPECT(0x805a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8058));
        EXPECT(0x2f, gbc.readMem(0x8059));
        // CB 2F 036B
        gbc.setState(0x146a, 0x9f11, 0xed30, 0x99b8, 0xd2ce, 0xcce4, 0x1, 0x0);
        gbc.writeMem(0x146a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9f11, gbc.sp());
        EXPECT(0x146c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 036C
        gbc.setState(0x85ae, 0xa612, 0xdc30, 0xdfc3, 0x2bb, 0x29a3, 0x0, 0x0);
        gbc.writeMem(0x85ae, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa612, gbc.sp());
        EXPECT(0x85b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ae));
        EXPECT(0x2f, gbc.readMem(0x85af));
        // CB 2F 036D
        gbc.setState(0x59b7, 0x99fc, 0xd300, 0x6d0b, 0x87cd, 0x1dfa, 0x0, 0x0);
        gbc.writeMem(0x59b7, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x99fc, gbc.sp());
        EXPECT(0x59b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 036E
        gbc.setState(0xc32c, 0x3a5d, 0xfe60, 0xb0ce, 0x3799, 0x737b, 0x0, 0x0);
        gbc.writeMem(0xc32c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3a5d, gbc.sp());
        EXPECT(0xc32e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc32c));
        EXPECT(0x2f, gbc.readMem(0xc32d));
        // CB 2F 036F
        gbc.setState(0xcfbb, 0xcdcb, 0x83f0, 0xca19, 0x8093, 0xf2c, 0x0, 0x0);
        gbc.writeMem(0xcfbb, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcdcb, gbc.sp());
        EXPECT(0xcfbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfbb));
        EXPECT(0x2f, gbc.readMem(0xcfbc));
        // CB 2F 0371
        gbc.setState(0x78fa, 0x359d, 0x4bc0, 0xd193, 0xed5b, 0x5d11, 0x1, 0x0);
        gbc.writeMem(0x78fa, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x359d, gbc.sp());
        EXPECT(0x78fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0372
        gbc.setState(0x73db, 0xc150, 0xaf10, 0x1bcf, 0x9efb, 0x915e, 0x0, 0x0);
        gbc.writeMem(0x73db, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc150, gbc.sp());
        EXPECT(0x73dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0373
        gbc.setState(0x76cd, 0x9604, 0x1690, 0xc01e, 0x4dd0, 0xb95d, 0x1, 0x0);
        gbc.writeMem(0x76cd, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9604, gbc.sp());
        EXPECT(0x76cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0374
        gbc.setState(0x4cac, 0x60f3, 0x4330, 0x8c9c, 0x91d7, 0x1d4b, 0x0, 0x1);
        gbc.writeMem(0x4cac, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x60f3, gbc.sp());
        EXPECT(0x4cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0375
        gbc.setState(0xaf9b, 0xd69, 0xb930, 0x443, 0x1158, 0xca89, 0x1, 0x0);
        gbc.writeMem(0xaf9b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd69, gbc.sp());
        EXPECT(0xaf9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf9b));
        EXPECT(0x2f, gbc.readMem(0xaf9c));
        // CB 2F 0376
        gbc.setState(0x1e6c, 0xcf0d, 0xad60, 0x628e, 0xe607, 0x7e78, 0x0, 0x0);
        gbc.writeMem(0x1e6c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcf0d, gbc.sp());
        EXPECT(0x1e6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0377
        gbc.setState(0xa13e, 0x53f, 0x6f90, 0x5391, 0xd851, 0x8e8, 0x1, 0x0);
        gbc.writeMem(0xa13e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x53f, gbc.sp());
        EXPECT(0xa140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa13e));
        EXPECT(0x2f, gbc.readMem(0xa13f));
        // CB 2F 0378
        gbc.setState(0x8cec, 0x6a43, 0x7000, 0x2eec, 0x217a, 0x3eec, 0x1, 0x0);
        gbc.writeMem(0x8cec, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6a43, gbc.sp());
        EXPECT(0x8cee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cec));
        EXPECT(0x2f, gbc.readMem(0x8ced));
        // CB 2F 0379
        gbc.setState(0x56fb, 0x5669, 0x6df0, 0x8b5f, 0x9ce9, 0x1d9c, 0x1, 0x1);
        gbc.writeMem(0x56fb, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5669, gbc.sp());
        EXPECT(0x56fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 037A
        gbc.setState(0xd7b4, 0xec9c, 0x90b0, 0x99a0, 0x40b0, 0x1c14, 0x1, 0x1);
        gbc.writeMem(0xd7b4, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xec9c, gbc.sp());
        EXPECT(0xd7b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b4));
        EXPECT(0x2f, gbc.readMem(0xd7b5));
        // CB 2F 037B
        gbc.setState(0x34a2, 0xaa77, 0x2480, 0x4606, 0x7fd4, 0xfd81, 0x0, 0x0);
        gbc.writeMem(0x34a2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xaa77, gbc.sp());
        EXPECT(0x34a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 037C
        gbc.setState(0x9e17, 0x4aa7, 0x6fa0, 0x9019, 0x81df, 0x9a3a, 0x0, 0x0);
        gbc.writeMem(0x9e17, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4aa7, gbc.sp());
        EXPECT(0x9e19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e17));
        EXPECT(0x2f, gbc.readMem(0x9e18));
        // CB 2F 037D
        gbc.setState(0x1f4, 0xb634, 0xce90, 0xbb0, 0x7630, 0x5e8e, 0x1, 0x0);
        gbc.writeMem(0x1f4, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb634, gbc.sp());
        EXPECT(0x1f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 037E
        gbc.setState(0x7e1d, 0x7d77, 0x3ee0, 0x4f15, 0x79d2, 0xcde7, 0x1, 0x0);
        gbc.writeMem(0x7e1d, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7d77, gbc.sp());
        EXPECT(0x7e1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 037F
        gbc.setState(0xf55, 0xcde6, 0xde0, 0xfe56, 0x8db, 0x618, 0x1, 0x0);
        gbc.writeMem(0xf55, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xcde6, gbc.sp());
        EXPECT(0xf57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 0380
        gbc.setState(0xa4d2, 0xbf43, 0xaf40, 0xce85, 0x4800, 0x1cf1, 0x0, 0x0);
        gbc.writeMem(0xa4d2, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbf43, gbc.sp());
        EXPECT(0xa4d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4d2));
        EXPECT(0x2f, gbc.readMem(0xa4d3));
        // CB 2F 0381
        gbc.setState(0x13b, 0x1c8, 0x7e10, 0xdfe8, 0x2963, 0xae90, 0x0, 0x0);
        gbc.writeMem(0x13b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1c8, gbc.sp());
        EXPECT(0x13d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0382
        gbc.setState(0xb3c8, 0x5047, 0x5860, 0x2763, 0xae85, 0xf95, 0x0, 0x0);
        gbc.writeMem(0xb3c8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5047, gbc.sp());
        EXPECT(0xb3ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3c8));
        EXPECT(0x2f, gbc.readMem(0xb3c9));
        // CB 2F 0383
        gbc.setState(0x5a08, 0xa624, 0xcce0, 0xc0fa, 0x4fb1, 0x6c1, 0x1, 0x1);
        gbc.writeMem(0x5a08, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa624, gbc.sp());
        EXPECT(0x5a0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0385
        gbc.setState(0x9c5b, 0x53f5, 0x7a10, 0x5320, 0xcd32, 0xd010, 0x0, 0x1);
        gbc.writeMem(0x9c5b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x53f5, gbc.sp());
        EXPECT(0x9c5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c5b));
        EXPECT(0x2f, gbc.readMem(0x9c5c));
        // CB 2F 0386
        gbc.setState(0xb1be, 0x6125, 0x47f0, 0x664b, 0x86a7, 0x66a6, 0x0, 0x1);
        gbc.writeMem(0xb1be, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6125, gbc.sp());
        EXPECT(0xb1c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1be));
        EXPECT(0x2f, gbc.readMem(0xb1bf));
        // CB 2F 0387
        gbc.setState(0x4ff6, 0x5d2c, 0xc830, 0x75ee, 0x48ae, 0x23fb, 0x1, 0x1);
        gbc.writeMem(0x4ff6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5d2c, gbc.sp());
        EXPECT(0x4ff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0388
        gbc.setState(0xc93, 0xd29e, 0x1220, 0xb846, 0x9c97, 0x744d, 0x0, 0x0);
        gbc.writeMem(0xc93, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd29e, gbc.sp());
        EXPECT(0xc95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0389
        gbc.setState(0xb678, 0x4024, 0xb370, 0xb063, 0xaced, 0xc16c, 0x1, 0x0);
        gbc.writeMem(0xb678, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4024, gbc.sp());
        EXPECT(0xb67a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb678));
        EXPECT(0x2f, gbc.readMem(0xb679));
        // CB 2F 038A
        gbc.setState(0xa119, 0xabf0, 0xd300, 0x3b36, 0x955a, 0xda78, 0x0, 0x1);
        gbc.writeMem(0xa119, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xabf0, gbc.sp());
        EXPECT(0xa11b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa119));
        EXPECT(0x2f, gbc.readMem(0xa11a));
        // CB 2F 038B
        gbc.setState(0x5876, 0xdeb3, 0x7100, 0xb41, 0x711f, 0x62, 0x1, 0x0);
        gbc.writeMem(0x5876, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xdeb3, gbc.sp());
        EXPECT(0x5878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 038C
        gbc.setState(0x6165, 0xd9e2, 0x2090, 0xaba2, 0x1b2d, 0x671e, 0x0, 0x0);
        gbc.writeMem(0x6165, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd9e2, gbc.sp());
        EXPECT(0x6167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 038D
        gbc.setState(0x8e82, 0xbd47, 0x7600, 0x48db, 0x8a69, 0x53cc, 0x1, 0x1);
        gbc.writeMem(0x8e82, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbd47, gbc.sp());
        EXPECT(0x8e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e82));
        EXPECT(0x2f, gbc.readMem(0x8e83));
        // CB 2F 038E
        gbc.setState(0xba20, 0x5bb5, 0x5fb0, 0x726b, 0x2342, 0x3b82, 0x1, 0x1);
        gbc.writeMem(0xba20, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5bb5, gbc.sp());
        EXPECT(0xba22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba20));
        EXPECT(0x2f, gbc.readMem(0xba21));
        // CB 2F 038F
        gbc.setState(0x9482, 0x2b5f, 0x6e10, 0x9736, 0x465, 0x6a45, 0x1, 0x0);
        gbc.writeMem(0x9482, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2b5f, gbc.sp());
        EXPECT(0x9484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9482));
        EXPECT(0x2f, gbc.readMem(0x9483));
        // CB 2F 0390
        gbc.setState(0x8b5b, 0xaadd, 0x7380, 0x1b99, 0x5f99, 0x46a6, 0x1, 0x1);
        gbc.writeMem(0x8b5b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xaadd, gbc.sp());
        EXPECT(0x8b5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b5b));
        EXPECT(0x2f, gbc.readMem(0x8b5c));
        // CB 2F 0391
        gbc.setState(0xd5c5, 0x38d7, 0x72c0, 0xe16f, 0x77b2, 0x1ca4, 0x1, 0x0);
        gbc.writeMem(0xd5c5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x38d7, gbc.sp());
        EXPECT(0xd5c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5c5));
        EXPECT(0x2f, gbc.readMem(0xd5c6));
        // CB 2F 0393
        gbc.setState(0xb321, 0xc90d, 0xf2d0, 0xa16b, 0xd88, 0xb9fe, 0x0, 0x1);
        gbc.writeMem(0xb321, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc90d, gbc.sp());
        EXPECT(0xb323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb321));
        EXPECT(0x2f, gbc.readMem(0xb322));
        // CB 2F 0394
        gbc.setState(0xedde, 0x4fdf, 0x5430, 0xee81, 0x963c, 0x1614, 0x1, 0x1);
        gbc.writeMem(0xedde, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4fdf, gbc.sp());
        EXPECT(0xede0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedde));
        EXPECT(0x2f, gbc.readMem(0xeddf));
        // CB 2F 0395
        gbc.setState(0xa3f5, 0x7483, 0xe820, 0xc498, 0x61fb, 0x2cb3, 0x1, 0x1);
        gbc.writeMem(0xa3f5, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7483, gbc.sp());
        EXPECT(0xa3f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f5));
        EXPECT(0x2f, gbc.readMem(0xa3f6));
        // CB 2F 0396
        gbc.setState(0xe312, 0x37a2, 0xc420, 0xcb51, 0xb060, 0xa5cf, 0x1, 0x0);
        gbc.writeMem(0xe312, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x37a2, gbc.sp());
        EXPECT(0xe314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe312));
        EXPECT(0x2f, gbc.readMem(0xe313));
        // CB 2F 0397
        gbc.setState(0x109a, 0xccd8, 0x4a60, 0x8e8f, 0xdbbb, 0x5613, 0x0, 0x0);
        gbc.writeMem(0x109a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xccd8, gbc.sp());
        EXPECT(0x109c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 0398
        gbc.setState(0x9e3e, 0x6af0, 0x3630, 0xaba2, 0x55a1, 0xd16f, 0x0, 0x0);
        gbc.writeMem(0x9e3e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6af0, gbc.sp());
        EXPECT(0x9e40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e3e));
        EXPECT(0x2f, gbc.readMem(0x9e3f));
        // CB 2F 0399
        gbc.setState(0x7596, 0xe7a5, 0x5520, 0x4086, 0x96a3, 0xb237, 0x1, 0x0);
        gbc.writeMem(0x7596, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe7a5, gbc.sp());
        EXPECT(0x7598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 039A
        gbc.setState(0xcd19, 0x187d, 0xfe30, 0xd612, 0xd4fc, 0xfe6, 0x0, 0x1);
        gbc.writeMem(0xcd19, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x187d, gbc.sp());
        EXPECT(0xcd1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd19));
        EXPECT(0x2f, gbc.readMem(0xcd1a));
        // CB 2F 039B
        gbc.setState(0xe800, 0xd3c3, 0xe80, 0xc049, 0x9f1e, 0x21d8, 0x0, 0x0);
        gbc.writeMem(0xe800, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd3c3, gbc.sp());
        EXPECT(0xe802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe800));
        EXPECT(0x2f, gbc.readMem(0xe801));
        // CB 2F 039C
        gbc.setState(0xbeed, 0x3d2, 0x86f0, 0xe43, 0xa0e2, 0x9c80, 0x1, 0x1);
        gbc.writeMem(0xbeed, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3d2, gbc.sp());
        EXPECT(0xbeef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeed));
        EXPECT(0x2f, gbc.readMem(0xbeee));
        // CB 2F 039D
        gbc.setState(0x89b4, 0x6928, 0xa8f0, 0x9dd, 0x99fd, 0xf5f7, 0x1, 0x0);
        gbc.writeMem(0x89b4, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6928, gbc.sp());
        EXPECT(0x89b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89b4));
        EXPECT(0x2f, gbc.readMem(0x89b5));
        // CB 2F 039E
        gbc.setState(0x3f9c, 0xa1f0, 0x5f40, 0x4771, 0x9fdf, 0x3a7c, 0x1, 0x0);
        gbc.writeMem(0x3f9c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa1f0, gbc.sp());
        EXPECT(0x3f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 039F
        gbc.setState(0x9f4f, 0xf408, 0xb650, 0xdb2d, 0xa7b6, 0xaccc, 0x1, 0x0);
        gbc.writeMem(0x9f4f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf408, gbc.sp());
        EXPECT(0x9f51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f4f));
        EXPECT(0x2f, gbc.readMem(0x9f50));
        // CB 2F 03A0
        gbc.setState(0x4ca8, 0xf4e, 0x86c0, 0x6076, 0xe8fe, 0xa55b, 0x1, 0x0);
        gbc.writeMem(0x4ca8, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf4e, gbc.sp());
        EXPECT(0x4caa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 03A1
        gbc.setState(0xdd56, 0x532b, 0x71c0, 0x8c46, 0x63c6, 0xe765, 0x0, 0x0);
        gbc.writeMem(0xdd56, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x532b, gbc.sp());
        EXPECT(0xdd58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd56));
        EXPECT(0x2f, gbc.readMem(0xdd57));
        // CB 2F 03A2
        gbc.setState(0x71c1, 0x2c04, 0x4320, 0xd2b7, 0x16b8, 0x8fd1, 0x0, 0x0);
        gbc.writeMem(0x71c1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2c04, gbc.sp());
        EXPECT(0x71c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 03A3
        gbc.setState(0xc23b, 0x328b, 0x3d30, 0xa817, 0x7fff, 0x9e7d, 0x1, 0x1);
        gbc.writeMem(0xc23b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x328b, gbc.sp());
        EXPECT(0xc23d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc23b));
        EXPECT(0x2f, gbc.readMem(0xc23c));
        // CB 2F 03A4
        gbc.setState(0x4c0e, 0x3af2, 0xc8d0, 0x1bf3, 0x2c7e, 0x33b2, 0x1, 0x0);
        gbc.writeMem(0x4c0e, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3af2, gbc.sp());
        EXPECT(0x4c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 03A5
        gbc.setState(0xabdd, 0x69c1, 0x8110, 0x615a, 0xb40f, 0xb2c0, 0x1, 0x0);
        gbc.writeMem(0xabdd, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x69c1, gbc.sp());
        EXPECT(0xabdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabdd));
        EXPECT(0x2f, gbc.readMem(0xabde));
        // CB 2F 03A6
        gbc.setState(0x9336, 0xbaa4, 0xe290, 0x3aa7, 0xc0d4, 0x2b3e, 0x1, 0x0);
        gbc.writeMem(0x9336, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbaa4, gbc.sp());
        EXPECT(0x9338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9336));
        EXPECT(0x2f, gbc.readMem(0x9337));
        // CB 2F 03A7
        gbc.setState(0xb401, 0xef5b, 0x4410, 0x3445, 0x496d, 0xdce0, 0x1, 0x1);
        gbc.writeMem(0xb401, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xef5b, gbc.sp());
        EXPECT(0xb403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb401));
        EXPECT(0x2f, gbc.readMem(0xb402));
        // CB 2F 03A8
        gbc.setState(0xc29f, 0xb22d, 0x2540, 0x3dec, 0x8f69, 0xae7e, 0x1, 0x0);
        gbc.writeMem(0xc29f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb22d, gbc.sp());
        EXPECT(0xc2a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc29f));
        EXPECT(0x2f, gbc.readMem(0xc2a0));
        // CB 2F 03A9
        gbc.setState(0x7d26, 0xcd8f, 0x22f0, 0x1f78, 0x5a36, 0x2f9b, 0x0, 0x0);
        gbc.writeMem(0x7d26, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcd8f, gbc.sp());
        EXPECT(0x7d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 03AA
        gbc.setState(0x8d20, 0xf718, 0x3190, 0x52f, 0x3900, 0xddc2, 0x1, 0x0);
        gbc.writeMem(0x8d20, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf718, gbc.sp());
        EXPECT(0x8d22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d20));
        EXPECT(0x2f, gbc.readMem(0x8d21));
        // CB 2F 03AB
        gbc.setState(0x6464, 0x9ec3, 0xb1d0, 0xf929, 0x7d54, 0x188f, 0x0, 0x1);
        gbc.writeMem(0x6464, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9ec3, gbc.sp());
        EXPECT(0x6466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 03AC
        gbc.setState(0x9e1c, 0x10c7, 0x96b0, 0xe323, 0xac2f, 0x483f, 0x1, 0x1);
        gbc.writeMem(0x9e1c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x10c7, gbc.sp());
        EXPECT(0x9e1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e1c));
        EXPECT(0x2f, gbc.readMem(0x9e1d));
        // CB 2F 03AD
        gbc.setState(0xda89, 0x17d1, 0xaab0, 0x6847, 0x1e9, 0xc93, 0x1, 0x0);
        gbc.writeMem(0xda89, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x17d1, gbc.sp());
        EXPECT(0xda8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda89));
        EXPECT(0x2f, gbc.readMem(0xda8a));
        // CB 2F 03AE
        gbc.setState(0x9ce1, 0x3b02, 0xa0b0, 0xbd76, 0xe3e3, 0x2fc4, 0x0, 0x1);
        gbc.writeMem(0x9ce1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3b02, gbc.sp());
        EXPECT(0x9ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ce1));
        EXPECT(0x2f, gbc.readMem(0x9ce2));
        // CB 2F 03AF
        gbc.setState(0xa1d9, 0xe3f8, 0xfdc0, 0x8cc, 0xd296, 0xe36, 0x1, 0x0);
        gbc.writeMem(0xa1d9, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe3f8, gbc.sp());
        EXPECT(0xa1db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d9));
        EXPECT(0x2f, gbc.readMem(0xa1da));
        // CB 2F 03B0
        gbc.setState(0xb518, 0x7645, 0x4120, 0xa597, 0x1916, 0x780, 0x1, 0x1);
        gbc.writeMem(0xb518, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7645, gbc.sp());
        EXPECT(0xb51a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb518));
        EXPECT(0x2f, gbc.readMem(0xb519));
        // CB 2F 03B1
        gbc.setState(0x528b, 0xa688, 0x2e10, 0x7a44, 0x5182, 0xe1b9, 0x0, 0x1);
        gbc.writeMem(0x528b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa688, gbc.sp());
        EXPECT(0x528d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 03B2
        gbc.setState(0x5639, 0x7f23, 0x14b0, 0xe5df, 0x1364, 0xfa7f, 0x1, 0x1);
        gbc.writeMem(0x5639, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7f23, gbc.sp());
        EXPECT(0x563b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 03B3
        gbc.setState(0x52ab, 0xcb9d, 0xa970, 0xb069, 0x205c, 0x3d37, 0x0, 0x0);
        gbc.writeMem(0x52ab, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcb9d, gbc.sp());
        EXPECT(0x52ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 03B4
        gbc.setState(0x9e3a, 0xe241, 0x4e60, 0xfd84, 0x8fed, 0xa07b, 0x0, 0x1);
        gbc.writeMem(0x9e3a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe241, gbc.sp());
        EXPECT(0x9e3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e3a));
        EXPECT(0x2f, gbc.readMem(0x9e3b));
        // CB 2F 03B5
        gbc.setState(0x8451, 0xac85, 0x85d0, 0x8117, 0x4a76, 0xcf4e, 0x0, 0x0);
        gbc.writeMem(0x8451, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xac85, gbc.sp());
        EXPECT(0x8453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8451));
        EXPECT(0x2f, gbc.readMem(0x8452));
        // CB 2F 03B7
        gbc.setState(0x3215, 0x2ad2, 0xcb50, 0x9f3a, 0xe871, 0x21b2, 0x0, 0x1);
        gbc.writeMem(0x3215, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2ad2, gbc.sp());
        EXPECT(0x3217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 03B8
        gbc.setState(0x7e61, 0x5b90, 0x5b70, 0x1523, 0x8fe0, 0x47d2, 0x0, 0x0);
        gbc.writeMem(0x7e61, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5b90, gbc.sp());
        EXPECT(0x7e63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 03B9
        gbc.setState(0x95f6, 0xfdd8, 0xdec0, 0xb587, 0x5640, 0x3401, 0x0, 0x0);
        gbc.writeMem(0x95f6, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xfdd8, gbc.sp());
        EXPECT(0x95f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f6));
        EXPECT(0x2f, gbc.readMem(0x95f7));
        // CB 2F 03BA
        gbc.setState(0x8281, 0x8e82, 0x37e0, 0xbe8d, 0x11f6, 0x6a88, 0x1, 0x1);
        gbc.writeMem(0x8281, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8e82, gbc.sp());
        EXPECT(0x8283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8281));
        EXPECT(0x2f, gbc.readMem(0x8282));
        // CB 2F 03BB
        gbc.setState(0xec52, 0x6742, 0xd7c0, 0xc130, 0xf3a4, 0x706e, 0x0, 0x1);
        gbc.writeMem(0xec52, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6742, gbc.sp());
        EXPECT(0xec54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec52));
        EXPECT(0x2f, gbc.readMem(0xec53));
        // CB 2F 03BC
        gbc.setState(0x4cd7, 0x7810, 0xd820, 0x1de5, 0x302d, 0x67e1, 0x0, 0x1);
        gbc.writeMem(0x4cd7, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7810, gbc.sp());
        EXPECT(0x4cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 03BD
        gbc.setState(0x6c0c, 0x5802, 0x2bc0, 0x964b, 0x4eda, 0xe3fa, 0x0, 0x0);
        gbc.writeMem(0x6c0c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5802, gbc.sp());
        EXPECT(0x6c0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 03BF
        gbc.setState(0x82e1, 0x63b0, 0xcbb0, 0x3bac, 0xbe04, 0x8965, 0x0, 0x1);
        gbc.writeMem(0x82e1, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x63b0, gbc.sp());
        EXPECT(0x82e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e1));
        EXPECT(0x2f, gbc.readMem(0x82e2));
        // CB 2F 03C0
        gbc.setState(0x3247, 0x7dc9, 0x2990, 0x2a06, 0xb371, 0x29e6, 0x1, 0x0);
        gbc.writeMem(0x3247, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7dc9, gbc.sp());
        EXPECT(0x3249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 03C1
        gbc.setState(0x3dcd, 0x7461, 0x4d00, 0xf638, 0x8e5f, 0x7685, 0x1, 0x1);
        gbc.writeMem(0x3dcd, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7461, gbc.sp());
        EXPECT(0x3dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 03C2
        gbc.setState(0x7760, 0xc564, 0x15a0, 0xef06, 0x8bcc, 0x359a, 0x0, 0x0);
        gbc.writeMem(0x7760, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc564, gbc.sp());
        EXPECT(0x7762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 03C3
        gbc.setState(0x691c, 0xbfd6, 0xa240, 0x4187, 0x2ade, 0xca56, 0x0, 0x0);
        gbc.writeMem(0x691c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbfd6, gbc.sp());
        EXPECT(0x691e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 03C4
        gbc.setState(0x693f, 0x19a, 0x8060, 0x92af, 0xd72c, 0x49fc, 0x1, 0x0);
        gbc.writeMem(0x693f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x19a, gbc.sp());
        EXPECT(0x6941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 03C5
        gbc.setState(0x2df7, 0x7606, 0xae20, 0x660d, 0x1c19, 0x8af8, 0x0, 0x0);
        gbc.writeMem(0x2df7, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7606, gbc.sp());
        EXPECT(0x2df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 03C6
        gbc.setState(0x1127, 0x6da1, 0x8fd0, 0xb8c7, 0x1d68, 0xe642, 0x0, 0x1);
        gbc.writeMem(0x1127, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6da1, gbc.sp());
        EXPECT(0x1129, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 03C7
        gbc.setState(0x3b3c, 0xd4fe, 0xb380, 0xeace, 0x9e3, 0x2f4c, 0x0, 0x1);
        gbc.writeMem(0x3b3c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd4fe, gbc.sp());
        EXPECT(0x3b3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 03C8
        gbc.setState(0xec38, 0x66fb, 0xee10, 0xac92, 0x7c13, 0x9ef3, 0x1, 0x0);
        gbc.writeMem(0xec38, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x66fb, gbc.sp());
        EXPECT(0xec3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec38));
        EXPECT(0x2f, gbc.readMem(0xec39));
        // CB 2F 03C9
        gbc.setState(0xe28b, 0x5b2b, 0xf4e0, 0x26d6, 0x1783, 0xcd18, 0x0, 0x0);
        gbc.writeMem(0xe28b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5b2b, gbc.sp());
        EXPECT(0xe28d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe28b));
        EXPECT(0x2f, gbc.readMem(0xe28c));
        // CB 2F 03CA
        gbc.setState(0xee68, 0x9b24, 0xde00, 0x9f5e, 0xe3e5, 0xb1bc, 0x1, 0x0);
        gbc.writeMem(0xee68, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9b24, gbc.sp());
        EXPECT(0xee6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee68));
        EXPECT(0x2f, gbc.readMem(0xee69));
        // CB 2F 03CB
        gbc.setState(0x5165, 0xac36, 0x97f0, 0x4b76, 0xf3dd, 0x1831, 0x1, 0x1);
        gbc.writeMem(0x5165, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xac36, gbc.sp());
        EXPECT(0x5167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 03CC
        gbc.setState(0x9024, 0xbacb, 0x1ba0, 0xf8ba, 0x3683, 0xd639, 0x0, 0x1);
        gbc.writeMem(0x9024, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbacb, gbc.sp());
        EXPECT(0x9026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9024));
        EXPECT(0x2f, gbc.readMem(0x9025));
        // CB 2F 03CD
        gbc.setState(0x548, 0xd29, 0x62b0, 0x8887, 0x67ef, 0x83d7, 0x0, 0x1);
        gbc.writeMem(0x548, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd29, gbc.sp());
        EXPECT(0x54a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 03CE
        gbc.setState(0x111a, 0x59d6, 0x86f0, 0x60ed, 0x8bc1, 0x3dd1, 0x1, 0x0);
        gbc.writeMem(0x111a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x59d6, gbc.sp());
        EXPECT(0x111c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 03CF
        gbc.setState(0x4e28, 0xff9e, 0xd9e0, 0x383a, 0x715b, 0xdff5, 0x1, 0x0);
        gbc.writeMem(0x4e28, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xff9e, gbc.sp());
        EXPECT(0x4e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 03D0
        gbc.setState(0xe5a, 0xc65, 0x8670, 0x6005, 0x87, 0x32b7, 0x0, 0x1);
        gbc.writeMem(0xe5a, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc65, gbc.sp());
        EXPECT(0xe5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 03D1
        gbc.setState(0x5124, 0xe5fa, 0xd2d0, 0xa427, 0x233d, 0x7267, 0x0, 0x0);
        gbc.writeMem(0x5124, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe5fa, gbc.sp());
        EXPECT(0x5126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 03D2
        gbc.setState(0xcfd, 0x988a, 0x3e40, 0x8eb, 0xe1e0, 0x87a4, 0x1, 0x1);
        gbc.writeMem(0xcfd, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x988a, gbc.sp());
        EXPECT(0xcff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 03D3
        gbc.setState(0xdab3, 0x7dae, 0x5400, 0x5cdc, 0xbada, 0x5893, 0x1, 0x1);
        gbc.writeMem(0xdab3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7dae, gbc.sp());
        EXPECT(0xdab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdab3));
        EXPECT(0x2f, gbc.readMem(0xdab4));
        // CB 2F 03D4
        gbc.setState(0x8958, 0x5163, 0xd110, 0x9c91, 0x7860, 0x9c6e, 0x1, 0x1);
        gbc.writeMem(0x8958, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5163, gbc.sp());
        EXPECT(0x895a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8958));
        EXPECT(0x2f, gbc.readMem(0x8959));
        // CB 2F 03D5
        gbc.setState(0xca4f, 0x5288, 0xe500, 0x574c, 0xe1ba, 0x7935, 0x0, 0x1);
        gbc.writeMem(0xca4f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5288, gbc.sp());
        EXPECT(0xca51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca4f));
        EXPECT(0x2f, gbc.readMem(0xca50));
        // CB 2F 03D6
        gbc.setState(0x3064, 0x6bd6, 0xde00, 0x16a5, 0xee4a, 0x13f7, 0x0, 0x0);
        gbc.writeMem(0x3064, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6bd6, gbc.sp());
        EXPECT(0x3066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 03D7
        gbc.setState(0xb1f, 0x9361, 0x34e0, 0xcc31, 0x668b, 0x535f, 0x0, 0x1);
        gbc.writeMem(0xb1f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9361, gbc.sp());
        EXPECT(0xb21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 03D8
        gbc.setState(0xdca3, 0xb2ac, 0x9020, 0x311c, 0x413f, 0xeb05, 0x0, 0x1);
        gbc.writeMem(0xdca3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb2ac, gbc.sp());
        EXPECT(0xdca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdca3));
        EXPECT(0x2f, gbc.readMem(0xdca4));
        // CB 2F 03D9
        gbc.setState(0xd902, 0x9224, 0xb2a0, 0xf5e6, 0xd46b, 0x5c94, 0x0, 0x1);
        gbc.writeMem(0xd902, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9224, gbc.sp());
        EXPECT(0xd904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd902));
        EXPECT(0x2f, gbc.readMem(0xd903));
        // CB 2F 03DA
        gbc.setState(0x22a3, 0x468b, 0xf7c0, 0x67cb, 0x3e58, 0xb568, 0x0, 0x0);
        gbc.writeMem(0x22a3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x468b, gbc.sp());
        EXPECT(0x22a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 03DB
        gbc.setState(0x43af, 0xce79, 0x5a30, 0x83c2, 0xb2c5, 0xdadd, 0x1, 0x0);
        gbc.writeMem(0x43af, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xce79, gbc.sp());
        EXPECT(0x43b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 03DC
        gbc.setState(0x2672, 0x4279, 0x1a20, 0xf051, 0x122, 0x88a3, 0x0, 0x1);
        gbc.writeMem(0x2672, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4279, gbc.sp());
        EXPECT(0x2674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 03DD
        gbc.setState(0x7d5c, 0xf22f, 0xb050, 0xbd90, 0x4db, 0xd59, 0x1, 0x1);
        gbc.writeMem(0x7d5c, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf22f, gbc.sp());
        EXPECT(0x7d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 03DE
        gbc.setState(0xc5d9, 0x52a6, 0x9970, 0x41d9, 0x5bff, 0xbef2, 0x1, 0x1);
        gbc.writeMem(0xc5d9, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x52a6, gbc.sp());
        EXPECT(0xc5db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5d9));
        EXPECT(0x2f, gbc.readMem(0xc5da));
        // CB 2F 03DF
        gbc.setState(0xa5f3, 0xf7d6, 0x2e90, 0xe296, 0xabc5, 0x4cdb, 0x0, 0x1);
        gbc.writeMem(0xa5f3, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf7d6, gbc.sp());
        EXPECT(0xa5f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5f3));
        EXPECT(0x2f, gbc.readMem(0xa5f4));
        // CB 2F 03E0
        gbc.setState(0x856, 0xc389, 0x3800, 0xd6c, 0xbfc0, 0xacb8, 0x0, 0x0);
        gbc.writeMem(0x856, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc389, gbc.sp());
        EXPECT(0x858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 03E1
        gbc.setState(0x517b, 0x1379, 0x2380, 0xb9ba, 0xb735, 0x77c2, 0x1, 0x1);
        gbc.writeMem(0x517b, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1379, gbc.sp());
        EXPECT(0x517d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 03E2
        gbc.setState(0xa6fc, 0x8342, 0x2360, 0xbfa, 0xb420, 0x421c, 0x1, 0x1);
        gbc.writeMem(0xa6fc, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8342, gbc.sp());
        EXPECT(0xa6fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6fc));
        EXPECT(0x2f, gbc.readMem(0xa6fd));
        // CB 2F 03E3
        gbc.setState(0xbe97, 0x45f7, 0x75c0, 0x902b, 0x9b5, 0xed70, 0x1, 0x1);
        gbc.writeMem(0xbe97, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x45f7, gbc.sp());
        EXPECT(0xbe99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe97));
        EXPECT(0x2f, gbc.readMem(0xbe98));
        // CB 2F 03E4
        gbc.setState(0x1143, 0x1408, 0x4600, 0xc734, 0x9099, 0x94a5, 0x1, 0x0);
        gbc.writeMem(0x1143, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1408, gbc.sp());
        EXPECT(0x1145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2F 03E5
        gbc.setState(0x9b1f, 0x16f, 0x4fd0, 0x387e, 0x6f27, 0x4d5f, 0x1, 0x0);
        gbc.writeMem(0x9b1f, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x16f, gbc.sp());
        EXPECT(0x9b21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b1f));
        EXPECT(0x2f, gbc.readMem(0x9b20));
        // CB 2F 03E6
        gbc.setState(0x2203, 0xf6c8, 0x3d50, 0x761c, 0x6500, 0x75d2, 0x1, 0x0);
        gbc.writeMem(0x2203, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf6c8, gbc.sp());
        EXPECT(0x2205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2F 03E7
        gbc.setState(0x1f50, 0xd850, 0x4f40, 0xf347, 0x5902, 0x6563, 0x0, 0x1);
        gbc.writeMem(0x1f50, { 0xcb, 0x2f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd850, gbc.sp());
        EXPECT(0x1f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
