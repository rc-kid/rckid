    TEST(gbcemu, opcode_19) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 19 0001
        gbc.setState(0xd508, 0x3cdc, 0xa010, 0x13ec, 0x3ee8, 0xc9f6, 0x0, 0x1);
        gbc.writeMem(0xd508, { 0x19 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3cdc, gbc.sp());
        EXPECT(0xd509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd508));
        // 19 0002
        gbc.setState(0xb23f, 0x4e54, 0x8e80, 0xddd6, 0xc41b, 0x1e13, 0x0, 0x1);
        gbc.writeMem(0xb23f, { 0x19 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4e54, gbc.sp());
        EXPECT(0xb240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb23f));
        // 19 0003
        gbc.setState(0x402f, 0xecab, 0x5080, 0xe3b3, 0xa91d, 0xee93, 0x0, 0x1);
        gbc.writeMem(0x402f, { 0x19 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xecab, gbc.sp());
        EXPECT(0x4030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0004
        gbc.setState(0x33dc, 0xa823, 0x8420, 0x37de, 0xe607, 0xa99c, 0x0, 0x0);
        gbc.writeMem(0x33dc, { 0x19 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa823, gbc.sp());
        EXPECT(0x33dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0005
        gbc.setState(0x1727, 0xb6ca, 0xfa80, 0xbbe, 0xccf2, 0xc6c7, 0x0, 0x0);
        gbc.writeMem(0x1727, { 0x19 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb6ca, gbc.sp());
        EXPECT(0x1728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0006
        gbc.setState(0x96be, 0xd38e, 0x89f0, 0xdd85, 0x74b7, 0x6825, 0x0, 0x1);
        gbc.writeMem(0x96be, { 0x19 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd38e, gbc.sp());
        EXPECT(0x96bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x96be));
        // 19 0007
        gbc.setState(0x6d2c, 0x5e6d, 0x2d10, 0x3232, 0xfdd9, 0x4158, 0x1, 0x0);
        gbc.writeMem(0x6d2c, { 0x19 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5e6d, gbc.sp());
        EXPECT(0x6d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0008
        gbc.setState(0x6be4, 0x5c59, 0xea90, 0x68b1, 0x1d34, 0xc314, 0x1, 0x0);
        gbc.writeMem(0x6be4, { 0x19 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5c59, gbc.sp());
        EXPECT(0x6be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0009
        gbc.setState(0x744a, 0xd1b1, 0x79f0, 0x7077, 0x44e4, 0x9f31, 0x0, 0x0);
        gbc.writeMem(0x744a, { 0x19 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd1b1, gbc.sp());
        EXPECT(0x744b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 000A
        gbc.setState(0x72d4, 0x333d, 0x1e60, 0xa016, 0xa7b8, 0x4bbb, 0x0, 0x0);
        gbc.writeMem(0x72d4, { 0x19 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x333d, gbc.sp());
        EXPECT(0x72d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 000B
        gbc.setState(0x262d, 0x4ee4, 0x68c0, 0x9701, 0x47b1, 0x834d, 0x0, 0x1);
        gbc.writeMem(0x262d, { 0x19 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4ee4, gbc.sp());
        EXPECT(0x262e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 000D
        gbc.setState(0x487a, 0x79a6, 0x1970, 0x71c5, 0xaa52, 0x34fb, 0x1, 0x0);
        gbc.writeMem(0x487a, { 0x19 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x79a6, gbc.sp());
        EXPECT(0x487b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 000E
        gbc.setState(0x9828, 0x4b63, 0xe290, 0xc56f, 0x5fa5, 0x3a00, 0x1, 0x0);
        gbc.writeMem(0x9828, { 0x19 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4b63, gbc.sp());
        EXPECT(0x9829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9828));
        // 19 000F
        gbc.setState(0xd7b5, 0x2f05, 0x4920, 0xd5aa, 0xad47, 0x3be9, 0x0, 0x1);
        gbc.writeMem(0xd7b5, { 0x19 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2f05, gbc.sp());
        EXPECT(0xd7b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd7b5));
        // 19 0010
        gbc.setState(0x2221, 0xc891, 0xcfb0, 0xd3de, 0x6816, 0x1210, 0x0, 0x0);
        gbc.writeMem(0x2221, { 0x19 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc891, gbc.sp());
        EXPECT(0x2222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0011
        gbc.setState(0x52fc, 0xd67, 0x700, 0x1a0f, 0x59bd, 0xe3b1, 0x1, 0x0);
        gbc.writeMem(0x52fc, { 0x19 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd67, gbc.sp());
        EXPECT(0x52fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0012
        gbc.setState(0x2fb7, 0x7c04, 0x7bf0, 0x3ea, 0x2462, 0xdbc5, 0x1, 0x1);
        gbc.writeMem(0x2fb7, { 0x19 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7c04, gbc.sp());
        EXPECT(0x2fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0014
        gbc.setState(0xd813, 0xbe66, 0x5f10, 0x1967, 0x224a, 0x724b, 0x0, 0x1);
        gbc.writeMem(0xd813, { 0x19 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbe66, gbc.sp());
        EXPECT(0xd814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd813));
        // 19 0015
        gbc.setState(0x6a46, 0xfb71, 0x5e90, 0x19b1, 0xb0ae, 0xbff2, 0x1, 0x0);
        gbc.writeMem(0x6a46, { 0x19 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfb71, gbc.sp());
        EXPECT(0x6a47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0016
        gbc.setState(0xe55a, 0x7847, 0xe790, 0x9fa2, 0x2f60, 0x7873, 0x1, 0x0);
        gbc.writeMem(0xe55a, { 0x19 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7847, gbc.sp());
        EXPECT(0xe55b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe55a));
        // 19 0017
        gbc.setState(0x5ecd, 0x5f49, 0xd870, 0x9a91, 0x92b, 0xed0a, 0x0, 0x1);
        gbc.writeMem(0x5ecd, { 0x19 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5f49, gbc.sp());
        EXPECT(0x5ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0018
        gbc.setState(0x9167, 0xb7, 0xfa60, 0x98a6, 0xe792, 0x1a66, 0x1, 0x0);
        gbc.writeMem(0x9167, { 0x19 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb7, gbc.sp());
        EXPECT(0x9168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9167));
        // 19 0019
        gbc.setState(0xe2eb, 0x4cfd, 0xa700, 0x1588, 0xa1ab, 0x552c, 0x1, 0x1);
        gbc.writeMem(0xe2eb, { 0x19 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4cfd, gbc.sp());
        EXPECT(0xe2ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe2eb));
        // 19 001A
        gbc.setState(0x45e, 0x4e7a, 0x6d90, 0x48b6, 0x6826, 0xff9f, 0x1, 0x1);
        gbc.writeMem(0x45e, { 0x19 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4e7a, gbc.sp());
        EXPECT(0x45f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 001B
        gbc.setState(0x1ac, 0xa870, 0x4c40, 0xeb1a, 0xae4e, 0x5ab4, 0x1, 0x1);
        gbc.writeMem(0x1ac, { 0x19 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa870, gbc.sp());
        EXPECT(0x1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 001C
        gbc.setState(0x4aa8, 0x3660, 0x9540, 0xc36c, 0x78ee, 0x5d9e, 0x0, 0x1);
        gbc.writeMem(0x4aa8, { 0x19 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3660, gbc.sp());
        EXPECT(0x4aa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 001D
        gbc.setState(0x759f, 0xdb85, 0xf060, 0x3775, 0xa83d, 0xbe0a, 0x1, 0x0);
        gbc.writeMem(0x759f, { 0x19 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xdb85, gbc.sp());
        EXPECT(0x75a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 001E
        gbc.setState(0xe976, 0xb3e9, 0xe590, 0xe478, 0x10fc, 0xa623, 0x1, 0x0);
        gbc.writeMem(0xe976, { 0x19 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb3e9, gbc.sp());
        EXPECT(0xe977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe976));
        // 19 001F
        gbc.setState(0xed4b, 0x98f6, 0x8420, 0x8290, 0x605c, 0xcaea, 0x1, 0x1);
        gbc.writeMem(0xed4b, { 0x19 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x98f6, gbc.sp());
        EXPECT(0xed4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xed4b));
        // 19 0020
        gbc.setState(0x729e, 0xb06e, 0x7040, 0xc722, 0x25b2, 0x6811, 0x0, 0x1);
        gbc.writeMem(0x729e, { 0x19 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb06e, gbc.sp());
        EXPECT(0x729f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0021
        gbc.setState(0x9840, 0x7149, 0x7a60, 0x9f8, 0x8c77, 0x1787, 0x0, 0x1);
        gbc.writeMem(0x9840, { 0x19 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7149, gbc.sp());
        EXPECT(0x9841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9840));
        // 19 0022
        gbc.setState(0xc2c1, 0x2692, 0xa090, 0x68ae, 0x1797, 0x4cd, 0x1, 0x0);
        gbc.writeMem(0xc2c1, { 0x19 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2692, gbc.sp());
        EXPECT(0xc2c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc2c1));
        // 19 0023
        gbc.setState(0x130a, 0xe7f1, 0xf180, 0x39bf, 0xc37, 0xfeb0, 0x1, 0x1);
        gbc.writeMem(0x130a, { 0x19 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe7f1, gbc.sp());
        EXPECT(0x130b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0024
        gbc.setState(0xb88c, 0x3365, 0xe850, 0xd67, 0x95f2, 0x3b19, 0x1, 0x0);
        gbc.writeMem(0xb88c, { 0x19 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3365, gbc.sp());
        EXPECT(0xb88d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb88c));
        // 19 0025
        gbc.setState(0x6fdb, 0x249e, 0x5460, 0x8134, 0xde0a, 0x91a, 0x0, 0x1);
        gbc.writeMem(0x6fdb, { 0x19 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x249e, gbc.sp());
        EXPECT(0x6fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0026
        gbc.setState(0xc7a4, 0x57d3, 0xb410, 0x743a, 0x5f92, 0x3122, 0x1, 0x1);
        gbc.writeMem(0xc7a4, { 0x19 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x57d3, gbc.sp());
        EXPECT(0xc7a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc7a4));
        // 19 0028
        gbc.setState(0x7e93, 0x967a, 0xfdd0, 0x6761, 0x18c7, 0xea3a, 0x1, 0x1);
        gbc.writeMem(0x7e93, { 0x19 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x967a, gbc.sp());
        EXPECT(0x7e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0029
        gbc.setState(0xa3da, 0xfedf, 0xce10, 0x9797, 0x8a0f, 0x1653, 0x0, 0x0);
        gbc.writeMem(0xa3da, { 0x19 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfedf, gbc.sp());
        EXPECT(0xa3db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa3da));
        // 19 002A
        gbc.setState(0x1ef9, 0x5f2a, 0x3510, 0xeb7a, 0xc0f7, 0xf9b3, 0x1, 0x0);
        gbc.writeMem(0x1ef9, { 0x19 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5f2a, gbc.sp());
        EXPECT(0x1efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 002B
        gbc.setState(0x7180, 0x7c7c, 0x36d0, 0x7da2, 0xba7b, 0x6b26, 0x0, 0x0);
        gbc.writeMem(0x7180, { 0x19 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7c7c, gbc.sp());
        EXPECT(0x7181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 002C
        gbc.setState(0x89a2, 0x8781, 0xb4a0, 0x6987, 0x131f, 0x6ba6, 0x1, 0x0);
        gbc.writeMem(0x89a2, { 0x19 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8781, gbc.sp());
        EXPECT(0x89a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x89a2));
        // 19 002D
        gbc.setState(0x1ac, 0x987b, 0xfbb0, 0x54cc, 0x70d4, 0x26e4, 0x1, 0x1);
        gbc.writeMem(0x1ac, { 0x19 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x987b, gbc.sp());
        EXPECT(0x1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 002E
        gbc.setState(0xc10b, 0xfc5e, 0x85a0, 0x2fba, 0x8e9b, 0xb8c0, 0x0, 0x0);
        gbc.writeMem(0xc10b, { 0x19 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xfc5e, gbc.sp());
        EXPECT(0xc10c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc10b));
        // 19 002F
        gbc.setState(0xa58d, 0xf5f0, 0xe9b0, 0xf448, 0x705, 0xb6d6, 0x0, 0x0);
        gbc.writeMem(0xa58d, { 0x19 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf5f0, gbc.sp());
        EXPECT(0xa58e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa58d));
        // 19 0030
        gbc.setState(0xa068, 0x6e43, 0xe850, 0xcf27, 0xf8cc, 0x1fa7, 0x0, 0x1);
        gbc.writeMem(0xa068, { 0x19 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6e43, gbc.sp());
        EXPECT(0xa069, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa068));
        // 19 0031
        gbc.setState(0xa153, 0xf793, 0x1bb0, 0x5dde, 0x8c96, 0x72f4, 0x1, 0x1);
        gbc.writeMem(0xa153, { 0x19 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf793, gbc.sp());
        EXPECT(0xa154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa153));
        // 19 0032
        gbc.setState(0x6602, 0x5145, 0x8070, 0xf39d, 0x533a, 0x4df4, 0x1, 0x0);
        gbc.writeMem(0x6602, { 0x19 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5145, gbc.sp());
        EXPECT(0x6603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0034
        gbc.setState(0x109c, 0x26ad, 0xbee0, 0x28e1, 0xa878, 0x9de6, 0x1, 0x1);
        gbc.writeMem(0x109c, { 0x19 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x26ad, gbc.sp());
        EXPECT(0x109d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0036
        gbc.setState(0x8b93, 0x31ad, 0x8980, 0xfb48, 0x1f69, 0x5f08, 0x0, 0x0);
        gbc.writeMem(0x8b93, { 0x19 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x31ad, gbc.sp());
        EXPECT(0x8b94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8b93));
        // 19 0037
        gbc.setState(0xbbdd, 0x5e47, 0x7fd0, 0xfd67, 0xcad, 0x706a, 0x1, 0x1);
        gbc.writeMem(0xbbdd, { 0x19 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5e47, gbc.sp());
        EXPECT(0xbbde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbbdd));
        // 19 0038
        gbc.setState(0x78cc, 0x85ef, 0x9ec0, 0x7fac, 0x93c5, 0x378b, 0x0, 0x0);
        gbc.writeMem(0x78cc, { 0x19 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x85ef, gbc.sp());
        EXPECT(0x78cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0039
        gbc.setState(0x99e7, 0xaea3, 0x830, 0x23ad, 0xc021, 0x2cc0, 0x1, 0x0);
        gbc.writeMem(0x99e7, { 0x19 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xaea3, gbc.sp());
        EXPECT(0x99e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x99e7));
        // 19 003A
        gbc.setState(0x9473, 0xd029, 0x86e0, 0x6555, 0xdc3a, 0xcbbb, 0x1, 0x1);
        gbc.writeMem(0x9473, { 0x19 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd029, gbc.sp());
        EXPECT(0x9474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9473));
        // 19 003B
        gbc.setState(0x249e, 0xfcde, 0x9b10, 0x118f, 0x9ba8, 0xf0f1, 0x0, 0x1);
        gbc.writeMem(0x249e, { 0x19 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfcde, gbc.sp());
        EXPECT(0x249f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 003C
        gbc.setState(0x23c4, 0xf470, 0x61d0, 0x73db, 0x93cd, 0x14b2, 0x1, 0x0);
        gbc.writeMem(0x23c4, { 0x19 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf470, gbc.sp());
        EXPECT(0x23c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 003D
        gbc.setState(0x9ed2, 0x4082, 0xdd20, 0x7b3, 0xca98, 0xdaf, 0x0, 0x1);
        gbc.writeMem(0x9ed2, { 0x19 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4082, gbc.sp());
        EXPECT(0x9ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9ed2));
        // 19 003E
        gbc.setState(0x886f, 0x3fc5, 0xd230, 0x904b, 0xabf, 0x1b0, 0x1, 0x1);
        gbc.writeMem(0x886f, { 0x19 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3fc5, gbc.sp());
        EXPECT(0x8870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x886f));
        // 19 003F
        gbc.setState(0x2106, 0x5737, 0x220, 0x970e, 0xce71, 0x5fb8, 0x1, 0x0);
        gbc.writeMem(0x2106, { 0x19 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5737, gbc.sp());
        EXPECT(0x2107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0040
        gbc.setState(0x61b8, 0xb549, 0x10c0, 0x4357, 0x6ee7, 0x83af, 0x0, 0x0);
        gbc.writeMem(0x61b8, { 0x19 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb549, gbc.sp());
        EXPECT(0x61b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0041
        gbc.setState(0xed00, 0x94e0, 0x17b0, 0x1bae, 0x1e25, 0x9a67, 0x0, 0x1);
        gbc.writeMem(0xed00, { 0x19 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x94e0, gbc.sp());
        EXPECT(0xed01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xed00));
        // 19 0042
        gbc.setState(0x9e4e, 0xbba4, 0x3440, 0xf807, 0x60fa, 0x640e, 0x1, 0x0);
        gbc.writeMem(0x9e4e, { 0x19 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbba4, gbc.sp());
        EXPECT(0x9e4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9e4e));
        // 19 0043
        gbc.setState(0xba89, 0xb121, 0x2470, 0x590c, 0x3d9e, 0x9148, 0x0, 0x1);
        gbc.writeMem(0xba89, { 0x19 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb121, gbc.sp());
        EXPECT(0xba8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xba89));
        // 19 0044
        gbc.setState(0x8129, 0x5959, 0xec50, 0xd8b7, 0xd4d6, 0x6be0, 0x0, 0x0);
        gbc.writeMem(0x8129, { 0x19 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5959, gbc.sp());
        EXPECT(0x812a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8129));
        // 19 0045
        gbc.setState(0xe21d, 0xb8c0, 0x53d0, 0x826c, 0x10b9, 0xc9b8, 0x1, 0x1);
        gbc.writeMem(0xe21d, { 0x19 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb8c0, gbc.sp());
        EXPECT(0xe21e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe21d));
        // 19 0046
        gbc.setState(0x11ce, 0x7f43, 0x9050, 0x87dd, 0x1388, 0xed7f, 0x0, 0x0);
        gbc.writeMem(0x11ce, { 0x19 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7f43, gbc.sp());
        EXPECT(0x11cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0047
        gbc.setState(0xd516, 0xc885, 0x2240, 0x6e3e, 0xea19, 0x9383, 0x1, 0x0);
        gbc.writeMem(0xd516, { 0x19 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc885, gbc.sp());
        EXPECT(0xd517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd516));
        // 19 0048
        gbc.setState(0x104, 0x8dc7, 0x6910, 0x490, 0x5544, 0x4fae, 0x1, 0x1);
        gbc.writeMem(0x104, { 0x19 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8dc7, gbc.sp());
        EXPECT(0x105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0049
        gbc.setState(0x5c92, 0xb5a7, 0x66c0, 0x7297, 0xc893, 0x7950, 0x1, 0x1);
        gbc.writeMem(0x5c92, { 0x19 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb5a7, gbc.sp());
        EXPECT(0x5c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 004A
        gbc.setState(0x786d, 0x8f42, 0xb3b0, 0x6fc7, 0xb6a5, 0x2a33, 0x1, 0x1);
        gbc.writeMem(0x786d, { 0x19 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8f42, gbc.sp());
        EXPECT(0x786e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 004B
        gbc.setState(0x5934, 0xcd1d, 0xcea0, 0x3707, 0x9e20, 0x5e5d, 0x0, 0x1);
        gbc.writeMem(0x5934, { 0x19 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xcd1d, gbc.sp());
        EXPECT(0x5935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 004C
        gbc.setState(0x9b1f, 0x19b, 0x1ff0, 0x45ac, 0x2cfd, 0xd3d8, 0x1, 0x0);
        gbc.writeMem(0x9b1f, { 0x19 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x19b, gbc.sp());
        EXPECT(0x9b20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9b1f));
        // 19 004D
        gbc.setState(0x1ad8, 0x2f18, 0x5d10, 0x2d9a, 0x2380, 0xcf17, 0x1, 0x0);
        gbc.writeMem(0x1ad8, { 0x19 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2f18, gbc.sp());
        EXPECT(0x1ad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 004E
        gbc.setState(0xe918, 0x4ae2, 0x5510, 0x2bb1, 0xd7ca, 0xc162, 0x0, 0x1);
        gbc.writeMem(0xe918, { 0x19 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4ae2, gbc.sp());
        EXPECT(0xe919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe918));
        // 19 004F
        gbc.setState(0x2f53, 0x38ab, 0x8f40, 0xa078, 0x7fa7, 0x387f, 0x0, 0x1);
        gbc.writeMem(0x2f53, { 0x19 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x38ab, gbc.sp());
        EXPECT(0x2f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0051
        gbc.setState(0x2306, 0xac04, 0xfa60, 0xafd0, 0x5127, 0x58f7, 0x1, 0x1);
        gbc.writeMem(0x2306, { 0x19 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xac04, gbc.sp());
        EXPECT(0x2307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0052
        gbc.setState(0x7918, 0xb0d3, 0x7fd0, 0xf56e, 0x906e, 0x5c91, 0x1, 0x1);
        gbc.writeMem(0x7918, { 0x19 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb0d3, gbc.sp());
        EXPECT(0x7919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0053
        gbc.setState(0x10fa, 0x1f6a, 0x4540, 0xd0f9, 0x321f, 0xbad1, 0x1, 0x1);
        gbc.writeMem(0x10fa, { 0x19 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1f6a, gbc.sp());
        EXPECT(0x10fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0054
        gbc.setState(0x642d, 0xa117, 0x7360, 0x98cb, 0xe228, 0x665a, 0x1, 0x1);
        gbc.writeMem(0x642d, { 0x19 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa117, gbc.sp());
        EXPECT(0x642e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0055
        gbc.setState(0x9881, 0x7b01, 0x83e0, 0x6484, 0x982f, 0xfb89, 0x1, 0x1);
        gbc.writeMem(0x9881, { 0x19 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7b01, gbc.sp());
        EXPECT(0x9882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9881));
        // 19 0056
        gbc.setState(0xdac1, 0x6602, 0xd880, 0xfee2, 0xc0bb, 0x8026, 0x1, 0x1);
        gbc.writeMem(0xdac1, { 0x19 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6602, gbc.sp());
        EXPECT(0xdac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xdac1));
        // 19 0057
        gbc.setState(0x3578, 0x9772, 0x4800, 0x9a88, 0xdd67, 0x8cca, 0x0, 0x1);
        gbc.writeMem(0x3578, { 0x19 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9772, gbc.sp());
        EXPECT(0x3579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0058
        gbc.setState(0x349c, 0x6b37, 0x8dd0, 0x84cc, 0xac7f, 0x87be, 0x1, 0x1);
        gbc.writeMem(0x349c, { 0x19 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6b37, gbc.sp());
        EXPECT(0x349d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0059
        gbc.setState(0x5903, 0xd237, 0xc970, 0xed29, 0x3a58, 0x3fe, 0x0, 0x0);
        gbc.writeMem(0x5903, { 0x19 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd237, gbc.sp());
        EXPECT(0x5904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 005B
        gbc.setState(0x4d2b, 0x9508, 0x52a0, 0xe139, 0x518, 0xbc7, 0x1, 0x1);
        gbc.writeMem(0x4d2b, { 0x19 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9508, gbc.sp());
        EXPECT(0x4d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 005C
        gbc.setState(0x4816, 0xb8e7, 0xfe00, 0xdb94, 0xeb4a, 0xebbc, 0x0, 0x1);
        gbc.writeMem(0x4816, { 0x19 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb8e7, gbc.sp());
        EXPECT(0x4817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 005D
        gbc.setState(0x2ee3, 0x402, 0x3570, 0x2932, 0xbe1b, 0x7736, 0x0, 0x1);
        gbc.writeMem(0x2ee3, { 0x19 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x402, gbc.sp());
        EXPECT(0x2ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 005E
        gbc.setState(0x6fae, 0xcede, 0xc00, 0xd67d, 0x844, 0x9a7b, 0x1, 0x0);
        gbc.writeMem(0x6fae, { 0x19 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcede, gbc.sp());
        EXPECT(0x6faf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 005F
        gbc.setState(0x36f1, 0xe1e6, 0x6fd0, 0xdfbf, 0x166, 0x33c, 0x0, 0x0);
        gbc.writeMem(0x36f1, { 0x19 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe1e6, gbc.sp());
        EXPECT(0x36f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0060
        gbc.setState(0x59f5, 0xfb09, 0xa4f0, 0x994b, 0x1791, 0x21b0, 0x1, 0x0);
        gbc.writeMem(0x59f5, { 0x19 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xfb09, gbc.sp());
        EXPECT(0x59f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0061
        gbc.setState(0xb3a8, 0xaa28, 0xd60, 0xa4e4, 0x736, 0x913c, 0x1, 0x0);
        gbc.writeMem(0xb3a8, { 0x19 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xaa28, gbc.sp());
        EXPECT(0xb3a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb3a8));
        // 19 0062
        gbc.setState(0x32e, 0xfe23, 0x4aa0, 0x1728, 0xd73e, 0xa7e5, 0x1, 0x0);
        gbc.writeMem(0x32e, { 0x19 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xfe23, gbc.sp());
        EXPECT(0x32f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0064
        gbc.setState(0xba14, 0xa4d, 0xaa50, 0x1fec, 0xf00a, 0xfc1e, 0x0, 0x0);
        gbc.writeMem(0xba14, { 0x19 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa4d, gbc.sp());
        EXPECT(0xba15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xba14));
        // 19 0066
        gbc.setState(0x55eb, 0x6726, 0x4f00, 0xe62d, 0x670f, 0x3fbc, 0x1, 0x0);
        gbc.writeMem(0x55eb, { 0x19 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6726, gbc.sp());
        EXPECT(0x55ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0067
        gbc.setState(0xace4, 0x337, 0x8c10, 0x78b0, 0x405d, 0x721d, 0x1, 0x1);
        gbc.writeMem(0xace4, { 0x19 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x337, gbc.sp());
        EXPECT(0xace5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xace4));
        // 19 0068
        gbc.setState(0xd9a2, 0xf470, 0xfe60, 0xf6c5, 0x971e, 0xf0bb, 0x0, 0x1);
        gbc.writeMem(0xd9a2, { 0x19 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf470, gbc.sp());
        EXPECT(0xd9a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd9a2));
        // 19 0069
        gbc.setState(0x6862, 0xa1a, 0xbc90, 0x9e17, 0xba12, 0xe67f, 0x0, 0x1);
        gbc.writeMem(0x6862, { 0x19 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa1a, gbc.sp());
        EXPECT(0x6863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 006A
        gbc.setState(0x64ef, 0x4cf8, 0x1660, 0x6403, 0x7c7c, 0x51eb, 0x1, 0x0);
        gbc.writeMem(0x64ef, { 0x19 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4cf8, gbc.sp());
        EXPECT(0x64f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 006B
        gbc.setState(0xc17f, 0x61b0, 0xa710, 0xe1cf, 0x9f6a, 0x7ce, 0x0, 0x0);
        gbc.writeMem(0xc17f, { 0x19 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x61b0, gbc.sp());
        EXPECT(0xc180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc17f));
        // 19 006C
        gbc.setState(0xc13d, 0x36a, 0xfd20, 0x9273, 0xce1e, 0x247, 0x1, 0x0);
        gbc.writeMem(0xc13d, { 0x19 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x36a, gbc.sp());
        EXPECT(0xc13e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc13d));
        // 19 006D
        gbc.setState(0x76ec, 0x6666, 0x4920, 0x474d, 0xcf1f, 0x81c7, 0x1, 0x1);
        gbc.writeMem(0x76ec, { 0x19 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6666, gbc.sp());
        EXPECT(0x76ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 006E
        gbc.setState(0x4eb1, 0x5356, 0x6d20, 0xb6f, 0x31c7, 0x7315, 0x0, 0x0);
        gbc.writeMem(0x4eb1, { 0x19 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5356, gbc.sp());
        EXPECT(0x4eb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 006F
        gbc.setState(0xc672, 0xa860, 0x6f40, 0x68c, 0xc982, 0xee32, 0x0, 0x0);
        gbc.writeMem(0xc672, { 0x19 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa860, gbc.sp());
        EXPECT(0xc673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc672));
        // 19 0070
        gbc.setState(0xb7be, 0xf470, 0x9130, 0x175a, 0x4289, 0x6e7e, 0x1, 0x1);
        gbc.writeMem(0xb7be, { 0x19 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf470, gbc.sp());
        EXPECT(0xb7bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb7be));
        // 19 0071
        gbc.setState(0xe643, 0xa851, 0x7120, 0xf182, 0x48c5, 0x59ae, 0x1, 0x0);
        gbc.writeMem(0xe643, { 0x19 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa851, gbc.sp());
        EXPECT(0xe644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe643));
        // 19 0072
        gbc.setState(0x28e3, 0x680d, 0x2bd0, 0xc90, 0xe547, 0xe6f, 0x1, 0x0);
        gbc.writeMem(0x28e3, { 0x19 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x680d, gbc.sp());
        EXPECT(0x28e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0073
        gbc.setState(0xb6ca, 0x6b1e, 0xdd50, 0x8551, 0x1a55, 0xef3b, 0x1, 0x1);
        gbc.writeMem(0xb6ca, { 0x19 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6b1e, gbc.sp());
        EXPECT(0xb6cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb6ca));
        // 19 0074
        gbc.setState(0xa3ba, 0x52a8, 0xdbd0, 0xaffa, 0xa286, 0xb452, 0x0, 0x0);
        gbc.writeMem(0xa3ba, { 0x19 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x52a8, gbc.sp());
        EXPECT(0xa3bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa3ba));
        // 19 0075
        gbc.setState(0x46ca, 0xb69e, 0x5230, 0x6516, 0x5695, 0x427f, 0x0, 0x1);
        gbc.writeMem(0x46ca, { 0x19 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb69e, gbc.sp());
        EXPECT(0x46cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0076
        gbc.setState(0xdf0, 0xaae4, 0x30f0, 0x9c56, 0x6471, 0x2cba, 0x1, 0x0);
        gbc.writeMem(0xdf0, { 0x19 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xaae4, gbc.sp());
        EXPECT(0xdf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0077
        gbc.setState(0x9a0b, 0x2522, 0xb380, 0xde3e, 0x7f14, 0x8453, 0x1, 0x1);
        gbc.writeMem(0x9a0b, { 0x19 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2522, gbc.sp());
        EXPECT(0x9a0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9a0b));
        // 19 0078
        gbc.setState(0xbc51, 0x48d4, 0x7bd0, 0x1a5e, 0x22bb, 0x603, 0x0, 0x1);
        gbc.writeMem(0xbc51, { 0x19 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x48d4, gbc.sp());
        EXPECT(0xbc52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbc51));
        // 19 0079
        gbc.setState(0x8f44, 0xfab6, 0x6d00, 0x6230, 0x9382, 0x3c18, 0x1, 0x0);
        gbc.writeMem(0x8f44, { 0x19 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xfab6, gbc.sp());
        EXPECT(0x8f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8f44));
        // 19 007A
        gbc.setState(0x3811, 0xbf41, 0xfc80, 0xa970, 0x9089, 0xc202, 0x0, 0x1);
        gbc.writeMem(0x3811, { 0x19 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbf41, gbc.sp());
        EXPECT(0x3812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 007C
        gbc.setState(0xebd2, 0xdcf3, 0x1bd0, 0x6a67, 0x1996, 0x7621, 0x0, 0x1);
        gbc.writeMem(0xebd2, { 0x19 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdcf3, gbc.sp());
        EXPECT(0xebd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xebd2));
        // 19 007D
        gbc.setState(0xa1bc, 0x6872, 0x1ce0, 0x9fae, 0xb0d2, 0xfb31, 0x0, 0x0);
        gbc.writeMem(0xa1bc, { 0x19 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6872, gbc.sp());
        EXPECT(0xa1bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa1bc));
        // 19 007E
        gbc.setState(0xc22d, 0xfe47, 0xc990, 0xa3c7, 0xff19, 0x66d5, 0x0, 0x0);
        gbc.writeMem(0xc22d, { 0x19 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xfe47, gbc.sp());
        EXPECT(0xc22e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc22d));
        // 19 007F
        gbc.setState(0x1a02, 0x952f, 0x43b0, 0x1b12, 0x9074, 0x4845, 0x1, 0x0);
        gbc.writeMem(0x1a02, { 0x19 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x952f, gbc.sp());
        EXPECT(0x1a03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0080
        gbc.setState(0x6cc0, 0xbea1, 0xe350, 0x1806, 0x78fa, 0x68b8, 0x0, 0x1);
        gbc.writeMem(0x6cc0, { 0x19 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbea1, gbc.sp());
        EXPECT(0x6cc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0081
        gbc.setState(0x30f4, 0xe22c, 0x1540, 0x6f56, 0xde2f, 0x6c30, 0x0, 0x0);
        gbc.writeMem(0x30f4, { 0x19 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe22c, gbc.sp());
        EXPECT(0x30f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0082
        gbc.setState(0xad5a, 0x933c, 0xf6b0, 0x2275, 0xabb0, 0x83c4, 0x1, 0x0);
        gbc.writeMem(0xad5a, { 0x19 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x933c, gbc.sp());
        EXPECT(0xad5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xad5a));
        // 19 0083
        gbc.setState(0x273, 0xa6ce, 0x4160, 0x4314, 0xc0b3, 0x9595, 0x0, 0x1);
        gbc.writeMem(0x273, { 0x19 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa6ce, gbc.sp());
        EXPECT(0x274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0085
        gbc.setState(0xcadc, 0x2cf3, 0x9470, 0x8fee, 0xecc8, 0x979c, 0x1, 0x1);
        gbc.writeMem(0xcadc, { 0x19 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2cf3, gbc.sp());
        EXPECT(0xcadd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xcadc));
        // 19 0086
        gbc.setState(0x7ecc, 0x4193, 0xe720, 0x7c2, 0xfcc2, 0xd372, 0x1, 0x1);
        gbc.writeMem(0x7ecc, { 0x19 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4193, gbc.sp());
        EXPECT(0x7ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0088
        gbc.setState(0xafd9, 0xf248, 0x8bb0, 0x51bb, 0x72b7, 0x193, 0x1, 0x0);
        gbc.writeMem(0xafd9, { 0x19 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf248, gbc.sp());
        EXPECT(0xafda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xafd9));
        // 19 008A
        gbc.setState(0x3e47, 0x5f68, 0x2090, 0xf34b, 0xddf5, 0x54df, 0x1, 0x0);
        gbc.writeMem(0x3e47, { 0x19 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5f68, gbc.sp());
        EXPECT(0x3e48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 008B
        gbc.setState(0xd334, 0xe8ab, 0xff70, 0xc6be, 0x51af, 0x9616, 0x1, 0x1);
        gbc.writeMem(0xd334, { 0x19 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe8ab, gbc.sp());
        EXPECT(0xd335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd334));
        // 19 008C
        gbc.setState(0x82af, 0xfe12, 0x72e0, 0x734e, 0x2248, 0xe19e, 0x0, 0x1);
        gbc.writeMem(0x82af, { 0x19 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfe12, gbc.sp());
        EXPECT(0x82b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x82af));
        // 19 008D
        gbc.setState(0x555c, 0xb876, 0xa1f0, 0x4f9e, 0x720, 0xe013, 0x1, 0x1);
        gbc.writeMem(0x555c, { 0x19 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb876, gbc.sp());
        EXPECT(0x555d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 008E
        gbc.setState(0xc8f, 0x53fb, 0x6c90, 0x80f6, 0xf625, 0x8da0, 0x1, 0x1);
        gbc.writeMem(0xc8f, { 0x19 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x53fb, gbc.sp());
        EXPECT(0xc90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 008F
        gbc.setState(0x6bed, 0x2754, 0xfeb0, 0x888, 0x1ce2, 0x10b8, 0x1, 0x1);
        gbc.writeMem(0x6bed, { 0x19 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2754, gbc.sp());
        EXPECT(0x6bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0090
        gbc.setState(0x75c9, 0xb008, 0x4ab0, 0xdec3, 0xb958, 0x3021, 0x0, 0x1);
        gbc.writeMem(0x75c9, { 0x19 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb008, gbc.sp());
        EXPECT(0x75ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0091
        gbc.setState(0xa1fd, 0x2d16, 0x71f0, 0x387b, 0xed8a, 0x7283, 0x0, 0x1);
        gbc.writeMem(0xa1fd, { 0x19 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2d16, gbc.sp());
        EXPECT(0xa1fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa1fd));
        // 19 0092
        gbc.setState(0x4a16, 0xddd2, 0x13e0, 0x68b3, 0xac72, 0x2aab, 0x0, 0x0);
        gbc.writeMem(0x4a16, { 0x19 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xddd2, gbc.sp());
        EXPECT(0x4a17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0093
        gbc.setState(0x3cf, 0xa09a, 0xb470, 0xe073, 0xdbfc, 0x3332, 0x1, 0x0);
        gbc.writeMem(0x3cf, { 0x19 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa09a, gbc.sp());
        EXPECT(0x3d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0094
        gbc.setState(0xd6d4, 0xb7c5, 0x7ef0, 0xe6f1, 0x42f0, 0xb784, 0x0, 0x1);
        gbc.writeMem(0xd6d4, { 0x19 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb7c5, gbc.sp());
        EXPECT(0xd6d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd6d4));
        // 19 0095
        gbc.setState(0xa0b6, 0xb9cf, 0xd7e0, 0xb8ab, 0xc748, 0xb181, 0x0, 0x0);
        gbc.writeMem(0xa0b6, { 0x19 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb9cf, gbc.sp());
        EXPECT(0xa0b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa0b6));
        // 19 0096
        gbc.setState(0xe5b8, 0xa61a, 0x44d0, 0x70bd, 0x100e, 0x85ce, 0x1, 0x0);
        gbc.writeMem(0xe5b8, { 0x19 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa61a, gbc.sp());
        EXPECT(0xe5b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe5b8));
        // 19 0097
        gbc.setState(0x9e4c, 0x3706, 0x4f00, 0x3a3a, 0x862f, 0x3f7b, 0x0, 0x1);
        gbc.writeMem(0x9e4c, { 0x19 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3706, gbc.sp());
        EXPECT(0x9e4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9e4c));
        // 19 0098
        gbc.setState(0xc9a0, 0x7145, 0x10f0, 0x2b33, 0x946c, 0x42dc, 0x1, 0x0);
        gbc.writeMem(0xc9a0, { 0x19 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7145, gbc.sp());
        EXPECT(0xc9a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc9a0));
        // 19 0099
        gbc.setState(0x1004, 0x6d56, 0x5fa0, 0x3e25, 0xa6c6, 0x2187, 0x0, 0x0);
        gbc.writeMem(0x1004, { 0x19 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6d56, gbc.sp());
        EXPECT(0x1005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 009A
        gbc.setState(0x1f6f, 0xd4ba, 0x26a0, 0x9fdf, 0xb3c, 0x1012, 0x1, 0x1);
        gbc.writeMem(0x1f6f, { 0x19 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd4ba, gbc.sp());
        EXPECT(0x1f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 009B
        gbc.setState(0x4a57, 0x264b, 0xded0, 0xe16a, 0x7d43, 0x7f78, 0x0, 0x0);
        gbc.writeMem(0x4a57, { 0x19 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x264b, gbc.sp());
        EXPECT(0x4a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 009C
        gbc.setState(0x5a31, 0xb602, 0x3870, 0xac56, 0x6383, 0xa8db, 0x0, 0x0);
        gbc.writeMem(0x5a31, { 0x19 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb602, gbc.sp());
        EXPECT(0x5a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 009D
        gbc.setState(0x6841, 0x4047, 0x650, 0x7514, 0x77ee, 0x3370, 0x0, 0x1);
        gbc.writeMem(0x6841, { 0x19 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4047, gbc.sp());
        EXPECT(0x6842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 009E
        gbc.setState(0x5528, 0x8a69, 0x17d0, 0x4892, 0xc6b9, 0xbdea, 0x0, 0x0);
        gbc.writeMem(0x5528, { 0x19 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8a69, gbc.sp());
        EXPECT(0x5529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 009F
        gbc.setState(0xac71, 0x3bc8, 0xc670, 0x78c2, 0x8a97, 0x2ae1, 0x0, 0x1);
        gbc.writeMem(0xac71, { 0x19 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3bc8, gbc.sp());
        EXPECT(0xac72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xac71));
        // 19 00A0
        gbc.setState(0xc15a, 0x8089, 0xbf0, 0xaebb, 0x2949, 0xfbd5, 0x1, 0x1);
        gbc.writeMem(0xc15a, { 0x19 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8089, gbc.sp());
        EXPECT(0xc15b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc15a));
        // 19 00A1
        gbc.setState(0x5550, 0x97f2, 0xa080, 0xff14, 0x5dbc, 0xde1d, 0x1, 0x1);
        gbc.writeMem(0x5550, { 0x19 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x97f2, gbc.sp());
        EXPECT(0x5551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00A2
        gbc.setState(0xe429, 0xdd8, 0xbaa0, 0xbfcd, 0x752c, 0xcf04, 0x0, 0x0);
        gbc.writeMem(0xe429, { 0x19 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdd8, gbc.sp());
        EXPECT(0xe42a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe429));
        // 19 00A3
        gbc.setState(0x739, 0xefe2, 0xf650, 0x899b, 0x8493, 0x88b4, 0x1, 0x1);
        gbc.writeMem(0x739, { 0x19 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xefe2, gbc.sp());
        EXPECT(0x73a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00A4
        gbc.setState(0x49ca, 0x801b, 0x4830, 0x7ee0, 0xa38a, 0xfdb1, 0x1, 0x0);
        gbc.writeMem(0x49ca, { 0x19 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x801b, gbc.sp());
        EXPECT(0x49cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00A5
        gbc.setState(0xa2b7, 0xe038, 0xf440, 0x622b, 0x4fec, 0xdfb8, 0x1, 0x0);
        gbc.writeMem(0xa2b7, { 0x19 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe038, gbc.sp());
        EXPECT(0xa2b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa2b7));
        // 19 00A6
        gbc.setState(0x73a5, 0xf2c2, 0xce50, 0xcf17, 0xa569, 0x8b3, 0x0, 0x1);
        gbc.writeMem(0x73a5, { 0x19 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf2c2, gbc.sp());
        EXPECT(0x73a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 00A7
        gbc.setState(0x18fc, 0x5551, 0xf270, 0xe723, 0xaae5, 0xef2d, 0x1, 0x0);
        gbc.writeMem(0x18fc, { 0x19 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5551, gbc.sp());
        EXPECT(0x18fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00A8
        gbc.setState(0xe485, 0x444b, 0x6290, 0xd39e, 0xb149, 0xe95b, 0x1, 0x1);
        gbc.writeMem(0xe485, { 0x19 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x444b, gbc.sp());
        EXPECT(0xe486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe485));
        // 19 00AA
        gbc.setState(0xa32e, 0xba30, 0xc3d0, 0x6ede, 0xd905, 0x7373, 0x0, 0x1);
        gbc.writeMem(0xa32e, { 0x19 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xba30, gbc.sp());
        EXPECT(0xa32f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa32e));
        // 19 00AB
        gbc.setState(0x8b39, 0xae61, 0xb330, 0xb4a3, 0x5474, 0x2088, 0x1, 0x1);
        gbc.writeMem(0x8b39, { 0x19 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xae61, gbc.sp());
        EXPECT(0x8b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8b39));
        // 19 00AC
        gbc.setState(0xb6c8, 0xc91f, 0xddd0, 0x366a, 0x634f, 0x68f7, 0x1, 0x1);
        gbc.writeMem(0xb6c8, { 0x19 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc91f, gbc.sp());
        EXPECT(0xb6c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb6c8));
        // 19 00AD
        gbc.setState(0x3638, 0xb044, 0x3ea0, 0x60db, 0x1c29, 0xf5cd, 0x0, 0x0);
        gbc.writeMem(0x3638, { 0x19 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb044, gbc.sp());
        EXPECT(0x3639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00AE
        gbc.setState(0x78ad, 0x728b, 0x23b0, 0x4c3, 0xfe8d, 0xcf40, 0x0, 0x0);
        gbc.writeMem(0x78ad, { 0x19 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x728b, gbc.sp());
        EXPECT(0x78ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00AF
        gbc.setState(0x40db, 0x855c, 0xfe0, 0x8d7b, 0xc917, 0x3e63, 0x0, 0x1);
        gbc.writeMem(0x40db, { 0x19 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x855c, gbc.sp());
        EXPECT(0x40dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00B0
        gbc.setState(0xbff7, 0x4ba9, 0xdbe0, 0xe671, 0x4521, 0x9db3, 0x0, 0x1);
        gbc.writeMem(0xbff7, { 0x19 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4ba9, gbc.sp());
        EXPECT(0xbff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbff7));
        // 19 00B1
        gbc.setState(0xca9a, 0x5cb3, 0xbb50, 0xe968, 0x24dd, 0x34a1, 0x1, 0x1);
        gbc.writeMem(0xca9a, { 0x19 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5cb3, gbc.sp());
        EXPECT(0xca9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xca9a));
        // 19 00B2
        gbc.setState(0x553f, 0x2d94, 0xfd0, 0x1e6, 0x1752, 0xe865, 0x0, 0x0);
        gbc.writeMem(0x553f, { 0x19 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2d94, gbc.sp());
        EXPECT(0x5540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 00B3
        gbc.setState(0x7184, 0x9486, 0xae90, 0x82f8, 0xc312, 0x9e71, 0x1, 0x0);
        gbc.writeMem(0x7184, { 0x19 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9486, gbc.sp());
        EXPECT(0x7185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00B4
        gbc.setState(0x592, 0x9bf6, 0x71c0, 0xc69b, 0x6479, 0x4d6e, 0x0, 0x0);
        gbc.writeMem(0x592, { 0x19 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9bf6, gbc.sp());
        EXPECT(0x593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 00B5
        gbc.setState(0xd709, 0x32ec, 0xd720, 0x19d3, 0x11c, 0x4ca2, 0x0, 0x0);
        gbc.writeMem(0xd709, { 0x19 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x32ec, gbc.sp());
        EXPECT(0xd70a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd709));
        // 19 00B6
        gbc.setState(0x6d6d, 0x4773, 0x2390, 0xd299, 0xb3f3, 0x4e45, 0x0, 0x0);
        gbc.writeMem(0x6d6d, { 0x19 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4773, gbc.sp());
        EXPECT(0x6d6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00B7
        gbc.setState(0xa508, 0x6c95, 0xca80, 0xe848, 0xd959, 0x4239, 0x0, 0x1);
        gbc.writeMem(0xa508, { 0x19 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6c95, gbc.sp());
        EXPECT(0xa509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa508));
        // 19 00B9
        gbc.setState(0xeca8, 0xc77e, 0x3ee0, 0xd09d, 0xc11a, 0xdf74, 0x0, 0x1);
        gbc.writeMem(0xeca8, { 0x19 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc77e, gbc.sp());
        EXPECT(0xeca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xeca8));
        // 19 00BA
        gbc.setState(0x68f0, 0xc380, 0xc740, 0x48f1, 0x44c3, 0xfe06, 0x1, 0x1);
        gbc.writeMem(0x68f0, { 0x19 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc380, gbc.sp());
        EXPECT(0x68f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00BB
        gbc.setState(0x6818, 0x3e77, 0xeaf0, 0x5a49, 0x238c, 0x73e4, 0x0, 0x1);
        gbc.writeMem(0x6818, { 0x19 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3e77, gbc.sp());
        EXPECT(0x6819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 00BC
        gbc.setState(0xa6c8, 0x9919, 0xf9d0, 0x4daf, 0x4f7b, 0x90d4, 0x0, 0x0);
        gbc.writeMem(0xa6c8, { 0x19 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9919, gbc.sp());
        EXPECT(0xa6c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa6c8));
        // 19 00BD
        gbc.setState(0xadf5, 0xb7ea, 0x53b0, 0xe427, 0xcd94, 0xf011, 0x0, 0x0);
        gbc.writeMem(0xadf5, { 0x19 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb7ea, gbc.sp());
        EXPECT(0xadf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xadf5));
        // 19 00BE
        gbc.setState(0xecda, 0xdc58, 0x1930, 0xdb12, 0xbad5, 0x646b, 0x0, 0x1);
        gbc.writeMem(0xecda, { 0x19 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xdc58, gbc.sp());
        EXPECT(0xecdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xecda));
        // 19 00BF
        gbc.setState(0x97b9, 0xf6df, 0xb00, 0xf857, 0xfb6c, 0x5cdf, 0x1, 0x1);
        gbc.writeMem(0x97b9, { 0x19 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf6df, gbc.sp());
        EXPECT(0x97ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x97b9));
        // 19 00C0
        gbc.setState(0xa6c0, 0xe4ef, 0x4060, 0x3906, 0xd231, 0xe8fb, 0x1, 0x1);
        gbc.writeMem(0xa6c0, { 0x19 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe4ef, gbc.sp());
        EXPECT(0xa6c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa6c0));
        // 19 00C1
        gbc.setState(0x4a4d, 0xfae2, 0x38b0, 0xd370, 0x6f7d, 0xc6bd, 0x0, 0x1);
        gbc.writeMem(0x4a4d, { 0x19 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfae2, gbc.sp());
        EXPECT(0x4a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00C2
        gbc.setState(0x89d9, 0xeed2, 0xf8b0, 0xb649, 0xfc37, 0x1aee, 0x1, 0x0);
        gbc.writeMem(0x89d9, { 0x19 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xeed2, gbc.sp());
        EXPECT(0x89da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x89d9));
        // 19 00C3
        gbc.setState(0x47d5, 0x87df, 0x5950, 0xd7d7, 0xc997, 0x952b, 0x0, 0x0);
        gbc.writeMem(0x47d5, { 0x19 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x87df, gbc.sp());
        EXPECT(0x47d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00C4
        gbc.setState(0x462e, 0xa406, 0x8cb0, 0xa822, 0x37f4, 0x6ca1, 0x0, 0x1);
        gbc.writeMem(0x462e, { 0x19 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa406, gbc.sp());
        EXPECT(0x462f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 00C5
        gbc.setState(0x9d3a, 0x3d93, 0xfcd0, 0xd6a6, 0x181a, 0xac69, 0x0, 0x1);
        gbc.writeMem(0x9d3a, { 0x19 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3d93, gbc.sp());
        EXPECT(0x9d3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9d3a));
        // 19 00C6
        gbc.setState(0x5a0, 0x4eec, 0x9130, 0x50ec, 0x54eb, 0xe77, 0x1, 0x1);
        gbc.writeMem(0x5a0, { 0x19 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4eec, gbc.sp());
        EXPECT(0x5a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 00C7
        gbc.setState(0x8895, 0xe01f, 0x21c0, 0xccc7, 0x5812, 0xd78b, 0x0, 0x1);
        gbc.writeMem(0x8895, { 0x19 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe01f, gbc.sp());
        EXPECT(0x8896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8895));
        // 19 00C8
        gbc.setState(0x2f1f, 0x4ff3, 0x1a90, 0x672c, 0x4cb9, 0x53d7, 0x1, 0x1);
        gbc.writeMem(0x2f1f, { 0x19 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4ff3, gbc.sp());
        EXPECT(0x2f20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 00C9
        gbc.setState(0x47e0, 0xf392, 0x92a0, 0x1eb8, 0xcf00, 0x18ec, 0x1, 0x1);
        gbc.writeMem(0x47e0, { 0x19 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf392, gbc.sp());
        EXPECT(0x47e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 00CA
        gbc.setState(0x7bee, 0xea8a, 0x5b60, 0xbb84, 0xf64e, 0x88dd, 0x0, 0x0);
        gbc.writeMem(0x7bee, { 0x19 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xea8a, gbc.sp());
        EXPECT(0x7bef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00CB
        gbc.setState(0x747b, 0xa8e7, 0xcef0, 0x58de, 0x1c21, 0x3ae3, 0x1, 0x1);
        gbc.writeMem(0x747b, { 0x19 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa8e7, gbc.sp());
        EXPECT(0x747c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 00CC
        gbc.setState(0x2d16, 0xa5a8, 0xdad0, 0xfb2f, 0x619d, 0x6d6c, 0x0, 0x1);
        gbc.writeMem(0x2d16, { 0x19 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa5a8, gbc.sp());
        EXPECT(0x2d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 00CD
        gbc.setState(0xea9d, 0xc446, 0x40c0, 0x25b2, 0x1a8f, 0x7a50, 0x1, 0x1);
        gbc.writeMem(0xea9d, { 0x19 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc446, gbc.sp());
        EXPECT(0xea9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xea9d));
        // 19 00CE
        gbc.setState(0x6e04, 0x2864, 0xf7b0, 0x629e, 0x69e8, 0xeed8, 0x0, 0x0);
        gbc.writeMem(0x6e04, { 0x19 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2864, gbc.sp());
        EXPECT(0x6e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00CF
        gbc.setState(0xa963, 0x1fa8, 0xaa20, 0x1d02, 0x9d84, 0x797b, 0x1, 0x0);
        gbc.writeMem(0xa963, { 0x19 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1fa8, gbc.sp());
        EXPECT(0xa964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa963));
        // 19 00D0
        gbc.setState(0xa6b0, 0x7149, 0x4e40, 0x12e0, 0x9212, 0x72d1, 0x1, 0x0);
        gbc.writeMem(0xa6b0, { 0x19 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7149, gbc.sp());
        EXPECT(0xa6b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa6b0));
        // 19 00D1
        gbc.setState(0x9afc, 0x9a19, 0xa550, 0xd9af, 0x4e5f, 0x8107, 0x0, 0x0);
        gbc.writeMem(0x9afc, { 0x19 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9a19, gbc.sp());
        EXPECT(0x9afd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9afc));
        // 19 00D2
        gbc.setState(0x3a3c, 0x21ca, 0xe380, 0xb400, 0xeac7, 0x9fc9, 0x1, 0x0);
        gbc.writeMem(0x3a3c, { 0x19 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x21ca, gbc.sp());
        EXPECT(0x3a3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00D3
        gbc.setState(0xb1de, 0xa5ce, 0xe180, 0xa2bb, 0x21c6, 0xbbe8, 0x0, 0x0);
        gbc.writeMem(0xb1de, { 0x19 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa5ce, gbc.sp());
        EXPECT(0xb1df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb1de));
        // 19 00D4
        gbc.setState(0x16c5, 0xfd80, 0x5940, 0x33ab, 0x7de, 0xac6c, 0x1, 0x1);
        gbc.writeMem(0x16c5, { 0x19 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfd80, gbc.sp());
        EXPECT(0x16c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 00D5
        gbc.setState(0x6134, 0x3348, 0xf370, 0x6bf6, 0xbcdd, 0x6527, 0x1, 0x0);
        gbc.writeMem(0x6134, { 0x19 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3348, gbc.sp());
        EXPECT(0x6135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00D6
        gbc.setState(0x6b6a, 0xa074, 0xc800, 0x178e, 0xe66c, 0x557f, 0x1, 0x1);
        gbc.writeMem(0x6b6a, { 0x19 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa074, gbc.sp());
        EXPECT(0x6b6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00D7
        gbc.setState(0x9dfb, 0xc8f1, 0x880, 0x8d79, 0xcebb, 0xc7ab, 0x0, 0x0);
        gbc.writeMem(0x9dfb, { 0x19 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc8f1, gbc.sp());
        EXPECT(0x9dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9dfb));
        // 19 00D8
        gbc.setState(0x9429, 0x19e6, 0xe060, 0xb34a, 0x4398, 0x19b1, 0x1, 0x0);
        gbc.writeMem(0x9429, { 0x19 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x19e6, gbc.sp());
        EXPECT(0x942a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9429));
        // 19 00D9
        gbc.setState(0x94e9, 0xd48, 0x10c0, 0xad2, 0x227, 0xfc86, 0x0, 0x1);
        gbc.writeMem(0x94e9, { 0x19 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd48, gbc.sp());
        EXPECT(0x94ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x94e9));
        // 19 00DA
        gbc.setState(0x250a, 0x58b7, 0xb110, 0x486a, 0xafb7, 0x662a, 0x1, 0x0);
        gbc.writeMem(0x250a, { 0x19 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x58b7, gbc.sp());
        EXPECT(0x250b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00DB
        gbc.setState(0x9b80, 0xbcea, 0xd6b0, 0x99f6, 0xee25, 0xe1f7, 0x0, 0x0);
        gbc.writeMem(0x9b80, { 0x19 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xbcea, gbc.sp());
        EXPECT(0x9b81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9b80));
        // 19 00DC
        gbc.setState(0x610b, 0xc7ef, 0x8400, 0x50fb, 0xbab4, 0x4c09, 0x1, 0x0);
        gbc.writeMem(0x610b, { 0x19 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc7ef, gbc.sp());
        EXPECT(0x610c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00DD
        gbc.setState(0x6810, 0x805, 0xa560, 0x2775, 0x72c8, 0x6b42, 0x1, 0x1);
        gbc.writeMem(0x6810, { 0x19 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x805, gbc.sp());
        EXPECT(0x6811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 00DE
        gbc.setState(0xb424, 0x3321, 0xd930, 0xe35e, 0x3964, 0x3d77, 0x0, 0x0);
        gbc.writeMem(0xb424, { 0x19 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3321, gbc.sp());
        EXPECT(0xb425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb424));
        // 19 00DF
        gbc.setState(0x98a3, 0x169c, 0x4970, 0x2bcf, 0xfbdd, 0x752b, 0x1, 0x0);
        gbc.writeMem(0x98a3, { 0x19 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x169c, gbc.sp());
        EXPECT(0x98a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x98a3));
        // 19 00E0
        gbc.setState(0x87ba, 0x1962, 0x1650, 0x9b67, 0xcfb9, 0x7d03, 0x1, 0x1);
        gbc.writeMem(0x87ba, { 0x19 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1962, gbc.sp());
        EXPECT(0x87bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x87ba));
        // 19 00E1
        gbc.setState(0x5d20, 0x8af7, 0x9980, 0x5b43, 0x9e8d, 0x24df, 0x0, 0x1);
        gbc.writeMem(0x5d20, { 0x19 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8af7, gbc.sp());
        EXPECT(0x5d21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 00E2
        gbc.setState(0xac8d, 0xe706, 0xe7a0, 0x8226, 0xf192, 0x56f4, 0x1, 0x0);
        gbc.writeMem(0xac8d, { 0x19 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe706, gbc.sp());
        EXPECT(0xac8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xac8d));
        // 19 00E3
        gbc.setState(0x4ff0, 0xf0c, 0xf270, 0xf608, 0xef7a, 0xbb12, 0x1, 0x0);
        gbc.writeMem(0x4ff0, { 0x19 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf0c, gbc.sp());
        EXPECT(0x4ff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00E4
        gbc.setState(0x54f, 0x8da6, 0x9380, 0x59a5, 0xc8cf, 0xbd3c, 0x0, 0x1);
        gbc.writeMem(0x54f, { 0x19 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8da6, gbc.sp());
        EXPECT(0x550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00E5
        gbc.setState(0xac00, 0x1a43, 0x5b70, 0x40ab, 0x87fb, 0x422b, 0x1, 0x0);
        gbc.writeMem(0xac00, { 0x19 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1a43, gbc.sp());
        EXPECT(0xac01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xac00));
        // 19 00E6
        gbc.setState(0x5f03, 0xff4d, 0xc840, 0xaf3e, 0x8bbf, 0xa2f4, 0x0, 0x1);
        gbc.writeMem(0x5f03, { 0x19 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xff4d, gbc.sp());
        EXPECT(0x5f04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00E7
        gbc.setState(0x471c, 0x476c, 0x75a0, 0xd67c, 0x6e35, 0xab18, 0x0, 0x0);
        gbc.writeMem(0x471c, { 0x19 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x476c, gbc.sp());
        EXPECT(0x471d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00E8
        gbc.setState(0xd518, 0x6fb6, 0xce70, 0xd44a, 0x585a, 0xe44a, 0x1, 0x0);
        gbc.writeMem(0xd518, { 0x19 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6fb6, gbc.sp());
        EXPECT(0xd519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd518));
        // 19 00E9
        gbc.setState(0x667, 0x3564, 0xcda0, 0x349a, 0x99c4, 0x5a39, 0x1, 0x0);
        gbc.writeMem(0x667, { 0x19 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3564, gbc.sp());
        EXPECT(0x668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 00EA
        gbc.setState(0x1291, 0xd559, 0x37d0, 0x73a7, 0x80f8, 0x2599, 0x1, 0x1);
        gbc.writeMem(0x1291, { 0x19 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd559, gbc.sp());
        EXPECT(0x1292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 00EB
        gbc.setState(0x3ec9, 0xba86, 0xb10, 0xd3e, 0x71df, 0x8870, 0x1, 0x0);
        gbc.writeMem(0x3ec9, { 0x19 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xba86, gbc.sp());
        EXPECT(0x3eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 00EC
        gbc.setState(0x2b41, 0xac9c, 0x8e90, 0xa2f5, 0xf22, 0xd3e6, 0x1, 0x0);
        gbc.writeMem(0x2b41, { 0x19 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xac9c, gbc.sp());
        EXPECT(0x2b42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 00ED
        gbc.setState(0xba0b, 0xca38, 0x7c40, 0x67ac, 0x4650, 0x9b2c, 0x1, 0x0);
        gbc.writeMem(0xba0b, { 0x19 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xca38, gbc.sp());
        EXPECT(0xba0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xba0b));
        // 19 00EE
        gbc.setState(0xc69a, 0x55ef, 0xf410, 0x9d45, 0x390c, 0x1edb, 0x0, 0x0);
        gbc.writeMem(0xc69a, { 0x19 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x55ef, gbc.sp());
        EXPECT(0xc69b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc69a));
        // 19 00EF
        gbc.setState(0xad8e, 0xecc3, 0x2880, 0x555a, 0x7a7e, 0x7710, 0x0, 0x0);
        gbc.writeMem(0xad8e, { 0x19 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xecc3, gbc.sp());
        EXPECT(0xad8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xad8e));
        // 19 00F0
        gbc.setState(0xe0f3, 0x627a, 0x51a0, 0xc0eb, 0x43a6, 0x2a22, 0x0, 0x0);
        gbc.writeMem(0xe0f3, { 0x19 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x627a, gbc.sp());
        EXPECT(0xe0f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe0f3));
        // 19 00F1
        gbc.setState(0x3e70, 0x843, 0xaac0, 0x4e73, 0x5442, 0x9ce8, 0x0, 0x0);
        gbc.writeMem(0x3e70, { 0x19 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x843, gbc.sp());
        EXPECT(0x3e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 00F2
        gbc.setState(0xefa9, 0xfd34, 0x3720, 0x5570, 0x692f, 0xfac5, 0x0, 0x0);
        gbc.writeMem(0xefa9, { 0x19 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfd34, gbc.sp());
        EXPECT(0xefaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xefa9));
        // 19 00F3
        gbc.setState(0xa16d, 0x6f6a, 0xcb30, 0x42e8, 0xc3b8, 0x90f7, 0x1, 0x1);
        gbc.writeMem(0xa16d, { 0x19 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6f6a, gbc.sp());
        EXPECT(0xa16e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa16d));
        // 19 00F5
        gbc.setState(0x6e36, 0xc2ac, 0x650, 0x1e39, 0x803f, 0x7d80, 0x1, 0x1);
        gbc.writeMem(0x6e36, { 0x19 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc2ac, gbc.sp());
        EXPECT(0x6e37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 00F6
        gbc.setState(0xad73, 0xd867, 0xd930, 0xf12b, 0xcc09, 0x522d, 0x1, 0x1);
        gbc.writeMem(0xad73, { 0x19 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd867, gbc.sp());
        EXPECT(0xad74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xad73));
        // 19 00F7
        gbc.setState(0x74e3, 0x6ba8, 0xcaa0, 0xbe70, 0x6e9b, 0x4f71, 0x1, 0x1);
        gbc.writeMem(0x74e3, { 0x19 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6ba8, gbc.sp());
        EXPECT(0x74e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 00F8
        gbc.setState(0x4efe, 0x562a, 0x4f70, 0x4d39, 0x3779, 0xf292, 0x0, 0x1);
        gbc.writeMem(0x4efe, { 0x19 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x562a, gbc.sp());
        EXPECT(0x4eff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 00F9
        gbc.setState(0xb2b3, 0x9868, 0xe8b0, 0x7c70, 0x5795, 0xf9b1, 0x0, 0x1);
        gbc.writeMem(0xb2b3, { 0x19 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9868, gbc.sp());
        EXPECT(0xb2b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb2b3));
        // 19 00FB
        gbc.setState(0xefdd, 0xaa1c, 0x95c0, 0x9932, 0x258b, 0xbadb, 0x1, 0x1);
        gbc.writeMem(0xefdd, { 0x19 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xaa1c, gbc.sp());
        EXPECT(0xefde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xefdd));
        // 19 00FD
        gbc.setState(0x32ff, 0x9ae, 0x9610, 0xd77e, 0x1f3d, 0x3556, 0x0, 0x0);
        gbc.writeMem(0x32ff, { 0x19 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9ae, gbc.sp());
        EXPECT(0x3300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 00FE
        gbc.setState(0x9a5c, 0x25b2, 0xaba0, 0x5975, 0x89b5, 0xd41a, 0x0, 0x0);
        gbc.writeMem(0x9a5c, { 0x19 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x25b2, gbc.sp());
        EXPECT(0x9a5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9a5c));
        // 19 00FF
        gbc.setState(0x8c73, 0xae47, 0x5b30, 0xf392, 0x36eb, 0x6eb3, 0x1, 0x0);
        gbc.writeMem(0x8c73, { 0x19 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xae47, gbc.sp());
        EXPECT(0x8c74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8c73));
        // 19 0100
        gbc.setState(0xd709, 0xeded, 0x4610, 0x778c, 0x1c75, 0xbbaf, 0x0, 0x0);
        gbc.writeMem(0xd709, { 0x19 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xeded, gbc.sp());
        EXPECT(0xd70a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd709));
        // 19 0101
        gbc.setState(0xcba4, 0x4117, 0x8880, 0xf6b0, 0x9bc6, 0xf9bc, 0x0, 0x0);
        gbc.writeMem(0xcba4, { 0x19 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4117, gbc.sp());
        EXPECT(0xcba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xcba4));
        // 19 0102
        gbc.setState(0x6076, 0x5966, 0x91f0, 0xc597, 0xf596, 0xd73f, 0x1, 0x1);
        gbc.writeMem(0x6076, { 0x19 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5966, gbc.sp());
        EXPECT(0x6077, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0103
        gbc.setState(0x9e1e, 0xb9dd, 0xd9e0, 0xff7c, 0x65ba, 0x928f, 0x1, 0x1);
        gbc.writeMem(0x9e1e, { 0x19 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb9dd, gbc.sp());
        EXPECT(0x9e1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9e1e));
        // 19 0104
        gbc.setState(0x9061, 0xbe5a, 0xa790, 0x3244, 0x436b, 0x3851, 0x0, 0x0);
        gbc.writeMem(0x9061, { 0x19 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xbe5a, gbc.sp());
        EXPECT(0x9062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9061));
        // 19 0105
        gbc.setState(0xa493, 0x300b, 0x80c0, 0xc1ab, 0xce87, 0x43c2, 0x1, 0x1);
        gbc.writeMem(0xa493, { 0x19 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x300b, gbc.sp());
        EXPECT(0xa494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa493));
        // 19 0106
        gbc.setState(0x1b85, 0xd0ab, 0x66d0, 0x6ae6, 0x180b, 0x8e50, 0x0, 0x0);
        gbc.writeMem(0x1b85, { 0x19 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd0ab, gbc.sp());
        EXPECT(0x1b86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0107
        gbc.setState(0x245f, 0xc307, 0x5af0, 0xf41, 0xaf0c, 0x27fa, 0x0, 0x1);
        gbc.writeMem(0x245f, { 0x19 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc307, gbc.sp());
        EXPECT(0x2460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0108
        gbc.setState(0xdaff, 0xc324, 0xe2a0, 0x8314, 0xc554, 0x5b41, 0x0, 0x1);
        gbc.writeMem(0xdaff, { 0x19 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc324, gbc.sp());
        EXPECT(0xdb00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xdaff));
        // 19 0109
        gbc.setState(0xd877, 0x21a7, 0x71e0, 0x6c63, 0x31e, 0x53fa, 0x1, 0x1);
        gbc.writeMem(0xd877, { 0x19 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x21a7, gbc.sp());
        EXPECT(0xd878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd877));
        // 19 010A
        gbc.setState(0x7797, 0xed33, 0xdbd0, 0x97ed, 0xf62e, 0x147f, 0x0, 0x0);
        gbc.writeMem(0x7797, { 0x19 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xed33, gbc.sp());
        EXPECT(0x7798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 010B
        gbc.setState(0x472c, 0x574c, 0x7490, 0x73b0, 0x2635, 0xf67a, 0x1, 0x0);
        gbc.writeMem(0x472c, { 0x19 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x574c, gbc.sp());
        EXPECT(0x472d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 010C
        gbc.setState(0x869d, 0xdd34, 0xfa90, 0x160e, 0xfe32, 0xf0a7, 0x1, 0x0);
        gbc.writeMem(0x869d, { 0x19 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xdd34, gbc.sp());
        EXPECT(0x869e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x869d));
        // 19 010D
        gbc.setState(0xd4a8, 0xf87, 0x9590, 0xd71f, 0xa1c5, 0xfe2c, 0x0, 0x1);
        gbc.writeMem(0xd4a8, { 0x19 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf87, gbc.sp());
        EXPECT(0xd4a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd4a8));
        // 19 010E
        gbc.setState(0x4beb, 0xce21, 0xf0f0, 0x720a, 0x8062, 0xce9f, 0x1, 0x1);
        gbc.writeMem(0x4beb, { 0x19 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xce21, gbc.sp());
        EXPECT(0x4bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 010F
        gbc.setState(0xba1f, 0x9a94, 0xac50, 0xc48e, 0xadbd, 0x972a, 0x1, 0x1);
        gbc.writeMem(0xba1f, { 0x19 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9a94, gbc.sp());
        EXPECT(0xba20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xba1f));
        // 19 0110
        gbc.setState(0x3c86, 0xfec1, 0xa1c0, 0x94d2, 0x61de, 0x5088, 0x1, 0x0);
        gbc.writeMem(0x3c86, { 0x19 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xfec1, gbc.sp());
        EXPECT(0x3c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0111
        gbc.setState(0xbca1, 0xa5ed, 0xe360, 0xf78f, 0x7da3, 0xf87a, 0x1, 0x0);
        gbc.writeMem(0xbca1, { 0x19 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa5ed, gbc.sp());
        EXPECT(0xbca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbca1));
        // 19 0113
        gbc.setState(0xecc5, 0x89a2, 0xbdd0, 0x3598, 0x12c3, 0x61fe, 0x1, 0x1);
        gbc.writeMem(0xecc5, { 0x19 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x89a2, gbc.sp());
        EXPECT(0xecc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xecc5));
        // 19 0114
        gbc.setState(0xcae0, 0x7957, 0x8c60, 0xce18, 0x1bc, 0x789e, 0x1, 0x1);
        gbc.writeMem(0xcae0, { 0x19 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7957, gbc.sp());
        EXPECT(0xcae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xcae0));
        // 19 0115
        gbc.setState(0x8f86, 0x4ba9, 0xca40, 0x9df3, 0xcfc4, 0xb154, 0x0, 0x0);
        gbc.writeMem(0x8f86, { 0x19 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4ba9, gbc.sp());
        EXPECT(0x8f87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8f86));
        // 19 0116
        gbc.setState(0x550c, 0xc495, 0x2c00, 0x6d3c, 0xa612, 0x3529, 0x1, 0x0);
        gbc.writeMem(0x550c, { 0x19 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc495, gbc.sp());
        EXPECT(0x550d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0117
        gbc.setState(0xa84e, 0x1f69, 0x9e80, 0x305d, 0x528, 0x234a, 0x0, 0x1);
        gbc.writeMem(0xa84e, { 0x19 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1f69, gbc.sp());
        EXPECT(0xa84f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa84e));
        // 19 0118
        gbc.setState(0x198c, 0xf98, 0xdc90, 0x7035, 0x78f4, 0x67b7, 0x0, 0x1);
        gbc.writeMem(0x198c, { 0x19 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf98, gbc.sp());
        EXPECT(0x198d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0119
        gbc.setState(0xd553, 0x39d9, 0x8130, 0xffef, 0xb378, 0xdcb8, 0x1, 0x0);
        gbc.writeMem(0xd553, { 0x19 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x39d9, gbc.sp());
        EXPECT(0xd554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd553));
        // 19 011A
        gbc.setState(0xc96b, 0x3a7a, 0xe3d0, 0xdfe6, 0xed09, 0xa83b, 0x1, 0x1);
        gbc.writeMem(0xc96b, { 0x19 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3a7a, gbc.sp());
        EXPECT(0xc96c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc96b));
        // 19 011B
        gbc.setState(0x24b0, 0x9344, 0x9c20, 0x821e, 0xdd63, 0x9f57, 0x1, 0x1);
        gbc.writeMem(0x24b0, { 0x19 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9344, gbc.sp());
        EXPECT(0x24b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 011C
        gbc.setState(0xc8dc, 0xa69b, 0x3330, 0x34aa, 0x22c4, 0xbcd2, 0x1, 0x0);
        gbc.writeMem(0xc8dc, { 0x19 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa69b, gbc.sp());
        EXPECT(0xc8dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc8dc));
        // 19 011D
        gbc.setState(0x224d, 0xf7c7, 0xcac0, 0x6b1f, 0x766e, 0x810c, 0x0, 0x0);
        gbc.writeMem(0x224d, { 0x19 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf7c7, gbc.sp());
        EXPECT(0x224e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 011F
        gbc.setState(0xe39a, 0x1d96, 0x7810, 0x1a76, 0x9914, 0x1048, 0x1, 0x1);
        gbc.writeMem(0xe39a, { 0x19 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1d96, gbc.sp());
        EXPECT(0xe39b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe39a));
        // 19 0121
        gbc.setState(0x3140, 0x2e5a, 0x97b0, 0x69db, 0x6cd3, 0xfe91, 0x1, 0x0);
        gbc.writeMem(0x3140, { 0x19 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2e5a, gbc.sp());
        EXPECT(0x3141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0122
        gbc.setState(0x5e08, 0x9a02, 0xbb10, 0x3c76, 0x7beb, 0x7f68, 0x0, 0x1);
        gbc.writeMem(0x5e08, { 0x19 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9a02, gbc.sp());
        EXPECT(0x5e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0123
        gbc.setState(0x8b7a, 0x662c, 0x760, 0xe772, 0x5ddf, 0x5cdd, 0x1, 0x0);
        gbc.writeMem(0x8b7a, { 0x19 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x662c, gbc.sp());
        EXPECT(0x8b7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8b7a));
        // 19 0124
        gbc.setState(0xdc45, 0x4e4b, 0x6b20, 0x1145, 0x70e1, 0x8d6a, 0x0, 0x1);
        gbc.writeMem(0xdc45, { 0x19 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4e4b, gbc.sp());
        EXPECT(0xdc46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xdc45));
        // 19 0125
        gbc.setState(0x9c75, 0x3aa0, 0x5df0, 0xaabf, 0xa196, 0xbb2b, 0x0, 0x0);
        gbc.writeMem(0x9c75, { 0x19 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3aa0, gbc.sp());
        EXPECT(0x9c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9c75));
        // 19 0126
        gbc.setState(0xda25, 0x24a3, 0xd70, 0x3acc, 0x9100, 0x700e, 0x1, 0x1);
        gbc.writeMem(0xda25, { 0x19 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x24a3, gbc.sp());
        EXPECT(0xda26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xda25));
        // 19 0127
        gbc.setState(0x38fe, 0x2bd8, 0xf940, 0x94ed, 0x7ccf, 0x6fcc, 0x1, 0x0);
        gbc.writeMem(0x38fe, { 0x19 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2bd8, gbc.sp());
        EXPECT(0x38ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0128
        gbc.setState(0x4392, 0xffc6, 0xf540, 0x2db4, 0xe2a3, 0x4895, 0x0, 0x1);
        gbc.writeMem(0x4392, { 0x19 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xffc6, gbc.sp());
        EXPECT(0x4393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0129
        gbc.setState(0xbcc0, 0xdcc1, 0xc930, 0x6703, 0xc51a, 0x2a3f, 0x0, 0x1);
        gbc.writeMem(0xbcc0, { 0x19 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdcc1, gbc.sp());
        EXPECT(0xbcc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbcc0));
        // 19 012A
        gbc.setState(0x633b, 0x242b, 0xd840, 0xb6e0, 0xf909, 0x8272, 0x0, 0x1);
        gbc.writeMem(0x633b, { 0x19 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x242b, gbc.sp());
        EXPECT(0x633c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 012B
        gbc.setState(0x7d4b, 0x9ba1, 0xbf00, 0xabec, 0xf34f, 0xc2e4, 0x0, 0x0);
        gbc.writeMem(0x7d4b, { 0x19 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9ba1, gbc.sp());
        EXPECT(0x7d4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 012C
        gbc.setState(0x240e, 0xb86a, 0x5b70, 0x7bca, 0x5667, 0x27a1, 0x1, 0x1);
        gbc.writeMem(0x240e, { 0x19 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb86a, gbc.sp());
        EXPECT(0x240f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 012E
        gbc.setState(0x2bf4, 0x4f02, 0x6920, 0x27fc, 0x5931, 0x546e, 0x1, 0x0);
        gbc.writeMem(0x2bf4, { 0x19 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4f02, gbc.sp());
        EXPECT(0x2bf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 012F
        gbc.setState(0xc988, 0xbf2b, 0x8f80, 0xe5e1, 0xe384, 0xf860, 0x1, 0x0);
        gbc.writeMem(0xc988, { 0x19 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbf2b, gbc.sp());
        EXPECT(0xc989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc988));
        // 19 0130
        gbc.setState(0xedd2, 0x85aa, 0x3fc0, 0x194c, 0xc3c4, 0x1415, 0x0, 0x1);
        gbc.writeMem(0xedd2, { 0x19 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x85aa, gbc.sp());
        EXPECT(0xedd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xedd2));
        // 19 0131
        gbc.setState(0x7c85, 0x1c8a, 0xf040, 0x5f29, 0x67b3, 0x6aa1, 0x0, 0x1);
        gbc.writeMem(0x7c85, { 0x19 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1c8a, gbc.sp());
        EXPECT(0x7c86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0132
        gbc.setState(0x44b8, 0x7324, 0x63e0, 0x2814, 0x1472, 0xe2ad, 0x0, 0x1);
        gbc.writeMem(0x44b8, { 0x19 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7324, gbc.sp());
        EXPECT(0x44b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0133
        gbc.setState(0x9d12, 0xd203, 0x4930, 0x37f1, 0xddca, 0x2318, 0x0, 0x1);
        gbc.writeMem(0x9d12, { 0x19 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd203, gbc.sp());
        EXPECT(0x9d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9d12));
        // 19 0134
        gbc.setState(0x8bce, 0x4bca, 0xd8d0, 0x8231, 0x8e80, 0xe077, 0x0, 0x0);
        gbc.writeMem(0x8bce, { 0x19 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4bca, gbc.sp());
        EXPECT(0x8bcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8bce));
        // 19 0135
        gbc.setState(0x7689, 0xfac2, 0xc620, 0x193e, 0xdd4e, 0x2771, 0x1, 0x1);
        gbc.writeMem(0x7689, { 0x19 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfac2, gbc.sp());
        EXPECT(0x768a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0136
        gbc.setState(0x844c, 0xe1ec, 0xcc60, 0xff58, 0xf05, 0x405b, 0x0, 0x1);
        gbc.writeMem(0x844c, { 0x19 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe1ec, gbc.sp());
        EXPECT(0x844d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x844c));
        // 19 0137
        gbc.setState(0x123d, 0x3c1d, 0x3830, 0x1e2a, 0xe388, 0x629d, 0x0, 0x1);
        gbc.writeMem(0x123d, { 0x19 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3c1d, gbc.sp());
        EXPECT(0x123e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0138
        gbc.setState(0x980c, 0x9f0b, 0xdc70, 0x8a6f, 0xd718, 0xa92c, 0x0, 0x1);
        gbc.writeMem(0x980c, { 0x19 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9f0b, gbc.sp());
        EXPECT(0x980d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x980c));
        // 19 0139
        gbc.setState(0xa53f, 0xf9d5, 0x70b0, 0x7bad, 0x5a90, 0x6f05, 0x1, 0x0);
        gbc.writeMem(0xa53f, { 0x19 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf9d5, gbc.sp());
        EXPECT(0xa540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa53f));
        // 19 013A
        gbc.setState(0xbd5b, 0xa8a9, 0x3570, 0xc818, 0xf5e5, 0xf336, 0x0, 0x1);
        gbc.writeMem(0xbd5b, { 0x19 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa8a9, gbc.sp());
        EXPECT(0xbd5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbd5b));
        // 19 013B
        gbc.setState(0x3ff8, 0xf65a, 0x2400, 0x808e, 0x13bc, 0xb666, 0x0, 0x1);
        gbc.writeMem(0x3ff8, { 0x19 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf65a, gbc.sp());
        EXPECT(0x3ff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 013C
        gbc.setState(0xe6ac, 0x907a, 0x18d0, 0x1187, 0x945d, 0x61e9, 0x1, 0x0);
        gbc.writeMem(0xe6ac, { 0x19 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x907a, gbc.sp());
        EXPECT(0xe6ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe6ac));
        // 19 013D
        gbc.setState(0x8796, 0x9c3a, 0xc40, 0xca8e, 0x9a8b, 0x3245, 0x0, 0x0);
        gbc.writeMem(0x8796, { 0x19 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9c3a, gbc.sp());
        EXPECT(0x8797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8796));
        // 19 013E
        gbc.setState(0x103e, 0x16f2, 0x2450, 0xf095, 0x3010, 0x9ead, 0x1, 0x0);
        gbc.writeMem(0x103e, { 0x19 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x16f2, gbc.sp());
        EXPECT(0x103f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 013F
        gbc.setState(0x2450, 0x7ff4, 0x9890, 0x709c, 0x750e, 0x6f0, 0x0, 0x0);
        gbc.writeMem(0x2450, { 0x19 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7ff4, gbc.sp());
        EXPECT(0x2451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0140
        gbc.setState(0xec76, 0x44f, 0x2a40, 0xb319, 0x911e, 0x6920, 0x0, 0x0);
        gbc.writeMem(0xec76, { 0x19 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x44f, gbc.sp());
        EXPECT(0xec77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xec76));
        // 19 0141
        gbc.setState(0xb359, 0xc617, 0x8480, 0x8951, 0x7e7f, 0xb4f8, 0x0, 0x1);
        gbc.writeMem(0xb359, { 0x19 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc617, gbc.sp());
        EXPECT(0xb35a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb359));
        // 19 0142
        gbc.setState(0xa338, 0xca21, 0xbef0, 0xd17c, 0x1a98, 0x3f11, 0x1, 0x1);
        gbc.writeMem(0xa338, { 0x19 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xca21, gbc.sp());
        EXPECT(0xa339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa338));
        // 19 0143
        gbc.setState(0xb9d0, 0x1094, 0xc0c0, 0x793e, 0x327, 0xed2f, 0x1, 0x0);
        gbc.writeMem(0xb9d0, { 0x19 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1094, gbc.sp());
        EXPECT(0xb9d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb9d0));
        // 19 0144
        gbc.setState(0x88cd, 0xd4cc, 0xb440, 0x7d9d, 0xc049, 0x7bb5, 0x0, 0x1);
        gbc.writeMem(0x88cd, { 0x19 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd4cc, gbc.sp());
        EXPECT(0x88ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x88cd));
        // 19 0145
        gbc.setState(0x6cf8, 0xf77b, 0xdb70, 0xfeb2, 0x2e5a, 0xca3c, 0x1, 0x1);
        gbc.writeMem(0x6cf8, { 0x19 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf77b, gbc.sp());
        EXPECT(0x6cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0146
        gbc.setState(0x3e17, 0x20a9, 0xade0, 0x5699, 0xe07f, 0x3fb3, 0x0, 0x1);
        gbc.writeMem(0x3e17, { 0x19 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x20a9, gbc.sp());
        EXPECT(0x3e18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0147
        gbc.setState(0x13e7, 0x95ee, 0xf1e0, 0x2d9a, 0x8114, 0x6d03, 0x1, 0x0);
        gbc.writeMem(0x13e7, { 0x19 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x95ee, gbc.sp());
        EXPECT(0x13e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0148
        gbc.setState(0x60f4, 0x24fd, 0x88e0, 0x360d, 0x5bd7, 0xef7b, 0x1, 0x1);
        gbc.writeMem(0x60f4, { 0x19 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x24fd, gbc.sp());
        EXPECT(0x60f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0149
        gbc.setState(0x86f2, 0x7b2e, 0x14c0, 0x9abe, 0x3bdb, 0x7401, 0x0, 0x0);
        gbc.writeMem(0x86f2, { 0x19 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7b2e, gbc.sp());
        EXPECT(0x86f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x86f2));
        // 19 014A
        gbc.setState(0xea7f, 0x7176, 0x30, 0xb92a, 0x98b1, 0x7e7b, 0x0, 0x0);
        gbc.writeMem(0xea7f, { 0x19 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7176, gbc.sp());
        EXPECT(0xea80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xea7f));
        // 19 014B
        gbc.setState(0xdd66, 0xc9f9, 0xdf70, 0x942b, 0x7902, 0x363a, 0x1, 0x0);
        gbc.writeMem(0xdd66, { 0x19 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc9f9, gbc.sp());
        EXPECT(0xdd67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xdd66));
        // 19 014C
        gbc.setState(0x49fa, 0xe8af, 0x5e50, 0x94d7, 0x87a2, 0x855a, 0x0, 0x0);
        gbc.writeMem(0x49fa, { 0x19 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe8af, gbc.sp());
        EXPECT(0x49fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 014D
        gbc.setState(0x89e4, 0xa93d, 0x9d20, 0x7c80, 0x550f, 0x335c, 0x0, 0x1);
        gbc.writeMem(0x89e4, { 0x19 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa93d, gbc.sp());
        EXPECT(0x89e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x89e4));
        // 19 014E
        gbc.setState(0x5f5b, 0xba40, 0xf080, 0x944f, 0xe81f, 0x89c0, 0x0, 0x0);
        gbc.writeMem(0x5f5b, { 0x19 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xba40, gbc.sp());
        EXPECT(0x5f5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 014F
        gbc.setState(0x2cc8, 0xb361, 0x5250, 0x7d0c, 0x95ce, 0x1277, 0x1, 0x0);
        gbc.writeMem(0x2cc8, { 0x19 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb361, gbc.sp());
        EXPECT(0x2cc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0150
        gbc.setState(0x27ec, 0xb75d, 0xffb0, 0x9a43, 0xf2c0, 0x67aa, 0x1, 0x0);
        gbc.writeMem(0x27ec, { 0x19 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb75d, gbc.sp());
        EXPECT(0x27ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0151
        gbc.setState(0x7aa8, 0x3783, 0xc0c0, 0x16cf, 0x70ca, 0x1f4a, 0x0, 0x1);
        gbc.writeMem(0x7aa8, { 0x19 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3783, gbc.sp());
        EXPECT(0x7aa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0152
        gbc.setState(0xc228, 0x2610, 0xba70, 0x7f42, 0x3113, 0xf89f, 0x0, 0x0);
        gbc.writeMem(0xc228, { 0x19 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2610, gbc.sp());
        EXPECT(0xc229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc228));
        // 19 0153
        gbc.setState(0xe9a7, 0xa19d, 0x7f40, 0xca13, 0xd131, 0x7773, 0x1, 0x1);
        gbc.writeMem(0xe9a7, { 0x19 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa19d, gbc.sp());
        EXPECT(0xe9a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe9a7));
        // 19 0154
        gbc.setState(0x82cb, 0x44c7, 0x5aa0, 0x7339, 0x3159, 0x4946, 0x1, 0x0);
        gbc.writeMem(0x82cb, { 0x19 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x44c7, gbc.sp());
        EXPECT(0x82cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x82cb));
        // 19 0155
        gbc.setState(0x64bc, 0xb347, 0x3ef0, 0xa539, 0x4710, 0x859b, 0x1, 0x0);
        gbc.writeMem(0x64bc, { 0x19 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb347, gbc.sp());
        EXPECT(0x64bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0156
        gbc.setState(0xabd0, 0x8c69, 0x9bd0, 0xb846, 0x678a, 0xc534, 0x1, 0x0);
        gbc.writeMem(0xabd0, { 0x19 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8c69, gbc.sp());
        EXPECT(0xabd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xabd0));
        // 19 0157
        gbc.setState(0x77b, 0xae54, 0x7c20, 0x6870, 0x52e7, 0x7798, 0x1, 0x0);
        gbc.writeMem(0x77b, { 0x19 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xae54, gbc.sp());
        EXPECT(0x77c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0158
        gbc.setState(0x5980, 0x87b5, 0xac80, 0xf267, 0xe127, 0xfc89, 0x1, 0x0);
        gbc.writeMem(0x5980, { 0x19 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x87b5, gbc.sp());
        EXPECT(0x5981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0159
        gbc.setState(0xd6fb, 0x95d, 0x83c0, 0x6829, 0x8e72, 0x5689, 0x1, 0x1);
        gbc.writeMem(0xd6fb, { 0x19 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x95d, gbc.sp());
        EXPECT(0xd6fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd6fb));
        // 19 015A
        gbc.setState(0x4b44, 0xced4, 0xf6d0, 0x5731, 0x2125, 0x6651, 0x1, 0x1);
        gbc.writeMem(0x4b44, { 0x19 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xced4, gbc.sp());
        EXPECT(0x4b45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 015B
        gbc.setState(0x32ff, 0xee07, 0xc600, 0x57c9, 0xa023, 0x776c, 0x0, 0x1);
        gbc.writeMem(0x32ff, { 0x19 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xee07, gbc.sp());
        EXPECT(0x3300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 015C
        gbc.setState(0x4418, 0x98b3, 0xd1e0, 0xb1ee, 0x5b03, 0x9a6f, 0x0, 0x0);
        gbc.writeMem(0x4418, { 0x19 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x98b3, gbc.sp());
        EXPECT(0x4419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 015E
        gbc.setState(0xe3f1, 0xbf2c, 0x8e80, 0x7af3, 0x26ef, 0x9666, 0x1, 0x0);
        gbc.writeMem(0xe3f1, { 0x19 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xbf2c, gbc.sp());
        EXPECT(0xe3f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe3f1));
        // 19 015F
        gbc.setState(0x5420, 0x9a35, 0x6170, 0x4295, 0x847c, 0xb2e1, 0x1, 0x0);
        gbc.writeMem(0x5420, { 0x19 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9a35, gbc.sp());
        EXPECT(0x5421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0160
        gbc.setState(0x7b7a, 0xbe65, 0x6760, 0x64c9, 0x261, 0x77bf, 0x0, 0x1);
        gbc.writeMem(0x7b7a, { 0x19 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbe65, gbc.sp());
        EXPECT(0x7b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0161
        gbc.setState(0x306, 0xb6ca, 0x6ef0, 0x1630, 0x4e75, 0xcff5, 0x0, 0x1);
        gbc.writeMem(0x306, { 0x19 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb6ca, gbc.sp());
        EXPECT(0x307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0162
        gbc.setState(0x26ae, 0x9bc5, 0xa680, 0x6d14, 0xb175, 0xcdaa, 0x0, 0x0);
        gbc.writeMem(0x26ae, { 0x19 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9bc5, gbc.sp());
        EXPECT(0x26af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0163
        gbc.setState(0x468, 0x882d, 0xa0f0, 0xe371, 0xe067, 0x9910, 0x0, 0x0);
        gbc.writeMem(0x468, { 0x19 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x882d, gbc.sp());
        EXPECT(0x469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0164
        gbc.setState(0xe8f1, 0x6d3f, 0x9a50, 0x2d6e, 0x7c02, 0xf1cd, 0x1, 0x1);
        gbc.writeMem(0xe8f1, { 0x19 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6d3f, gbc.sp());
        EXPECT(0xe8f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe8f1));
        // 19 0165
        gbc.setState(0x2bc, 0xa6b0, 0x3960, 0x4bb4, 0xe09d, 0xd49d, 0x1, 0x1);
        gbc.writeMem(0x2bc, { 0x19 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa6b0, gbc.sp());
        EXPECT(0x2bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0166
        gbc.setState(0x5d54, 0xd658, 0xac50, 0x22af, 0x678a, 0x4d34, 0x0, 0x0);
        gbc.writeMem(0x5d54, { 0x19 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd658, gbc.sp());
        EXPECT(0x5d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0167
        gbc.setState(0xf0, 0x5b7a, 0xa7e0, 0x239, 0x4add, 0x957d, 0x0, 0x0);
        gbc.writeMem(0xf0, { 0x19 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5b7a, gbc.sp());
        EXPECT(0xf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0168
        gbc.setState(0x6662, 0x4970, 0x8600, 0xa408, 0x84a3, 0xf6ac, 0x0, 0x0);
        gbc.writeMem(0x6662, { 0x19 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4970, gbc.sp());
        EXPECT(0x6663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0169
        gbc.setState(0x7d4c, 0x2868, 0xcc70, 0x9641, 0x73a3, 0xb80b, 0x1, 0x0);
        gbc.writeMem(0x7d4c, { 0x19 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2868, gbc.sp());
        EXPECT(0x7d4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 016B
        gbc.setState(0xb272, 0x135a, 0x550, 0xb320, 0x95df, 0xe4dd, 0x1, 0x0);
        gbc.writeMem(0xb272, { 0x19 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x135a, gbc.sp());
        EXPECT(0xb273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb272));
        // 19 016C
        gbc.setState(0xd0a7, 0xf234, 0xcee0, 0xdf48, 0xe1b1, 0xfe1a, 0x1, 0x1);
        gbc.writeMem(0xd0a7, { 0x19 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf234, gbc.sp());
        EXPECT(0xd0a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd0a7));
        // 19 016D
        gbc.setState(0xba1, 0xa5b2, 0x9c20, 0xa088, 0x4e13, 0x3d57, 0x1, 0x1);
        gbc.writeMem(0xba1, { 0x19 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa5b2, gbc.sp());
        EXPECT(0xba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 016E
        gbc.setState(0x1010, 0x1ba6, 0xf010, 0xbe4, 0x9397, 0x7ceb, 0x1, 0x0);
        gbc.writeMem(0x1010, { 0x19 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1ba6, gbc.sp());
        EXPECT(0x1011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 016F
        gbc.setState(0xa4c6, 0x601b, 0x27a0, 0x9ff6, 0x6b6e, 0xa678, 0x1, 0x0);
        gbc.writeMem(0xa4c6, { 0x19 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x601b, gbc.sp());
        EXPECT(0xa4c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa4c6));
        // 19 0170
        gbc.setState(0x3106, 0xe6c8, 0xf700, 0x22bc, 0x7e58, 0x4508, 0x0, 0x1);
        gbc.writeMem(0x3106, { 0x19 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe6c8, gbc.sp());
        EXPECT(0x3107, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0171
        gbc.setState(0x6031, 0xb659, 0x7270, 0x8e2d, 0x762, 0xaba5, 0x0, 0x1);
        gbc.writeMem(0x6031, { 0x19 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb659, gbc.sp());
        EXPECT(0x6032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0172
        gbc.setState(0x5acf, 0x32c1, 0x5130, 0xc1f5, 0x43d2, 0x6a41, 0x0, 0x1);
        gbc.writeMem(0x5acf, { 0x19 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x32c1, gbc.sp());
        EXPECT(0x5ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0173
        gbc.setState(0xdff5, 0x5f66, 0x8fd0, 0x7a90, 0x741f, 0xa124, 0x0, 0x1);
        gbc.writeMem(0xdff5, { 0x19 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5f66, gbc.sp());
        EXPECT(0xdff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xdff5));
        // 19 0174
        gbc.setState(0x3eff, 0xbe6d, 0xbc80, 0x3bf9, 0x4a9f, 0x30b2, 0x0, 0x1);
        gbc.writeMem(0x3eff, { 0x19 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbe6d, gbc.sp());
        EXPECT(0x3f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0175
        gbc.setState(0x875e, 0xf5c9, 0x40f0, 0x738f, 0xada0, 0x424, 0x0, 0x1);
        gbc.writeMem(0x875e, { 0x19 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf5c9, gbc.sp());
        EXPECT(0x875f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x875e));
        // 19 0176
        gbc.setState(0x558e, 0x3fab, 0x2d0, 0x63c7, 0xe4b1, 0x749b, 0x0, 0x0);
        gbc.writeMem(0x558e, { 0x19 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3fab, gbc.sp());
        EXPECT(0x558f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0177
        gbc.setState(0xa173, 0x162d, 0xe0f0, 0x4ca2, 0xcfcb, 0x9a3f, 0x0, 0x0);
        gbc.writeMem(0xa173, { 0x19 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x162d, gbc.sp());
        EXPECT(0xa174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa173));
        // 19 0178
        gbc.setState(0x9834, 0x9a53, 0x7240, 0x6b80, 0x9836, 0xb8dc, 0x1, 0x0);
        gbc.writeMem(0x9834, { 0x19 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9a53, gbc.sp());
        EXPECT(0x9835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9834));
        // 19 0179
        gbc.setState(0x6586, 0xc4b1, 0x2200, 0xc77a, 0x582e, 0x34bf, 0x0, 0x1);
        gbc.writeMem(0x6586, { 0x19 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc4b1, gbc.sp());
        EXPECT(0x6587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 017A
        gbc.setState(0x99fc, 0xd30, 0x3610, 0xb219, 0x41ab, 0xe5b1, 0x1, 0x0);
        gbc.writeMem(0x99fc, { 0x19 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd30, gbc.sp());
        EXPECT(0x99fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x99fc));
        // 19 017B
        gbc.setState(0x65d7, 0xf952, 0x39a0, 0x6b9, 0x7c0b, 0xd528, 0x1, 0x1);
        gbc.writeMem(0x65d7, { 0x19 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf952, gbc.sp());
        EXPECT(0x65d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 017C
        gbc.setState(0x5f63, 0xf7b0, 0x4eb0, 0x104e, 0x461c, 0xdd57, 0x1, 0x1);
        gbc.writeMem(0x5f63, { 0x19 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf7b0, gbc.sp());
        EXPECT(0x5f64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 017D
        gbc.setState(0x7354, 0x8e91, 0x1a00, 0x2e0e, 0x1fd8, 0xc8ff, 0x1, 0x1);
        gbc.writeMem(0x7354, { 0x19 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8e91, gbc.sp());
        EXPECT(0x7355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 017E
        gbc.setState(0x8f99, 0xb60a, 0x6800, 0x2702, 0xbc0a, 0xe81d, 0x0, 0x0);
        gbc.writeMem(0x8f99, { 0x19 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb60a, gbc.sp());
        EXPECT(0x8f9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8f99));
        // 19 017F
        gbc.setState(0xce48, 0x47f5, 0x6810, 0xea11, 0x9c8f, 0x3ab3, 0x1, 0x0);
        gbc.writeMem(0xce48, { 0x19 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x47f5, gbc.sp());
        EXPECT(0xce49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xce48));
        // 19 0180
        gbc.setState(0xbf53, 0x4721, 0x2410, 0x2a19, 0x339e, 0xf015, 0x0, 0x0);
        gbc.writeMem(0xbf53, { 0x19 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4721, gbc.sp());
        EXPECT(0xbf54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbf53));
        // 19 0181
        gbc.setState(0x1c88, 0x8c70, 0x6d30, 0xbad7, 0x9d9f, 0x28aa, 0x0, 0x1);
        gbc.writeMem(0x1c88, { 0x19 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8c70, gbc.sp());
        EXPECT(0x1c89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0182
        gbc.setState(0xafe6, 0xe46e, 0xb240, 0xaef1, 0xee48, 0xc079, 0x1, 0x1);
        gbc.writeMem(0xafe6, { 0x19 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe46e, gbc.sp());
        EXPECT(0xafe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xafe6));
        // 19 0183
        gbc.setState(0xdb2a, 0x3c69, 0x4290, 0xb850, 0x2b4e, 0xe34f, 0x1, 0x1);
        gbc.writeMem(0xdb2a, { 0x19 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3c69, gbc.sp());
        EXPECT(0xdb2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xdb2a));
        // 19 0184
        gbc.setState(0xc2cf, 0xb19a, 0xe380, 0xbd40, 0x9109, 0x2c34, 0x0, 0x0);
        gbc.writeMem(0xc2cf, { 0x19 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb19a, gbc.sp());
        EXPECT(0xc2d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc2cf));
        // 19 0185
        gbc.setState(0xd57f, 0x151f, 0xbda0, 0x69b5, 0x1c66, 0x76ea, 0x0, 0x1);
        gbc.writeMem(0xd57f, { 0x19 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x151f, gbc.sp());
        EXPECT(0xd580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd57f));
        // 19 0186
        gbc.setState(0xeff3, 0x66ec, 0x8e0, 0xe5c0, 0x1a47, 0xf083, 0x1, 0x1);
        gbc.writeMem(0xeff3, { 0x19 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x66ec, gbc.sp());
        EXPECT(0xeff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xeff3));
        // 19 0187
        gbc.setState(0xc2ee, 0xe2e4, 0x81d0, 0x738d, 0x694b, 0xa4e3, 0x0, 0x1);
        gbc.writeMem(0xc2ee, { 0x19 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe2e4, gbc.sp());
        EXPECT(0xc2ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc2ee));
        // 19 0188
        gbc.setState(0x62c5, 0x37da, 0x3230, 0x747e, 0x4e91, 0xe751, 0x0, 0x0);
        gbc.writeMem(0x62c5, { 0x19 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x37da, gbc.sp());
        EXPECT(0x62c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0189
        gbc.setState(0xdbdb, 0x2417, 0x6930, 0x221f, 0x38fd, 0xc9be, 0x1, 0x0);
        gbc.writeMem(0xdbdb, { 0x19 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2417, gbc.sp());
        EXPECT(0xdbdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xdbdb));
        // 19 018B
        gbc.setState(0x270f, 0xe93d, 0xe590, 0xe97c, 0xa156, 0xfce2, 0x0, 0x0);
        gbc.writeMem(0x270f, { 0x19 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe93d, gbc.sp());
        EXPECT(0x2710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 018D
        gbc.setState(0xeb34, 0x49b, 0xb10, 0x7e77, 0x1f56, 0x5c42, 0x0, 0x0);
        gbc.writeMem(0xeb34, { 0x19 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x49b, gbc.sp());
        EXPECT(0xeb35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xeb34));
        // 19 018E
        gbc.setState(0x3ac8, 0x92cf, 0x4a50, 0x9d86, 0x9176, 0xbaee, 0x0, 0x1);
        gbc.writeMem(0x3ac8, { 0x19 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x92cf, gbc.sp());
        EXPECT(0x3ac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 018F
        gbc.setState(0x7f7d, 0xec03, 0xe250, 0x1a86, 0x55c5, 0xfcc1, 0x1, 0x1);
        gbc.writeMem(0x7f7d, { 0x19 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xec03, gbc.sp());
        EXPECT(0x7f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0190
        gbc.setState(0xbb93, 0x1409, 0xfde0, 0x6919, 0x5ee4, 0xe761, 0x1, 0x0);
        gbc.writeMem(0xbb93, { 0x19 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1409, gbc.sp());
        EXPECT(0xbb94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbb93));
        // 19 0192
        gbc.setState(0x6961, 0xa9e3, 0xea90, 0xf5f3, 0x84be, 0x884c, 0x1, 0x1);
        gbc.writeMem(0x6961, { 0x19 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa9e3, gbc.sp());
        EXPECT(0x6962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0193
        gbc.setState(0x252c, 0x8311, 0xcba0, 0x7ad8, 0x6c5e, 0x97a0, 0x1, 0x1);
        gbc.writeMem(0x252c, { 0x19 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8311, gbc.sp());
        EXPECT(0x252d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0194
        gbc.setState(0x46fe, 0x405f, 0x7870, 0x6ad8, 0x24ae, 0xe295, 0x1, 0x0);
        gbc.writeMem(0x46fe, { 0x19 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x405f, gbc.sp());
        EXPECT(0x46ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0195
        gbc.setState(0x8dfa, 0x1d7b, 0x6e60, 0xc2e2, 0x207d, 0x6be1, 0x1, 0x0);
        gbc.writeMem(0x8dfa, { 0x19 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1d7b, gbc.sp());
        EXPECT(0x8dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8dfa));
        // 19 0197
        gbc.setState(0x2a56, 0x10fa, 0x2290, 0x22e8, 0x2332, 0xe01b, 0x1, 0x0);
        gbc.writeMem(0x2a56, { 0x19 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x10fa, gbc.sp());
        EXPECT(0x2a57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0198
        gbc.setState(0x5f9c, 0x2793, 0x39c0, 0x95af, 0x2885, 0xe16c, 0x1, 0x0);
        gbc.writeMem(0x5f9c, { 0x19 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2793, gbc.sp());
        EXPECT(0x5f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0199
        gbc.setState(0x8d64, 0xe0f5, 0x5dc0, 0x7be8, 0xba03, 0x7182, 0x0, 0x0);
        gbc.writeMem(0x8d64, { 0x19 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe0f5, gbc.sp());
        EXPECT(0x8d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8d64));
        // 19 019A
        gbc.setState(0x1e1f, 0x90b5, 0x34f0, 0x5396, 0xc5cd, 0x191e, 0x0, 0x1);
        gbc.writeMem(0x1e1f, { 0x19 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x90b5, gbc.sp());
        EXPECT(0x1e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 019B
        gbc.setState(0xe62e, 0x927e, 0xf80, 0x5352, 0x762a, 0x5bbd, 0x1, 0x1);
        gbc.writeMem(0xe62e, { 0x19 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x927e, gbc.sp());
        EXPECT(0xe62f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe62e));
        // 19 019C
        gbc.setState(0x56a6, 0xc550, 0xcc30, 0xd57a, 0xdb7e, 0x158e, 0x1, 0x0);
        gbc.writeMem(0x56a6, { 0x19 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc550, gbc.sp());
        EXPECT(0x56a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 019E
        gbc.setState(0xaa2e, 0x9743, 0x8080, 0xf5f1, 0x9eaf, 0x88da, 0x0, 0x0);
        gbc.writeMem(0xaa2e, { 0x19 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9743, gbc.sp());
        EXPECT(0xaa2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xaa2e));
        // 19 019F
        gbc.setState(0x76f, 0xc9c7, 0x7940, 0xe51c, 0xb0ab, 0x7ec3, 0x0, 0x0);
        gbc.writeMem(0x76f, { 0x19 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc9c7, gbc.sp());
        EXPECT(0x770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 01A0
        gbc.setState(0xb0d7, 0x8430, 0xf1c0, 0x6b6, 0x6e30, 0x8902, 0x0, 0x1);
        gbc.writeMem(0xb0d7, { 0x19 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8430, gbc.sp());
        EXPECT(0xb0d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb0d7));
        // 19 01A1
        gbc.setState(0xb301, 0xbffd, 0x38d0, 0x88b5, 0x9c12, 0x865d, 0x0, 0x0);
        gbc.writeMem(0xb301, { 0x19 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xbffd, gbc.sp());
        EXPECT(0xb302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb301));
        // 19 01A2
        gbc.setState(0x6bf1, 0xcacc, 0x41f0, 0x6ae6, 0x36fb, 0xb045, 0x0, 0x0);
        gbc.writeMem(0x6bf1, { 0x19 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xcacc, gbc.sp());
        EXPECT(0x6bf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01A3
        gbc.setState(0x360d, 0x5b38, 0x9790, 0xea25, 0x751f, 0x7355, 0x0, 0x0);
        gbc.writeMem(0x360d, { 0x19 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5b38, gbc.sp());
        EXPECT(0x360e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01A4
        gbc.setState(0x6fde, 0x42ab, 0x6e00, 0xf725, 0x7bb5, 0xbe03, 0x1, 0x0);
        gbc.writeMem(0x6fde, { 0x19 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x42ab, gbc.sp());
        EXPECT(0x6fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 01A5
        gbc.setState(0x6b48, 0x1cf9, 0x3040, 0x279, 0x8cf4, 0xa403, 0x1, 0x0);
        gbc.writeMem(0x6b48, { 0x19 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1cf9, gbc.sp());
        EXPECT(0x6b49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 01A6
        gbc.setState(0x7e9e, 0xa22c, 0xed10, 0x8ec6, 0xb1ab, 0xf860, 0x1, 0x0);
        gbc.writeMem(0x7e9e, { 0x19 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa22c, gbc.sp());
        EXPECT(0x7e9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 01A7
        gbc.setState(0x3158, 0xb397, 0xe020, 0xfd29, 0x5dd, 0xc8f1, 0x1, 0x1);
        gbc.writeMem(0x3158, { 0x19 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb397, gbc.sp());
        EXPECT(0x3159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01A8
        gbc.setState(0x33c3, 0xb36c, 0xba80, 0xaa81, 0x36ed, 0x902c, 0x0, 0x0);
        gbc.writeMem(0x33c3, { 0x19 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb36c, gbc.sp());
        EXPECT(0x33c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01A9
        gbc.setState(0xc559, 0xdd4a, 0x2d70, 0x28cb, 0x1eca, 0x6a3c, 0x1, 0x1);
        gbc.writeMem(0xc559, { 0x19 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xdd4a, gbc.sp());
        EXPECT(0xc55a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc559));
        // 19 01AA
        gbc.setState(0xeb65, 0xbc2, 0xbe0, 0x94b2, 0x2cd0, 0x6429, 0x0, 0x0);
        gbc.writeMem(0xeb65, { 0x19 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbc2, gbc.sp());
        EXPECT(0xeb66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xeb65));
        // 19 01AB
        gbc.setState(0xa91e, 0x2006, 0xa190, 0xabff, 0x3dec, 0x8853, 0x1, 0x0);
        gbc.writeMem(0xa91e, { 0x19 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2006, gbc.sp());
        EXPECT(0xa91f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa91e));
        // 19 01AC
        gbc.setState(0x6e69, 0x7d3d, 0xdc80, 0xcbca, 0xb15e, 0x1d70, 0x0, 0x1);
        gbc.writeMem(0x6e69, { 0x19 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7d3d, gbc.sp());
        EXPECT(0x6e6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01AD
        gbc.setState(0x67dd, 0xe731, 0xd110, 0x40d8, 0x1a73, 0x682f, 0x1, 0x0);
        gbc.writeMem(0x67dd, { 0x19 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe731, gbc.sp());
        EXPECT(0x67de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01AE
        gbc.setState(0xe2ad, 0x505e, 0x2d80, 0x8fe0, 0x4d8d, 0x4ba0, 0x1, 0x1);
        gbc.writeMem(0xe2ad, { 0x19 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x505e, gbc.sp());
        EXPECT(0xe2ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe2ad));
        // 19 01AF
        gbc.setState(0x639c, 0xf821, 0x7720, 0xc89, 0xe10, 0xf38d, 0x0, 0x0);
        gbc.writeMem(0x639c, { 0x19 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf821, gbc.sp());
        EXPECT(0x639d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 01B0
        gbc.setState(0x1766, 0x3d60, 0xa0d0, 0x72b, 0x7f6f, 0x97c, 0x1, 0x0);
        gbc.writeMem(0x1766, { 0x19 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3d60, gbc.sp());
        EXPECT(0x1767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01B1
        gbc.setState(0xde66, 0xd458, 0xfb90, 0x641d, 0x2981, 0x88be, 0x0, 0x1);
        gbc.writeMem(0xde66, { 0x19 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd458, gbc.sp());
        EXPECT(0xde67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xde66));
        // 19 01B2
        gbc.setState(0x5b55, 0x84b8, 0xd6c0, 0x8bb1, 0x2df, 0xedc8, 0x0, 0x0);
        gbc.writeMem(0x5b55, { 0x19 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x84b8, gbc.sp());
        EXPECT(0x5b56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01B3
        gbc.setState(0x1c07, 0xa162, 0x2490, 0xc4fc, 0xe6de, 0x49b2, 0x1, 0x1);
        gbc.writeMem(0x1c07, { 0x19 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa162, gbc.sp());
        EXPECT(0x1c08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 01B4
        gbc.setState(0xc5df, 0x9bb9, 0xad40, 0x3677, 0x6ac4, 0x5f07, 0x1, 0x1);
        gbc.writeMem(0xc5df, { 0x19 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9bb9, gbc.sp());
        EXPECT(0xc5e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc5df));
        // 19 01B5
        gbc.setState(0x5332, 0x4e4c, 0x1130, 0xcc89, 0x57c1, 0xb007, 0x0, 0x1);
        gbc.writeMem(0x5332, { 0x19 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4e4c, gbc.sp());
        EXPECT(0x5333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 01B6
        gbc.setState(0x39e5, 0x2f1e, 0x9b10, 0x37fb, 0xc594, 0x529f, 0x0, 0x1);
        gbc.writeMem(0x39e5, { 0x19 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2f1e, gbc.sp());
        EXPECT(0x39e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 01B7
        gbc.setState(0xdc6c, 0xb21d, 0xe5a0, 0x7c8d, 0xca95, 0x828b, 0x1, 0x1);
        gbc.writeMem(0xdc6c, { 0x19 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb21d, gbc.sp());
        EXPECT(0xdc6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xdc6c));
        // 19 01B8
        gbc.setState(0x646e, 0x61d5, 0x1d10, 0xaf81, 0x9953, 0x6c75, 0x0, 0x0);
        gbc.writeMem(0x646e, { 0x19 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x61d5, gbc.sp());
        EXPECT(0x646f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 01B9
        gbc.setState(0x1e9, 0x3cbf, 0x23e0, 0x2e6e, 0x3a03, 0xbb0e, 0x0, 0x1);
        gbc.writeMem(0x1e9, { 0x19 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3cbf, gbc.sp());
        EXPECT(0x1ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01BA
        gbc.setState(0x9c8a, 0x6655, 0xf60, 0xb1ba, 0xb80a, 0xc1c2, 0x0, 0x0);
        gbc.writeMem(0x9c8a, { 0x19 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6655, gbc.sp());
        EXPECT(0x9c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9c8a));
        // 19 01BB
        gbc.setState(0xdc12, 0xd0a5, 0xe380, 0xfef8, 0xc849, 0xcd90, 0x0, 0x1);
        gbc.writeMem(0xdc12, { 0x19 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd0a5, gbc.sp());
        EXPECT(0xdc13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xdc12));
        // 19 01BC
        gbc.setState(0xb1cf, 0xe11d, 0x2520, 0x7c95, 0x1127, 0x38be, 0x0, 0x1);
        gbc.writeMem(0xb1cf, { 0x19 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe11d, gbc.sp());
        EXPECT(0xb1d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb1cf));
        // 19 01BD
        gbc.setState(0xeeba, 0x1198, 0x8640, 0xe96, 0x6661, 0xf244, 0x1, 0x1);
        gbc.writeMem(0xeeba, { 0x19 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1198, gbc.sp());
        EXPECT(0xeebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xeeba));
        // 19 01BE
        gbc.setState(0x324d, 0xf60, 0x5100, 0xcdaa, 0xff40, 0x1faa, 0x1, 0x1);
        gbc.writeMem(0x324d, { 0x19 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf60, gbc.sp());
        EXPECT(0x324e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 01BF
        gbc.setState(0x8469, 0xc7c8, 0x4ce0, 0x7772, 0x7348, 0x1964, 0x1, 0x1);
        gbc.writeMem(0x8469, { 0x19 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc7c8, gbc.sp());
        EXPECT(0x846a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8469));
        // 19 01C0
        gbc.setState(0x700b, 0x4a01, 0xd050, 0x7fcf, 0xa102, 0xebb, 0x1, 0x1);
        gbc.writeMem(0x700b, { 0x19 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4a01, gbc.sp());
        EXPECT(0x700c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01C1
        gbc.setState(0x4121, 0x2af7, 0x7690, 0x68c, 0x46c7, 0xde42, 0x0, 0x1);
        gbc.writeMem(0x4121, { 0x19 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2af7, gbc.sp());
        EXPECT(0x4122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 01C3
        gbc.setState(0xcc16, 0xdcbb, 0x4ec0, 0x841c, 0x22c0, 0xf322, 0x1, 0x0);
        gbc.writeMem(0xcc16, { 0x19 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdcbb, gbc.sp());
        EXPECT(0xcc17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xcc16));
        // 19 01C4
        gbc.setState(0x513e, 0xad1a, 0xfd50, 0x46a9, 0x7ee, 0xb468, 0x0, 0x0);
        gbc.writeMem(0x513e, { 0x19 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xad1a, gbc.sp());
        EXPECT(0x513f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01C5
        gbc.setState(0x4395, 0x968a, 0xccd0, 0xf0b1, 0x2479, 0x2afd, 0x0, 0x1);
        gbc.writeMem(0x4395, { 0x19 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x968a, gbc.sp());
        EXPECT(0x4396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01C6
        gbc.setState(0xdd06, 0x117a, 0x9740, 0x2d88, 0x322f, 0x5568, 0x0, 0x1);
        gbc.writeMem(0xdd06, { 0x19 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x117a, gbc.sp());
        EXPECT(0xdd07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xdd06));
        // 19 01C7
        gbc.setState(0xa8ac, 0xbcfc, 0x7230, 0x2d45, 0x16cc, 0x1d5e, 0x1, 0x0);
        gbc.writeMem(0xa8ac, { 0x19 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xbcfc, gbc.sp());
        EXPECT(0xa8ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa8ac));
        // 19 01C8
        gbc.setState(0x4a87, 0xd75f, 0x5b30, 0x8588, 0xf71, 0xfdb3, 0x0, 0x1);
        gbc.writeMem(0x4a87, { 0x19 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd75f, gbc.sp());
        EXPECT(0x4a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 01C9
        gbc.setState(0x6c00, 0x6208, 0xa740, 0x49d8, 0x377b, 0x1af8, 0x1, 0x1);
        gbc.writeMem(0x6c00, { 0x19 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6208, gbc.sp());
        EXPECT(0x6c01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01CA
        gbc.setState(0x9b6f, 0x9741, 0x8540, 0x91e8, 0xbb5b, 0x88fe, 0x0, 0x0);
        gbc.writeMem(0x9b6f, { 0x19 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9741, gbc.sp());
        EXPECT(0x9b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9b6f));
        // 19 01CB
        gbc.setState(0x99ae, 0x248b, 0x7cd0, 0x569c, 0x88ce, 0xa4dd, 0x1, 0x0);
        gbc.writeMem(0x99ae, { 0x19 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x248b, gbc.sp());
        EXPECT(0x99af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x99ae));
        // 19 01CC
        gbc.setState(0x24ba, 0x8819, 0xc830, 0xd2f1, 0x5bd, 0x258f, 0x0, 0x1);
        gbc.writeMem(0x24ba, { 0x19 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8819, gbc.sp());
        EXPECT(0x24bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01CD
        gbc.setState(0x87c3, 0xca86, 0xec40, 0xc4e2, 0x4cc8, 0xc0be, 0x1, 0x1);
        gbc.writeMem(0x87c3, { 0x19 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xca86, gbc.sp());
        EXPECT(0x87c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x87c3));
        // 19 01CE
        gbc.setState(0xcba9, 0x1d6f, 0x6960, 0x5721, 0x4aeb, 0xfc9e, 0x0, 0x1);
        gbc.writeMem(0xcba9, { 0x19 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1d6f, gbc.sp());
        EXPECT(0xcbaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xcba9));
        // 19 01CF
        gbc.setState(0x7ee9, 0x658b, 0x26d0, 0x76e1, 0xa87e, 0x2147, 0x0, 0x1);
        gbc.writeMem(0x7ee9, { 0x19 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x658b, gbc.sp());
        EXPECT(0x7eea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01D0
        gbc.setState(0x911e, 0x9800, 0x4880, 0x4785, 0xd07, 0xeae1, 0x0, 0x1);
        gbc.writeMem(0x911e, { 0x19 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9800, gbc.sp());
        EXPECT(0x911f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x911e));
        // 19 01D1
        gbc.setState(0x75f0, 0x70c9, 0x30c0, 0xb536, 0x31a4, 0x65bf, 0x0, 0x1);
        gbc.writeMem(0x75f0, { 0x19 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x70c9, gbc.sp());
        EXPECT(0x75f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01D2
        gbc.setState(0xe53d, 0x872a, 0x9080, 0xa5e2, 0xab4b, 0x8e5a, 0x0, 0x1);
        gbc.writeMem(0xe53d, { 0x19 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x872a, gbc.sp());
        EXPECT(0xe53e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe53d));
        // 19 01D3
        gbc.setState(0xca0, 0x791b, 0x57a0, 0x5eef, 0x34b6, 0xde0, 0x0, 0x0);
        gbc.writeMem(0xca0, { 0x19 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x791b, gbc.sp());
        EXPECT(0xca1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01D4
        gbc.setState(0xc629, 0xd0e1, 0xbcb0, 0xa275, 0x58ff, 0xc750, 0x1, 0x0);
        gbc.writeMem(0xc629, { 0x19 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd0e1, gbc.sp());
        EXPECT(0xc62a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc629));
        // 19 01D5
        gbc.setState(0x9f7c, 0x283c, 0x6bf0, 0x7348, 0x3d05, 0x5dd1, 0x0, 0x1);
        gbc.writeMem(0x9f7c, { 0x19 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x283c, gbc.sp());
        EXPECT(0x9f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9f7c));
        // 19 01D6
        gbc.setState(0xf3f, 0xb159, 0x1a80, 0xe9fa, 0x6405, 0xeec8, 0x0, 0x0);
        gbc.writeMem(0xf3f, { 0x19 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb159, gbc.sp());
        EXPECT(0xf40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 01D8
        gbc.setState(0xb445, 0xc441, 0x7860, 0x351f, 0x7db1, 0x8fdd, 0x0, 0x0);
        gbc.writeMem(0xb445, { 0x19 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc441, gbc.sp());
        EXPECT(0xb446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb445));
        // 19 01DA
        gbc.setState(0x884e, 0xc940, 0xc020, 0x1c65, 0x497c, 0x4588, 0x0, 0x0);
        gbc.writeMem(0x884e, { 0x19 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc940, gbc.sp());
        EXPECT(0x884f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x884e));
        // 19 01DB
        gbc.setState(0x2032, 0x256b, 0x1ba0, 0x85d7, 0x9c4a, 0xc2c1, 0x1, 0x1);
        gbc.writeMem(0x2032, { 0x19 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x256b, gbc.sp());
        EXPECT(0x2033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 01DC
        gbc.setState(0x27d8, 0xad2d, 0x7b0, 0x31e, 0x72db, 0x889a, 0x1, 0x0);
        gbc.writeMem(0x27d8, { 0x19 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xad2d, gbc.sp());
        EXPECT(0x27d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01DD
        gbc.setState(0xaf, 0xf91c, 0x1d50, 0xabd7, 0xe7c3, 0xcbd5, 0x1, 0x0);
        gbc.writeMem(0xaf, { 0x19 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf91c, gbc.sp());
        EXPECT(0xb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 01DE
        gbc.setState(0x3d5a, 0xe153, 0xecd0, 0x660d, 0x2748, 0x2191, 0x0, 0x0);
        gbc.writeMem(0x3d5a, { 0x19 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe153, gbc.sp());
        EXPECT(0x3d5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01DF
        gbc.setState(0x369f, 0x3323, 0x4460, 0x914c, 0x740b, 0xe5ff, 0x1, 0x0);
        gbc.writeMem(0x369f, { 0x19 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3323, gbc.sp());
        EXPECT(0x36a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 01E0
        gbc.setState(0x59e8, 0x1b49, 0xc520, 0xab1a, 0xc393, 0x611e, 0x1, 0x1);
        gbc.writeMem(0x59e8, { 0x19 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1b49, gbc.sp());
        EXPECT(0x59e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 01E1
        gbc.setState(0xef47, 0x114, 0x77a0, 0x31b6, 0xb0c9, 0xed40, 0x0, 0x0);
        gbc.writeMem(0xef47, { 0x19 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x114, gbc.sp());
        EXPECT(0xef48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xef47));
        // 19 01E2
        gbc.setState(0xbc98, 0x40dd, 0x5300, 0xb266, 0xc48c, 0xf7f, 0x0, 0x0);
        gbc.writeMem(0xbc98, { 0x19 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x40dd, gbc.sp());
        EXPECT(0xbc99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbc98));
        // 19 01E3
        gbc.setState(0x9841, 0xd268, 0x4500, 0x12d2, 0xda5f, 0x51f2, 0x0, 0x1);
        gbc.writeMem(0x9841, { 0x19 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd268, gbc.sp());
        EXPECT(0x9842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9841));
        // 19 01E4
        gbc.setState(0x26d5, 0xcb7f, 0xa4b0, 0xa073, 0xca61, 0x3d2d, 0x1, 0x0);
        gbc.writeMem(0x26d5, { 0x19 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xcb7f, gbc.sp());
        EXPECT(0x26d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 01E5
        gbc.setState(0x8567, 0x743b, 0x5ed0, 0x77cb, 0x3471, 0xbb74, 0x0, 0x1);
        gbc.writeMem(0x8567, { 0x19 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x743b, gbc.sp());
        EXPECT(0x8568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8567));
        // 19 01E6
        gbc.setState(0x40bb, 0x8725, 0x6b60, 0x40b0, 0xdd7b, 0x70d8, 0x0, 0x1);
        gbc.writeMem(0x40bb, { 0x19 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8725, gbc.sp());
        EXPECT(0x40bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 01E7
        gbc.setState(0xd234, 0x69f9, 0xe220, 0xeec2, 0x6aaf, 0xdf16, 0x0, 0x1);
        gbc.writeMem(0xd234, { 0x19 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x69f9, gbc.sp());
        EXPECT(0xd235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd234));
        // 19 01E8
        gbc.setState(0xbb6e, 0xe55c, 0x4670, 0x8d2, 0x8e32, 0xd7ed, 0x0, 0x1);
        gbc.writeMem(0xbb6e, { 0x19 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe55c, gbc.sp());
        EXPECT(0xbb6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbb6e));
        // 19 01E9
        gbc.setState(0x5c7e, 0xf572, 0x7a80, 0x4340, 0x80be, 0x2972, 0x1, 0x1);
        gbc.writeMem(0x5c7e, { 0x19 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf572, gbc.sp());
        EXPECT(0x5c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01EA
        gbc.setState(0x74cf, 0x7b5c, 0xa360, 0x9b, 0x27d5, 0xa63, 0x0, 0x1);
        gbc.writeMem(0x74cf, { 0x19 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7b5c, gbc.sp());
        EXPECT(0x74d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01EB
        gbc.setState(0x7d84, 0xa44d, 0x3630, 0x1bff, 0x7e62, 0x853, 0x0, 0x0);
        gbc.writeMem(0x7d84, { 0x19 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa44d, gbc.sp());
        EXPECT(0x7d85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01EC
        gbc.setState(0x91d6, 0x279b, 0xcc70, 0xf93e, 0x7fe3, 0x41b6, 0x0, 0x1);
        gbc.writeMem(0x91d6, { 0x19 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x279b, gbc.sp());
        EXPECT(0x91d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x91d6));
        // 19 01ED
        gbc.setState(0x451b, 0xf377, 0xde70, 0xba60, 0xb4c6, 0x3d9f, 0x1, 0x0);
        gbc.writeMem(0x451b, { 0x19 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf377, gbc.sp());
        EXPECT(0x451c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01EE
        gbc.setState(0x64f9, 0x4d58, 0xc4b0, 0x11bd, 0xaf1e, 0x89b0, 0x0, 0x1);
        gbc.writeMem(0x64f9, { 0x19 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4d58, gbc.sp());
        EXPECT(0x64fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 01EF
        gbc.setState(0xc646, 0x43b3, 0xf8f0, 0x2886, 0x1c8, 0x36c6, 0x1, 0x1);
        gbc.writeMem(0xc646, { 0x19 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x43b3, gbc.sp());
        EXPECT(0xc647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc646));
        // 19 01F0
        gbc.setState(0xc4, 0x99a5, 0xcd0, 0x6fa, 0x4c55, 0xb090, 0x1, 0x0);
        gbc.writeMem(0xc4, { 0x19 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x99a5, gbc.sp());
        EXPECT(0xc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01F1
        gbc.setState(0xd23d, 0xbc7f, 0xed10, 0x5542, 0x349e, 0x9bbc, 0x0, 0x0);
        gbc.writeMem(0xd23d, { 0x19 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbc7f, gbc.sp());
        EXPECT(0xd23e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd23d));
        // 19 01F2
        gbc.setState(0x78c8, 0xc089, 0x5820, 0x521, 0xc35e, 0xe3ba, 0x1, 0x1);
        gbc.writeMem(0x78c8, { 0x19 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc089, gbc.sp());
        EXPECT(0x78c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 01F6
        gbc.setState(0xab28, 0x47ae, 0x8660, 0x56a1, 0x4fa, 0xe698, 0x1, 0x1);
        gbc.writeMem(0xab28, { 0x19 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x47ae, gbc.sp());
        EXPECT(0xab29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xab28));
        // 19 01F7
        gbc.setState(0xb932, 0xe94c, 0xaeb0, 0x208e, 0x8a95, 0x17bc, 0x1, 0x0);
        gbc.writeMem(0xb932, { 0x19 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe94c, gbc.sp());
        EXPECT(0xb933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb932));
        // 19 01F8
        gbc.setState(0x1d8d, 0x7dd6, 0x2e80, 0xfa7f, 0xdaf4, 0x8966, 0x1, 0x0);
        gbc.writeMem(0x1d8d, { 0x19 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7dd6, gbc.sp());
        EXPECT(0x1d8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 01F9
        gbc.setState(0x5cb4, 0x4a15, 0x6190, 0x612f, 0x96c5, 0xdd1d, 0x1, 0x0);
        gbc.writeMem(0x5cb4, { 0x19 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4a15, gbc.sp());
        EXPECT(0x5cb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 01FA
        gbc.setState(0x1120, 0x2268, 0x5070, 0xa142, 0xf7ee, 0x59b, 0x0, 0x1);
        gbc.writeMem(0x1120, { 0x19 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2268, gbc.sp());
        EXPECT(0x1121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01FC
        gbc.setState(0x38d1, 0x78fd, 0x6f30, 0xb27, 0x85b, 0x7d61, 0x0, 0x1);
        gbc.writeMem(0x38d1, { 0x19 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x78fd, gbc.sp());
        EXPECT(0x38d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01FD
        gbc.setState(0x788b, 0x2e2b, 0x8860, 0xe6b9, 0x4bc0, 0x204d, 0x0, 0x1);
        gbc.writeMem(0x788b, { 0x19 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2e2b, gbc.sp());
        EXPECT(0x788c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 01FF
        gbc.setState(0x59c2, 0x866, 0xb0f0, 0x8f35, 0x2dee, 0xa23c, 0x1, 0x1);
        gbc.writeMem(0x59c2, { 0x19 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x866, gbc.sp());
        EXPECT(0x59c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0200
        gbc.setState(0xdf9, 0xc1d2, 0x5f50, 0x34fb, 0xbb6b, 0xf633, 0x0, 0x1);
        gbc.writeMem(0xdf9, { 0x19 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc1d2, gbc.sp());
        EXPECT(0xdfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0201
        gbc.setState(0x9d60, 0x649a, 0xb800, 0x2486, 0xdca5, 0x9c30, 0x1, 0x1);
        gbc.writeMem(0x9d60, { 0x19 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x649a, gbc.sp());
        EXPECT(0x9d61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9d60));
        // 19 0203
        gbc.setState(0x9244, 0xf47, 0xa140, 0xe021, 0xb9b2, 0x4c23, 0x1, 0x0);
        gbc.writeMem(0x9244, { 0x19 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf47, gbc.sp());
        EXPECT(0x9245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9244));
        // 19 0204
        gbc.setState(0x2be5, 0x6036, 0x8a40, 0x2180, 0x22a0, 0x8904, 0x1, 0x1);
        gbc.writeMem(0x2be5, { 0x19 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6036, gbc.sp());
        EXPECT(0x2be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0205
        gbc.setState(0x6011, 0x1526, 0x1e00, 0xb998, 0x9e34, 0x605a, 0x1, 0x1);
        gbc.writeMem(0x6011, { 0x19 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1526, gbc.sp());
        EXPECT(0x6012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0206
        gbc.setState(0x216a, 0xa533, 0x5790, 0xdda1, 0xfc29, 0xd7b5, 0x1, 0x1);
        gbc.writeMem(0x216a, { 0x19 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa533, gbc.sp());
        EXPECT(0x216b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0207
        gbc.setState(0x9176, 0xc7f1, 0xa030, 0x2ca7, 0x2a49, 0x9f25, 0x0, 0x1);
        gbc.writeMem(0x9176, { 0x19 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc7f1, gbc.sp());
        EXPECT(0x9177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9176));
        // 19 0208
        gbc.setState(0x9ed2, 0x2592, 0xa7a0, 0x9d45, 0x4949, 0xa12, 0x0, 0x1);
        gbc.writeMem(0x9ed2, { 0x19 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2592, gbc.sp());
        EXPECT(0x9ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9ed2));
        // 19 0209
        gbc.setState(0x40ac, 0xbef8, 0xfb0, 0x4759, 0xf2ca, 0x723d, 0x1, 0x0);
        gbc.writeMem(0x40ac, { 0x19 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbef8, gbc.sp());
        EXPECT(0x40ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 020A
        gbc.setState(0x2d78, 0xbcdf, 0xb2b0, 0xb154, 0xf859, 0x2f78, 0x1, 0x0);
        gbc.writeMem(0x2d78, { 0x19 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xbcdf, gbc.sp());
        EXPECT(0x2d79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 020B
        gbc.setState(0xb008, 0xe8f3, 0xb40, 0xaa00, 0x37b6, 0x71df, 0x1, 0x0);
        gbc.writeMem(0xb008, { 0x19 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe8f3, gbc.sp());
        EXPECT(0xb009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb008));
        // 19 020C
        gbc.setState(0xc720, 0xd81e, 0x3880, 0xe1e8, 0xc67d, 0x7d9a, 0x0, 0x0);
        gbc.writeMem(0xc720, { 0x19 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd81e, gbc.sp());
        EXPECT(0xc721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc720));
        // 19 020D
        gbc.setState(0x28ba, 0xd61c, 0x250, 0xc6e8, 0x55b1, 0x80d3, 0x0, 0x0);
        gbc.writeMem(0x28ba, { 0x19 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd61c, gbc.sp());
        EXPECT(0x28bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 020E
        gbc.setState(0xbbdc, 0x661, 0x7d70, 0xb1a0, 0x5fc8, 0xeb73, 0x1, 0x1);
        gbc.writeMem(0xbbdc, { 0x19 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x661, gbc.sp());
        EXPECT(0xbbdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbbdc));
        // 19 020F
        gbc.setState(0xaf9, 0x58b5, 0xfbe0, 0xb33f, 0x3443, 0xbe3, 0x1, 0x0);
        gbc.writeMem(0xaf9, { 0x19 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x58b5, gbc.sp());
        EXPECT(0xafa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0211
        gbc.setState(0x5009, 0xd27f, 0x6c00, 0x54e7, 0xf226, 0x3627, 0x0, 0x1);
        gbc.writeMem(0x5009, { 0x19 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd27f, gbc.sp());
        EXPECT(0x500a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0212
        gbc.setState(0xd189, 0x36c1, 0x6cc0, 0x7b84, 0xc1c5, 0x5c4d, 0x0, 0x0);
        gbc.writeMem(0xd189, { 0x19 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x36c1, gbc.sp());
        EXPECT(0xd18a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd189));
        // 19 0213
        gbc.setState(0x5ec1, 0x1517, 0x37f0, 0x6bb2, 0x25e0, 0x8521, 0x0, 0x1);
        gbc.writeMem(0x5ec1, { 0x19 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1517, gbc.sp());
        EXPECT(0x5ec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0214
        gbc.setState(0x9985, 0xb330, 0x7290, 0x353a, 0x4590, 0xa99a, 0x0, 0x1);
        gbc.writeMem(0x9985, { 0x19 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb330, gbc.sp());
        EXPECT(0x9986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9985));
        // 19 0215
        gbc.setState(0x7001, 0xdf67, 0x54a0, 0x6ba6, 0xf945, 0x70ab, 0x0, 0x1);
        gbc.writeMem(0x7001, { 0x19 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xdf67, gbc.sp());
        EXPECT(0x7002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0216
        gbc.setState(0x3b0b, 0xd1, 0xcb60, 0x159d, 0xeba9, 0x6072, 0x0, 0x1);
        gbc.writeMem(0x3b0b, { 0x19 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd1, gbc.sp());
        EXPECT(0x3b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0217
        gbc.setState(0x49d7, 0x3d89, 0xb2b0, 0xe031, 0x8403, 0xd6b0, 0x1, 0x0);
        gbc.writeMem(0x49d7, { 0x19 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3d89, gbc.sp());
        EXPECT(0x49d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0218
        gbc.setState(0x5690, 0x79ac, 0x200, 0xf233, 0xc33b, 0x21c1, 0x0, 0x1);
        gbc.writeMem(0x5690, { 0x19 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x79ac, gbc.sp());
        EXPECT(0x5691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0219
        gbc.setState(0xa068, 0xc2ca, 0x3cb0, 0x57b1, 0x6932, 0x13eb, 0x0, 0x0);
        gbc.writeMem(0xa068, { 0x19 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc2ca, gbc.sp());
        EXPECT(0xa069, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa068));
        // 19 021A
        gbc.setState(0x1055, 0x8428, 0x2510, 0x8f44, 0x9187, 0x560b, 0x1, 0x0);
        gbc.writeMem(0x1055, { 0x19 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8428, gbc.sp());
        EXPECT(0x1056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 021B
        gbc.setState(0x2fb5, 0x146b, 0x8dd0, 0x735, 0xa82, 0x74bf, 0x0, 0x0);
        gbc.writeMem(0x2fb5, { 0x19 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x146b, gbc.sp());
        EXPECT(0x2fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 021C
        gbc.setState(0x4a81, 0x306f, 0xab40, 0xa643, 0xdd5d, 0x7863, 0x0, 0x0);
        gbc.writeMem(0x4a81, { 0x19 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x306f, gbc.sp());
        EXPECT(0x4a82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 021D
        gbc.setState(0xb443, 0x39ac, 0x65d0, 0x7ecd, 0x142e, 0xfa7c, 0x0, 0x0);
        gbc.writeMem(0xb443, { 0x19 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x39ac, gbc.sp());
        EXPECT(0xb444, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb443));
        // 19 021E
        gbc.setState(0xd357, 0x4be6, 0xc810, 0xd7ea, 0xb0c9, 0x18ff, 0x0, 0x0);
        gbc.writeMem(0xd357, { 0x19 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4be6, gbc.sp());
        EXPECT(0xd358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd357));
        // 19 021F
        gbc.setState(0x5bb8, 0xf887, 0x48b0, 0xd85d, 0x255, 0x2e5f, 0x1, 0x0);
        gbc.writeMem(0x5bb8, { 0x19 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf887, gbc.sp());
        EXPECT(0x5bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0220
        gbc.setState(0x2078, 0x8c4a, 0xa280, 0x8b20, 0x77f5, 0x8cf0, 0x0, 0x1);
        gbc.writeMem(0x2078, { 0x19 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8c4a, gbc.sp());
        EXPECT(0x2079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0221
        gbc.setState(0x551, 0x7c74, 0x6ea0, 0x9ea3, 0x3f4d, 0xadcc, 0x0, 0x1);
        gbc.writeMem(0x551, { 0x19 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7c74, gbc.sp());
        EXPECT(0x552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0223
        gbc.setState(0x149b, 0x6497, 0x21c0, 0x16cb, 0x345a, 0xfa4f, 0x0, 0x1);
        gbc.writeMem(0x149b, { 0x19 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6497, gbc.sp());
        EXPECT(0x149c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0224
        gbc.setState(0xebe3, 0x32c7, 0x1d40, 0x6ee6, 0x23be, 0x531a, 0x1, 0x0);
        gbc.writeMem(0xebe3, { 0x19 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x32c7, gbc.sp());
        EXPECT(0xebe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xebe3));
        // 19 0225
        gbc.setState(0x83e2, 0xb590, 0x1900, 0xf1ed, 0x35e4, 0x55de, 0x0, 0x1);
        gbc.writeMem(0x83e2, { 0x19 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb590, gbc.sp());
        EXPECT(0x83e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x83e2));
        // 19 0226
        gbc.setState(0xb27a, 0x3fa8, 0xb460, 0x738b, 0x76c9, 0x3595, 0x1, 0x0);
        gbc.writeMem(0xb27a, { 0x19 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3fa8, gbc.sp());
        EXPECT(0xb27b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb27a));
        // 19 0227
        gbc.setState(0xcf55, 0x1482, 0xd360, 0xcc19, 0x2639, 0x360, 0x1, 0x1);
        gbc.writeMem(0xcf55, { 0x19 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1482, gbc.sp());
        EXPECT(0xcf56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xcf55));
        // 19 0228
        gbc.setState(0xd15f, 0x12d1, 0xb420, 0x239e, 0x6aab, 0x9089, 0x1, 0x1);
        gbc.writeMem(0xd15f, { 0x19 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x12d1, gbc.sp());
        EXPECT(0xd160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd15f));
        // 19 0229
        gbc.setState(0x2a32, 0x93a5, 0xb1f0, 0xec2e, 0x4e36, 0x16b1, 0x1, 0x1);
        gbc.writeMem(0x2a32, { 0x19 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x93a5, gbc.sp());
        EXPECT(0x2a33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 022B
        gbc.setState(0x6f09, 0x65df, 0xbc20, 0x5077, 0x9d18, 0x97fd, 0x1, 0x0);
        gbc.writeMem(0x6f09, { 0x19 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x65df, gbc.sp());
        EXPECT(0x6f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 022C
        gbc.setState(0xb4f, 0x94bc, 0xa950, 0xca56, 0xb348, 0xc36b, 0x1, 0x0);
        gbc.writeMem(0xb4f, { 0x19 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x94bc, gbc.sp());
        EXPECT(0xb50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 022D
        gbc.setState(0x37af, 0x5c53, 0xdce0, 0xec67, 0x2b75, 0x154, 0x0, 0x0);
        gbc.writeMem(0x37af, { 0x19 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5c53, gbc.sp());
        EXPECT(0x37b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 022E
        gbc.setState(0x3aa1, 0x5ce7, 0x4210, 0x13f8, 0x1432, 0x9b03, 0x1, 0x1);
        gbc.writeMem(0x3aa1, { 0x19 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5ce7, gbc.sp());
        EXPECT(0x3aa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 022F
        gbc.setState(0x4a5d, 0xc467, 0x7820, 0xf022, 0x4ac8, 0x9ccf, 0x0, 0x1);
        gbc.writeMem(0x4a5d, { 0x19 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc467, gbc.sp());
        EXPECT(0x4a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0230
        gbc.setState(0x513e, 0x4b5d, 0xa150, 0x4889, 0xb6bf, 0xa19c, 0x0, 0x1);
        gbc.writeMem(0x513e, { 0x19 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4b5d, gbc.sp());
        EXPECT(0x513f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0232
        gbc.setState(0x2649, 0x9afa, 0x31c0, 0xd1ab, 0xa8a8, 0xde97, 0x1, 0x0);
        gbc.writeMem(0x2649, { 0x19 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9afa, gbc.sp());
        EXPECT(0x264a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0233
        gbc.setState(0xc5c3, 0xeb76, 0xb450, 0x5e37, 0x32f3, 0x38d9, 0x1, 0x0);
        gbc.writeMem(0xc5c3, { 0x19 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xeb76, gbc.sp());
        EXPECT(0xc5c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc5c3));
        // 19 0234
        gbc.setState(0xeed2, 0x39e8, 0x6470, 0x92c4, 0x2dde, 0x510d, 0x0, 0x0);
        gbc.writeMem(0xeed2, { 0x19 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x39e8, gbc.sp());
        EXPECT(0xeed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xeed2));
        // 19 0235
        gbc.setState(0x4594, 0x562, 0xf970, 0xd86f, 0x50ef, 0xf693, 0x0, 0x0);
        gbc.writeMem(0x4594, { 0x19 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x562, gbc.sp());
        EXPECT(0x4595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0236
        gbc.setState(0x5061, 0x2821, 0xb030, 0x79b7, 0xcd6, 0xfb3e, 0x1, 0x0);
        gbc.writeMem(0x5061, { 0x19 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2821, gbc.sp());
        EXPECT(0x5062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0237
        gbc.setState(0x4423, 0xdb3e, 0x54c0, 0x7909, 0xe423, 0xb5d2, 0x1, 0x1);
        gbc.writeMem(0x4423, { 0x19 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xdb3e, gbc.sp());
        EXPECT(0x4424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0238
        gbc.setState(0xbce0, 0xf4f2, 0x6830, 0xa393, 0x3df3, 0xb155, 0x0, 0x0);
        gbc.writeMem(0xbce0, { 0x19 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf4f2, gbc.sp());
        EXPECT(0xbce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbce0));
        // 19 0239
        gbc.setState(0x5274, 0x9ed4, 0x76a0, 0x7ab2, 0x277d, 0x81d0, 0x0, 0x1);
        gbc.writeMem(0x5274, { 0x19 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9ed4, gbc.sp());
        EXPECT(0x5275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 023A
        gbc.setState(0x5294, 0x9ce7, 0xe250, 0x322d, 0xa81c, 0xac47, 0x0, 0x0);
        gbc.writeMem(0x5294, { 0x19 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9ce7, gbc.sp());
        EXPECT(0x5295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 023B
        gbc.setState(0xa08e, 0xef40, 0xb7a0, 0xd3c9, 0x9b61, 0xe532, 0x1, 0x1);
        gbc.writeMem(0xa08e, { 0x19 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xef40, gbc.sp());
        EXPECT(0xa08f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa08e));
        // 19 023C
        gbc.setState(0xc6db, 0xa2bc, 0x95d0, 0x4b25, 0x9f45, 0x32ae, 0x1, 0x1);
        gbc.writeMem(0xc6db, { 0x19 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa2bc, gbc.sp());
        EXPECT(0xc6dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc6db));
        // 19 023D
        gbc.setState(0x5d04, 0x59eb, 0x1be0, 0x6d5f, 0x203a, 0xe94f, 0x1, 0x1);
        gbc.writeMem(0x5d04, { 0x19 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x59eb, gbc.sp());
        EXPECT(0x5d05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 023E
        gbc.setState(0xeffb, 0x544c, 0x47a0, 0xb17e, 0x24ea, 0xd2b1, 0x1, 0x1);
        gbc.writeMem(0xeffb, { 0x19 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x544c, gbc.sp());
        EXPECT(0xeffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xeffb));
        // 19 023F
        gbc.setState(0xa095, 0x35a9, 0xaae0, 0x1da8, 0xa063, 0x4bb4, 0x0, 0x0);
        gbc.writeMem(0xa095, { 0x19 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x35a9, gbc.sp());
        EXPECT(0xa096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa095));
        // 19 0240
        gbc.setState(0x16ac, 0xa02, 0xc5c0, 0xb755, 0xcacf, 0x9fbb, 0x0, 0x1);
        gbc.writeMem(0x16ac, { 0x19 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa02, gbc.sp());
        EXPECT(0x16ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0241
        gbc.setState(0xeaf9, 0x9ce6, 0x4f10, 0x8469, 0x3cff, 0x5c7, 0x1, 0x1);
        gbc.writeMem(0xeaf9, { 0x19 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9ce6, gbc.sp());
        EXPECT(0xeafa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xeaf9));
        // 19 0242
        gbc.setState(0xa30c, 0x218a, 0x8440, 0x585e, 0xee72, 0x6b5f, 0x0, 0x0);
        gbc.writeMem(0xa30c, { 0x19 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x218a, gbc.sp());
        EXPECT(0xa30d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa30c));
        // 19 0243
        gbc.setState(0x6ac2, 0xad48, 0xe970, 0xad16, 0x2ba, 0x6189, 0x0, 0x1);
        gbc.writeMem(0x6ac2, { 0x19 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xad48, gbc.sp());
        EXPECT(0x6ac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0244
        gbc.setState(0x2eec, 0xa0fb, 0xe180, 0xd4e0, 0x22ed, 0x2348, 0x0, 0x0);
        gbc.writeMem(0x2eec, { 0x19 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa0fb, gbc.sp());
        EXPECT(0x2eed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0245
        gbc.setState(0xb783, 0x84a5, 0xa8e0, 0x4f01, 0x4607, 0x7770, 0x0, 0x0);
        gbc.writeMem(0xb783, { 0x19 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x84a5, gbc.sp());
        EXPECT(0xb784, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb783));
        // 19 0246
        gbc.setState(0x8462, 0x8ba3, 0xdcb0, 0xed24, 0xbd0e, 0xe606, 0x1, 0x0);
        gbc.writeMem(0x8462, { 0x19 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8ba3, gbc.sp());
        EXPECT(0x8463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8462));
        // 19 0247
        gbc.setState(0x7ada, 0x78d6, 0x37c0, 0x89ef, 0x4774, 0x6324, 0x0, 0x1);
        gbc.writeMem(0x7ada, { 0x19 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x78d6, gbc.sp());
        EXPECT(0x7adb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0248
        gbc.setState(0xdbdd, 0xf52b, 0x3510, 0x8196, 0x752, 0xa0cb, 0x0, 0x1);
        gbc.writeMem(0xdbdd, { 0x19 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf52b, gbc.sp());
        EXPECT(0xdbde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xdbdd));
        // 19 0249
        gbc.setState(0x8dd6, 0x3bd1, 0x2ed0, 0x7804, 0x3f0f, 0xcd38, 0x0, 0x1);
        gbc.writeMem(0x8dd6, { 0x19 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3bd1, gbc.sp());
        EXPECT(0x8dd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8dd6));
        // 19 024A
        gbc.setState(0x8ed6, 0xb83d, 0x4c30, 0x3831, 0xf404, 0xc80a, 0x1, 0x1);
        gbc.writeMem(0x8ed6, { 0x19 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb83d, gbc.sp());
        EXPECT(0x8ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8ed6));
        // 19 024B
        gbc.setState(0x3e0b, 0x3614, 0x2d50, 0xea2a, 0x4e6, 0x7e52, 0x0, 0x1);
        gbc.writeMem(0x3e0b, { 0x19 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3614, gbc.sp());
        EXPECT(0x3e0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 024C
        gbc.setState(0xb8d5, 0xe450, 0x6ba0, 0xf2f9, 0xf1a, 0xef26, 0x0, 0x0);
        gbc.writeMem(0xb8d5, { 0x19 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe450, gbc.sp());
        EXPECT(0xb8d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb8d5));
        // 19 024D
        gbc.setState(0xbbac, 0xf63d, 0x5680, 0xaa6b, 0xaefb, 0x4f38, 0x1, 0x0);
        gbc.writeMem(0xbbac, { 0x19 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf63d, gbc.sp());
        EXPECT(0xbbad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbbac));
        // 19 024E
        gbc.setState(0x5e9e, 0x25c0, 0xdf10, 0x65e3, 0x6a53, 0x2a13, 0x1, 0x0);
        gbc.writeMem(0x5e9e, { 0x19 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x25c0, gbc.sp());
        EXPECT(0x5e9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 024F
        gbc.setState(0x2c0, 0xafd9, 0x5ef0, 0xf76e, 0xc2ca, 0x2c81, 0x1, 0x0);
        gbc.writeMem(0x2c0, { 0x19 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xafd9, gbc.sp());
        EXPECT(0x2c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0250
        gbc.setState(0xb1d7, 0xdee1, 0x2170, 0x9907, 0xaa3d, 0xe650, 0x1, 0x0);
        gbc.writeMem(0xb1d7, { 0x19 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdee1, gbc.sp());
        EXPECT(0xb1d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb1d7));
        // 19 0251
        gbc.setState(0x56d2, 0xf632, 0xa570, 0x9b63, 0x4a75, 0x7811, 0x0, 0x0);
        gbc.writeMem(0x56d2, { 0x19 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf632, gbc.sp());
        EXPECT(0x56d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0252
        gbc.setState(0x788a, 0x2c93, 0x5570, 0x9dcf, 0x79c6, 0x3a89, 0x0, 0x1);
        gbc.writeMem(0x788a, { 0x19 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2c93, gbc.sp());
        EXPECT(0x788b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0253
        gbc.setState(0x2124, 0xe2a, 0x6020, 0x9cbb, 0xa3e3, 0x851f, 0x1, 0x0);
        gbc.writeMem(0x2124, { 0x19 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe2a, gbc.sp());
        EXPECT(0x2125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0254
        gbc.setState(0x9e42, 0xc19c, 0x83c0, 0x3fa1, 0xb265, 0x7fb5, 0x1, 0x1);
        gbc.writeMem(0x9e42, { 0x19 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc19c, gbc.sp());
        EXPECT(0x9e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9e42));
        // 19 0255
        gbc.setState(0x32d1, 0x91f9, 0xa580, 0xe055, 0xbbb6, 0xaa1b, 0x1, 0x0);
        gbc.writeMem(0x32d1, { 0x19 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x91f9, gbc.sp());
        EXPECT(0x32d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0256
        gbc.setState(0x8758, 0xd60d, 0xb540, 0xdd89, 0x23cb, 0x97d1, 0x0, 0x1);
        gbc.writeMem(0x8758, { 0x19 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd60d, gbc.sp());
        EXPECT(0x8759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8758));
        // 19 0257
        gbc.setState(0x5e7d, 0x7246, 0xf340, 0x89ab, 0x82e2, 0x8883, 0x0, 0x0);
        gbc.writeMem(0x5e7d, { 0x19 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7246, gbc.sp());
        EXPECT(0x5e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0258
        gbc.setState(0x1ded, 0x9e4, 0x7220, 0x1be4, 0x8ee3, 0x26f9, 0x0, 0x1);
        gbc.writeMem(0x1ded, { 0x19 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9e4, gbc.sp());
        EXPECT(0x1dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0259
        gbc.setState(0x3635, 0x5039, 0x2f40, 0x7fad, 0xea16, 0x2ded, 0x0, 0x0);
        gbc.writeMem(0x3635, { 0x19 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5039, gbc.sp());
        EXPECT(0x3636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 025A
        gbc.setState(0xc168, 0x7a73, 0x9960, 0x75e, 0x2ac6, 0xdc09, 0x0, 0x1);
        gbc.writeMem(0xc168, { 0x19 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7a73, gbc.sp());
        EXPECT(0xc169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc168));
        // 19 025B
        gbc.setState(0x599b, 0xebbf, 0x2ce0, 0xb6fb, 0x73d2, 0x4d3f, 0x0, 0x1);
        gbc.writeMem(0x599b, { 0x19 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xebbf, gbc.sp());
        EXPECT(0x599c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 025D
        gbc.setState(0xd164, 0xeec9, 0xef20, 0x1c91, 0x7dfd, 0xb755, 0x0, 0x0);
        gbc.writeMem(0xd164, { 0x19 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xeec9, gbc.sp());
        EXPECT(0xd165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd164));
        // 19 025E
        gbc.setState(0xd342, 0x3cef, 0xda50, 0x5e75, 0xe2c7, 0x9ff5, 0x1, 0x0);
        gbc.writeMem(0xd342, { 0x19 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3cef, gbc.sp());
        EXPECT(0xd343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd342));
        // 19 025F
        gbc.setState(0x2189, 0xf3e6, 0x3460, 0x5fff, 0x26f5, 0xdcbf, 0x1, 0x1);
        gbc.writeMem(0x2189, { 0x19 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf3e6, gbc.sp());
        EXPECT(0x218a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0260
        gbc.setState(0xe106, 0x12fb, 0xef20, 0x408e, 0x7d30, 0x3247, 0x1, 0x1);
        gbc.writeMem(0xe106, { 0x19 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x12fb, gbc.sp());
        EXPECT(0xe107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe106));
        // 19 0261
        gbc.setState(0xc737, 0x2987, 0xf9f0, 0xb3fd, 0x5f77, 0x8eb8, 0x1, 0x0);
        gbc.writeMem(0xc737, { 0x19 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2987, gbc.sp());
        EXPECT(0xc738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc737));
        // 19 0262
        gbc.setState(0x98d6, 0xf476, 0x2470, 0x3ae7, 0x592a, 0x3d77, 0x0, 0x0);
        gbc.writeMem(0x98d6, { 0x19 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf476, gbc.sp());
        EXPECT(0x98d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x98d6));
        // 19 0263
        gbc.setState(0xa582, 0x50c9, 0x7a30, 0xe79f, 0x6316, 0x841b, 0x0, 0x1);
        gbc.writeMem(0xa582, { 0x19 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x50c9, gbc.sp());
        EXPECT(0xa583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa582));
        // 19 0264
        gbc.setState(0x8ad8, 0x7d18, 0x4ba0, 0x4637, 0xa91c, 0x4750, 0x0, 0x1);
        gbc.writeMem(0x8ad8, { 0x19 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7d18, gbc.sp());
        EXPECT(0x8ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8ad8));
        // 19 0265
        gbc.setState(0x3c1, 0xefb1, 0x3ec0, 0x9cb7, 0xdedf, 0x82ed, 0x1, 0x1);
        gbc.writeMem(0x3c1, { 0x19 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xefb1, gbc.sp());
        EXPECT(0x3c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0266
        gbc.setState(0xbb22, 0xccfc, 0x1cc0, 0x1ba0, 0xf848, 0xbe79, 0x1, 0x1);
        gbc.writeMem(0xbb22, { 0x19 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xccfc, gbc.sp());
        EXPECT(0xbb23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbb22));
        // 19 0267
        gbc.setState(0xce86, 0x8d67, 0xaf10, 0x578d, 0x48d3, 0x607d, 0x1, 0x0);
        gbc.writeMem(0xce86, { 0x19 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8d67, gbc.sp());
        EXPECT(0xce87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xce86));
        // 19 0269
        gbc.setState(0xbae4, 0x1ef1, 0xd290, 0x5972, 0x2615, 0x8d5a, 0x1, 0x0);
        gbc.writeMem(0xbae4, { 0x19 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1ef1, gbc.sp());
        EXPECT(0xbae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbae4));
        // 19 026A
        gbc.setState(0x2c1c, 0xa922, 0x3a00, 0x5292, 0xc315, 0x57c9, 0x1, 0x0);
        gbc.writeMem(0x2c1c, { 0x19 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa922, gbc.sp());
        EXPECT(0x2c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 026B
        gbc.setState(0xa933, 0x19d9, 0x2870, 0x1ade, 0x3982, 0xa9d, 0x1, 0x0);
        gbc.writeMem(0xa933, { 0x19 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x19d9, gbc.sp());
        EXPECT(0xa934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa933));
        // 19 026C
        gbc.setState(0xe640, 0xb34f, 0x9440, 0x689e, 0x4025, 0xdb86, 0x1, 0x1);
        gbc.writeMem(0xe640, { 0x19 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb34f, gbc.sp());
        EXPECT(0xe641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe640));
        // 19 026D
        gbc.setState(0xca49, 0xcec2, 0xed00, 0xd24e, 0x98fb, 0x17ae, 0x0, 0x0);
        gbc.writeMem(0xca49, { 0x19 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xcec2, gbc.sp());
        EXPECT(0xca4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xca49));
        // 19 026E
        gbc.setState(0xcb3b, 0xcf47, 0x4540, 0x9636, 0x8c46, 0x1987, 0x1, 0x0);
        gbc.writeMem(0xcb3b, { 0x19 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcf47, gbc.sp());
        EXPECT(0xcb3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xcb3b));
        // 19 026F
        gbc.setState(0xa618, 0xdfb8, 0xe230, 0xc883, 0xaab9, 0x746e, 0x1, 0x0);
        gbc.writeMem(0xa618, { 0x19 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xdfb8, gbc.sp());
        EXPECT(0xa619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa618));
        // 19 0270
        gbc.setState(0xd36, 0xe6c9, 0x46b0, 0x8c67, 0xd18a, 0xdcb2, 0x1, 0x0);
        gbc.writeMem(0xd36, { 0x19 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe6c9, gbc.sp());
        EXPECT(0xd37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0271
        gbc.setState(0x53d0, 0xcf6b, 0x94f0, 0xbfb3, 0xfe5a, 0x66fe, 0x1, 0x0);
        gbc.writeMem(0x53d0, { 0x19 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xcf6b, gbc.sp());
        EXPECT(0x53d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0272
        gbc.setState(0x3266, 0xcb5c, 0x9a90, 0xee4e, 0x82bf, 0x19ed, 0x1, 0x1);
        gbc.writeMem(0x3266, { 0x19 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcb5c, gbc.sp());
        EXPECT(0x3267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0273
        gbc.setState(0x21d5, 0x8e59, 0xcba0, 0xd35f, 0x6482, 0xcecd, 0x1, 0x0);
        gbc.writeMem(0x21d5, { 0x19 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8e59, gbc.sp());
        EXPECT(0x21d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0274
        gbc.setState(0x1d8, 0x1246, 0xcfb0, 0xd9f6, 0xb24, 0xa3f4, 0x0, 0x0);
        gbc.writeMem(0x1d8, { 0x19 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1246, gbc.sp());
        EXPECT(0x1d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0275
        gbc.setState(0xa61c, 0xb1e4, 0xfe0, 0x582a, 0x3dd4, 0x5829, 0x0, 0x0);
        gbc.writeMem(0xa61c, { 0x19 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb1e4, gbc.sp());
        EXPECT(0xa61d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa61c));
        // 19 0276
        gbc.setState(0x65b6, 0xff42, 0x2a40, 0x531c, 0x9bd7, 0xaa8f, 0x1, 0x1);
        gbc.writeMem(0x65b6, { 0x19 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xff42, gbc.sp());
        EXPECT(0x65b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0277
        gbc.setState(0xc050, 0x936f, 0x2a30, 0xa957, 0x5a90, 0x2d6, 0x1, 0x1);
        gbc.writeMem(0xc050, { 0x19 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x936f, gbc.sp());
        EXPECT(0xc051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc050));
        // 19 0278
        gbc.setState(0xb6a3, 0xfd93, 0xd5a0, 0xf89b, 0x8b08, 0x1887, 0x0, 0x0);
        gbc.writeMem(0xb6a3, { 0x19 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfd93, gbc.sp());
        EXPECT(0xb6a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb6a3));
        // 19 0279
        gbc.setState(0xec7b, 0x3e93, 0xbe80, 0xc43b, 0x270c, 0x39db, 0x0, 0x0);
        gbc.writeMem(0xec7b, { 0x19 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3e93, gbc.sp());
        EXPECT(0xec7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xec7b));
        // 19 027A
        gbc.setState(0x93d5, 0x1cd7, 0x3920, 0x96c, 0x7eb1, 0x8fe9, 0x0, 0x1);
        gbc.writeMem(0x93d5, { 0x19 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1cd7, gbc.sp());
        EXPECT(0x93d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x93d5));
        // 19 027B
        gbc.setState(0x683f, 0x4b8d, 0xf20, 0xc4bb, 0x38fb, 0x61bb, 0x1, 0x0);
        gbc.writeMem(0x683f, { 0x19 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4b8d, gbc.sp());
        EXPECT(0x6840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 027C
        gbc.setState(0x86b1, 0xd65d, 0x3960, 0x5895, 0x75cd, 0x603d, 0x0, 0x0);
        gbc.writeMem(0x86b1, { 0x19 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd65d, gbc.sp());
        EXPECT(0x86b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x86b1));
        // 19 027D
        gbc.setState(0x48fe, 0x41a4, 0xfba0, 0xd4c1, 0x6a5, 0xe2ac, 0x0, 0x0);
        gbc.writeMem(0x48fe, { 0x19 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x41a4, gbc.sp());
        EXPECT(0x48ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 027F
        gbc.setState(0x262e, 0x2134, 0x6660, 0xe31d, 0xfd91, 0xb14f, 0x0, 0x0);
        gbc.writeMem(0x262e, { 0x19 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2134, gbc.sp());
        EXPECT(0x262f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0280
        gbc.setState(0xaea1, 0xaa73, 0x8830, 0xb2f5, 0x2e2a, 0x35e4, 0x0, 0x0);
        gbc.writeMem(0xaea1, { 0x19 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xaa73, gbc.sp());
        EXPECT(0xaea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xaea1));
        // 19 0281
        gbc.setState(0xafbc, 0x8064, 0x55d0, 0xeff6, 0xedad, 0xb29b, 0x0, 0x1);
        gbc.writeMem(0xafbc, { 0x19 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8064, gbc.sp());
        EXPECT(0xafbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xafbc));
        // 19 0282
        gbc.setState(0xda5b, 0xe0b0, 0x8940, 0x9449, 0x274e, 0xc18b, 0x1, 0x0);
        gbc.writeMem(0xda5b, { 0x19 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe0b0, gbc.sp());
        EXPECT(0xda5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xda5b));
        // 19 0283
        gbc.setState(0x73d2, 0xda84, 0xf130, 0xde7f, 0xf1c8, 0xf066, 0x0, 0x1);
        gbc.writeMem(0x73d2, { 0x19 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xda84, gbc.sp());
        EXPECT(0x73d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0284
        gbc.setState(0x5b4e, 0xd7cf, 0xfe00, 0x7b48, 0xfde6, 0x997b, 0x0, 0x1);
        gbc.writeMem(0x5b4e, { 0x19 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd7cf, gbc.sp());
        EXPECT(0x5b4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0285
        gbc.setState(0x9eb2, 0xfa64, 0x4e00, 0x1bf, 0xbe, 0xdaed, 0x1, 0x1);
        gbc.writeMem(0x9eb2, { 0x19 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfa64, gbc.sp());
        EXPECT(0x9eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9eb2));
        // 19 0286
        gbc.setState(0xde38, 0xdf4e, 0x8cb0, 0x2a3c, 0x627f, 0x2bbb, 0x0, 0x1);
        gbc.writeMem(0xde38, { 0x19 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdf4e, gbc.sp());
        EXPECT(0xde39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xde38));
        // 19 0287
        gbc.setState(0xedfb, 0x30d8, 0x80a0, 0x7bc4, 0xb305, 0x53dc, 0x1, 0x1);
        gbc.writeMem(0xedfb, { 0x19 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x30d8, gbc.sp());
        EXPECT(0xedfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xedfb));
        // 19 0288
        gbc.setState(0x4196, 0x3f59, 0x3fe0, 0xc42e, 0x1e3c, 0x5bf5, 0x0, 0x0);
        gbc.writeMem(0x4196, { 0x19 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3f59, gbc.sp());
        EXPECT(0x4197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0289
        gbc.setState(0xccab, 0x8e32, 0xc970, 0x5634, 0x68cd, 0x2626, 0x1, 0x1);
        gbc.writeMem(0xccab, { 0x19 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8e32, gbc.sp());
        EXPECT(0xccac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xccab));
        // 19 028A
        gbc.setState(0x6aeb, 0xb2e2, 0x7fc0, 0x63e6, 0x4f5d, 0x4733, 0x0, 0x0);
        gbc.writeMem(0x6aeb, { 0x19 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb2e2, gbc.sp());
        EXPECT(0x6aec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 028B
        gbc.setState(0x79ad, 0x293d, 0x3c70, 0x2de2, 0xfb2b, 0x3f90, 0x1, 0x1);
        gbc.writeMem(0x79ad, { 0x19 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x293d, gbc.sp());
        EXPECT(0x79ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 028C
        gbc.setState(0x5cff, 0x3d5e, 0xd810, 0xc10f, 0xbe32, 0xb960, 0x0, 0x1);
        gbc.writeMem(0x5cff, { 0x19 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3d5e, gbc.sp());
        EXPECT(0x5d00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 028D
        gbc.setState(0x8080, 0x823e, 0xe850, 0x6040, 0x51dc, 0xc8eb, 0x0, 0x0);
        gbc.writeMem(0x8080, { 0x19 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x823e, gbc.sp());
        EXPECT(0x8081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8080));
        // 19 028E
        gbc.setState(0x4607, 0x434b, 0xb990, 0x7cdd, 0x9719, 0x8da, 0x0, 0x0);
        gbc.writeMem(0x4607, { 0x19 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x434b, gbc.sp());
        EXPECT(0x4608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 028F
        gbc.setState(0x50b6, 0xdf92, 0xb5d0, 0x8ccc, 0xf5bd, 0xb898, 0x0, 0x0);
        gbc.writeMem(0x50b6, { 0x19 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xdf92, gbc.sp());
        EXPECT(0x50b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0290
        gbc.setState(0x7957, 0xc8ab, 0x1420, 0x584b, 0x7dc4, 0x9a2e, 0x1, 0x0);
        gbc.writeMem(0x7957, { 0x19 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc8ab, gbc.sp());
        EXPECT(0x7958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0291
        gbc.setState(0x8be4, 0x7f34, 0xb280, 0xbee4, 0x7dcd, 0xb26d, 0x0, 0x1);
        gbc.writeMem(0x8be4, { 0x19 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7f34, gbc.sp());
        EXPECT(0x8be5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8be4));
        // 19 0292
        gbc.setState(0x6bef, 0xd70d, 0x86a0, 0xca4a, 0x702, 0x69fb, 0x0, 0x1);
        gbc.writeMem(0x6bef, { 0x19 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd70d, gbc.sp());
        EXPECT(0x6bf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0293
        gbc.setState(0xb23c, 0x3869, 0xcdf0, 0xb596, 0x714, 0x16c5, 0x1, 0x0);
        gbc.writeMem(0xb23c, { 0x19 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3869, gbc.sp());
        EXPECT(0xb23d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb23c));
        // 19 0294
        gbc.setState(0x2eae, 0x893a, 0x7d20, 0x9dff, 0xebb6, 0xa27d, 0x1, 0x1);
        gbc.writeMem(0x2eae, { 0x19 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x893a, gbc.sp());
        EXPECT(0x2eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0295
        gbc.setState(0x13b5, 0x1d01, 0xbdd0, 0xd8be, 0x9605, 0x5516, 0x0, 0x0);
        gbc.writeMem(0x13b5, { 0x19 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1d01, gbc.sp());
        EXPECT(0x13b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0296
        gbc.setState(0xc366, 0x72c5, 0x1930, 0xd8f0, 0xb34d, 0x2068, 0x0, 0x0);
        gbc.writeMem(0xc366, { 0x19 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x72c5, gbc.sp());
        EXPECT(0xc367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc366));
        // 19 0297
        gbc.setState(0x3f84, 0xe2dc, 0x8d00, 0x81a, 0x7c95, 0x332e, 0x0, 0x1);
        gbc.writeMem(0x3f84, { 0x19 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe2dc, gbc.sp());
        EXPECT(0x3f85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0298
        gbc.setState(0xbcf4, 0x5bc8, 0x58e0, 0xd5f8, 0x839, 0xc99a, 0x1, 0x1);
        gbc.writeMem(0xbcf4, { 0x19 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5bc8, gbc.sp());
        EXPECT(0xbcf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbcf4));
        // 19 0299
        gbc.setState(0xea1c, 0x5bce, 0x71f0, 0x53ba, 0x8274, 0xbf95, 0x0, 0x0);
        gbc.writeMem(0xea1c, { 0x19 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5bce, gbc.sp());
        EXPECT(0xea1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xea1c));
        // 19 029A
        gbc.setState(0xac71, 0x33c9, 0xf310, 0x72fc, 0x651f, 0x6237, 0x0, 0x0);
        gbc.writeMem(0xac71, { 0x19 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x33c9, gbc.sp());
        EXPECT(0xac72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xac71));
        // 19 029B
        gbc.setState(0x3dd, 0xe876, 0x45e0, 0x4603, 0xbc44, 0x8aa, 0x0, 0x1);
        gbc.writeMem(0x3dd, { 0x19 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe876, gbc.sp());
        EXPECT(0x3de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 029C
        gbc.setState(0x6408, 0x9470, 0x2670, 0xf0d9, 0x4a40, 0x21f2, 0x1, 0x1);
        gbc.writeMem(0x6408, { 0x19 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9470, gbc.sp());
        EXPECT(0x6409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 029D
        gbc.setState(0x9ba1, 0x76fc, 0x32d0, 0x7aa4, 0x31b1, 0x668, 0x0, 0x1);
        gbc.writeMem(0x9ba1, { 0x19 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x76fc, gbc.sp());
        EXPECT(0x9ba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9ba1));
        // 19 029E
        gbc.setState(0xb4be, 0x26b3, 0xbf60, 0x4b75, 0x708f, 0x4f31, 0x1, 0x0);
        gbc.writeMem(0xb4be, { 0x19 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x26b3, gbc.sp());
        EXPECT(0xb4bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb4be));
        // 19 029F
        gbc.setState(0x8db8, 0x6235, 0x40a0, 0x5f5, 0xe93f, 0x20a2, 0x1, 0x1);
        gbc.writeMem(0x8db8, { 0x19 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6235, gbc.sp());
        EXPECT(0x8db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8db8));
        // 19 02A0
        gbc.setState(0xe6e9, 0xc8a8, 0x8d40, 0xbb00, 0x9471, 0x83a6, 0x0, 0x1);
        gbc.writeMem(0xe6e9, { 0x19 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc8a8, gbc.sp());
        EXPECT(0xe6ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe6e9));
        // 19 02A1
        gbc.setState(0x3ee4, 0x29a9, 0xd090, 0xca1e, 0x9f82, 0xebf7, 0x0, 0x0);
        gbc.writeMem(0x3ee4, { 0x19 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x29a9, gbc.sp());
        EXPECT(0x3ee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02A2
        gbc.setState(0x11, 0xf2d9, 0xc80, 0x510, 0x8f4c, 0x6a20, 0x1, 0x0);
        gbc.writeMem(0x11, { 0x19 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf2d9, gbc.sp());
        EXPECT(0x12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 02A3
        gbc.setState(0xd404, 0xd36c, 0xc010, 0x1e98, 0x4c38, 0x1753, 0x0, 0x0);
        gbc.writeMem(0xd404, { 0x19 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd36c, gbc.sp());
        EXPECT(0xd405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd404));
        // 19 02A4
        gbc.setState(0x8a65, 0x9136, 0x1810, 0x5c53, 0x73c1, 0xab2a, 0x1, 0x1);
        gbc.writeMem(0x8a65, { 0x19 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9136, gbc.sp());
        EXPECT(0x8a66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8a65));
        // 19 02A5
        gbc.setState(0x4d2d, 0xe98a, 0xbd00, 0x8600, 0xf369, 0x8ddf, 0x0, 0x0);
        gbc.writeMem(0x4d2d, { 0x19 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe98a, gbc.sp());
        EXPECT(0x4d2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02A7
        gbc.setState(0x8ef8, 0x6d59, 0x6d20, 0x84c4, 0xcd62, 0x5f0c, 0x0, 0x0);
        gbc.writeMem(0x8ef8, { 0x19 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6d59, gbc.sp());
        EXPECT(0x8ef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8ef8));
        // 19 02A8
        gbc.setState(0xd8fd, 0x266b, 0xaaa0, 0x5658, 0x565, 0xd4a7, 0x1, 0x0);
        gbc.writeMem(0xd8fd, { 0x19 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x266b, gbc.sp());
        EXPECT(0xd8fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd8fd));
        // 19 02A9
        gbc.setState(0xc47a, 0x864d, 0xb500, 0x109d, 0x69b8, 0xcc39, 0x0, 0x1);
        gbc.writeMem(0xc47a, { 0x19 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x864d, gbc.sp());
        EXPECT(0xc47b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc47a));
        // 19 02AA
        gbc.setState(0x7f99, 0x6a29, 0xbad0, 0x299c, 0x6ed2, 0x6168, 0x1, 0x0);
        gbc.writeMem(0x7f99, { 0x19 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6a29, gbc.sp());
        EXPECT(0x7f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 02AB
        gbc.setState(0x8f82, 0x59c0, 0xe70, 0x7fcd, 0xc151, 0xacd1, 0x0, 0x1);
        gbc.writeMem(0x8f82, { 0x19 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x59c0, gbc.sp());
        EXPECT(0x8f83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8f82));
        // 19 02AC
        gbc.setState(0x93a, 0xd1a9, 0xf550, 0xbd10, 0x8a13, 0x591b, 0x1, 0x1);
        gbc.writeMem(0x93a, { 0x19 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd1a9, gbc.sp());
        EXPECT(0x93b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 02AD
        gbc.setState(0x4e81, 0x85d, 0xdab0, 0x9cf7, 0xdb1e, 0x4ec2, 0x1, 0x1);
        gbc.writeMem(0x4e81, { 0x19 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x85d, gbc.sp());
        EXPECT(0x4e82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02AE
        gbc.setState(0x4ec9, 0x8084, 0x3aa0, 0xfb83, 0x2f9, 0x80fe, 0x0, 0x0);
        gbc.writeMem(0x4ec9, { 0x19 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8084, gbc.sp());
        EXPECT(0x4eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 02AF
        gbc.setState(0x56f2, 0xe476, 0x8640, 0xbafb, 0x42db, 0xa637, 0x0, 0x1);
        gbc.writeMem(0x56f2, { 0x19 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe476, gbc.sp());
        EXPECT(0x56f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 02B0
        gbc.setState(0x8f84, 0xb74e, 0x9de0, 0xd031, 0xfc2, 0x598e, 0x0, 0x0);
        gbc.writeMem(0x8f84, { 0x19 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb74e, gbc.sp());
        EXPECT(0x8f85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8f84));
        // 19 02B1
        gbc.setState(0xc8c, 0xf9d1, 0x7ac0, 0x1e7a, 0xdac8, 0xd61f, 0x1, 0x1);
        gbc.writeMem(0xc8c, { 0x19 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf9d1, gbc.sp());
        EXPECT(0xc8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02B2
        gbc.setState(0xeba3, 0x641a, 0xf60, 0xfbfa, 0xf362, 0x6cb1, 0x1, 0x1);
        gbc.writeMem(0xeba3, { 0x19 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x641a, gbc.sp());
        EXPECT(0xeba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xeba3));
        // 19 02B3
        gbc.setState(0x4cf5, 0xa986, 0x3720, 0xff13, 0x37dd, 0xfcc7, 0x1, 0x0);
        gbc.writeMem(0x4cf5, { 0x19 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa986, gbc.sp());
        EXPECT(0x4cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02B4
        gbc.setState(0x746, 0x2344, 0xd880, 0x4b49, 0xfb73, 0x59ea, 0x0, 0x0);
        gbc.writeMem(0x746, { 0x19 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2344, gbc.sp());
        EXPECT(0x747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02B5
        gbc.setState(0xf8b, 0x9ad8, 0x8fb0, 0x42c2, 0xf738, 0xf5d, 0x0, 0x0);
        gbc.writeMem(0xf8b, { 0x19 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9ad8, gbc.sp());
        EXPECT(0xf8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02B6
        gbc.setState(0xb263, 0xc891, 0xa150, 0xe74b, 0x6057, 0xdcdf, 0x0, 0x0);
        gbc.writeMem(0xb263, { 0x19 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc891, gbc.sp());
        EXPECT(0xb264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb263));
        // 19 02B7
        gbc.setState(0x8458, 0x7d00, 0x33c0, 0x36b6, 0x37b, 0x2c0b, 0x0, 0x1);
        gbc.writeMem(0x8458, { 0x19 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7d00, gbc.sp());
        EXPECT(0x8459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8458));
        // 19 02B8
        gbc.setState(0xb86f, 0x94b2, 0x4b00, 0xb29f, 0xf743, 0x2767, 0x1, 0x0);
        gbc.writeMem(0xb86f, { 0x19 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x94b2, gbc.sp());
        EXPECT(0xb870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb86f));
        // 19 02B9
        gbc.setState(0xb2d7, 0x63df, 0x6770, 0xb667, 0xfa2a, 0xf75a, 0x0, 0x1);
        gbc.writeMem(0xb2d7, { 0x19 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x63df, gbc.sp());
        EXPECT(0xb2d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb2d7));
        // 19 02BA
        gbc.setState(0x6fca, 0x507d, 0x95f0, 0x6585, 0xcdb9, 0x5d6c, 0x1, 0x0);
        gbc.writeMem(0x6fca, { 0x19 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x507d, gbc.sp());
        EXPECT(0x6fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02BC
        gbc.setState(0x6ba0, 0x7e33, 0x8f80, 0x257e, 0x1fc0, 0x16e8, 0x1, 0x0);
        gbc.writeMem(0x6ba0, { 0x19 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7e33, gbc.sp());
        EXPECT(0x6ba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 02BD
        gbc.setState(0x611c, 0xf990, 0x39a0, 0x48bf, 0x7982, 0xa825, 0x1, 0x1);
        gbc.writeMem(0x611c, { 0x19 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf990, gbc.sp());
        EXPECT(0x611d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02BE
        gbc.setState(0xc27f, 0x7a88, 0x33c0, 0xf0ab, 0xf76b, 0xeb7d, 0x0, 0x0);
        gbc.writeMem(0xc27f, { 0x19 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7a88, gbc.sp());
        EXPECT(0xc280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc27f));
        // 19 02BF
        gbc.setState(0x2be0, 0x74d5, 0xb1c0, 0x4acb, 0x277e, 0x6844, 0x1, 0x0);
        gbc.writeMem(0x2be0, { 0x19 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x74d5, gbc.sp());
        EXPECT(0x2be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 02C0
        gbc.setState(0x1c57, 0xd9c5, 0x3ed0, 0x29d6, 0x4c90, 0x9cca, 0x0, 0x0);
        gbc.writeMem(0x1c57, { 0x19 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd9c5, gbc.sp());
        EXPECT(0x1c58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 02C1
        gbc.setState(0x7a71, 0x7ace, 0x3650, 0xea32, 0xbc67, 0x7b4f, 0x0, 0x0);
        gbc.writeMem(0x7a71, { 0x19 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7ace, gbc.sp());
        EXPECT(0x7a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02C3
        gbc.setState(0xd110, 0x760a, 0xe5b0, 0x88f, 0xa836, 0xe936, 0x1, 0x1);
        gbc.writeMem(0xd110, { 0x19 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x760a, gbc.sp());
        EXPECT(0xd111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd110));
        // 19 02C4
        gbc.setState(0x9826, 0x67dc, 0xace0, 0x8af0, 0xf1e3, 0x4717, 0x0, 0x1);
        gbc.writeMem(0x9826, { 0x19 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x67dc, gbc.sp());
        EXPECT(0x9827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9826));
        // 19 02C5
        gbc.setState(0x8645, 0x8f28, 0x79d0, 0x2161, 0x3ec5, 0xfc76, 0x1, 0x0);
        gbc.writeMem(0x8645, { 0x19 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8f28, gbc.sp());
        EXPECT(0x8646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8645));
        // 19 02C6
        gbc.setState(0xeedc, 0xb264, 0xa2f0, 0xc369, 0xcc0f, 0x977b, 0x0, 0x1);
        gbc.writeMem(0xeedc, { 0x19 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb264, gbc.sp());
        EXPECT(0xeedd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xeedc));
        // 19 02C7
        gbc.setState(0xed61, 0xa081, 0x1730, 0x9da7, 0x8553, 0x4926, 0x1, 0x1);
        gbc.writeMem(0xed61, { 0x19 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa081, gbc.sp());
        EXPECT(0xed62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xed61));
        // 19 02C8
        gbc.setState(0x4217, 0x5f71, 0x2fc0, 0x9be4, 0x3fba, 0x5271, 0x0, 0x1);
        gbc.writeMem(0x4217, { 0x19 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5f71, gbc.sp());
        EXPECT(0x4218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 02C9
        gbc.setState(0xd4e5, 0xe62d, 0xa8f0, 0x617e, 0x1a4b, 0x1cec, 0x1, 0x0);
        gbc.writeMem(0xd4e5, { 0x19 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe62d, gbc.sp());
        EXPECT(0xd4e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd4e5));
        // 19 02CB
        gbc.setState(0x9e60, 0x63bd, 0x5ff0, 0xbc67, 0x67c5, 0xf326, 0x0, 0x1);
        gbc.writeMem(0x9e60, { 0x19 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x63bd, gbc.sp());
        EXPECT(0x9e61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9e60));
        // 19 02CC
        gbc.setState(0x3ff0, 0xc69e, 0x75e0, 0xbb37, 0xc5d6, 0xfb2e, 0x1, 0x1);
        gbc.writeMem(0x3ff0, { 0x19 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc69e, gbc.sp());
        EXPECT(0x3ff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02CD
        gbc.setState(0x9ed0, 0xf332, 0x1070, 0xbe88, 0x5fe6, 0x6af4, 0x1, 0x0);
        gbc.writeMem(0x9ed0, { 0x19 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf332, gbc.sp());
        EXPECT(0x9ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9ed0));
        // 19 02CE
        gbc.setState(0x2ade, 0x8b5f, 0x9160, 0xa59, 0x457, 0xc10d, 0x0, 0x1);
        gbc.writeMem(0x2ade, { 0x19 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8b5f, gbc.sp());
        EXPECT(0x2adf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 02CF
        gbc.setState(0x4cab, 0x6410, 0xd610, 0x5484, 0xe93e, 0xf4f2, 0x1, 0x1);
        gbc.writeMem(0x4cab, { 0x19 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6410, gbc.sp());
        EXPECT(0x4cac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02D0
        gbc.setState(0x4c51, 0x6a97, 0x7080, 0x9fd6, 0xe026, 0x9f14, 0x1, 0x0);
        gbc.writeMem(0x4c51, { 0x19 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6a97, gbc.sp());
        EXPECT(0x4c52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02D1
        gbc.setState(0x3eaf, 0x446b, 0xd350, 0xc74e, 0x70c9, 0xb779, 0x1, 0x0);
        gbc.writeMem(0x3eaf, { 0x19 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x446b, gbc.sp());
        EXPECT(0x3eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02D2
        gbc.setState(0x6c3a, 0x6deb, 0xeb30, 0xd33d, 0x3b73, 0x6436, 0x1, 0x1);
        gbc.writeMem(0x6c3a, { 0x19 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6deb, gbc.sp());
        EXPECT(0x6c3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 02D3
        gbc.setState(0xe311, 0xe4d8, 0x4a50, 0x2d3c, 0x8fad, 0xdc81, 0x1, 0x0);
        gbc.writeMem(0xe311, { 0x19 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe4d8, gbc.sp());
        EXPECT(0xe312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe311));
        // 19 02D4
        gbc.setState(0x23a6, 0x5797, 0x1be0, 0x6155, 0xe04c, 0x1030, 0x1, 0x0);
        gbc.writeMem(0x23a6, { 0x19 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5797, gbc.sp());
        EXPECT(0x23a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 02D5
        gbc.setState(0xa5e9, 0xed0a, 0x59c0, 0xf16d, 0xafac, 0xb0f7, 0x1, 0x1);
        gbc.writeMem(0xa5e9, { 0x19 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xed0a, gbc.sp());
        EXPECT(0xa5ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa5e9));
        // 19 02D7
        gbc.setState(0xbf6c, 0xe37e, 0x41a0, 0x5678, 0xace7, 0xa20e, 0x1, 0x0);
        gbc.writeMem(0xbf6c, { 0x19 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe37e, gbc.sp());
        EXPECT(0xbf6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbf6c));
        // 19 02D8
        gbc.setState(0x4986, 0x86c0, 0x1fa0, 0x731f, 0xdade, 0x3ea, 0x0, 0x1);
        gbc.writeMem(0x4986, { 0x19 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x86c0, gbc.sp());
        EXPECT(0x4987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 02D9
        gbc.setState(0x5f4e, 0x8a9e, 0xcb20, 0xe47d, 0x9c20, 0x1948, 0x1, 0x1);
        gbc.writeMem(0x5f4e, { 0x19 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8a9e, gbc.sp());
        EXPECT(0x5f4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 02DA
        gbc.setState(0xc8f5, 0xd69d, 0x760, 0xe805, 0x6299, 0x2da3, 0x0, 0x0);
        gbc.writeMem(0xc8f5, { 0x19 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd69d, gbc.sp());
        EXPECT(0xc8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc8f5));
        // 19 02DB
        gbc.setState(0xb823, 0x450, 0xdb00, 0x1cf6, 0x3db, 0x88da, 0x1, 0x1);
        gbc.writeMem(0xb823, { 0x19 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x450, gbc.sp());
        EXPECT(0xb824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb823));
        // 19 02DC
        gbc.setState(0x4dd8, 0xbb3c, 0xde0, 0xfcdb, 0xeedc, 0xd68c, 0x0, 0x0);
        gbc.writeMem(0x4dd8, { 0x19 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbb3c, gbc.sp());
        EXPECT(0x4dd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02DD
        gbc.setState(0x3d17, 0xf97, 0xfbf0, 0xf52, 0x7635, 0x4743, 0x0, 0x1);
        gbc.writeMem(0x3d17, { 0x19 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf97, gbc.sp());
        EXPECT(0x3d18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 02DE
        gbc.setState(0x4ddc, 0x4333, 0xc870, 0xd3be, 0x3ad9, 0x81d6, 0x1, 0x0);
        gbc.writeMem(0x4ddc, { 0x19 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4333, gbc.sp());
        EXPECT(0x4ddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 02DF
        gbc.setState(0xcf5, 0x9df7, 0x8070, 0x6df0, 0xbfd1, 0x5f05, 0x0, 0x1);
        gbc.writeMem(0xcf5, { 0x19 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9df7, gbc.sp());
        EXPECT(0xcf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02E1
        gbc.setState(0xa45b, 0x1733, 0x76c0, 0x6be1, 0xdbff, 0x29b3, 0x0, 0x0);
        gbc.writeMem(0xa45b, { 0x19 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1733, gbc.sp());
        EXPECT(0xa45c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa45b));
        // 19 02E2
        gbc.setState(0xb866, 0x6624, 0x3cf0, 0x718f, 0xe9e2, 0xcf7c, 0x0, 0x1);
        gbc.writeMem(0xb866, { 0x19 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6624, gbc.sp());
        EXPECT(0xb867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb866));
        // 19 02E3
        gbc.setState(0x5d7a, 0x5d8e, 0x6d30, 0x93d3, 0xc74c, 0xe86a, 0x0, 0x0);
        gbc.writeMem(0x5d7a, { 0x19 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5d8e, gbc.sp());
        EXPECT(0x5d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02E4
        gbc.setState(0x209b, 0xd33c, 0x7170, 0xc58d, 0x32c5, 0x398c, 0x0, 0x0);
        gbc.writeMem(0x209b, { 0x19 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd33c, gbc.sp());
        EXPECT(0x209c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 02E5
        gbc.setState(0x844a, 0xf070, 0x8910, 0x6798, 0x1fef, 0xd893, 0x1, 0x0);
        gbc.writeMem(0x844a, { 0x19 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf070, gbc.sp());
        EXPECT(0x844b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x844a));
        // 19 02E6
        gbc.setState(0xf16, 0x9a79, 0xc70, 0x3f06, 0xa510, 0x37b1, 0x0, 0x0);
        gbc.writeMem(0xf16, { 0x19 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9a79, gbc.sp());
        EXPECT(0xf17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 02E7
        gbc.setState(0x3e9d, 0xf5cf, 0x1990, 0x9e20, 0x6e68, 0x145a, 0x1, 0x0);
        gbc.writeMem(0x3e9d, { 0x19 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf5cf, gbc.sp());
        EXPECT(0x3e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 02E8
        gbc.setState(0x2237, 0x57cc, 0x9ac0, 0x6959, 0x47dc, 0x3faa, 0x0, 0x0);
        gbc.writeMem(0x2237, { 0x19 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x57cc, gbc.sp());
        EXPECT(0x2238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 02E9
        gbc.setState(0x2376, 0x31a5, 0x8fc0, 0x9ecf, 0xfdd6, 0x5c84, 0x1, 0x0);
        gbc.writeMem(0x2376, { 0x19 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x31a5, gbc.sp());
        EXPECT(0x2377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02EA
        gbc.setState(0xc463, 0xdeba, 0xa7d0, 0x8cd0, 0x511b, 0xaae0, 0x0, 0x1);
        gbc.writeMem(0xc463, { 0x19 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xdeba, gbc.sp());
        EXPECT(0xc464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc463));
        // 19 02EB
        gbc.setState(0x8801, 0xbfd2, 0xf1a0, 0x8380, 0x1b9d, 0x7d50, 0x1, 0x1);
        gbc.writeMem(0x8801, { 0x19 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbfd2, gbc.sp());
        EXPECT(0x8802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8801));
        // 19 02EC
        gbc.setState(0x2ba4, 0xe0a7, 0xa420, 0x5e88, 0x658, 0x88c3, 0x1, 0x1);
        gbc.writeMem(0x2ba4, { 0x19 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe0a7, gbc.sp());
        EXPECT(0x2ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 02EE
        gbc.setState(0xe4bd, 0xdacf, 0xd820, 0x6d51, 0x73c5, 0x23c4, 0x0, 0x0);
        gbc.writeMem(0xe4bd, { 0x19 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xdacf, gbc.sp());
        EXPECT(0xe4be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe4bd));
        // 19 02EF
        gbc.setState(0xc670, 0x96d6, 0x7780, 0xfe32, 0xd472, 0x916a, 0x1, 0x0);
        gbc.writeMem(0xc670, { 0x19 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x96d6, gbc.sp());
        EXPECT(0xc671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc670));
        // 19 02F0
        gbc.setState(0x63fe, 0xd082, 0xa950, 0xe29a, 0xe7c8, 0x7cf5, 0x0, 0x1);
        gbc.writeMem(0x63fe, { 0x19 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd082, gbc.sp());
        EXPECT(0x63ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02F1
        gbc.setState(0x44c1, 0xa8b3, 0xfd00, 0xe5e7, 0xd266, 0xbd0f, 0x0, 0x1);
        gbc.writeMem(0x44c1, { 0x19 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa8b3, gbc.sp());
        EXPECT(0x44c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02F2
        gbc.setState(0x883a, 0xbf12, 0xba00, 0x12e3, 0xc591, 0x6596, 0x0, 0x1);
        gbc.writeMem(0x883a, { 0x19 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbf12, gbc.sp());
        EXPECT(0x883b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x883a));
        // 19 02F3
        gbc.setState(0xcbc4, 0xe28a, 0x2670, 0xb305, 0x2484, 0x3d2, 0x1, 0x1);
        gbc.writeMem(0xcbc4, { 0x19 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe28a, gbc.sp());
        EXPECT(0xcbc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xcbc4));
        // 19 02F4
        gbc.setState(0x36b6, 0x9d8d, 0x21c0, 0x40dd, 0xec45, 0x618b, 0x1, 0x1);
        gbc.writeMem(0x36b6, { 0x19 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9d8d, gbc.sp());
        EXPECT(0x36b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02F5
        gbc.setState(0x2253, 0x28a6, 0x81e0, 0xc61, 0x56dc, 0x5db3, 0x1, 0x0);
        gbc.writeMem(0x2253, { 0x19 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x28a6, gbc.sp());
        EXPECT(0x2254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 02F6
        gbc.setState(0xd323, 0x7e19, 0x5f60, 0x9d7b, 0xcf30, 0xbf94, 0x0, 0x0);
        gbc.writeMem(0xd323, { 0x19 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7e19, gbc.sp());
        EXPECT(0xd324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd323));
        // 19 02F7
        gbc.setState(0x3bcd, 0x7abc, 0xed50, 0xd6c4, 0xf08d, 0xff92, 0x1, 0x0);
        gbc.writeMem(0x3bcd, { 0x19 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7abc, gbc.sp());
        EXPECT(0x3bce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02F8
        gbc.setState(0xcd38, 0x5f5e, 0xa6f0, 0x5bf8, 0x5460, 0x9c95, 0x0, 0x0);
        gbc.writeMem(0xcd38, { 0x19 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5f5e, gbc.sp());
        EXPECT(0xcd39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xcd38));
        // 19 02F9
        gbc.setState(0x4f03, 0x7a34, 0x4d30, 0x8c03, 0x8134, 0xef6d, 0x1, 0x1);
        gbc.writeMem(0x4f03, { 0x19 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7a34, gbc.sp());
        EXPECT(0x4f04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02FA
        gbc.setState(0x1c6c, 0xd876, 0x4680, 0x14e0, 0xe9f8, 0xda4e, 0x1, 0x0);
        gbc.writeMem(0x1c6c, { 0x19 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd876, gbc.sp());
        EXPECT(0x1c6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 02FB
        gbc.setState(0xad3a, 0x3d59, 0xb900, 0x6f26, 0xb09, 0xe1c9, 0x0, 0x0);
        gbc.writeMem(0xad3a, { 0x19 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3d59, gbc.sp());
        EXPECT(0xad3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xad3a));
        // 19 02FC
        gbc.setState(0xee94, 0xf0a, 0x8920, 0x83b7, 0x3023, 0xad11, 0x1, 0x0);
        gbc.writeMem(0xee94, { 0x19 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf0a, gbc.sp());
        EXPECT(0xee95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xee94));
        // 19 02FD
        gbc.setState(0xaf08, 0x941b, 0x3b30, 0xd759, 0xfa0f, 0x67bd, 0x1, 0x1);
        gbc.writeMem(0xaf08, { 0x19 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x941b, gbc.sp());
        EXPECT(0xaf09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xaf08));
        // 19 02FE
        gbc.setState(0x151f, 0xed40, 0xd510, 0xb054, 0x6e2b, 0x54b6, 0x1, 0x1);
        gbc.writeMem(0x151f, { 0x19 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xed40, gbc.sp());
        EXPECT(0x1520, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 02FF
        gbc.setState(0x1d6e, 0x7669, 0xafb0, 0x1bbb, 0xf89f, 0x8f0d, 0x0, 0x1);
        gbc.writeMem(0x1d6e, { 0x19 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7669, gbc.sp());
        EXPECT(0x1d6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0300
        gbc.setState(0x28d5, 0xad66, 0xe3f0, 0x6fdf, 0x4baa, 0xab70, 0x0, 0x0);
        gbc.writeMem(0x28d5, { 0x19 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xad66, gbc.sp());
        EXPECT(0x28d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0301
        gbc.setState(0x8998, 0xa3f5, 0x2670, 0xea70, 0x83b, 0x2e64, 0x0, 0x0);
        gbc.writeMem(0x8998, { 0x19 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa3f5, gbc.sp());
        EXPECT(0x8999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8998));
        // 19 0302
        gbc.setState(0x258, 0x38d6, 0x2b10, 0xddb2, 0x9615, 0x3c93, 0x1, 0x0);
        gbc.writeMem(0x258, { 0x19 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x38d6, gbc.sp());
        EXPECT(0x259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0304
        gbc.setState(0xd831, 0x7d5a, 0xaff0, 0xeee2, 0xfa77, 0x787b, 0x1, 0x1);
        gbc.writeMem(0xd831, { 0x19 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7d5a, gbc.sp());
        EXPECT(0xd832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd831));
        // 19 0305
        gbc.setState(0xc91f, 0xabcb, 0x3640, 0xa973, 0xea48, 0x1e0f, 0x0, 0x1);
        gbc.writeMem(0xc91f, { 0x19 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xabcb, gbc.sp());
        EXPECT(0xc920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc91f));
        // 19 0306
        gbc.setState(0xa0eb, 0x9651, 0x5520, 0xfb50, 0xda72, 0x16e1, 0x1, 0x0);
        gbc.writeMem(0xa0eb, { 0x19 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9651, gbc.sp());
        EXPECT(0xa0ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa0eb));
        // 19 0307
        gbc.setState(0x1971, 0x3a13, 0xdd40, 0x951d, 0x4287, 0xe592, 0x0, 0x0);
        gbc.writeMem(0x1971, { 0x19 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3a13, gbc.sp());
        EXPECT(0x1972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0308
        gbc.setState(0x153c, 0x2f90, 0x2d80, 0x7d05, 0x87fc, 0x1c11, 0x0, 0x0);
        gbc.writeMem(0x153c, { 0x19 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2f90, gbc.sp());
        EXPECT(0x153d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0309
        gbc.setState(0x688b, 0xc57d, 0x60e0, 0xd1ca, 0xf061, 0x2a1, 0x1, 0x0);
        gbc.writeMem(0x688b, { 0x19 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc57d, gbc.sp());
        EXPECT(0x688c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 030A
        gbc.setState(0x636e, 0xdd08, 0x8140, 0xd0e6, 0x6d40, 0xedd1, 0x0, 0x0);
        gbc.writeMem(0x636e, { 0x19 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xdd08, gbc.sp());
        EXPECT(0x636f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 030B
        gbc.setState(0x141e, 0x62e5, 0xfa00, 0x724e, 0xdb43, 0xb1bd, 0x0, 0x0);
        gbc.writeMem(0x141e, { 0x19 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x62e5, gbc.sp());
        EXPECT(0x141f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 030C
        gbc.setState(0x75be, 0x604c, 0x8810, 0x84a8, 0x38c7, 0xccc1, 0x0, 0x1);
        gbc.writeMem(0x75be, { 0x19 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x604c, gbc.sp());
        EXPECT(0x75bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 030D
        gbc.setState(0xcfb8, 0x6944, 0xf440, 0xb479, 0x3ff2, 0x7604, 0x1, 0x1);
        gbc.writeMem(0xcfb8, { 0x19 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6944, gbc.sp());
        EXPECT(0xcfb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xcfb8));
        // 19 030E
        gbc.setState(0xb52a, 0xd403, 0xb1c0, 0x8c2d, 0xc025, 0xe49, 0x0, 0x1);
        gbc.writeMem(0xb52a, { 0x19 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd403, gbc.sp());
        EXPECT(0xb52b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb52a));
        // 19 030F
        gbc.setState(0x3a09, 0xb5b3, 0x9060, 0xa472, 0x2d4d, 0x7216, 0x1, 0x1);
        gbc.writeMem(0x3a09, { 0x19 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb5b3, gbc.sp());
        EXPECT(0x3a0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0310
        gbc.setState(0xbb65, 0x1928, 0x7150, 0x708d, 0xc35e, 0xd150, 0x1, 0x0);
        gbc.writeMem(0xbb65, { 0x19 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1928, gbc.sp());
        EXPECT(0xbb66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbb65));
        // 19 0312
        gbc.setState(0x8722, 0xd4fb, 0xf2c0, 0x8709, 0x7881, 0xff4b, 0x0, 0x1);
        gbc.writeMem(0x8722, { 0x19 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd4fb, gbc.sp());
        EXPECT(0x8723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8722));
        // 19 0313
        gbc.setState(0x5cca, 0xd657, 0xd740, 0xdcbf, 0x4571, 0xc8a6, 0x1, 0x0);
        gbc.writeMem(0x5cca, { 0x19 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd657, gbc.sp());
        EXPECT(0x5ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0314
        gbc.setState(0xcda7, 0x7ddb, 0x22f0, 0xe63a, 0x7426, 0xc62f, 0x1, 0x0);
        gbc.writeMem(0xcda7, { 0x19 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7ddb, gbc.sp());
        EXPECT(0xcda8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xcda7));
        // 19 0315
        gbc.setState(0xc7b1, 0x8b2, 0xc5e0, 0xa099, 0x4ff7, 0x60cc, 0x1, 0x0);
        gbc.writeMem(0xc7b1, { 0x19 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8b2, gbc.sp());
        EXPECT(0xc7b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc7b1));
        // 19 0316
        gbc.setState(0x18c, 0x700d, 0x9d80, 0x28a1, 0x242, 0xf9b7, 0x0, 0x1);
        gbc.writeMem(0x18c, { 0x19 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x700d, gbc.sp());
        EXPECT(0x18d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0317
        gbc.setState(0x87f8, 0xe134, 0xd100, 0xcaea, 0x66d9, 0xac7, 0x0, 0x1);
        gbc.writeMem(0x87f8, { 0x19 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe134, gbc.sp());
        EXPECT(0x87f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x87f8));
        // 19 0318
        gbc.setState(0xb614, 0x349d, 0x2f80, 0x1d0a, 0x203, 0xca1a, 0x1, 0x0);
        gbc.writeMem(0xb614, { 0x19 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x349d, gbc.sp());
        EXPECT(0xb615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb614));
        // 19 0319
        gbc.setState(0xd5ea, 0x61fc, 0x8780, 0x28d8, 0xb04d, 0x56e1, 0x1, 0x1);
        gbc.writeMem(0xd5ea, { 0x19 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x61fc, gbc.sp());
        EXPECT(0xd5eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd5ea));
        // 19 031A
        gbc.setState(0xbc7b, 0xa2b, 0x8350, 0xabe6, 0x97e, 0xf901, 0x1, 0x0);
        gbc.writeMem(0xbc7b, { 0x19 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa2b, gbc.sp());
        EXPECT(0xbc7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbc7b));
        // 19 031B
        gbc.setState(0x7daa, 0x42f5, 0x4340, 0x1399, 0x2992, 0xa394, 0x1, 0x0);
        gbc.writeMem(0x7daa, { 0x19 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x42f5, gbc.sp());
        EXPECT(0x7dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 031C
        gbc.setState(0x450c, 0xc1d6, 0x3a20, 0x9a7b, 0x9e2f, 0xf19c, 0x1, 0x1);
        gbc.writeMem(0x450c, { 0x19 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc1d6, gbc.sp());
        EXPECT(0x450d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 031D
        gbc.setState(0xde84, 0x3820, 0x5ad0, 0x3a0, 0xf665, 0xd1ac, 0x0, 0x1);
        gbc.writeMem(0xde84, { 0x19 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3820, gbc.sp());
        EXPECT(0xde85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xde84));
        // 19 031E
        gbc.setState(0x18e, 0x5b9f, 0x25b0, 0x7532, 0xbb72, 0xf2, 0x0, 0x1);
        gbc.writeMem(0x18e, { 0x19 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5b9f, gbc.sp());
        EXPECT(0x18f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 031F
        gbc.setState(0xc63f, 0xc2c8, 0xc050, 0xb2ad, 0x47e, 0x82e6, 0x0, 0x0);
        gbc.writeMem(0xc63f, { 0x19 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc2c8, gbc.sp());
        EXPECT(0xc640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc63f));
        // 19 0320
        gbc.setState(0xe9bb, 0x4474, 0x54c0, 0x45dc, 0xa901, 0xd812, 0x0, 0x0);
        gbc.writeMem(0xe9bb, { 0x19 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4474, gbc.sp());
        EXPECT(0xe9bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe9bb));
        // 19 0321
        gbc.setState(0xcfd6, 0x3fcd, 0x58c0, 0x403b, 0x129f, 0xa4d1, 0x1, 0x0);
        gbc.writeMem(0xcfd6, { 0x19 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3fcd, gbc.sp());
        EXPECT(0xcfd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xcfd6));
        // 19 0322
        gbc.setState(0xdf6e, 0x672e, 0x2f40, 0x91e1, 0x4e01, 0x69a8, 0x1, 0x0);
        gbc.writeMem(0xdf6e, { 0x19 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x672e, gbc.sp());
        EXPECT(0xdf6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xdf6e));
        // 19 0323
        gbc.setState(0xbbb2, 0x75d8, 0xd8c0, 0xc4d9, 0xb98c, 0x3d03, 0x1, 0x1);
        gbc.writeMem(0xbbb2, { 0x19 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x75d8, gbc.sp());
        EXPECT(0xbbb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbbb2));
        // 19 0324
        gbc.setState(0x6172, 0x8634, 0xd6f0, 0xd4ac, 0x5c7e, 0x4a10, 0x1, 0x0);
        gbc.writeMem(0x6172, { 0x19 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8634, gbc.sp());
        EXPECT(0x6173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0325
        gbc.setState(0x91c5, 0xd7d9, 0x18d0, 0x9c8f, 0x9866, 0x25cd, 0x1, 0x1);
        gbc.writeMem(0x91c5, { 0x19 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd7d9, gbc.sp());
        EXPECT(0x91c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x91c5));
        // 19 0326
        gbc.setState(0xc990, 0xc44a, 0x7980, 0x257b, 0x5553, 0x7118, 0x1, 0x0);
        gbc.writeMem(0xc990, { 0x19 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc44a, gbc.sp());
        EXPECT(0xc991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc990));
        // 19 0327
        gbc.setState(0x2316, 0x3afa, 0x9cc0, 0x95f7, 0xfd2d, 0x808e, 0x1, 0x0);
        gbc.writeMem(0x2316, { 0x19 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3afa, gbc.sp());
        EXPECT(0x2317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0328
        gbc.setState(0x6930, 0x16f3, 0x5d30, 0x5c7b, 0x6d81, 0xbedb, 0x1, 0x0);
        gbc.writeMem(0x6930, { 0x19 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x16f3, gbc.sp());
        EXPECT(0x6931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0329
        gbc.setState(0x71ee, 0x73a6, 0xdeb0, 0x736e, 0x272b, 0xdf4b, 0x1, 0x1);
        gbc.writeMem(0x71ee, { 0x19 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x73a6, gbc.sp());
        EXPECT(0x71ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 032A
        gbc.setState(0x58b4, 0x8034, 0x8ab0, 0x7823, 0x8694, 0x55f0, 0x1, 0x1);
        gbc.writeMem(0x58b4, { 0x19 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8034, gbc.sp());
        EXPECT(0x58b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 032B
        gbc.setState(0x2d95, 0xd233, 0x27b0, 0x11e9, 0x9c20, 0x7e0e, 0x1, 0x1);
        gbc.writeMem(0x2d95, { 0x19 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd233, gbc.sp());
        EXPECT(0x2d96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 032C
        gbc.setState(0x772b, 0x70bf, 0x5af0, 0x6770, 0xa461, 0x7fd, 0x0, 0x1);
        gbc.writeMem(0x772b, { 0x19 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x70bf, gbc.sp());
        EXPECT(0x772c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 032D
        gbc.setState(0x3629, 0x473c, 0x9bc0, 0xe4f, 0xf44b, 0x4b4a, 0x0, 0x1);
        gbc.writeMem(0x3629, { 0x19 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x473c, gbc.sp());
        EXPECT(0x362a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 032E
        gbc.setState(0x1c16, 0x7303, 0x5dd0, 0x31eb, 0x901c, 0x4865, 0x1, 0x1);
        gbc.writeMem(0x1c16, { 0x19 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7303, gbc.sp());
        EXPECT(0x1c17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 032F
        gbc.setState(0x9874, 0x468e, 0x8fe0, 0x1751, 0xfab, 0xd2dd, 0x0, 0x0);
        gbc.writeMem(0x9874, { 0x19 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x468e, gbc.sp());
        EXPECT(0x9875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9874));
        // 19 0330
        gbc.setState(0x8618, 0xf044, 0xf7a0, 0x79ba, 0x2684, 0xab37, 0x1, 0x1);
        gbc.writeMem(0x8618, { 0x19 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf044, gbc.sp());
        EXPECT(0x8619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8618));
        // 19 0331
        gbc.setState(0x5b42, 0x7a3f, 0x5a80, 0x5ad3, 0x785c, 0x62bc, 0x0, 0x1);
        gbc.writeMem(0x5b42, { 0x19 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7a3f, gbc.sp());
        EXPECT(0x5b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0333
        gbc.setState(0xc93a, 0xcc59, 0xde00, 0x3d35, 0xac10, 0xa8d6, 0x1, 0x1);
        gbc.writeMem(0xc93a, { 0x19 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xcc59, gbc.sp());
        EXPECT(0xc93b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc93a));
        // 19 0334
        gbc.setState(0x473e, 0xa8b6, 0xc8c0, 0xfbd1, 0xdd85, 0xbd71, 0x0, 0x1);
        gbc.writeMem(0x473e, { 0x19 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa8b6, gbc.sp());
        EXPECT(0x473f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0335
        gbc.setState(0x4f11, 0xf0f0, 0x1180, 0x1944, 0xc48a, 0xf5db, 0x0, 0x0);
        gbc.writeMem(0x4f11, { 0x19 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf0f0, gbc.sp());
        EXPECT(0x4f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0336
        gbc.setState(0x213, 0x8b47, 0x38e0, 0xb2e3, 0x828d, 0x7a72, 0x0, 0x0);
        gbc.writeMem(0x213, { 0x19 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8b47, gbc.sp());
        EXPECT(0x214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0337
        gbc.setState(0x8bad, 0xe570, 0xbad0, 0x1ed2, 0xfd7a, 0xe38a, 0x0, 0x0);
        gbc.writeMem(0x8bad, { 0x19 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe570, gbc.sp());
        EXPECT(0x8bae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8bad));
        // 19 0338
        gbc.setState(0x4401, 0x4045, 0x11d0, 0x3391, 0x3c3a, 0x5313, 0x0, 0x0);
        gbc.writeMem(0x4401, { 0x19 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4045, gbc.sp());
        EXPECT(0x4402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0339
        gbc.setState(0xe09, 0xa601, 0xafb0, 0x9539, 0x25ea, 0xf4d3, 0x0, 0x0);
        gbc.writeMem(0xe09, { 0x19 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa601, gbc.sp());
        EXPECT(0xe0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 033A
        gbc.setState(0xc8ca, 0x3d62, 0xad30, 0xe068, 0x921e, 0xf8b1, 0x1, 0x1);
        gbc.writeMem(0xc8ca, { 0x19 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3d62, gbc.sp());
        EXPECT(0xc8cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc8ca));
        // 19 033B
        gbc.setState(0xb73c, 0x899e, 0x60f0, 0x7432, 0x93e, 0x4126, 0x1, 0x0);
        gbc.writeMem(0xb73c, { 0x19 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x899e, gbc.sp());
        EXPECT(0xb73d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb73c));
        // 19 033D
        gbc.setState(0xa22d, 0xaf52, 0x2f00, 0xc8d0, 0xb4a9, 0x2764, 0x1, 0x1);
        gbc.writeMem(0xa22d, { 0x19 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xaf52, gbc.sp());
        EXPECT(0xa22e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa22d));
        // 19 033E
        gbc.setState(0xa4b1, 0x6bd, 0xa0, 0x3321, 0xc29, 0x57ff, 0x0, 0x0);
        gbc.writeMem(0xa4b1, { 0x19 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6bd, gbc.sp());
        EXPECT(0xa4b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa4b1));
        // 19 033F
        gbc.setState(0x9e9d, 0x55e5, 0xfda0, 0x13a2, 0x2e64, 0xb812, 0x0, 0x1);
        gbc.writeMem(0x9e9d, { 0x19 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x55e5, gbc.sp());
        EXPECT(0x9e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9e9d));
        // 19 0340
        gbc.setState(0x2ff5, 0x63ab, 0xe1f0, 0xe247, 0xe2c9, 0x2bd8, 0x0, 0x0);
        gbc.writeMem(0x2ff5, { 0x19 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x63ab, gbc.sp());
        EXPECT(0x2ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0341
        gbc.setState(0x765d, 0x10a0, 0x6320, 0x499e, 0xa4a0, 0x7a6b, 0x0, 0x1);
        gbc.writeMem(0x765d, { 0x19 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x10a0, gbc.sp());
        EXPECT(0x765e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0342
        gbc.setState(0x4c61, 0xc23a, 0x8270, 0xa1c7, 0x6d4b, 0x943a, 0x0, 0x0);
        gbc.writeMem(0x4c61, { 0x19 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc23a, gbc.sp());
        EXPECT(0x4c62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0343
        gbc.setState(0x5c2e, 0xde8e, 0xc920, 0x1a38, 0x2f4a, 0xfa1a, 0x1, 0x0);
        gbc.writeMem(0x5c2e, { 0x19 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xde8e, gbc.sp());
        EXPECT(0x5c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0344
        gbc.setState(0x46ad, 0xd3c3, 0x2fe0, 0x37f3, 0x2f4a, 0x82dd, 0x1, 0x0);
        gbc.writeMem(0x46ad, { 0x19 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd3c3, gbc.sp());
        EXPECT(0x46ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0345
        gbc.setState(0xe46, 0x8493, 0xea90, 0xc4e6, 0x223d, 0xa010, 0x1, 0x1);
        gbc.writeMem(0xe46, { 0x19 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8493, gbc.sp());
        EXPECT(0xe47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0346
        gbc.setState(0x4f37, 0xa8f5, 0xd7d0, 0xf874, 0x9cd1, 0x545a, 0x1, 0x0);
        gbc.writeMem(0x4f37, { 0x19 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa8f5, gbc.sp());
        EXPECT(0x4f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0347
        gbc.setState(0x8e1, 0x93e6, 0xc540, 0xa5c5, 0xac90, 0x659e, 0x0, 0x1);
        gbc.writeMem(0x8e1, { 0x19 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x93e6, gbc.sp());
        EXPECT(0x8e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0348
        gbc.setState(0x73c0, 0x6b3c, 0x7ed0, 0x7607, 0x9803, 0xc70f, 0x0, 0x0);
        gbc.writeMem(0x73c0, { 0x19 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6b3c, gbc.sp());
        EXPECT(0x73c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0349
        gbc.setState(0xc12d, 0x930f, 0x8ad0, 0xe9d, 0xd0b9, 0xb31d, 0x1, 0x1);
        gbc.writeMem(0xc12d, { 0x19 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x930f, gbc.sp());
        EXPECT(0xc12e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc12d));
        // 19 034A
        gbc.setState(0x7743, 0xd32, 0x8020, 0x804d, 0x24fd, 0x66c1, 0x1, 0x0);
        gbc.writeMem(0x7743, { 0x19 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd32, gbc.sp());
        EXPECT(0x7744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 034B
        gbc.setState(0x2afc, 0x3da3, 0xb3e0, 0x6f81, 0x1577, 0x8c83, 0x0, 0x1);
        gbc.writeMem(0x2afc, { 0x19 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3da3, gbc.sp());
        EXPECT(0x2afd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 034C
        gbc.setState(0xa0d, 0x4862, 0x2900, 0x51c5, 0x1259, 0xad4d, 0x0, 0x0);
        gbc.writeMem(0xa0d, { 0x19 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4862, gbc.sp());
        EXPECT(0xa0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 034D
        gbc.setState(0x128, 0x940d, 0xf350, 0x9402, 0xf751, 0xdfe0, 0x0, 0x1);
        gbc.writeMem(0x128, { 0x19 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x940d, gbc.sp());
        EXPECT(0x129, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 034E
        gbc.setState(0xb1a1, 0xc04b, 0x1f50, 0x577, 0xb128, 0xfd10, 0x0, 0x0);
        gbc.writeMem(0xb1a1, { 0x19 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc04b, gbc.sp());
        EXPECT(0xb1a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb1a1));
        // 19 034F
        gbc.setState(0xd78e, 0x29d, 0x4c10, 0xcbc8, 0x915a, 0x233f, 0x0, 0x1);
        gbc.writeMem(0xd78e, { 0x19 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x29d, gbc.sp());
        EXPECT(0xd78f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd78e));
        // 19 0350
        gbc.setState(0x7981, 0x9fcc, 0x54c0, 0xaa4c, 0x9cd8, 0x28e6, 0x1, 0x1);
        gbc.writeMem(0x7981, { 0x19 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9fcc, gbc.sp());
        EXPECT(0x7982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0351
        gbc.setState(0x31b0, 0xdae5, 0x64b0, 0xcf74, 0xc4e5, 0xa132, 0x1, 0x0);
        gbc.writeMem(0x31b0, { 0x19 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdae5, gbc.sp());
        EXPECT(0x31b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0352
        gbc.setState(0xc60e, 0xa573, 0x3e50, 0xd19e, 0xa36, 0x9e0f, 0x0, 0x1);
        gbc.writeMem(0xc60e, { 0x19 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa573, gbc.sp());
        EXPECT(0xc60f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc60e));
        // 19 0353
        gbc.setState(0x5660, 0xa351, 0xc620, 0x909b, 0xeb5e, 0x84fe, 0x1, 0x1);
        gbc.writeMem(0x5660, { 0x19 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa351, gbc.sp());
        EXPECT(0x5661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0354
        gbc.setState(0xed6c, 0xec4a, 0x3340, 0x1f79, 0xf06f, 0x73d, 0x0, 0x0);
        gbc.writeMem(0xed6c, { 0x19 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xec4a, gbc.sp());
        EXPECT(0xed6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xed6c));
        // 19 0355
        gbc.setState(0x561c, 0x45de, 0xcea0, 0xcbed, 0x1234, 0x9cd1, 0x0, 0x1);
        gbc.writeMem(0x561c, { 0x19 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x45de, gbc.sp());
        EXPECT(0x561d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0356
        gbc.setState(0x2c75, 0x9e70, 0xede0, 0xc1b7, 0x9bee, 0x5eb4, 0x1, 0x1);
        gbc.writeMem(0x2c75, { 0x19 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9e70, gbc.sp());
        EXPECT(0x2c76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0358
        gbc.setState(0x1c67, 0x50f8, 0xc10, 0x8d0f, 0xbe23, 0x190b, 0x1, 0x0);
        gbc.writeMem(0x1c67, { 0x19 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x50f8, gbc.sp());
        EXPECT(0x1c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0359
        gbc.setState(0x1065, 0x924f, 0x4d90, 0x7052, 0xcae6, 0x96fd, 0x0, 0x0);
        gbc.writeMem(0x1065, { 0x19 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x924f, gbc.sp());
        EXPECT(0x1066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 035A
        gbc.setState(0x1400, 0x170b, 0xbd60, 0x5b08, 0x811a, 0xef49, 0x0, 0x1);
        gbc.writeMem(0x1400, { 0x19 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x170b, gbc.sp());
        EXPECT(0x1401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 035B
        gbc.setState(0x9cb8, 0x1a6e, 0x89b0, 0xdfc2, 0x4781, 0x5d59, 0x1, 0x0);
        gbc.writeMem(0x9cb8, { 0x19 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1a6e, gbc.sp());
        EXPECT(0x9cb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9cb8));
        // 19 035C
        gbc.setState(0xab9e, 0x424f, 0x7810, 0x4fea, 0x8bfa, 0xee3d, 0x0, 0x0);
        gbc.writeMem(0xab9e, { 0x19 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x424f, gbc.sp());
        EXPECT(0xab9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xab9e));
        // 19 035D
        gbc.setState(0xeb5a, 0x6819, 0xf7b0, 0x649b, 0x3e5e, 0xf30a, 0x0, 0x1);
        gbc.writeMem(0xeb5a, { 0x19 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6819, gbc.sp());
        EXPECT(0xeb5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xeb5a));
        // 19 035E
        gbc.setState(0x1b9d, 0x9e39, 0x98a0, 0xa13, 0x61d6, 0x22b8, 0x1, 0x0);
        gbc.writeMem(0x1b9d, { 0x19 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9e39, gbc.sp());
        EXPECT(0x1b9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 035F
        gbc.setState(0x48c3, 0x1a1d, 0x3a60, 0x5292, 0xbb40, 0xeab0, 0x0, 0x0);
        gbc.writeMem(0x48c3, { 0x19 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1a1d, gbc.sp());
        EXPECT(0x48c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0360
        gbc.setState(0x1dac, 0x60b0, 0x5af0, 0xeb06, 0x3158, 0x4c2a, 0x1, 0x0);
        gbc.writeMem(0x1dac, { 0x19 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x60b0, gbc.sp());
        EXPECT(0x1dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0361
        gbc.setState(0xe18c, 0x8c02, 0x4c80, 0x54c9, 0xf628, 0x3ce6, 0x0, 0x1);
        gbc.writeMem(0xe18c, { 0x19 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8c02, gbc.sp());
        EXPECT(0xe18d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe18c));
        // 19 0363
        gbc.setState(0x2495, 0x599d, 0x2020, 0xedaf, 0xa154, 0xb4d7, 0x1, 0x1);
        gbc.writeMem(0x2495, { 0x19 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x599d, gbc.sp());
        EXPECT(0x2496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0364
        gbc.setState(0xe089, 0x552b, 0xf070, 0x221e, 0xf778, 0xf2db, 0x0, 0x1);
        gbc.writeMem(0xe089, { 0x19 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x552b, gbc.sp());
        EXPECT(0xe08a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe089));
        // 19 0366
        gbc.setState(0x57cd, 0xe0b3, 0x6200, 0xebb9, 0xdaa, 0xf8e3, 0x1, 0x1);
        gbc.writeMem(0x57cd, { 0x19 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe0b3, gbc.sp());
        EXPECT(0x57ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0367
        gbc.setState(0x3d66, 0x25e9, 0x4d60, 0xfdda, 0xc7dd, 0x325f, 0x1, 0x1);
        gbc.writeMem(0x3d66, { 0x19 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x25e9, gbc.sp());
        EXPECT(0x3d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0368
        gbc.setState(0xdf57, 0xfd72, 0x1350, 0x5d74, 0x35b4, 0xee36, 0x1, 0x0);
        gbc.writeMem(0xdf57, { 0x19 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfd72, gbc.sp());
        EXPECT(0xdf58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xdf57));
        // 19 036A
        gbc.setState(0xc3e5, 0xdda, 0x4220, 0xd520, 0x6163, 0x107a, 0x0, 0x1);
        gbc.writeMem(0xc3e5, { 0x19 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xdda, gbc.sp());
        EXPECT(0xc3e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc3e5));
        // 19 036B
        gbc.setState(0x4d1b, 0x6847, 0x9d30, 0x6e9f, 0x2235, 0xfdcb, 0x1, 0x0);
        gbc.writeMem(0x4d1b, { 0x19 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6847, gbc.sp());
        EXPECT(0x4d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 036C
        gbc.setState(0x4e9d, 0x6125, 0x5d80, 0xe77f, 0xf173, 0xbbb, 0x0, 0x0);
        gbc.writeMem(0x4e9d, { 0x19 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6125, gbc.sp());
        EXPECT(0x4e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 036D
        gbc.setState(0x935d, 0x8187, 0x440, 0x673b, 0xd044, 0x6aff, 0x1, 0x0);
        gbc.writeMem(0x935d, { 0x19 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8187, gbc.sp());
        EXPECT(0x935e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x935d));
        // 19 036E
        gbc.setState(0x86c, 0xc2dd, 0xd670, 0xf92e, 0x1ba5, 0xdcc8, 0x0, 0x1);
        gbc.writeMem(0x86c, { 0x19 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc2dd, gbc.sp());
        EXPECT(0x86d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 036F
        gbc.setState(0x2d4f, 0xca50, 0xcc0, 0x2379, 0x1e6c, 0x3742, 0x0, 0x0);
        gbc.writeMem(0x2d4f, { 0x19 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xca50, gbc.sp());
        EXPECT(0x2d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0370
        gbc.setState(0x5d78, 0x7fb, 0x5860, 0x131a, 0x5ee4, 0xaaed, 0x1, 0x1);
        gbc.writeMem(0x5d78, { 0x19 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7fb, gbc.sp());
        EXPECT(0x5d79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0371
        gbc.setState(0x4fb4, 0xdb3f, 0x70b0, 0x563e, 0xd655, 0x2b, 0x0, 0x1);
        gbc.writeMem(0x4fb4, { 0x19 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdb3f, gbc.sp());
        EXPECT(0x4fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0372
        gbc.setState(0x1e16, 0xa9b5, 0xb9b0, 0xdf24, 0x27fa, 0x29f5, 0x1, 0x0);
        gbc.writeMem(0x1e16, { 0x19 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa9b5, gbc.sp());
        EXPECT(0x1e17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0373
        gbc.setState(0xe11a, 0x36b2, 0xba0, 0x3953, 0xd796, 0x49c7, 0x1, 0x0);
        gbc.writeMem(0xe11a, { 0x19 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x36b2, gbc.sp());
        EXPECT(0xe11b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe11a));
        // 19 0374
        gbc.setState(0x9897, 0x9146, 0x3410, 0x87c7, 0xc7d8, 0xfb48, 0x1, 0x0);
        gbc.writeMem(0x9897, { 0x19 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9146, gbc.sp());
        EXPECT(0x9898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9897));
        // 19 0375
        gbc.setState(0xce53, 0xac7, 0x9e00, 0x4b4d, 0x91c3, 0x8e9c, 0x1, 0x0);
        gbc.writeMem(0xce53, { 0x19 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xac7, gbc.sp());
        EXPECT(0xce54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xce53));
        // 19 0376
        gbc.setState(0x81aa, 0x74f, 0x2720, 0xdf3c, 0xd02b, 0x12c2, 0x1, 0x1);
        gbc.writeMem(0x81aa, { 0x19 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x74f, gbc.sp());
        EXPECT(0x81ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x81aa));
        // 19 0377
        gbc.setState(0x4a73, 0x26e, 0xc960, 0x4f69, 0x2348, 0xfc37, 0x0, 0x1);
        gbc.writeMem(0x4a73, { 0x19 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x26e, gbc.sp());
        EXPECT(0x4a74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0378
        gbc.setState(0x964e, 0xf043, 0xe880, 0x6718, 0xcbe9, 0x4355, 0x0, 0x1);
        gbc.writeMem(0x964e, { 0x19 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf043, gbc.sp());
        EXPECT(0x964f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x964e));
        // 19 0379
        gbc.setState(0xc214, 0xec1a, 0x8f80, 0xe6c1, 0x79bc, 0x7093, 0x1, 0x1);
        gbc.writeMem(0xc214, { 0x19 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xec1a, gbc.sp());
        EXPECT(0xc215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc214));
        // 19 037A
        gbc.setState(0x5488, 0xb670, 0x7280, 0x627e, 0x4c9, 0xa71e, 0x1, 0x1);
        gbc.writeMem(0x5488, { 0x19 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb670, gbc.sp());
        EXPECT(0x5489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 037B
        gbc.setState(0xb2d7, 0xce95, 0x1480, 0xa42a, 0x9b49, 0xce13, 0x0, 0x1);
        gbc.writeMem(0xb2d7, { 0x19 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xce95, gbc.sp());
        EXPECT(0xb2d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb2d7));
        // 19 037C
        gbc.setState(0x8fe, 0x4d26, 0xef50, 0x49d3, 0xae1f, 0xe664, 0x1, 0x1);
        gbc.writeMem(0x8fe, { 0x19 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4d26, gbc.sp());
        EXPECT(0x8ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 037D
        gbc.setState(0x5acf, 0xd796, 0xafc0, 0xc0ee, 0x5ed0, 0x9841, 0x0, 0x0);
        gbc.writeMem(0x5acf, { 0x19 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd796, gbc.sp());
        EXPECT(0x5ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 037E
        gbc.setState(0xe338, 0x114e, 0x9080, 0x200c, 0x3447, 0x88da, 0x1, 0x1);
        gbc.writeMem(0xe338, { 0x19 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x114e, gbc.sp());
        EXPECT(0xe339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe338));
        // 19 037F
        gbc.setState(0x8059, 0x8b7b, 0x8f70, 0x4dcb, 0xc656, 0x1d70, 0x1, 0x0);
        gbc.writeMem(0x8059, { 0x19 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8b7b, gbc.sp());
        EXPECT(0x805a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8059));
        // 19 0380
        gbc.setState(0xa29e, 0x48b8, 0xa1a0, 0xe7b, 0x97dd, 0xc955, 0x0, 0x0);
        gbc.writeMem(0xa29e, { 0x19 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x48b8, gbc.sp());
        EXPECT(0xa29f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa29e));
        // 19 0381
        gbc.setState(0x4a0e, 0xd7db, 0x9cd0, 0xa4c3, 0xa30a, 0xb61d, 0x0, 0x1);
        gbc.writeMem(0x4a0e, { 0x19 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd7db, gbc.sp());
        EXPECT(0x4a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0382
        gbc.setState(0x4a47, 0xed7c, 0x5f20, 0xb76, 0x1c15, 0x73e3, 0x1, 0x1);
        gbc.writeMem(0x4a47, { 0x19 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xed7c, gbc.sp());
        EXPECT(0x4a48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0383
        gbc.setState(0xefc0, 0x356f, 0x1850, 0xd7a1, 0x33b2, 0xb8b, 0x1, 0x1);
        gbc.writeMem(0xefc0, { 0x19 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x356f, gbc.sp());
        EXPECT(0xefc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xefc0));
        // 19 0384
        gbc.setState(0xa283, 0x1f78, 0xdf0, 0xba52, 0x6d8a, 0xd6d8, 0x1, 0x0);
        gbc.writeMem(0xa283, { 0x19 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1f78, gbc.sp());
        EXPECT(0xa284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa283));
        // 19 0385
        gbc.setState(0xe4c4, 0xaef2, 0xa910, 0xf8c0, 0xd58a, 0xb0ec, 0x0, 0x1);
        gbc.writeMem(0xe4c4, { 0x19 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xaef2, gbc.sp());
        EXPECT(0xe4c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe4c4));
        // 19 0386
        gbc.setState(0xca24, 0x5b27, 0x6590, 0xe144, 0xcfa9, 0x9699, 0x0, 0x1);
        gbc.writeMem(0xca24, { 0x19 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5b27, gbc.sp());
        EXPECT(0xca25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xca24));
        // 19 0387
        gbc.setState(0xb16, 0x750a, 0xc500, 0x21df, 0xf670, 0x3ad5, 0x1, 0x0);
        gbc.writeMem(0xb16, { 0x19 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x750a, gbc.sp());
        EXPECT(0xb17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0388
        gbc.setState(0xcb8, 0x2d5a, 0xb0f0, 0xa648, 0x6bb6, 0x27e7, 0x0, 0x0);
        gbc.writeMem(0xcb8, { 0x19 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2d5a, gbc.sp());
        EXPECT(0xcb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0389
        gbc.setState(0xb97, 0x5ce3, 0x2960, 0x6aa7, 0x51b6, 0x25ad, 0x0, 0x0);
        gbc.writeMem(0xb97, { 0x19 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5ce3, gbc.sp());
        EXPECT(0xb98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 038A
        gbc.setState(0x2207, 0x79ad, 0xc6a0, 0xe8c, 0xd9a7, 0xf969, 0x0, 0x0);
        gbc.writeMem(0x2207, { 0x19 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x79ad, gbc.sp());
        EXPECT(0x2208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 038B
        gbc.setState(0xab37, 0xb350, 0xb280, 0x7b1, 0xc962, 0xee34, 0x1, 0x0);
        gbc.writeMem(0xab37, { 0x19 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb350, gbc.sp());
        EXPECT(0xab38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xab37));
        // 19 038C
        gbc.setState(0x4859, 0xd686, 0x3330, 0x7551, 0xfbf6, 0x7518, 0x1, 0x0);
        gbc.writeMem(0x4859, { 0x19 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd686, gbc.sp());
        EXPECT(0x485a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 038D
        gbc.setState(0x1f7f, 0x36bb, 0x9d60, 0x7692, 0xd939, 0xed97, 0x0, 0x1);
        gbc.writeMem(0x1f7f, { 0x19 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x36bb, gbc.sp());
        EXPECT(0x1f80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 038E
        gbc.setState(0xac03, 0x2a0e, 0x8540, 0x417a, 0x2d29, 0x3319, 0x1, 0x1);
        gbc.writeMem(0xac03, { 0x19 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2a0e, gbc.sp());
        EXPECT(0xac04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xac03));
        // 19 038F
        gbc.setState(0x4f28, 0xf72, 0x6c20, 0x9384, 0x7d5e, 0xc81a, 0x0, 0x0);
        gbc.writeMem(0x4f28, { 0x19 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf72, gbc.sp());
        EXPECT(0x4f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0390
        gbc.setState(0x2b25, 0xf01f, 0x1e30, 0x6178, 0x78dc, 0x5462, 0x0, 0x1);
        gbc.writeMem(0x2b25, { 0x19 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf01f, gbc.sp());
        EXPECT(0x2b26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0391
        gbc.setState(0x9a73, 0x5cea, 0xf6e0, 0x3087, 0x9d94, 0x6aa8, 0x1, 0x0);
        gbc.writeMem(0x9a73, { 0x19 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5cea, gbc.sp());
        EXPECT(0x9a74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9a73));
        // 19 0392
        gbc.setState(0x11cb, 0x9f4a, 0x7960, 0xacce, 0x2c97, 0xa5dc, 0x1, 0x0);
        gbc.writeMem(0x11cb, { 0x19 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9f4a, gbc.sp());
        EXPECT(0x11cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0393
        gbc.setState(0xe7f, 0x510f, 0x81e0, 0xcd1c, 0xa260, 0x4be8, 0x1, 0x0);
        gbc.writeMem(0xe7f, { 0x19 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x510f, gbc.sp());
        EXPECT(0xe80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0395
        gbc.setState(0x1c86, 0x3682, 0x9b40, 0x320b, 0x93bc, 0x118, 0x1, 0x0);
        gbc.writeMem(0x1c86, { 0x19 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3682, gbc.sp());
        EXPECT(0x1c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 0396
        gbc.setState(0xeca, 0xadd7, 0x37d0, 0x8e5, 0x556d, 0xb20c, 0x1, 0x1);
        gbc.writeMem(0xeca, { 0x19 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xadd7, gbc.sp());
        EXPECT(0xecb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 0397
        gbc.setState(0xa56c, 0x84eb, 0x3270, 0xdbaa, 0x9824, 0xf8a0, 0x1, 0x1);
        gbc.writeMem(0xa56c, { 0x19 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x84eb, gbc.sp());
        EXPECT(0xa56d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa56c));
        // 19 0398
        gbc.setState(0xb9f2, 0xe87d, 0xb960, 0x4ddd, 0x6ab0, 0x6cf6, 0x0, 0x1);
        gbc.writeMem(0xb9f2, { 0x19 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe87d, gbc.sp());
        EXPECT(0xb9f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb9f2));
        // 19 0399
        gbc.setState(0x47e8, 0x1b8e, 0xdd80, 0x9f43, 0x638b, 0x622b, 0x0, 0x0);
        gbc.writeMem(0x47e8, { 0x19 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1b8e, gbc.sp());
        EXPECT(0x47e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 039A
        gbc.setState(0x99f7, 0xa956, 0x3a0, 0x8a93, 0x3c00, 0x509, 0x1, 0x0);
        gbc.writeMem(0x99f7, { 0x19 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa956, gbc.sp());
        EXPECT(0x99f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x99f7));
        // 19 039B
        gbc.setState(0x1ec6, 0x278a, 0x3cc0, 0xc74e, 0xf2c1, 0x9946, 0x1, 0x0);
        gbc.writeMem(0x1ec6, { 0x19 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x278a, gbc.sp());
        EXPECT(0x1ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 039C
        gbc.setState(0x4d34, 0x3f6d, 0x7370, 0xb0d4, 0xa85, 0x95ec, 0x1, 0x0);
        gbc.writeMem(0x4d34, { 0x19 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3f6d, gbc.sp());
        EXPECT(0x4d35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 039D
        gbc.setState(0xdd04, 0x23e3, 0x9380, 0x909b, 0xb0f5, 0xefb8, 0x1, 0x1);
        gbc.writeMem(0xdd04, { 0x19 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x23e3, gbc.sp());
        EXPECT(0xdd05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xdd04));
        // 19 039E
        gbc.setState(0x78c1, 0x2269, 0xdec0, 0x8929, 0x175, 0x8542, 0x1, 0x0);
        gbc.writeMem(0x78c1, { 0x19 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2269, gbc.sp());
        EXPECT(0x78c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 039F
        gbc.setState(0x8f94, 0x418e, 0xab20, 0x3266, 0xca2d, 0x6649, 0x0, 0x0);
        gbc.writeMem(0x8f94, { 0x19 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x418e, gbc.sp());
        EXPECT(0x8f95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8f94));
        // 19 03A0
        gbc.setState(0x5603, 0x6e8, 0xd130, 0x5fd9, 0x353e, 0xc246, 0x1, 0x0);
        gbc.writeMem(0x5603, { 0x19 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6e8, gbc.sp());
        EXPECT(0x5604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 03A1
        gbc.setState(0x541f, 0x2b2a, 0x950, 0xa71a, 0xfb32, 0x3096, 0x1, 0x0);
        gbc.writeMem(0x541f, { 0x19 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2b2a, gbc.sp());
        EXPECT(0x5420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03A2
        gbc.setState(0x76ed, 0x1471, 0x1350, 0x625b, 0x3949, 0xeb4e, 0x1, 0x1);
        gbc.writeMem(0x76ed, { 0x19 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1471, gbc.sp());
        EXPECT(0x76ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03A3
        gbc.setState(0xa516, 0xe958, 0xc200, 0x95c7, 0x6546, 0x9e1, 0x1, 0x0);
        gbc.writeMem(0xa516, { 0x19 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe958, gbc.sp());
        EXPECT(0xa517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa516));
        // 19 03A5
        gbc.setState(0xc3a7, 0x6836, 0x88d0, 0xdc1d, 0x8cfe, 0xb87c, 0x0, 0x0);
        gbc.writeMem(0xc3a7, { 0x19 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6836, gbc.sp());
        EXPECT(0xc3a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc3a7));
        // 19 03A6
        gbc.setState(0xb471, 0xfa8, 0x2680, 0xaef5, 0xdfee, 0x2ac5, 0x1, 0x0);
        gbc.writeMem(0xb471, { 0x19 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xfa8, gbc.sp());
        EXPECT(0xb472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb471));
        // 19 03A7
        gbc.setState(0x79fb, 0x868, 0x3fd0, 0x387b, 0xcc5e, 0x6363, 0x0, 0x1);
        gbc.writeMem(0x79fb, { 0x19 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x868, gbc.sp());
        EXPECT(0x79fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03A8
        gbc.setState(0xec17, 0xc1b3, 0xf320, 0x4770, 0xef09, 0x8b6e, 0x1, 0x1);
        gbc.writeMem(0xec17, { 0x19 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc1b3, gbc.sp());
        EXPECT(0xec18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xec17));
        // 19 03A9
        gbc.setState(0xa646, 0x14be, 0x7ff0, 0x2aa2, 0x2e6a, 0xcfc3, 0x1, 0x0);
        gbc.writeMem(0xa646, { 0x19 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x14be, gbc.sp());
        EXPECT(0xa647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa646));
        // 19 03AA
        gbc.setState(0x8865, 0xe82b, 0xde10, 0x91e4, 0x5266, 0x393a, 0x1, 0x1);
        gbc.writeMem(0x8865, { 0x19 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe82b, gbc.sp());
        EXPECT(0x8866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8865));
        // 19 03AB
        gbc.setState(0xb843, 0xdc34, 0xb710, 0xefc5, 0x890b, 0x6154, 0x1, 0x1);
        gbc.writeMem(0xb843, { 0x19 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xdc34, gbc.sp());
        EXPECT(0xb844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb843));
        // 19 03AC
        gbc.setState(0xbcbd, 0x8d39, 0x9600, 0xb5ba, 0xe13a, 0x6689, 0x1, 0x0);
        gbc.writeMem(0xbcbd, { 0x19 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8d39, gbc.sp());
        EXPECT(0xbcbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbcbd));
        // 19 03AD
        gbc.setState(0x1398, 0x4020, 0x1fc0, 0x6365, 0x7c87, 0xa732, 0x0, 0x0);
        gbc.writeMem(0x1398, { 0x19 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4020, gbc.sp());
        EXPECT(0x1399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03AE
        gbc.setState(0xefc5, 0x4500, 0x60c0, 0x487d, 0x42a3, 0x73bc, 0x1, 0x0);
        gbc.writeMem(0xefc5, { 0x19 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4500, gbc.sp());
        EXPECT(0xefc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xefc5));
        // 19 03AF
        gbc.setState(0xc765, 0xe9cf, 0x3a30, 0x54a6, 0xa9fc, 0xe72b, 0x1, 0x1);
        gbc.writeMem(0xc765, { 0x19 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe9cf, gbc.sp());
        EXPECT(0xc766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc765));
        // 19 03B0
        gbc.setState(0x26e7, 0x2bbb, 0xe220, 0x12b5, 0x7b26, 0xe839, 0x0, 0x0);
        gbc.writeMem(0x26e7, { 0x19 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2bbb, gbc.sp());
        EXPECT(0x26e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03B1
        gbc.setState(0x928d, 0x79dc, 0x6ed0, 0xbd44, 0x8d45, 0x221d, 0x1, 0x0);
        gbc.writeMem(0x928d, { 0x19 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x79dc, gbc.sp());
        EXPECT(0x928e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x928d));
        // 19 03B2
        gbc.setState(0xdf9a, 0x7f5e, 0x51b0, 0x899, 0x1319, 0x2207, 0x0, 0x1);
        gbc.writeMem(0xdf9a, { 0x19 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7f5e, gbc.sp());
        EXPECT(0xdf9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xdf9a));
        // 19 03B3
        gbc.setState(0xa45d, 0x76fb, 0xc610, 0x974d, 0xdaf9, 0xd498, 0x0, 0x1);
        gbc.writeMem(0xa45d, { 0x19 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x76fb, gbc.sp());
        EXPECT(0xa45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa45d));
        // 19 03B4
        gbc.setState(0xdbfa, 0x29be, 0xa640, 0x258c, 0x3f40, 0xddcc, 0x1, 0x1);
        gbc.writeMem(0xdbfa, { 0x19 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x29be, gbc.sp());
        EXPECT(0xdbfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xdbfa));
        // 19 03B5
        gbc.setState(0x464e, 0x7e0e, 0x8710, 0xdb0, 0x87be, 0x8db1, 0x1, 0x0);
        gbc.writeMem(0x464e, { 0x19 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7e0e, gbc.sp());
        EXPECT(0x464f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03B6
        gbc.setState(0x2d75, 0xb2ec, 0xc0b0, 0x72e9, 0x77c5, 0x8c94, 0x0, 0x0);
        gbc.writeMem(0x2d75, { 0x19 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb2ec, gbc.sp());
        EXPECT(0x2d76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03B7
        gbc.setState(0x21ca, 0x56d3, 0x7dd0, 0x2064, 0xb6b, 0x56e3, 0x0, 0x1);
        gbc.writeMem(0x21ca, { 0x19 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x56d3, gbc.sp());
        EXPECT(0x21cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 03B8
        gbc.setState(0x47f2, 0xd51, 0xb920, 0xab22, 0xb991, 0x72c6, 0x0, 0x0);
        gbc.writeMem(0x47f2, { 0x19 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd51, gbc.sp());
        EXPECT(0x47f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03B9
        gbc.setState(0x74a9, 0x475b, 0xec0, 0x489e, 0xf6d1, 0x3baa, 0x1, 0x0);
        gbc.writeMem(0x74a9, { 0x19 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x475b, gbc.sp());
        EXPECT(0x74aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03BA
        gbc.setState(0xed8, 0x758b, 0x32e0, 0xbfe8, 0x78ad, 0xb986, 0x0, 0x0);
        gbc.writeMem(0xed8, { 0x19 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x758b, gbc.sp());
        EXPECT(0xed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03BB
        gbc.setState(0x609b, 0xcdfc, 0x5760, 0x7cf2, 0x97ac, 0xab71, 0x0, 0x1);
        gbc.writeMem(0x609b, { 0x19 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcdfc, gbc.sp());
        EXPECT(0x609c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03BC
        gbc.setState(0x176, 0xc3bb, 0x1f80, 0xd2d8, 0xe555, 0xe42f, 0x0, 0x1);
        gbc.writeMem(0x176, { 0x19 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc3bb, gbc.sp());
        EXPECT(0x177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03BD
        gbc.setState(0x5077, 0x9ec2, 0xe770, 0x2503, 0xa9c4, 0xef07, 0x0, 0x1);
        gbc.writeMem(0x5077, { 0x19 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9ec2, gbc.sp());
        EXPECT(0x5078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03BE
        gbc.setState(0xce5, 0x7342, 0x500, 0xee2f, 0xb9ba, 0x39ae, 0x1, 0x1);
        gbc.writeMem(0xce5, { 0x19 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7342, gbc.sp());
        EXPECT(0xce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 03BF
        gbc.setState(0x628, 0x2699, 0x7b0, 0xb536, 0x8ae5, 0xe1e8, 0x1, 0x0);
        gbc.writeMem(0x628, { 0x19 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2699, gbc.sp());
        EXPECT(0x629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03C0
        gbc.setState(0x9ea9, 0x63a4, 0x3ad0, 0xc5a0, 0xf989, 0xc7de, 0x0, 0x1);
        gbc.writeMem(0x9ea9, { 0x19 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x63a4, gbc.sp());
        EXPECT(0x9eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9ea9));
        // 19 03C1
        gbc.setState(0xa296, 0x97c, 0xc5a0, 0xb3e6, 0x3996, 0x8c45, 0x0, 0x1);
        gbc.writeMem(0xa296, { 0x19 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x97c, gbc.sp());
        EXPECT(0xa297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa296));
        // 19 03C3
        gbc.setState(0xd5d4, 0xeeac, 0x4dc0, 0xd21b, 0x42ed, 0xd50c, 0x0, 0x0);
        gbc.writeMem(0xd5d4, { 0x19 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xeeac, gbc.sp());
        EXPECT(0xd5d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd5d4));
        // 19 03C4
        gbc.setState(0xdf87, 0x9638, 0xda80, 0x907d, 0xd0bd, 0x189, 0x0, 0x0);
        gbc.writeMem(0xdf87, { 0x19 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9638, gbc.sp());
        EXPECT(0xdf88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xdf87));
        // 19 03C5
        gbc.setState(0xc0d1, 0x6b08, 0x1680, 0x19a7, 0xe14c, 0x58ee, 0x0, 0x0);
        gbc.writeMem(0xc0d1, { 0x19 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6b08, gbc.sp());
        EXPECT(0xc0d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc0d1));
        // 19 03C6
        gbc.setState(0xa89c, 0x4a39, 0x84c0, 0xe676, 0x9221, 0xa39c, 0x1, 0x1);
        gbc.writeMem(0xa89c, { 0x19 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4a39, gbc.sp());
        EXPECT(0xa89d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa89c));
        // 19 03C7
        gbc.setState(0x672f, 0xb625, 0xbae0, 0x814c, 0xe4f7, 0x50da, 0x1, 0x1);
        gbc.writeMem(0x672f, { 0x19 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb625, gbc.sp());
        EXPECT(0x6730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03C8
        gbc.setState(0x62f7, 0x9ec2, 0x2390, 0x3995, 0x75aa, 0x7b72, 0x0, 0x1);
        gbc.writeMem(0x62f7, { 0x19 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9ec2, gbc.sp());
        EXPECT(0x62f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 03CA
        gbc.setState(0x9319, 0xdac, 0x1720, 0x530b, 0xafdc, 0xb351, 0x1, 0x0);
        gbc.writeMem(0x9319, { 0x19 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xdac, gbc.sp());
        EXPECT(0x931a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9319));
        // 19 03CB
        gbc.setState(0x45ce, 0xee89, 0xfec0, 0xd09f, 0xcbcc, 0xd44e, 0x1, 0x0);
        gbc.writeMem(0x45ce, { 0x19 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xee89, gbc.sp());
        EXPECT(0x45cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03CC
        gbc.setState(0x9aa0, 0x8065, 0x5c60, 0x6f0f, 0xc762, 0x6ed3, 0x1, 0x0);
        gbc.writeMem(0x9aa0, { 0x19 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8065, gbc.sp());
        EXPECT(0x9aa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9aa0));
        // 19 03CD
        gbc.setState(0x72ef, 0x5347, 0x6ea0, 0xc59f, 0x59d6, 0x2c41, 0x0, 0x1);
        gbc.writeMem(0x72ef, { 0x19 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5347, gbc.sp());
        EXPECT(0x72f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 03CE
        gbc.setState(0x5c8e, 0xb7d6, 0x7c60, 0xf26b, 0x8b02, 0x12f6, 0x0, 0x1);
        gbc.writeMem(0x5c8e, { 0x19 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb7d6, gbc.sp());
        EXPECT(0x5c8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 03CF
        gbc.setState(0xef9e, 0xacd4, 0x7f10, 0xee92, 0xcb1b, 0x8016, 0x1, 0x1);
        gbc.writeMem(0xef9e, { 0x19 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xacd4, gbc.sp());
        EXPECT(0xef9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xef9e));
        // 19 03D0
        gbc.setState(0xc2e7, 0xc6a3, 0xe4a0, 0x1ffc, 0xde84, 0xb5c7, 0x0, 0x0);
        gbc.writeMem(0xc2e7, { 0x19 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc6a3, gbc.sp());
        EXPECT(0xc2e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc2e7));
        // 19 03D1
        gbc.setState(0x406c, 0xf4a4, 0x70f0, 0x8dd1, 0x816, 0x9b86, 0x0, 0x0);
        gbc.writeMem(0x406c, { 0x19 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf4a4, gbc.sp());
        EXPECT(0x406d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 03D2
        gbc.setState(0x950, 0x252d, 0x6890, 0x170f, 0x88f3, 0x9183, 0x1, 0x1);
        gbc.writeMem(0x950, { 0x19 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x252d, gbc.sp());
        EXPECT(0x951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03D3
        gbc.setState(0xd14a, 0x7723, 0xead0, 0x6519, 0x6928, 0xde37, 0x0, 0x0);
        gbc.writeMem(0xd14a, { 0x19 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7723, gbc.sp());
        EXPECT(0xd14b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd14a));
        // 19 03D4
        gbc.setState(0x3865, 0xcf1f, 0xb910, 0xdcdf, 0x9d6f, 0x8d3a, 0x0, 0x0);
        gbc.writeMem(0x3865, { 0x19 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xcf1f, gbc.sp());
        EXPECT(0x3866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03D5
        gbc.setState(0x9f6c, 0x3e65, 0x1af0, 0x3466, 0x95cd, 0x4170, 0x1, 0x0);
        gbc.writeMem(0x9f6c, { 0x19 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3e65, gbc.sp());
        EXPECT(0x9f6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9f6c));
        // 19 03D6
        gbc.setState(0xafe9, 0x616e, 0x27d0, 0xc8e7, 0xbf17, 0xde93, 0x1, 0x1);
        gbc.writeMem(0xafe9, { 0x19 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x616e, gbc.sp());
        EXPECT(0xafea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xafe9));
        // 19 03D7
        gbc.setState(0xf99, 0x9a90, 0xbb40, 0xafbc, 0xaa7f, 0x3e85, 0x1, 0x0);
        gbc.writeMem(0xf99, { 0x19 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9a90, gbc.sp());
        EXPECT(0xf9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 03D8
        gbc.setState(0x36cb, 0x8ddf, 0x29f0, 0xfc64, 0x721a, 0xf199, 0x1, 0x0);
        gbc.writeMem(0x36cb, { 0x19 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8ddf, gbc.sp());
        EXPECT(0x36cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03D9
        gbc.setState(0xd4da, 0xfadc, 0xe430, 0xc0b, 0x301b, 0x3eac, 0x1, 0x1);
        gbc.writeMem(0xd4da, { 0x19 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfadc, gbc.sp());
        EXPECT(0xd4db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd4da));
        // 19 03DA
        gbc.setState(0x39ea, 0xa706, 0x3ee0, 0xf170, 0xe79c, 0xb850, 0x0, 0x0);
        gbc.writeMem(0x39ea, { 0x19 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa706, gbc.sp());
        EXPECT(0x39eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03DC
        gbc.setState(0x6450, 0x8867, 0x7280, 0xec46, 0xc344, 0xfd98, 0x0, 0x1);
        gbc.writeMem(0x6450, { 0x19 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8867, gbc.sp());
        EXPECT(0x6451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03DD
        gbc.setState(0x5bda, 0xbb4c, 0x7f40, 0x35cb, 0x8468, 0xa42c, 0x1, 0x0);
        gbc.writeMem(0x5bda, { 0x19 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbb4c, gbc.sp());
        EXPECT(0x5bdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03DE
        gbc.setState(0xedb4, 0xfa5a, 0x7c50, 0x3734, 0xb703, 0x82e6, 0x0, 0x1);
        gbc.writeMem(0xedb4, { 0x19 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xfa5a, gbc.sp());
        EXPECT(0xedb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xedb4));
        // 19 03DF
        gbc.setState(0xdbb8, 0x9033, 0x4750, 0xb623, 0x931e, 0xcfc8, 0x0, 0x1);
        gbc.writeMem(0xdbb8, { 0x19 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9033, gbc.sp());
        EXPECT(0xdbb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xdbb8));
        // 19 03E0
        gbc.setState(0x1652, 0x1aab, 0xb0, 0x8564, 0xc5f9, 0xe152, 0x1, 0x1);
        gbc.writeMem(0x1652, { 0x19 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1aab, gbc.sp());
        EXPECT(0x1653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03E1
        gbc.setState(0x58a7, 0xd89a, 0xc760, 0xadf4, 0xfe9b, 0x2a1c, 0x0, 0x1);
        gbc.writeMem(0x58a7, { 0x19 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd89a, gbc.sp());
        EXPECT(0x58a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03E2
        gbc.setState(0xd67e, 0xc62a, 0xbc60, 0x9c87, 0xa50, 0x4053, 0x0, 0x0);
        gbc.writeMem(0xd67e, { 0x19 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc62a, gbc.sp());
        EXPECT(0xd67f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd67e));
        // 19 03E3
        gbc.setState(0x7617, 0xd1a6, 0x9a70, 0x280b, 0xf92a, 0x24e7, 0x1, 0x0);
        gbc.writeMem(0x7617, { 0x19 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd1a6, gbc.sp());
        EXPECT(0x7618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 19 03E4
        gbc.setState(0x9149, 0xd371, 0x2340, 0xe548, 0xd1e7, 0x53f2, 0x1, 0x1);
        gbc.writeMem(0x9149, { 0x19 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd371, gbc.sp());
        EXPECT(0x914a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9149));
        // 19 03E5
        gbc.setState(0xcfbe, 0xd9f8, 0x5020, 0xfd3d, 0x38cb, 0x3f25, 0x1, 0x1);
        gbc.writeMem(0xcfbe, { 0x19 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd9f8, gbc.sp());
        EXPECT(0xcfbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xcfbe));
        // 19 03E6
        gbc.setState(0x6204, 0xafa9, 0x94e0, 0x91a5, 0xcdcb, 0x1444, 0x0, 0x1);
        gbc.writeMem(0x6204, { 0x19 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xafa9, gbc.sp());
        EXPECT(0x6205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 19 03E7
        gbc.setState(0x59f6, 0xcd00, 0x45c0, 0x751f, 0x4035, 0xa3c9, 0x1, 0x1);
        gbc.writeMem(0x59f6, { 0x19 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xcd00, gbc.sp());
        EXPECT(0x59f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
