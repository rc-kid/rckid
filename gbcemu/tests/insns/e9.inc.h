    TEST(gbcemu, opcode_e9) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // E9 0000
        gbc.setState(0xe49e, 0xe08a, 0xe60, 0xd38c, 0xa139, 0xbc84, 0x0, 0x0);
        gbc.writeMem(0xe49e, { 0xe9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe08a, gbc.sp());
        EXPECT(0xbc84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe49e));
        // E9 0001
        gbc.setState(0x8f3a, 0x161b, 0xf0c0, 0x970b, 0x8539, 0x8f7c, 0x0, 0x1);
        gbc.writeMem(0x8f3a, { 0xe9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x161b, gbc.sp());
        EXPECT(0x8f7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8f3a));
        // E9 0002
        gbc.setState(0x9aa, 0xdbae, 0xef50, 0x7a8b, 0x1f79, 0x684f, 0x1, 0x1);
        gbc.writeMem(0x9aa, { 0xe9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdbae, gbc.sp());
        EXPECT(0x684f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0003
        gbc.setState(0x2f2, 0x988b, 0xad10, 0x14aa, 0xd29d, 0x7be2, 0x0, 0x1);
        gbc.writeMem(0x2f2, { 0xe9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x988b, gbc.sp());
        EXPECT(0x7be2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0004
        gbc.setState(0xdb81, 0x52f7, 0x8a20, 0x1f23, 0x1bdf, 0xd6f5, 0x1, 0x1);
        gbc.writeMem(0xdb81, { 0xe9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x52f7, gbc.sp());
        EXPECT(0xd6f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xdb81));
        // E9 0005
        gbc.setState(0xa00, 0xb747, 0x7970, 0x29d1, 0x2ac8, 0xe2f5, 0x1, 0x1);
        gbc.writeMem(0xa00, { 0xe9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb747, gbc.sp());
        EXPECT(0xe2f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0007
        gbc.setState(0xa3a2, 0x34f1, 0xc090, 0x282a, 0x629a, 0x8dcc, 0x1, 0x1);
        gbc.writeMem(0xa3a2, { 0xe9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x34f1, gbc.sp());
        EXPECT(0x8dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa3a2));
        // E9 0008
        gbc.setState(0x6df6, 0xe9d4, 0xfd70, 0x9e37, 0xa084, 0xf699, 0x0, 0x1);
        gbc.writeMem(0x6df6, { 0xe9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe9d4, gbc.sp());
        EXPECT(0xf699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0009
        gbc.setState(0xdb9d, 0xe61f, 0x26c0, 0x549a, 0x9485, 0xf634, 0x0, 0x1);
        gbc.writeMem(0xdb9d, { 0xe9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe61f, gbc.sp());
        EXPECT(0xf634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xdb9d));
        // E9 000A
        gbc.setState(0xb592, 0xe7, 0xa80, 0x38a0, 0x366d, 0x9712, 0x1, 0x0);
        gbc.writeMem(0xb592, { 0xe9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe7, gbc.sp());
        EXPECT(0x9712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb592));
        // E9 000B
        gbc.setState(0xa0ed, 0x1007, 0xa310, 0x8d4d, 0x1f24, 0x7927, 0x0, 0x0);
        gbc.writeMem(0xa0ed, { 0xe9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1007, gbc.sp());
        EXPECT(0x7927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa0ed));
        // E9 000C
        gbc.setState(0xb799, 0x2ee3, 0x3e90, 0xe73b, 0xfb36, 0xac92, 0x1, 0x1);
        gbc.writeMem(0xb799, { 0xe9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2ee3, gbc.sp());
        EXPECT(0xac92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb799));
        // E9 000D
        gbc.setState(0x2e0f, 0x3fab, 0x7b90, 0xe6d4, 0x7e4a, 0xd586, 0x0, 0x0);
        gbc.writeMem(0x2e0f, { 0xe9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3fab, gbc.sp());
        EXPECT(0xd586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 000E
        gbc.setState(0x3601, 0x611a, 0xbbc0, 0xc24e, 0x4756, 0x8768, 0x1, 0x0);
        gbc.writeMem(0x3601, { 0xe9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x611a, gbc.sp());
        EXPECT(0x8768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 000F
        gbc.setState(0x6ee9, 0xff6d, 0x1c50, 0x8698, 0x680c, 0x5798, 0x1, 0x1);
        gbc.writeMem(0x6ee9, { 0xe9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xff6d, gbc.sp());
        EXPECT(0x5798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0010
        gbc.setState(0xe6, 0x7773, 0xa610, 0x8cbb, 0x9335, 0xad02, 0x0, 0x1);
        gbc.writeMem(0xe6, { 0xe9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7773, gbc.sp());
        EXPECT(0xad02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0011
        gbc.setState(0x45c6, 0x4585, 0x1900, 0x3169, 0x288a, 0xdd46, 0x0, 0x1);
        gbc.writeMem(0x45c6, { 0xe9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4585, gbc.sp());
        EXPECT(0xdd46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0012
        gbc.setState(0x7f06, 0xc67d, 0xe060, 0x1ea3, 0x8baf, 0xa3e4, 0x0, 0x1);
        gbc.writeMem(0x7f06, { 0xe9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc67d, gbc.sp());
        EXPECT(0xa3e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0013
        gbc.setState(0x856e, 0xea01, 0xfa40, 0x493c, 0x4070, 0xd52, 0x1, 0x1);
        gbc.writeMem(0x856e, { 0xe9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xea01, gbc.sp());
        EXPECT(0xd52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x856e));
        // E9 0014
        gbc.setState(0x5c24, 0x8e7, 0x2ee0, 0x3d6f, 0x3cd7, 0x670a, 0x0, 0x1);
        gbc.writeMem(0x5c24, { 0xe9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8e7, gbc.sp());
        EXPECT(0x670a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0015
        gbc.setState(0x5c02, 0x1ce5, 0x4ae0, 0xec95, 0x60ed, 0x2886, 0x1, 0x1);
        gbc.writeMem(0x5c02, { 0xe9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1ce5, gbc.sp());
        EXPECT(0x2886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0016
        gbc.setState(0xc659, 0x94b6, 0xbd30, 0x631b, 0xd989, 0xfdb9, 0x1, 0x1);
        gbc.writeMem(0xc659, { 0xe9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x94b6, gbc.sp());
        EXPECT(0xfdb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc659));
        // E9 0017
        gbc.setState(0x19a6, 0x3a6f, 0x66c0, 0x9d07, 0xb2a7, 0x34ec, 0x1, 0x0);
        gbc.writeMem(0x19a6, { 0xe9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3a6f, gbc.sp());
        EXPECT(0x34ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0018
        gbc.setState(0x11fe, 0x5bb, 0x34e0, 0xe96, 0x751, 0x706c, 0x0, 0x0);
        gbc.writeMem(0x11fe, { 0xe9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5bb, gbc.sp());
        EXPECT(0x706c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0019
        gbc.setState(0xcdbd, 0x3e4e, 0xaf90, 0x2b4, 0x1b16, 0xdf7d, 0x1, 0x0);
        gbc.writeMem(0xcdbd, { 0xe9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3e4e, gbc.sp());
        EXPECT(0xdf7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xcdbd));
        // E9 001A
        gbc.setState(0xbaba, 0x16, 0x48b0, 0x99db, 0xeec4, 0x9c7b, 0x1, 0x0);
        gbc.writeMem(0xbaba, { 0xe9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x16, gbc.sp());
        EXPECT(0x9c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xbaba));
        // E9 001B
        gbc.setState(0xc385, 0xf8f8, 0x7fa0, 0x8c08, 0x3853, 0x623b, 0x0, 0x1);
        gbc.writeMem(0xc385, { 0xe9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf8f8, gbc.sp());
        EXPECT(0x623b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc385));
        // E9 001C
        gbc.setState(0x1c7a, 0x5bb0, 0x27f0, 0xeb78, 0x6ad4, 0xfb9b, 0x1, 0x0);
        gbc.writeMem(0x1c7a, { 0xe9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5bb0, gbc.sp());
        EXPECT(0xfb9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 001D
        gbc.setState(0x9cac, 0xefec, 0x5310, 0x3b59, 0x7968, 0x8a45, 0x1, 0x1);
        gbc.writeMem(0x9cac, { 0xe9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xefec, gbc.sp());
        EXPECT(0x8a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9cac));
        // E9 001E
        gbc.setState(0x6e7c, 0x303c, 0x38f0, 0x90b2, 0x30d, 0x4297, 0x0, 0x0);
        gbc.writeMem(0x6e7c, { 0xe9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x303c, gbc.sp());
        EXPECT(0x4297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 001F
        gbc.setState(0xd2bb, 0xd994, 0xcf90, 0x3dd9, 0xae0e, 0x6041, 0x0, 0x0);
        gbc.writeMem(0xd2bb, { 0xe9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd994, gbc.sp());
        EXPECT(0x6041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd2bb));
        // E9 0020
        gbc.setState(0xd5f2, 0xb62f, 0xf040, 0xbb99, 0xeb61, 0x94e4, 0x0, 0x1);
        gbc.writeMem(0xd5f2, { 0xe9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb62f, gbc.sp());
        EXPECT(0x94e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd5f2));
        // E9 0021
        gbc.setState(0xebd8, 0xf908, 0xcd70, 0xbe5a, 0x1971, 0x635f, 0x0, 0x1);
        gbc.writeMem(0xebd8, { 0xe9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf908, gbc.sp());
        EXPECT(0x635f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xebd8));
        // E9 0022
        gbc.setState(0x683, 0x5a1c, 0x8ec0, 0x3dfe, 0x66bf, 0x8743, 0x0, 0x1);
        gbc.writeMem(0x683, { 0xe9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5a1c, gbc.sp());
        EXPECT(0x8743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0024
        gbc.setState(0x8f0a, 0x733c, 0xfc80, 0xf2e1, 0xe860, 0x2c52, 0x1, 0x0);
        gbc.writeMem(0x8f0a, { 0xe9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x733c, gbc.sp());
        EXPECT(0x2c52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8f0a));
        // E9 0025
        gbc.setState(0x6e44, 0xd720, 0x72c0, 0xfe2d, 0x2796, 0x45d, 0x0, 0x0);
        gbc.writeMem(0x6e44, { 0xe9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd720, gbc.sp());
        EXPECT(0x45d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0026
        gbc.setState(0x4d3d, 0xce3e, 0x31f0, 0x586f, 0x6574, 0xd509, 0x0, 0x1);
        gbc.writeMem(0x4d3d, { 0xe9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xce3e, gbc.sp());
        EXPECT(0xd509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0027
        gbc.setState(0x2ccb, 0x63de, 0x2a60, 0x304e, 0x79c8, 0x9202, 0x1, 0x0);
        gbc.writeMem(0x2ccb, { 0xe9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x63de, gbc.sp());
        EXPECT(0x9202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0028
        gbc.setState(0x4149, 0x3d74, 0x6e50, 0x917f, 0xfcec, 0xc714, 0x0, 0x0);
        gbc.writeMem(0x4149, { 0xe9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3d74, gbc.sp());
        EXPECT(0xc714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0029
        gbc.setState(0x1a6e, 0x2dd8, 0xdd30, 0xeb4e, 0x6698, 0xdfc3, 0x1, 0x1);
        gbc.writeMem(0x1a6e, { 0xe9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2dd8, gbc.sp());
        EXPECT(0xdfc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 002A
        gbc.setState(0x4b44, 0x2bd6, 0xe680, 0xb6a0, 0x35a2, 0x54b0, 0x1, 0x0);
        gbc.writeMem(0x4b44, { 0xe9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2bd6, gbc.sp());
        EXPECT(0x54b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 002B
        gbc.setState(0x25ef, 0xd6e, 0x12b0, 0x5c54, 0xa4a, 0x6aed, 0x1, 0x1);
        gbc.writeMem(0x25ef, { 0xe9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd6e, gbc.sp());
        EXPECT(0x6aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 002C
        gbc.setState(0xd399, 0x84e9, 0xcda0, 0xa4ac, 0x63c, 0x85b1, 0x1, 0x0);
        gbc.writeMem(0xd399, { 0xe9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x84e9, gbc.sp());
        EXPECT(0x85b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd399));
        // E9 002D
        gbc.setState(0x2faf, 0xf79e, 0x5930, 0x199b, 0xb5b5, 0x774e, 0x1, 0x1);
        gbc.writeMem(0x2faf, { 0xe9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf79e, gbc.sp());
        EXPECT(0x774e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 002E
        gbc.setState(0xca76, 0x51f8, 0xdc0, 0xc65d, 0xd98f, 0xf83b, 0x0, 0x0);
        gbc.writeMem(0xca76, { 0xe9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x51f8, gbc.sp());
        EXPECT(0xf83b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xca76));
        // E9 002F
        gbc.setState(0x56f7, 0xaa03, 0xe4c0, 0x28a2, 0x7351, 0x2817, 0x1, 0x0);
        gbc.writeMem(0x56f7, { 0xe9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xaa03, gbc.sp());
        EXPECT(0x2817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0030
        gbc.setState(0xb6c3, 0x131b, 0xc120, 0x1730, 0x9c9c, 0x7df8, 0x0, 0x0);
        gbc.writeMem(0xb6c3, { 0xe9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x131b, gbc.sp());
        EXPECT(0x7df8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb6c3));
        // E9 0031
        gbc.setState(0x3908, 0x7202, 0x7c20, 0x8e80, 0x5fee, 0xa022, 0x0, 0x0);
        gbc.writeMem(0x3908, { 0xe9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7202, gbc.sp());
        EXPECT(0xa022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0032
        gbc.setState(0x8f27, 0xfde4, 0x5540, 0xfdd, 0x7682, 0x7289, 0x0, 0x1);
        gbc.writeMem(0x8f27, { 0xe9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xfde4, gbc.sp());
        EXPECT(0x7289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8f27));
        // E9 0033
        gbc.setState(0xabbb, 0xca2, 0x8090, 0xda25, 0x9188, 0x2534, 0x1, 0x0);
        gbc.writeMem(0xabbb, { 0xe9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xca2, gbc.sp());
        EXPECT(0x2534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xabbb));
        // E9 0034
        gbc.setState(0xd727, 0x4cb3, 0x6a70, 0xa22, 0x5d7f, 0xad28, 0x1, 0x1);
        gbc.writeMem(0xd727, { 0xe9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4cb3, gbc.sp());
        EXPECT(0xad28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd727));
        // E9 0035
        gbc.setState(0xd6c, 0x8354, 0x24b0, 0x635, 0xe2dd, 0xf243, 0x0, 0x1);
        gbc.writeMem(0xd6c, { 0xe9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8354, gbc.sp());
        EXPECT(0xf243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0036
        gbc.setState(0x901a, 0xd337, 0xe840, 0xe52f, 0xa6c7, 0xca99, 0x1, 0x0);
        gbc.writeMem(0x901a, { 0xe9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd337, gbc.sp());
        EXPECT(0xca99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x901a));
        // E9 0037
        gbc.setState(0xa306, 0x1090, 0xf460, 0x2654, 0x2994, 0x1384, 0x1, 0x0);
        gbc.writeMem(0xa306, { 0xe9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1090, gbc.sp());
        EXPECT(0x1384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa306));
        // E9 0038
        gbc.setState(0xcfbc, 0x6f4c, 0xd2d0, 0xd22c, 0x1ee4, 0x57dd, 0x0, 0x0);
        gbc.writeMem(0xcfbc, { 0xe9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6f4c, gbc.sp());
        EXPECT(0x57dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xcfbc));
        // E9 0039
        gbc.setState(0xe479, 0x1594, 0x67c0, 0x9502, 0xa57b, 0xa272, 0x0, 0x1);
        gbc.writeMem(0xe479, { 0xe9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1594, gbc.sp());
        EXPECT(0xa272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe479));
        // E9 003A
        gbc.setState(0xe6e6, 0x58e2, 0xa630, 0xe51b, 0xbc4c, 0xf536, 0x1, 0x0);
        gbc.writeMem(0xe6e6, { 0xe9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x58e2, gbc.sp());
        EXPECT(0xf536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe6e6));
        // E9 003B
        gbc.setState(0xc332, 0x2b61, 0x6a0, 0x2254, 0x229e, 0xe1b1, 0x0, 0x0);
        gbc.writeMem(0xc332, { 0xe9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2b61, gbc.sp());
        EXPECT(0xe1b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc332));
        // E9 003C
        gbc.setState(0xa7df, 0x926, 0x6110, 0x7046, 0xd006, 0x9af, 0x0, 0x0);
        gbc.writeMem(0xa7df, { 0xe9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x926, gbc.sp());
        EXPECT(0x9af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa7df));
        // E9 003D
        gbc.setState(0x9ffb, 0x74dd, 0xbec0, 0x1c06, 0x2d84, 0xd1bf, 0x0, 0x0);
        gbc.writeMem(0x9ffb, { 0xe9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x74dd, gbc.sp());
        EXPECT(0xd1bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9ffb));
        // E9 003E
        gbc.setState(0x78d, 0x7be7, 0xc7d0, 0xd717, 0x7c02, 0x935b, 0x1, 0x0);
        gbc.writeMem(0x78d, { 0xe9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7be7, gbc.sp());
        EXPECT(0x935b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 003F
        gbc.setState(0x27fd, 0xc0f2, 0xeaf0, 0x55f5, 0xef08, 0x67eb, 0x0, 0x0);
        gbc.writeMem(0x27fd, { 0xe9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc0f2, gbc.sp());
        EXPECT(0x67eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0040
        gbc.setState(0xb5ac, 0x47c0, 0x5b90, 0x2da6, 0x5da4, 0xdadf, 0x1, 0x0);
        gbc.writeMem(0xb5ac, { 0xe9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x47c0, gbc.sp());
        EXPECT(0xdadf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb5ac));
        // E9 0041
        gbc.setState(0xb849, 0xaca7, 0x7af0, 0xad55, 0x70bb, 0x9161, 0x1, 0x1);
        gbc.writeMem(0xb849, { 0xe9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xaca7, gbc.sp());
        EXPECT(0x9161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb849));
        // E9 0043
        gbc.setState(0x964d, 0x5487, 0xcc90, 0xf9a4, 0xa775, 0xdb43, 0x1, 0x0);
        gbc.writeMem(0x964d, { 0xe9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5487, gbc.sp());
        EXPECT(0xdb43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x964d));
        // E9 0044
        gbc.setState(0xb3fb, 0x8afc, 0xe410, 0x4831, 0x9675, 0x7930, 0x0, 0x0);
        gbc.writeMem(0xb3fb, { 0xe9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8afc, gbc.sp());
        EXPECT(0x7930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb3fb));
        // E9 0045
        gbc.setState(0xbeee, 0x1c68, 0xc4a0, 0xddc8, 0x93a4, 0xf13a, 0x1, 0x0);
        gbc.writeMem(0xbeee, { 0xe9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1c68, gbc.sp());
        EXPECT(0xf13a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xbeee));
        // E9 0047
        gbc.setState(0x2a9d, 0xa8e6, 0xed30, 0x15bb, 0x49a, 0x42ba, 0x1, 0x0);
        gbc.writeMem(0x2a9d, { 0xe9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa8e6, gbc.sp());
        EXPECT(0x42ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0048
        gbc.setState(0x35e7, 0x144b, 0xff10, 0xb9f1, 0x1ef5, 0xe1a5, 0x0, 0x0);
        gbc.writeMem(0x35e7, { 0xe9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x144b, gbc.sp());
        EXPECT(0xe1a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0049
        gbc.setState(0x63ab, 0x435c, 0xdb00, 0x2c53, 0x7333, 0x2ae2, 0x0, 0x0);
        gbc.writeMem(0x63ab, { 0xe9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x435c, gbc.sp());
        EXPECT(0x2ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 004A
        gbc.setState(0xadb5, 0x9cde, 0xffe0, 0xbbdb, 0x124b, 0x3c94, 0x0, 0x0);
        gbc.writeMem(0xadb5, { 0xe9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9cde, gbc.sp());
        EXPECT(0x3c94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xadb5));
        // E9 004B
        gbc.setState(0x54d4, 0x30d8, 0xaba0, 0x9455, 0x5e27, 0xaa11, 0x1, 0x0);
        gbc.writeMem(0x54d4, { 0xe9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x30d8, gbc.sp());
        EXPECT(0xaa11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 004C
        gbc.setState(0xa408, 0x92b2, 0x5630, 0x8d4e, 0x3795, 0xfac2, 0x0, 0x0);
        gbc.writeMem(0xa408, { 0xe9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x92b2, gbc.sp());
        EXPECT(0xfac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa408));
        // E9 004D
        gbc.setState(0x763f, 0x8190, 0x7a40, 0x34fa, 0x34a8, 0xa58c, 0x1, 0x1);
        gbc.writeMem(0x763f, { 0xe9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8190, gbc.sp());
        EXPECT(0xa58c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 004E
        gbc.setState(0x2caa, 0x3354, 0x4720, 0xce8, 0xeed4, 0x6d4c, 0x0, 0x0);
        gbc.writeMem(0x2caa, { 0xe9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3354, gbc.sp());
        EXPECT(0x6d4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 004F
        gbc.setState(0x6e5c, 0x6ded, 0x4ff0, 0x997b, 0xaa6c, 0x469f, 0x0, 0x0);
        gbc.writeMem(0x6e5c, { 0xe9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6ded, gbc.sp());
        EXPECT(0x469f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0050
        gbc.setState(0xd7ae, 0xc84c, 0x7460, 0xd1ea, 0xa7fd, 0xd5bc, 0x0, 0x1);
        gbc.writeMem(0xd7ae, { 0xe9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc84c, gbc.sp());
        EXPECT(0xd5bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd7ae));
        // E9 0051
        gbc.setState(0x69b5, 0xece9, 0xc860, 0xc7f4, 0x5ad8, 0xf319, 0x0, 0x0);
        gbc.writeMem(0x69b5, { 0xe9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xece9, gbc.sp());
        EXPECT(0xf319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0052
        gbc.setState(0xa214, 0xbc61, 0x2a50, 0xefe6, 0xc932, 0x8c2e, 0x1, 0x1);
        gbc.writeMem(0xa214, { 0xe9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbc61, gbc.sp());
        EXPECT(0x8c2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa214));
        // E9 0053
        gbc.setState(0x4e2e, 0xbf00, 0xa720, 0x1fa6, 0x3fc4, 0xde90, 0x0, 0x1);
        gbc.writeMem(0x4e2e, { 0xe9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xbf00, gbc.sp());
        EXPECT(0xde90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0054
        gbc.setState(0xce74, 0xf575, 0xbf70, 0x8e2, 0xedd, 0xf04d, 0x0, 0x0);
        gbc.writeMem(0xce74, { 0xe9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf575, gbc.sp());
        EXPECT(0xf04d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xce74));
        // E9 0055
        gbc.setState(0x405e, 0xaa3f, 0xd5f0, 0xde61, 0x74e7, 0x5145, 0x0, 0x1);
        gbc.writeMem(0x405e, { 0xe9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xaa3f, gbc.sp());
        EXPECT(0x5145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0056
        gbc.setState(0x6e18, 0x8a5, 0xc6c0, 0x837, 0x3695, 0xcf19, 0x0, 0x0);
        gbc.writeMem(0x6e18, { 0xe9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8a5, gbc.sp());
        EXPECT(0xcf19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0057
        gbc.setState(0xbf0a, 0x219, 0x87e0, 0xf19d, 0x721e, 0x98c9, 0x1, 0x0);
        gbc.writeMem(0xbf0a, { 0xe9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x219, gbc.sp());
        EXPECT(0x98c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xbf0a));
        // E9 0058
        gbc.setState(0x49dc, 0xbeab, 0x3210, 0x2628, 0xe975, 0x305a, 0x0, 0x1);
        gbc.writeMem(0x49dc, { 0xe9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbeab, gbc.sp());
        EXPECT(0x305a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0059
        gbc.setState(0x9347, 0xd82, 0xa4e0, 0xe8b7, 0x6d40, 0xe39c, 0x1, 0x1);
        gbc.writeMem(0x9347, { 0xe9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd82, gbc.sp());
        EXPECT(0xe39c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9347));
        // E9 005A
        gbc.setState(0xa9c5, 0xf480, 0x2a50, 0x7b25, 0xf30d, 0x64d5, 0x1, 0x0);
        gbc.writeMem(0xa9c5, { 0xe9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf480, gbc.sp());
        EXPECT(0x64d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa9c5));
        // E9 005B
        gbc.setState(0xb28e, 0xfc94, 0xe00, 0x50a, 0xc13a, 0x54dd, 0x0, 0x0);
        gbc.writeMem(0xb28e, { 0xe9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfc94, gbc.sp());
        EXPECT(0x54dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb28e));
        // E9 005C
        gbc.setState(0x8e78, 0xd7bb, 0x7990, 0x7c34, 0x361f, 0x229b, 0x1, 0x0);
        gbc.writeMem(0x8e78, { 0xe9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd7bb, gbc.sp());
        EXPECT(0x229b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8e78));
        // E9 005D
        gbc.setState(0xd39c, 0xe712, 0x5260, 0xdaaf, 0x8b56, 0x860d, 0x1, 0x0);
        gbc.writeMem(0xd39c, { 0xe9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe712, gbc.sp());
        EXPECT(0x860d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd39c));
        // E9 005E
        gbc.setState(0x684b, 0xedfa, 0x6e30, 0xeb75, 0x8c95, 0xd30e, 0x0, 0x1);
        gbc.writeMem(0x684b, { 0xe9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xedfa, gbc.sp());
        EXPECT(0xd30e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 005F
        gbc.setState(0xbb9c, 0x7f0a, 0x9660, 0x9a49, 0xd271, 0xa991, 0x0, 0x1);
        gbc.writeMem(0xbb9c, { 0xe9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7f0a, gbc.sp());
        EXPECT(0xa991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xbb9c));
        // E9 0060
        gbc.setState(0x32dc, 0x8bb7, 0x7950, 0xbd20, 0x3447, 0x5dfa, 0x1, 0x1);
        gbc.writeMem(0x32dc, { 0xe9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8bb7, gbc.sp());
        EXPECT(0x5dfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0062
        gbc.setState(0xc21a, 0x4374, 0x56d0, 0x3a93, 0x3778, 0xf58d, 0x1, 0x1);
        gbc.writeMem(0xc21a, { 0xe9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4374, gbc.sp());
        EXPECT(0xf58d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc21a));
        // E9 0063
        gbc.setState(0xda28, 0x5c2d, 0xd420, 0xf626, 0x2ae2, 0xee5f, 0x1, 0x0);
        gbc.writeMem(0xda28, { 0xe9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5c2d, gbc.sp());
        EXPECT(0xee5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xda28));
        // E9 0064
        gbc.setState(0x4e32, 0x90bc, 0xdbb0, 0x6aa7, 0x39c5, 0xc9f3, 0x1, 0x0);
        gbc.writeMem(0x4e32, { 0xe9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x90bc, gbc.sp());
        EXPECT(0xc9f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0065
        gbc.setState(0x9ecb, 0xffa9, 0x65f0, 0xb3bf, 0xa03b, 0x9cb9, 0x1, 0x1);
        gbc.writeMem(0x9ecb, { 0xe9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xffa9, gbc.sp());
        EXPECT(0x9cb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9ecb));
        // E9 0066
        gbc.setState(0x692e, 0xd73e, 0x2bb0, 0x44ac, 0xfcb4, 0xbc1d, 0x1, 0x0);
        gbc.writeMem(0x692e, { 0xe9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd73e, gbc.sp());
        EXPECT(0xbc1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0067
        gbc.setState(0x51a1, 0x6b3d, 0x9420, 0xc358, 0x916c, 0x437b, 0x0, 0x0);
        gbc.writeMem(0x51a1, { 0xe9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6b3d, gbc.sp());
        EXPECT(0x437b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0068
        gbc.setState(0xb855, 0x9610, 0x94e0, 0xf17a, 0x817a, 0x2a16, 0x0, 0x0);
        gbc.writeMem(0xb855, { 0xe9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9610, gbc.sp());
        EXPECT(0x2a16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb855));
        // E9 0069
        gbc.setState(0xb13b, 0x6866, 0xe930, 0x1a4b, 0x8799, 0x3a3, 0x0, 0x0);
        gbc.writeMem(0xb13b, { 0xe9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6866, gbc.sp());
        EXPECT(0x3a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb13b));
        // E9 006A
        gbc.setState(0xd970, 0xff68, 0xa450, 0x9548, 0xac5c, 0xb83f, 0x0, 0x0);
        gbc.writeMem(0xd970, { 0xe9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xff68, gbc.sp());
        EXPECT(0xb83f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd970));
        // E9 006B
        gbc.setState(0x57f7, 0x2396, 0xdc30, 0xbb8, 0x51a1, 0x1ec8, 0x1, 0x1);
        gbc.writeMem(0x57f7, { 0xe9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2396, gbc.sp());
        EXPECT(0x1ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 006D
        gbc.setState(0x45cd, 0x53d8, 0x6d80, 0xce11, 0x26ff, 0x3055, 0x0, 0x1);
        gbc.writeMem(0x45cd, { 0xe9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x53d8, gbc.sp());
        EXPECT(0x3055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 006F
        gbc.setState(0x6a78, 0xfb46, 0xc2f0, 0x39ef, 0xdf38, 0x7788, 0x0, 0x1);
        gbc.writeMem(0x6a78, { 0xe9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xfb46, gbc.sp());
        EXPECT(0x7788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0070
        gbc.setState(0xd5eb, 0x558, 0x6460, 0xa7e4, 0x9e06, 0x6d42, 0x0, 0x0);
        gbc.writeMem(0xd5eb, { 0xe9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x558, gbc.sp());
        EXPECT(0x6d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd5eb));
        // E9 0071
        gbc.setState(0xc636, 0x712, 0x1060, 0x556b, 0xd56a, 0x538, 0x0, 0x0);
        gbc.writeMem(0xc636, { 0xe9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x712, gbc.sp());
        EXPECT(0x538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc636));
        // E9 0072
        gbc.setState(0x6626, 0x38c6, 0x8700, 0xb125, 0xe1c8, 0x2ccc, 0x1, 0x0);
        gbc.writeMem(0x6626, { 0xe9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x38c6, gbc.sp());
        EXPECT(0x2ccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0073
        gbc.setState(0x4dbe, 0xb258, 0x62f0, 0x4462, 0x17e1, 0xd9d0, 0x0, 0x0);
        gbc.writeMem(0x4dbe, { 0xe9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb258, gbc.sp());
        EXPECT(0xd9d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0074
        gbc.setState(0xeb54, 0xbece, 0xf4c0, 0x177c, 0xe92f, 0x9962, 0x0, 0x1);
        gbc.writeMem(0xeb54, { 0xe9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbece, gbc.sp());
        EXPECT(0x9962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xeb54));
        // E9 0075
        gbc.setState(0xc535, 0x3c0e, 0x7f30, 0xe564, 0xff14, 0x804, 0x1, 0x0);
        gbc.writeMem(0xc535, { 0xe9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3c0e, gbc.sp());
        EXPECT(0x804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc535));
        // E9 0076
        gbc.setState(0x7a55, 0x1a7e, 0x7930, 0xe6a6, 0xaa65, 0x9b8c, 0x1, 0x0);
        gbc.writeMem(0x7a55, { 0xe9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1a7e, gbc.sp());
        EXPECT(0x9b8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0077
        gbc.setState(0x6d17, 0x9401, 0xdc50, 0xb7a5, 0x19d8, 0xb572, 0x0, 0x1);
        gbc.writeMem(0x6d17, { 0xe9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9401, gbc.sp());
        EXPECT(0xb572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0078
        gbc.setState(0xd94c, 0x9ac2, 0x7440, 0xf010, 0x31f, 0xbe09, 0x1, 0x1);
        gbc.writeMem(0xd94c, { 0xe9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9ac2, gbc.sp());
        EXPECT(0xbe09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd94c));
        // E9 0079
        gbc.setState(0x82dc, 0x4558, 0xa680, 0x6ac7, 0x970b, 0xa04f, 0x1, 0x0);
        gbc.writeMem(0x82dc, { 0xe9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4558, gbc.sp());
        EXPECT(0xa04f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x82dc));
        // E9 007A
        gbc.setState(0x53cb, 0xea1, 0xdd30, 0xa599, 0x86c6, 0x761c, 0x1, 0x1);
        gbc.writeMem(0x53cb, { 0xe9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xea1, gbc.sp());
        EXPECT(0x761c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 007B
        gbc.setState(0xb7b9, 0xa9bd, 0x6060, 0xe7e, 0x5552, 0xf858, 0x1, 0x0);
        gbc.writeMem(0xb7b9, { 0xe9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa9bd, gbc.sp());
        EXPECT(0xf858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb7b9));
        // E9 007C
        gbc.setState(0xd773, 0xd9c0, 0xab60, 0xf563, 0x23f5, 0x6d2f, 0x0, 0x1);
        gbc.writeMem(0xd773, { 0xe9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd9c0, gbc.sp());
        EXPECT(0x6d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd773));
        // E9 007D
        gbc.setState(0x9488, 0x1bb0, 0xa150, 0xeac4, 0x285a, 0xd4a6, 0x0, 0x1);
        gbc.writeMem(0x9488, { 0xe9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1bb0, gbc.sp());
        EXPECT(0xd4a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9488));
        // E9 007E
        gbc.setState(0x34aa, 0xc59f, 0xf050, 0x50c4, 0xea5e, 0xe32f, 0x0, 0x1);
        gbc.writeMem(0x34aa, { 0xe9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc59f, gbc.sp());
        EXPECT(0xe32f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 007F
        gbc.setState(0xa201, 0x2326, 0xe9b0, 0x2e8, 0x31d, 0x9dab, 0x0, 0x0);
        gbc.writeMem(0xa201, { 0xe9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2326, gbc.sp());
        EXPECT(0x9dab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa201));
        // E9 0080
        gbc.setState(0x5900, 0x4b87, 0x3a40, 0x2b96, 0xe35a, 0x7afe, 0x0, 0x0);
        gbc.writeMem(0x5900, { 0xe9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4b87, gbc.sp());
        EXPECT(0x7afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0081
        gbc.setState(0x67c9, 0xbff8, 0xbcc0, 0x1dc9, 0xaa1a, 0x73c4, 0x1, 0x1);
        gbc.writeMem(0x67c9, { 0xe9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbff8, gbc.sp());
        EXPECT(0x73c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0082
        gbc.setState(0x4237, 0x626d, 0xd620, 0xdf2e, 0x14d, 0x378e, 0x1, 0x1);
        gbc.writeMem(0x4237, { 0xe9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x626d, gbc.sp());
        EXPECT(0x378e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0083
        gbc.setState(0x1051, 0xfb1d, 0x3220, 0xb559, 0x87fb, 0x8fa4, 0x1, 0x0);
        gbc.writeMem(0x1051, { 0xe9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xfb1d, gbc.sp());
        EXPECT(0x8fa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0085
        gbc.setState(0x3e85, 0x1b9e, 0x500, 0x5063, 0x1cfa, 0x754f, 0x1, 0x1);
        gbc.writeMem(0x3e85, { 0xe9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1b9e, gbc.sp());
        EXPECT(0x754f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0086
        gbc.setState(0x27e3, 0xfc84, 0x8330, 0x5aa0, 0x57e5, 0x4b4c, 0x0, 0x1);
        gbc.writeMem(0x27e3, { 0xe9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfc84, gbc.sp());
        EXPECT(0x4b4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0087
        gbc.setState(0xe4d, 0x5ffb, 0x26e0, 0x87cb, 0x8e6a, 0xe747, 0x1, 0x0);
        gbc.writeMem(0xe4d, { 0xe9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5ffb, gbc.sp());
        EXPECT(0xe747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0088
        gbc.setState(0x6e59, 0x211f, 0x16b0, 0xb8c2, 0xc797, 0x87bc, 0x1, 0x1);
        gbc.writeMem(0x6e59, { 0xe9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x211f, gbc.sp());
        EXPECT(0x87bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0089
        gbc.setState(0x2ce0, 0x75ec, 0xc350, 0x8e06, 0x7fc2, 0x27e8, 0x1, 0x0);
        gbc.writeMem(0x2ce0, { 0xe9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x75ec, gbc.sp());
        EXPECT(0x27e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 008A
        gbc.setState(0xa347, 0x93c6, 0x8a90, 0xee6f, 0xba77, 0x38b0, 0x1, 0x0);
        gbc.writeMem(0xa347, { 0xe9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x93c6, gbc.sp());
        EXPECT(0x38b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa347));
        // E9 008B
        gbc.setState(0x443d, 0x69bf, 0x95a0, 0xc726, 0xb41f, 0x363d, 0x0, 0x0);
        gbc.writeMem(0x443d, { 0xe9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x69bf, gbc.sp());
        EXPECT(0x363d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 008C
        gbc.setState(0x6a31, 0x79c4, 0x12e0, 0x7e72, 0xe9f1, 0x6939, 0x1, 0x0);
        gbc.writeMem(0x6a31, { 0xe9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x79c4, gbc.sp());
        EXPECT(0x6939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 008D
        gbc.setState(0xeea2, 0xd367, 0x3870, 0x88d0, 0x98e2, 0x6ab4, 0x0, 0x0);
        gbc.writeMem(0xeea2, { 0xe9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd367, gbc.sp());
        EXPECT(0x6ab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xeea2));
        // E9 008E
        gbc.setState(0x64ee, 0xe364, 0x75b0, 0x73dd, 0xf0e5, 0x64a9, 0x0, 0x0);
        gbc.writeMem(0x64ee, { 0xe9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe364, gbc.sp());
        EXPECT(0x64a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 008F
        gbc.setState(0xaac1, 0xe669, 0xaea0, 0xc933, 0xec2e, 0xf452, 0x1, 0x0);
        gbc.writeMem(0xaac1, { 0xe9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe669, gbc.sp());
        EXPECT(0xf452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xaac1));
        // E9 0090
        gbc.setState(0x785, 0xd239, 0x260, 0xf348, 0x9e31, 0x2771, 0x1, 0x1);
        gbc.writeMem(0x785, { 0xe9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd239, gbc.sp());
        EXPECT(0x2771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0091
        gbc.setState(0x7857, 0xc158, 0x3970, 0x9bdf, 0xec48, 0xc122, 0x1, 0x1);
        gbc.writeMem(0x7857, { 0xe9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc158, gbc.sp());
        EXPECT(0xc122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0092
        gbc.setState(0x7cf7, 0x23b5, 0xcfb0, 0xd3f5, 0xed7c, 0xc50e, 0x0, 0x1);
        gbc.writeMem(0x7cf7, { 0xe9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x23b5, gbc.sp());
        EXPECT(0xc50e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0093
        gbc.setState(0x3fdb, 0x34, 0x5b50, 0xf06e, 0xee72, 0xc0ee, 0x0, 0x1);
        gbc.writeMem(0x3fdb, { 0xe9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x34, gbc.sp());
        EXPECT(0xc0ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0094
        gbc.setState(0xe183, 0x283c, 0x7260, 0xa046, 0x4130, 0xbb0b, 0x0, 0x0);
        gbc.writeMem(0xe183, { 0xe9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x283c, gbc.sp());
        EXPECT(0xbb0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe183));
        // E9 0097
        gbc.setState(0x3ec, 0xfa8, 0xc220, 0xb45a, 0x7cfa, 0xa70c, 0x1, 0x0);
        gbc.writeMem(0x3ec, { 0xe9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfa8, gbc.sp());
        EXPECT(0xa70c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0098
        gbc.setState(0xef2a, 0x186b, 0x6e70, 0x4f1b, 0x42d8, 0xb704, 0x0, 0x0);
        gbc.writeMem(0xef2a, { 0xe9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x186b, gbc.sp());
        EXPECT(0xb704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xef2a));
        // E9 0099
        gbc.setState(0xc68c, 0x3820, 0x4eb0, 0x21b7, 0xfd4a, 0xddd1, 0x0, 0x1);
        gbc.writeMem(0xc68c, { 0xe9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3820, gbc.sp());
        EXPECT(0xddd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc68c));
        // E9 009A
        gbc.setState(0xe2bc, 0xc6dd, 0xee0, 0x4cd6, 0x4379, 0x2c1a, 0x0, 0x0);
        gbc.writeMem(0xe2bc, { 0xe9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc6dd, gbc.sp());
        EXPECT(0x2c1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe2bc));
        // E9 009B
        gbc.setState(0x437b, 0x1911, 0x1730, 0xcfbc, 0x524b, 0x9fb8, 0x1, 0x0);
        gbc.writeMem(0x437b, { 0xe9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1911, gbc.sp());
        EXPECT(0x9fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 009C
        gbc.setState(0x5b9f, 0x413b, 0x9e40, 0xf3e2, 0x8a1, 0x4a2a, 0x0, 0x1);
        gbc.writeMem(0x5b9f, { 0xe9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x413b, gbc.sp());
        EXPECT(0x4a2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 009D
        gbc.setState(0x751, 0x9690, 0x8f60, 0xdff5, 0x182, 0x9ec7, 0x0, 0x1);
        gbc.writeMem(0x751, { 0xe9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9690, gbc.sp());
        EXPECT(0x9ec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 009E
        gbc.setState(0x14ef, 0x9439, 0x4150, 0xb12b, 0x8d83, 0x98ed, 0x1, 0x1);
        gbc.writeMem(0x14ef, { 0xe9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9439, gbc.sp());
        EXPECT(0x98ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 009F
        gbc.setState(0xb9f2, 0x31c0, 0x33b0, 0x6b21, 0x8267, 0xda23, 0x0, 0x1);
        gbc.writeMem(0xb9f2, { 0xe9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x31c0, gbc.sp());
        EXPECT(0xda23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb9f2));
        // E9 00A0
        gbc.setState(0xb19b, 0xe2b4, 0x8c10, 0x2762, 0x91bd, 0xf542, 0x0, 0x1);
        gbc.writeMem(0xb19b, { 0xe9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe2b4, gbc.sp());
        EXPECT(0xf542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb19b));
        // E9 00A1
        gbc.setState(0x894a, 0x5592, 0x4b0, 0xe38c, 0x5307, 0xd4e5, 0x1, 0x1);
        gbc.writeMem(0x894a, { 0xe9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5592, gbc.sp());
        EXPECT(0xd4e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x894a));
        // E9 00A2
        gbc.setState(0x852b, 0x9218, 0xf0e0, 0x9b82, 0xc549, 0xdb2b, 0x1, 0x1);
        gbc.writeMem(0x852b, { 0xe9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9218, gbc.sp());
        EXPECT(0xdb2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x852b));
        // E9 00A3
        gbc.setState(0x9541, 0xea25, 0x1e30, 0x6f79, 0xc853, 0x328, 0x1, 0x0);
        gbc.writeMem(0x9541, { 0xe9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xea25, gbc.sp());
        EXPECT(0x328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9541));
        // E9 00A4
        gbc.setState(0x9669, 0xbeed, 0xaf40, 0x23e, 0xc4af, 0x70c5, 0x0, 0x1);
        gbc.writeMem(0x9669, { 0xe9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xbeed, gbc.sp());
        EXPECT(0x70c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9669));
        // E9 00A5
        gbc.setState(0x4662, 0x9dec, 0x3210, 0x57c, 0x27eb, 0x1665, 0x1, 0x0);
        gbc.writeMem(0x4662, { 0xe9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9dec, gbc.sp());
        EXPECT(0x1665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 00A6
        gbc.setState(0x6813, 0x509e, 0x7120, 0x8480, 0x8f02, 0xf2f, 0x0, 0x1);
        gbc.writeMem(0x6813, { 0xe9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x509e, gbc.sp());
        EXPECT(0xf2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 00A7
        gbc.setState(0xc4a3, 0xa94e, 0x9a80, 0x83b4, 0xe4dd, 0x39, 0x1, 0x1);
        gbc.writeMem(0xc4a3, { 0xe9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa94e, gbc.sp());
        EXPECT(0x39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc4a3));
        // E9 00A8
        gbc.setState(0xed7f, 0x8d, 0xa020, 0xf12a, 0x92ba, 0x81a1, 0x0, 0x0);
        gbc.writeMem(0xed7f, { 0xe9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8d, gbc.sp());
        EXPECT(0x81a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xed7f));
        // E9 00A9
        gbc.setState(0x7772, 0x417b, 0xa870, 0x4ee, 0xe175, 0xbc6f, 0x1, 0x1);
        gbc.writeMem(0x7772, { 0xe9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x417b, gbc.sp());
        EXPECT(0xbc6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 00AA
        gbc.setState(0xa768, 0x78fa, 0xcde0, 0xd710, 0x9a9a, 0xd3c0, 0x0, 0x1);
        gbc.writeMem(0xa768, { 0xe9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x78fa, gbc.sp());
        EXPECT(0xd3c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa768));
        // E9 00AB
        gbc.setState(0xc37b, 0xbddb, 0x4110, 0x58a3, 0x46b9, 0x10d8, 0x0, 0x0);
        gbc.writeMem(0xc37b, { 0xe9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbddb, gbc.sp());
        EXPECT(0x10d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc37b));
        // E9 00AC
        gbc.setState(0x1533, 0x3b44, 0xb6b0, 0xc36e, 0x7336, 0x3913, 0x1, 0x0);
        gbc.writeMem(0x1533, { 0xe9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3b44, gbc.sp());
        EXPECT(0x3913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 00AD
        gbc.setState(0xed8f, 0xe780, 0xe1b0, 0x6964, 0x42a6, 0xf8e8, 0x0, 0x1);
        gbc.writeMem(0xed8f, { 0xe9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe780, gbc.sp());
        EXPECT(0xf8e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xed8f));
        // E9 00AE
        gbc.setState(0x455c, 0x628c, 0x5900, 0xd4df, 0xfeb8, 0xc81c, 0x1, 0x1);
        gbc.writeMem(0x455c, { 0xe9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x628c, gbc.sp());
        EXPECT(0xc81c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 00AF
        gbc.setState(0xdf47, 0x78de, 0x9c10, 0xb938, 0x87db, 0x8489, 0x0, 0x1);
        gbc.writeMem(0xdf47, { 0xe9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x78de, gbc.sp());
        EXPECT(0x8489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xdf47));
        // E9 00B0
        gbc.setState(0xcc58, 0x12b5, 0x9580, 0x1808, 0x6ffd, 0x443b, 0x1, 0x1);
        gbc.writeMem(0xcc58, { 0xe9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x12b5, gbc.sp());
        EXPECT(0x443b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xcc58));
        // E9 00B1
        gbc.setState(0xcbc2, 0xb25d, 0x290, 0x1c08, 0x2e1d, 0x56d6, 0x1, 0x0);
        gbc.writeMem(0xcbc2, { 0xe9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb25d, gbc.sp());
        EXPECT(0x56d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xcbc2));
        // E9 00B2
        gbc.setState(0x3d5b, 0xc220, 0xd6d0, 0xda34, 0x89c6, 0xcfe4, 0x1, 0x1);
        gbc.writeMem(0x3d5b, { 0xe9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc220, gbc.sp());
        EXPECT(0xcfe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 00B3
        gbc.setState(0xb379, 0x8e2b, 0xfdd0, 0x5f88, 0x28d6, 0x8c6b, 0x1, 0x1);
        gbc.writeMem(0xb379, { 0xe9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8e2b, gbc.sp());
        EXPECT(0x8c6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb379));
        // E9 00B4
        gbc.setState(0xa630, 0x2557, 0x3ae0, 0x5681, 0xebfc, 0x8b4e, 0x1, 0x0);
        gbc.writeMem(0xa630, { 0xe9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2557, gbc.sp());
        EXPECT(0x8b4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa630));
        // E9 00B5
        gbc.setState(0xfed, 0x7cfd, 0x8810, 0xb87e, 0x2f6c, 0xe703, 0x0, 0x1);
        gbc.writeMem(0xfed, { 0xe9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7cfd, gbc.sp());
        EXPECT(0xe703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 00B6
        gbc.setState(0xcef4, 0x4029, 0x2100, 0xd51d, 0x1a8c, 0x8135, 0x1, 0x1);
        gbc.writeMem(0xcef4, { 0xe9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4029, gbc.sp());
        EXPECT(0x8135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xcef4));
        // E9 00B7
        gbc.setState(0xdd5d, 0x2a37, 0xd3e0, 0x5e16, 0x794b, 0xb457, 0x1, 0x1);
        gbc.writeMem(0xdd5d, { 0xe9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2a37, gbc.sp());
        EXPECT(0xb457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xdd5d));
        // E9 00B8
        gbc.setState(0xd4cc, 0x50cc, 0x8fe0, 0xbfea, 0xa8eb, 0x9adf, 0x1, 0x1);
        gbc.writeMem(0xd4cc, { 0xe9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x50cc, gbc.sp());
        EXPECT(0x9adf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd4cc));
        // E9 00B9
        gbc.setState(0x9dfa, 0x9056, 0xebf0, 0xd7c8, 0xbe28, 0x2428, 0x0, 0x0);
        gbc.writeMem(0x9dfa, { 0xe9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9056, gbc.sp());
        EXPECT(0x2428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9dfa));
        // E9 00BA
        gbc.setState(0xac68, 0x35a1, 0x1410, 0xb76b, 0x9cd0, 0xbe4d, 0x1, 0x0);
        gbc.writeMem(0xac68, { 0xe9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x35a1, gbc.sp());
        EXPECT(0xbe4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xac68));
        // E9 00BB
        gbc.setState(0x39ca, 0xd229, 0x1df0, 0x9288, 0x2c45, 0xadcd, 0x1, 0x1);
        gbc.writeMem(0x39ca, { 0xe9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd229, gbc.sp());
        EXPECT(0xadcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 00BC
        gbc.setState(0x13b4, 0x8bf4, 0x1a20, 0x20d7, 0x5ad9, 0xe624, 0x0, 0x1);
        gbc.writeMem(0x13b4, { 0xe9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8bf4, gbc.sp());
        EXPECT(0xe624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 00BD
        gbc.setState(0x1ce1, 0x3a5b, 0x51e0, 0xbe42, 0xbda, 0x51d2, 0x0, 0x0);
        gbc.writeMem(0x1ce1, { 0xe9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3a5b, gbc.sp());
        EXPECT(0x51d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 00BE
        gbc.setState(0x40c0, 0x8204, 0x6190, 0xf835, 0x1f87, 0x5732, 0x0, 0x0);
        gbc.writeMem(0x40c0, { 0xe9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8204, gbc.sp());
        EXPECT(0x5732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 00BF
        gbc.setState(0x7084, 0xcce1, 0x9e30, 0xed31, 0x7d9, 0x157e, 0x0, 0x0);
        gbc.writeMem(0x7084, { 0xe9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xcce1, gbc.sp());
        EXPECT(0x157e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 00C0
        gbc.setState(0x533, 0x2714, 0xaf0, 0xc205, 0x7c35, 0x675c, 0x0, 0x1);
        gbc.writeMem(0x533, { 0xe9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2714, gbc.sp());
        EXPECT(0x675c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 00C1
        gbc.setState(0x1909, 0x2b68, 0xe380, 0x34ee, 0xede1, 0x96e8, 0x1, 0x1);
        gbc.writeMem(0x1909, { 0xe9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2b68, gbc.sp());
        EXPECT(0x96e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 00C2
        gbc.setState(0xe5bd, 0xda25, 0x2d40, 0x5bd4, 0xe3ce, 0xeb56, 0x1, 0x0);
        gbc.writeMem(0xe5bd, { 0xe9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xda25, gbc.sp());
        EXPECT(0xeb56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe5bd));
        // E9 00C3
        gbc.setState(0xc3e9, 0xc357, 0xa1c0, 0x1a67, 0x83f3, 0xa771, 0x0, 0x1);
        gbc.writeMem(0xc3e9, { 0xe9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc357, gbc.sp());
        EXPECT(0xa771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc3e9));
        // E9 00C4
        gbc.setState(0xcf2f, 0x2d5b, 0x7af0, 0x1576, 0xc1c4, 0xc327, 0x1, 0x0);
        gbc.writeMem(0xcf2f, { 0xe9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2d5b, gbc.sp());
        EXPECT(0xc327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xcf2f));
        // E9 00C5
        gbc.setState(0x183a, 0x56e0, 0x6dc0, 0x6970, 0xd5cc, 0x859, 0x0, 0x1);
        gbc.writeMem(0x183a, { 0xe9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x56e0, gbc.sp());
        EXPECT(0x859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 00C6
        gbc.setState(0x557b, 0x6f35, 0x3800, 0xeb7e, 0xf914, 0xe3e, 0x0, 0x1);
        gbc.writeMem(0x557b, { 0xe9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6f35, gbc.sp());
        EXPECT(0xe3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 00C7
        gbc.setState(0x3ef, 0x5860, 0x9630, 0xc7da, 0x341b, 0x601e, 0x0, 0x1);
        gbc.writeMem(0x3ef, { 0xe9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5860, gbc.sp());
        EXPECT(0x601e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 00C8
        gbc.setState(0xa43, 0x6640, 0x3c80, 0x8b23, 0x79a7, 0xfa5c, 0x1, 0x1);
        gbc.writeMem(0xa43, { 0xe9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6640, gbc.sp());
        EXPECT(0xfa5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 00C9
        gbc.setState(0x717d, 0x6ced, 0x9910, 0xf49f, 0x69, 0x21a1, 0x0, 0x0);
        gbc.writeMem(0x717d, { 0xe9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6ced, gbc.sp());
        EXPECT(0x21a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 00CA
        gbc.setState(0x2088, 0x178a, 0x8360, 0x4bf0, 0x9d98, 0x6bdf, 0x0, 0x0);
        gbc.writeMem(0x2088, { 0xe9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x178a, gbc.sp());
        EXPECT(0x6bdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 00CB
        gbc.setState(0x16dd, 0x649b, 0x4510, 0xc3ce, 0xea4, 0xf189, 0x0, 0x0);
        gbc.writeMem(0x16dd, { 0xe9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x649b, gbc.sp());
        EXPECT(0xf189, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 00CC
        gbc.setState(0x65b2, 0x7f00, 0x76c0, 0xc70e, 0x1dbf, 0x650b, 0x0, 0x1);
        gbc.writeMem(0x65b2, { 0xe9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7f00, gbc.sp());
        EXPECT(0x650b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 00CD
        gbc.setState(0xa9f7, 0x7350, 0xa010, 0x73e4, 0x89b2, 0x6fcb, 0x0, 0x0);
        gbc.writeMem(0xa9f7, { 0xe9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7350, gbc.sp());
        EXPECT(0x6fcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa9f7));
        // E9 00CF
        gbc.setState(0xdfe7, 0xb3d0, 0x1ac0, 0x6147, 0x4433, 0x5b09, 0x1, 0x0);
        gbc.writeMem(0xdfe7, { 0xe9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb3d0, gbc.sp());
        EXPECT(0x5b09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xdfe7));
        // E9 00D1
        gbc.setState(0x877b, 0x6a1c, 0x9b60, 0xa152, 0x6569, 0xcd83, 0x1, 0x1);
        gbc.writeMem(0x877b, { 0xe9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6a1c, gbc.sp());
        EXPECT(0xcd83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x877b));
        // E9 00D2
        gbc.setState(0x61c7, 0x18f6, 0x7990, 0x8fb8, 0xb6a7, 0xbdc4, 0x0, 0x0);
        gbc.writeMem(0x61c7, { 0xe9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x18f6, gbc.sp());
        EXPECT(0xbdc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 00D3
        gbc.setState(0xa1ca, 0xfafc, 0x97e0, 0xe123, 0x6c5a, 0x9923, 0x1, 0x0);
        gbc.writeMem(0xa1ca, { 0xe9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xfafc, gbc.sp());
        EXPECT(0x9923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa1ca));
        // E9 00D4
        gbc.setState(0x3614, 0x583b, 0xf470, 0x8892, 0xf152, 0x9565, 0x0, 0x1);
        gbc.writeMem(0x3614, { 0xe9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x583b, gbc.sp());
        EXPECT(0x9565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 00D5
        gbc.setState(0xb118, 0x5837, 0x220, 0x6cf8, 0x74b2, 0xd9cb, 0x0, 0x0);
        gbc.writeMem(0xb118, { 0xe9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5837, gbc.sp());
        EXPECT(0xd9cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb118));
        // E9 00D7
        gbc.setState(0x3022, 0xad3e, 0x19c0, 0x8c4e, 0xd404, 0x3f36, 0x0, 0x1);
        gbc.writeMem(0x3022, { 0xe9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xad3e, gbc.sp());
        EXPECT(0x3f36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 00D8
        gbc.setState(0x8c86, 0x34d0, 0x41b0, 0xd79, 0x73c, 0x6efe, 0x0, 0x1);
        gbc.writeMem(0x8c86, { 0xe9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x34d0, gbc.sp());
        EXPECT(0x6efe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8c86));
        // E9 00D9
        gbc.setState(0x55ed, 0x9d6a, 0x5240, 0x53f, 0x3c93, 0x3252, 0x1, 0x0);
        gbc.writeMem(0x55ed, { 0xe9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9d6a, gbc.sp());
        EXPECT(0x3252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 00DB
        gbc.setState(0xb775, 0x9608, 0x8250, 0x13db, 0x2cd8, 0xe500, 0x0, 0x1);
        gbc.writeMem(0xb775, { 0xe9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9608, gbc.sp());
        EXPECT(0xe500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb775));
        // E9 00DC
        gbc.setState(0xdc66, 0x4936, 0x9ad0, 0xd949, 0xe976, 0x291f, 0x0, 0x0);
        gbc.writeMem(0xdc66, { 0xe9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4936, gbc.sp());
        EXPECT(0x291f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xdc66));
        // E9 00DD
        gbc.setState(0x616, 0xfd75, 0xf0c0, 0x639d, 0x8da8, 0x8dc5, 0x1, 0x1);
        gbc.writeMem(0x616, { 0xe9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfd75, gbc.sp());
        EXPECT(0x8dc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 00DE
        gbc.setState(0x2e97, 0xf03c, 0xb6b0, 0xa7a5, 0xde9d, 0x6ebc, 0x1, 0x0);
        gbc.writeMem(0x2e97, { 0xe9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf03c, gbc.sp());
        EXPECT(0x6ebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 00DF
        gbc.setState(0x8f60, 0xa728, 0xd20, 0xf60b, 0x262b, 0xbdb2, 0x0, 0x1);
        gbc.writeMem(0x8f60, { 0xe9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa728, gbc.sp());
        EXPECT(0xbdb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8f60));
        // E9 00E0
        gbc.setState(0xbd50, 0xe857, 0x7b60, 0x3cd4, 0x5169, 0xe7a8, 0x1, 0x1);
        gbc.writeMem(0xbd50, { 0xe9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe857, gbc.sp());
        EXPECT(0xe7a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xbd50));
        // E9 00E2
        gbc.setState(0xe29e, 0x8670, 0xc0a0, 0xa35f, 0xb467, 0xbfd4, 0x0, 0x0);
        gbc.writeMem(0xe29e, { 0xe9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8670, gbc.sp());
        EXPECT(0xbfd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe29e));
        // E9 00E3
        gbc.setState(0xecb1, 0x3988, 0xfd00, 0x4907, 0xbc4b, 0x5ce4, 0x1, 0x1);
        gbc.writeMem(0xecb1, { 0xe9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3988, gbc.sp());
        EXPECT(0x5ce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xecb1));
        // E9 00E4
        gbc.setState(0xc713, 0xb0d9, 0xd210, 0x571c, 0x5b42, 0xef1f, 0x1, 0x0);
        gbc.writeMem(0xc713, { 0xe9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb0d9, gbc.sp());
        EXPECT(0xef1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc713));
        // E9 00E5
        gbc.setState(0x256f, 0xb88d, 0x8c10, 0x9b1, 0xfd05, 0x4a00, 0x0, 0x1);
        gbc.writeMem(0x256f, { 0xe9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb88d, gbc.sp());
        EXPECT(0x4a00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 00E6
        gbc.setState(0xb375, 0x5abb, 0xabb0, 0x3df6, 0xe88, 0x4a4, 0x0, 0x1);
        gbc.writeMem(0xb375, { 0xe9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5abb, gbc.sp());
        EXPECT(0x4a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb375));
        // E9 00E7
        gbc.setState(0xb540, 0xaf43, 0x8c60, 0x3d17, 0x7327, 0xeb35, 0x0, 0x0);
        gbc.writeMem(0xb540, { 0xe9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xaf43, gbc.sp());
        EXPECT(0xeb35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb540));
        // E9 00E8
        gbc.setState(0xd579, 0x5017, 0xe7d0, 0xe2dd, 0x17c8, 0x588c, 0x0, 0x1);
        gbc.writeMem(0xd579, { 0xe9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5017, gbc.sp());
        EXPECT(0x588c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd579));
        // E9 00E9
        gbc.setState(0xca84, 0xd196, 0x2020, 0x8bef, 0xc86e, 0x2c80, 0x0, 0x0);
        gbc.writeMem(0xca84, { 0xe9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd196, gbc.sp());
        EXPECT(0x2c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xca84));
        // E9 00EA
        gbc.setState(0x748, 0xda9, 0xd480, 0xda2f, 0xd3a0, 0x1f63, 0x1, 0x0);
        gbc.writeMem(0x748, { 0xe9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xda9, gbc.sp());
        EXPECT(0x1f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 00EB
        gbc.setState(0x8a9f, 0x3e19, 0xae30, 0xd3b8, 0x6a91, 0x3928, 0x0, 0x0);
        gbc.writeMem(0x8a9f, { 0xe9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3e19, gbc.sp());
        EXPECT(0x3928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8a9f));
        // E9 00EC
        gbc.setState(0x426d, 0x33a0, 0x23d0, 0x5105, 0x9100, 0xb66a, 0x1, 0x1);
        gbc.writeMem(0x426d, { 0xe9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x33a0, gbc.sp());
        EXPECT(0xb66a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 00ED
        gbc.setState(0x8a0, 0x78c4, 0x62e0, 0xa536, 0xe7c0, 0x4196, 0x1, 0x1);
        gbc.writeMem(0x8a0, { 0xe9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x78c4, gbc.sp());
        EXPECT(0x4196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 00EE
        gbc.setState(0xc797, 0x448c, 0x3e30, 0x67bd, 0x23a, 0xe1ce, 0x0, 0x0);
        gbc.writeMem(0xc797, { 0xe9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x448c, gbc.sp());
        EXPECT(0xe1ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc797));
        // E9 00EF
        gbc.setState(0x359d, 0x77dd, 0x4380, 0xbc21, 0xf632, 0x4eae, 0x1, 0x1);
        gbc.writeMem(0x359d, { 0xe9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x77dd, gbc.sp());
        EXPECT(0x4eae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 00F1
        gbc.setState(0xbf8d, 0x470b, 0xf550, 0xfa70, 0x609, 0x70f8, 0x1, 0x0);
        gbc.writeMem(0xbf8d, { 0xe9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x470b, gbc.sp());
        EXPECT(0x70f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xbf8d));
        // E9 00F2
        gbc.setState(0xe3bc, 0xec39, 0xcb70, 0x5a51, 0xfaa8, 0xd16e, 0x1, 0x1);
        gbc.writeMem(0xe3bc, { 0xe9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xec39, gbc.sp());
        EXPECT(0xd16e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe3bc));
        // E9 00F3
        gbc.setState(0xd3ed, 0x6484, 0x9110, 0xe6eb, 0x774d, 0xd3f3, 0x0, 0x0);
        gbc.writeMem(0xd3ed, { 0xe9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6484, gbc.sp());
        EXPECT(0xd3f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd3ed));
        // E9 00F5
        gbc.setState(0x8aa1, 0x7ce3, 0xf0d0, 0xdf87, 0x638d, 0x59eb, 0x0, 0x1);
        gbc.writeMem(0x8aa1, { 0xe9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7ce3, gbc.sp());
        EXPECT(0x59eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8aa1));
        // E9 00F6
        gbc.setState(0x3f44, 0x8b2c, 0x4520, 0x47dd, 0x3a31, 0x4175, 0x0, 0x1);
        gbc.writeMem(0x3f44, { 0xe9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8b2c, gbc.sp());
        EXPECT(0x4175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 00F7
        gbc.setState(0x9dda, 0x8890, 0xfb50, 0xab67, 0x1aa8, 0xd748, 0x1, 0x1);
        gbc.writeMem(0x9dda, { 0xe9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8890, gbc.sp());
        EXPECT(0xd748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9dda));
        // E9 00F8
        gbc.setState(0x8f0d, 0x9b2d, 0x2160, 0x5d4e, 0xd5a7, 0x94ce, 0x0, 0x0);
        gbc.writeMem(0x8f0d, { 0xe9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9b2d, gbc.sp());
        EXPECT(0x94ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8f0d));
        // E9 00F9
        gbc.setState(0x601a, 0xc3dc, 0x5a90, 0xb10, 0x4324, 0x4097, 0x1, 0x1);
        gbc.writeMem(0x601a, { 0xe9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc3dc, gbc.sp());
        EXPECT(0x4097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 00FA
        gbc.setState(0xb843, 0xd1c4, 0xa730, 0xffff, 0x4f16, 0x2273, 0x0, 0x1);
        gbc.writeMem(0xb843, { 0xe9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd1c4, gbc.sp());
        EXPECT(0x2273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb843));
        // E9 00FB
        gbc.setState(0x1a06, 0x32a8, 0x95f0, 0x78c9, 0x6158, 0x41cd, 0x1, 0x1);
        gbc.writeMem(0x1a06, { 0xe9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x32a8, gbc.sp());
        EXPECT(0x41cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 00FC
        gbc.setState(0x93, 0x6535, 0x7150, 0x8507, 0x134b, 0x3d41, 0x0, 0x0);
        gbc.writeMem(0x93, { 0xe9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6535, gbc.sp());
        EXPECT(0x3d41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 00FD
        gbc.setState(0x9969, 0x954c, 0x6e90, 0x8cd6, 0x8ff5, 0xb6ed, 0x1, 0x0);
        gbc.writeMem(0x9969, { 0xe9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x954c, gbc.sp());
        EXPECT(0xb6ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9969));
        // E9 00FE
        gbc.setState(0x595d, 0xaddd, 0xf050, 0xa7f4, 0x71c2, 0x78a8, 0x0, 0x0);
        gbc.writeMem(0x595d, { 0xe9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xaddd, gbc.sp());
        EXPECT(0x78a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0100
        gbc.setState(0x7d69, 0xfea7, 0x3610, 0xbfa3, 0x85ae, 0x9ed1, 0x0, 0x1);
        gbc.writeMem(0x7d69, { 0xe9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xfea7, gbc.sp());
        EXPECT(0x9ed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0101
        gbc.setState(0x5eec, 0xa03d, 0x7940, 0xac7, 0x42ce, 0xb713, 0x0, 0x0);
        gbc.writeMem(0x5eec, { 0xe9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa03d, gbc.sp());
        EXPECT(0xb713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0102
        gbc.setState(0xbc48, 0xdcf6, 0x6e10, 0x7012, 0x95ce, 0x6bc3, 0x1, 0x0);
        gbc.writeMem(0xbc48, { 0xe9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdcf6, gbc.sp());
        EXPECT(0x6bc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xbc48));
        // E9 0103
        gbc.setState(0x2d5d, 0x26c1, 0x7a70, 0xfb81, 0xddc, 0xe19e, 0x0, 0x1);
        gbc.writeMem(0x2d5d, { 0xe9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x26c1, gbc.sp());
        EXPECT(0xe19e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0104
        gbc.setState(0x116d, 0x3, 0xb300, 0x29b0, 0x3319, 0xaca6, 0x1, 0x0);
        gbc.writeMem(0x116d, { 0xe9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3, gbc.sp());
        EXPECT(0xaca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0105
        gbc.setState(0x9ab3, 0x301a, 0xbe80, 0x3b21, 0x2e12, 0x1372, 0x0, 0x0);
        gbc.writeMem(0x9ab3, { 0xe9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x301a, gbc.sp());
        EXPECT(0x1372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9ab3));
        // E9 0106
        gbc.setState(0xd262, 0xb6b0, 0xbc20, 0xc3ea, 0xe2fa, 0x2c36, 0x1, 0x0);
        gbc.writeMem(0xd262, { 0xe9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb6b0, gbc.sp());
        EXPECT(0x2c36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd262));
        // E9 0107
        gbc.setState(0xb74e, 0xda35, 0xc5c0, 0xff2, 0x96f6, 0x2029, 0x1, 0x1);
        gbc.writeMem(0xb74e, { 0xe9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xda35, gbc.sp());
        EXPECT(0x2029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb74e));
        // E9 0108
        gbc.setState(0x6dd7, 0x1db1, 0xb3f0, 0xc90a, 0x82c7, 0x8b8b, 0x1, 0x0);
        gbc.writeMem(0x6dd7, { 0xe9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1db1, gbc.sp());
        EXPECT(0x8b8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0109
        gbc.setState(0xb3f6, 0xc28f, 0x7f60, 0x5d1c, 0xeeea, 0xd402, 0x0, 0x1);
        gbc.writeMem(0xb3f6, { 0xe9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc28f, gbc.sp());
        EXPECT(0xd402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb3f6));
        // E9 010A
        gbc.setState(0x7575, 0xfc73, 0x3210, 0x7b4b, 0xd6f9, 0x2f3, 0x0, 0x1);
        gbc.writeMem(0x7575, { 0xe9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xfc73, gbc.sp());
        EXPECT(0x2f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 010B
        gbc.setState(0xcf5b, 0xc091, 0x5b30, 0xef2d, 0xcc0d, 0x94da, 0x0, 0x0);
        gbc.writeMem(0xcf5b, { 0xe9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc091, gbc.sp());
        EXPECT(0x94da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xcf5b));
        // E9 010C
        gbc.setState(0xe21f, 0xca1c, 0x4650, 0x7e4c, 0xf103, 0xf14c, 0x0, 0x0);
        gbc.writeMem(0xe21f, { 0xe9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xca1c, gbc.sp());
        EXPECT(0xf14c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe21f));
        // E9 010E
        gbc.setState(0xc1d6, 0x5edc, 0x1820, 0x85a6, 0xd2ea, 0xb464, 0x0, 0x0);
        gbc.writeMem(0xc1d6, { 0xe9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5edc, gbc.sp());
        EXPECT(0xb464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc1d6));
        // E9 010F
        gbc.setState(0x483b, 0xdb51, 0xa0e0, 0xc03c, 0xfb05, 0x5dc9, 0x1, 0x1);
        gbc.writeMem(0x483b, { 0xe9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdb51, gbc.sp());
        EXPECT(0x5dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0111
        gbc.setState(0x8edc, 0xf4c2, 0x6a90, 0x4297, 0xe062, 0xf3ed, 0x0, 0x1);
        gbc.writeMem(0x8edc, { 0xe9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf4c2, gbc.sp());
        EXPECT(0xf3ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8edc));
        // E9 0112
        gbc.setState(0xe5ac, 0xc698, 0x9300, 0xb5c2, 0x2564, 0x39fb, 0x1, 0x0);
        gbc.writeMem(0xe5ac, { 0xe9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc698, gbc.sp());
        EXPECT(0x39fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe5ac));
        // E9 0113
        gbc.setState(0x7cd5, 0xb67a, 0xaee0, 0x6750, 0x281c, 0xff53, 0x0, 0x0);
        gbc.writeMem(0x7cd5, { 0xe9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb67a, gbc.sp());
        EXPECT(0xff53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0114
        gbc.setState(0x9f75, 0xbabe, 0x7e80, 0x65ef, 0x616c, 0x406b, 0x0, 0x1);
        gbc.writeMem(0x9f75, { 0xe9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xbabe, gbc.sp());
        EXPECT(0x406b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9f75));
        // E9 0115
        gbc.setState(0xa9ab, 0x76dc, 0x9350, 0xc112, 0xae82, 0xe12b, 0x0, 0x0);
        gbc.writeMem(0xa9ab, { 0xe9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x76dc, gbc.sp());
        EXPECT(0xe12b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa9ab));
        // E9 0116
        gbc.setState(0x4cd0, 0xa675, 0xba70, 0x54d3, 0xff66, 0x2950, 0x1, 0x0);
        gbc.writeMem(0x4cd0, { 0xe9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa675, gbc.sp());
        EXPECT(0x2950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0117
        gbc.setState(0x6469, 0xe2c6, 0x3420, 0x6ed3, 0x7d58, 0x600e, 0x1, 0x1);
        gbc.writeMem(0x6469, { 0xe9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe2c6, gbc.sp());
        EXPECT(0x600e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0118
        gbc.setState(0x890f, 0xeb29, 0x2d90, 0xfc98, 0x4672, 0x4364, 0x0, 0x1);
        gbc.writeMem(0x890f, { 0xe9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xeb29, gbc.sp());
        EXPECT(0x4364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x890f));
        // E9 0119
        gbc.setState(0x325c, 0xe3c2, 0x2c30, 0x5448, 0xf22f, 0xd305, 0x0, 0x0);
        gbc.writeMem(0x325c, { 0xe9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe3c2, gbc.sp());
        EXPECT(0xd305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 011A
        gbc.setState(0xe887, 0x109f, 0x1b20, 0x17f2, 0x8ad9, 0x10d1, 0x0, 0x0);
        gbc.writeMem(0xe887, { 0xe9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x109f, gbc.sp());
        EXPECT(0x10d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe887));
        // E9 011B
        gbc.setState(0x1606, 0x3b22, 0x74d0, 0x72fa, 0x2d1e, 0xc097, 0x0, 0x1);
        gbc.writeMem(0x1606, { 0xe9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3b22, gbc.sp());
        EXPECT(0xc097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 011C
        gbc.setState(0xb46, 0x29bf, 0x22f0, 0x4557, 0x3c59, 0x89d6, 0x1, 0x0);
        gbc.writeMem(0xb46, { 0xe9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x29bf, gbc.sp());
        EXPECT(0x89d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 011D
        gbc.setState(0xc057, 0xa9ff, 0x4920, 0xf38a, 0xaa28, 0x3ac1, 0x1, 0x1);
        gbc.writeMem(0xc057, { 0xe9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa9ff, gbc.sp());
        EXPECT(0x3ac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc057));
        // E9 011E
        gbc.setState(0x6a31, 0xb373, 0xe6e0, 0xc33c, 0xcf79, 0x671f, 0x0, 0x0);
        gbc.writeMem(0x6a31, { 0xe9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb373, gbc.sp());
        EXPECT(0x671f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 011F
        gbc.setState(0x4f9f, 0x504b, 0xbba0, 0xd79a, 0x59b2, 0xed2b, 0x0, 0x0);
        gbc.writeMem(0x4f9f, { 0xe9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x504b, gbc.sp());
        EXPECT(0xed2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0120
        gbc.setState(0x31d8, 0xd83b, 0xc6d0, 0x42fb, 0x8d3f, 0xa3a0, 0x0, 0x1);
        gbc.writeMem(0x31d8, { 0xe9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd83b, gbc.sp());
        EXPECT(0xa3a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0121
        gbc.setState(0x721d, 0x77f7, 0x8d20, 0xc4fe, 0xcd3d, 0x1790, 0x1, 0x0);
        gbc.writeMem(0x721d, { 0xe9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x77f7, gbc.sp());
        EXPECT(0x1790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0122
        gbc.setState(0xe6e0, 0x1aa4, 0x7180, 0x9d5e, 0xe862, 0x7124, 0x1, 0x1);
        gbc.writeMem(0xe6e0, { 0xe9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1aa4, gbc.sp());
        EXPECT(0x7124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe6e0));
        // E9 0123
        gbc.setState(0xac0b, 0x6875, 0x1a50, 0x6e1, 0x8f6, 0x9150, 0x0, 0x1);
        gbc.writeMem(0xac0b, { 0xe9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6875, gbc.sp());
        EXPECT(0x9150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xac0b));
        // E9 0124
        gbc.setState(0xb9c2, 0xfa5b, 0x7f50, 0x6c, 0x59de, 0xa953, 0x1, 0x1);
        gbc.writeMem(0xb9c2, { 0xe9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xfa5b, gbc.sp());
        EXPECT(0xa953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb9c2));
        // E9 0125
        gbc.setState(0xaed6, 0xdc16, 0x7df0, 0xd96, 0xee19, 0xe3f0, 0x1, 0x1);
        gbc.writeMem(0xaed6, { 0xe9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xdc16, gbc.sp());
        EXPECT(0xe3f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xaed6));
        // E9 0127
        gbc.setState(0x45fe, 0x5cf9, 0x1100, 0x4d98, 0x436d, 0xcfaf, 0x0, 0x1);
        gbc.writeMem(0x45fe, { 0xe9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5cf9, gbc.sp());
        EXPECT(0xcfaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0128
        gbc.setState(0x6777, 0x5e01, 0x1660, 0x6f69, 0x21f9, 0xb979, 0x1, 0x0);
        gbc.writeMem(0x6777, { 0xe9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5e01, gbc.sp());
        EXPECT(0xb979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0129
        gbc.setState(0x9f97, 0x4738, 0x7ef0, 0x6748, 0x423e, 0xb94c, 0x0, 0x1);
        gbc.writeMem(0x9f97, { 0xe9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4738, gbc.sp());
        EXPECT(0xb94c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9f97));
        // E9 012A
        gbc.setState(0x5be1, 0xed39, 0x4dd0, 0x9cdd, 0xe7de, 0xad0b, 0x1, 0x1);
        gbc.writeMem(0x5be1, { 0xe9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xed39, gbc.sp());
        EXPECT(0xad0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 012B
        gbc.setState(0xe15a, 0xea58, 0x890, 0x109d, 0x3292, 0x3dd3, 0x0, 0x1);
        gbc.writeMem(0xe15a, { 0xe9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xea58, gbc.sp());
        EXPECT(0x3dd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe15a));
        // E9 012C
        gbc.setState(0x2b8d, 0x4738, 0x63a0, 0x37b4, 0x5a9f, 0xb2fe, 0x0, 0x0);
        gbc.writeMem(0x2b8d, { 0xe9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4738, gbc.sp());
        EXPECT(0xb2fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 012D
        gbc.setState(0xacfd, 0xe254, 0x2f90, 0x1ae5, 0xb0b0, 0x6ece, 0x1, 0x1);
        gbc.writeMem(0xacfd, { 0xe9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe254, gbc.sp());
        EXPECT(0x6ece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xacfd));
        // E9 012E
        gbc.setState(0x89cd, 0x5028, 0x5c20, 0x2e17, 0x2290, 0xb14d, 0x0, 0x0);
        gbc.writeMem(0x89cd, { 0xe9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5028, gbc.sp());
        EXPECT(0xb14d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x89cd));
        // E9 012F
        gbc.setState(0x819, 0x5726, 0x8f20, 0x4948, 0x35f0, 0xdb85, 0x1, 0x1);
        gbc.writeMem(0x819, { 0xe9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5726, gbc.sp());
        EXPECT(0xdb85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0130
        gbc.setState(0xa165, 0x28a2, 0xc160, 0xebaa, 0x2e3c, 0xd196, 0x1, 0x1);
        gbc.writeMem(0xa165, { 0xe9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x28a2, gbc.sp());
        EXPECT(0xd196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa165));
        // E9 0131
        gbc.setState(0x4e49, 0x844, 0x75a0, 0x1810, 0x337a, 0xe3be, 0x1, 0x1);
        gbc.writeMem(0x4e49, { 0xe9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x844, gbc.sp());
        EXPECT(0xe3be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0132
        gbc.setState(0x4805, 0x6a2c, 0x9970, 0xf033, 0x385b, 0x5685, 0x1, 0x0);
        gbc.writeMem(0x4805, { 0xe9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6a2c, gbc.sp());
        EXPECT(0x5685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0133
        gbc.setState(0xae4d, 0x661d, 0x2f30, 0xe5d3, 0x8aaa, 0x82ea, 0x1, 0x1);
        gbc.writeMem(0xae4d, { 0xe9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x661d, gbc.sp());
        EXPECT(0x82ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xae4d));
        // E9 0134
        gbc.setState(0x9a44, 0x8a64, 0x49f0, 0x545a, 0x2f7a, 0xafc9, 0x0, 0x0);
        gbc.writeMem(0x9a44, { 0xe9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8a64, gbc.sp());
        EXPECT(0xafc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9a44));
        // E9 0135
        gbc.setState(0x95c3, 0xf9b6, 0x1630, 0x6f8, 0xdeb8, 0xc211, 0x0, 0x1);
        gbc.writeMem(0x95c3, { 0xe9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf9b6, gbc.sp());
        EXPECT(0xc211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x95c3));
        // E9 0136
        gbc.setState(0x6cc5, 0xd938, 0x11d0, 0x3937, 0x7f45, 0xe29f, 0x0, 0x1);
        gbc.writeMem(0x6cc5, { 0xe9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd938, gbc.sp());
        EXPECT(0xe29f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0137
        gbc.setState(0xb3dc, 0x2d38, 0xfbe0, 0x3e4, 0x3309, 0x2abd, 0x1, 0x0);
        gbc.writeMem(0xb3dc, { 0xe9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2d38, gbc.sp());
        EXPECT(0x2abd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb3dc));
        // E9 0138
        gbc.setState(0xd030, 0x39ee, 0x9a50, 0xcf36, 0xc3b1, 0xda6a, 0x1, 0x0);
        gbc.writeMem(0xd030, { 0xe9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x39ee, gbc.sp());
        EXPECT(0xda6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd030));
        // E9 0139
        gbc.setState(0xe837, 0x748d, 0xfc00, 0x6b5c, 0x220, 0x97b0, 0x1, 0x1);
        gbc.writeMem(0xe837, { 0xe9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x748d, gbc.sp());
        EXPECT(0x97b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe837));
        // E9 013A
        gbc.setState(0xca09, 0xbbdb, 0xb130, 0xf1d5, 0xcfbb, 0xfb60, 0x0, 0x1);
        gbc.writeMem(0xca09, { 0xe9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbbdb, gbc.sp());
        EXPECT(0xfb60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xca09));
        // E9 013B
        gbc.setState(0x2259, 0x6991, 0x3d80, 0x50c7, 0x6f59, 0x2790, 0x0, 0x1);
        gbc.writeMem(0x2259, { 0xe9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6991, gbc.sp());
        EXPECT(0x2790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 013C
        gbc.setState(0x5974, 0x195e, 0x9680, 0x7347, 0xc15, 0x1e25, 0x0, 0x0);
        gbc.writeMem(0x5974, { 0xe9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x195e, gbc.sp());
        EXPECT(0x1e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 013D
        gbc.setState(0x8489, 0x582a, 0xc8f0, 0x21ec, 0x3b4b, 0xc9db, 0x0, 0x1);
        gbc.writeMem(0x8489, { 0xe9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x582a, gbc.sp());
        EXPECT(0xc9db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8489));
        // E9 013E
        gbc.setState(0x2156, 0x32fe, 0xbdc0, 0x8c54, 0xc5f8, 0xd91, 0x0, 0x0);
        gbc.writeMem(0x2156, { 0xe9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x32fe, gbc.sp());
        EXPECT(0xd91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 013F
        gbc.setState(0x161e, 0x5586, 0x52a0, 0x1bb0, 0x64e2, 0xdc08, 0x0, 0x0);
        gbc.writeMem(0x161e, { 0xe9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5586, gbc.sp());
        EXPECT(0xdc08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0140
        gbc.setState(0x229c, 0x4cec, 0xd740, 0x5718, 0xc6d6, 0x893e, 0x1, 0x0);
        gbc.writeMem(0x229c, { 0xe9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4cec, gbc.sp());
        EXPECT(0x893e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0141
        gbc.setState(0x8780, 0x58b3, 0x6370, 0xef8, 0xb1d5, 0x99a0, 0x0, 0x1);
        gbc.writeMem(0x8780, { 0xe9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x58b3, gbc.sp());
        EXPECT(0x99a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8780));
        // E9 0142
        gbc.setState(0xd0bf, 0x6e38, 0x1e0, 0xfebc, 0x7bd3, 0xf38f, 0x1, 0x0);
        gbc.writeMem(0xd0bf, { 0xe9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6e38, gbc.sp());
        EXPECT(0xf38f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd0bf));
        // E9 0143
        gbc.setState(0x4c25, 0xc881, 0xd770, 0x9a15, 0xa02e, 0x7cfa, 0x1, 0x0);
        gbc.writeMem(0x4c25, { 0xe9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc881, gbc.sp());
        EXPECT(0x7cfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0144
        gbc.setState(0x5e85, 0xf3f0, 0x4490, 0x498d, 0x5d54, 0xca6a, 0x0, 0x0);
        gbc.writeMem(0x5e85, { 0xe9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf3f0, gbc.sp());
        EXPECT(0xca6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0145
        gbc.setState(0x8af7, 0x1bc6, 0xa200, 0x2dbc, 0x5565, 0x3f75, 0x0, 0x1);
        gbc.writeMem(0x8af7, { 0xe9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1bc6, gbc.sp());
        EXPECT(0x3f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8af7));
        // E9 0146
        gbc.setState(0xbdaf, 0x1f9b, 0xa6e0, 0xc523, 0xe8d, 0xbada, 0x0, 0x0);
        gbc.writeMem(0xbdaf, { 0xe9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1f9b, gbc.sp());
        EXPECT(0xbada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xbdaf));
        // E9 0147
        gbc.setState(0xee12, 0xaa92, 0x3e30, 0x9713, 0x90de, 0xf285, 0x0, 0x1);
        gbc.writeMem(0xee12, { 0xe9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xaa92, gbc.sp());
        EXPECT(0xf285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xee12));
        // E9 0148
        gbc.setState(0x597a, 0x3a7, 0xf60, 0xc50e, 0xe1f2, 0xa0b5, 0x0, 0x1);
        gbc.writeMem(0x597a, { 0xe9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3a7, gbc.sp());
        EXPECT(0xa0b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0149
        gbc.setState(0xb026, 0x6e1f, 0x50b0, 0xab16, 0xa7ec, 0x42c8, 0x0, 0x1);
        gbc.writeMem(0xb026, { 0xe9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6e1f, gbc.sp());
        EXPECT(0x42c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb026));
        // E9 014A
        gbc.setState(0x9970, 0x753, 0x2660, 0xb511, 0xb19d, 0xf6de, 0x1, 0x0);
        gbc.writeMem(0x9970, { 0xe9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x753, gbc.sp());
        EXPECT(0xf6de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9970));
        // E9 014B
        gbc.setState(0x3b6a, 0x3066, 0x3ca0, 0x6081, 0x69b, 0x3726, 0x0, 0x1);
        gbc.writeMem(0x3b6a, { 0xe9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3066, gbc.sp());
        EXPECT(0x3726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 014C
        gbc.setState(0x23c3, 0x5efb, 0xd690, 0xf5bd, 0xf9f1, 0x3ed, 0x0, 0x0);
        gbc.writeMem(0x23c3, { 0xe9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5efb, gbc.sp());
        EXPECT(0x3ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 014D
        gbc.setState(0xe77a, 0xd235, 0x8710, 0x787, 0x774f, 0x6400, 0x0, 0x1);
        gbc.writeMem(0xe77a, { 0xe9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd235, gbc.sp());
        EXPECT(0x6400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe77a));
        // E9 014E
        gbc.setState(0x86a0, 0xa42e, 0x5790, 0xce98, 0xcc1, 0xea87, 0x0, 0x0);
        gbc.writeMem(0x86a0, { 0xe9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa42e, gbc.sp());
        EXPECT(0xea87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x86a0));
        // E9 014F
        gbc.setState(0xa1f5, 0xe7bd, 0x4270, 0x7ffe, 0x6c2, 0x97ed, 0x1, 0x1);
        gbc.writeMem(0xa1f5, { 0xe9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe7bd, gbc.sp());
        EXPECT(0x97ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa1f5));
        // E9 0150
        gbc.setState(0x3bf7, 0x6aa3, 0x6040, 0x6f70, 0xb7ca, 0xe182, 0x0, 0x0);
        gbc.writeMem(0x3bf7, { 0xe9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6aa3, gbc.sp());
        EXPECT(0xe182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0151
        gbc.setState(0x93c1, 0xf156, 0x12b0, 0x2727, 0xf9f3, 0xe441, 0x0, 0x0);
        gbc.writeMem(0x93c1, { 0xe9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf156, gbc.sp());
        EXPECT(0xe441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x93c1));
        // E9 0152
        gbc.setState(0x91ab, 0xa548, 0x4a70, 0x53bb, 0x52ec, 0x1e05, 0x0, 0x0);
        gbc.writeMem(0x91ab, { 0xe9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa548, gbc.sp());
        EXPECT(0x1e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x91ab));
        // E9 0153
        gbc.setState(0x3ae6, 0xcf75, 0x2170, 0x5c71, 0x5e9b, 0x9be2, 0x1, 0x1);
        gbc.writeMem(0x3ae6, { 0xe9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xcf75, gbc.sp());
        EXPECT(0x9be2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0154
        gbc.setState(0xe0dd, 0xf25a, 0xa010, 0xba6e, 0x21e6, 0x49fe, 0x0, 0x1);
        gbc.writeMem(0xe0dd, { 0xe9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf25a, gbc.sp());
        EXPECT(0x49fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe0dd));
        // E9 0155
        gbc.setState(0x5dbc, 0x1d53, 0x3390, 0xb027, 0xd49d, 0xcd5c, 0x0, 0x0);
        gbc.writeMem(0x5dbc, { 0xe9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1d53, gbc.sp());
        EXPECT(0xcd5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0156
        gbc.setState(0x8dc9, 0x8263, 0x1f0, 0xdf0f, 0x23e5, 0xa24a, 0x0, 0x0);
        gbc.writeMem(0x8dc9, { 0xe9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8263, gbc.sp());
        EXPECT(0xa24a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8dc9));
        // E9 0158
        gbc.setState(0x8b72, 0x254b, 0xf3d0, 0x7608, 0x7fcc, 0xc125, 0x1, 0x1);
        gbc.writeMem(0x8b72, { 0xe9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x254b, gbc.sp());
        EXPECT(0xc125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8b72));
        // E9 0159
        gbc.setState(0x75eb, 0x2f88, 0x58a0, 0xbdfd, 0x72f9, 0x3073, 0x1, 0x1);
        gbc.writeMem(0x75eb, { 0xe9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2f88, gbc.sp());
        EXPECT(0x3073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 015A
        gbc.setState(0xde0f, 0xb707, 0x2f70, 0xdcfc, 0x67f9, 0xe3e9, 0x1, 0x1);
        gbc.writeMem(0xde0f, { 0xe9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb707, gbc.sp());
        EXPECT(0xe3e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xde0f));
        // E9 015B
        gbc.setState(0x246c, 0x4c41, 0x79b0, 0xa939, 0xbaeb, 0x22a7, 0x1, 0x1);
        gbc.writeMem(0x246c, { 0xe9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4c41, gbc.sp());
        EXPECT(0x22a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 015D
        gbc.setState(0xc097, 0x2e63, 0xf90, 0x395b, 0xba84, 0x90d7, 0x0, 0x1);
        gbc.writeMem(0xc097, { 0xe9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2e63, gbc.sp());
        EXPECT(0x90d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc097));
        // E9 015E
        gbc.setState(0x32e3, 0xe784, 0x8660, 0x94bd, 0x1c9e, 0xd74b, 0x0, 0x1);
        gbc.writeMem(0x32e3, { 0xe9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe784, gbc.sp());
        EXPECT(0xd74b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 015F
        gbc.setState(0x5831, 0x5db8, 0xe070, 0x18ec, 0x50a6, 0x546a, 0x0, 0x1);
        gbc.writeMem(0x5831, { 0xe9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5db8, gbc.sp());
        EXPECT(0x546a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0160
        gbc.setState(0xa42a, 0x7e37, 0x1a40, 0xa8b6, 0x16c5, 0x4720, 0x0, 0x1);
        gbc.writeMem(0xa42a, { 0xe9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7e37, gbc.sp());
        EXPECT(0x4720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa42a));
        // E9 0161
        gbc.setState(0xcb7, 0x5a6e, 0x9c70, 0xfd49, 0x4ac, 0x130e, 0x0, 0x1);
        gbc.writeMem(0xcb7, { 0xe9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5a6e, gbc.sp());
        EXPECT(0x130e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0162
        gbc.setState(0xe684, 0x1159, 0x3640, 0x97c0, 0xda6d, 0x8827, 0x1, 0x0);
        gbc.writeMem(0xe684, { 0xe9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1159, gbc.sp());
        EXPECT(0x8827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe684));
        // E9 0163
        gbc.setState(0x5a37, 0xab94, 0x6b60, 0x593a, 0x680c, 0xf35a, 0x0, 0x1);
        gbc.writeMem(0x5a37, { 0xe9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xab94, gbc.sp());
        EXPECT(0xf35a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0164
        gbc.setState(0x5a91, 0xb899, 0x1790, 0xf69b, 0xe9c1, 0x902c, 0x1, 0x1);
        gbc.writeMem(0x5a91, { 0xe9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb899, gbc.sp());
        EXPECT(0x902c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0165
        gbc.setState(0xce05, 0x538, 0x26c0, 0xa096, 0x4109, 0x37e7, 0x0, 0x1);
        gbc.writeMem(0xce05, { 0xe9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x538, gbc.sp());
        EXPECT(0x37e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xce05));
        // E9 0166
        gbc.setState(0xe0e7, 0xf0d8, 0x2960, 0x1ded, 0x2e39, 0xc02e, 0x0, 0x0);
        gbc.writeMem(0xe0e7, { 0xe9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf0d8, gbc.sp());
        EXPECT(0xc02e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe0e7));
        // E9 0167
        gbc.setState(0xee2c, 0xef6a, 0xb3d0, 0x69f3, 0x9980, 0x6083, 0x1, 0x1);
        gbc.writeMem(0xee2c, { 0xe9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xef6a, gbc.sp());
        EXPECT(0x6083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xee2c));
        // E9 0168
        gbc.setState(0x57d9, 0xb074, 0x6d0, 0xf883, 0xb53d, 0xf9f9, 0x0, 0x0);
        gbc.writeMem(0x57d9, { 0xe9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb074, gbc.sp());
        EXPECT(0xf9f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0169
        gbc.setState(0x781a, 0x4325, 0xb4a0, 0xff1, 0x7006, 0xccb5, 0x1, 0x1);
        gbc.writeMem(0x781a, { 0xe9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4325, gbc.sp());
        EXPECT(0xccb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 016B
        gbc.setState(0xd411, 0xd873, 0x77a0, 0x7d12, 0x8063, 0xb421, 0x1, 0x1);
        gbc.writeMem(0xd411, { 0xe9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd873, gbc.sp());
        EXPECT(0xb421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd411));
        // E9 016C
        gbc.setState(0x53d8, 0x4aca, 0x5350, 0xc160, 0x6b5e, 0x8eb7, 0x0, 0x0);
        gbc.writeMem(0x53d8, { 0xe9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4aca, gbc.sp());
        EXPECT(0x8eb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 016D
        gbc.setState(0x379d, 0x5f0a, 0x710, 0xb914, 0x8fe3, 0xab02, 0x1, 0x0);
        gbc.writeMem(0x379d, { 0xe9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5f0a, gbc.sp());
        EXPECT(0xab02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 016E
        gbc.setState(0x50e0, 0x9024, 0x9110, 0x1162, 0xa79f, 0x34c6, 0x0, 0x0);
        gbc.writeMem(0x50e0, { 0xe9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9024, gbc.sp());
        EXPECT(0x34c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 016F
        gbc.setState(0xbdae, 0x726, 0xd070, 0x3394, 0x97d1, 0x1eb7, 0x0, 0x1);
        gbc.writeMem(0xbdae, { 0xe9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x726, gbc.sp());
        EXPECT(0x1eb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xbdae));
        // E9 0170
        gbc.setState(0x4376, 0xe09a, 0x6b60, 0xa13, 0x34f5, 0x86e7, 0x0, 0x0);
        gbc.writeMem(0x4376, { 0xe9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe09a, gbc.sp());
        EXPECT(0x86e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0171
        gbc.setState(0x60f6, 0x1254, 0x3500, 0x61f2, 0x7d20, 0xcf70, 0x1, 0x1);
        gbc.writeMem(0x60f6, { 0xe9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1254, gbc.sp());
        EXPECT(0xcf70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0172
        gbc.setState(0x8bc1, 0x53c3, 0x1020, 0xb679, 0x5df8, 0xdd9b, 0x1, 0x1);
        gbc.writeMem(0x8bc1, { 0xe9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x53c3, gbc.sp());
        EXPECT(0xdd9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8bc1));
        // E9 0173
        gbc.setState(0xa941, 0xa0c6, 0xe940, 0xbf60, 0x493, 0x7a4e, 0x0, 0x1);
        gbc.writeMem(0xa941, { 0xe9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa0c6, gbc.sp());
        EXPECT(0x7a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa941));
        // E9 0174
        gbc.setState(0x6c26, 0xfcf4, 0xb730, 0x38d9, 0xe322, 0xabd6, 0x1, 0x0);
        gbc.writeMem(0x6c26, { 0xe9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xfcf4, gbc.sp());
        EXPECT(0xabd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0175
        gbc.setState(0xc183, 0x17ad, 0x7c50, 0x2575, 0xa002, 0x4f39, 0x0, 0x0);
        gbc.writeMem(0xc183, { 0xe9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x17ad, gbc.sp());
        EXPECT(0x4f39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc183));
        // E9 0176
        gbc.setState(0x6c20, 0x8e32, 0x370, 0x19b, 0x9286, 0xbb34, 0x1, 0x1);
        gbc.writeMem(0x6c20, { 0xe9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8e32, gbc.sp());
        EXPECT(0xbb34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0177
        gbc.setState(0xc939, 0x5cd3, 0x1d60, 0x4583, 0xb3de, 0x7cf, 0x0, 0x0);
        gbc.writeMem(0xc939, { 0xe9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5cd3, gbc.sp());
        EXPECT(0x7cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc939));
        // E9 0178
        gbc.setState(0x83a5, 0x57df, 0x7a10, 0x8078, 0x8f66, 0xe3ee, 0x0, 0x0);
        gbc.writeMem(0x83a5, { 0xe9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x57df, gbc.sp());
        EXPECT(0xe3ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x83a5));
        // E9 0179
        gbc.setState(0xc151, 0xc53e, 0x56a0, 0x8666, 0x6810, 0xfe08, 0x1, 0x0);
        gbc.writeMem(0xc151, { 0xe9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc53e, gbc.sp());
        EXPECT(0xfe08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc151));
        // E9 017A
        gbc.setState(0x8173, 0xed40, 0x2ee0, 0x32b0, 0x3cec, 0xf30d, 0x0, 0x0);
        gbc.writeMem(0x8173, { 0xe9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xed40, gbc.sp());
        EXPECT(0xf30d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8173));
        // E9 017B
        gbc.setState(0xa55f, 0xd8b6, 0xfd40, 0x6885, 0x432b, 0x34f8, 0x0, 0x1);
        gbc.writeMem(0xa55f, { 0xe9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd8b6, gbc.sp());
        EXPECT(0x34f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa55f));
        // E9 017C
        gbc.setState(0xe6ad, 0xac36, 0xf4d0, 0x74d4, 0xa950, 0x2008, 0x0, 0x0);
        gbc.writeMem(0xe6ad, { 0xe9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xac36, gbc.sp());
        EXPECT(0x2008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe6ad));
        // E9 017D
        gbc.setState(0xff9, 0x3f70, 0x5c00, 0xecbc, 0xcf1a, 0xf68b, 0x1, 0x1);
        gbc.writeMem(0xff9, { 0xe9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3f70, gbc.sp());
        EXPECT(0xf68b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 017F
        gbc.setState(0x585f, 0x89ce, 0x8f0, 0xf6cb, 0xf10b, 0x192d, 0x0, 0x1);
        gbc.writeMem(0x585f, { 0xe9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x89ce, gbc.sp());
        EXPECT(0x192d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0180
        gbc.setState(0x9353, 0x437c, 0x3930, 0x5961, 0x98af, 0x5220, 0x0, 0x0);
        gbc.writeMem(0x9353, { 0xe9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x437c, gbc.sp());
        EXPECT(0x5220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9353));
        // E9 0181
        gbc.setState(0x2aac, 0xc8c6, 0x7130, 0x9bb, 0xa588, 0xae40, 0x0, 0x1);
        gbc.writeMem(0x2aac, { 0xe9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc8c6, gbc.sp());
        EXPECT(0xae40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0182
        gbc.setState(0xccf1, 0x917f, 0x1b40, 0x7a70, 0x4239, 0xf9c, 0x0, 0x1);
        gbc.writeMem(0xccf1, { 0xe9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x917f, gbc.sp());
        EXPECT(0xf9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xccf1));
        // E9 0183
        gbc.setState(0x8dc9, 0x55a8, 0xdad0, 0x5abd, 0xf3ef, 0x8a8c, 0x0, 0x0);
        gbc.writeMem(0x8dc9, { 0xe9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x55a8, gbc.sp());
        EXPECT(0x8a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8dc9));
        // E9 0185
        gbc.setState(0x3dc1, 0x6cab, 0x96c0, 0x7941, 0x5515, 0x60c0, 0x1, 0x0);
        gbc.writeMem(0x3dc1, { 0xe9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6cab, gbc.sp());
        EXPECT(0x60c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0186
        gbc.setState(0xb7ce, 0x7266, 0xa770, 0x830a, 0x9e97, 0x100, 0x0, 0x0);
        gbc.writeMem(0xb7ce, { 0xe9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7266, gbc.sp());
        EXPECT(0x100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb7ce));
        // E9 0187
        gbc.setState(0xd35f, 0xeedd, 0x11e0, 0x58d2, 0xa4d5, 0xb563, 0x1, 0x0);
        gbc.writeMem(0xd35f, { 0xe9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xeedd, gbc.sp());
        EXPECT(0xb563, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd35f));
        // E9 0188
        gbc.setState(0x2ed7, 0x5d7d, 0xcc40, 0xb994, 0x75a3, 0x3bea, 0x1, 0x0);
        gbc.writeMem(0x2ed7, { 0xe9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5d7d, gbc.sp());
        EXPECT(0x3bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0189
        gbc.setState(0xe9ce, 0xa2d6, 0xd5e0, 0x8c01, 0x17fd, 0x6208, 0x1, 0x1);
        gbc.writeMem(0xe9ce, { 0xe9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa2d6, gbc.sp());
        EXPECT(0x6208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe9ce));
        // E9 018A
        gbc.setState(0x237a, 0x2ec4, 0xcd60, 0x357b, 0xca0e, 0xe583, 0x1, 0x1);
        gbc.writeMem(0x237a, { 0xe9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2ec4, gbc.sp());
        EXPECT(0xe583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 018B
        gbc.setState(0xdf28, 0xed8, 0x2870, 0xc361, 0x9c63, 0x57d1, 0x0, 0x0);
        gbc.writeMem(0xdf28, { 0xe9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xed8, gbc.sp());
        EXPECT(0x57d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xdf28));
        // E9 018C
        gbc.setState(0x2e8f, 0x5aa9, 0xf5d0, 0x257b, 0x946d, 0x6cef, 0x0, 0x0);
        gbc.writeMem(0x2e8f, { 0xe9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5aa9, gbc.sp());
        EXPECT(0x6cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 018D
        gbc.setState(0x5f49, 0x82d2, 0x7170, 0x877, 0x2517, 0xd962, 0x0, 0x0);
        gbc.writeMem(0x5f49, { 0xe9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x82d2, gbc.sp());
        EXPECT(0xd962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 018E
        gbc.setState(0x588b, 0x7257, 0x2040, 0x4821, 0xf9f4, 0x4c13, 0x1, 0x0);
        gbc.writeMem(0x588b, { 0xe9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7257, gbc.sp());
        EXPECT(0x4c13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 018F
        gbc.setState(0xca00, 0x347e, 0x5120, 0x6dd2, 0xda07, 0x85ab, 0x1, 0x0);
        gbc.writeMem(0xca00, { 0xe9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x347e, gbc.sp());
        EXPECT(0x85ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xca00));
        // E9 0190
        gbc.setState(0xa8d, 0x8830, 0x9760, 0x59cb, 0x6dd3, 0x24b5, 0x0, 0x0);
        gbc.writeMem(0xa8d, { 0xe9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8830, gbc.sp());
        EXPECT(0x24b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0191
        gbc.setState(0x3194, 0xb999, 0x6350, 0xd369, 0xf5e0, 0x9d60, 0x0, 0x0);
        gbc.writeMem(0x3194, { 0xe9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb999, gbc.sp());
        EXPECT(0x9d60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0192
        gbc.setState(0x1014, 0xd9cc, 0x7460, 0x1440, 0x2c22, 0x54a0, 0x1, 0x0);
        gbc.writeMem(0x1014, { 0xe9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd9cc, gbc.sp());
        EXPECT(0x54a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0194
        gbc.setState(0x8ceb, 0x8023, 0x90b0, 0x85b1, 0x7ab2, 0x46e4, 0x0, 0x0);
        gbc.writeMem(0x8ceb, { 0xe9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8023, gbc.sp());
        EXPECT(0x46e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8ceb));
        // E9 0195
        gbc.setState(0x6699, 0x624c, 0x84c0, 0xff31, 0x9874, 0x20b8, 0x1, 0x1);
        gbc.writeMem(0x6699, { 0xe9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x624c, gbc.sp());
        EXPECT(0x20b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0197
        gbc.setState(0x19f7, 0xa04e, 0x7010, 0xa2cf, 0x29cc, 0xd94f, 0x0, 0x1);
        gbc.writeMem(0x19f7, { 0xe9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa04e, gbc.sp());
        EXPECT(0xd94f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0198
        gbc.setState(0x4f3a, 0x743, 0x9140, 0x7e80, 0x5e33, 0xdea, 0x0, 0x1);
        gbc.writeMem(0x4f3a, { 0xe9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x743, gbc.sp());
        EXPECT(0xdea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0199
        gbc.setState(0x3f23, 0x9348, 0xd210, 0x9d3c, 0x7d83, 0xfa4a, 0x0, 0x1);
        gbc.writeMem(0x3f23, { 0xe9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9348, gbc.sp());
        EXPECT(0xfa4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 019A
        gbc.setState(0x63b2, 0x486a, 0x47f0, 0xb5bb, 0xa7b9, 0xf33, 0x0, 0x1);
        gbc.writeMem(0x63b2, { 0xe9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x486a, gbc.sp());
        EXPECT(0xf33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 019B
        gbc.setState(0xb697, 0x1c63, 0xc10, 0x8621, 0x964f, 0xcc6f, 0x0, 0x1);
        gbc.writeMem(0xb697, { 0xe9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1c63, gbc.sp());
        EXPECT(0xcc6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb697));
        // E9 019C
        gbc.setState(0x764a, 0x9d9e, 0x2350, 0x3cd6, 0xf1db, 0xd0c9, 0x0, 0x0);
        gbc.writeMem(0x764a, { 0xe9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9d9e, gbc.sp());
        EXPECT(0xd0c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 019D
        gbc.setState(0xb475, 0x99af, 0xb880, 0x54c1, 0x6bb5, 0x4218, 0x1, 0x1);
        gbc.writeMem(0xb475, { 0xe9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x99af, gbc.sp());
        EXPECT(0x4218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb475));
        // E9 019E
        gbc.setState(0xaed3, 0x9c4, 0xa0f0, 0xa7f4, 0x85f3, 0x31de, 0x1, 0x0);
        gbc.writeMem(0xaed3, { 0xe9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9c4, gbc.sp());
        EXPECT(0x31de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xaed3));
        // E9 01A0
        gbc.setState(0x5ef5, 0xb88f, 0x4600, 0x4793, 0xbbbe, 0x29af, 0x0, 0x0);
        gbc.writeMem(0x5ef5, { 0xe9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb88f, gbc.sp());
        EXPECT(0x29af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01A1
        gbc.setState(0x9b8f, 0x20cd, 0xc1d0, 0x479, 0x9a63, 0x6839, 0x0, 0x0);
        gbc.writeMem(0x9b8f, { 0xe9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x20cd, gbc.sp());
        EXPECT(0x6839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9b8f));
        // E9 01A2
        gbc.setState(0x3cc7, 0xba1e, 0x3150, 0x8d7a, 0xbd45, 0x1cc5, 0x0, 0x1);
        gbc.writeMem(0x3cc7, { 0xe9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xba1e, gbc.sp());
        EXPECT(0x1cc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01A3
        gbc.setState(0x2512, 0x4cf0, 0x40d0, 0x6206, 0xfd49, 0x76c5, 0x0, 0x0);
        gbc.writeMem(0x2512, { 0xe9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4cf0, gbc.sp());
        EXPECT(0x76c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01A4
        gbc.setState(0x6f04, 0x49e, 0x1350, 0xc4a2, 0x1247, 0xe35a, 0x1, 0x0);
        gbc.writeMem(0x6f04, { 0xe9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x49e, gbc.sp());
        EXPECT(0xe35a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01A5
        gbc.setState(0x1bc4, 0x3dae, 0xbb50, 0xfca1, 0x7505, 0x1073, 0x1, 0x0);
        gbc.writeMem(0x1bc4, { 0xe9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3dae, gbc.sp());
        EXPECT(0x1073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01A6
        gbc.setState(0xdeb8, 0x1333, 0x3ef0, 0xb861, 0x8472, 0xd0ee, 0x1, 0x0);
        gbc.writeMem(0xdeb8, { 0xe9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1333, gbc.sp());
        EXPECT(0xd0ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xdeb8));
        // E9 01A7
        gbc.setState(0x4c29, 0x4982, 0x1b30, 0xed9d, 0xdeb5, 0x38a1, 0x1, 0x1);
        gbc.writeMem(0x4c29, { 0xe9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4982, gbc.sp());
        EXPECT(0x38a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01A8
        gbc.setState(0x515b, 0xdbb1, 0xde10, 0x7393, 0x1571, 0x9e9e, 0x1, 0x1);
        gbc.writeMem(0x515b, { 0xe9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xdbb1, gbc.sp());
        EXPECT(0x9e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01A9
        gbc.setState(0x1f05, 0xdbee, 0xb370, 0xf1e2, 0xec48, 0x56d5, 0x0, 0x0);
        gbc.writeMem(0x1f05, { 0xe9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdbee, gbc.sp());
        EXPECT(0x56d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01AA
        gbc.setState(0xc1da, 0x9f40, 0x13c0, 0xd2d5, 0x3729, 0xc5b3, 0x0, 0x1);
        gbc.writeMem(0xc1da, { 0xe9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9f40, gbc.sp());
        EXPECT(0xc5b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc1da));
        // E9 01AB
        gbc.setState(0x91b4, 0x4151, 0x6cb0, 0xce0c, 0x81af, 0xc78b, 0x0, 0x0);
        gbc.writeMem(0x91b4, { 0xe9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4151, gbc.sp());
        EXPECT(0xc78b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x91b4));
        // E9 01AC
        gbc.setState(0x5301, 0x706c, 0xb240, 0xf3a4, 0x323e, 0x5a2a, 0x0, 0x1);
        gbc.writeMem(0x5301, { 0xe9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x706c, gbc.sp());
        EXPECT(0x5a2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01AD
        gbc.setState(0x3fc7, 0xd78c, 0x23e0, 0xbfdd, 0xf944, 0x5095, 0x1, 0x1);
        gbc.writeMem(0x3fc7, { 0xe9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd78c, gbc.sp());
        EXPECT(0x5095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01AE
        gbc.setState(0xd979, 0x56a6, 0x1590, 0x8e19, 0x1abd, 0x4336, 0x1, 0x0);
        gbc.writeMem(0xd979, { 0xe9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x56a6, gbc.sp());
        EXPECT(0x4336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd979));
        // E9 01AF
        gbc.setState(0x525e, 0xf0d0, 0xad20, 0x8f08, 0xd942, 0x35fe, 0x0, 0x0);
        gbc.writeMem(0x525e, { 0xe9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf0d0, gbc.sp());
        EXPECT(0x35fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01B0
        gbc.setState(0xd2f8, 0xfaf6, 0xb930, 0x9dd7, 0x7c5e, 0xd4a9, 0x1, 0x1);
        gbc.writeMem(0xd2f8, { 0xe9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xfaf6, gbc.sp());
        EXPECT(0xd4a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd2f8));
        // E9 01B1
        gbc.setState(0xa034, 0xa986, 0xc2d0, 0x94fb, 0x8814, 0xd75f, 0x1, 0x1);
        gbc.writeMem(0xa034, { 0xe9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa986, gbc.sp());
        EXPECT(0xd75f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa034));
        // E9 01B2
        gbc.setState(0xa4f, 0xe82c, 0x8d70, 0x2a24, 0xefe5, 0x57dd, 0x1, 0x0);
        gbc.writeMem(0xa4f, { 0xe9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe82c, gbc.sp());
        EXPECT(0x57dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01B3
        gbc.setState(0x6635, 0x20df, 0x8210, 0xe4e6, 0xcc40, 0x8c2f, 0x0, 0x0);
        gbc.writeMem(0x6635, { 0xe9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x20df, gbc.sp());
        EXPECT(0x8c2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01B4
        gbc.setState(0x237b, 0xe06e, 0xe700, 0x60ee, 0xe3d7, 0x3b69, 0x0, 0x0);
        gbc.writeMem(0x237b, { 0xe9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe06e, gbc.sp());
        EXPECT(0x3b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01B5
        gbc.setState(0x6c61, 0x743d, 0xaa10, 0x4f55, 0x3121, 0xd14e, 0x1, 0x1);
        gbc.writeMem(0x6c61, { 0xe9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x743d, gbc.sp());
        EXPECT(0xd14e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01B6
        gbc.setState(0x13be, 0x4c60, 0xe3d0, 0xed3d, 0x62bf, 0x35e2, 0x1, 0x0);
        gbc.writeMem(0x13be, { 0xe9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4c60, gbc.sp());
        EXPECT(0x35e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01B7
        gbc.setState(0x6ea9, 0x2e81, 0x4930, 0xf527, 0xe1ad, 0x95ad, 0x0, 0x0);
        gbc.writeMem(0x6ea9, { 0xe9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2e81, gbc.sp());
        EXPECT(0x95ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01B8
        gbc.setState(0xcf7b, 0x86b2, 0x66b0, 0xb99b, 0x157e, 0xd30b, 0x0, 0x0);
        gbc.writeMem(0xcf7b, { 0xe9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x86b2, gbc.sp());
        EXPECT(0xd30b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xcf7b));
        // E9 01B9
        gbc.setState(0x52df, 0xc90d, 0xdf40, 0x777c, 0x5180, 0xdc9, 0x1, 0x0);
        gbc.writeMem(0x52df, { 0xe9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc90d, gbc.sp());
        EXPECT(0xdc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01BA
        gbc.setState(0x1614, 0xc766, 0x99d0, 0x80bc, 0x4965, 0x94fd, 0x0, 0x0);
        gbc.writeMem(0x1614, { 0xe9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc766, gbc.sp());
        EXPECT(0x94fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01BB
        gbc.setState(0x1cb3, 0xd532, 0x3450, 0x84cd, 0x91b2, 0x833c, 0x0, 0x0);
        gbc.writeMem(0x1cb3, { 0xe9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd532, gbc.sp());
        EXPECT(0x833c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01BC
        gbc.setState(0x2671, 0xd363, 0xc730, 0x90, 0xbcd5, 0x7df9, 0x1, 0x1);
        gbc.writeMem(0x2671, { 0xe9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd363, gbc.sp());
        EXPECT(0x7df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01BD
        gbc.setState(0x2556, 0xa9d4, 0x48d0, 0x576f, 0xb073, 0xb4f6, 0x1, 0x1);
        gbc.writeMem(0x2556, { 0xe9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa9d4, gbc.sp());
        EXPECT(0xb4f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01BE
        gbc.setState(0xb393, 0xc173, 0x9640, 0xdfdd, 0xed7, 0x56c, 0x0, 0x0);
        gbc.writeMem(0xb393, { 0xe9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc173, gbc.sp());
        EXPECT(0x56c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb393));
        // E9 01BF
        gbc.setState(0x944e, 0x5a81, 0xc6d0, 0x1c1c, 0xb866, 0xa8c5, 0x0, 0x1);
        gbc.writeMem(0x944e, { 0xe9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5a81, gbc.sp());
        EXPECT(0xa8c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x944e));
        // E9 01C0
        gbc.setState(0xd8ac, 0xd18a, 0xec70, 0xddaa, 0x9909, 0x79c, 0x0, 0x1);
        gbc.writeMem(0xd8ac, { 0xe9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd18a, gbc.sp());
        EXPECT(0x79c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd8ac));
        // E9 01C1
        gbc.setState(0xdc04, 0x1af1, 0x9760, 0x1c4c, 0x99f2, 0x90e3, 0x1, 0x1);
        gbc.writeMem(0xdc04, { 0xe9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1af1, gbc.sp());
        EXPECT(0x90e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xdc04));
        // E9 01C2
        gbc.setState(0x58de, 0x548a, 0x48c0, 0xb145, 0x7ea1, 0xfe0f, 0x0, 0x0);
        gbc.writeMem(0x58de, { 0xe9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x548a, gbc.sp());
        EXPECT(0xfe0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01C3
        gbc.setState(0x7b6f, 0x5404, 0xf700, 0x4855, 0x5fe6, 0x95f8, 0x1, 0x1);
        gbc.writeMem(0x7b6f, { 0xe9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5404, gbc.sp());
        EXPECT(0x95f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01C4
        gbc.setState(0xa5d1, 0x66fb, 0x17b0, 0xbf6f, 0xed6, 0xeab0, 0x1, 0x1);
        gbc.writeMem(0xa5d1, { 0xe9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x66fb, gbc.sp());
        EXPECT(0xeab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa5d1));
        // E9 01C5
        gbc.setState(0x95cc, 0xe66b, 0xfe50, 0xed9e, 0xeb40, 0x149c, 0x1, 0x1);
        gbc.writeMem(0x95cc, { 0xe9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe66b, gbc.sp());
        EXPECT(0x149c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x95cc));
        // E9 01C6
        gbc.setState(0x29ae, 0x8de1, 0x4290, 0xeec3, 0xcba5, 0xc8f0, 0x0, 0x0);
        gbc.writeMem(0x29ae, { 0xe9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8de1, gbc.sp());
        EXPECT(0xc8f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01C7
        gbc.setState(0x52a6, 0xeb9, 0x3540, 0x9d73, 0xeebe, 0xd05a, 0x0, 0x0);
        gbc.writeMem(0x52a6, { 0xe9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xeb9, gbc.sp());
        EXPECT(0xd05a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01C8
        gbc.setState(0x2eab, 0xcbe6, 0x58f0, 0x2775, 0xc568, 0x5335, 0x0, 0x0);
        gbc.writeMem(0x2eab, { 0xe9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcbe6, gbc.sp());
        EXPECT(0x5335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01C9
        gbc.setState(0xe3ee, 0xe324, 0xc8f0, 0x6e83, 0x45c4, 0x560c, 0x1, 0x1);
        gbc.writeMem(0xe3ee, { 0xe9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe324, gbc.sp());
        EXPECT(0x560c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe3ee));
        // E9 01CA
        gbc.setState(0xe076, 0x1b05, 0x7cf0, 0x39, 0x571d, 0xf88d, 0x1, 0x0);
        gbc.writeMem(0xe076, { 0xe9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1b05, gbc.sp());
        EXPECT(0xf88d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe076));
        // E9 01CB
        gbc.setState(0x9564, 0xda46, 0x5dd0, 0xbaa4, 0x9a20, 0x8157, 0x1, 0x1);
        gbc.writeMem(0x9564, { 0xe9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xda46, gbc.sp());
        EXPECT(0x8157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9564));
        // E9 01CC
        gbc.setState(0xb501, 0x6dfe, 0xa760, 0x6579, 0xe1ed, 0x2c14, 0x0, 0x0);
        gbc.writeMem(0xb501, { 0xe9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6dfe, gbc.sp());
        EXPECT(0x2c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb501));
        // E9 01CD
        gbc.setState(0x68b6, 0x9229, 0x9dd0, 0x9df9, 0xcb96, 0xf838, 0x0, 0x1);
        gbc.writeMem(0x68b6, { 0xe9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9229, gbc.sp());
        EXPECT(0xf838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01CE
        gbc.setState(0x22ce, 0x6040, 0x9a00, 0x799e, 0x8e45, 0x5a3d, 0x1, 0x0);
        gbc.writeMem(0x22ce, { 0xe9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6040, gbc.sp());
        EXPECT(0x5a3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01CF
        gbc.setState(0x5dfe, 0x470, 0x60c0, 0xa962, 0x2c4c, 0xbd24, 0x0, 0x1);
        gbc.writeMem(0x5dfe, { 0xe9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x470, gbc.sp());
        EXPECT(0xbd24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01D0
        gbc.setState(0x2e6c, 0xddea, 0x28d0, 0x312e, 0xe0ba, 0x10bf, 0x1, 0x0);
        gbc.writeMem(0x2e6c, { 0xe9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xddea, gbc.sp());
        EXPECT(0x10bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01D1
        gbc.setState(0xd7f3, 0x148c, 0x59f0, 0x4039, 0x42dd, 0x1b35, 0x0, 0x0);
        gbc.writeMem(0xd7f3, { 0xe9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x148c, gbc.sp());
        EXPECT(0x1b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd7f3));
        // E9 01D2
        gbc.setState(0x9717, 0xc943, 0xe570, 0xa652, 0x6af0, 0xf66c, 0x1, 0x1);
        gbc.writeMem(0x9717, { 0xe9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc943, gbc.sp());
        EXPECT(0xf66c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9717));
        // E9 01D3
        gbc.setState(0x7cef, 0x2da6, 0xae70, 0x7523, 0x3915, 0x9b24, 0x1, 0x0);
        gbc.writeMem(0x7cef, { 0xe9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2da6, gbc.sp());
        EXPECT(0x9b24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01D4
        gbc.setState(0x9782, 0x280d, 0x51e0, 0x2236, 0xe2c8, 0x7ab0, 0x1, 0x0);
        gbc.writeMem(0x9782, { 0xe9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x280d, gbc.sp());
        EXPECT(0x7ab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9782));
        // E9 01D5
        gbc.setState(0x3b64, 0xb367, 0x7fb0, 0xd735, 0x1205, 0xe0b7, 0x1, 0x0);
        gbc.writeMem(0x3b64, { 0xe9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb367, gbc.sp());
        EXPECT(0xe0b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01D6
        gbc.setState(0xbca3, 0x48b6, 0xe50, 0x1215, 0x9595, 0x514b, 0x0, 0x1);
        gbc.writeMem(0xbca3, { 0xe9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x48b6, gbc.sp());
        EXPECT(0x514b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xbca3));
        // E9 01D7
        gbc.setState(0x151a, 0xe300, 0xf1b0, 0xa83b, 0xc887, 0x49e1, 0x0, 0x0);
        gbc.writeMem(0x151a, { 0xe9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe300, gbc.sp());
        EXPECT(0x49e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01D8
        gbc.setState(0x2fe6, 0x9603, 0x3790, 0x6c9a, 0x2b49, 0xba6f, 0x0, 0x0);
        gbc.writeMem(0x2fe6, { 0xe9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9603, gbc.sp());
        EXPECT(0xba6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01D9
        gbc.setState(0x3eeb, 0x4262, 0xcfb0, 0x660f, 0xfc46, 0xb13, 0x1, 0x1);
        gbc.writeMem(0x3eeb, { 0xe9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4262, gbc.sp());
        EXPECT(0xb13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01DA
        gbc.setState(0xe804, 0xe16, 0x2940, 0xec0c, 0x699, 0x996c, 0x0, 0x0);
        gbc.writeMem(0xe804, { 0xe9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe16, gbc.sp());
        EXPECT(0x996c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe804));
        // E9 01DB
        gbc.setState(0x95c9, 0x6541, 0xb2a0, 0x1369, 0xc854, 0xf8df, 0x0, 0x0);
        gbc.writeMem(0x95c9, { 0xe9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6541, gbc.sp());
        EXPECT(0xf8df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x95c9));
        // E9 01DC
        gbc.setState(0x61c1, 0xb26d, 0x2ed0, 0x9166, 0xb7a8, 0x4c1e, 0x1, 0x0);
        gbc.writeMem(0x61c1, { 0xe9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb26d, gbc.sp());
        EXPECT(0x4c1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01DD
        gbc.setState(0x6544, 0xe66a, 0xff70, 0xee47, 0xb7b8, 0xc6fa, 0x1, 0x1);
        gbc.writeMem(0x6544, { 0xe9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe66a, gbc.sp());
        EXPECT(0xc6fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01DE
        gbc.setState(0x7988, 0x12bb, 0xb580, 0xa0fa, 0x10c4, 0xdb42, 0x0, 0x1);
        gbc.writeMem(0x7988, { 0xe9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x12bb, gbc.sp());
        EXPECT(0xdb42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01DF
        gbc.setState(0x5889, 0xb471, 0x8ac0, 0x3095, 0x20ef, 0x405f, 0x1, 0x1);
        gbc.writeMem(0x5889, { 0xe9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb471, gbc.sp());
        EXPECT(0x405f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01E0
        gbc.setState(0x2ac2, 0x7521, 0x8f40, 0xa6d4, 0x8280, 0x89d, 0x0, 0x0);
        gbc.writeMem(0x2ac2, { 0xe9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7521, gbc.sp());
        EXPECT(0x89d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01E1
        gbc.setState(0x7004, 0xc493, 0x9da0, 0xd25e, 0x9ce1, 0x6dac, 0x1, 0x1);
        gbc.writeMem(0x7004, { 0xe9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc493, gbc.sp());
        EXPECT(0x6dac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01E2
        gbc.setState(0x24d5, 0xc5aa, 0x30e0, 0x8f14, 0x8715, 0x972c, 0x0, 0x1);
        gbc.writeMem(0x24d5, { 0xe9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc5aa, gbc.sp());
        EXPECT(0x972c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01E3
        gbc.setState(0x282e, 0xe31d, 0x82f0, 0x48e0, 0x3080, 0xc22b, 0x1, 0x1);
        gbc.writeMem(0x282e, { 0xe9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe31d, gbc.sp());
        EXPECT(0xc22b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01E4
        gbc.setState(0x4650, 0x3b55, 0xced0, 0x243c, 0x5c29, 0x2051, 0x0, 0x0);
        gbc.writeMem(0x4650, { 0xe9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3b55, gbc.sp());
        EXPECT(0x2051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01E5
        gbc.setState(0xc167, 0xfa4d, 0xfa30, 0x3d99, 0xb243, 0xa4cc, 0x1, 0x0);
        gbc.writeMem(0xc167, { 0xe9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xfa4d, gbc.sp());
        EXPECT(0xa4cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc167));
        // E9 01E6
        gbc.setState(0x112e, 0xfb84, 0x2860, 0x26c0, 0x3cd3, 0x24e4, 0x1, 0x1);
        gbc.writeMem(0x112e, { 0xe9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfb84, gbc.sp());
        EXPECT(0x24e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01E7
        gbc.setState(0xd1fa, 0xffd7, 0x7a80, 0x6155, 0x9714, 0xcb4b, 0x1, 0x0);
        gbc.writeMem(0xd1fa, { 0xe9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xffd7, gbc.sp());
        EXPECT(0xcb4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd1fa));
        // E9 01E8
        gbc.setState(0xb14b, 0x9e22, 0x7f30, 0x3ea5, 0xeab7, 0x3bb2, 0x1, 0x1);
        gbc.writeMem(0xb14b, { 0xe9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9e22, gbc.sp());
        EXPECT(0x3bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb14b));
        // E9 01E9
        gbc.setState(0xce96, 0xb122, 0xe8e0, 0xda90, 0x54db, 0x3a12, 0x0, 0x0);
        gbc.writeMem(0xce96, { 0xe9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb122, gbc.sp());
        EXPECT(0x3a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xce96));
        // E9 01EA
        gbc.setState(0x7b98, 0xcc1f, 0xa880, 0xa7, 0x5490, 0x26e9, 0x1, 0x0);
        gbc.writeMem(0x7b98, { 0xe9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcc1f, gbc.sp());
        EXPECT(0x26e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01EB
        gbc.setState(0x2f46, 0xe9a7, 0x0, 0x946, 0xb1aa, 0xef6, 0x0, 0x1);
        gbc.writeMem(0x2f46, { 0xe9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe9a7, gbc.sp());
        EXPECT(0xef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01EC
        gbc.setState(0x4402, 0xa329, 0x62c0, 0xca7c, 0x736, 0xc1aa, 0x1, 0x1);
        gbc.writeMem(0x4402, { 0xe9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa329, gbc.sp());
        EXPECT(0xc1aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01EE
        gbc.setState(0x7152, 0xe068, 0x9b80, 0xb83f, 0x8277, 0xc040, 0x1, 0x1);
        gbc.writeMem(0x7152, { 0xe9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe068, gbc.sp());
        EXPECT(0xc040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01EF
        gbc.setState(0x29ab, 0x4c0f, 0x9a70, 0xc137, 0x2283, 0xfc4c, 0x1, 0x1);
        gbc.writeMem(0x29ab, { 0xe9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4c0f, gbc.sp());
        EXPECT(0xfc4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01F0
        gbc.setState(0xd60, 0x6603, 0xa630, 0x11d2, 0x7d95, 0xa79c, 0x1, 0x1);
        gbc.writeMem(0xd60, { 0xe9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6603, gbc.sp());
        EXPECT(0xa79c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01F1
        gbc.setState(0x8458, 0x2d13, 0xa0a0, 0x4103, 0x1eaf, 0x2475, 0x1, 0x0);
        gbc.writeMem(0x8458, { 0xe9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2d13, gbc.sp());
        EXPECT(0x2475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8458));
        // E9 01F2
        gbc.setState(0x55a4, 0xec0b, 0x3d70, 0x6ddf, 0xa833, 0xa0d6, 0x1, 0x1);
        gbc.writeMem(0x55a4, { 0xe9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xec0b, gbc.sp());
        EXPECT(0xa0d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01F3
        gbc.setState(0x992a, 0x5ae7, 0xae90, 0xc43d, 0x7097, 0x3b43, 0x1, 0x1);
        gbc.writeMem(0x992a, { 0xe9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5ae7, gbc.sp());
        EXPECT(0x3b43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x992a));
        // E9 01F4
        gbc.setState(0xa0bf, 0xa1d9, 0x58e0, 0x61c7, 0x39ec, 0x5f62, 0x1, 0x0);
        gbc.writeMem(0xa0bf, { 0xe9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa1d9, gbc.sp());
        EXPECT(0x5f62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa0bf));
        // E9 01F5
        gbc.setState(0x3344, 0x8e18, 0xadc0, 0x4497, 0xc897, 0xb063, 0x1, 0x1);
        gbc.writeMem(0x3344, { 0xe9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8e18, gbc.sp());
        EXPECT(0xb063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01F6
        gbc.setState(0x887a, 0x3d83, 0x9d30, 0x72ce, 0x3c9a, 0x6ed5, 0x0, 0x0);
        gbc.writeMem(0x887a, { 0xe9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3d83, gbc.sp());
        EXPECT(0x6ed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x887a));
        // E9 01F7
        gbc.setState(0x96c2, 0xbb07, 0xb8a0, 0x572e, 0x293f, 0xd86d, 0x0, 0x0);
        gbc.writeMem(0x96c2, { 0xe9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xbb07, gbc.sp());
        EXPECT(0xd86d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x96c2));
        // E9 01F8
        gbc.setState(0xeefd, 0xb051, 0x37e0, 0xff01, 0x866c, 0x83e5, 0x0, 0x1);
        gbc.writeMem(0xeefd, { 0xe9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb051, gbc.sp());
        EXPECT(0x83e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xeefd));
        // E9 01F9
        gbc.setState(0x3f18, 0x965, 0x2780, 0x4ab4, 0xb84e, 0x3385, 0x0, 0x0);
        gbc.writeMem(0x3f18, { 0xe9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x965, gbc.sp());
        EXPECT(0x3385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01FA
        gbc.setState(0xd57c, 0xf603, 0xa410, 0x2eda, 0xb30f, 0x541d, 0x0, 0x1);
        gbc.writeMem(0xd57c, { 0xe9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf603, gbc.sp());
        EXPECT(0x541d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd57c));
        // E9 01FB
        gbc.setState(0x1f8e, 0x9581, 0xc2d0, 0x58b8, 0x1c78, 0x4f68, 0x0, 0x0);
        gbc.writeMem(0x1f8e, { 0xe9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9581, gbc.sp());
        EXPECT(0x4f68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 01FC
        gbc.setState(0xb3b1, 0x27ab, 0xfa00, 0xf16a, 0xb7f6, 0x577b, 0x1, 0x0);
        gbc.writeMem(0xb3b1, { 0xe9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x27ab, gbc.sp());
        EXPECT(0x577b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb3b1));
        // E9 01FD
        gbc.setState(0xa8a1, 0xa13c, 0xd20, 0x3859, 0xaf2, 0x8b7, 0x0, 0x1);
        gbc.writeMem(0xa8a1, { 0xe9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa13c, gbc.sp());
        EXPECT(0x8b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa8a1));
        // E9 01FE
        gbc.setState(0x4de4, 0x694c, 0x3a20, 0x119f, 0x612, 0x9e3c, 0x1, 0x1);
        gbc.writeMem(0x4de4, { 0xe9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x694c, gbc.sp());
        EXPECT(0x9e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 01FF
        gbc.setState(0x887f, 0xcea, 0x99b0, 0x2ec2, 0x3e87, 0xf94a, 0x0, 0x0);
        gbc.writeMem(0x887f, { 0xe9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcea, gbc.sp());
        EXPECT(0xf94a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x887f));
        // E9 0200
        gbc.setState(0xebfa, 0x7257, 0x8830, 0x23f0, 0x22d8, 0xa4b0, 0x1, 0x1);
        gbc.writeMem(0xebfa, { 0xe9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7257, gbc.sp());
        EXPECT(0xa4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xebfa));
        // E9 0201
        gbc.setState(0x6437, 0xa010, 0x3190, 0x4a6b, 0xc74a, 0x6d7a, 0x1, 0x1);
        gbc.writeMem(0x6437, { 0xe9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa010, gbc.sp());
        EXPECT(0x6d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0202
        gbc.setState(0xc3ad, 0x1aca, 0x7490, 0x476b, 0x8272, 0xd8e9, 0x0, 0x1);
        gbc.writeMem(0xc3ad, { 0xe9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1aca, gbc.sp());
        EXPECT(0xd8e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc3ad));
        // E9 0203
        gbc.setState(0x1e0b, 0x6016, 0x4800, 0xfb29, 0xbfe4, 0xb7, 0x0, 0x0);
        gbc.writeMem(0x1e0b, { 0xe9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6016, gbc.sp());
        EXPECT(0xb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0204
        gbc.setState(0x399a, 0x15b0, 0x3720, 0x5baf, 0x938f, 0x1b30, 0x0, 0x1);
        gbc.writeMem(0x399a, { 0xe9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x15b0, gbc.sp());
        EXPECT(0x1b30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0205
        gbc.setState(0x55b9, 0x41f7, 0x7fd0, 0x17e0, 0xea29, 0xde2d, 0x0, 0x0);
        gbc.writeMem(0x55b9, { 0xe9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x41f7, gbc.sp());
        EXPECT(0xde2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0206
        gbc.setState(0x151c, 0x28cd, 0x4fb0, 0x3649, 0x4b6c, 0x1e45, 0x0, 0x1);
        gbc.writeMem(0x151c, { 0xe9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x28cd, gbc.sp());
        EXPECT(0x1e45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0208
        gbc.setState(0x4fba, 0x3e53, 0xcf60, 0xcb9, 0x523b, 0xb333, 0x1, 0x0);
        gbc.writeMem(0x4fba, { 0xe9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3e53, gbc.sp());
        EXPECT(0xb333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0209
        gbc.setState(0x2a9e, 0x4f43, 0x3d80, 0x5946, 0x52e6, 0xce0c, 0x1, 0x0);
        gbc.writeMem(0x2a9e, { 0xe9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4f43, gbc.sp());
        EXPECT(0xce0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 020A
        gbc.setState(0x76, 0x400b, 0xdf40, 0x1449, 0xe4a4, 0x1638, 0x1, 0x0);
        gbc.writeMem(0x76, { 0xe9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x400b, gbc.sp());
        EXPECT(0x1638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 020B
        gbc.setState(0xaae, 0x7e09, 0x3e30, 0x4bb9, 0x8d28, 0xd51c, 0x0, 0x1);
        gbc.writeMem(0xaae, { 0xe9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7e09, gbc.sp());
        EXPECT(0xd51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 020C
        gbc.setState(0x6396, 0xe7a6, 0x180, 0x29c, 0x7a20, 0xf0d5, 0x0, 0x1);
        gbc.writeMem(0x6396, { 0xe9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe7a6, gbc.sp());
        EXPECT(0xf0d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 020D
        gbc.setState(0xaf9e, 0x9a3a, 0x1ea0, 0xab21, 0x7071, 0x7607, 0x0, 0x0);
        gbc.writeMem(0xaf9e, { 0xe9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9a3a, gbc.sp());
        EXPECT(0x7607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xaf9e));
        // E9 020E
        gbc.setState(0xe13e, 0x54ff, 0xa900, 0xe607, 0xe4c0, 0x3e0f, 0x1, 0x1);
        gbc.writeMem(0xe13e, { 0xe9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x54ff, gbc.sp());
        EXPECT(0x3e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe13e));
        // E9 020F
        gbc.setState(0x6a7b, 0x787b, 0x1560, 0x7975, 0xa9fe, 0x952c, 0x1, 0x1);
        gbc.writeMem(0x6a7b, { 0xe9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x787b, gbc.sp());
        EXPECT(0x952c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0210
        gbc.setState(0x17a9, 0xefd7, 0x1e20, 0x7cd7, 0x932, 0x63d7, 0x0, 0x0);
        gbc.writeMem(0x17a9, { 0xe9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xefd7, gbc.sp());
        EXPECT(0x63d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0211
        gbc.setState(0x9cf6, 0xb52a, 0xb8a0, 0x68b, 0x4d92, 0x6678, 0x1, 0x0);
        gbc.writeMem(0x9cf6, { 0xe9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb52a, gbc.sp());
        EXPECT(0x6678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9cf6));
        // E9 0212
        gbc.setState(0xee09, 0x373f, 0x3460, 0xa259, 0x369a, 0x2025, 0x0, 0x1);
        gbc.writeMem(0xee09, { 0xe9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x373f, gbc.sp());
        EXPECT(0x2025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xee09));
        // E9 0213
        gbc.setState(0x866f, 0xf2be, 0x7eb0, 0xea8a, 0xf707, 0xdb70, 0x1, 0x0);
        gbc.writeMem(0x866f, { 0xe9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf2be, gbc.sp());
        EXPECT(0xdb70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x866f));
        // E9 0214
        gbc.setState(0x91bd, 0xfca1, 0x8160, 0x39d7, 0xcece, 0x754a, 0x0, 0x0);
        gbc.writeMem(0x91bd, { 0xe9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfca1, gbc.sp());
        EXPECT(0x754a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x91bd));
        // E9 0215
        gbc.setState(0xb1a7, 0xf9ac, 0x9b10, 0x4d61, 0x3234, 0x242e, 0x1, 0x1);
        gbc.writeMem(0xb1a7, { 0xe9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf9ac, gbc.sp());
        EXPECT(0x242e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb1a7));
        // E9 0216
        gbc.setState(0x61e9, 0xb65c, 0x1cc0, 0x85a0, 0xb0b0, 0x3b58, 0x1, 0x0);
        gbc.writeMem(0x61e9, { 0xe9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb65c, gbc.sp());
        EXPECT(0x3b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0217
        gbc.setState(0x2fb8, 0x936a, 0x3650, 0x9836, 0xcd14, 0x34d0, 0x0, 0x1);
        gbc.writeMem(0x2fb8, { 0xe9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x936a, gbc.sp());
        EXPECT(0x34d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0218
        gbc.setState(0xeac2, 0xec8f, 0x7ed0, 0x391, 0x74cf, 0x3acb, 0x0, 0x0);
        gbc.writeMem(0xeac2, { 0xe9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xec8f, gbc.sp());
        EXPECT(0x3acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xeac2));
        // E9 0219
        gbc.setState(0x3aac, 0x350f, 0x4160, 0x25b1, 0x3129, 0x1419, 0x0, 0x1);
        gbc.writeMem(0x3aac, { 0xe9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x350f, gbc.sp());
        EXPECT(0x1419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 021A
        gbc.setState(0x5d2c, 0x6ab6, 0xc8f0, 0x955e, 0x99c4, 0xe064, 0x1, 0x1);
        gbc.writeMem(0x5d2c, { 0xe9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6ab6, gbc.sp());
        EXPECT(0xe064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 021B
        gbc.setState(0x58e, 0x2fe1, 0xc00, 0xf210, 0xa0fb, 0xde3, 0x0, 0x1);
        gbc.writeMem(0x58e, { 0xe9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2fe1, gbc.sp());
        EXPECT(0xde3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 021C
        gbc.setState(0x66a, 0x925b, 0x5790, 0x1ace, 0x44c1, 0x46d1, 0x1, 0x1);
        gbc.writeMem(0x66a, { 0xe9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x925b, gbc.sp());
        EXPECT(0x46d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 021D
        gbc.setState(0x1a7e, 0xd166, 0x7840, 0xc8ee, 0x1793, 0x9a92, 0x0, 0x0);
        gbc.writeMem(0x1a7e, { 0xe9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd166, gbc.sp());
        EXPECT(0x9a92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 021E
        gbc.setState(0x54f6, 0xc4d8, 0x8e0, 0x16e, 0x1c16, 0x34d2, 0x0, 0x1);
        gbc.writeMem(0x54f6, { 0xe9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc4d8, gbc.sp());
        EXPECT(0x34d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 021F
        gbc.setState(0xb72a, 0x8a08, 0x3900, 0x6a3, 0x1042, 0xd3a1, 0x1, 0x1);
        gbc.writeMem(0xb72a, { 0xe9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8a08, gbc.sp());
        EXPECT(0xd3a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb72a));
        // E9 0220
        gbc.setState(0x4713, 0xbf8c, 0xc2f0, 0x9fe5, 0x64e3, 0x57fa, 0x1, 0x1);
        gbc.writeMem(0x4713, { 0xe9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xbf8c, gbc.sp());
        EXPECT(0x57fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0221
        gbc.setState(0x168e, 0x3e40, 0x4ef0, 0x4b3c, 0x5374, 0x1ca7, 0x0, 0x0);
        gbc.writeMem(0x168e, { 0xe9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3e40, gbc.sp());
        EXPECT(0x1ca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0222
        gbc.setState(0xa240, 0x80e, 0x6d40, 0xaf49, 0x595, 0xbdd7, 0x0, 0x1);
        gbc.writeMem(0xa240, { 0xe9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x80e, gbc.sp());
        EXPECT(0xbdd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa240));
        // E9 0223
        gbc.setState(0x827d, 0x600, 0x2380, 0xcee1, 0xd684, 0x4b30, 0x0, 0x0);
        gbc.writeMem(0x827d, { 0xe9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x600, gbc.sp());
        EXPECT(0x4b30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x827d));
        // E9 0224
        gbc.setState(0x2ecb, 0x23ea, 0xc240, 0x84cd, 0x8fc6, 0xb197, 0x0, 0x1);
        gbc.writeMem(0x2ecb, { 0xe9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x23ea, gbc.sp());
        EXPECT(0xb197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0225
        gbc.setState(0x8225, 0x8c3, 0x6ff0, 0x66f6, 0xa0fd, 0x53fd, 0x1, 0x0);
        gbc.writeMem(0x8225, { 0xe9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8c3, gbc.sp());
        EXPECT(0x53fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8225));
        // E9 0226
        gbc.setState(0xe11, 0x6af3, 0x2f40, 0x25ef, 0x2419, 0x3402, 0x1, 0x0);
        gbc.writeMem(0xe11, { 0xe9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6af3, gbc.sp());
        EXPECT(0x3402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0227
        gbc.setState(0xd369, 0x9bca, 0xa440, 0x3720, 0x6c6a, 0x6dce, 0x1, 0x0);
        gbc.writeMem(0xd369, { 0xe9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9bca, gbc.sp());
        EXPECT(0x6dce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd369));
        // E9 0228
        gbc.setState(0xca62, 0x3103, 0xdd70, 0x4fdd, 0x64e5, 0xf5a9, 0x1, 0x1);
        gbc.writeMem(0xca62, { 0xe9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3103, gbc.sp());
        EXPECT(0xf5a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xca62));
        // E9 0229
        gbc.setState(0xdb5c, 0x116c, 0x5890, 0x2b35, 0x3a5b, 0xb7b8, 0x1, 0x0);
        gbc.writeMem(0xdb5c, { 0xe9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x116c, gbc.sp());
        EXPECT(0xb7b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xdb5c));
        // E9 022A
        gbc.setState(0x4593, 0x28d4, 0x1ce0, 0xa41b, 0x6f72, 0xdc1b, 0x0, 0x0);
        gbc.writeMem(0x4593, { 0xe9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x28d4, gbc.sp());
        EXPECT(0xdc1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 022B
        gbc.setState(0xc867, 0xaf80, 0x97e0, 0xd8b, 0x2ece, 0xcd7, 0x0, 0x0);
        gbc.writeMem(0xc867, { 0xe9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xaf80, gbc.sp());
        EXPECT(0xcd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc867));
        // E9 022C
        gbc.setState(0xbd95, 0x4bb, 0xb0b0, 0x48cf, 0x48a, 0xfcea, 0x1, 0x1);
        gbc.writeMem(0xbd95, { 0xe9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4bb, gbc.sp());
        EXPECT(0xfcea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xbd95));
        // E9 022D
        gbc.setState(0x6a7e, 0xae38, 0x8e90, 0xafd6, 0x38e7, 0x4305, 0x0, 0x1);
        gbc.writeMem(0x6a7e, { 0xe9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xae38, gbc.sp());
        EXPECT(0x4305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 022E
        gbc.setState(0x3a44, 0x1e27, 0x6ff0, 0x401a, 0xee15, 0x67cd, 0x1, 0x1);
        gbc.writeMem(0x3a44, { 0xe9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1e27, gbc.sp());
        EXPECT(0x67cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 022F
        gbc.setState(0xebf2, 0x84d2, 0xd240, 0x13b3, 0x6bdf, 0x6cc3, 0x1, 0x1);
        gbc.writeMem(0xebf2, { 0xe9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x84d2, gbc.sp());
        EXPECT(0x6cc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xebf2));
        // E9 0230
        gbc.setState(0xab3d, 0x200c, 0xaff0, 0x807e, 0x475f, 0x54d8, 0x0, 0x0);
        gbc.writeMem(0xab3d, { 0xe9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x200c, gbc.sp());
        EXPECT(0x54d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xab3d));
        // E9 0231
        gbc.setState(0xe385, 0xa95, 0x1540, 0x55bc, 0x48b3, 0x646f, 0x1, 0x1);
        gbc.writeMem(0xe385, { 0xe9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa95, gbc.sp());
        EXPECT(0x646f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe385));
        // E9 0232
        gbc.setState(0x787, 0x4005, 0x6bd0, 0x5f65, 0xdec, 0x2ea4, 0x1, 0x0);
        gbc.writeMem(0x787, { 0xe9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4005, gbc.sp());
        EXPECT(0x2ea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0233
        gbc.setState(0xae19, 0xa3d8, 0xc1a0, 0xdfde, 0xc1d5, 0xa033, 0x0, 0x0);
        gbc.writeMem(0xae19, { 0xe9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa3d8, gbc.sp());
        EXPECT(0xa033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xae19));
        // E9 0234
        gbc.setState(0x3d00, 0xfdd9, 0x43b0, 0xceea, 0x4ffe, 0x791c, 0x1, 0x1);
        gbc.writeMem(0x3d00, { 0xe9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfdd9, gbc.sp());
        EXPECT(0x791c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0235
        gbc.setState(0xe2b9, 0x8372, 0x21d0, 0x4264, 0x25de, 0x6223, 0x0, 0x0);
        gbc.writeMem(0xe2b9, { 0xe9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8372, gbc.sp());
        EXPECT(0x6223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe2b9));
        // E9 0236
        gbc.setState(0x9d20, 0x9b16, 0x1ea0, 0x4684, 0x1866, 0xe503, 0x0, 0x0);
        gbc.writeMem(0x9d20, { 0xe9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9b16, gbc.sp());
        EXPECT(0xe503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9d20));
        // E9 0237
        gbc.setState(0x2d6b, 0xaa90, 0x620, 0x4dfb, 0x75c5, 0xac42, 0x1, 0x0);
        gbc.writeMem(0x2d6b, { 0xe9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xaa90, gbc.sp());
        EXPECT(0xac42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0238
        gbc.setState(0x3dc5, 0x19cc, 0x9d70, 0x251, 0x6fad, 0xb549, 0x0, 0x0);
        gbc.writeMem(0x3dc5, { 0xe9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x19cc, gbc.sp());
        EXPECT(0xb549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0239
        gbc.setState(0x295c, 0x6566, 0x7d30, 0xb41, 0x1e23, 0x4f7e, 0x1, 0x0);
        gbc.writeMem(0x295c, { 0xe9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6566, gbc.sp());
        EXPECT(0x4f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 023A
        gbc.setState(0x6b20, 0x4fff, 0xa60, 0x5346, 0x3cf7, 0xc5ae, 0x1, 0x0);
        gbc.writeMem(0x6b20, { 0xe9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4fff, gbc.sp());
        EXPECT(0xc5ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 023B
        gbc.setState(0x33b9, 0xfcd0, 0xe540, 0xed2e, 0x897, 0x7a40, 0x0, 0x1);
        gbc.writeMem(0x33b9, { 0xe9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xfcd0, gbc.sp());
        EXPECT(0x7a40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 023C
        gbc.setState(0x262a, 0xfa76, 0xc360, 0x7d84, 0xc8d1, 0xb106, 0x1, 0x0);
        gbc.writeMem(0x262a, { 0xe9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfa76, gbc.sp());
        EXPECT(0xb106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 023D
        gbc.setState(0x4669, 0x224, 0xe290, 0xb380, 0xdaa8, 0xb71e, 0x0, 0x1);
        gbc.writeMem(0x4669, { 0xe9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x224, gbc.sp());
        EXPECT(0xb71e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 023E
        gbc.setState(0x6b5b, 0x4c11, 0xb4b0, 0xd036, 0x12d6, 0x3526, 0x1, 0x0);
        gbc.writeMem(0x6b5b, { 0xe9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4c11, gbc.sp());
        EXPECT(0x3526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0240
        gbc.setState(0x91b, 0xad0c, 0x4d0, 0x434a, 0x97f, 0xa80f, 0x1, 0x1);
        gbc.writeMem(0x91b, { 0xe9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xad0c, gbc.sp());
        EXPECT(0xa80f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0241
        gbc.setState(0xb050, 0xe32f, 0x83b0, 0xe12c, 0x5ae2, 0x2cd5, 0x1, 0x0);
        gbc.writeMem(0xb050, { 0xe9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe32f, gbc.sp());
        EXPECT(0x2cd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb050));
        // E9 0242
        gbc.setState(0x33d, 0x9742, 0xa0, 0xcc6e, 0x8783, 0x4e8d, 0x1, 0x1);
        gbc.writeMem(0x33d, { 0xe9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9742, gbc.sp());
        EXPECT(0x4e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0243
        gbc.setState(0x4356, 0x196d, 0x1f50, 0x5243, 0x49ca, 0x52a3, 0x0, 0x0);
        gbc.writeMem(0x4356, { 0xe9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x196d, gbc.sp());
        EXPECT(0x52a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0244
        gbc.setState(0x3100, 0xe029, 0xbdc0, 0x1531, 0xc104, 0xf211, 0x0, 0x0);
        gbc.writeMem(0x3100, { 0xe9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe029, gbc.sp());
        EXPECT(0xf211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0245
        gbc.setState(0x87c5, 0x97e1, 0x570, 0xb24f, 0x7bc9, 0x215, 0x1, 0x1);
        gbc.writeMem(0x87c5, { 0xe9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x97e1, gbc.sp());
        EXPECT(0x215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x87c5));
        // E9 0246
        gbc.setState(0x76b, 0x6678, 0x3440, 0xc800, 0x516c, 0xe55, 0x0, 0x0);
        gbc.writeMem(0x76b, { 0xe9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6678, gbc.sp());
        EXPECT(0xe55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0247
        gbc.setState(0x2a60, 0x2a30, 0xf200, 0xf74d, 0x2c8b, 0x2c97, 0x1, 0x0);
        gbc.writeMem(0x2a60, { 0xe9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2a30, gbc.sp());
        EXPECT(0x2c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0248
        gbc.setState(0x1ed6, 0xf156, 0x8d60, 0x1137, 0xe361, 0x44d4, 0x0, 0x0);
        gbc.writeMem(0x1ed6, { 0xe9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf156, gbc.sp());
        EXPECT(0x44d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0249
        gbc.setState(0x7d60, 0xed0f, 0x8420, 0xe1b8, 0x3c37, 0x14ff, 0x0, 0x0);
        gbc.writeMem(0x7d60, { 0xe9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xed0f, gbc.sp());
        EXPECT(0x14ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 024A
        gbc.setState(0x7bf2, 0xa999, 0xb0c0, 0x4b8, 0x2b92, 0x2579, 0x1, 0x0);
        gbc.writeMem(0x7bf2, { 0xe9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa999, gbc.sp());
        EXPECT(0x2579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 024B
        gbc.setState(0x1e2e, 0xa7d4, 0x9620, 0x1d63, 0x88a8, 0xba52, 0x1, 0x1);
        gbc.writeMem(0x1e2e, { 0xe9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa7d4, gbc.sp());
        EXPECT(0xba52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 024C
        gbc.setState(0xd197, 0x51a8, 0x9550, 0x2950, 0xeeb, 0x98ce, 0x1, 0x0);
        gbc.writeMem(0xd197, { 0xe9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x51a8, gbc.sp());
        EXPECT(0x98ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd197));
        // E9 024D
        gbc.setState(0x6d0d, 0x2b59, 0xa5e0, 0x546b, 0x2f29, 0xdc84, 0x0, 0x0);
        gbc.writeMem(0x6d0d, { 0xe9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2b59, gbc.sp());
        EXPECT(0xdc84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 024F
        gbc.setState(0x4a44, 0x6a0e, 0x3180, 0x8dd9, 0x8e68, 0x79a8, 0x1, 0x1);
        gbc.writeMem(0x4a44, { 0xe9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6a0e, gbc.sp());
        EXPECT(0x79a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0250
        gbc.setState(0xa370, 0xab3, 0x5400, 0xa443, 0x4890, 0xd6c5, 0x1, 0x1);
        gbc.writeMem(0xa370, { 0xe9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xab3, gbc.sp());
        EXPECT(0xd6c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa370));
        // E9 0251
        gbc.setState(0xa52c, 0xdaf0, 0xa470, 0x6819, 0xb802, 0x5de5, 0x1, 0x0);
        gbc.writeMem(0xa52c, { 0xe9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xdaf0, gbc.sp());
        EXPECT(0x5de5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa52c));
        // E9 0252
        gbc.setState(0x74da, 0x3790, 0xc140, 0xea0f, 0xacc1, 0x55fa, 0x1, 0x1);
        gbc.writeMem(0x74da, { 0xe9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3790, gbc.sp());
        EXPECT(0x55fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0253
        gbc.setState(0x62f4, 0x111f, 0x2d50, 0xe8e8, 0xc2f6, 0xc4d3, 0x0, 0x0);
        gbc.writeMem(0x62f4, { 0xe9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x111f, gbc.sp());
        EXPECT(0xc4d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0254
        gbc.setState(0x2789, 0xd2e, 0x40b0, 0xd5bb, 0xa41b, 0xabe, 0x0, 0x1);
        gbc.writeMem(0x2789, { 0xe9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd2e, gbc.sp());
        EXPECT(0xabe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0255
        gbc.setState(0xa7b1, 0x10c6, 0xf4f0, 0xd45f, 0xc9d9, 0x940b, 0x0, 0x1);
        gbc.writeMem(0xa7b1, { 0xe9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x10c6, gbc.sp());
        EXPECT(0x940b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa7b1));
        // E9 0256
        gbc.setState(0x47cd, 0x1c63, 0xe080, 0x892d, 0x6534, 0x9230, 0x1, 0x0);
        gbc.writeMem(0x47cd, { 0xe9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1c63, gbc.sp());
        EXPECT(0x9230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0257
        gbc.setState(0x271a, 0x8375, 0x61f0, 0xd3dc, 0x94d2, 0x8a4c, 0x1, 0x0);
        gbc.writeMem(0x271a, { 0xe9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8375, gbc.sp());
        EXPECT(0x8a4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0259
        gbc.setState(0xe876, 0xccc7, 0xd280, 0xd3bb, 0x16ec, 0x5bbe, 0x1, 0x0);
        gbc.writeMem(0xe876, { 0xe9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xccc7, gbc.sp());
        EXPECT(0x5bbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe876));
        // E9 025A
        gbc.setState(0x54e, 0xbdb, 0xb9a0, 0x7d78, 0x58be, 0x7377, 0x0, 0x1);
        gbc.writeMem(0x54e, { 0xe9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xbdb, gbc.sp());
        EXPECT(0x7377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 025B
        gbc.setState(0x87d6, 0x6b89, 0xc980, 0x93fb, 0xccbf, 0x4f47, 0x1, 0x1);
        gbc.writeMem(0x87d6, { 0xe9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6b89, gbc.sp());
        EXPECT(0x4f47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x87d6));
        // E9 025C
        gbc.setState(0xe7ff, 0xfe4d, 0xa930, 0x4cf0, 0x41d0, 0xf35e, 0x0, 0x0);
        gbc.writeMem(0xe7ff, { 0xe9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xfe4d, gbc.sp());
        EXPECT(0xf35e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe7ff));
        // E9 025D
        gbc.setState(0x97d1, 0x9b10, 0xfa70, 0xce56, 0xd6a1, 0x8444, 0x1, 0x0);
        gbc.writeMem(0x97d1, { 0xe9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9b10, gbc.sp());
        EXPECT(0x8444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x97d1));
        // E9 025E
        gbc.setState(0x999a, 0x9bea, 0x8460, 0x1bc, 0xfb99, 0x123b, 0x1, 0x0);
        gbc.writeMem(0x999a, { 0xe9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9bea, gbc.sp());
        EXPECT(0x123b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x999a));
        // E9 025F
        gbc.setState(0x9798, 0xea35, 0x2b70, 0xfdd0, 0x2ea6, 0xe441, 0x1, 0x0);
        gbc.writeMem(0x9798, { 0xe9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xea35, gbc.sp());
        EXPECT(0xe441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9798));
        // E9 0260
        gbc.setState(0x50da, 0x4d49, 0x9780, 0x8fdf, 0xdd19, 0xb0d3, 0x1, 0x0);
        gbc.writeMem(0x50da, { 0xe9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4d49, gbc.sp());
        EXPECT(0xb0d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0261
        gbc.setState(0x4031, 0x5aa2, 0x5960, 0xc9b, 0x3729, 0xe8d2, 0x0, 0x1);
        gbc.writeMem(0x4031, { 0xe9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5aa2, gbc.sp());
        EXPECT(0xe8d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0262
        gbc.setState(0xaa5c, 0x73b7, 0x4690, 0xc297, 0x2e52, 0xe7ee, 0x1, 0x0);
        gbc.writeMem(0xaa5c, { 0xe9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x73b7, gbc.sp());
        EXPECT(0xe7ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xaa5c));
        // E9 0263
        gbc.setState(0x75df, 0x204a, 0xa320, 0x9baf, 0xdb6e, 0x3100, 0x0, 0x1);
        gbc.writeMem(0x75df, { 0xe9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x204a, gbc.sp());
        EXPECT(0x3100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0264
        gbc.setState(0x1b7, 0xacb3, 0x76b0, 0x19eb, 0xa8e7, 0x34d1, 0x0, 0x0);
        gbc.writeMem(0x1b7, { 0xe9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xacb3, gbc.sp());
        EXPECT(0x34d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0265
        gbc.setState(0xbd31, 0x360a, 0xa340, 0xd031, 0x865, 0x8aa9, 0x1, 0x1);
        gbc.writeMem(0xbd31, { 0xe9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x360a, gbc.sp());
        EXPECT(0x8aa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xbd31));
        // E9 0266
        gbc.setState(0x3813, 0x5c17, 0xc160, 0xbeff, 0xff20, 0xc006, 0x0, 0x1);
        gbc.writeMem(0x3813, { 0xe9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5c17, gbc.sp());
        EXPECT(0xc006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0267
        gbc.setState(0x5cb3, 0xc7ad, 0x3130, 0xd85c, 0x73b0, 0x7e46, 0x0, 0x1);
        gbc.writeMem(0x5cb3, { 0xe9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc7ad, gbc.sp());
        EXPECT(0x7e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0268
        gbc.setState(0x6531, 0x5f7b, 0x8fb0, 0xbde5, 0xc0b9, 0x6937, 0x1, 0x0);
        gbc.writeMem(0x6531, { 0xe9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5f7b, gbc.sp());
        EXPECT(0x6937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0269
        gbc.setState(0x7568, 0x11fb, 0xafc0, 0xeeef, 0x6440, 0xce41, 0x1, 0x1);
        gbc.writeMem(0x7568, { 0xe9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x11fb, gbc.sp());
        EXPECT(0xce41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 026A
        gbc.setState(0x72f0, 0x9a23, 0xcad0, 0xd3c4, 0x284c, 0x31a6, 0x1, 0x1);
        gbc.writeMem(0x72f0, { 0xe9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9a23, gbc.sp());
        EXPECT(0x31a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 026B
        gbc.setState(0xc824, 0x9681, 0x4d40, 0x2c44, 0x7632, 0xab34, 0x0, 0x1);
        gbc.writeMem(0xc824, { 0xe9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9681, gbc.sp());
        EXPECT(0xab34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc824));
        // E9 026D
        gbc.setState(0xaf12, 0xb567, 0x1840, 0xa396, 0xd4d0, 0x75ae, 0x0, 0x0);
        gbc.writeMem(0xaf12, { 0xe9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb567, gbc.sp());
        EXPECT(0x75ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xaf12));
        // E9 026E
        gbc.setState(0xb1b0, 0x8289, 0x1990, 0x4751, 0x1b89, 0x95a4, 0x1, 0x0);
        gbc.writeMem(0xb1b0, { 0xe9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8289, gbc.sp());
        EXPECT(0x95a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb1b0));
        // E9 026F
        gbc.setState(0x1b0d, 0x586e, 0x1b30, 0xae90, 0x84d9, 0x7bd1, 0x0, 0x0);
        gbc.writeMem(0x1b0d, { 0xe9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x586e, gbc.sp());
        EXPECT(0x7bd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0270
        gbc.setState(0x9552, 0xb1a2, 0xf120, 0x7948, 0xaf9c, 0x9110, 0x0, 0x1);
        gbc.writeMem(0x9552, { 0xe9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb1a2, gbc.sp());
        EXPECT(0x9110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9552));
        // E9 0271
        gbc.setState(0x9129, 0x8dbd, 0x3240, 0xd416, 0x14a5, 0x7e35, 0x0, 0x1);
        gbc.writeMem(0x9129, { 0xe9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8dbd, gbc.sp());
        EXPECT(0x7e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9129));
        // E9 0272
        gbc.setState(0x419f, 0x4703, 0xf9b0, 0x5083, 0x9225, 0xe797, 0x1, 0x1);
        gbc.writeMem(0x419f, { 0xe9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4703, gbc.sp());
        EXPECT(0xe797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0274
        gbc.setState(0x10e3, 0x7fa1, 0xb330, 0x24d, 0x97a, 0x757f, 0x1, 0x0);
        gbc.writeMem(0x10e3, { 0xe9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7fa1, gbc.sp());
        EXPECT(0x757f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0275
        gbc.setState(0xa25d, 0x5ea, 0xbb30, 0xa992, 0x938f, 0x2321, 0x1, 0x1);
        gbc.writeMem(0xa25d, { 0xe9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5ea, gbc.sp());
        EXPECT(0x2321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa25d));
        // E9 0276
        gbc.setState(0xa689, 0x236b, 0x9940, 0x6b79, 0x51cc, 0x9189, 0x0, 0x0);
        gbc.writeMem(0xa689, { 0xe9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x236b, gbc.sp());
        EXPECT(0x9189, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa689));
        // E9 0277
        gbc.setState(0x7aa, 0xef03, 0xb5f0, 0x5168, 0xe5a8, 0xdaf0, 0x0, 0x1);
        gbc.writeMem(0x7aa, { 0xe9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xef03, gbc.sp());
        EXPECT(0xdaf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0278
        gbc.setState(0x7b1e, 0x6b6c, 0x8540, 0x43f0, 0xbfbd, 0x955, 0x1, 0x1);
        gbc.writeMem(0x7b1e, { 0xe9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6b6c, gbc.sp());
        EXPECT(0x955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0279
        gbc.setState(0x776c, 0xe2a8, 0xb350, 0x2a89, 0xe8d5, 0xba3f, 0x0, 0x0);
        gbc.writeMem(0x776c, { 0xe9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe2a8, gbc.sp());
        EXPECT(0xba3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 027A
        gbc.setState(0xedd2, 0xebd6, 0xf300, 0x39a1, 0xaf00, 0x2b1c, 0x1, 0x1);
        gbc.writeMem(0xedd2, { 0xe9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xebd6, gbc.sp());
        EXPECT(0x2b1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xedd2));
        // E9 027B
        gbc.setState(0xa537, 0x5a7c, 0x9ff0, 0x9904, 0x8d00, 0xfb99, 0x0, 0x1);
        gbc.writeMem(0xa537, { 0xe9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5a7c, gbc.sp());
        EXPECT(0xfb99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa537));
        // E9 027C
        gbc.setState(0xa03f, 0xfc3d, 0x6e10, 0x92ed, 0xd76a, 0x5374, 0x1, 0x0);
        gbc.writeMem(0xa03f, { 0xe9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfc3d, gbc.sp());
        EXPECT(0x5374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa03f));
        // E9 027D
        gbc.setState(0xa247, 0x48d7, 0x77f0, 0x7e1d, 0x3fa5, 0xf5ec, 0x1, 0x1);
        gbc.writeMem(0xa247, { 0xe9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x48d7, gbc.sp());
        EXPECT(0xf5ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa247));
        // E9 027E
        gbc.setState(0x7d14, 0x7ee5, 0xb220, 0x9cb6, 0xd293, 0x251, 0x0, 0x0);
        gbc.writeMem(0x7d14, { 0xe9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7ee5, gbc.sp());
        EXPECT(0x251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 027F
        gbc.setState(0x7651, 0x79f2, 0x73e0, 0xb8f3, 0xda92, 0x3646, 0x0, 0x0);
        gbc.writeMem(0x7651, { 0xe9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x79f2, gbc.sp());
        EXPECT(0x3646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0281
        gbc.setState(0x5518, 0x233c, 0x78f0, 0x8353, 0xb05d, 0xc83b, 0x1, 0x0);
        gbc.writeMem(0x5518, { 0xe9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x233c, gbc.sp());
        EXPECT(0xc83b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0282
        gbc.setState(0xcbb4, 0x7a7e, 0xb920, 0x23e0, 0xd0aa, 0x7092, 0x1, 0x1);
        gbc.writeMem(0xcbb4, { 0xe9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7a7e, gbc.sp());
        EXPECT(0x7092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xcbb4));
        // E9 0283
        gbc.setState(0xa210, 0x2b10, 0xcdc0, 0x8ac1, 0x5165, 0x9cf4, 0x0, 0x0);
        gbc.writeMem(0xa210, { 0xe9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2b10, gbc.sp());
        EXPECT(0x9cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa210));
        // E9 0284
        gbc.setState(0x3ad9, 0x21f, 0x4130, 0xbaa2, 0x2271, 0xc21, 0x0, 0x0);
        gbc.writeMem(0x3ad9, { 0xe9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x21f, gbc.sp());
        EXPECT(0xc21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0285
        gbc.setState(0x3175, 0x489f, 0xc1e0, 0x48e0, 0x78a5, 0x177a, 0x1, 0x0);
        gbc.writeMem(0x3175, { 0xe9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x489f, gbc.sp());
        EXPECT(0x177a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0286
        gbc.setState(0x1ee9, 0x199b, 0x3f40, 0x8430, 0x53e, 0xbc1a, 0x0, 0x0);
        gbc.writeMem(0x1ee9, { 0xe9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x199b, gbc.sp());
        EXPECT(0xbc1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0287
        gbc.setState(0x980a, 0x8403, 0x3210, 0xe044, 0x3aaf, 0x9147, 0x0, 0x1);
        gbc.writeMem(0x980a, { 0xe9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8403, gbc.sp());
        EXPECT(0x9147, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x980a));
        // E9 0288
        gbc.setState(0x56b9, 0x9fca, 0x61b0, 0xe058, 0x6f8b, 0xad16, 0x0, 0x1);
        gbc.writeMem(0x56b9, { 0xe9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9fca, gbc.sp());
        EXPECT(0xad16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0289
        gbc.setState(0xde65, 0xc6c8, 0xbc40, 0xa9d4, 0x34b4, 0xc3dd, 0x0, 0x0);
        gbc.writeMem(0xde65, { 0xe9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc6c8, gbc.sp());
        EXPECT(0xc3dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xde65));
        // E9 028A
        gbc.setState(0x891c, 0xc8e0, 0xa200, 0xea24, 0x8ec8, 0x3aee, 0x1, 0x0);
        gbc.writeMem(0x891c, { 0xe9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc8e0, gbc.sp());
        EXPECT(0x3aee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x891c));
        // E9 028B
        gbc.setState(0xbd7, 0xe767, 0x86a0, 0xfacd, 0x7412, 0x6428, 0x0, 0x1);
        gbc.writeMem(0xbd7, { 0xe9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe767, gbc.sp());
        EXPECT(0x6428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 028C
        gbc.setState(0xce, 0xe169, 0x68d0, 0x86b4, 0x95f9, 0x6724, 0x0, 0x0);
        gbc.writeMem(0xce, { 0xe9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe169, gbc.sp());
        EXPECT(0x6724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 028D
        gbc.setState(0x5b31, 0x993b, 0x1370, 0xf76f, 0xa8bc, 0xa6f2, 0x0, 0x1);
        gbc.writeMem(0x5b31, { 0xe9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x993b, gbc.sp());
        EXPECT(0xa6f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 028E
        gbc.setState(0xd688, 0x4285, 0xe730, 0xd500, 0x65c0, 0x5a0e, 0x0, 0x0);
        gbc.writeMem(0xd688, { 0xe9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4285, gbc.sp());
        EXPECT(0x5a0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd688));
        // E9 028F
        gbc.setState(0x6120, 0x688e, 0x4c90, 0x3817, 0xc332, 0xda13, 0x0, 0x0);
        gbc.writeMem(0x6120, { 0xe9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x688e, gbc.sp());
        EXPECT(0xda13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0290
        gbc.setState(0xd6de, 0x7ee5, 0xd270, 0xd15d, 0x9d51, 0xb8b8, 0x1, 0x1);
        gbc.writeMem(0xd6de, { 0xe9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7ee5, gbc.sp());
        EXPECT(0xb8b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd6de));
        // E9 0291
        gbc.setState(0x5951, 0x53a2, 0x6ef0, 0xe53e, 0xd271, 0xd704, 0x1, 0x0);
        gbc.writeMem(0x5951, { 0xe9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x53a2, gbc.sp());
        EXPECT(0xd704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0292
        gbc.setState(0x4bf, 0x2ed8, 0x3db0, 0xb875, 0x6c1, 0xfa8e, 0x1, 0x1);
        gbc.writeMem(0x4bf, { 0xe9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2ed8, gbc.sp());
        EXPECT(0xfa8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0293
        gbc.setState(0x9277, 0xe340, 0xb50, 0xf086, 0x3bc8, 0x82b, 0x0, 0x1);
        gbc.writeMem(0x9277, { 0xe9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe340, gbc.sp());
        EXPECT(0x82b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9277));
        // E9 0294
        gbc.setState(0x622b, 0xcd09, 0x1510, 0xd, 0xa6d3, 0x7ead, 0x0, 0x1);
        gbc.writeMem(0x622b, { 0xe9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xcd09, gbc.sp());
        EXPECT(0x7ead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0295
        gbc.setState(0x355d, 0x7410, 0xb800, 0xd146, 0xbc6, 0x264, 0x1, 0x1);
        gbc.writeMem(0x355d, { 0xe9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7410, gbc.sp());
        EXPECT(0x264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0296
        gbc.setState(0xdaf, 0xaa31, 0x66f0, 0xf91b, 0x42b6, 0x5853, 0x0, 0x0);
        gbc.writeMem(0xdaf, { 0xe9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xaa31, gbc.sp());
        EXPECT(0x5853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0297
        gbc.setState(0x3fdb, 0x9a70, 0x7290, 0xd9ed, 0x649c, 0x3725, 0x1, 0x0);
        gbc.writeMem(0x3fdb, { 0xe9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9a70, gbc.sp());
        EXPECT(0x3725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0298
        gbc.setState(0x403f, 0xaf50, 0x1d70, 0xe4cf, 0xf7cf, 0xe35, 0x0, 0x0);
        gbc.writeMem(0x403f, { 0xe9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xaf50, gbc.sp());
        EXPECT(0xe35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0299
        gbc.setState(0x9182, 0x7d94, 0x1f30, 0xd396, 0x9dbb, 0xe8cd, 0x1, 0x0);
        gbc.writeMem(0x9182, { 0xe9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7d94, gbc.sp());
        EXPECT(0xe8cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9182));
        // E9 029A
        gbc.setState(0xcd37, 0xbf45, 0xdb0, 0x61b6, 0x5aa9, 0x6140, 0x0, 0x0);
        gbc.writeMem(0xcd37, { 0xe9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbf45, gbc.sp());
        EXPECT(0x6140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xcd37));
        // E9 029B
        gbc.setState(0x149d, 0x63f4, 0x4ee0, 0x12e9, 0xa0f8, 0xf8ac, 0x0, 0x0);
        gbc.writeMem(0x149d, { 0xe9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x63f4, gbc.sp());
        EXPECT(0xf8ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 029C
        gbc.setState(0x4d3b, 0x8c74, 0xa4b0, 0xad2e, 0x5547, 0x7822, 0x0, 0x0);
        gbc.writeMem(0x4d3b, { 0xe9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8c74, gbc.sp());
        EXPECT(0x7822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 029D
        gbc.setState(0x3ff, 0xe29f, 0xa010, 0x8a15, 0xeb2c, 0xcfa5, 0x1, 0x1);
        gbc.writeMem(0x3ff, { 0xe9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe29f, gbc.sp());
        EXPECT(0xcfa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 029E
        gbc.setState(0xa5c6, 0xd2a, 0xc7e0, 0x2445, 0xf71e, 0x1891, 0x1, 0x0);
        gbc.writeMem(0xa5c6, { 0xe9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd2a, gbc.sp());
        EXPECT(0x1891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa5c6));
        // E9 029F
        gbc.setState(0x2e8a, 0xeebc, 0xca80, 0xf521, 0x74d3, 0x7364, 0x0, 0x1);
        gbc.writeMem(0x2e8a, { 0xe9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xeebc, gbc.sp());
        EXPECT(0x7364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 02A0
        gbc.setState(0x377b, 0xa107, 0xd850, 0x6f58, 0xbe33, 0x48e, 0x1, 0x1);
        gbc.writeMem(0x377b, { 0xe9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa107, gbc.sp());
        EXPECT(0x48e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 02A1
        gbc.setState(0x867b, 0xc248, 0x4750, 0xe1ec, 0x15a1, 0x8f97, 0x0, 0x1);
        gbc.writeMem(0x867b, { 0xe9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc248, gbc.sp());
        EXPECT(0x8f97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x867b));
        // E9 02A2
        gbc.setState(0xa4e7, 0x730a, 0x3880, 0x466f, 0xa5e6, 0x75cd, 0x0, 0x1);
        gbc.writeMem(0xa4e7, { 0xe9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x730a, gbc.sp());
        EXPECT(0x75cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa4e7));
        // E9 02A3
        gbc.setState(0x2, 0xdec3, 0x38b0, 0x66e7, 0xffc4, 0x5961, 0x1, 0x0);
        gbc.writeMem(0x2, { 0xe9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xdec3, gbc.sp());
        EXPECT(0x5961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 02A4
        gbc.setState(0xecfc, 0xeb56, 0xd400, 0x1753, 0x1740, 0x2ade, 0x1, 0x0);
        gbc.writeMem(0xecfc, { 0xe9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xeb56, gbc.sp());
        EXPECT(0x2ade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xecfc));
        // E9 02A5
        gbc.setState(0x231a, 0x97ce, 0xe3b0, 0x62f4, 0x6417, 0xeeb9, 0x1, 0x1);
        gbc.writeMem(0x231a, { 0xe9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x97ce, gbc.sp());
        EXPECT(0xeeb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 02A6
        gbc.setState(0x2f0d, 0x51cd, 0x85b0, 0xb2a6, 0xa700, 0xed20, 0x0, 0x1);
        gbc.writeMem(0x2f0d, { 0xe9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x51cd, gbc.sp());
        EXPECT(0xed20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 02A7
        gbc.setState(0x69dc, 0x5b57, 0x9150, 0x801e, 0xca42, 0xd4c7, 0x0, 0x0);
        gbc.writeMem(0x69dc, { 0xe9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5b57, gbc.sp());
        EXPECT(0xd4c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 02A8
        gbc.setState(0x2da3, 0x6236, 0xabb0, 0xebb2, 0x741d, 0xfc84, 0x0, 0x0);
        gbc.writeMem(0x2da3, { 0xe9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6236, gbc.sp());
        EXPECT(0xfc84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 02A9
        gbc.setState(0x6f1b, 0x6ac7, 0x2960, 0x83e0, 0xa553, 0x9223, 0x0, 0x0);
        gbc.writeMem(0x6f1b, { 0xe9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6ac7, gbc.sp());
        EXPECT(0x9223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 02AA
        gbc.setState(0x3e26, 0xc5f8, 0x6280, 0xf9d3, 0x4b4a, 0xc2ba, 0x1, 0x1);
        gbc.writeMem(0x3e26, { 0xe9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc5f8, gbc.sp());
        EXPECT(0xc2ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 02AB
        gbc.setState(0x8648, 0xf43f, 0x2660, 0xcbde, 0x2cb0, 0xc0af, 0x0, 0x1);
        gbc.writeMem(0x8648, { 0xe9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf43f, gbc.sp());
        EXPECT(0xc0af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8648));
        // E9 02AC
        gbc.setState(0xa060, 0x8812, 0x8b00, 0xd244, 0xd14b, 0xb926, 0x0, 0x1);
        gbc.writeMem(0xa060, { 0xe9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8812, gbc.sp());
        EXPECT(0xb926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa060));
        // E9 02AD
        gbc.setState(0xe223, 0x22fa, 0x10f0, 0xdca0, 0x9b1a, 0xa28a, 0x0, 0x0);
        gbc.writeMem(0xe223, { 0xe9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x22fa, gbc.sp());
        EXPECT(0xa28a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe223));
        // E9 02AE
        gbc.setState(0x75eb, 0x2830, 0xd80, 0x9550, 0x8c8e, 0xcd2f, 0x0, 0x1);
        gbc.writeMem(0x75eb, { 0xe9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2830, gbc.sp());
        EXPECT(0xcd2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 02AF
        gbc.setState(0x2c1c, 0xf705, 0x2a30, 0x2b4f, 0x46ee, 0xb132, 0x0, 0x1);
        gbc.writeMem(0x2c1c, { 0xe9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf705, gbc.sp());
        EXPECT(0xb132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 02B0
        gbc.setState(0x3507, 0x1183, 0xc3d0, 0x80b4, 0xf390, 0xec94, 0x1, 0x1);
        gbc.writeMem(0x3507, { 0xe9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1183, gbc.sp());
        EXPECT(0xec94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 02B1
        gbc.setState(0xa1c1, 0x4a62, 0x1e00, 0xce5d, 0xe3dc, 0x7469, 0x0, 0x0);
        gbc.writeMem(0xa1c1, { 0xe9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4a62, gbc.sp());
        EXPECT(0x7469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa1c1));
        // E9 02B2
        gbc.setState(0x658a, 0x50c4, 0x1a20, 0x64ae, 0xc399, 0xc67, 0x1, 0x0);
        gbc.writeMem(0x658a, { 0xe9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x50c4, gbc.sp());
        EXPECT(0xc67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 02B3
        gbc.setState(0x68a3, 0x5263, 0xb510, 0xf5b0, 0x127d, 0x1b56, 0x0, 0x1);
        gbc.writeMem(0x68a3, { 0xe9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5263, gbc.sp());
        EXPECT(0x1b56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 02B4
        gbc.setState(0x2181, 0x4ec7, 0x1000, 0xe3e6, 0x7905, 0x58c5, 0x0, 0x1);
        gbc.writeMem(0x2181, { 0xe9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4ec7, gbc.sp());
        EXPECT(0x58c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 02B5
        gbc.setState(0x14bf, 0x7558, 0xde0, 0xc5c9, 0xee1b, 0x4d28, 0x0, 0x0);
        gbc.writeMem(0x14bf, { 0xe9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7558, gbc.sp());
        EXPECT(0x4d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 02B6
        gbc.setState(0xdcf0, 0x416a, 0x6330, 0x32d, 0x87f5, 0x968e, 0x1, 0x1);
        gbc.writeMem(0xdcf0, { 0xe9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x416a, gbc.sp());
        EXPECT(0x968e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xdcf0));
        // E9 02B8
        gbc.setState(0x9f41, 0x6c24, 0x2d80, 0x76bc, 0xe361, 0xea52, 0x1, 0x1);
        gbc.writeMem(0x9f41, { 0xe9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6c24, gbc.sp());
        EXPECT(0xea52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9f41));
        // E9 02B9
        gbc.setState(0xaf9a, 0x3936, 0xd650, 0xc11a, 0x81b5, 0xfd89, 0x1, 0x1);
        gbc.writeMem(0xaf9a, { 0xe9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3936, gbc.sp());
        EXPECT(0xfd89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xaf9a));
        // E9 02BA
        gbc.setState(0x7bf1, 0xf2ba, 0xf4a0, 0x1373, 0x66fe, 0xfb0, 0x1, 0x0);
        gbc.writeMem(0x7bf1, { 0xe9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf2ba, gbc.sp());
        EXPECT(0xfb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 02BC
        gbc.setState(0x873b, 0x1a99, 0x2750, 0x171, 0x28cf, 0x99a1, 0x1, 0x1);
        gbc.writeMem(0x873b, { 0xe9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1a99, gbc.sp());
        EXPECT(0x99a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x873b));
        // E9 02BD
        gbc.setState(0xa0a1, 0xe541, 0x6a30, 0x86c0, 0xe23e, 0xfed8, 0x1, 0x0);
        gbc.writeMem(0xa0a1, { 0xe9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe541, gbc.sp());
        EXPECT(0xfed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa0a1));
        // E9 02BE
        gbc.setState(0x3be9, 0xf5f7, 0xc670, 0x2eb8, 0xe6a3, 0x1434, 0x0, 0x0);
        gbc.writeMem(0x3be9, { 0xe9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf5f7, gbc.sp());
        EXPECT(0x1434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 02BF
        gbc.setState(0x5d6e, 0xcb4e, 0x9e10, 0xda58, 0xef1b, 0x728f, 0x0, 0x1);
        gbc.writeMem(0x5d6e, { 0xe9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xcb4e, gbc.sp());
        EXPECT(0x728f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 02C0
        gbc.setState(0xbaab, 0x4969, 0xa1a0, 0x9d0a, 0x41, 0xa23, 0x0, 0x0);
        gbc.writeMem(0xbaab, { 0xe9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4969, gbc.sp());
        EXPECT(0xa23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xbaab));
        // E9 02C1
        gbc.setState(0xdbc8, 0xfd72, 0x1c60, 0x618b, 0x8435, 0x198b, 0x0, 0x1);
        gbc.writeMem(0xdbc8, { 0xe9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfd72, gbc.sp());
        EXPECT(0x198b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xdbc8));
        // E9 02C2
        gbc.setState(0x2bf5, 0xa3b3, 0x26e0, 0xdad7, 0xa8b9, 0x3ba3, 0x0, 0x1);
        gbc.writeMem(0x2bf5, { 0xe9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa3b3, gbc.sp());
        EXPECT(0x3ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 02C3
        gbc.setState(0x733e, 0xfad8, 0xf160, 0x5191, 0x123f, 0x1e5f, 0x1, 0x0);
        gbc.writeMem(0x733e, { 0xe9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfad8, gbc.sp());
        EXPECT(0x1e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 02C4
        gbc.setState(0xcab4, 0x36f6, 0xae20, 0x9fb, 0x5b26, 0x1a4e, 0x1, 0x0);
        gbc.writeMem(0xcab4, { 0xe9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x36f6, gbc.sp());
        EXPECT(0x1a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xcab4));
        // E9 02C5
        gbc.setState(0xb889, 0x31e6, 0xf730, 0x181e, 0xf5eb, 0x6568, 0x0, 0x0);
        gbc.writeMem(0xb889, { 0xe9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x31e6, gbc.sp());
        EXPECT(0x6568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb889));
        // E9 02C6
        gbc.setState(0xe801, 0xe2f4, 0x1500, 0x6bbd, 0x2bed, 0x7187, 0x1, 0x1);
        gbc.writeMem(0xe801, { 0xe9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe2f4, gbc.sp());
        EXPECT(0x7187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe801));
        // E9 02C7
        gbc.setState(0x9ede, 0xe6bc, 0x50d0, 0x6ca4, 0x240f, 0xa802, 0x0, 0x1);
        gbc.writeMem(0x9ede, { 0xe9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe6bc, gbc.sp());
        EXPECT(0xa802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9ede));
        // E9 02C8
        gbc.setState(0xac3c, 0x90fd, 0x45b0, 0x905f, 0x5181, 0x87dd, 0x0, 0x0);
        gbc.writeMem(0xac3c, { 0xe9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x90fd, gbc.sp());
        EXPECT(0x87dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xac3c));
        // E9 02CA
        gbc.setState(0xb659, 0xf758, 0xb750, 0x7c16, 0x79b7, 0x228e, 0x0, 0x1);
        gbc.writeMem(0xb659, { 0xe9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf758, gbc.sp());
        EXPECT(0x228e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb659));
        // E9 02CB
        gbc.setState(0x711c, 0xe72b, 0xb4c0, 0x5858, 0xf317, 0x8493, 0x0, 0x1);
        gbc.writeMem(0x711c, { 0xe9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe72b, gbc.sp());
        EXPECT(0x8493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 02CC
        gbc.setState(0x4870, 0x8e97, 0x50f0, 0x74d7, 0xa46b, 0x51f9, 0x0, 0x1);
        gbc.writeMem(0x4870, { 0xe9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8e97, gbc.sp());
        EXPECT(0x51f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 02CD
        gbc.setState(0x93b, 0x1ca2, 0x98a0, 0x3b5a, 0xf0f3, 0xae9d, 0x0, 0x0);
        gbc.writeMem(0x93b, { 0xe9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1ca2, gbc.sp());
        EXPECT(0xae9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 02CE
        gbc.setState(0xdb9e, 0x4919, 0x8b00, 0x7f86, 0xab35, 0xbedc, 0x0, 0x1);
        gbc.writeMem(0xdb9e, { 0xe9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4919, gbc.sp());
        EXPECT(0xbedc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xdb9e));
        // E9 02CF
        gbc.setState(0xec5b, 0xf1c2, 0xaa20, 0x6587, 0xea21, 0xb457, 0x1, 0x1);
        gbc.writeMem(0xec5b, { 0xe9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf1c2, gbc.sp());
        EXPECT(0xb457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xec5b));
        // E9 02D0
        gbc.setState(0xc9cb, 0x6976, 0xfa30, 0x56e6, 0x14c1, 0x426c, 0x1, 0x0);
        gbc.writeMem(0xc9cb, { 0xe9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6976, gbc.sp());
        EXPECT(0x426c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc9cb));
        // E9 02D1
        gbc.setState(0xc033, 0x1396, 0x7ac0, 0xd487, 0x672d, 0x9d30, 0x0, 0x1);
        gbc.writeMem(0xc033, { 0xe9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1396, gbc.sp());
        EXPECT(0x9d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc033));
        // E9 02D2
        gbc.setState(0x37e5, 0xbd6c, 0x4c40, 0xbb68, 0xa7fd, 0x34ba, 0x0, 0x0);
        gbc.writeMem(0x37e5, { 0xe9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xbd6c, gbc.sp());
        EXPECT(0x34ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 02D3
        gbc.setState(0x2e4f, 0x5867, 0x5510, 0x4ce0, 0x8933, 0xce8a, 0x1, 0x0);
        gbc.writeMem(0x2e4f, { 0xe9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5867, gbc.sp());
        EXPECT(0xce8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 02D4
        gbc.setState(0x4ff2, 0xbc25, 0x9340, 0xc2b4, 0xb65d, 0x2131, 0x1, 0x1);
        gbc.writeMem(0x4ff2, { 0xe9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbc25, gbc.sp());
        EXPECT(0x2131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 02D5
        gbc.setState(0x41e0, 0x321d, 0xc370, 0x49ee, 0xd88, 0x4649, 0x0, 0x1);
        gbc.writeMem(0x41e0, { 0xe9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x321d, gbc.sp());
        EXPECT(0x4649, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 02D6
        gbc.setState(0x9869, 0x26ad, 0xd580, 0x2750, 0x41eb, 0x7697, 0x0, 0x0);
        gbc.writeMem(0x9869, { 0xe9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x26ad, gbc.sp());
        EXPECT(0x7697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9869));
        // E9 02D7
        gbc.setState(0xcd55, 0x5a90, 0x6f40, 0xeea8, 0x4bda, 0xa790, 0x0, 0x0);
        gbc.writeMem(0xcd55, { 0xe9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5a90, gbc.sp());
        EXPECT(0xa790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xcd55));
        // E9 02D8
        gbc.setState(0x87ad, 0xa53c, 0xa820, 0x8dac, 0xf6ab, 0x9ca5, 0x0, 0x0);
        gbc.writeMem(0x87ad, { 0xe9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa53c, gbc.sp());
        EXPECT(0x9ca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x87ad));
        // E9 02D9
        gbc.setState(0x7789, 0xadcb, 0x5c60, 0x9243, 0x1a8, 0xa14d, 0x0, 0x0);
        gbc.writeMem(0x7789, { 0xe9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xadcb, gbc.sp());
        EXPECT(0xa14d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 02DB
        gbc.setState(0x827c, 0xdcc2, 0xf7d0, 0x5050, 0x2321, 0x3d22, 0x0, 0x1);
        gbc.writeMem(0x827c, { 0xe9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xdcc2, gbc.sp());
        EXPECT(0x3d22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x827c));
        // E9 02DC
        gbc.setState(0x8908, 0xde50, 0x9190, 0xb8f9, 0xce1f, 0x6a57, 0x1, 0x0);
        gbc.writeMem(0x8908, { 0xe9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xde50, gbc.sp());
        EXPECT(0x6a57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8908));
        // E9 02DD
        gbc.setState(0x2caa, 0x198d, 0x2ae0, 0x88b6, 0xafd1, 0x3e49, 0x1, 0x1);
        gbc.writeMem(0x2caa, { 0xe9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x198d, gbc.sp());
        EXPECT(0x3e49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 02DE
        gbc.setState(0xbdf1, 0x72e9, 0xd2d0, 0x826b, 0x1c7d, 0xa9ee, 0x1, 0x1);
        gbc.writeMem(0xbdf1, { 0xe9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x72e9, gbc.sp());
        EXPECT(0xa9ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xbdf1));
        // E9 02DF
        gbc.setState(0xbcb4, 0xeeab, 0xaa50, 0x9850, 0x8fc5, 0xd388, 0x1, 0x0);
        gbc.writeMem(0xbcb4, { 0xe9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xeeab, gbc.sp());
        EXPECT(0xd388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xbcb4));
        // E9 02E0
        gbc.setState(0xd50d, 0x92f6, 0x7040, 0xc9aa, 0x1bf2, 0x59ee, 0x0, 0x1);
        gbc.writeMem(0xd50d, { 0xe9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x92f6, gbc.sp());
        EXPECT(0x59ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd50d));
        // E9 02E1
        gbc.setState(0xdb25, 0x69e5, 0xdc30, 0xab94, 0x25a5, 0xbb21, 0x1, 0x0);
        gbc.writeMem(0xdb25, { 0xe9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x69e5, gbc.sp());
        EXPECT(0xbb21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xdb25));
        // E9 02E2
        gbc.setState(0xa4c5, 0x5093, 0x65a0, 0x40cf, 0xe037, 0x8b17, 0x0, 0x0);
        gbc.writeMem(0xa4c5, { 0xe9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5093, gbc.sp());
        EXPECT(0x8b17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa4c5));
        // E9 02E3
        gbc.setState(0x9097, 0xb092, 0xbfb0, 0x9c8b, 0x10b0, 0x76c3, 0x1, 0x0);
        gbc.writeMem(0x9097, { 0xe9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb092, gbc.sp());
        EXPECT(0x76c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9097));
        // E9 02E4
        gbc.setState(0xc851, 0xe93f, 0xdd50, 0x1948, 0xcd95, 0x3398, 0x0, 0x0);
        gbc.writeMem(0xc851, { 0xe9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe93f, gbc.sp());
        EXPECT(0x3398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc851));
        // E9 02E5
        gbc.setState(0xdc35, 0x4b32, 0x4b00, 0xb29b, 0x7131, 0x5c8c, 0x0, 0x1);
        gbc.writeMem(0xdc35, { 0xe9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4b32, gbc.sp());
        EXPECT(0x5c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xdc35));
        // E9 02E6
        gbc.setState(0xbb4, 0x6813, 0x4c80, 0x65f7, 0x4d9a, 0x68f7, 0x0, 0x1);
        gbc.writeMem(0xbb4, { 0xe9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6813, gbc.sp());
        EXPECT(0x68f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 02E8
        gbc.setState(0x6aff, 0x783e, 0x8740, 0x346c, 0x1a97, 0xac24, 0x0, 0x0);
        gbc.writeMem(0x6aff, { 0xe9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x783e, gbc.sp());
        EXPECT(0xac24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 02E9
        gbc.setState(0xe588, 0x2f16, 0xeef0, 0x4f17, 0x5705, 0xd1e6, 0x1, 0x0);
        gbc.writeMem(0xe588, { 0xe9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2f16, gbc.sp());
        EXPECT(0xd1e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe588));
        // E9 02EA
        gbc.setState(0x5cf9, 0xfa7b, 0xbbb0, 0x451f, 0xb9c5, 0xbc6c, 0x1, 0x0);
        gbc.writeMem(0x5cf9, { 0xe9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfa7b, gbc.sp());
        EXPECT(0xbc6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 02EB
        gbc.setState(0x2964, 0xf496, 0xa5a0, 0x6bf2, 0x7b41, 0x96c8, 0x1, 0x1);
        gbc.writeMem(0x2964, { 0xe9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf496, gbc.sp());
        EXPECT(0x96c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 02EC
        gbc.setState(0x6619, 0x679e, 0x10f0, 0x8c13, 0xf66d, 0xa4fb, 0x0, 0x1);
        gbc.writeMem(0x6619, { 0xe9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x679e, gbc.sp());
        EXPECT(0xa4fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 02ED
        gbc.setState(0x250, 0x2db0, 0x9150, 0xfb3b, 0x23b3, 0xcd30, 0x1, 0x1);
        gbc.writeMem(0x250, { 0xe9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2db0, gbc.sp());
        EXPECT(0xcd30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 02EE
        gbc.setState(0xd4d8, 0x515, 0xd440, 0x85cf, 0x1cc8, 0x659d, 0x0, 0x1);
        gbc.writeMem(0xd4d8, { 0xe9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x515, gbc.sp());
        EXPECT(0x659d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd4d8));
        // E9 02F0
        gbc.setState(0x7a63, 0xe4c6, 0x77a0, 0x5ada, 0xc1a, 0xcf84, 0x0, 0x0);
        gbc.writeMem(0x7a63, { 0xe9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe4c6, gbc.sp());
        EXPECT(0xcf84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 02F1
        gbc.setState(0xb73a, 0xcf1c, 0x35d0, 0xe4cf, 0x4303, 0xbefd, 0x1, 0x1);
        gbc.writeMem(0xb73a, { 0xe9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcf1c, gbc.sp());
        EXPECT(0xbefd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb73a));
        // E9 02F2
        gbc.setState(0xa34d, 0xe383, 0x3d20, 0xeac9, 0xdfd, 0x8502, 0x1, 0x0);
        gbc.writeMem(0xa34d, { 0xe9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe383, gbc.sp());
        EXPECT(0x8502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa34d));
        // E9 02F3
        gbc.setState(0x2699, 0x3ba3, 0x44f0, 0xcd94, 0xd23a, 0xdb9d, 0x0, 0x0);
        gbc.writeMem(0x2699, { 0xe9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3ba3, gbc.sp());
        EXPECT(0xdb9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 02F4
        gbc.setState(0x91c7, 0x89e2, 0xa20, 0xf940, 0xd746, 0xda31, 0x1, 0x0);
        gbc.writeMem(0x91c7, { 0xe9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x89e2, gbc.sp());
        EXPECT(0xda31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x91c7));
        // E9 02F5
        gbc.setState(0xdb62, 0xa48b, 0xbc00, 0xe28f, 0x9996, 0xc05e, 0x1, 0x0);
        gbc.writeMem(0xdb62, { 0xe9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa48b, gbc.sp());
        EXPECT(0xc05e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xdb62));
        // E9 02F6
        gbc.setState(0x5245, 0xee49, 0x8190, 0x91cc, 0xfe60, 0x92d, 0x0, 0x1);
        gbc.writeMem(0x5245, { 0xe9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xee49, gbc.sp());
        EXPECT(0x92d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 02F7
        gbc.setState(0xa1ad, 0x6831, 0x9950, 0xfaa4, 0x78be, 0xc85a, 0x0, 0x0);
        gbc.writeMem(0xa1ad, { 0xe9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6831, gbc.sp());
        EXPECT(0xc85a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa1ad));
        // E9 02F8
        gbc.setState(0x3d18, 0x9039, 0xbb30, 0xa629, 0x8d36, 0x7991, 0x1, 0x0);
        gbc.writeMem(0x3d18, { 0xe9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9039, gbc.sp());
        EXPECT(0x7991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 02FA
        gbc.setState(0xcd5, 0x549d, 0xd8c0, 0x59f2, 0xa9c5, 0xd9b7, 0x0, 0x1);
        gbc.writeMem(0xcd5, { 0xe9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x549d, gbc.sp());
        EXPECT(0xd9b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 02FB
        gbc.setState(0x286a, 0xcda3, 0x3520, 0x4e1e, 0xc505, 0x159d, 0x1, 0x1);
        gbc.writeMem(0x286a, { 0xe9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xcda3, gbc.sp());
        EXPECT(0x159d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 02FC
        gbc.setState(0x5f93, 0x7cfd, 0xbb00, 0xcb34, 0x7c, 0x33a7, 0x1, 0x0);
        gbc.writeMem(0x5f93, { 0xe9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7cfd, gbc.sp());
        EXPECT(0x33a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 02FD
        gbc.setState(0xe4b9, 0x8220, 0x280, 0x96e5, 0xf94e, 0xd895, 0x1, 0x1);
        gbc.writeMem(0xe4b9, { 0xe9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8220, gbc.sp());
        EXPECT(0xd895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe4b9));
        // E9 02FE
        gbc.setState(0x5342, 0xd347, 0xe6b0, 0xdc77, 0xe6e3, 0x4740, 0x0, 0x0);
        gbc.writeMem(0x5342, { 0xe9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd347, gbc.sp());
        EXPECT(0x4740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 02FF
        gbc.setState(0xaae7, 0xa297, 0x1d0, 0xd278, 0xcec7, 0xae45, 0x0, 0x1);
        gbc.writeMem(0xaae7, { 0xe9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa297, gbc.sp());
        EXPECT(0xae45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xaae7));
        // E9 0300
        gbc.setState(0xe72d, 0xa95b, 0xf5d0, 0xe89d, 0x3c97, 0x22f6, 0x1, 0x1);
        gbc.writeMem(0xe72d, { 0xe9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa95b, gbc.sp());
        EXPECT(0x22f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe72d));
        // E9 0301
        gbc.setState(0x5af1, 0x1df5, 0xc400, 0xa6e3, 0xb697, 0xec36, 0x0, 0x0);
        gbc.writeMem(0x5af1, { 0xe9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1df5, gbc.sp());
        EXPECT(0xec36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0302
        gbc.setState(0x4b83, 0xdc6f, 0xcd40, 0xb936, 0x4958, 0x7fc1, 0x0, 0x0);
        gbc.writeMem(0x4b83, { 0xe9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xdc6f, gbc.sp());
        EXPECT(0x7fc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0303
        gbc.setState(0x9b68, 0x5655, 0xc20, 0x4078, 0x1317, 0x8419, 0x1, 0x0);
        gbc.writeMem(0x9b68, { 0xe9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5655, gbc.sp());
        EXPECT(0x8419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9b68));
        // E9 0304
        gbc.setState(0x7215, 0x79f5, 0xb9e0, 0xba85, 0xdb01, 0xbe97, 0x0, 0x1);
        gbc.writeMem(0x7215, { 0xe9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x79f5, gbc.sp());
        EXPECT(0xbe97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0305
        gbc.setState(0x5701, 0xef6d, 0x18f0, 0xc3e2, 0xefb8, 0x2bec, 0x1, 0x0);
        gbc.writeMem(0x5701, { 0xe9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xef6d, gbc.sp());
        EXPECT(0x2bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0306
        gbc.setState(0xae9, 0x68c7, 0xef0, 0x867f, 0xcf8d, 0x65e5, 0x1, 0x1);
        gbc.writeMem(0xae9, { 0xe9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x68c7, gbc.sp());
        EXPECT(0x65e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0307
        gbc.setState(0x3c53, 0xa081, 0x87b0, 0xa718, 0xc242, 0xbda0, 0x0, 0x1);
        gbc.writeMem(0x3c53, { 0xe9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa081, gbc.sp());
        EXPECT(0xbda0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0308
        gbc.setState(0x2475, 0xe888, 0x78b0, 0x5a02, 0x9196, 0xf339, 0x0, 0x0);
        gbc.writeMem(0x2475, { 0xe9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe888, gbc.sp());
        EXPECT(0xf339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0309
        gbc.setState(0x433c, 0xb550, 0xbb40, 0x4b51, 0x476c, 0x7c9b, 0x0, 0x0);
        gbc.writeMem(0x433c, { 0xe9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb550, gbc.sp());
        EXPECT(0x7c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 030A
        gbc.setState(0x46c5, 0xa652, 0xce10, 0xbdf0, 0xc8a7, 0x9e71, 0x1, 0x1);
        gbc.writeMem(0x46c5, { 0xe9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa652, gbc.sp());
        EXPECT(0x9e71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 030B
        gbc.setState(0xd220, 0xdeb0, 0x1a90, 0xc8a9, 0xfb52, 0xb076, 0x0, 0x0);
        gbc.writeMem(0xd220, { 0xe9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xdeb0, gbc.sp());
        EXPECT(0xb076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd220));
        // E9 030C
        gbc.setState(0x7367, 0x7a12, 0xfbe0, 0xc5f2, 0x58fb, 0x7ea, 0x0, 0x0);
        gbc.writeMem(0x7367, { 0xe9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7a12, gbc.sp());
        EXPECT(0x7ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 030D
        gbc.setState(0xcc60, 0xc87a, 0xc730, 0x9a36, 0x885a, 0xa359, 0x1, 0x0);
        gbc.writeMem(0xcc60, { 0xe9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc87a, gbc.sp());
        EXPECT(0xa359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xcc60));
        // E9 030E
        gbc.setState(0xa32f, 0xfa18, 0xef10, 0x4141, 0x5603, 0xda4e, 0x1, 0x0);
        gbc.writeMem(0xa32f, { 0xe9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfa18, gbc.sp());
        EXPECT(0xda4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa32f));
        // E9 030F
        gbc.setState(0x75f6, 0xc04e, 0x9a70, 0x585d, 0xd19d, 0xf1f0, 0x0, 0x1);
        gbc.writeMem(0x75f6, { 0xe9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc04e, gbc.sp());
        EXPECT(0xf1f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0310
        gbc.setState(0x9021, 0xf915, 0xf70, 0x49e0, 0xa7a7, 0xb1c9, 0x1, 0x0);
        gbc.writeMem(0x9021, { 0xe9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf915, gbc.sp());
        EXPECT(0xb1c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9021));
        // E9 0311
        gbc.setState(0xbee8, 0xf3df, 0xf680, 0x29c8, 0xb416, 0x5067, 0x1, 0x1);
        gbc.writeMem(0xbee8, { 0xe9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf3df, gbc.sp());
        EXPECT(0x5067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xbee8));
        // E9 0312
        gbc.setState(0x74ac, 0xa0b9, 0x7370, 0x6b71, 0xed96, 0x46c6, 0x0, 0x0);
        gbc.writeMem(0x74ac, { 0xe9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa0b9, gbc.sp());
        EXPECT(0x46c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0313
        gbc.setState(0xd9f7, 0x3046, 0x1f50, 0xff9c, 0x5fd, 0xe721, 0x1, 0x1);
        gbc.writeMem(0xd9f7, { 0xe9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3046, gbc.sp());
        EXPECT(0xe721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd9f7));
        // E9 0314
        gbc.setState(0xda74, 0xd87b, 0x9e70, 0x50a2, 0x9c15, 0x435e, 0x1, 0x0);
        gbc.writeMem(0xda74, { 0xe9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd87b, gbc.sp());
        EXPECT(0x435e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xda74));
        // E9 0315
        gbc.setState(0x4e6a, 0x53d3, 0x66f0, 0x9ded, 0x11aa, 0x7d5e, 0x0, 0x0);
        gbc.writeMem(0x4e6a, { 0xe9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x53d3, gbc.sp());
        EXPECT(0x7d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0316
        gbc.setState(0x1815, 0x9fb6, 0x80e0, 0x394d, 0xb2fa, 0xb7e2, 0x0, 0x0);
        gbc.writeMem(0x1815, { 0xe9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9fb6, gbc.sp());
        EXPECT(0xb7e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0317
        gbc.setState(0x9ec1, 0x56c5, 0x2070, 0x29de, 0xe447, 0x2509, 0x1, 0x0);
        gbc.writeMem(0x9ec1, { 0xe9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x56c5, gbc.sp());
        EXPECT(0x2509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9ec1));
        // E9 0318
        gbc.setState(0x7afe, 0x4158, 0x6ea0, 0x8805, 0x1430, 0x8873, 0x1, 0x1);
        gbc.writeMem(0x7afe, { 0xe9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4158, gbc.sp());
        EXPECT(0x8873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0319
        gbc.setState(0xb623, 0x631f, 0xb030, 0xb203, 0xa688, 0x162b, 0x1, 0x1);
        gbc.writeMem(0xb623, { 0xe9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x631f, gbc.sp());
        EXPECT(0x162b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb623));
        // E9 031A
        gbc.setState(0x6f1a, 0x48b2, 0x3b00, 0xbb4d, 0x7701, 0x8a6d, 0x1, 0x1);
        gbc.writeMem(0x6f1a, { 0xe9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x48b2, gbc.sp());
        EXPECT(0x8a6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 031B
        gbc.setState(0x7437, 0xcca0, 0xaa70, 0xaf3b, 0x5df9, 0x8ea5, 0x1, 0x0);
        gbc.writeMem(0x7437, { 0xe9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xcca0, gbc.sp());
        EXPECT(0x8ea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 031C
        gbc.setState(0x6138, 0xf389, 0x5470, 0xb975, 0x1079, 0xd132, 0x0, 0x0);
        gbc.writeMem(0x6138, { 0xe9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf389, gbc.sp());
        EXPECT(0xd132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 031D
        gbc.setState(0x25e9, 0xa3e3, 0x560, 0x5fe4, 0x1ce7, 0xb992, 0x1, 0x1);
        gbc.writeMem(0x25e9, { 0xe9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa3e3, gbc.sp());
        EXPECT(0xb992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 031E
        gbc.setState(0xa7de, 0x429d, 0x57a0, 0x9c9f, 0x3edf, 0xb8e5, 0x0, 0x0);
        gbc.writeMem(0xa7de, { 0xe9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x429d, gbc.sp());
        EXPECT(0xb8e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa7de));
        // E9 031F
        gbc.setState(0x75bd, 0xf712, 0x870, 0x5680, 0x54f9, 0x2fbd, 0x1, 0x0);
        gbc.writeMem(0x75bd, { 0xe9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf712, gbc.sp());
        EXPECT(0x2fbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0320
        gbc.setState(0xdc8e, 0x87d0, 0x8e40, 0x2c4f, 0x6dd2, 0x6525, 0x0, 0x0);
        gbc.writeMem(0xdc8e, { 0xe9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x87d0, gbc.sp());
        EXPECT(0x6525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xdc8e));
        // E9 0321
        gbc.setState(0xa234, 0x2a25, 0x79b0, 0xf20f, 0x28f0, 0xb664, 0x0, 0x1);
        gbc.writeMem(0xa234, { 0xe9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2a25, gbc.sp());
        EXPECT(0xb664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa234));
        // E9 0322
        gbc.setState(0x8dd8, 0x135d, 0xd3c0, 0xc4d6, 0x8b37, 0x33fc, 0x0, 0x0);
        gbc.writeMem(0x8dd8, { 0xe9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x135d, gbc.sp());
        EXPECT(0x33fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8dd8));
        // E9 0323
        gbc.setState(0x17a5, 0x41b6, 0x6730, 0x9397, 0x59aa, 0x6a7c, 0x0, 0x1);
        gbc.writeMem(0x17a5, { 0xe9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x41b6, gbc.sp());
        EXPECT(0x6a7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0324
        gbc.setState(0xa207, 0x755d, 0xa8a0, 0x7542, 0x6fd4, 0x25a6, 0x1, 0x1);
        gbc.writeMem(0xa207, { 0xe9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x755d, gbc.sp());
        EXPECT(0x25a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa207));
        // E9 0325
        gbc.setState(0x642, 0xe7a0, 0xb4e0, 0xc47f, 0x239c, 0x3841, 0x0, 0x1);
        gbc.writeMem(0x642, { 0xe9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe7a0, gbc.sp());
        EXPECT(0x3841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0326
        gbc.setState(0xbe3f, 0xff00, 0x1bb0, 0xcd4d, 0x4850, 0xbe94, 0x1, 0x1);
        gbc.writeMem(0xbe3f, { 0xe9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xff00, gbc.sp());
        EXPECT(0xbe94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xbe3f));
        // E9 0327
        gbc.setState(0x895b, 0x1639, 0x5fc0, 0xd2f7, 0x8e68, 0x9804, 0x0, 0x0);
        gbc.writeMem(0x895b, { 0xe9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1639, gbc.sp());
        EXPECT(0x9804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x895b));
        // E9 0328
        gbc.setState(0x7ee9, 0xe647, 0xc200, 0x6e4a, 0x2a3a, 0xedaa, 0x1, 0x1);
        gbc.writeMem(0x7ee9, { 0xe9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe647, gbc.sp());
        EXPECT(0xedaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0329
        gbc.setState(0x16bf, 0xf56, 0x54f0, 0x399a, 0x3b64, 0x4d45, 0x0, 0x0);
        gbc.writeMem(0x16bf, { 0xe9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf56, gbc.sp());
        EXPECT(0x4d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 032A
        gbc.setState(0x316b, 0x1553, 0x7020, 0x965b, 0x1477, 0x5d0d, 0x1, 0x1);
        gbc.writeMem(0x316b, { 0xe9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1553, gbc.sp());
        EXPECT(0x5d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 032B
        gbc.setState(0x537b, 0x502a, 0xff30, 0xf024, 0x69cf, 0xc72e, 0x0, 0x0);
        gbc.writeMem(0x537b, { 0xe9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x502a, gbc.sp());
        EXPECT(0xc72e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 032C
        gbc.setState(0x1d3c, 0xa97, 0xa240, 0xc725, 0x6f5a, 0xa142, 0x1, 0x0);
        gbc.writeMem(0x1d3c, { 0xe9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa97, gbc.sp());
        EXPECT(0xa142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 032D
        gbc.setState(0x21a2, 0x2e52, 0xc0e0, 0x34be, 0xc558, 0xb429, 0x0, 0x0);
        gbc.writeMem(0x21a2, { 0xe9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2e52, gbc.sp());
        EXPECT(0xb429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 032E
        gbc.setState(0xb4e5, 0x8b4d, 0xa550, 0xc0a3, 0xfa51, 0xde1, 0x0, 0x0);
        gbc.writeMem(0xb4e5, { 0xe9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8b4d, gbc.sp());
        EXPECT(0xde1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb4e5));
        // E9 032F
        gbc.setState(0x6fa9, 0x3089, 0x51a0, 0x4ab, 0x4207, 0x47ea, 0x0, 0x1);
        gbc.writeMem(0x6fa9, { 0xe9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3089, gbc.sp());
        EXPECT(0x47ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0330
        gbc.setState(0xdd26, 0xcb16, 0xbfa0, 0x6fb0, 0xd3f2, 0xae29, 0x1, 0x0);
        gbc.writeMem(0xdd26, { 0xe9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcb16, gbc.sp());
        EXPECT(0xae29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xdd26));
        // E9 0331
        gbc.setState(0x4f46, 0xa1e0, 0x1ee0, 0xa01d, 0x8cf, 0x6b17, 0x1, 0x0);
        gbc.writeMem(0x4f46, { 0xe9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa1e0, gbc.sp());
        EXPECT(0x6b17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0332
        gbc.setState(0x8dec, 0xd618, 0xad0, 0x683a, 0x2301, 0xa97d, 0x1, 0x1);
        gbc.writeMem(0x8dec, { 0xe9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd618, gbc.sp());
        EXPECT(0xa97d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8dec));
        // E9 0333
        gbc.setState(0xc629, 0x77f6, 0x4420, 0xb41, 0x36aa, 0xdbd3, 0x0, 0x0);
        gbc.writeMem(0xc629, { 0xe9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x77f6, gbc.sp());
        EXPECT(0xdbd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc629));
        // E9 0334
        gbc.setState(0xe4af, 0x7d39, 0x6690, 0x8ac1, 0xf511, 0x8b3a, 0x1, 0x1);
        gbc.writeMem(0xe4af, { 0xe9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7d39, gbc.sp());
        EXPECT(0x8b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe4af));
        // E9 0335
        gbc.setState(0xbdf8, 0xe352, 0x2f50, 0xe97a, 0xb2b2, 0x3994, 0x1, 0x0);
        gbc.writeMem(0xbdf8, { 0xe9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe352, gbc.sp());
        EXPECT(0x3994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xbdf8));
        // E9 0336
        gbc.setState(0xbe14, 0x2ba3, 0x2940, 0xac9c, 0xc8e5, 0x6c0e, 0x0, 0x1);
        gbc.writeMem(0xbe14, { 0xe9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2ba3, gbc.sp());
        EXPECT(0x6c0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xbe14));
        // E9 0337
        gbc.setState(0x74d0, 0xc775, 0x4c60, 0xe6a0, 0x8394, 0x26a2, 0x0, 0x0);
        gbc.writeMem(0x74d0, { 0xe9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc775, gbc.sp());
        EXPECT(0x26a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0338
        gbc.setState(0x4915, 0x3819, 0x8cd0, 0x28ca, 0x1571, 0xf191, 0x0, 0x0);
        gbc.writeMem(0x4915, { 0xe9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3819, gbc.sp());
        EXPECT(0xf191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0339
        gbc.setState(0xdde8, 0x51c5, 0xf290, 0x8e52, 0x8781, 0x84a5, 0x1, 0x0);
        gbc.writeMem(0xdde8, { 0xe9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x51c5, gbc.sp());
        EXPECT(0x84a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xdde8));
        // E9 033A
        gbc.setState(0x6532, 0xb3af, 0x1340, 0x4802, 0x3106, 0xfaaa, 0x0, 0x0);
        gbc.writeMem(0x6532, { 0xe9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb3af, gbc.sp());
        EXPECT(0xfaaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 033B
        gbc.setState(0xb216, 0x2036, 0x69a0, 0x199e, 0xf3f, 0x6bb1, 0x1, 0x0);
        gbc.writeMem(0xb216, { 0xe9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2036, gbc.sp());
        EXPECT(0x6bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb216));
        // E9 033C
        gbc.setState(0xcfe7, 0xb216, 0xfb00, 0x4aba, 0x194f, 0xb6e0, 0x0, 0x0);
        gbc.writeMem(0xcfe7, { 0xe9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb216, gbc.sp());
        EXPECT(0xb6e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xcfe7));
        // E9 033D
        gbc.setState(0x6143, 0xe2ae, 0x9c30, 0xb0db, 0x83e4, 0x622f, 0x1, 0x0);
        gbc.writeMem(0x6143, { 0xe9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe2ae, gbc.sp());
        EXPECT(0x622f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 033E
        gbc.setState(0xa03c, 0x4c40, 0xf8c0, 0x68ab, 0xf6b4, 0x3b00, 0x0, 0x1);
        gbc.writeMem(0xa03c, { 0xe9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4c40, gbc.sp());
        EXPECT(0x3b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa03c));
        // E9 033F
        gbc.setState(0x2249, 0x4989, 0x3f30, 0x13ec, 0x2023, 0xe2b5, 0x0, 0x1);
        gbc.writeMem(0x2249, { 0xe9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4989, gbc.sp());
        EXPECT(0xe2b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0340
        gbc.setState(0x6586, 0x4d13, 0xc740, 0x819e, 0xe882, 0xd039, 0x1, 0x0);
        gbc.writeMem(0x6586, { 0xe9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4d13, gbc.sp());
        EXPECT(0xd039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0341
        gbc.setState(0x948c, 0xd721, 0x5490, 0x54fa, 0x85f9, 0x443d, 0x1, 0x1);
        gbc.writeMem(0x948c, { 0xe9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd721, gbc.sp());
        EXPECT(0x443d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x948c));
        // E9 0342
        gbc.setState(0xcd6a, 0x7ce2, 0x4500, 0x2444, 0xb060, 0xbf79, 0x1, 0x0);
        gbc.writeMem(0xcd6a, { 0xe9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7ce2, gbc.sp());
        EXPECT(0xbf79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xcd6a));
        // E9 0343
        gbc.setState(0x1e7a, 0xc9fb, 0x8a60, 0x377c, 0x8f78, 0xc93b, 0x0, 0x0);
        gbc.writeMem(0x1e7a, { 0xe9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc9fb, gbc.sp());
        EXPECT(0xc93b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0344
        gbc.setState(0xd50c, 0x4da5, 0x7350, 0x692d, 0xa169, 0xf7f9, 0x0, 0x0);
        gbc.writeMem(0xd50c, { 0xe9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4da5, gbc.sp());
        EXPECT(0xf7f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd50c));
        // E9 0345
        gbc.setState(0x18ef, 0x2b94, 0xdc10, 0x4082, 0xf306, 0xdcbe, 0x0, 0x0);
        gbc.writeMem(0x18ef, { 0xe9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2b94, gbc.sp());
        EXPECT(0xdcbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0346
        gbc.setState(0x74a0, 0x4430, 0x9530, 0xbf1f, 0x6363, 0x8e9b, 0x0, 0x1);
        gbc.writeMem(0x74a0, { 0xe9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4430, gbc.sp());
        EXPECT(0x8e9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0347
        gbc.setState(0x879, 0xad82, 0x85a0, 0x291e, 0xa707, 0x5d64, 0x0, 0x1);
        gbc.writeMem(0x879, { 0xe9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xad82, gbc.sp());
        EXPECT(0x5d64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0348
        gbc.setState(0x8c2e, 0xc635, 0xa880, 0xbaba, 0x20bd, 0x867a, 0x1, 0x0);
        gbc.writeMem(0x8c2e, { 0xe9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc635, gbc.sp());
        EXPECT(0x867a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8c2e));
        // E9 0349
        gbc.setState(0x1064, 0xc36a, 0xd300, 0x5083, 0xb44b, 0xead1, 0x1, 0x0);
        gbc.writeMem(0x1064, { 0xe9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc36a, gbc.sp());
        EXPECT(0xead1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 034A
        gbc.setState(0x930b, 0x3770, 0xcdf0, 0x6317, 0x9583, 0x23e5, 0x1, 0x0);
        gbc.writeMem(0x930b, { 0xe9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3770, gbc.sp());
        EXPECT(0x23e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x930b));
        // E9 034B
        gbc.setState(0x1d39, 0x1597, 0xea50, 0x7286, 0xb72a, 0xd534, 0x1, 0x1);
        gbc.writeMem(0x1d39, { 0xe9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1597, gbc.sp());
        EXPECT(0xd534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 034C
        gbc.setState(0x1e7e, 0x30c0, 0x9af0, 0xce86, 0x21f8, 0x566, 0x1, 0x0);
        gbc.writeMem(0x1e7e, { 0xe9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x30c0, gbc.sp());
        EXPECT(0x566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 034D
        gbc.setState(0xdfc9, 0x2d0d, 0xf900, 0x17a8, 0xaab0, 0x32e9, 0x1, 0x0);
        gbc.writeMem(0xdfc9, { 0xe9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2d0d, gbc.sp());
        EXPECT(0x32e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xdfc9));
        // E9 034E
        gbc.setState(0xb277, 0xbc21, 0xf9c0, 0x28a0, 0xae3a, 0x16c6, 0x0, 0x0);
        gbc.writeMem(0xb277, { 0xe9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbc21, gbc.sp());
        EXPECT(0x16c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb277));
        // E9 034F
        gbc.setState(0xa21a, 0xcd33, 0xe1d0, 0x4773, 0xb1a1, 0xce24, 0x1, 0x0);
        gbc.writeMem(0xa21a, { 0xe9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcd33, gbc.sp());
        EXPECT(0xce24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa21a));
        // E9 0350
        gbc.setState(0x69cb, 0x86e6, 0x8450, 0x595, 0x584c, 0xf34, 0x0, 0x0);
        gbc.writeMem(0x69cb, { 0xe9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x86e6, gbc.sp());
        EXPECT(0xf34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0351
        gbc.setState(0xa02e, 0xf44, 0x9640, 0x8770, 0x9f17, 0x1f71, 0x1, 0x1);
        gbc.writeMem(0xa02e, { 0xe9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf44, gbc.sp());
        EXPECT(0x1f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa02e));
        // E9 0352
        gbc.setState(0xba20, 0xc4de, 0x2bf0, 0xfbcf, 0xfc7f, 0xda0d, 0x0, 0x1);
        gbc.writeMem(0xba20, { 0xe9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc4de, gbc.sp());
        EXPECT(0xda0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xba20));
        // E9 0353
        gbc.setState(0xb2ef, 0x9e9b, 0xe2b0, 0x7783, 0x28b8, 0xe0d6, 0x1, 0x1);
        gbc.writeMem(0xb2ef, { 0xe9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9e9b, gbc.sp());
        EXPECT(0xe0d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb2ef));
        // E9 0354
        gbc.setState(0xd53e, 0xd5e6, 0x24c0, 0xc1df, 0x34cb, 0xa378, 0x0, 0x0);
        gbc.writeMem(0xd53e, { 0xe9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd5e6, gbc.sp());
        EXPECT(0xa378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd53e));
        // E9 0355
        gbc.setState(0x4336, 0x9cc8, 0x40c0, 0x7dcb, 0xcc23, 0xed86, 0x1, 0x0);
        gbc.writeMem(0x4336, { 0xe9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9cc8, gbc.sp());
        EXPECT(0xed86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0356
        gbc.setState(0x4e1e, 0xd22f, 0xb4c0, 0xf86e, 0x4fb1, 0xf79f, 0x0, 0x1);
        gbc.writeMem(0x4e1e, { 0xe9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd22f, gbc.sp());
        EXPECT(0xf79f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0357
        gbc.setState(0x28f7, 0xe3db, 0xf660, 0x37e2, 0x5f7b, 0xb3bb, 0x0, 0x1);
        gbc.writeMem(0x28f7, { 0xe9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe3db, gbc.sp());
        EXPECT(0xb3bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0358
        gbc.setState(0x30de, 0xd8b2, 0xb010, 0x2b18, 0x3dd5, 0x93cb, 0x0, 0x0);
        gbc.writeMem(0x30de, { 0xe9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd8b2, gbc.sp());
        EXPECT(0x93cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0359
        gbc.setState(0x2e95, 0x2e17, 0xa990, 0xe637, 0x4bd8, 0x1282, 0x0, 0x1);
        gbc.writeMem(0x2e95, { 0xe9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2e17, gbc.sp());
        EXPECT(0x1282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 035A
        gbc.setState(0x5052, 0x5dea, 0x7890, 0xef17, 0x7825, 0x4693, 0x0, 0x0);
        gbc.writeMem(0x5052, { 0xe9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5dea, gbc.sp());
        EXPECT(0x4693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 035B
        gbc.setState(0xd78f, 0xb139, 0x3140, 0xf6eb, 0x83b7, 0x3df9, 0x1, 0x0);
        gbc.writeMem(0xd78f, { 0xe9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb139, gbc.sp());
        EXPECT(0x3df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd78f));
        // E9 035C
        gbc.setState(0x98a7, 0xa590, 0xb1e0, 0x9996, 0x6947, 0xf321, 0x1, 0x1);
        gbc.writeMem(0x98a7, { 0xe9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa590, gbc.sp());
        EXPECT(0xf321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x98a7));
        // E9 035D
        gbc.setState(0x9053, 0xd93d, 0xfcb0, 0xb5fb, 0x56c2, 0x6b6e, 0x1, 0x0);
        gbc.writeMem(0x9053, { 0xe9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd93d, gbc.sp());
        EXPECT(0x6b6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9053));
        // E9 035E
        gbc.setState(0x34c0, 0x2bb0, 0x5e00, 0x8f61, 0xdd2e, 0x8545, 0x1, 0x0);
        gbc.writeMem(0x34c0, { 0xe9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2bb0, gbc.sp());
        EXPECT(0x8545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 035F
        gbc.setState(0x340f, 0xa9a4, 0x7150, 0x5e20, 0x95ee, 0xdc25, 0x1, 0x1);
        gbc.writeMem(0x340f, { 0xe9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa9a4, gbc.sp());
        EXPECT(0xdc25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0360
        gbc.setState(0xafec, 0x4483, 0x1980, 0x3542, 0x3d4e, 0x2853, 0x1, 0x1);
        gbc.writeMem(0xafec, { 0xe9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4483, gbc.sp());
        EXPECT(0x2853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xafec));
        // E9 0361
        gbc.setState(0x3b02, 0x91d0, 0x5510, 0x77ed, 0xc6c9, 0x8716, 0x0, 0x0);
        gbc.writeMem(0x3b02, { 0xe9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x91d0, gbc.sp());
        EXPECT(0x8716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0362
        gbc.setState(0xc0f5, 0x5a77, 0x8510, 0x305a, 0x9c78, 0xe19d, 0x1, 0x1);
        gbc.writeMem(0xc0f5, { 0xe9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5a77, gbc.sp());
        EXPECT(0xe19d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc0f5));
        // E9 0363
        gbc.setState(0x83eb, 0x5583, 0xfa50, 0x196e, 0xa219, 0xcc3a, 0x1, 0x1);
        gbc.writeMem(0x83eb, { 0xe9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5583, gbc.sp());
        EXPECT(0xcc3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x83eb));
        // E9 0364
        gbc.setState(0x99e, 0x8949, 0x17d0, 0x9ede, 0x37ca, 0x4028, 0x1, 0x1);
        gbc.writeMem(0x99e, { 0xe9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8949, gbc.sp());
        EXPECT(0x4028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0365
        gbc.setState(0x22b4, 0x97fa, 0xbe0, 0x3adc, 0x62, 0xe6f9, 0x1, 0x1);
        gbc.writeMem(0x22b4, { 0xe9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x97fa, gbc.sp());
        EXPECT(0xe6f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0366
        gbc.setState(0xaaf, 0xf943, 0x8110, 0x5237, 0xf104, 0xa9fb, 0x1, 0x0);
        gbc.writeMem(0xaaf, { 0xe9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf943, gbc.sp());
        EXPECT(0xa9fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0367
        gbc.setState(0xc2d2, 0x51a4, 0x3710, 0xcb7c, 0xc119, 0x4fd4, 0x0, 0x1);
        gbc.writeMem(0xc2d2, { 0xe9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x51a4, gbc.sp());
        EXPECT(0x4fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc2d2));
        // E9 0368
        gbc.setState(0x5b21, 0xaef3, 0xf280, 0x1592, 0xe4d4, 0x2d2, 0x1, 0x1);
        gbc.writeMem(0x5b21, { 0xe9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xaef3, gbc.sp());
        EXPECT(0x2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 036A
        gbc.setState(0xe218, 0x6010, 0x56d0, 0xb204, 0xed91, 0x3261, 0x1, 0x0);
        gbc.writeMem(0xe218, { 0xe9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6010, gbc.sp());
        EXPECT(0x3261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe218));
        // E9 036B
        gbc.setState(0xb290, 0x6d10, 0x9f40, 0x740e, 0x6129, 0x7db2, 0x0, 0x0);
        gbc.writeMem(0xb290, { 0xe9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6d10, gbc.sp());
        EXPECT(0x7db2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb290));
        // E9 036C
        gbc.setState(0xa0f9, 0x2d65, 0x9e70, 0x7361, 0x94ed, 0x113b, 0x1, 0x1);
        gbc.writeMem(0xa0f9, { 0xe9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2d65, gbc.sp());
        EXPECT(0x113b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa0f9));
        // E9 036D
        gbc.setState(0x9982, 0x66f3, 0xbe30, 0x81ef, 0xb43, 0x7689, 0x1, 0x1);
        gbc.writeMem(0x9982, { 0xe9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x66f3, gbc.sp());
        EXPECT(0x7689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9982));
        // E9 036E
        gbc.setState(0x9a02, 0x5c33, 0xf6e0, 0x73e8, 0xe66, 0xe04c, 0x1, 0x1);
        gbc.writeMem(0x9a02, { 0xe9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5c33, gbc.sp());
        EXPECT(0xe04c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9a02));
        // E9 036F
        gbc.setState(0xa5ab, 0xf894, 0xbcf0, 0x67b7, 0xfeac, 0x7432, 0x1, 0x0);
        gbc.writeMem(0xa5ab, { 0xe9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf894, gbc.sp());
        EXPECT(0x7432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa5ab));
        // E9 0370
        gbc.setState(0xa570, 0x4b0b, 0x74f0, 0x26f5, 0x458f, 0xf281, 0x0, 0x0);
        gbc.writeMem(0xa570, { 0xe9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4b0b, gbc.sp());
        EXPECT(0xf281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa570));
        // E9 0371
        gbc.setState(0x7af4, 0x901c, 0xa5c0, 0x3784, 0xb75e, 0xc4cf, 0x1, 0x0);
        gbc.writeMem(0x7af4, { 0xe9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x901c, gbc.sp());
        EXPECT(0xc4cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0372
        gbc.setState(0x508b, 0x3f87, 0x8ec0, 0x7db3, 0xb0e6, 0x4ef8, 0x1, 0x0);
        gbc.writeMem(0x508b, { 0xe9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3f87, gbc.sp());
        EXPECT(0x4ef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0373
        gbc.setState(0xe107, 0xb601, 0xf580, 0x8c, 0x45c6, 0x6a13, 0x0, 0x0);
        gbc.writeMem(0xe107, { 0xe9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb601, gbc.sp());
        EXPECT(0x6a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe107));
        // E9 0374
        gbc.setState(0xea33, 0xcd7e, 0x630, 0xf178, 0xc303, 0x4476, 0x0, 0x1);
        gbc.writeMem(0xea33, { 0xe9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xcd7e, gbc.sp());
        EXPECT(0x4476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xea33));
        // E9 0375
        gbc.setState(0x2c11, 0x65fc, 0x25d0, 0x9a41, 0xb11c, 0xc1f2, 0x1, 0x1);
        gbc.writeMem(0x2c11, { 0xe9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x65fc, gbc.sp());
        EXPECT(0xc1f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0376
        gbc.setState(0x9fa4, 0xebb8, 0x1ab0, 0x8aa, 0x30c4, 0xa702, 0x1, 0x0);
        gbc.writeMem(0x9fa4, { 0xe9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xebb8, gbc.sp());
        EXPECT(0xa702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9fa4));
        // E9 0377
        gbc.setState(0x9344, 0xb1e2, 0x640, 0x3502, 0xf4ee, 0x2817, 0x1, 0x0);
        gbc.writeMem(0x9344, { 0xe9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb1e2, gbc.sp());
        EXPECT(0x2817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9344));
        // E9 0378
        gbc.setState(0x65d7, 0x4d14, 0xe890, 0xab1b, 0xea68, 0xa45b, 0x1, 0x0);
        gbc.writeMem(0x65d7, { 0xe9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4d14, gbc.sp());
        EXPECT(0xa45b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0379
        gbc.setState(0x48ef, 0x59e, 0xe030, 0xb182, 0xded1, 0x378a, 0x0, 0x1);
        gbc.writeMem(0x48ef, { 0xe9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x59e, gbc.sp());
        EXPECT(0x378a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 037A
        gbc.setState(0x590b, 0x1ced, 0x580, 0xf1d, 0x207d, 0x2612, 0x0, 0x0);
        gbc.writeMem(0x590b, { 0xe9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1ced, gbc.sp());
        EXPECT(0x2612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 037B
        gbc.setState(0x4209, 0x698f, 0xdda0, 0xb1da, 0x61e5, 0x83a3, 0x1, 0x1);
        gbc.writeMem(0x4209, { 0xe9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x698f, gbc.sp());
        EXPECT(0x83a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 037C
        gbc.setState(0x453c, 0x9aff, 0xdc0, 0x98cb, 0xbb2f, 0xdf02, 0x0, 0x1);
        gbc.writeMem(0x453c, { 0xe9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9aff, gbc.sp());
        EXPECT(0xdf02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 037D
        gbc.setState(0x3d1d, 0x42d7, 0x11d0, 0x2380, 0x5aee, 0x7bb3, 0x1, 0x1);
        gbc.writeMem(0x3d1d, { 0xe9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x42d7, gbc.sp());
        EXPECT(0x7bb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 037F
        gbc.setState(0x786a, 0xbe8f, 0x3840, 0x111a, 0x9da4, 0x9203, 0x1, 0x0);
        gbc.writeMem(0x786a, { 0xe9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbe8f, gbc.sp());
        EXPECT(0x9203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0380
        gbc.setState(0x8edb, 0x9063, 0x5ba0, 0x3361, 0x9c3d, 0xdb07, 0x0, 0x0);
        gbc.writeMem(0x8edb, { 0xe9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9063, gbc.sp());
        EXPECT(0xdb07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8edb));
        // E9 0381
        gbc.setState(0x4f33, 0x1dd6, 0xe330, 0x5f01, 0x3b54, 0xbfb2, 0x0, 0x0);
        gbc.writeMem(0x4f33, { 0xe9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1dd6, gbc.sp());
        EXPECT(0xbfb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0382
        gbc.setState(0x2a2b, 0x695a, 0xaf40, 0x5442, 0xbe0c, 0xf8aa, 0x1, 0x1);
        gbc.writeMem(0x2a2b, { 0xe9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x695a, gbc.sp());
        EXPECT(0xf8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0383
        gbc.setState(0xb622, 0x2be4, 0xc410, 0x155f, 0x8c8, 0xf0c2, 0x1, 0x0);
        gbc.writeMem(0xb622, { 0xe9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2be4, gbc.sp());
        EXPECT(0xf0c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb622));
        // E9 0384
        gbc.setState(0x3cdf, 0x7094, 0xd50, 0xc988, 0x1116, 0xb862, 0x0, 0x0);
        gbc.writeMem(0x3cdf, { 0xe9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7094, gbc.sp());
        EXPECT(0xb862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0385
        gbc.setState(0x205d, 0x653e, 0x42b0, 0x4272, 0x96bf, 0x8f64, 0x1, 0x0);
        gbc.writeMem(0x205d, { 0xe9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x653e, gbc.sp());
        EXPECT(0x8f64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0386
        gbc.setState(0x4c4a, 0xd4b4, 0xf6c0, 0x4f95, 0x809d, 0xa63d, 0x1, 0x1);
        gbc.writeMem(0x4c4a, { 0xe9 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd4b4, gbc.sp());
        EXPECT(0xa63d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0388
        gbc.setState(0x611c, 0xfdc5, 0xe1a0, 0xc3d9, 0x20ff, 0xb3d5, 0x1, 0x1);
        gbc.writeMem(0x611c, { 0xe9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfdc5, gbc.sp());
        EXPECT(0xb3d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0389
        gbc.setState(0x61c4, 0x25b3, 0xfd20, 0x3c8f, 0x49c3, 0x1b89, 0x0, 0x1);
        gbc.writeMem(0x61c4, { 0xe9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x25b3, gbc.sp());
        EXPECT(0x1b89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 038B
        gbc.setState(0x1fc6, 0xeda9, 0xa2c0, 0x29fe, 0x138e, 0x2758, 0x0, 0x1);
        gbc.writeMem(0x1fc6, { 0xe9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xeda9, gbc.sp());
        EXPECT(0x2758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 038C
        gbc.setState(0x8c16, 0x17b5, 0x7a30, 0x31b9, 0xce77, 0xf95a, 0x1, 0x0);
        gbc.writeMem(0x8c16, { 0xe9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x17b5, gbc.sp());
        EXPECT(0xf95a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8c16));
        // E9 038D
        gbc.setState(0x694d, 0x404b, 0x7c10, 0x7423, 0x468, 0xd3e2, 0x1, 0x0);
        gbc.writeMem(0x694d, { 0xe9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x404b, gbc.sp());
        EXPECT(0xd3e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 038E
        gbc.setState(0x66ed, 0xd8a5, 0x6120, 0x5566, 0xb8a4, 0xdb16, 0x0, 0x1);
        gbc.writeMem(0x66ed, { 0xe9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd8a5, gbc.sp());
        EXPECT(0xdb16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0390
        gbc.setState(0xb199, 0x9f12, 0xde20, 0x3417, 0x4639, 0xf55a, 0x0, 0x1);
        gbc.writeMem(0xb199, { 0xe9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9f12, gbc.sp());
        EXPECT(0xf55a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb199));
        // E9 0391
        gbc.setState(0x6b85, 0xbe7, 0xed60, 0x3e95, 0xf222, 0x5263, 0x1, 0x0);
        gbc.writeMem(0x6b85, { 0xe9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbe7, gbc.sp());
        EXPECT(0x5263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0392
        gbc.setState(0x595a, 0x492, 0xf3d0, 0xb376, 0x5112, 0x4e0c, 0x1, 0x0);
        gbc.writeMem(0x595a, { 0xe9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x492, gbc.sp());
        EXPECT(0x4e0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0393
        gbc.setState(0xd498, 0xdf3d, 0xf7b0, 0x5d72, 0x4ff8, 0x9eb4, 0x1, 0x1);
        gbc.writeMem(0xd498, { 0xe9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdf3d, gbc.sp());
        EXPECT(0x9eb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd498));
        // E9 0394
        gbc.setState(0x8f32, 0xb78e, 0xd350, 0x8a0c, 0x4ec0, 0x527b, 0x1, 0x0);
        gbc.writeMem(0x8f32, { 0xe9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb78e, gbc.sp());
        EXPECT(0x527b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8f32));
        // E9 0395
        gbc.setState(0x682f, 0xf8df, 0x4d0, 0xd4af, 0x1b6b, 0xf72d, 0x1, 0x1);
        gbc.writeMem(0x682f, { 0xe9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf8df, gbc.sp());
        EXPECT(0xf72d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 0396
        gbc.setState(0x625c, 0x2b94, 0xfb80, 0xfd17, 0xcf3b, 0xc64b, 0x1, 0x1);
        gbc.writeMem(0x625c, { 0xe9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2b94, gbc.sp());
        EXPECT(0xc64b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 0397
        gbc.setState(0x8cd0, 0x7b93, 0x2f50, 0x761f, 0xb9e9, 0xaa9, 0x0, 0x0);
        gbc.writeMem(0x8cd0, { 0xe9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7b93, gbc.sp());
        EXPECT(0xaa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8cd0));
        // E9 0399
        gbc.setState(0x57d8, 0x47e9, 0x7d90, 0x44fc, 0xb096, 0x3702, 0x0, 0x0);
        gbc.writeMem(0x57d8, { 0xe9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x47e9, gbc.sp());
        EXPECT(0x3702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 039A
        gbc.setState(0xa107, 0x51a7, 0x7240, 0x45ba, 0x4e93, 0xec1d, 0x1, 0x1);
        gbc.writeMem(0xa107, { 0xe9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x51a7, gbc.sp());
        EXPECT(0xec1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa107));
        // E9 039B
        gbc.setState(0xc8b4, 0x25b0, 0xfeb0, 0x32b2, 0xd578, 0x3309, 0x0, 0x0);
        gbc.writeMem(0xc8b4, { 0xe9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x25b0, gbc.sp());
        EXPECT(0x3309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc8b4));
        // E9 039C
        gbc.setState(0xedbc, 0xe323, 0x8970, 0x8124, 0xd9bb, 0x2573, 0x1, 0x1);
        gbc.writeMem(0xedbc, { 0xe9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe323, gbc.sp());
        EXPECT(0x2573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xedbc));
        // E9 039D
        gbc.setState(0xa169, 0x2d0, 0x24b0, 0x5c97, 0xaf58, 0x69fd, 0x0, 0x1);
        gbc.writeMem(0xa169, { 0xe9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2d0, gbc.sp());
        EXPECT(0x69fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa169));
        // E9 039E
        gbc.setState(0xb04f, 0xa069, 0xc8d0, 0xafa6, 0xb862, 0x7df7, 0x0, 0x0);
        gbc.writeMem(0xb04f, { 0xe9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa069, gbc.sp());
        EXPECT(0x7df7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb04f));
        // E9 03A0
        gbc.setState(0xc894, 0x1bdc, 0x2fb0, 0x8141, 0x6062, 0x87f2, 0x0, 0x0);
        gbc.writeMem(0xc894, { 0xe9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1bdc, gbc.sp());
        EXPECT(0x87f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc894));
        // E9 03A1
        gbc.setState(0x96d4, 0xaa9d, 0x70, 0x3d16, 0xa959, 0x54d1, 0x1, 0x0);
        gbc.writeMem(0x96d4, { 0xe9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xaa9d, gbc.sp());
        EXPECT(0x54d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x96d4));
        // E9 03A2
        gbc.setState(0x233f, 0x441e, 0xae80, 0x66fa, 0x7af6, 0x6ca8, 0x1, 0x1);
        gbc.writeMem(0x233f, { 0xe9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x441e, gbc.sp());
        EXPECT(0x6ca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 03A3
        gbc.setState(0x4b00, 0xb4db, 0x8f90, 0xc3a1, 0xd112, 0x6f9b, 0x1, 0x1);
        gbc.writeMem(0x4b00, { 0xe9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb4db, gbc.sp());
        EXPECT(0x6f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 03A4
        gbc.setState(0x25cf, 0xe4e, 0x8870, 0x38fa, 0xc240, 0x4371, 0x1, 0x1);
        gbc.writeMem(0x25cf, { 0xe9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe4e, gbc.sp());
        EXPECT(0x4371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 03A5
        gbc.setState(0xb1fa, 0xd55b, 0x7600, 0x275c, 0x3358, 0x9f5d, 0x0, 0x1);
        gbc.writeMem(0xb1fa, { 0xe9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd55b, gbc.sp());
        EXPECT(0x9f5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb1fa));
        // E9 03A6
        gbc.setState(0x6eaf, 0xca6c, 0x8dc0, 0xcb61, 0xedf2, 0x3205, 0x0, 0x0);
        gbc.writeMem(0x6eaf, { 0xe9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xca6c, gbc.sp());
        EXPECT(0x3205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 03A7
        gbc.setState(0xe420, 0xf281, 0x31d0, 0x35f6, 0xe30, 0x7f53, 0x0, 0x1);
        gbc.writeMem(0xe420, { 0xe9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf281, gbc.sp());
        EXPECT(0x7f53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe420));
        // E9 03A8
        gbc.setState(0x25fa, 0xe4d0, 0xa960, 0x3fc7, 0xb43b, 0xb1e9, 0x1, 0x1);
        gbc.writeMem(0x25fa, { 0xe9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe4d0, gbc.sp());
        EXPECT(0xb1e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 03A9
        gbc.setState(0x88e6, 0xe22c, 0x8e50, 0xb719, 0x163a, 0x29bd, 0x1, 0x0);
        gbc.writeMem(0x88e6, { 0xe9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe22c, gbc.sp());
        EXPECT(0x29bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x88e6));
        // E9 03AA
        gbc.setState(0xa0d9, 0xfa9c, 0x3190, 0x2d7d, 0xaa5a, 0xe1a5, 0x0, 0x0);
        gbc.writeMem(0xa0d9, { 0xe9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfa9c, gbc.sp());
        EXPECT(0xe1a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa0d9));
        // E9 03AB
        gbc.setState(0x45d5, 0x4f80, 0xe570, 0x98b0, 0x3309, 0x39b8, 0x1, 0x1);
        gbc.writeMem(0x45d5, { 0xe9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4f80, gbc.sp());
        EXPECT(0x39b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 03AC
        gbc.setState(0x44bd, 0x7dea, 0x54b0, 0xa2b6, 0xdafe, 0xc608, 0x1, 0x0);
        gbc.writeMem(0x44bd, { 0xe9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7dea, gbc.sp());
        EXPECT(0xc608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 03AD
        gbc.setState(0xb8df, 0x7506, 0xb3c0, 0xeb2e, 0xb746, 0xa0ed, 0x1, 0x0);
        gbc.writeMem(0xb8df, { 0xe9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7506, gbc.sp());
        EXPECT(0xa0ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb8df));
        // E9 03AE
        gbc.setState(0xa5cd, 0xdfe4, 0x84e0, 0x6c2a, 0x36b8, 0xde90, 0x1, 0x1);
        gbc.writeMem(0xa5cd, { 0xe9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdfe4, gbc.sp());
        EXPECT(0xde90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa5cd));
        // E9 03AF
        gbc.setState(0xee24, 0xfa38, 0x3fe0, 0x42f9, 0xb4f6, 0xaae9, 0x0, 0x0);
        gbc.writeMem(0xee24, { 0xe9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xfa38, gbc.sp());
        EXPECT(0xaae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xee24));
        // E9 03B0
        gbc.setState(0x5ddb, 0xc51c, 0x9920, 0xdc1c, 0xa829, 0x3a5a, 0x0, 0x1);
        gbc.writeMem(0x5ddb, { 0xe9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc51c, gbc.sp());
        EXPECT(0x3a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 03B1
        gbc.setState(0xe936, 0xee35, 0xfc00, 0x9053, 0x5ee8, 0x1b5e, 0x1, 0x1);
        gbc.writeMem(0xe936, { 0xe9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xee35, gbc.sp());
        EXPECT(0x1b5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe936));
        // E9 03B2
        gbc.setState(0x2bbc, 0xac3d, 0xffb0, 0xf31b, 0x3954, 0xf40c, 0x1, 0x0);
        gbc.writeMem(0x2bbc, { 0xe9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xac3d, gbc.sp());
        EXPECT(0xf40c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 03B3
        gbc.setState(0x8d10, 0x9a18, 0x1130, 0x1510, 0x300f, 0x322d, 0x1, 0x0);
        gbc.writeMem(0x8d10, { 0xe9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9a18, gbc.sp());
        EXPECT(0x322d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8d10));
        // E9 03B5
        gbc.setState(0x461c, 0xb547, 0xb0e0, 0x81ce, 0x317, 0xc69c, 0x0, 0x1);
        gbc.writeMem(0x461c, { 0xe9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb547, gbc.sp());
        EXPECT(0xc69c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 03B6
        gbc.setState(0xa6f3, 0x407f, 0x60f0, 0x13d5, 0x5ceb, 0x280d, 0x1, 0x0);
        gbc.writeMem(0xa6f3, { 0xe9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x407f, gbc.sp());
        EXPECT(0x280d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa6f3));
        // E9 03B7
        gbc.setState(0xe2f6, 0x21f9, 0xbb20, 0xd521, 0x4db5, 0x9dab, 0x0, 0x0);
        gbc.writeMem(0xe2f6, { 0xe9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x21f9, gbc.sp());
        EXPECT(0x9dab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe2f6));
        // E9 03B8
        gbc.setState(0x5a1a, 0xba34, 0x6500, 0x8454, 0x175e, 0xe545, 0x1, 0x1);
        gbc.writeMem(0x5a1a, { 0xe9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xba34, gbc.sp());
        EXPECT(0xe545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 03B9
        gbc.setState(0xad0a, 0x5569, 0x8dc0, 0x7acc, 0xf5ce, 0xee12, 0x1, 0x0);
        gbc.writeMem(0xad0a, { 0xe9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5569, gbc.sp());
        EXPECT(0xee12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xad0a));
        // E9 03BA
        gbc.setState(0x184f, 0x3f58, 0x3f0, 0x401, 0x7e55, 0x1109, 0x1, 0x1);
        gbc.writeMem(0x184f, { 0xe9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3f58, gbc.sp());
        EXPECT(0x1109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 03BB
        gbc.setState(0x87c5, 0x3a31, 0x31b0, 0xd1e6, 0x6783, 0xe85, 0x0, 0x1);
        gbc.writeMem(0x87c5, { 0xe9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3a31, gbc.sp());
        EXPECT(0xe85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x87c5));
        // E9 03BC
        gbc.setState(0xa36e, 0x4920, 0x8990, 0x9bf5, 0xda14, 0xa325, 0x0, 0x0);
        gbc.writeMem(0xa36e, { 0xe9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4920, gbc.sp());
        EXPECT(0xa325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa36e));
        // E9 03BD
        gbc.setState(0x266, 0xad78, 0x7100, 0xea49, 0xbfa4, 0x6f42, 0x0, 0x1);
        gbc.writeMem(0x266, { 0xe9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xad78, gbc.sp());
        EXPECT(0x6f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 03BE
        gbc.setState(0xa6cf, 0x3c56, 0x4660, 0x2d9b, 0x6edd, 0x395a, 0x1, 0x0);
        gbc.writeMem(0xa6cf, { 0xe9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3c56, gbc.sp());
        EXPECT(0x395a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa6cf));
        // E9 03BF
        gbc.setState(0xa8d7, 0x66c4, 0x88d0, 0xf05f, 0xcf3, 0x227f, 0x1, 0x1);
        gbc.writeMem(0xa8d7, { 0xe9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x66c4, gbc.sp());
        EXPECT(0x227f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa8d7));
        // E9 03C0
        gbc.setState(0xe9f8, 0xe8e4, 0xe8e0, 0x2bd6, 0x9057, 0xe4a8, 0x1, 0x1);
        gbc.writeMem(0xe9f8, { 0xe9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe8e4, gbc.sp());
        EXPECT(0xe4a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe9f8));
        // E9 03C1
        gbc.setState(0xcd69, 0x7363, 0x9dd0, 0xc383, 0xe010, 0xb094, 0x0, 0x1);
        gbc.writeMem(0xcd69, { 0xe9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7363, gbc.sp());
        EXPECT(0xb094, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xcd69));
        // E9 03C2
        gbc.setState(0xe8b1, 0x23b7, 0x5d80, 0x94d2, 0x2452, 0x18a5, 0x0, 0x1);
        gbc.writeMem(0xe8b1, { 0xe9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x23b7, gbc.sp());
        EXPECT(0x18a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe8b1));
        // E9 03C3
        gbc.setState(0x6da8, 0x1688, 0x3df0, 0xc489, 0x204b, 0xb615, 0x1, 0x1);
        gbc.writeMem(0x6da8, { 0xe9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1688, gbc.sp());
        EXPECT(0xb615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 03C4
        gbc.setState(0xfd3, 0x24fb, 0x390, 0x12d0, 0xa725, 0x367c, 0x0, 0x1);
        gbc.writeMem(0xfd3, { 0xe9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x24fb, gbc.sp());
        EXPECT(0x367c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 03C5
        gbc.setState(0x7a34, 0x8b94, 0x98d0, 0xbf03, 0x3228, 0x94bb, 0x1, 0x0);
        gbc.writeMem(0x7a34, { 0xe9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8b94, gbc.sp());
        EXPECT(0x94bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 03C6
        gbc.setState(0x2e01, 0x5a6a, 0xf4f0, 0xb9bb, 0xfe6a, 0x589a, 0x0, 0x0);
        gbc.writeMem(0x2e01, { 0xe9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5a6a, gbc.sp());
        EXPECT(0x589a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 03C7
        gbc.setState(0x7563, 0x2c5e, 0x8c20, 0x245e, 0x416c, 0x4c56, 0x0, 0x0);
        gbc.writeMem(0x7563, { 0xe9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2c5e, gbc.sp());
        EXPECT(0x4c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 03C9
        gbc.setState(0xe5a2, 0x8b07, 0xb240, 0xafba, 0x9fb0, 0xb53f, 0x1, 0x0);
        gbc.writeMem(0xe5a2, { 0xe9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8b07, gbc.sp());
        EXPECT(0xb53f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe5a2));
        // E9 03CA
        gbc.setState(0xba2f, 0xce4e, 0x3370, 0xa0f3, 0x78c1, 0xcba1, 0x0, 0x0);
        gbc.writeMem(0xba2f, { 0xe9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xce4e, gbc.sp());
        EXPECT(0xcba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xba2f));
        // E9 03CB
        gbc.setState(0xee45, 0x92c9, 0x11f0, 0xd1c4, 0xa9a0, 0xbdac, 0x0, 0x1);
        gbc.writeMem(0xee45, { 0xe9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x92c9, gbc.sp());
        EXPECT(0xbdac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xee45));
        // E9 03CC
        gbc.setState(0x5ed9, 0xc1b5, 0x1400, 0xb541, 0xa7ea, 0xedd, 0x0, 0x0);
        gbc.writeMem(0x5ed9, { 0xe9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc1b5, gbc.sp());
        EXPECT(0xedd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 03CD
        gbc.setState(0x1ee2, 0x89d1, 0x4eb0, 0x1386, 0xb9e2, 0x1dae, 0x0, 0x1);
        gbc.writeMem(0x1ee2, { 0xe9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x89d1, gbc.sp());
        EXPECT(0x1dae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 03CE
        gbc.setState(0xaf55, 0xdef1, 0x1670, 0x5090, 0xd84b, 0xf8e0, 0x0, 0x0);
        gbc.writeMem(0xaf55, { 0xe9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xdef1, gbc.sp());
        EXPECT(0xf8e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xaf55));
        // E9 03CF
        gbc.setState(0x1340, 0xad86, 0x82f0, 0xb857, 0xcff2, 0xc404, 0x0, 0x0);
        gbc.writeMem(0x1340, { 0xe9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xad86, gbc.sp());
        EXPECT(0xc404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 03D0
        gbc.setState(0xb6c0, 0x930a, 0x64b0, 0xa99, 0x7fed, 0x37ca, 0x0, 0x0);
        gbc.writeMem(0xb6c0, { 0xe9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x930a, gbc.sp());
        EXPECT(0x37ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb6c0));
        // E9 03D1
        gbc.setState(0x5b98, 0xbf7c, 0x8570, 0x6a7c, 0x8131, 0x61f, 0x1, 0x1);
        gbc.writeMem(0x5b98, { 0xe9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbf7c, gbc.sp());
        EXPECT(0x61f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 03D2
        gbc.setState(0x4940, 0xe484, 0xda90, 0x32a9, 0xec21, 0x5809, 0x0, 0x0);
        gbc.writeMem(0x4940, { 0xe9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe484, gbc.sp());
        EXPECT(0x5809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 03D3
        gbc.setState(0xb615, 0x5c0d, 0xb750, 0xb6ec, 0x9d, 0x62a2, 0x0, 0x0);
        gbc.writeMem(0xb615, { 0xe9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5c0d, gbc.sp());
        EXPECT(0x62a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb615));
        // E9 03D4
        gbc.setState(0x41f1, 0x6fbf, 0xcb90, 0xe1b4, 0xbf89, 0x9f84, 0x0, 0x1);
        gbc.writeMem(0x41f1, { 0xe9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6fbf, gbc.sp());
        EXPECT(0x9f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 03D5
        gbc.setState(0x22b0, 0x3a9, 0x7390, 0xdd7, 0x9def, 0x5fc8, 0x0, 0x1);
        gbc.writeMem(0x22b0, { 0xe9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3a9, gbc.sp());
        EXPECT(0x5fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 03D6
        gbc.setState(0xa06, 0xfbbc, 0x67d0, 0x3775, 0x82d5, 0x1acd, 0x1, 0x0);
        gbc.writeMem(0xa06, { 0xe9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfbbc, gbc.sp());
        EXPECT(0x1acd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 03D7
        gbc.setState(0xcf7a, 0x1b36, 0xded0, 0xc0a0, 0x3944, 0xaac7, 0x0, 0x1);
        gbc.writeMem(0xcf7a, { 0xe9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1b36, gbc.sp());
        EXPECT(0xaac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xcf7a));
        // E9 03D8
        gbc.setState(0x21, 0xa46a, 0xf50, 0xe75c, 0xc89e, 0xa6e8, 0x0, 0x1);
        gbc.writeMem(0x21, { 0xe9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa46a, gbc.sp());
        EXPECT(0xa6e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 03D9
        gbc.setState(0xdf93, 0xb1f6, 0xd870, 0x6a73, 0x6ba5, 0xaffb, 0x1, 0x0);
        gbc.writeMem(0xdf93, { 0xe9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb1f6, gbc.sp());
        EXPECT(0xaffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xdf93));
        // E9 03DA
        gbc.setState(0xa2ec, 0xc4bd, 0x12e0, 0x4f19, 0x9e2, 0x129c, 0x0, 0x0);
        gbc.writeMem(0xa2ec, { 0xe9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc4bd, gbc.sp());
        EXPECT(0x129c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa2ec));
        // E9 03DB
        gbc.setState(0x58d9, 0x6778, 0x6090, 0x2836, 0x7492, 0x8c78, 0x0, 0x0);
        gbc.writeMem(0x58d9, { 0xe9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6778, gbc.sp());
        EXPECT(0x8c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 03DC
        gbc.setState(0xec80, 0x218f, 0x98f0, 0x8557, 0x5d31, 0xa5f2, 0x1, 0x0);
        gbc.writeMem(0xec80, { 0xe9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x218f, gbc.sp());
        EXPECT(0xa5f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xec80));
        // E9 03DD
        gbc.setState(0x2911, 0x9012, 0xecb0, 0xf53f, 0x12f9, 0x6e5e, 0x0, 0x1);
        gbc.writeMem(0x2911, { 0xe9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9012, gbc.sp());
        EXPECT(0x6e5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 03DE
        gbc.setState(0x141a, 0xf99a, 0x39a0, 0x475, 0x2fe2, 0x3e08, 0x0, 0x0);
        gbc.writeMem(0x141a, { 0xe9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf99a, gbc.sp());
        EXPECT(0x3e08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 03DF
        gbc.setState(0x390f, 0xd7f7, 0x2c20, 0x8df1, 0x266c, 0x595e, 0x0, 0x0);
        gbc.writeMem(0x390f, { 0xe9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd7f7, gbc.sp());
        EXPECT(0x595e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 03E1
        gbc.setState(0x5b58, 0x5147, 0x9500, 0x6201, 0xc0f6, 0xebe4, 0x1, 0x1);
        gbc.writeMem(0x5b58, { 0xe9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5147, gbc.sp());
        EXPECT(0xebe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 03E2
        gbc.setState(0x6401, 0x897d, 0x8980, 0xa0d5, 0x5fb, 0xc84e, 0x0, 0x0);
        gbc.writeMem(0x6401, { 0xe9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x897d, gbc.sp());
        EXPECT(0xc84e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 03E3
        gbc.setState(0x9ec, 0x1728, 0x8e90, 0x462f, 0x2d8a, 0x76a, 0x1, 0x1);
        gbc.writeMem(0x9ec, { 0xe9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1728, gbc.sp());
        EXPECT(0x76a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 03E4
        gbc.setState(0xda59, 0x37e4, 0x6ce0, 0x1720, 0x7b11, 0x7d1f, 0x1, 0x1);
        gbc.writeMem(0xda59, { 0xe9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x37e4, gbc.sp());
        EXPECT(0x7d1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xda59));
        // E9 03E5
        gbc.setState(0x718b, 0xb65c, 0x12f0, 0x6935, 0xae57, 0xb3e, 0x1, 0x1);
        gbc.writeMem(0x718b, { 0xe9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb65c, gbc.sp());
        EXPECT(0xb3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // E9 03E6
        gbc.setState(0x5e7d, 0x50a0, 0xe7c0, 0x5cd9, 0xaf68, 0x63d9, 0x1, 0x0);
        gbc.writeMem(0x5e7d, { 0xe9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x50a0, gbc.sp());
        EXPECT(0x63d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // E9 03E7
        gbc.setState(0xde30, 0xe140, 0x2460, 0xdf8, 0xb61e, 0x8d75, 0x1, 0x1);
        gbc.writeMem(0xde30, { 0xe9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe140, gbc.sp());
        EXPECT(0x8d75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xde30));
    }
