#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_45)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_45) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 45 0000
        gbc.setState(0xa874, 0xfb5d, 0x3890, 0x87b, 0x87b4, 0x9d78, 0x0, 0x1);
        gbc.writeMem(0xa874, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xfb5d);
        EXPECT(gbc.pc(), 0xa876);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa874), 0xcb);
        EXPECT(gbc.readMem(0xa875), 0x45);
        // CB 45 0001
        gbc.setState(0x339a, 0x7697, 0xa980, 0x2488, 0x2b88, 0x6c95, 0x0, 0x1);
        gbc.writeMem(0x339a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x7697);
        EXPECT(gbc.pc(), 0x339c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0002
        gbc.setState(0x996f, 0xa7cd, 0xf450, 0xc169, 0x644b, 0x306d, 0x0, 0x1);
        gbc.writeMem(0x996f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa7cd);
        EXPECT(gbc.pc(), 0x9971);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x996f), 0xcb);
        EXPECT(gbc.readMem(0x9970), 0x45);
        // CB 45 0003
        gbc.setState(0x1b2a, 0xd242, 0x5f30, 0x2ed6, 0x6ee9, 0xfc94, 0x1, 0x1);
        gbc.writeMem(0x1b2a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd242);
        EXPECT(gbc.pc(), 0x1b2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0004
        gbc.setState(0x6c64, 0xb424, 0x7f0, 0x85a4, 0xe99c, 0xd26a, 0x1, 0x0);
        gbc.writeMem(0x6c64, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb424);
        EXPECT(gbc.pc(), 0x6c66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0005
        gbc.setState(0x5fcd, 0xb657, 0x4420, 0x30e9, 0x6b14, 0xba22, 0x0, 0x1);
        gbc.writeMem(0x5fcd, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xb657);
        EXPECT(gbc.pc(), 0x5fcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0006
        gbc.setState(0xbf05, 0x4974, 0x4190, 0xd1b6, 0x2ab2, 0x893a, 0x0, 0x0);
        gbc.writeMem(0xbf05, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4974);
        EXPECT(gbc.pc(), 0xbf07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf05), 0xcb);
        EXPECT(gbc.readMem(0xbf06), 0x45);
        // CB 45 0007
        gbc.setState(0xe741, 0xacfb, 0x6f80, 0x8073, 0xf8f9, 0xe23, 0x0, 0x1);
        gbc.writeMem(0xe741, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xacfb);
        EXPECT(gbc.pc(), 0xe743);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe741), 0xcb);
        EXPECT(gbc.readMem(0xe742), 0x45);
        // CB 45 0008
        gbc.setState(0x6a5c, 0xacb9, 0xba90, 0x42e3, 0x590e, 0x5e06, 0x0, 0x0);
        gbc.writeMem(0x6a5c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xacb9);
        EXPECT(gbc.pc(), 0x6a5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0009
        gbc.setState(0x12d3, 0x258d, 0xea20, 0x3f9a, 0x5e2a, 0x409f, 0x0, 0x1);
        gbc.writeMem(0x12d3, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x258d);
        EXPECT(gbc.pc(), 0x12d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 000A
        gbc.setState(0x7787, 0x15f5, 0xefa0, 0xb48a, 0xd66a, 0x6122, 0x0, 0x1);
        gbc.writeMem(0x7787, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x15f5);
        EXPECT(gbc.pc(), 0x7789);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 000B
        gbc.setState(0x4ea, 0x3286, 0x2ec0, 0x4038, 0x3f21, 0xe593, 0x1, 0x0);
        gbc.writeMem(0x4ea, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x3286);
        EXPECT(gbc.pc(), 0x4ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 000C
        gbc.setState(0x192c, 0xfa32, 0x5770, 0x19f2, 0x2a76, 0x9325, 0x0, 0x0);
        gbc.writeMem(0x192c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xfa32);
        EXPECT(gbc.pc(), 0x192e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 000D
        gbc.setState(0x366e, 0xda02, 0xb630, 0x5d3, 0xa800, 0xd809, 0x1, 0x0);
        gbc.writeMem(0x366e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xda02);
        EXPECT(gbc.pc(), 0x3670);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 000F
        gbc.setState(0xc3ce, 0x1757, 0xfec0, 0x1b71, 0xfca7, 0xd692, 0x0, 0x0);
        gbc.writeMem(0xc3ce, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1757);
        EXPECT(gbc.pc(), 0xc3d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3ce), 0xcb);
        EXPECT(gbc.readMem(0xc3cf), 0x45);
        // CB 45 0010
        gbc.setState(0x6de7, 0xe376, 0xfe00, 0x24d7, 0x2182, 0xe104, 0x0, 0x0);
        gbc.writeMem(0x6de7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xe376);
        EXPECT(gbc.pc(), 0x6de9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0011
        gbc.setState(0xe1ef, 0xd159, 0xa90, 0xaef8, 0x947a, 0x5984, 0x1, 0x1);
        gbc.writeMem(0xe1ef, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd159);
        EXPECT(gbc.pc(), 0xe1f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ef), 0xcb);
        EXPECT(gbc.readMem(0xe1f0), 0x45);
        // CB 45 0012
        gbc.setState(0xabc5, 0xc3ad, 0x75f0, 0xb99b, 0x9bd, 0x1b47, 0x0, 0x0);
        gbc.writeMem(0xabc5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc3ad);
        EXPECT(gbc.pc(), 0xabc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabc5), 0xcb);
        EXPECT(gbc.readMem(0xabc6), 0x45);
        // CB 45 0013
        gbc.setState(0x1634, 0xaa9b, 0x4370, 0x41a5, 0x50a2, 0xdaeb, 0x1, 0x1);
        gbc.writeMem(0x1634, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xaa9b);
        EXPECT(gbc.pc(), 0x1636);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0014
        gbc.setState(0x8284, 0x2b02, 0x1070, 0xc9c7, 0x6aea, 0x19ff, 0x0, 0x1);
        gbc.writeMem(0x8284, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2b02);
        EXPECT(gbc.pc(), 0x8286);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8284), 0xcb);
        EXPECT(gbc.readMem(0x8285), 0x45);
        // CB 45 0015
        gbc.setState(0x1e18, 0x8a9a, 0x9a50, 0x5b1c, 0xe12d, 0x5de6, 0x0, 0x1);
        gbc.writeMem(0x1e18, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8a9a);
        EXPECT(gbc.pc(), 0x1e1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0016
        gbc.setState(0xb3d5, 0x93b0, 0xc20, 0xa2b8, 0x5d8d, 0x68bf, 0x1, 0x0);
        gbc.writeMem(0xb3d5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x93b0);
        EXPECT(gbc.pc(), 0xb3d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3d5), 0xcb);
        EXPECT(gbc.readMem(0xb3d6), 0x45);
        // CB 45 0017
        gbc.setState(0x3ff9, 0x2002, 0xad80, 0xe3f7, 0x51b4, 0xfa6c, 0x1, 0x0);
        gbc.writeMem(0x3ff9, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2002);
        EXPECT(gbc.pc(), 0x3ffb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0018
        gbc.setState(0xb0d1, 0x1bbc, 0xc990, 0xbfab, 0xf06c, 0xab12, 0x1, 0x1);
        gbc.writeMem(0xb0d1, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x1bbc);
        EXPECT(gbc.pc(), 0xb0d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0d1), 0xcb);
        EXPECT(gbc.readMem(0xb0d2), 0x45);
        // CB 45 0019
        gbc.setState(0xc3a8, 0xbabb, 0x87a0, 0x96c, 0x7352, 0x689e, 0x0, 0x0);
        gbc.writeMem(0xc3a8, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xbabb);
        EXPECT(gbc.pc(), 0xc3aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3a8), 0xcb);
        EXPECT(gbc.readMem(0xc3a9), 0x45);
        // CB 45 001A
        gbc.setState(0x9c6f, 0x9631, 0x6990, 0xa874, 0x7866, 0xb935, 0x1, 0x0);
        gbc.writeMem(0x9c6f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9631);
        EXPECT(gbc.pc(), 0x9c71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c6f), 0xcb);
        EXPECT(gbc.readMem(0x9c70), 0x45);
        // CB 45 001B
        gbc.setState(0xe59e, 0x3e8e, 0x91e0, 0xe137, 0x6a07, 0xa42e, 0x1, 0x0);
        gbc.writeMem(0xe59e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3e8e);
        EXPECT(gbc.pc(), 0xe5a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe59e), 0xcb);
        EXPECT(gbc.readMem(0xe59f), 0x45);
        // CB 45 001C
        gbc.setState(0x4858, 0x6506, 0x3c80, 0x8e3b, 0x410f, 0xe1c6, 0x0, 0x0);
        gbc.writeMem(0x4858, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x6506);
        EXPECT(gbc.pc(), 0x485a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 001D
        gbc.setState(0x6c4d, 0xec62, 0x29b0, 0x2e21, 0xdd4e, 0xa18b, 0x0, 0x1);
        gbc.writeMem(0x6c4d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xec62);
        EXPECT(gbc.pc(), 0x6c4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 001E
        gbc.setState(0x4c8c, 0xd420, 0x16e0, 0xac2f, 0xbc30, 0xae8d, 0x1, 0x0);
        gbc.writeMem(0x4c8c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd420);
        EXPECT(gbc.pc(), 0x4c8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 001F
        gbc.setState(0xb17a, 0x5804, 0x8e30, 0x2f20, 0x81e, 0x811, 0x0, 0x1);
        gbc.writeMem(0xb17a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5804);
        EXPECT(gbc.pc(), 0xb17c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb17a), 0xcb);
        EXPECT(gbc.readMem(0xb17b), 0x45);
        // CB 45 0020
        gbc.setState(0x1d0b, 0xe426, 0xd200, 0xee97, 0xe9f7, 0x92ff, 0x1, 0x0);
        gbc.writeMem(0x1d0b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe426);
        EXPECT(gbc.pc(), 0x1d0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0021
        gbc.setState(0xca50, 0xaff7, 0xdb50, 0x6c7f, 0x3e6d, 0xc4ca, 0x1, 0x0);
        gbc.writeMem(0xca50, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xaff7);
        EXPECT(gbc.pc(), 0xca52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca50), 0xcb);
        EXPECT(gbc.readMem(0xca51), 0x45);
        // CB 45 0022
        gbc.setState(0x32ab, 0xcd, 0xfff0, 0x9516, 0x3e2a, 0xd5a5, 0x0, 0x0);
        gbc.writeMem(0x32ab, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xcd);
        EXPECT(gbc.pc(), 0x32ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0023
        gbc.setState(0x7b20, 0xa1c, 0x1410, 0x6d57, 0x2009, 0xcd75, 0x0, 0x1);
        gbc.writeMem(0x7b20, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xa1c);
        EXPECT(gbc.pc(), 0x7b22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0024
        gbc.setState(0xa668, 0xa29a, 0x8720, 0x5a8a, 0x3e3f, 0x4365, 0x1, 0x0);
        gbc.writeMem(0xa668, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa29a);
        EXPECT(gbc.pc(), 0xa66a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa668), 0xcb);
        EXPECT(gbc.readMem(0xa669), 0x45);
        // CB 45 0025
        gbc.setState(0x68, 0xfe6e, 0x2790, 0xd3e6, 0x363b, 0x7014, 0x0, 0x0);
        gbc.writeMem(0x68, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xfe6e);
        EXPECT(gbc.pc(), 0x6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0026
        gbc.setState(0x3f7, 0x6308, 0x610, 0xec6c, 0x266d, 0xa97f, 0x1, 0x0);
        gbc.writeMem(0x3f7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x6308);
        EXPECT(gbc.pc(), 0x3f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0027
        gbc.setState(0xa6ab, 0xb7c7, 0x49f0, 0x2804, 0xa019, 0x4789, 0x1, 0x1);
        gbc.writeMem(0xa6ab, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb7c7);
        EXPECT(gbc.pc(), 0xa6ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6ab), 0xcb);
        EXPECT(gbc.readMem(0xa6ac), 0x45);
        // CB 45 0028
        gbc.setState(0x1f5b, 0x9efe, 0x91f0, 0x370a, 0x3440, 0x7345, 0x0, 0x0);
        gbc.writeMem(0x1f5b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x9efe);
        EXPECT(gbc.pc(), 0x1f5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0029
        gbc.setState(0xb931, 0x8ad5, 0x7940, 0x76f7, 0x6b3, 0xf0ba, 0x0, 0x0);
        gbc.writeMem(0xb931, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8ad5);
        EXPECT(gbc.pc(), 0xb933);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb931), 0xcb);
        EXPECT(gbc.readMem(0xb932), 0x45);
        // CB 45 002A
        gbc.setState(0x6870, 0x2056, 0xbb10, 0x731d, 0x62b2, 0xa1ca, 0x1, 0x1);
        gbc.writeMem(0x6870, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2056);
        EXPECT(gbc.pc(), 0x6872);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 002B
        gbc.setState(0xd9d8, 0x383, 0x3f70, 0xa3d6, 0xfbd8, 0x55a4, 0x1, 0x0);
        gbc.writeMem(0xd9d8, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x383);
        EXPECT(gbc.pc(), 0xd9da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9d8), 0xcb);
        EXPECT(gbc.readMem(0xd9d9), 0x45);
        // CB 45 002C
        gbc.setState(0xe1fa, 0xd3b2, 0x2230, 0x958e, 0x5f80, 0x4553, 0x1, 0x1);
        gbc.writeMem(0xe1fa, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xd3b2);
        EXPECT(gbc.pc(), 0xe1fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1fa), 0xcb);
        EXPECT(gbc.readMem(0xe1fb), 0x45);
        // CB 45 002E
        gbc.setState(0x78f, 0xbbb9, 0x6bd0, 0xbed9, 0xc3d1, 0x52c1, 0x1, 0x0);
        gbc.writeMem(0x78f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xbbb9);
        EXPECT(gbc.pc(), 0x791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 002F
        gbc.setState(0xe3, 0xf778, 0xaff0, 0xf2d8, 0xabcb, 0xb44e, 0x1, 0x0);
        gbc.writeMem(0xe3, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf778);
        EXPECT(gbc.pc(), 0xe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0030
        gbc.setState(0x65ac, 0x6592, 0xb0, 0xe43f, 0x3d3b, 0x2e4b, 0x0, 0x0);
        gbc.writeMem(0x65ac, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6592);
        EXPECT(gbc.pc(), 0x65ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0031
        gbc.setState(0x3da1, 0x9bb5, 0x7840, 0x1029, 0xe19f, 0x3b06, 0x1, 0x1);
        gbc.writeMem(0x3da1, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9bb5);
        EXPECT(gbc.pc(), 0x3da3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0032
        gbc.setState(0x39fa, 0xcfd5, 0xf0d0, 0xd4a9, 0x1945, 0xb594, 0x1, 0x0);
        gbc.writeMem(0x39fa, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xcfd5);
        EXPECT(gbc.pc(), 0x39fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0033
        gbc.setState(0xa483, 0x27b5, 0xa3e0, 0x23, 0x9059, 0x1213, 0x0, 0x1);
        gbc.writeMem(0xa483, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x27b5);
        EXPECT(gbc.pc(), 0xa485);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa483), 0xcb);
        EXPECT(gbc.readMem(0xa484), 0x45);
        // CB 45 0034
        gbc.setState(0x575f, 0x9bea, 0xe9c0, 0x1eac, 0xd54d, 0x85df, 0x0, 0x1);
        gbc.writeMem(0x575f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9bea);
        EXPECT(gbc.pc(), 0x5761);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0035
        gbc.setState(0x2d7c, 0x3bb4, 0x7ce0, 0x89f7, 0xbb01, 0x8171, 0x1, 0x0);
        gbc.writeMem(0x2d7c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x3bb4);
        EXPECT(gbc.pc(), 0x2d7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0036
        gbc.setState(0xc16c, 0x11b3, 0xdd10, 0x56c2, 0x8441, 0x3c0b, 0x1, 0x1);
        gbc.writeMem(0xc16c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x11b3);
        EXPECT(gbc.pc(), 0xc16e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc16c), 0xcb);
        EXPECT(gbc.readMem(0xc16d), 0x45);
        // CB 45 0037
        gbc.setState(0xd814, 0xa318, 0x6390, 0xcdbb, 0x239a, 0x1c23, 0x1, 0x0);
        gbc.writeMem(0xd814, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa318);
        EXPECT(gbc.pc(), 0xd816);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd814), 0xcb);
        EXPECT(gbc.readMem(0xd815), 0x45);
        // CB 45 0038
        gbc.setState(0x603f, 0xdb66, 0xd20, 0xe4c6, 0x66ca, 0x7e1b, 0x0, 0x0);
        gbc.writeMem(0x603f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xdb66);
        EXPECT(gbc.pc(), 0x6041);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0039
        gbc.setState(0x8c07, 0xd9ae, 0xa860, 0x865b, 0x2c86, 0xda3b, 0x0, 0x1);
        gbc.writeMem(0x8c07, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xd9ae);
        EXPECT(gbc.pc(), 0x8c09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c07), 0xcb);
        EXPECT(gbc.readMem(0x8c08), 0x45);
        // CB 45 003A
        gbc.setState(0x57d8, 0xe6ea, 0x9e80, 0xdd0e, 0xbba, 0x1e12, 0x0, 0x1);
        gbc.writeMem(0x57d8, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe6ea);
        EXPECT(gbc.pc(), 0x57da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 003B
        gbc.setState(0x7637, 0x9fb2, 0xd800, 0x9882, 0xa646, 0xe3c1, 0x0, 0x1);
        gbc.writeMem(0x7637, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9fb2);
        EXPECT(gbc.pc(), 0x7639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 003C
        gbc.setState(0xe365, 0x5058, 0x88e0, 0x2229, 0x9d5c, 0x2e77, 0x0, 0x0);
        gbc.writeMem(0xe365, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x5058);
        EXPECT(gbc.pc(), 0xe367);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe365), 0xcb);
        EXPECT(gbc.readMem(0xe366), 0x45);
        // CB 45 003D
        gbc.setState(0xc0e, 0xb5db, 0x6730, 0xdcdd, 0x3c42, 0xada0, 0x0, 0x0);
        gbc.writeMem(0xc0e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb5db);
        EXPECT(gbc.pc(), 0xc10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 003E
        gbc.setState(0x914d, 0xac5c, 0x6220, 0xb302, 0xd5de, 0x3777, 0x1, 0x1);
        gbc.writeMem(0x914d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xac5c);
        EXPECT(gbc.pc(), 0x914f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x914d), 0xcb);
        EXPECT(gbc.readMem(0x914e), 0x45);
        // CB 45 003F
        gbc.setState(0x53d7, 0x2c7c, 0xcf80, 0x9946, 0x928b, 0x1b42, 0x0, 0x1);
        gbc.writeMem(0x53d7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2c7c);
        EXPECT(gbc.pc(), 0x53d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0040
        gbc.setState(0x786f, 0x63cc, 0x3ee0, 0x4052, 0x198a, 0x645d, 0x1, 0x1);
        gbc.writeMem(0x786f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x63cc);
        EXPECT(gbc.pc(), 0x7871);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0041
        gbc.setState(0xec2c, 0xf71d, 0xbbb0, 0x87bd, 0x2eb9, 0x46cb, 0x1, 0x1);
        gbc.writeMem(0xec2c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xf71d);
        EXPECT(gbc.pc(), 0xec2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec2c), 0xcb);
        EXPECT(gbc.readMem(0xec2d), 0x45);
        // CB 45 0042
        gbc.setState(0xbe4c, 0x44e6, 0x4700, 0x31de, 0x7b71, 0x1aed, 0x1, 0x1);
        gbc.writeMem(0xbe4c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x44e6);
        EXPECT(gbc.pc(), 0xbe4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe4c), 0xcb);
        EXPECT(gbc.readMem(0xbe4d), 0x45);
        // CB 45 0043
        gbc.setState(0xb96, 0x38ef, 0xc7a0, 0x49d2, 0x2cc4, 0x606c, 0x1, 0x0);
        gbc.writeMem(0xb96, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x38ef);
        EXPECT(gbc.pc(), 0xb98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0044
        gbc.setState(0xecfa, 0xb15d, 0xad00, 0xc89e, 0xcb07, 0x8097, 0x0, 0x0);
        gbc.writeMem(0xecfa, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb15d);
        EXPECT(gbc.pc(), 0xecfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecfa), 0xcb);
        EXPECT(gbc.readMem(0xecfb), 0x45);
        // CB 45 0045
        gbc.setState(0x2de7, 0x23f7, 0x8200, 0x72e8, 0xcb, 0xa750, 0x0, 0x1);
        gbc.writeMem(0x2de7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x23f7);
        EXPECT(gbc.pc(), 0x2de9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0046
        gbc.setState(0xc43a, 0xefb6, 0x58f0, 0x4dcd, 0x62eb, 0x7637, 0x1, 0x1);
        gbc.writeMem(0xc43a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xefb6);
        EXPECT(gbc.pc(), 0xc43c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc43a), 0xcb);
        EXPECT(gbc.readMem(0xc43b), 0x45);
        // CB 45 0047
        gbc.setState(0x5a19, 0x2ab2, 0xf8b0, 0x8764, 0x7f4a, 0xccdd, 0x0, 0x1);
        gbc.writeMem(0x5a19, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2ab2);
        EXPECT(gbc.pc(), 0x5a1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0048
        gbc.setState(0xa168, 0xb631, 0x7af0, 0x4ae6, 0x704f, 0xe41e, 0x1, 0x1);
        gbc.writeMem(0xa168, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb631);
        EXPECT(gbc.pc(), 0xa16a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa168), 0xcb);
        EXPECT(gbc.readMem(0xa169), 0x45);
        // CB 45 0049
        gbc.setState(0x8dcc, 0x592, 0x6660, 0x80c9, 0x6f37, 0x4457, 0x0, 0x1);
        gbc.writeMem(0x8dcc, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x592);
        EXPECT(gbc.pc(), 0x8dce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dcc), 0xcb);
        EXPECT(gbc.readMem(0x8dcd), 0x45);
        // CB 45 004A
        gbc.setState(0x54f3, 0x921b, 0x960, 0xb61e, 0xe2cd, 0xbf8c, 0x0, 0x1);
        gbc.writeMem(0x54f3, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x921b);
        EXPECT(gbc.pc(), 0x54f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 004B
        gbc.setState(0x9d18, 0x5ff3, 0x15f0, 0x1540, 0xd335, 0x33c5, 0x0, 0x0);
        gbc.writeMem(0x9d18, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x5ff3);
        EXPECT(gbc.pc(), 0x9d1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d18), 0xcb);
        EXPECT(gbc.readMem(0x9d19), 0x45);
        // CB 45 004C
        gbc.setState(0x57ef, 0xc580, 0x8270, 0x67ce, 0xa6e0, 0x419c, 0x0, 0x1);
        gbc.writeMem(0x57ef, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc580);
        EXPECT(gbc.pc(), 0x57f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 004D
        gbc.setState(0xed3a, 0x5c93, 0x3190, 0x8679, 0xc520, 0xeae7, 0x0, 0x1);
        gbc.writeMem(0xed3a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5c93);
        EXPECT(gbc.pc(), 0xed3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed3a), 0xcb);
        EXPECT(gbc.readMem(0xed3b), 0x45);
        // CB 45 004E
        gbc.setState(0x592d, 0xcc42, 0xac10, 0x68d7, 0xc16c, 0x4f6f, 0x0, 0x1);
        gbc.writeMem(0x592d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xcc42);
        EXPECT(gbc.pc(), 0x592f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 004F
        gbc.setState(0xd61b, 0x36e6, 0xc990, 0x42a5, 0x1e52, 0xaacd, 0x0, 0x0);
        gbc.writeMem(0xd61b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x36e6);
        EXPECT(gbc.pc(), 0xd61d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd61b), 0xcb);
        EXPECT(gbc.readMem(0xd61c), 0x45);
        // CB 45 0050
        gbc.setState(0xb56a, 0x825e, 0x3420, 0xfebe, 0xc6d, 0xf875, 0x0, 0x0);
        gbc.writeMem(0xb56a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x825e);
        EXPECT(gbc.pc(), 0xb56c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb56a), 0xcb);
        EXPECT(gbc.readMem(0xb56b), 0x45);
        // CB 45 0051
        gbc.setState(0x156d, 0x77d5, 0x50a0, 0xdcb0, 0x5230, 0xf6a5, 0x1, 0x0);
        gbc.writeMem(0x156d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x77d5);
        EXPECT(gbc.pc(), 0x156f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0052
        gbc.setState(0xd213, 0x968c, 0xa3d0, 0xa930, 0xd59b, 0xd0b4, 0x1, 0x1);
        gbc.writeMem(0xd213, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x968c);
        EXPECT(gbc.pc(), 0xd215);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd213), 0xcb);
        EXPECT(gbc.readMem(0xd214), 0x45);
        // CB 45 0053
        gbc.setState(0x2f28, 0x2c34, 0x4f60, 0xf08, 0x7bf9, 0x67e5, 0x1, 0x0);
        gbc.writeMem(0x2f28, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2c34);
        EXPECT(gbc.pc(), 0x2f2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0054
        gbc.setState(0x8044, 0xe409, 0x5220, 0xb7a8, 0x2c7b, 0xf889, 0x0, 0x1);
        gbc.writeMem(0x8044, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe409);
        EXPECT(gbc.pc(), 0x8046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8044), 0xcb);
        EXPECT(gbc.readMem(0x8045), 0x45);
        // CB 45 0055
        gbc.setState(0xe7cd, 0x15f1, 0x98e0, 0xe0e2, 0x4201, 0x9b17, 0x0, 0x1);
        gbc.writeMem(0xe7cd, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x15f1);
        EXPECT(gbc.pc(), 0xe7cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7cd), 0xcb);
        EXPECT(gbc.readMem(0xe7ce), 0x45);
        // CB 45 0056
        gbc.setState(0xedd2, 0x1830, 0x3940, 0x757c, 0x7419, 0xa698, 0x1, 0x1);
        gbc.writeMem(0xedd2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1830);
        EXPECT(gbc.pc(), 0xedd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedd2), 0xcb);
        EXPECT(gbc.readMem(0xedd3), 0x45);
        // CB 45 0057
        gbc.setState(0xf01, 0x4f83, 0x76e0, 0x5bc3, 0x23ec, 0x29c9, 0x0, 0x1);
        gbc.writeMem(0xf01, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4f83);
        EXPECT(gbc.pc(), 0xf03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0058
        gbc.setState(0x6b4b, 0x4e47, 0xe250, 0x8365, 0x2d1d, 0xc533, 0x1, 0x1);
        gbc.writeMem(0x6b4b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4e47);
        EXPECT(gbc.pc(), 0x6b4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0059
        gbc.setState(0x3cc5, 0x1730, 0x4ea0, 0x120a, 0x7587, 0x1f04, 0x0, 0x0);
        gbc.writeMem(0x3cc5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1730);
        EXPECT(gbc.pc(), 0x3cc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 005A
        gbc.setState(0xb7f7, 0x696f, 0xd590, 0x10ac, 0xc48f, 0xca20, 0x1, 0x0);
        gbc.writeMem(0xb7f7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x696f);
        EXPECT(gbc.pc(), 0xb7f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7f7), 0xcb);
        EXPECT(gbc.readMem(0xb7f8), 0x45);
        // CB 45 005B
        gbc.setState(0x5df2, 0xfc4b, 0x790, 0xda, 0x97a7, 0xc190, 0x0, 0x1);
        gbc.writeMem(0x5df2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xfc4b);
        EXPECT(gbc.pc(), 0x5df4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 005C
        gbc.setState(0xd306, 0x9a96, 0x15f0, 0xf82a, 0x32, 0x6e9e, 0x0, 0x0);
        gbc.writeMem(0xd306, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9a96);
        EXPECT(gbc.pc(), 0xd308);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd306), 0xcb);
        EXPECT(gbc.readMem(0xd307), 0x45);
        // CB 45 005D
        gbc.setState(0xccee, 0x5875, 0x72b0, 0x128e, 0xdf09, 0x4f4f, 0x0, 0x1);
        gbc.writeMem(0xccee, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x5875);
        EXPECT(gbc.pc(), 0xccf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccee), 0xcb);
        EXPECT(gbc.readMem(0xccef), 0x45);
        // CB 45 005E
        gbc.setState(0x4c4a, 0xaa0d, 0xa170, 0x9edd, 0x528c, 0x7015, 0x0, 0x1);
        gbc.writeMem(0x4c4a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xaa0d);
        EXPECT(gbc.pc(), 0x4c4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 005F
        gbc.setState(0x9d33, 0xa443, 0x4020, 0x8d14, 0x576, 0x5a8f, 0x1, 0x1);
        gbc.writeMem(0x9d33, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa443);
        EXPECT(gbc.pc(), 0x9d35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d33), 0xcb);
        EXPECT(gbc.readMem(0x9d34), 0x45);
        // CB 45 0060
        gbc.setState(0x16fa, 0xdd, 0xfcf0, 0x19eb, 0x125b, 0xbb2e, 0x1, 0x0);
        gbc.writeMem(0x16fa, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xdd);
        EXPECT(gbc.pc(), 0x16fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0061
        gbc.setState(0x168, 0x7390, 0xf380, 0x141d, 0x4f3d, 0x1597, 0x1, 0x1);
        gbc.writeMem(0x168, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7390);
        EXPECT(gbc.pc(), 0x16a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0062
        gbc.setState(0xc19b, 0x1b4d, 0x54b0, 0xd49d, 0xc027, 0x5dbc, 0x1, 0x1);
        gbc.writeMem(0xc19b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1b4d);
        EXPECT(gbc.pc(), 0xc19d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc19b), 0xcb);
        EXPECT(gbc.readMem(0xc19c), 0x45);
        // CB 45 0063
        gbc.setState(0x47c5, 0x68a2, 0x62c0, 0x9d6d, 0xff70, 0x4724, 0x0, 0x1);
        gbc.writeMem(0x47c5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x68a2);
        EXPECT(gbc.pc(), 0x47c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0064
        gbc.setState(0x534b, 0x9277, 0x5f90, 0xe9e1, 0xdfe5, 0xeb6f, 0x0, 0x1);
        gbc.writeMem(0x534b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9277);
        EXPECT(gbc.pc(), 0x534d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0065
        gbc.setState(0x5843, 0xefed, 0xf2f0, 0x1a27, 0xfc79, 0x8b57, 0x0, 0x0);
        gbc.writeMem(0x5843, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xefed);
        EXPECT(gbc.pc(), 0x5845);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0066
        gbc.setState(0x8f1c, 0xbd08, 0x3260, 0xb37c, 0xe957, 0xc6d1, 0x0, 0x1);
        gbc.writeMem(0x8f1c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbd08);
        EXPECT(gbc.pc(), 0x8f1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f1c), 0xcb);
        EXPECT(gbc.readMem(0x8f1d), 0x45);
        // CB 45 0067
        gbc.setState(0x294f, 0x6871, 0x83f0, 0xa5d8, 0xeb8f, 0x1f39, 0x0, 0x1);
        gbc.writeMem(0x294f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x6871);
        EXPECT(gbc.pc(), 0x2951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0068
        gbc.setState(0x9fec, 0x396b, 0x1900, 0x7d35, 0x8256, 0xd81c, 0x1, 0x0);
        gbc.writeMem(0x9fec, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x396b);
        EXPECT(gbc.pc(), 0x9fee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fec), 0xcb);
        EXPECT(gbc.readMem(0x9fed), 0x45);
        // CB 45 0069
        gbc.setState(0x1c50, 0x7684, 0xa7c0, 0x8f73, 0xd21e, 0x9367, 0x0, 0x1);
        gbc.writeMem(0x1c50, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7684);
        EXPECT(gbc.pc(), 0x1c52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 006A
        gbc.setState(0xe013, 0x3aa6, 0x1c70, 0x7062, 0xcd5f, 0xfca0, 0x1, 0x1);
        gbc.writeMem(0xe013, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3aa6);
        EXPECT(gbc.pc(), 0xe015);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe013), 0xcb);
        EXPECT(gbc.readMem(0xe014), 0x45);
        // CB 45 006B
        gbc.setState(0xa8a0, 0xd9b6, 0xe550, 0xb52f, 0x3694, 0x381a, 0x1, 0x1);
        gbc.writeMem(0xa8a0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd9b6);
        EXPECT(gbc.pc(), 0xa8a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8a0), 0xcb);
        EXPECT(gbc.readMem(0xa8a1), 0x45);
        // CB 45 006C
        gbc.setState(0xcd62, 0xaa51, 0x8ae0, 0x5c6d, 0xae5, 0xe2a8, 0x0, 0x1);
        gbc.writeMem(0xcd62, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xaa51);
        EXPECT(gbc.pc(), 0xcd64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd62), 0xcb);
        EXPECT(gbc.readMem(0xcd63), 0x45);
        // CB 45 006D
        gbc.setState(0x9c96, 0xb8fa, 0xb0, 0x51e3, 0xab75, 0x58eb, 0x0, 0x0);
        gbc.writeMem(0x9c96, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xb8fa);
        EXPECT(gbc.pc(), 0x9c98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c96), 0xcb);
        EXPECT(gbc.readMem(0x9c97), 0x45);
        // CB 45 006E
        gbc.setState(0x8d06, 0x6374, 0xfc40, 0xc91d, 0x99f8, 0x9b00, 0x0, 0x0);
        gbc.writeMem(0x8d06, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x6374);
        EXPECT(gbc.pc(), 0x8d08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d06), 0xcb);
        EXPECT(gbc.readMem(0x8d07), 0x45);
        // CB 45 006F
        gbc.setState(0xb889, 0x1902, 0xc40, 0x3838, 0x5bc7, 0x6556, 0x0, 0x1);
        gbc.writeMem(0xb889, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1902);
        EXPECT(gbc.pc(), 0xb88b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb889), 0xcb);
        EXPECT(gbc.readMem(0xb88a), 0x45);
        // CB 45 0070
        gbc.setState(0x6ca7, 0x42d3, 0x8ba0, 0x6847, 0xdad3, 0x9720, 0x0, 0x0);
        gbc.writeMem(0x6ca7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x42d3);
        EXPECT(gbc.pc(), 0x6ca9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0071
        gbc.setState(0xad22, 0xa8ed, 0x760, 0x6034, 0xd371, 0x2ad1, 0x1, 0x0);
        gbc.writeMem(0xad22, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xa8ed);
        EXPECT(gbc.pc(), 0xad24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad22), 0xcb);
        EXPECT(gbc.readMem(0xad23), 0x45);
        // CB 45 0072
        gbc.setState(0x71bb, 0xbeee, 0x7bb0, 0x73b9, 0x4786, 0xffd3, 0x0, 0x1);
        gbc.writeMem(0x71bb, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xbeee);
        EXPECT(gbc.pc(), 0x71bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0073
        gbc.setState(0x1728, 0xb1a0, 0xe360, 0x6f5, 0xa150, 0x71a0, 0x0, 0x0);
        gbc.writeMem(0x1728, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb1a0);
        EXPECT(gbc.pc(), 0x172a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0074
        gbc.setState(0xe494, 0xa031, 0x47e0, 0x5627, 0x3da7, 0x9632, 0x1, 0x1);
        gbc.writeMem(0xe494, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa031);
        EXPECT(gbc.pc(), 0xe496);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe494), 0xcb);
        EXPECT(gbc.readMem(0xe495), 0x45);
        // CB 45 0075
        gbc.setState(0xdda9, 0x543c, 0x1e30, 0xaf5c, 0xdc42, 0x17e5, 0x0, 0x0);
        gbc.writeMem(0xdda9, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x543c);
        EXPECT(gbc.pc(), 0xddab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdda9), 0xcb);
        EXPECT(gbc.readMem(0xddaa), 0x45);
        // CB 45 0077
        gbc.setState(0xd593, 0x5fb2, 0xf460, 0x98eb, 0xd27f, 0x135b, 0x1, 0x1);
        gbc.writeMem(0xd593, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x5fb2);
        EXPECT(gbc.pc(), 0xd595);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd593), 0xcb);
        EXPECT(gbc.readMem(0xd594), 0x45);
        // CB 45 0078
        gbc.setState(0xc237, 0x3143, 0x8ba0, 0xd453, 0xae74, 0xd6fb, 0x0, 0x0);
        gbc.writeMem(0xc237, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3143);
        EXPECT(gbc.pc(), 0xc239);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc237), 0xcb);
        EXPECT(gbc.readMem(0xc238), 0x45);
        // CB 45 0079
        gbc.setState(0xa773, 0x5a72, 0x1850, 0xe603, 0xfe59, 0x5872, 0x1, 0x1);
        gbc.writeMem(0xa773, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5a72);
        EXPECT(gbc.pc(), 0xa775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa773), 0xcb);
        EXPECT(gbc.readMem(0xa774), 0x45);
        // CB 45 007A
        gbc.setState(0x829, 0x53d6, 0x65d0, 0xe7, 0xd01b, 0xf1a9, 0x1, 0x1);
        gbc.writeMem(0x829, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x53d6);
        EXPECT(gbc.pc(), 0x82b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 007B
        gbc.setState(0x5133, 0xd66d, 0x9170, 0x111f, 0xc5be, 0x6b68, 0x1, 0x1);
        gbc.writeMem(0x5133, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xd66d);
        EXPECT(gbc.pc(), 0x5135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 007C
        gbc.setState(0x32f8, 0xb25a, 0x4a20, 0x9a0, 0x4003, 0xddd7, 0x1, 0x1);
        gbc.writeMem(0x32f8, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb25a);
        EXPECT(gbc.pc(), 0x32fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 007D
        gbc.setState(0xaa23, 0xb8c7, 0xe640, 0xa5a3, 0x99a9, 0xcc01, 0x0, 0x1);
        gbc.writeMem(0xaa23, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb8c7);
        EXPECT(gbc.pc(), 0xaa25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa23), 0xcb);
        EXPECT(gbc.readMem(0xaa24), 0x45);
        // CB 45 007E
        gbc.setState(0x3a96, 0xef9b, 0xe1e0, 0xd43b, 0xb8af, 0x5617, 0x0, 0x1);
        gbc.writeMem(0x3a96, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xef9b);
        EXPECT(gbc.pc(), 0x3a98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 007F
        gbc.setState(0x55be, 0x7623, 0xa210, 0x6daf, 0x1eb0, 0x715a, 0x1, 0x0);
        gbc.writeMem(0x55be, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x7623);
        EXPECT(gbc.pc(), 0x55c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0080
        gbc.setState(0x838d, 0x3de7, 0xe670, 0x39d7, 0x76a8, 0x22d9, 0x1, 0x0);
        gbc.writeMem(0x838d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x3de7);
        EXPECT(gbc.pc(), 0x838f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x838d), 0xcb);
        EXPECT(gbc.readMem(0x838e), 0x45);
        // CB 45 0081
        gbc.setState(0xaaff, 0xbba, 0xa9d0, 0x43ad, 0x7ca4, 0x3cc4, 0x1, 0x1);
        gbc.writeMem(0xaaff, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xbba);
        EXPECT(gbc.pc(), 0xab01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaff), 0xcb);
        EXPECT(gbc.readMem(0xab00), 0x45);
        // CB 45 0082
        gbc.setState(0x65e1, 0x4e0e, 0x3600, 0xdff2, 0x8e2b, 0x2c71, 0x0, 0x0);
        gbc.writeMem(0x65e1, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4e0e);
        EXPECT(gbc.pc(), 0x65e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0083
        gbc.setState(0x34cd, 0xf971, 0xe130, 0x58d3, 0xb0ba, 0x3f54, 0x0, 0x1);
        gbc.writeMem(0x34cd, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xf971);
        EXPECT(gbc.pc(), 0x34cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0084
        gbc.setState(0x6a9a, 0x96f3, 0x5600, 0x62a7, 0x7a1d, 0x242, 0x1, 0x0);
        gbc.writeMem(0x6a9a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x96f3);
        EXPECT(gbc.pc(), 0x6a9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0086
        gbc.setState(0x88c7, 0xe5ce, 0xf350, 0xc228, 0x44db, 0xb8b2, 0x0, 0x0);
        gbc.writeMem(0x88c7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe5ce);
        EXPECT(gbc.pc(), 0x88c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88c7), 0xcb);
        EXPECT(gbc.readMem(0x88c8), 0x45);
        // CB 45 0087
        gbc.setState(0x4e7, 0x6d06, 0x19d0, 0x5487, 0xc50, 0xdcbc, 0x1, 0x1);
        gbc.writeMem(0x4e7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x6d06);
        EXPECT(gbc.pc(), 0x4e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0088
        gbc.setState(0xbee0, 0xc378, 0x3af0, 0xe6b6, 0x8c9d, 0xd56a, 0x0, 0x0);
        gbc.writeMem(0xbee0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc378);
        EXPECT(gbc.pc(), 0xbee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbee0), 0xcb);
        EXPECT(gbc.readMem(0xbee1), 0x45);
        // CB 45 0089
        gbc.setState(0xdad2, 0xec4f, 0xe700, 0x51c2, 0xc255, 0xde95, 0x1, 0x0);
        gbc.writeMem(0xdad2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xec4f);
        EXPECT(gbc.pc(), 0xdad4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdad2), 0xcb);
        EXPECT(gbc.readMem(0xdad3), 0x45);
        // CB 45 008A
        gbc.setState(0x74bb, 0xfa1b, 0xcf00, 0xf53a, 0x751d, 0x6029, 0x0, 0x0);
        gbc.writeMem(0x74bb, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xfa1b);
        EXPECT(gbc.pc(), 0x74bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 008C
        gbc.setState(0x53df, 0x21d8, 0xbc20, 0x10ee, 0x418c, 0xd9db, 0x0, 0x0);
        gbc.writeMem(0x53df, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x21d8);
        EXPECT(gbc.pc(), 0x53e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 008D
        gbc.setState(0x21a6, 0x27d2, 0x7b80, 0x17b7, 0xd8f5, 0x108f, 0x1, 0x0);
        gbc.writeMem(0x21a6, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x27d2);
        EXPECT(gbc.pc(), 0x21a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 008E
        gbc.setState(0xa7a5, 0xed9, 0xb640, 0x7daf, 0x1fb9, 0xccea, 0x1, 0x0);
        gbc.writeMem(0xa7a5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xed9);
        EXPECT(gbc.pc(), 0xa7a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7a5), 0xcb);
        EXPECT(gbc.readMem(0xa7a6), 0x45);
        // CB 45 008F
        gbc.setState(0x964a, 0x1e82, 0x6f10, 0xe355, 0xdbf, 0x7ca7, 0x1, 0x0);
        gbc.writeMem(0x964a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x1e82);
        EXPECT(gbc.pc(), 0x964c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x964a), 0xcb);
        EXPECT(gbc.readMem(0x964b), 0x45);
        // CB 45 0090
        gbc.setState(0xddf5, 0x8408, 0x1910, 0x60d7, 0xfb6d, 0xf847, 0x0, 0x0);
        gbc.writeMem(0xddf5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x8408);
        EXPECT(gbc.pc(), 0xddf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddf5), 0xcb);
        EXPECT(gbc.readMem(0xddf6), 0x45);
        // CB 45 0091
        gbc.setState(0xa353, 0xefe2, 0xee60, 0x4349, 0xc19a, 0x64d4, 0x0, 0x1);
        gbc.writeMem(0xa353, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xefe2);
        EXPECT(gbc.pc(), 0xa355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa353), 0xcb);
        EXPECT(gbc.readMem(0xa354), 0x45);
        // CB 45 0092
        gbc.setState(0x6056, 0x9e70, 0xc370, 0xfdf6, 0xfa7f, 0xec77, 0x0, 0x1);
        gbc.writeMem(0x6056, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x9e70);
        EXPECT(gbc.pc(), 0x6058);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0093
        gbc.setState(0xeed3, 0x2ea8, 0x4150, 0xea78, 0x5197, 0xf4b5, 0x0, 0x0);
        gbc.writeMem(0xeed3, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2ea8);
        EXPECT(gbc.pc(), 0xeed5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeed3), 0xcb);
        EXPECT(gbc.readMem(0xeed4), 0x45);
        // CB 45 0094
        gbc.setState(0x957d, 0xee81, 0x32a0, 0x1f3f, 0xb373, 0xb9bb, 0x0, 0x1);
        gbc.writeMem(0x957d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xee81);
        EXPECT(gbc.pc(), 0x957f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x957d), 0xcb);
        EXPECT(gbc.readMem(0x957e), 0x45);
        // CB 45 0095
        gbc.setState(0x807d, 0x5d3f, 0x6860, 0x7dfe, 0xade5, 0x6bca, 0x1, 0x0);
        gbc.writeMem(0x807d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5d3f);
        EXPECT(gbc.pc(), 0x807f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x807d), 0xcb);
        EXPECT(gbc.readMem(0x807e), 0x45);
        // CB 45 0096
        gbc.setState(0xbed6, 0x5c79, 0xe500, 0xd8e6, 0xbd73, 0x64b5, 0x0, 0x0);
        gbc.writeMem(0xbed6, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5c79);
        EXPECT(gbc.pc(), 0xbed8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbed6), 0xcb);
        EXPECT(gbc.readMem(0xbed7), 0x45);
        // CB 45 0097
        gbc.setState(0x4017, 0x9bb0, 0xff10, 0x3c12, 0x929e, 0x756f, 0x0, 0x1);
        gbc.writeMem(0x4017, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9bb0);
        EXPECT(gbc.pc(), 0x4019);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0099
        gbc.setState(0x8a78, 0x34ce, 0x5bb0, 0x9364, 0xa9a0, 0x82d1, 0x1, 0x1);
        gbc.writeMem(0x8a78, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x34ce);
        EXPECT(gbc.pc(), 0x8a7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a78), 0xcb);
        EXPECT(gbc.readMem(0x8a79), 0x45);
        // CB 45 009A
        gbc.setState(0xe18, 0x16a5, 0x2860, 0x32b7, 0xfc0a, 0x9143, 0x0, 0x1);
        gbc.writeMem(0xe18, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x16a5);
        EXPECT(gbc.pc(), 0xe1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 009B
        gbc.setState(0x84d6, 0xd328, 0xe250, 0xef7e, 0x7ea0, 0xb1eb, 0x0, 0x0);
        gbc.writeMem(0x84d6, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xd328);
        EXPECT(gbc.pc(), 0x84d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84d6), 0xcb);
        EXPECT(gbc.readMem(0x84d7), 0x45);
        // CB 45 009C
        gbc.setState(0x534f, 0x8b85, 0x1cb0, 0x90f5, 0x820a, 0xc8bd, 0x0, 0x1);
        gbc.writeMem(0x534f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8b85);
        EXPECT(gbc.pc(), 0x5351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 009D
        gbc.setState(0x170f, 0x7922, 0xc310, 0xcc24, 0x4666, 0x80da, 0x0, 0x0);
        gbc.writeMem(0x170f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x7922);
        EXPECT(gbc.pc(), 0x1711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 009E
        gbc.setState(0xbf61, 0xd5ac, 0x8c60, 0x4122, 0x85e9, 0x2041, 0x0, 0x0);
        gbc.writeMem(0xbf61, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xd5ac);
        EXPECT(gbc.pc(), 0xbf63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf61), 0xcb);
        EXPECT(gbc.readMem(0xbf62), 0x45);
        // CB 45 009F
        gbc.setState(0xddaa, 0xa1a2, 0xcb20, 0x5e3b, 0x8e3f, 0xc2ce, 0x0, 0x0);
        gbc.writeMem(0xddaa, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa1a2);
        EXPECT(gbc.pc(), 0xddac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddaa), 0xcb);
        EXPECT(gbc.readMem(0xddab), 0x45);
        // CB 45 00A0
        gbc.setState(0xa95c, 0xf6c5, 0xa8b0, 0xe080, 0xa8a0, 0x3f80, 0x0, 0x0);
        gbc.writeMem(0xa95c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf6c5);
        EXPECT(gbc.pc(), 0xa95e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa95c), 0xcb);
        EXPECT(gbc.readMem(0xa95d), 0x45);
        // CB 45 00A2
        gbc.setState(0xb8f8, 0xb704, 0x4320, 0xd4c5, 0x5b12, 0x616d, 0x1, 0x1);
        gbc.writeMem(0xb8f8, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xb704);
        EXPECT(gbc.pc(), 0xb8fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8f8), 0xcb);
        EXPECT(gbc.readMem(0xb8f9), 0x45);
        // CB 45 00A3
        gbc.setState(0xbde0, 0x563d, 0x1d50, 0xfa86, 0x1c3c, 0x3892, 0x0, 0x0);
        gbc.writeMem(0xbde0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x563d);
        EXPECT(gbc.pc(), 0xbde2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbde0), 0xcb);
        EXPECT(gbc.readMem(0xbde1), 0x45);
        // CB 45 00A4
        gbc.setState(0x1c79, 0xb9e4, 0xc1a0, 0x7a3a, 0x4ad2, 0xbbb7, 0x0, 0x0);
        gbc.writeMem(0x1c79, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xb9e4);
        EXPECT(gbc.pc(), 0x1c7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 00A6
        gbc.setState(0xc869, 0xb627, 0x1120, 0x5a6d, 0x7dfa, 0xaea3, 0x0, 0x1);
        gbc.writeMem(0xc869, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb627);
        EXPECT(gbc.pc(), 0xc86b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc869), 0xcb);
        EXPECT(gbc.readMem(0xc86a), 0x45);
        // CB 45 00A7
        gbc.setState(0xb4, 0x389f, 0x2d50, 0x99ce, 0x4538, 0xc6ba, 0x0, 0x0);
        gbc.writeMem(0xb4, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x389f);
        EXPECT(gbc.pc(), 0xb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 00A8
        gbc.setState(0xb82a, 0xadc2, 0x9c20, 0xc7d7, 0x20a0, 0x7570, 0x1, 0x1);
        gbc.writeMem(0xb82a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xadc2);
        EXPECT(gbc.pc(), 0xb82c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb82a), 0xcb);
        EXPECT(gbc.readMem(0xb82b), 0x45);
        // CB 45 00A9
        gbc.setState(0xe673, 0x38ec, 0xf8c0, 0xebd3, 0xf0fd, 0xcbee, 0x1, 0x0);
        gbc.writeMem(0xe673, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x38ec);
        EXPECT(gbc.pc(), 0xe675);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe673), 0xcb);
        EXPECT(gbc.readMem(0xe674), 0x45);
        // CB 45 00AA
        gbc.setState(0x57f0, 0x18ef, 0xb340, 0xac93, 0x2faa, 0x7d13, 0x0, 0x0);
        gbc.writeMem(0x57f0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x18ef);
        EXPECT(gbc.pc(), 0x57f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 00AB
        gbc.setState(0xc415, 0x64b0, 0xe670, 0xf573, 0xf32e, 0xaeb7, 0x0, 0x0);
        gbc.writeMem(0xc415, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x64b0);
        EXPECT(gbc.pc(), 0xc417);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc415), 0xcb);
        EXPECT(gbc.readMem(0xc416), 0x45);
        // CB 45 00AC
        gbc.setState(0xb698, 0xd939, 0xbbe0, 0x9c29, 0x6880, 0x9604, 0x0, 0x0);
        gbc.writeMem(0xb698, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xd939);
        EXPECT(gbc.pc(), 0xb69a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb698), 0xcb);
        EXPECT(gbc.readMem(0xb699), 0x45);
        // CB 45 00AD
        gbc.setState(0x1bec, 0x61b0, 0x47f0, 0x5f29, 0xd8b, 0x86be, 0x1, 0x1);
        gbc.writeMem(0x1bec, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x61b0);
        EXPECT(gbc.pc(), 0x1bee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 00AE
        gbc.setState(0xbaec, 0x4ffc, 0x4a40, 0x7843, 0x4a4, 0x7ade, 0x1, 0x0);
        gbc.writeMem(0xbaec, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4ffc);
        EXPECT(gbc.pc(), 0xbaee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaec), 0xcb);
        EXPECT(gbc.readMem(0xbaed), 0x45);
        // CB 45 00AF
        gbc.setState(0x2073, 0xab17, 0xf2f0, 0xf5bc, 0xcb2, 0x9af5, 0x1, 0x1);
        gbc.writeMem(0x2073, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xab17);
        EXPECT(gbc.pc(), 0x2075);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 00B0
        gbc.setState(0xe1f5, 0x1182, 0xb60, 0xf280, 0xb8c7, 0xbfbc, 0x0, 0x1);
        gbc.writeMem(0xe1f5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1182);
        EXPECT(gbc.pc(), 0xe1f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1f5), 0xcb);
        EXPECT(gbc.readMem(0xe1f6), 0x45);
        // CB 45 00B3
        gbc.setState(0x9d89, 0x8752, 0xdaf0, 0xc21d, 0xa9e, 0x3a31, 0x1, 0x0);
        gbc.writeMem(0x9d89, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8752);
        EXPECT(gbc.pc(), 0x9d8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d89), 0xcb);
        EXPECT(gbc.readMem(0x9d8a), 0x45);
        // CB 45 00B4
        gbc.setState(0xef04, 0x4b95, 0xb030, 0x35be, 0xe037, 0x85b, 0x1, 0x1);
        gbc.writeMem(0xef04, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4b95);
        EXPECT(gbc.pc(), 0xef06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef04), 0xcb);
        EXPECT(gbc.readMem(0xef05), 0x45);
        // CB 45 00B5
        gbc.setState(0x3c12, 0xccfc, 0x1340, 0x7e46, 0xff23, 0xc1f, 0x0, 0x1);
        gbc.writeMem(0x3c12, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xccfc);
        EXPECT(gbc.pc(), 0x3c14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 00B6
        gbc.setState(0x6900, 0x14e4, 0x50d0, 0x4160, 0xdd37, 0x9588, 0x0, 0x1);
        gbc.writeMem(0x6900, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x14e4);
        EXPECT(gbc.pc(), 0x6902);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 00B7
        gbc.setState(0x22da, 0x113b, 0xd600, 0xebf2, 0x1ac2, 0xb34f, 0x0, 0x1);
        gbc.writeMem(0x22da, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x113b);
        EXPECT(gbc.pc(), 0x22dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 00B8
        gbc.setState(0xfb5, 0xd868, 0xca20, 0xad2, 0xf46, 0xbdc, 0x0, 0x0);
        gbc.writeMem(0xfb5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xd868);
        EXPECT(gbc.pc(), 0xfb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 00B9
        gbc.setState(0x96d0, 0x1424, 0xd8d0, 0x39b5, 0x9ee8, 0xf737, 0x1, 0x1);
        gbc.writeMem(0x96d0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1424);
        EXPECT(gbc.pc(), 0x96d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96d0), 0xcb);
        EXPECT(gbc.readMem(0x96d1), 0x45);
        // CB 45 00BA
        gbc.setState(0x8755, 0x3c21, 0x8310, 0x58a9, 0xa3ce, 0x6418, 0x1, 0x0);
        gbc.writeMem(0x8755, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3c21);
        EXPECT(gbc.pc(), 0x8757);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8755), 0xcb);
        EXPECT(gbc.readMem(0x8756), 0x45);
        // CB 45 00BC
        gbc.setState(0x1cfc, 0xae0e, 0x4b60, 0xc6b4, 0x6619, 0x84f9, 0x1, 0x0);
        gbc.writeMem(0x1cfc, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xae0e);
        EXPECT(gbc.pc(), 0x1cfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 00BD
        gbc.setState(0x1186, 0xdff0, 0xfbe0, 0x5f2f, 0xbca8, 0x2f41, 0x0, 0x0);
        gbc.writeMem(0x1186, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xdff0);
        EXPECT(gbc.pc(), 0x1188);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 00BE
        gbc.setState(0xe6f4, 0xfe7e, 0x2f50, 0xbe49, 0x1af0, 0x313, 0x1, 0x1);
        gbc.writeMem(0xe6f4, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xfe7e);
        EXPECT(gbc.pc(), 0xe6f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6f4), 0xcb);
        EXPECT(gbc.readMem(0xe6f5), 0x45);
        // CB 45 00BF
        gbc.setState(0x9fdc, 0xdf89, 0x50b0, 0x61b7, 0xfc26, 0xae13, 0x1, 0x0);
        gbc.writeMem(0x9fdc, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xdf89);
        EXPECT(gbc.pc(), 0x9fde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fdc), 0xcb);
        EXPECT(gbc.readMem(0x9fdd), 0x45);
        // CB 45 00C0
        gbc.setState(0x6704, 0xf926, 0xb1e0, 0x133, 0x7827, 0x6d42, 0x0, 0x0);
        gbc.writeMem(0x6704, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf926);
        EXPECT(gbc.pc(), 0x6706);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 00C1
        gbc.setState(0xcc3b, 0x809b, 0xf840, 0xec9d, 0x6340, 0xcf96, 0x0, 0x0);
        gbc.writeMem(0xcc3b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x809b);
        EXPECT(gbc.pc(), 0xcc3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc3b), 0xcb);
        EXPECT(gbc.readMem(0xcc3c), 0x45);
        // CB 45 00C2
        gbc.setState(0x5594, 0x452f, 0xe6e0, 0x1462, 0xd57e, 0x91af, 0x1, 0x0);
        gbc.writeMem(0x5594, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x452f);
        EXPECT(gbc.pc(), 0x5596);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 00C3
        gbc.setState(0x77a, 0x507e, 0x860, 0x2567, 0x3bb9, 0x1b39, 0x1, 0x1);
        gbc.writeMem(0x77a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x507e);
        EXPECT(gbc.pc(), 0x77c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 00C4
        gbc.setState(0xbc61, 0x24fc, 0xdde0, 0xb295, 0x86e, 0xb386, 0x0, 0x1);
        gbc.writeMem(0xbc61, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x24fc);
        EXPECT(gbc.pc(), 0xbc63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc61), 0xcb);
        EXPECT(gbc.readMem(0xbc62), 0x45);
        // CB 45 00C5
        gbc.setState(0xac84, 0x9bef, 0x3230, 0x4cb1, 0xbef2, 0xb691, 0x1, 0x1);
        gbc.writeMem(0xac84, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9bef);
        EXPECT(gbc.pc(), 0xac86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac84), 0xcb);
        EXPECT(gbc.readMem(0xac85), 0x45);
        // CB 45 00C6
        gbc.setState(0x9518, 0x848f, 0xfcc0, 0xd472, 0x8850, 0x75b6, 0x0, 0x1);
        gbc.writeMem(0x9518, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x848f);
        EXPECT(gbc.pc(), 0x951a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9518), 0xcb);
        EXPECT(gbc.readMem(0x9519), 0x45);
        // CB 45 00C7
        gbc.setState(0x8841, 0x37f0, 0xe220, 0x36f2, 0x79ee, 0xd051, 0x0, 0x0);
        gbc.writeMem(0x8841, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x37f0);
        EXPECT(gbc.pc(), 0x8843);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8841), 0xcb);
        EXPECT(gbc.readMem(0x8842), 0x45);
        // CB 45 00C8
        gbc.setState(0x9fcc, 0xc4b9, 0x1a90, 0x42e0, 0x434f, 0x7985, 0x0, 0x0);
        gbc.writeMem(0x9fcc, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc4b9);
        EXPECT(gbc.pc(), 0x9fce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fcc), 0xcb);
        EXPECT(gbc.readMem(0x9fcd), 0x45);
        // CB 45 00C9
        gbc.setState(0xa91, 0x85f4, 0xe7a0, 0xd443, 0xaae3, 0x4c0b, 0x0, 0x0);
        gbc.writeMem(0xa91, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x85f4);
        EXPECT(gbc.pc(), 0xa93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 00CA
        gbc.setState(0x231a, 0xe05a, 0xf9b0, 0xef5f, 0x9182, 0x7ae7, 0x0, 0x0);
        gbc.writeMem(0x231a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe05a);
        EXPECT(gbc.pc(), 0x231c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 00CB
        gbc.setState(0x8798, 0x72bc, 0x5dd0, 0x5071, 0xe5c5, 0xc304, 0x1, 0x1);
        gbc.writeMem(0x8798, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x72bc);
        EXPECT(gbc.pc(), 0x879a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8798), 0xcb);
        EXPECT(gbc.readMem(0x8799), 0x45);
        // CB 45 00CC
        gbc.setState(0xa1ae, 0x4a88, 0x3790, 0x1cb8, 0x1a47, 0x466a, 0x0, 0x0);
        gbc.writeMem(0xa1ae, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4a88);
        EXPECT(gbc.pc(), 0xa1b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ae), 0xcb);
        EXPECT(gbc.readMem(0xa1af), 0x45);
        // CB 45 00CD
        gbc.setState(0x8ae6, 0xf2d1, 0x18b0, 0x438, 0x9fba, 0x4c91, 0x0, 0x1);
        gbc.writeMem(0x8ae6, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xf2d1);
        EXPECT(gbc.pc(), 0x8ae8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ae6), 0xcb);
        EXPECT(gbc.readMem(0x8ae7), 0x45);
        // CB 45 00CE
        gbc.setState(0xd417, 0x54d, 0xff60, 0x31a1, 0x1167, 0x6fa, 0x1, 0x0);
        gbc.writeMem(0xd417, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x54d);
        EXPECT(gbc.pc(), 0xd419);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd417), 0xcb);
        EXPECT(gbc.readMem(0xd418), 0x45);
        // CB 45 00CF
        gbc.setState(0xa0f4, 0x26d9, 0x61e0, 0xe4c5, 0x87a5, 0xab00, 0x0, 0x1);
        gbc.writeMem(0xa0f4, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x26d9);
        EXPECT(gbc.pc(), 0xa0f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0f4), 0xcb);
        EXPECT(gbc.readMem(0xa0f5), 0x45);
        // CB 45 00D0
        gbc.setState(0x7780, 0x6266, 0x5200, 0x305c, 0x8a9a, 0x894f, 0x1, 0x0);
        gbc.writeMem(0x7780, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x6266);
        EXPECT(gbc.pc(), 0x7782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 00D1
        gbc.setState(0x4c4d, 0x8028, 0x8a70, 0xa870, 0x7144, 0xaa96, 0x1, 0x0);
        gbc.writeMem(0x4c4d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x8028);
        EXPECT(gbc.pc(), 0x4c4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 00D2
        gbc.setState(0x4990, 0xc91b, 0x9640, 0xe4cb, 0x7837, 0x5314, 0x0, 0x1);
        gbc.writeMem(0x4990, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc91b);
        EXPECT(gbc.pc(), 0x4992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 00D3
        gbc.setState(0x5f3b, 0xd1cc, 0x620, 0xba28, 0xa258, 0xf26d, 0x1, 0x1);
        gbc.writeMem(0x5f3b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xd1cc);
        EXPECT(gbc.pc(), 0x5f3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 00D4
        gbc.setState(0x911b, 0xe393, 0x4490, 0x3e7d, 0x4289, 0xe627, 0x0, 0x0);
        gbc.writeMem(0x911b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe393);
        EXPECT(gbc.pc(), 0x911d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x911b), 0xcb);
        EXPECT(gbc.readMem(0x911c), 0x45);
        // CB 45 00D5
        gbc.setState(0xc08d, 0xeb20, 0x43b0, 0x23fc, 0xd1d2, 0x926, 0x0, 0x1);
        gbc.writeMem(0xc08d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xeb20);
        EXPECT(gbc.pc(), 0xc08f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc08d), 0xcb);
        EXPECT(gbc.readMem(0xc08e), 0x45);
        // CB 45 00D6
        gbc.setState(0x5f21, 0xb3d0, 0xae90, 0xc7f8, 0x106a, 0x3a15, 0x1, 0x0);
        gbc.writeMem(0x5f21, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb3d0);
        EXPECT(gbc.pc(), 0x5f23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 00D7
        gbc.setState(0x6526, 0x6192, 0x7c60, 0x262, 0x634e, 0xd6db, 0x0, 0x1);
        gbc.writeMem(0x6526, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x6192);
        EXPECT(gbc.pc(), 0x6528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 00D8
        gbc.setState(0xa469, 0x6bbd, 0x5d40, 0x7401, 0xeb7a, 0x6755, 0x0, 0x0);
        gbc.writeMem(0xa469, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6bbd);
        EXPECT(gbc.pc(), 0xa46b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa469), 0xcb);
        EXPECT(gbc.readMem(0xa46a), 0x45);
        // CB 45 00D9
        gbc.setState(0x2bc5, 0xf4a7, 0x9950, 0x224d, 0x2b37, 0x457c, 0x1, 0x1);
        gbc.writeMem(0x2bc5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf4a7);
        EXPECT(gbc.pc(), 0x2bc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 00DA
        gbc.setState(0x1dc3, 0x71c1, 0xf270, 0x3eb9, 0x98b1, 0x2561, 0x1, 0x0);
        gbc.writeMem(0x1dc3, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x71c1);
        EXPECT(gbc.pc(), 0x1dc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 00DC
        gbc.setState(0x27f9, 0x4569, 0x8ac0, 0xf7b0, 0xa735, 0xdd9f, 0x1, 0x0);
        gbc.writeMem(0x27f9, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4569);
        EXPECT(gbc.pc(), 0x27fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 00DD
        gbc.setState(0x9b6f, 0x1d22, 0x120, 0x60eb, 0x20b4, 0x9d2b, 0x0, 0x1);
        gbc.writeMem(0x9b6f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1d22);
        EXPECT(gbc.pc(), 0x9b71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b6f), 0xcb);
        EXPECT(gbc.readMem(0x9b70), 0x45);
        // CB 45 00DE
        gbc.setState(0xce05, 0xfb21, 0x6770, 0xb4e0, 0x47ee, 0xf7e, 0x0, 0x1);
        gbc.writeMem(0xce05, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xfb21);
        EXPECT(gbc.pc(), 0xce07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce05), 0xcb);
        EXPECT(gbc.readMem(0xce06), 0x45);
        // CB 45 00DF
        gbc.setState(0xa578, 0x6053, 0xbb30, 0xca93, 0xb55, 0x6890, 0x1, 0x1);
        gbc.writeMem(0xa578, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x6053);
        EXPECT(gbc.pc(), 0xa57a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa578), 0xcb);
        EXPECT(gbc.readMem(0xa579), 0x45);
        // CB 45 00E0
        gbc.setState(0x17f3, 0x97af, 0x6a0, 0x630d, 0xcaf3, 0x7447, 0x1, 0x1);
        gbc.writeMem(0x17f3, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x97af);
        EXPECT(gbc.pc(), 0x17f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 00E1
        gbc.setState(0xedd2, 0x1586, 0x2080, 0xa06f, 0xc715, 0x6991, 0x1, 0x1);
        gbc.writeMem(0xedd2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1586);
        EXPECT(gbc.pc(), 0xedd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedd2), 0xcb);
        EXPECT(gbc.readMem(0xedd3), 0x45);
        // CB 45 00E4
        gbc.setState(0xc073, 0x7006, 0x26f0, 0xee02, 0x12d8, 0xf934, 0x0, 0x0);
        gbc.writeMem(0xc073, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7006);
        EXPECT(gbc.pc(), 0xc075);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc073), 0xcb);
        EXPECT(gbc.readMem(0xc074), 0x45);
        // CB 45 00E5
        gbc.setState(0xc203, 0x7edc, 0x7940, 0x17d5, 0xa186, 0xb6ca, 0x1, 0x0);
        gbc.writeMem(0xc203, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x7edc);
        EXPECT(gbc.pc(), 0xc205);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc203), 0xcb);
        EXPECT(gbc.readMem(0xc204), 0x45);
        // CB 45 00E6
        gbc.setState(0x998c, 0x3be8, 0xc360, 0x8254, 0xbe3d, 0xb00b, 0x1, 0x0);
        gbc.writeMem(0x998c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3be8);
        EXPECT(gbc.pc(), 0x998e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x998c), 0xcb);
        EXPECT(gbc.readMem(0x998d), 0x45);
        // CB 45 00E7
        gbc.setState(0x1fc2, 0xb0a8, 0x1710, 0xece8, 0xcec2, 0x9a66, 0x1, 0x0);
        gbc.writeMem(0x1fc2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xb0a8);
        EXPECT(gbc.pc(), 0x1fc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 00E8
        gbc.setState(0x616, 0xaa42, 0xc4c0, 0x8bb5, 0x86c, 0x858f, 0x1, 0x1);
        gbc.writeMem(0x616, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xaa42);
        EXPECT(gbc.pc(), 0x618);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 00E9
        gbc.setState(0x933c, 0x8eb2, 0xddb0, 0x5b65, 0x12b4, 0x24ba, 0x1, 0x0);
        gbc.writeMem(0x933c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8eb2);
        EXPECT(gbc.pc(), 0x933e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x933c), 0xcb);
        EXPECT(gbc.readMem(0x933d), 0x45);
        // CB 45 00EA
        gbc.setState(0x7261, 0xa27c, 0xaa50, 0x3ac0, 0xaf03, 0x5f4a, 0x1, 0x0);
        gbc.writeMem(0x7261, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa27c);
        EXPECT(gbc.pc(), 0x7263);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 00EB
        gbc.setState(0x64a5, 0xf30c, 0x6350, 0xfffe, 0xbd1f, 0x5f31, 0x0, 0x0);
        gbc.writeMem(0x64a5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf30c);
        EXPECT(gbc.pc(), 0x64a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 00ED
        gbc.setState(0x60f2, 0xdc19, 0x9e30, 0x6a26, 0x8cf2, 0x1ce6, 0x1, 0x1);
        gbc.writeMem(0x60f2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xdc19);
        EXPECT(gbc.pc(), 0x60f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 00EE
        gbc.setState(0xe08e, 0x71fe, 0x6ec0, 0x7bd9, 0x365f, 0xd14b, 0x0, 0x0);
        gbc.writeMem(0xe08e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x71fe);
        EXPECT(gbc.pc(), 0xe090);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe08e), 0xcb);
        EXPECT(gbc.readMem(0xe08f), 0x45);
        // CB 45 00EF
        gbc.setState(0x44d, 0xe5cb, 0xafa0, 0xb6ee, 0x68f7, 0x35d3, 0x0, 0x1);
        gbc.writeMem(0x44d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe5cb);
        EXPECT(gbc.pc(), 0x44f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 00F0
        gbc.setState(0xd5d4, 0x4e2f, 0x28a0, 0xfae, 0xf02a, 0x5ec9, 0x0, 0x1);
        gbc.writeMem(0xd5d4, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4e2f);
        EXPECT(gbc.pc(), 0xd5d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5d4), 0xcb);
        EXPECT(gbc.readMem(0xd5d5), 0x45);
        // CB 45 00F1
        gbc.setState(0xcfc6, 0xd37, 0xd470, 0xfe8d, 0x6de7, 0x7c0, 0x1, 0x0);
        gbc.writeMem(0xcfc6, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd37);
        EXPECT(gbc.pc(), 0xcfc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfc6), 0xcb);
        EXPECT(gbc.readMem(0xcfc7), 0x45);
        // CB 45 00F2
        gbc.setState(0xeae0, 0x96de, 0x7de0, 0x3941, 0x3a5d, 0x454c, 0x0, 0x0);
        gbc.writeMem(0xeae0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x96de);
        EXPECT(gbc.pc(), 0xeae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeae0), 0xcb);
        EXPECT(gbc.readMem(0xeae1), 0x45);
        // CB 45 00F3
        gbc.setState(0x4c17, 0xe185, 0x5890, 0xbb0, 0x3cf5, 0xcdff, 0x0, 0x1);
        gbc.writeMem(0x4c17, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe185);
        EXPECT(gbc.pc(), 0x4c19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 00F4
        gbc.setState(0x4501, 0x1071, 0xbde0, 0x5401, 0x521b, 0x963c, 0x1, 0x1);
        gbc.writeMem(0x4501, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x1071);
        EXPECT(gbc.pc(), 0x4503);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 00F5
        gbc.setState(0x795d, 0x89b6, 0xead0, 0xb2b3, 0x61fd, 0xd747, 0x1, 0x0);
        gbc.writeMem(0x795d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x89b6);
        EXPECT(gbc.pc(), 0x795f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 00F6
        gbc.setState(0x62eb, 0x118d, 0x78d0, 0x710f, 0x29a6, 0xd65c, 0x1, 0x1);
        gbc.writeMem(0x62eb, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x118d);
        EXPECT(gbc.pc(), 0x62ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 00F7
        gbc.setState(0x2933, 0xb2a0, 0xd600, 0x8db9, 0xd2ff, 0x3295, 0x0, 0x1);
        gbc.writeMem(0x2933, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb2a0);
        EXPECT(gbc.pc(), 0x2935);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 00F8
        gbc.setState(0xc822, 0x68d7, 0xe060, 0xe2b8, 0x9f58, 0xdf7e, 0x1, 0x0);
        gbc.writeMem(0xc822, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x68d7);
        EXPECT(gbc.pc(), 0xc824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc822), 0xcb);
        EXPECT(gbc.readMem(0xc823), 0x45);
        // CB 45 00F9
        gbc.setState(0x2329, 0x1608, 0x9c20, 0x8d57, 0xe04e, 0x6b61, 0x1, 0x0);
        gbc.writeMem(0x2329, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1608);
        EXPECT(gbc.pc(), 0x232b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 00FA
        gbc.setState(0xd593, 0x622, 0xa690, 0x443f, 0xfc4a, 0x31fc, 0x1, 0x0);
        gbc.writeMem(0xd593, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x622);
        EXPECT(gbc.pc(), 0xd595);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd593), 0xcb);
        EXPECT(gbc.readMem(0xd594), 0x45);
        // CB 45 00FB
        gbc.setState(0x46d9, 0x5f03, 0x320, 0xe5a1, 0xa3bd, 0x8591, 0x1, 0x0);
        gbc.writeMem(0x46d9, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x5f03);
        EXPECT(gbc.pc(), 0x46db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 00FC
        gbc.setState(0x8882, 0x791, 0x740, 0xc8f1, 0xcf70, 0x383, 0x0, 0x0);
        gbc.writeMem(0x8882, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x791);
        EXPECT(gbc.pc(), 0x8884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8882), 0xcb);
        EXPECT(gbc.readMem(0x8883), 0x45);
        // CB 45 00FD
        gbc.setState(0x3c0b, 0x7a44, 0x6fd0, 0x4b2f, 0x1a8e, 0xf333, 0x1, 0x1);
        gbc.writeMem(0x3c0b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7a44);
        EXPECT(gbc.pc(), 0x3c0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 00FE
        gbc.setState(0x9d5e, 0x9b00, 0xa090, 0xf48c, 0x1e13, 0x21df, 0x0, 0x0);
        gbc.writeMem(0x9d5e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9b00);
        EXPECT(gbc.pc(), 0x9d60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d5e), 0xcb);
        EXPECT(gbc.readMem(0x9d5f), 0x45);
        // CB 45 00FF
        gbc.setState(0xcbda, 0x4cc4, 0xb6a0, 0x30a, 0x5c4d, 0xcffe, 0x1, 0x0);
        gbc.writeMem(0xcbda, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x4cc4);
        EXPECT(gbc.pc(), 0xcbdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbda), 0xcb);
        EXPECT(gbc.readMem(0xcbdb), 0x45);
        // CB 45 0100
        gbc.setState(0xe2b0, 0x9f38, 0x62a0, 0xb2a, 0xf3a, 0x1791, 0x1, 0x1);
        gbc.writeMem(0xe2b0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9f38);
        EXPECT(gbc.pc(), 0xe2b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2b0), 0xcb);
        EXPECT(gbc.readMem(0xe2b1), 0x45);
        // CB 45 0101
        gbc.setState(0xdd5b, 0xd0ed, 0x260, 0x3bb8, 0xf93, 0x5d99, 0x0, 0x0);
        gbc.writeMem(0xdd5b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd0ed);
        EXPECT(gbc.pc(), 0xdd5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd5b), 0xcb);
        EXPECT(gbc.readMem(0xdd5c), 0x45);
        // CB 45 0102
        gbc.setState(0xe96a, 0xed, 0x9150, 0x84cd, 0x1d38, 0x4af0, 0x0, 0x0);
        gbc.writeMem(0xe96a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xed);
        EXPECT(gbc.pc(), 0xe96c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe96a), 0xcb);
        EXPECT(gbc.readMem(0xe96b), 0x45);
        // CB 45 0103
        gbc.setState(0x886d, 0xb0d5, 0x87e0, 0xc3ab, 0x73fe, 0xa368, 0x1, 0x1);
        gbc.writeMem(0x886d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb0d5);
        EXPECT(gbc.pc(), 0x886f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x886d), 0xcb);
        EXPECT(gbc.readMem(0x886e), 0x45);
        // CB 45 0104
        gbc.setState(0xe2e, 0x295a, 0xf7d0, 0x360d, 0x4a2b, 0x6d97, 0x1, 0x1);
        gbc.writeMem(0xe2e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x295a);
        EXPECT(gbc.pc(), 0xe30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0105
        gbc.setState(0x788a, 0xe0a1, 0x1e50, 0x3c59, 0xe8eb, 0x58a1, 0x1, 0x0);
        gbc.writeMem(0x788a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe0a1);
        EXPECT(gbc.pc(), 0x788c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0106
        gbc.setState(0xbb17, 0x1cd5, 0x8610, 0x785, 0x593a, 0x1f7e, 0x1, 0x0);
        gbc.writeMem(0xbb17, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1cd5);
        EXPECT(gbc.pc(), 0xbb19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb17), 0xcb);
        EXPECT(gbc.readMem(0xbb18), 0x45);
        // CB 45 0107
        gbc.setState(0xac90, 0x1010, 0x98e0, 0x46ce, 0x939, 0x3f21, 0x0, 0x0);
        gbc.writeMem(0xac90, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1010);
        EXPECT(gbc.pc(), 0xac92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac90), 0xcb);
        EXPECT(gbc.readMem(0xac91), 0x45);
        // CB 45 0108
        gbc.setState(0x39c6, 0x6f92, 0x1a60, 0x3e88, 0xfe61, 0x1de9, 0x1, 0x1);
        gbc.writeMem(0x39c6, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x6f92);
        EXPECT(gbc.pc(), 0x39c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0109
        gbc.setState(0x84ae, 0x7ac3, 0x1ff0, 0x2275, 0xa9fd, 0xac41, 0x0, 0x0);
        gbc.writeMem(0x84ae, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7ac3);
        EXPECT(gbc.pc(), 0x84b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84ae), 0xcb);
        EXPECT(gbc.readMem(0x84af), 0x45);
        // CB 45 010A
        gbc.setState(0x86b2, 0x3949, 0xbf30, 0x4b3a, 0xfd8a, 0x2a79, 0x0, 0x0);
        gbc.writeMem(0x86b2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x3949);
        EXPECT(gbc.pc(), 0x86b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86b2), 0xcb);
        EXPECT(gbc.readMem(0x86b3), 0x45);
        // CB 45 010B
        gbc.setState(0x9fe7, 0xa0a9, 0xa450, 0xdfc0, 0xceb8, 0x7c2a, 0x0, 0x0);
        gbc.writeMem(0x9fe7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa0a9);
        EXPECT(gbc.pc(), 0x9fe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fe7), 0xcb);
        EXPECT(gbc.readMem(0x9fe8), 0x45);
        // CB 45 010C
        gbc.setState(0x4731, 0xda95, 0x2af0, 0x598f, 0xc15c, 0x9d78, 0x0, 0x0);
        gbc.writeMem(0x4731, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xda95);
        EXPECT(gbc.pc(), 0x4733);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 010D
        gbc.setState(0xd8d0, 0xc385, 0x3270, 0x2be1, 0x8c9c, 0x8aa2, 0x0, 0x0);
        gbc.writeMem(0xd8d0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xc385);
        EXPECT(gbc.pc(), 0xd8d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8d0), 0xcb);
        EXPECT(gbc.readMem(0xd8d1), 0x45);
        // CB 45 010E
        gbc.setState(0x7975, 0xb594, 0xcb60, 0x399a, 0x7eba, 0xc672, 0x1, 0x0);
        gbc.writeMem(0x7975, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb594);
        EXPECT(gbc.pc(), 0x7977);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 010F
        gbc.setState(0xa8c1, 0xbf4d, 0x56f0, 0x7538, 0x5666, 0x82d1, 0x1, 0x0);
        gbc.writeMem(0xa8c1, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbf4d);
        EXPECT(gbc.pc(), 0xa8c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8c1), 0xcb);
        EXPECT(gbc.readMem(0xa8c2), 0x45);
        // CB 45 0110
        gbc.setState(0x6960, 0x3bd1, 0x4a80, 0x19a0, 0x848b, 0xcc25, 0x1, 0x1);
        gbc.writeMem(0x6960, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x3bd1);
        EXPECT(gbc.pc(), 0x6962);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0111
        gbc.setState(0xc39f, 0x43b6, 0xacb0, 0x108f, 0xc0d3, 0x217c, 0x0, 0x1);
        gbc.writeMem(0xc39f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x43b6);
        EXPECT(gbc.pc(), 0xc3a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc39f), 0xcb);
        EXPECT(gbc.readMem(0xc3a0), 0x45);
        // CB 45 0112
        gbc.setState(0x94f4, 0xa402, 0x7220, 0x4c17, 0xf7c0, 0xd722, 0x0, 0x0);
        gbc.writeMem(0x94f4, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa402);
        EXPECT(gbc.pc(), 0x94f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94f4), 0xcb);
        EXPECT(gbc.readMem(0x94f5), 0x45);
        // CB 45 0113
        gbc.setState(0xbf0d, 0xfac6, 0xed90, 0x14e3, 0x7192, 0x219e, 0x1, 0x1);
        gbc.writeMem(0xbf0d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xfac6);
        EXPECT(gbc.pc(), 0xbf0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf0d), 0xcb);
        EXPECT(gbc.readMem(0xbf0e), 0x45);
        // CB 45 0114
        gbc.setState(0x8036, 0xd794, 0xede0, 0x75ad, 0x1727, 0x7583, 0x1, 0x0);
        gbc.writeMem(0x8036, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd794);
        EXPECT(gbc.pc(), 0x8038);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8036), 0xcb);
        EXPECT(gbc.readMem(0x8037), 0x45);
        // CB 45 0115
        gbc.setState(0xecbc, 0x6b30, 0x32e0, 0x7e3f, 0x57f8, 0xdf49, 0x0, 0x1);
        gbc.writeMem(0xecbc, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6b30);
        EXPECT(gbc.pc(), 0xecbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecbc), 0xcb);
        EXPECT(gbc.readMem(0xecbd), 0x45);
        // CB 45 0116
        gbc.setState(0x1334, 0x6179, 0xb480, 0x5ea4, 0xbb4f, 0x5d61, 0x0, 0x1);
        gbc.writeMem(0x1334, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6179);
        EXPECT(gbc.pc(), 0x1336);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0117
        gbc.setState(0x1f8d, 0xf963, 0x6830, 0xb1db, 0x114f, 0x142b, 0x0, 0x1);
        gbc.writeMem(0x1f8d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xf963);
        EXPECT(gbc.pc(), 0x1f8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0118
        gbc.setState(0x1167, 0xc266, 0x5f70, 0x9dc2, 0x1727, 0x91d5, 0x0, 0x1);
        gbc.writeMem(0x1167, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc266);
        EXPECT(gbc.pc(), 0x1169);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0119
        gbc.setState(0x9014, 0xb866, 0x2670, 0x29ba, 0x4789, 0xbf91, 0x0, 0x0);
        gbc.writeMem(0x9014, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb866);
        EXPECT(gbc.pc(), 0x9016);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9014), 0xcb);
        EXPECT(gbc.readMem(0x9015), 0x45);
        // CB 45 011A
        gbc.setState(0x5d1a, 0x21bf, 0x2e00, 0x3ba7, 0xc9d2, 0x5502, 0x1, 0x1);
        gbc.writeMem(0x5d1a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x21bf);
        EXPECT(gbc.pc(), 0x5d1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 011B
        gbc.setState(0x46db, 0x63f1, 0xb200, 0x6c13, 0x6940, 0x1724, 0x1, 0x1);
        gbc.writeMem(0x46db, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x63f1);
        EXPECT(gbc.pc(), 0x46dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 011C
        gbc.setState(0x916c, 0x82ce, 0x2b30, 0xf6c, 0x927b, 0xe788, 0x0, 0x0);
        gbc.writeMem(0x916c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x82ce);
        EXPECT(gbc.pc(), 0x916e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x916c), 0xcb);
        EXPECT(gbc.readMem(0x916d), 0x45);
        // CB 45 011D
        gbc.setState(0xebbc, 0x4b2b, 0xa1e0, 0x5702, 0x9afd, 0x912e, 0x0, 0x0);
        gbc.writeMem(0xebbc, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4b2b);
        EXPECT(gbc.pc(), 0xebbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebbc), 0xcb);
        EXPECT(gbc.readMem(0xebbd), 0x45);
        // CB 45 011E
        gbc.setState(0xc977, 0x6a4e, 0x2a00, 0x7e8f, 0x686e, 0xe34e, 0x1, 0x1);
        gbc.writeMem(0xc977, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6a4e);
        EXPECT(gbc.pc(), 0xc979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc977), 0xcb);
        EXPECT(gbc.readMem(0xc978), 0x45);
        // CB 45 011F
        gbc.setState(0x9fd5, 0x6231, 0x6d80, 0xf741, 0x647, 0x371, 0x0, 0x1);
        gbc.writeMem(0x9fd5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6231);
        EXPECT(gbc.pc(), 0x9fd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fd5), 0xcb);
        EXPECT(gbc.readMem(0x9fd6), 0x45);
        // CB 45 0120
        gbc.setState(0xa255, 0x6c76, 0xc890, 0x1db3, 0x2d9a, 0x58f7, 0x1, 0x1);
        gbc.writeMem(0xa255, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6c76);
        EXPECT(gbc.pc(), 0xa257);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa255), 0xcb);
        EXPECT(gbc.readMem(0xa256), 0x45);
        // CB 45 0122
        gbc.setState(0x13e4, 0xdb0a, 0x76a0, 0xa226, 0x357, 0xab1d, 0x0, 0x1);
        gbc.writeMem(0x13e4, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xdb0a);
        EXPECT(gbc.pc(), 0x13e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0123
        gbc.setState(0xac92, 0xe218, 0xc810, 0xde35, 0xde83, 0x4743, 0x0, 0x0);
        gbc.writeMem(0xac92, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe218);
        EXPECT(gbc.pc(), 0xac94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac92), 0xcb);
        EXPECT(gbc.readMem(0xac93), 0x45);
        // CB 45 0125
        gbc.setState(0xeac9, 0x3ac0, 0xc070, 0x332f, 0xb3aa, 0x7f12, 0x1, 0x1);
        gbc.writeMem(0xeac9, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x3ac0);
        EXPECT(gbc.pc(), 0xeacb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeac9), 0xcb);
        EXPECT(gbc.readMem(0xeaca), 0x45);
        // CB 45 0126
        gbc.setState(0xaaf3, 0x786d, 0xecc0, 0xddd5, 0x2915, 0x7429, 0x1, 0x0);
        gbc.writeMem(0xaaf3, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x786d);
        EXPECT(gbc.pc(), 0xaaf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaf3), 0xcb);
        EXPECT(gbc.readMem(0xaaf4), 0x45);
        // CB 45 0127
        gbc.setState(0x83ea, 0x20e7, 0x17f0, 0xc750, 0xf04b, 0x200c, 0x1, 0x0);
        gbc.writeMem(0x83ea, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x20e7);
        EXPECT(gbc.pc(), 0x83ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ea), 0xcb);
        EXPECT(gbc.readMem(0x83eb), 0x45);
        // CB 45 0128
        gbc.setState(0x4edf, 0x7412, 0xe220, 0xd289, 0x95cd, 0x7460, 0x0, 0x1);
        gbc.writeMem(0x4edf, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7412);
        EXPECT(gbc.pc(), 0x4ee1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0129
        gbc.setState(0x7d4b, 0x1bf8, 0xa9e0, 0x62f2, 0x5a2b, 0x72d6, 0x1, 0x1);
        gbc.writeMem(0x7d4b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1bf8);
        EXPECT(gbc.pc(), 0x7d4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 012A
        gbc.setState(0xabb1, 0x7bbc, 0xdc0, 0xd932, 0xec77, 0x3e57, 0x1, 0x1);
        gbc.writeMem(0xabb1, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7bbc);
        EXPECT(gbc.pc(), 0xabb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb1), 0xcb);
        EXPECT(gbc.readMem(0xabb2), 0x45);
        // CB 45 012B
        gbc.setState(0x5ebc, 0x4ce5, 0xccb0, 0x2e04, 0x48e, 0xb2c1, 0x0, 0x1);
        gbc.writeMem(0x5ebc, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4ce5);
        EXPECT(gbc.pc(), 0x5ebe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 012C
        gbc.setState(0x1f7c, 0x7d67, 0x7670, 0xcff, 0xae8c, 0x8fc9, 0x1, 0x0);
        gbc.writeMem(0x1f7c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7d67);
        EXPECT(gbc.pc(), 0x1f7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 012D
        gbc.setState(0x575a, 0x775b, 0xbd60, 0xd75c, 0x6bef, 0xf3c5, 0x1, 0x1);
        gbc.writeMem(0x575a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x775b);
        EXPECT(gbc.pc(), 0x575c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 012E
        gbc.setState(0x762b, 0x7fda, 0x8bc0, 0xb4a7, 0xc85a, 0x9cc5, 0x1, 0x0);
        gbc.writeMem(0x762b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7fda);
        EXPECT(gbc.pc(), 0x762d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 012F
        gbc.setState(0x69ad, 0x9c50, 0xc580, 0x9a72, 0x83af, 0x304e, 0x0, 0x1);
        gbc.writeMem(0x69ad, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9c50);
        EXPECT(gbc.pc(), 0x69af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0130
        gbc.setState(0x8dd0, 0x4f79, 0xd70, 0x87a1, 0x7ee7, 0x38b, 0x1, 0x1);
        gbc.writeMem(0x8dd0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x4f79);
        EXPECT(gbc.pc(), 0x8dd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dd0), 0xcb);
        EXPECT(gbc.readMem(0x8dd1), 0x45);
        // CB 45 0131
        gbc.setState(0x5ace, 0x112d, 0xa950, 0x1d70, 0xb419, 0x4175, 0x0, 0x1);
        gbc.writeMem(0x5ace, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x112d);
        EXPECT(gbc.pc(), 0x5ad0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0132
        gbc.setState(0x6b1c, 0x2a51, 0x5070, 0xb42e, 0x1322, 0x915e, 0x1, 0x1);
        gbc.writeMem(0x6b1c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2a51);
        EXPECT(gbc.pc(), 0x6b1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0133
        gbc.setState(0x8f68, 0x636, 0x1ce0, 0x9272, 0xf4d8, 0xdf06, 0x1, 0x1);
        gbc.writeMem(0x8f68, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x636);
        EXPECT(gbc.pc(), 0x8f6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f68), 0xcb);
        EXPECT(gbc.readMem(0x8f69), 0x45);
        // CB 45 0134
        gbc.setState(0x659f, 0xe6fe, 0x4300, 0x2149, 0xacd7, 0xcd91, 0x0, 0x1);
        gbc.writeMem(0x659f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe6fe);
        EXPECT(gbc.pc(), 0x65a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0135
        gbc.setState(0xb3db, 0xb0c4, 0x17e0, 0xd1d3, 0x846e, 0x7bb, 0x1, 0x0);
        gbc.writeMem(0xb3db, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb0c4);
        EXPECT(gbc.pc(), 0xb3dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3db), 0xcb);
        EXPECT(gbc.readMem(0xb3dc), 0x45);
        // CB 45 0136
        gbc.setState(0x8df5, 0x5dd8, 0x1fd0, 0x6672, 0xcdc4, 0xe37e, 0x1, 0x1);
        gbc.writeMem(0x8df5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5dd8);
        EXPECT(gbc.pc(), 0x8df7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8df5), 0xcb);
        EXPECT(gbc.readMem(0x8df6), 0x45);
        // CB 45 0137
        gbc.setState(0x953d, 0x7ce7, 0x9700, 0x4518, 0x10b4, 0xb678, 0x1, 0x0);
        gbc.writeMem(0x953d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7ce7);
        EXPECT(gbc.pc(), 0x953f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x953d), 0xcb);
        EXPECT(gbc.readMem(0x953e), 0x45);
        // CB 45 0138
        gbc.setState(0x2a9a, 0x5914, 0xb1c0, 0xb038, 0xcbd9, 0x73b1, 0x0, 0x1);
        gbc.writeMem(0x2a9a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5914);
        EXPECT(gbc.pc(), 0x2a9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0139
        gbc.setState(0x6888, 0xe024, 0x2030, 0x11f, 0xea83, 0x96b, 0x1, 0x0);
        gbc.writeMem(0x6888, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe024);
        EXPECT(gbc.pc(), 0x688a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 013A
        gbc.setState(0x7305, 0xf746, 0x390, 0x93b0, 0x4fa4, 0x4d94, 0x0, 0x0);
        gbc.writeMem(0x7305, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf746);
        EXPECT(gbc.pc(), 0x7307);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 013B
        gbc.setState(0x6c4b, 0x296f, 0x9b50, 0x94d1, 0x1c42, 0x3ba2, 0x1, 0x0);
        gbc.writeMem(0x6c4b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x296f);
        EXPECT(gbc.pc(), 0x6c4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 013C
        gbc.setState(0x1ebe, 0x1bcf, 0xd020, 0x373, 0xde56, 0xc677, 0x0, 0x1);
        gbc.writeMem(0x1ebe, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1bcf);
        EXPECT(gbc.pc(), 0x1ec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 013D
        gbc.setState(0x3814, 0xf7d7, 0x77e0, 0x61c3, 0xdfc1, 0xc9b0, 0x0, 0x0);
        gbc.writeMem(0x3814, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf7d7);
        EXPECT(gbc.pc(), 0x3816);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 013E
        gbc.setState(0x83, 0x3d86, 0x39a0, 0x8240, 0xaa40, 0x1d30, 0x1, 0x0);
        gbc.writeMem(0x83, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3d86);
        EXPECT(gbc.pc(), 0x85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 013F
        gbc.setState(0x2133, 0x9615, 0x7170, 0x27fa, 0x9a2c, 0x3ee2, 0x0, 0x1);
        gbc.writeMem(0x2133, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9615);
        EXPECT(gbc.pc(), 0x2135);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0140
        gbc.setState(0x25a6, 0xeaf1, 0xef50, 0xa582, 0xad4e, 0xca46, 0x0, 0x1);
        gbc.writeMem(0x25a6, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xeaf1);
        EXPECT(gbc.pc(), 0x25a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0141
        gbc.setState(0x72c9, 0xeecd, 0xb220, 0xc5dd, 0x59fc, 0xcf73, 0x0, 0x0);
        gbc.writeMem(0x72c9, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xeecd);
        EXPECT(gbc.pc(), 0x72cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0142
        gbc.setState(0x8274, 0x3391, 0x71f0, 0xa197, 0xfbc8, 0x624f, 0x1, 0x0);
        gbc.writeMem(0x8274, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x3391);
        EXPECT(gbc.pc(), 0x8276);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8274), 0xcb);
        EXPECT(gbc.readMem(0x8275), 0x45);
        // CB 45 0143
        gbc.setState(0xc4a9, 0x4e8a, 0x3e80, 0x917a, 0x7070, 0xe35e, 0x0, 0x1);
        gbc.writeMem(0xc4a9, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4e8a);
        EXPECT(gbc.pc(), 0xc4ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4a9), 0xcb);
        EXPECT(gbc.readMem(0xc4aa), 0x45);
        // CB 45 0145
        gbc.setState(0x6f12, 0x7218, 0xa940, 0x9f25, 0x4283, 0x7044, 0x0, 0x0);
        gbc.writeMem(0x6f12, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x7218);
        EXPECT(gbc.pc(), 0x6f14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0146
        gbc.setState(0xb3c6, 0x3258, 0x8030, 0xd14f, 0xf64a, 0x2eea, 0x1, 0x1);
        gbc.writeMem(0xb3c6, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3258);
        EXPECT(gbc.pc(), 0xb3c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3c6), 0xcb);
        EXPECT(gbc.readMem(0xb3c7), 0x45);
        // CB 45 0147
        gbc.setState(0x8744, 0x75e4, 0x1130, 0x7ce9, 0x3d0, 0x891e, 0x1, 0x0);
        gbc.writeMem(0x8744, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x75e4);
        EXPECT(gbc.pc(), 0x8746);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8744), 0xcb);
        EXPECT(gbc.readMem(0x8745), 0x45);
        // CB 45 0148
        gbc.setState(0xcfa6, 0x572a, 0x39a0, 0x830, 0xce3a, 0x4efc, 0x0, 0x0);
        gbc.writeMem(0xcfa6, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x572a);
        EXPECT(gbc.pc(), 0xcfa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfa6), 0xcb);
        EXPECT(gbc.readMem(0xcfa7), 0x45);
        // CB 45 0149
        gbc.setState(0x9860, 0xdf26, 0x860, 0xb5d8, 0xba27, 0xaf29, 0x0, 0x0);
        gbc.writeMem(0x9860, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xdf26);
        EXPECT(gbc.pc(), 0x9862);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9860), 0xcb);
        EXPECT(gbc.readMem(0x9861), 0x45);
        // CB 45 014A
        gbc.setState(0xed68, 0x9d91, 0xc0b0, 0xc2f8, 0x1b2d, 0x47cb, 0x0, 0x0);
        gbc.writeMem(0xed68, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9d91);
        EXPECT(gbc.pc(), 0xed6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed68), 0xcb);
        EXPECT(gbc.readMem(0xed69), 0x45);
        // CB 45 014B
        gbc.setState(0xcecf, 0xff2f, 0xc4e0, 0x9480, 0x6173, 0x1c55, 0x1, 0x0);
        gbc.writeMem(0xcecf, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xff2f);
        EXPECT(gbc.pc(), 0xced1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcecf), 0xcb);
        EXPECT(gbc.readMem(0xced0), 0x45);
        // CB 45 014C
        gbc.setState(0x848c, 0xd70, 0x4570, 0x9435, 0x3878, 0x2eaf, 0x0, 0x1);
        gbc.writeMem(0x848c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd70);
        EXPECT(gbc.pc(), 0x848e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x848c), 0xcb);
        EXPECT(gbc.readMem(0x848d), 0x45);
        // CB 45 014D
        gbc.setState(0x765c, 0x7965, 0xdee0, 0xde3c, 0xc84f, 0x5b70, 0x1, 0x1);
        gbc.writeMem(0x765c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x7965);
        EXPECT(gbc.pc(), 0x765e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 014E
        gbc.setState(0x570e, 0xcc05, 0x84b0, 0x52ed, 0xf3f7, 0x27e6, 0x0, 0x1);
        gbc.writeMem(0x570e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xcc05);
        EXPECT(gbc.pc(), 0x5710);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 014F
        gbc.setState(0x79ea, 0xaaea, 0x85c0, 0xacb6, 0x5598, 0xb083, 0x0, 0x1);
        gbc.writeMem(0x79ea, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xaaea);
        EXPECT(gbc.pc(), 0x79ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0150
        gbc.setState(0x34fc, 0xe35e, 0x8460, 0xf0b3, 0xdd18, 0x3495, 0x1, 0x1);
        gbc.writeMem(0x34fc, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xe35e);
        EXPECT(gbc.pc(), 0x34fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0151
        gbc.setState(0x8e5, 0x77fb, 0x1b50, 0xfe6a, 0xc81e, 0x8ebf, 0x1, 0x1);
        gbc.writeMem(0x8e5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x77fb);
        EXPECT(gbc.pc(), 0x8e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0152
        gbc.setState(0x5f97, 0xc870, 0x2160, 0x288f, 0x9252, 0x82c3, 0x1, 0x1);
        gbc.writeMem(0x5f97, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc870);
        EXPECT(gbc.pc(), 0x5f99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0153
        gbc.setState(0x55f4, 0x511b, 0x470, 0x5771, 0xe9ed, 0x3528, 0x1, 0x0);
        gbc.writeMem(0x55f4, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x511b);
        EXPECT(gbc.pc(), 0x55f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0154
        gbc.setState(0x2673, 0xe1a6, 0xa430, 0x62fd, 0x8178, 0xf653, 0x0, 0x1);
        gbc.writeMem(0x2673, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe1a6);
        EXPECT(gbc.pc(), 0x2675);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0155
        gbc.setState(0xc46c, 0xcddd, 0xebc0, 0xff08, 0x1c95, 0xd509, 0x0, 0x0);
        gbc.writeMem(0xc46c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xcddd);
        EXPECT(gbc.pc(), 0xc46e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc46c), 0xcb);
        EXPECT(gbc.readMem(0xc46d), 0x45);
        // CB 45 0156
        gbc.setState(0x44f9, 0x2388, 0x5320, 0x4d47, 0xd568, 0x3b42, 0x0, 0x0);
        gbc.writeMem(0x44f9, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2388);
        EXPECT(gbc.pc(), 0x44fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0157
        gbc.setState(0x5ae8, 0x1932, 0x4110, 0xde63, 0xbddd, 0x5f8a, 0x1, 0x0);
        gbc.writeMem(0x5ae8, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1932);
        EXPECT(gbc.pc(), 0x5aea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0158
        gbc.setState(0x5b0e, 0xb9e7, 0xfcd0, 0x8af0, 0xd7fd, 0xbfd4, 0x0, 0x1);
        gbc.writeMem(0x5b0e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xb9e7);
        EXPECT(gbc.pc(), 0x5b10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0159
        gbc.setState(0xb79e, 0x66ef, 0xe740, 0x2601, 0x4c24, 0x5bf0, 0x1, 0x1);
        gbc.writeMem(0xb79e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x66ef);
        EXPECT(gbc.pc(), 0xb7a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb79e), 0xcb);
        EXPECT(gbc.readMem(0xb79f), 0x45);
        // CB 45 015A
        gbc.setState(0xa3c0, 0x289b, 0x4e70, 0xac62, 0x2bd6, 0xf2c9, 0x0, 0x1);
        gbc.writeMem(0xa3c0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x289b);
        EXPECT(gbc.pc(), 0xa3c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3c0), 0xcb);
        EXPECT(gbc.readMem(0xa3c1), 0x45);
        // CB 45 015C
        gbc.setState(0x593e, 0x642b, 0x64f0, 0x2fa5, 0xafc4, 0x6269, 0x0, 0x0);
        gbc.writeMem(0x593e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x642b);
        EXPECT(gbc.pc(), 0x5940);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 015D
        gbc.setState(0x68d9, 0x9504, 0xf3c0, 0x7779, 0x53f9, 0x813b, 0x0, 0x1);
        gbc.writeMem(0x68d9, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x9504);
        EXPECT(gbc.pc(), 0x68db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 015E
        gbc.setState(0xc146, 0x6ba6, 0x2d00, 0xd8f9, 0x5be4, 0x9c5e, 0x1, 0x0);
        gbc.writeMem(0xc146, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x6ba6);
        EXPECT(gbc.pc(), 0xc148);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc146), 0xcb);
        EXPECT(gbc.readMem(0xc147), 0x45);
        // CB 45 0160
        gbc.setState(0xa686, 0x91b5, 0x15f0, 0x5bab, 0x3519, 0x8661, 0x0, 0x1);
        gbc.writeMem(0xa686, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x91b5);
        EXPECT(gbc.pc(), 0xa688);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa686), 0xcb);
        EXPECT(gbc.readMem(0xa687), 0x45);
        // CB 45 0161
        gbc.setState(0x4d68, 0x291e, 0x9290, 0xaf97, 0xcaa4, 0x7264, 0x1, 0x1);
        gbc.writeMem(0x4d68, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x291e);
        EXPECT(gbc.pc(), 0x4d6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0162
        gbc.setState(0xaf1d, 0xd73, 0xcce0, 0xe72, 0x8338, 0x2579, 0x0, 0x1);
        gbc.writeMem(0xaf1d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd73);
        EXPECT(gbc.pc(), 0xaf1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf1d), 0xcb);
        EXPECT(gbc.readMem(0xaf1e), 0x45);
        // CB 45 0163
        gbc.setState(0x99ef, 0x3a4e, 0x7d80, 0xbfd, 0x3958, 0xd9f5, 0x0, 0x1);
        gbc.writeMem(0x99ef, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x3a4e);
        EXPECT(gbc.pc(), 0x99f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ef), 0xcb);
        EXPECT(gbc.readMem(0x99f0), 0x45);
        // CB 45 0164
        gbc.setState(0x6def, 0x33a, 0x1180, 0x6f3f, 0x5816, 0xa13e, 0x0, 0x0);
        gbc.writeMem(0x6def, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x33a);
        EXPECT(gbc.pc(), 0x6df1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0165
        gbc.setState(0x5fa, 0x8963, 0x1730, 0xa201, 0xcafc, 0x80dc, 0x0, 0x0);
        gbc.writeMem(0x5fa, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8963);
        EXPECT(gbc.pc(), 0x5fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0166
        gbc.setState(0xa3c3, 0x4b5f, 0xd100, 0x4265, 0x3e63, 0x9ed4, 0x1, 0x0);
        gbc.writeMem(0xa3c3, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x4b5f);
        EXPECT(gbc.pc(), 0xa3c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3c3), 0xcb);
        EXPECT(gbc.readMem(0xa3c4), 0x45);
        // CB 45 0167
        gbc.setState(0x8966, 0x9669, 0x4fc0, 0xe1f6, 0x585a, 0xa6ad, 0x1, 0x0);
        gbc.writeMem(0x8966, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9669);
        EXPECT(gbc.pc(), 0x8968);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8966), 0xcb);
        EXPECT(gbc.readMem(0x8967), 0x45);
        // CB 45 0168
        gbc.setState(0x5a19, 0x1e27, 0x8ea0, 0x4121, 0xaa01, 0x891c, 0x1, 0x0);
        gbc.writeMem(0x5a19, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1e27);
        EXPECT(gbc.pc(), 0x5a1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0169
        gbc.setState(0x7aad, 0xa833, 0x4630, 0x551c, 0x563a, 0x6f1, 0x0, 0x1);
        gbc.writeMem(0x7aad, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa833);
        EXPECT(gbc.pc(), 0x7aaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 016A
        gbc.setState(0xb424, 0xdec4, 0x3ed0, 0x1736, 0xa5e2, 0x432c, 0x1, 0x0);
        gbc.writeMem(0xb424, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xdec4);
        EXPECT(gbc.pc(), 0xb426);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb424), 0xcb);
        EXPECT(gbc.readMem(0xb425), 0x45);
        // CB 45 016B
        gbc.setState(0x2bef, 0x91e1, 0x2240, 0xc7cb, 0x2cc5, 0x1563, 0x0, 0x1);
        gbc.writeMem(0x2bef, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x91e1);
        EXPECT(gbc.pc(), 0x2bf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 016D
        gbc.setState(0x2bd4, 0x14a1, 0xc3f0, 0x7c8c, 0xfba5, 0x942f, 0x1, 0x1);
        gbc.writeMem(0x2bd4, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x14a1);
        EXPECT(gbc.pc(), 0x2bd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 016E
        gbc.setState(0x7849, 0xf9, 0x6000, 0x1031, 0x9e93, 0x6d50, 0x0, 0x1);
        gbc.writeMem(0x7849, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf9);
        EXPECT(gbc.pc(), 0x784b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 016F
        gbc.setState(0x7a11, 0xb0cd, 0xff30, 0xd637, 0xedd6, 0x4aa3, 0x1, 0x0);
        gbc.writeMem(0x7a11, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb0cd);
        EXPECT(gbc.pc(), 0x7a13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0170
        gbc.setState(0x62d7, 0x8b5a, 0x7ba0, 0x7005, 0xdbfa, 0xbff9, 0x1, 0x0);
        gbc.writeMem(0x62d7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8b5a);
        EXPECT(gbc.pc(), 0x62d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0171
        gbc.setState(0x35f8, 0x14cc, 0xbc40, 0xb8d1, 0x957c, 0x490c, 0x1, 0x1);
        gbc.writeMem(0x35f8, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x14cc);
        EXPECT(gbc.pc(), 0x35fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0172
        gbc.setState(0x1f81, 0x4424, 0x99a0, 0x9728, 0xf23e, 0x874a, 0x1, 0x0);
        gbc.writeMem(0x1f81, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x4424);
        EXPECT(gbc.pc(), 0x1f83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0173
        gbc.setState(0x7ff, 0xde66, 0x75b0, 0x5bf7, 0xfd49, 0x6e25, 0x1, 0x1);
        gbc.writeMem(0x7ff, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xde66);
        EXPECT(gbc.pc(), 0x801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0174
        gbc.setState(0xad9d, 0x269b, 0x43a0, 0x60e3, 0xa32, 0x83f2, 0x0, 0x1);
        gbc.writeMem(0xad9d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x269b);
        EXPECT(gbc.pc(), 0xad9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad9d), 0xcb);
        EXPECT(gbc.readMem(0xad9e), 0x45);
        // CB 45 0175
        gbc.setState(0x4378, 0x50c9, 0x1f90, 0xaef6, 0x478a, 0xaf54, 0x1, 0x1);
        gbc.writeMem(0x4378, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x50c9);
        EXPECT(gbc.pc(), 0x437a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0176
        gbc.setState(0xa6d5, 0x7e25, 0xc4c0, 0xa5a3, 0xa30, 0xca32, 0x1, 0x1);
        gbc.writeMem(0xa6d5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7e25);
        EXPECT(gbc.pc(), 0xa6d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d5), 0xcb);
        EXPECT(gbc.readMem(0xa6d6), 0x45);
        // CB 45 0177
        gbc.setState(0x49c9, 0xf3d3, 0x97e0, 0x7f9, 0x190e, 0x5e60, 0x1, 0x0);
        gbc.writeMem(0x49c9, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf3d3);
        EXPECT(gbc.pc(), 0x49cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0178
        gbc.setState(0x6de0, 0x8fe, 0x7030, 0xda77, 0x18d2, 0xd2ac, 0x0, 0x0);
        gbc.writeMem(0x6de0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8fe);
        EXPECT(gbc.pc(), 0x6de2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0179
        gbc.setState(0x709f, 0x4e84, 0xb1f0, 0x7282, 0x5c7e, 0x4f79, 0x0, 0x1);
        gbc.writeMem(0x709f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4e84);
        EXPECT(gbc.pc(), 0x70a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 017A
        gbc.setState(0x3983, 0xa7b9, 0x7e20, 0x2d39, 0xbd51, 0x1647, 0x0, 0x0);
        gbc.writeMem(0x3983, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa7b9);
        EXPECT(gbc.pc(), 0x3985);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 017B
        gbc.setState(0x2f6a, 0x2efb, 0xd380, 0xeb50, 0x764a, 0xf91e, 0x1, 0x1);
        gbc.writeMem(0x2f6a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2efb);
        EXPECT(gbc.pc(), 0x2f6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 017C
        gbc.setState(0x5790, 0x9c36, 0xe8e0, 0x2e00, 0x9bfa, 0x599b, 0x0, 0x0);
        gbc.writeMem(0x5790, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x9c36);
        EXPECT(gbc.pc(), 0x5792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 017D
        gbc.setState(0x2b67, 0x815a, 0x5830, 0x3f6d, 0x42f3, 0x1998, 0x0, 0x0);
        gbc.writeMem(0x2b67, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x815a);
        EXPECT(gbc.pc(), 0x2b69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 017E
        gbc.setState(0xaedd, 0x2ed, 0xe370, 0xb57, 0x71be, 0xa7d3, 0x0, 0x0);
        gbc.writeMem(0xaedd, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2ed);
        EXPECT(gbc.pc(), 0xaedf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaedd), 0xcb);
        EXPECT(gbc.readMem(0xaede), 0x45);
        // CB 45 017F
        gbc.setState(0x9357, 0x98e8, 0xcc0, 0xa3e0, 0xaa4e, 0xee6b, 0x0, 0x0);
        gbc.writeMem(0x9357, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x98e8);
        EXPECT(gbc.pc(), 0x9359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9357), 0xcb);
        EXPECT(gbc.readMem(0x9358), 0x45);
        // CB 45 0180
        gbc.setState(0x434, 0x4772, 0x650, 0x4497, 0x837a, 0x5821, 0x1, 0x0);
        gbc.writeMem(0x434, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x4772);
        EXPECT(gbc.pc(), 0x436);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0181
        gbc.setState(0xe28b, 0x7b3, 0x66e0, 0x5110, 0xbbf, 0x5bee, 0x0, 0x0);
        gbc.writeMem(0xe28b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7b3);
        EXPECT(gbc.pc(), 0xe28d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe28b), 0xcb);
        EXPECT(gbc.readMem(0xe28c), 0x45);
        // CB 45 0182
        gbc.setState(0x8874, 0x2a9e, 0xb420, 0x4ae3, 0x3745, 0x69c0, 0x0, 0x1);
        gbc.writeMem(0x8874, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x2a9e);
        EXPECT(gbc.pc(), 0x8876);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8874), 0xcb);
        EXPECT(gbc.readMem(0x8875), 0x45);
        // CB 45 0183
        gbc.setState(0x9184, 0xe0d4, 0x8720, 0x23d7, 0xc1be, 0x8316, 0x1, 0x0);
        gbc.writeMem(0x9184, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe0d4);
        EXPECT(gbc.pc(), 0x9186);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9184), 0xcb);
        EXPECT(gbc.readMem(0x9185), 0x45);
        // CB 45 0184
        gbc.setState(0xee86, 0x1862, 0x58c0, 0x8dbc, 0x6265, 0x43f9, 0x0, 0x0);
        gbc.writeMem(0xee86, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1862);
        EXPECT(gbc.pc(), 0xee88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee86), 0xcb);
        EXPECT(gbc.readMem(0xee87), 0x45);
        // CB 45 0185
        gbc.setState(0xaf3e, 0xeb3a, 0x93b0, 0x15a7, 0xd4d4, 0xf1d4, 0x1, 0x0);
        gbc.writeMem(0xaf3e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xeb3a);
        EXPECT(gbc.pc(), 0xaf40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf3e), 0xcb);
        EXPECT(gbc.readMem(0xaf3f), 0x45);
        // CB 45 0186
        gbc.setState(0x293d, 0x69ed, 0x5470, 0xf811, 0xd3d2, 0x20a2, 0x1, 0x0);
        gbc.writeMem(0x293d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x69ed);
        EXPECT(gbc.pc(), 0x293f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0187
        gbc.setState(0x876a, 0x1f93, 0x11e0, 0xf8b3, 0x3d7, 0xe9f, 0x0, 0x1);
        gbc.writeMem(0x876a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x1f93);
        EXPECT(gbc.pc(), 0x876c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x876a), 0xcb);
        EXPECT(gbc.readMem(0x876b), 0x45);
        // CB 45 0188
        gbc.setState(0xb095, 0x3279, 0x3930, 0x45a3, 0xdfdf, 0xe3bd, 0x1, 0x1);
        gbc.writeMem(0xb095, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3279);
        EXPECT(gbc.pc(), 0xb097);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb095), 0xcb);
        EXPECT(gbc.readMem(0xb096), 0x45);
        // CB 45 0189
        gbc.setState(0x44ae, 0x41b0, 0x2a00, 0x4e6f, 0xd192, 0xb414, 0x0, 0x1);
        gbc.writeMem(0x44ae, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x41b0);
        EXPECT(gbc.pc(), 0x44b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 018A
        gbc.setState(0x7484, 0xa00c, 0x6c60, 0x18c4, 0x8a78, 0xb76b, 0x0, 0x1);
        gbc.writeMem(0x7484, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xa00c);
        EXPECT(gbc.pc(), 0x7486);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 018B
        gbc.setState(0x1daf, 0x69cb, 0x54f0, 0xfb69, 0x2b20, 0x555c, 0x0, 0x0);
        gbc.writeMem(0x1daf, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x69cb);
        EXPECT(gbc.pc(), 0x1db1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 018C
        gbc.setState(0xd7f1, 0xf792, 0x59e0, 0xa873, 0x6582, 0xc0e9, 0x1, 0x0);
        gbc.writeMem(0xd7f1, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xf792);
        EXPECT(gbc.pc(), 0xd7f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7f1), 0xcb);
        EXPECT(gbc.readMem(0xd7f2), 0x45);
        // CB 45 018D
        gbc.setState(0x3397, 0x9327, 0xd540, 0xda34, 0xb688, 0xc7fc, 0x0, 0x0);
        gbc.writeMem(0x3397, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9327);
        EXPECT(gbc.pc(), 0x3399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 018E
        gbc.setState(0x27a0, 0x2296, 0xe870, 0xe82e, 0xfd28, 0x983e, 0x1, 0x0);
        gbc.writeMem(0x27a0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2296);
        EXPECT(gbc.pc(), 0x27a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 018F
        gbc.setState(0xe946, 0x8501, 0x8e90, 0xfc24, 0xe064, 0x7193, 0x1, 0x0);
        gbc.writeMem(0xe946, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8501);
        EXPECT(gbc.pc(), 0xe948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe946), 0xcb);
        EXPECT(gbc.readMem(0xe947), 0x45);
        // CB 45 0190
        gbc.setState(0xaec0, 0xc4b6, 0xf8a0, 0x61f9, 0x1de7, 0x3905, 0x0, 0x0);
        gbc.writeMem(0xaec0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc4b6);
        EXPECT(gbc.pc(), 0xaec2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaec0), 0xcb);
        EXPECT(gbc.readMem(0xaec1), 0x45);
        // CB 45 0191
        gbc.setState(0x2d88, 0x9ef9, 0xb310, 0x442a, 0xa3c, 0x9132, 0x0, 0x0);
        gbc.writeMem(0x2d88, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9ef9);
        EXPECT(gbc.pc(), 0x2d8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0192
        gbc.setState(0x94f5, 0xaf7b, 0xefe0, 0xaceb, 0xd7f0, 0x8eac, 0x0, 0x1);
        gbc.writeMem(0x94f5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xaf7b);
        EXPECT(gbc.pc(), 0x94f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94f5), 0xcb);
        EXPECT(gbc.readMem(0x94f6), 0x45);
        // CB 45 0193
        gbc.setState(0xde42, 0x910d, 0x4df0, 0x88d3, 0x78d3, 0x9391, 0x0, 0x0);
        gbc.writeMem(0xde42, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x910d);
        EXPECT(gbc.pc(), 0xde44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde42), 0xcb);
        EXPECT(gbc.readMem(0xde43), 0x45);
        // CB 45 0194
        gbc.setState(0xc61c, 0xbc92, 0x2b80, 0x8fa3, 0xc05b, 0xf83, 0x1, 0x1);
        gbc.writeMem(0xc61c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xbc92);
        EXPECT(gbc.pc(), 0xc61e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc61c), 0xcb);
        EXPECT(gbc.readMem(0xc61d), 0x45);
        // CB 45 0195
        gbc.setState(0xa814, 0x8e52, 0x42e0, 0x87f0, 0xf99d, 0xab2f, 0x0, 0x1);
        gbc.writeMem(0xa814, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8e52);
        EXPECT(gbc.pc(), 0xa816);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa814), 0xcb);
        EXPECT(gbc.readMem(0xa815), 0x45);
        // CB 45 0196
        gbc.setState(0xd0d2, 0x320d, 0x8ad0, 0x297a, 0xc868, 0x1e6f, 0x1, 0x1);
        gbc.writeMem(0xd0d2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x320d);
        EXPECT(gbc.pc(), 0xd0d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0d2), 0xcb);
        EXPECT(gbc.readMem(0xd0d3), 0x45);
        // CB 45 0197
        gbc.setState(0xa8d1, 0x7b4a, 0x27f0, 0xf326, 0x4670, 0x6b8, 0x0, 0x1);
        gbc.writeMem(0xa8d1, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7b4a);
        EXPECT(gbc.pc(), 0xa8d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8d1), 0xcb);
        EXPECT(gbc.readMem(0xa8d2), 0x45);
        // CB 45 0198
        gbc.setState(0x3ae8, 0xb5fe, 0xfd00, 0xa155, 0xae7, 0xf3a5, 0x1, 0x0);
        gbc.writeMem(0x3ae8, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xb5fe);
        EXPECT(gbc.pc(), 0x3aea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0199
        gbc.setState(0x6f75, 0x52e4, 0xb8e0, 0xe74, 0xac93, 0x1665, 0x1, 0x0);
        gbc.writeMem(0x6f75, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x52e4);
        EXPECT(gbc.pc(), 0x6f77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 019A
        gbc.setState(0xa618, 0x864d, 0x90b0, 0x6bad, 0x67f4, 0x8418, 0x0, 0x0);
        gbc.writeMem(0xa618, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x864d);
        EXPECT(gbc.pc(), 0xa61a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa618), 0xcb);
        EXPECT(gbc.readMem(0xa619), 0x45);
        // CB 45 019B
        gbc.setState(0x4ce9, 0xc806, 0x15b0, 0x23cd, 0x25c8, 0x685b, 0x1, 0x1);
        gbc.writeMem(0x4ce9, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc806);
        EXPECT(gbc.pc(), 0x4ceb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 019C
        gbc.setState(0x7b8e, 0x8caa, 0x6170, 0xc9e0, 0x4afd, 0x4011, 0x1, 0x0);
        gbc.writeMem(0x7b8e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x8caa);
        EXPECT(gbc.pc(), 0x7b90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 019D
        gbc.setState(0x7c1a, 0xe0c6, 0xd7e0, 0x8abf, 0xfb95, 0xfa83, 0x1, 0x1);
        gbc.writeMem(0x7c1a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe0c6);
        EXPECT(gbc.pc(), 0x7c1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 019E
        gbc.setState(0x1415, 0xcbc9, 0x6aa0, 0xa751, 0xe1d9, 0xeba7, 0x0, 0x0);
        gbc.writeMem(0x1415, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xcbc9);
        EXPECT(gbc.pc(), 0x1417);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 019F
        gbc.setState(0xe0d1, 0x7c4, 0x3a40, 0x2f20, 0xcdc0, 0x5ddb, 0x1, 0x0);
        gbc.writeMem(0xe0d1, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7c4);
        EXPECT(gbc.pc(), 0xe0d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0d1), 0xcb);
        EXPECT(gbc.readMem(0xe0d2), 0x45);
        // CB 45 01A0
        gbc.setState(0x2d2c, 0xc4b2, 0x4860, 0xe895, 0xcc1b, 0xf56c, 0x0, 0x0);
        gbc.writeMem(0x2d2c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc4b2);
        EXPECT(gbc.pc(), 0x2d2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 01A1
        gbc.setState(0x209c, 0x614, 0xc3b0, 0x4854, 0xa2ad, 0x5e78, 0x0, 0x0);
        gbc.writeMem(0x209c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x614);
        EXPECT(gbc.pc(), 0x209e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 01A2
        gbc.setState(0xb80f, 0x8476, 0x1160, 0x6c, 0x57f9, 0x633b, 0x1, 0x1);
        gbc.writeMem(0xb80f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x8476);
        EXPECT(gbc.pc(), 0xb811);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb80f), 0xcb);
        EXPECT(gbc.readMem(0xb810), 0x45);
        // CB 45 01A3
        gbc.setState(0xc874, 0x8b6b, 0x8e70, 0xd6a7, 0xeed7, 0x3811, 0x1, 0x0);
        gbc.writeMem(0xc874, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x8b6b);
        EXPECT(gbc.pc(), 0xc876);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc874), 0xcb);
        EXPECT(gbc.readMem(0xc875), 0x45);
        // CB 45 01A4
        gbc.setState(0xcdfe, 0xa0a9, 0x1850, 0xc98, 0xafc9, 0xcc0, 0x0, 0x1);
        gbc.writeMem(0xcdfe, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa0a9);
        EXPECT(gbc.pc(), 0xce00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdfe), 0xcb);
        EXPECT(gbc.readMem(0xcdff), 0x45);
        // CB 45 01A5
        gbc.setState(0xb8c0, 0x7d6e, 0x5dc0, 0x7ab5, 0xaad, 0xe6b8, 0x1, 0x0);
        gbc.writeMem(0xb8c0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7d6e);
        EXPECT(gbc.pc(), 0xb8c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8c0), 0xcb);
        EXPECT(gbc.readMem(0xb8c1), 0x45);
        // CB 45 01A6
        gbc.setState(0xee74, 0x4e8f, 0x620, 0xf84a, 0x2c5c, 0x9384, 0x1, 0x0);
        gbc.writeMem(0xee74, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4e8f);
        EXPECT(gbc.pc(), 0xee76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee74), 0xcb);
        EXPECT(gbc.readMem(0xee75), 0x45);
        // CB 45 01A7
        gbc.setState(0xbd3b, 0x9443, 0x1420, 0xa704, 0xaef1, 0x849e, 0x1, 0x0);
        gbc.writeMem(0xbd3b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9443);
        EXPECT(gbc.pc(), 0xbd3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd3b), 0xcb);
        EXPECT(gbc.readMem(0xbd3c), 0x45);
        // CB 45 01A9
        gbc.setState(0xb32, 0x4aa6, 0x30b0, 0x355, 0x1c5, 0xcb92, 0x0, 0x0);
        gbc.writeMem(0xb32, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x4aa6);
        EXPECT(gbc.pc(), 0xb34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 01AA
        gbc.setState(0x5e85, 0xcc89, 0xe0a0, 0xa81f, 0xfd46, 0x9a51, 0x1, 0x0);
        gbc.writeMem(0x5e85, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xcc89);
        EXPECT(gbc.pc(), 0x5e87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 01AB
        gbc.setState(0x726e, 0xdc95, 0x7c60, 0x2ed6, 0x26b5, 0xbd7c, 0x0, 0x0);
        gbc.writeMem(0x726e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xdc95);
        EXPECT(gbc.pc(), 0x7270);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 01AC
        gbc.setState(0x758e, 0xd2df, 0xbbb0, 0xa311, 0x858b, 0xba6c, 0x1, 0x1);
        gbc.writeMem(0x758e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xd2df);
        EXPECT(gbc.pc(), 0x7590);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 01AD
        gbc.setState(0xe7ad, 0xd950, 0x1000, 0xbe68, 0xd00, 0xb3e3, 0x0, 0x0);
        gbc.writeMem(0xe7ad, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xd950);
        EXPECT(gbc.pc(), 0xe7af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7ad), 0xcb);
        EXPECT(gbc.readMem(0xe7ae), 0x45);
        // CB 45 01AE
        gbc.setState(0x4d72, 0xe57f, 0xe530, 0xad34, 0x342d, 0x5c62, 0x0, 0x1);
        gbc.writeMem(0x4d72, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe57f);
        EXPECT(gbc.pc(), 0x4d74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 01AF
        gbc.setState(0x66c3, 0xe453, 0xf2a0, 0xb958, 0xb1bf, 0x806b, 0x1, 0x1);
        gbc.writeMem(0x66c3, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe453);
        EXPECT(gbc.pc(), 0x66c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 01B0
        gbc.setState(0xb3b5, 0x19e0, 0xb590, 0xb997, 0x5ed6, 0x4806, 0x1, 0x1);
        gbc.writeMem(0xb3b5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x19e0);
        EXPECT(gbc.pc(), 0xb3b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3b5), 0xcb);
        EXPECT(gbc.readMem(0xb3b6), 0x45);
        // CB 45 01B1
        gbc.setState(0x747d, 0xfdfa, 0x53a0, 0xc8cb, 0x834e, 0x1678, 0x1, 0x1);
        gbc.writeMem(0x747d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xfdfa);
        EXPECT(gbc.pc(), 0x747f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 01B3
        gbc.setState(0xc395, 0x2447, 0x4590, 0xb80b, 0xa3cb, 0x110, 0x1, 0x0);
        gbc.writeMem(0xc395, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x2447);
        EXPECT(gbc.pc(), 0xc397);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc395), 0xcb);
        EXPECT(gbc.readMem(0xc396), 0x45);
        // CB 45 01B4
        gbc.setState(0x2526, 0x93e6, 0xc2e0, 0xf864, 0x4f8b, 0x54c, 0x1, 0x0);
        gbc.writeMem(0x2526, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x93e6);
        EXPECT(gbc.pc(), 0x2528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 01B5
        gbc.setState(0x6015, 0x40f3, 0x2ee0, 0x37fe, 0x7df6, 0x6596, 0x1, 0x0);
        gbc.writeMem(0x6015, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x40f3);
        EXPECT(gbc.pc(), 0x6017);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 01B6
        gbc.setState(0x1be5, 0x7dd7, 0x6960, 0xbdbc, 0xb13f, 0xe578, 0x1, 0x0);
        gbc.writeMem(0x1be5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7dd7);
        EXPECT(gbc.pc(), 0x1be7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 01B7
        gbc.setState(0x5187, 0x4fec, 0x80, 0x20e3, 0x45a0, 0x5400, 0x1, 0x0);
        gbc.writeMem(0x5187, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x4fec);
        EXPECT(gbc.pc(), 0x5189);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 01B8
        gbc.setState(0x4393, 0xf014, 0x0, 0xeeff, 0x843a, 0x525e, 0x1, 0x0);
        gbc.writeMem(0x4393, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf014);
        EXPECT(gbc.pc(), 0x4395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 01B9
        gbc.setState(0x2c06, 0xffc2, 0x7810, 0x3dca, 0x4088, 0x7636, 0x0, 0x1);
        gbc.writeMem(0x2c06, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xffc2);
        EXPECT(gbc.pc(), 0x2c08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 01BB
        gbc.setState(0x84e6, 0x3928, 0x7890, 0x339c, 0xf988, 0x7b52, 0x1, 0x1);
        gbc.writeMem(0x84e6, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x3928);
        EXPECT(gbc.pc(), 0x84e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84e6), 0xcb);
        EXPECT(gbc.readMem(0x84e7), 0x45);
        // CB 45 01BC
        gbc.setState(0x86f7, 0xfb41, 0xd340, 0xdf7d, 0x40aa, 0x422, 0x0, 0x1);
        gbc.writeMem(0x86f7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xfb41);
        EXPECT(gbc.pc(), 0x86f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86f7), 0xcb);
        EXPECT(gbc.readMem(0x86f8), 0x45);
        // CB 45 01BD
        gbc.setState(0xa984, 0xcbb2, 0x30d0, 0xa8f3, 0xd48e, 0xfc14, 0x0, 0x0);
        gbc.writeMem(0xa984, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xcbb2);
        EXPECT(gbc.pc(), 0xa986);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa984), 0xcb);
        EXPECT(gbc.readMem(0xa985), 0x45);
        // CB 45 01BE
        gbc.setState(0xa036, 0xc8d8, 0x24f0, 0xf4e5, 0x7374, 0xb983, 0x0, 0x0);
        gbc.writeMem(0xa036, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc8d8);
        EXPECT(gbc.pc(), 0xa038);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa036), 0xcb);
        EXPECT(gbc.readMem(0xa037), 0x45);
        // CB 45 01BF
        gbc.setState(0xd3c3, 0xd087, 0xa850, 0xe59c, 0x7e45, 0x9c46, 0x1, 0x1);
        gbc.writeMem(0xd3c3, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xd087);
        EXPECT(gbc.pc(), 0xd3c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3c3), 0xcb);
        EXPECT(gbc.readMem(0xd3c4), 0x45);
        // CB 45 01C1
        gbc.setState(0xd190, 0x3f0e, 0x1670, 0x3fa4, 0xd0b, 0x7cfe, 0x0, 0x0);
        gbc.writeMem(0xd190, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3f0e);
        EXPECT(gbc.pc(), 0xd192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd190), 0xcb);
        EXPECT(gbc.readMem(0xd191), 0x45);
        // CB 45 01C2
        gbc.setState(0xda52, 0x4249, 0x8880, 0x50a3, 0xbd17, 0xc956, 0x0, 0x1);
        gbc.writeMem(0xda52, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x4249);
        EXPECT(gbc.pc(), 0xda54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda52), 0xcb);
        EXPECT(gbc.readMem(0xda53), 0x45);
        // CB 45 01C3
        gbc.setState(0x69b8, 0xc998, 0xd790, 0x30fe, 0x4694, 0x763, 0x0, 0x0);
        gbc.writeMem(0x69b8, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc998);
        EXPECT(gbc.pc(), 0x69ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 01C4
        gbc.setState(0x6175, 0x7fcf, 0x8b10, 0x8849, 0xd855, 0x1448, 0x0, 0x0);
        gbc.writeMem(0x6175, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7fcf);
        EXPECT(gbc.pc(), 0x6177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 01C5
        gbc.setState(0x281e, 0xe410, 0x3520, 0x17b9, 0x4ef0, 0xa10e, 0x1, 0x0);
        gbc.writeMem(0x281e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe410);
        EXPECT(gbc.pc(), 0x2820);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 01C8
        gbc.setState(0xd8e9, 0xb5a, 0xe0e0, 0x90dc, 0xe011, 0xfdb6, 0x1, 0x1);
        gbc.writeMem(0xd8e9, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb5a);
        EXPECT(gbc.pc(), 0xd8eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8e9), 0xcb);
        EXPECT(gbc.readMem(0xd8ea), 0x45);
        // CB 45 01CA
        gbc.setState(0xdf59, 0xed75, 0x76c0, 0x2608, 0xc37e, 0xd86c, 0x1, 0x0);
        gbc.writeMem(0xdf59, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xed75);
        EXPECT(gbc.pc(), 0xdf5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf59), 0xcb);
        EXPECT(gbc.readMem(0xdf5a), 0x45);
        // CB 45 01CB
        gbc.setState(0x1cb6, 0xb06e, 0x8010, 0x9fcb, 0x4564, 0x182b, 0x1, 0x0);
        gbc.writeMem(0x1cb6, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb06e);
        EXPECT(gbc.pc(), 0x1cb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 01CC
        gbc.setState(0x3bd2, 0xe1c1, 0x1280, 0x6cb6, 0x4784, 0x7ff2, 0x0, 0x0);
        gbc.writeMem(0x3bd2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe1c1);
        EXPECT(gbc.pc(), 0x3bd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 01CD
        gbc.setState(0x75b3, 0xf780, 0x7da0, 0xc19, 0xe1c5, 0xa65d, 0x1, 0x0);
        gbc.writeMem(0x75b3, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xf780);
        EXPECT(gbc.pc(), 0x75b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 01CE
        gbc.setState(0xbc17, 0x8bc7, 0x3f90, 0xdeca, 0xecd9, 0x1ef2, 0x0, 0x1);
        gbc.writeMem(0xbc17, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x8bc7);
        EXPECT(gbc.pc(), 0xbc19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc17), 0xcb);
        EXPECT(gbc.readMem(0xbc18), 0x45);
        // CB 45 01CF
        gbc.setState(0x3bf0, 0xa72, 0x87d0, 0x4bdd, 0x322d, 0x0, 0x1, 0x0);
        gbc.writeMem(0x3bf0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa72);
        EXPECT(gbc.pc(), 0x3bf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 01D0
        gbc.setState(0x83cf, 0xbf32, 0x30e0, 0x6678, 0x5ebd, 0x6741, 0x1, 0x1);
        gbc.writeMem(0x83cf, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xbf32);
        EXPECT(gbc.pc(), 0x83d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83cf), 0xcb);
        EXPECT(gbc.readMem(0x83d0), 0x45);
        // CB 45 01D1
        gbc.setState(0x470b, 0x2ab2, 0x83e0, 0xeddc, 0xc42e, 0x10a3, 0x1, 0x0);
        gbc.writeMem(0x470b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x2ab2);
        EXPECT(gbc.pc(), 0x470d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 01D2
        gbc.setState(0x9cb1, 0x842f, 0x12d0, 0x9127, 0x1ba5, 0xed31, 0x1, 0x0);
        gbc.writeMem(0x9cb1, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x842f);
        EXPECT(gbc.pc(), 0x9cb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cb1), 0xcb);
        EXPECT(gbc.readMem(0x9cb2), 0x45);
        // CB 45 01D3
        gbc.setState(0xe6cf, 0xaa87, 0x1f90, 0x7594, 0xb126, 0x40ab, 0x0, 0x1);
        gbc.writeMem(0xe6cf, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xaa87);
        EXPECT(gbc.pc(), 0xe6d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6cf), 0xcb);
        EXPECT(gbc.readMem(0xe6d0), 0x45);
        // CB 45 01D4
        gbc.setState(0xd8af, 0x984a, 0xd9b0, 0x7000, 0x41f7, 0xc63, 0x0, 0x0);
        gbc.writeMem(0xd8af, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x984a);
        EXPECT(gbc.pc(), 0xd8b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8af), 0xcb);
        EXPECT(gbc.readMem(0xd8b0), 0x45);
        // CB 45 01D5
        gbc.setState(0x80c1, 0xe701, 0xa180, 0x114d, 0x31d6, 0xb0ce, 0x0, 0x1);
        gbc.writeMem(0x80c1, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe701);
        EXPECT(gbc.pc(), 0x80c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80c1), 0xcb);
        EXPECT(gbc.readMem(0x80c2), 0x45);
        // CB 45 01D6
        gbc.setState(0xdfa7, 0xc434, 0xae0, 0x7c8d, 0xf078, 0x5941, 0x1, 0x0);
        gbc.writeMem(0xdfa7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xc434);
        EXPECT(gbc.pc(), 0xdfa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfa7), 0xcb);
        EXPECT(gbc.readMem(0xdfa8), 0x45);
        // CB 45 01D7
        gbc.setState(0x7db2, 0x730f, 0xcd30, 0xbbf7, 0xe692, 0x219e, 0x1, 0x1);
        gbc.writeMem(0x7db2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x730f);
        EXPECT(gbc.pc(), 0x7db4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 01D8
        gbc.setState(0x1103, 0x91e9, 0x5910, 0x7bbe, 0xd3d3, 0x4cb, 0x0, 0x0);
        gbc.writeMem(0x1103, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x91e9);
        EXPECT(gbc.pc(), 0x1105);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 01D9
        gbc.setState(0xa3ec, 0xcbee, 0x5050, 0x2693, 0xe114, 0x7923, 0x0, 0x0);
        gbc.writeMem(0xa3ec, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xcbee);
        EXPECT(gbc.pc(), 0xa3ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3ec), 0xcb);
        EXPECT(gbc.readMem(0xa3ed), 0x45);
        // CB 45 01DA
        gbc.setState(0x9e1, 0x6af7, 0x4c50, 0xa3d9, 0xab54, 0x4cef, 0x0, 0x1);
        gbc.writeMem(0x9e1, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6af7);
        EXPECT(gbc.pc(), 0x9e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 01DB
        gbc.setState(0xe21e, 0x7c6c, 0x84a0, 0xf8f9, 0xb722, 0x501d, 0x0, 0x0);
        gbc.writeMem(0xe21e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x7c6c);
        EXPECT(gbc.pc(), 0xe220);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe21e), 0xcb);
        EXPECT(gbc.readMem(0xe21f), 0x45);
        // CB 45 01DC
        gbc.setState(0xfc2, 0x1de8, 0xfc80, 0x4b4a, 0x44e7, 0x158c, 0x0, 0x0);
        gbc.writeMem(0xfc2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1de8);
        EXPECT(gbc.pc(), 0xfc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 01DD
        gbc.setState(0x2245, 0xd7e6, 0x6b70, 0xf805, 0x902e, 0x9ca7, 0x0, 0x1);
        gbc.writeMem(0x2245, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd7e6);
        EXPECT(gbc.pc(), 0x2247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 01DF
        gbc.setState(0x58bb, 0xb8cb, 0xc210, 0xc4f5, 0x4c20, 0x9c7c, 0x0, 0x1);
        gbc.writeMem(0x58bb, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb8cb);
        EXPECT(gbc.pc(), 0x58bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 01E0
        gbc.setState(0xde5b, 0x9319, 0x2f30, 0x8e89, 0xbe8c, 0xbed3, 0x1, 0x1);
        gbc.writeMem(0xde5b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9319);
        EXPECT(gbc.pc(), 0xde5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde5b), 0xcb);
        EXPECT(gbc.readMem(0xde5c), 0x45);
        // CB 45 01E1
        gbc.setState(0xa8e4, 0xdbef, 0x1480, 0xf367, 0x9279, 0xf2e4, 0x0, 0x0);
        gbc.writeMem(0xa8e4, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xdbef);
        EXPECT(gbc.pc(), 0xa8e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8e4), 0xcb);
        EXPECT(gbc.readMem(0xa8e5), 0x45);
        // CB 45 01E2
        gbc.setState(0xa427, 0x81a, 0xf8b0, 0xa8be, 0xde3, 0x2c13, 0x0, 0x0);
        gbc.writeMem(0xa427, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x81a);
        EXPECT(gbc.pc(), 0xa429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa427), 0xcb);
        EXPECT(gbc.readMem(0xa428), 0x45);
        // CB 45 01E4
        gbc.setState(0xa7e0, 0x73f9, 0x1530, 0xe0ff, 0x12c8, 0x7a38, 0x0, 0x1);
        gbc.writeMem(0xa7e0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x73f9);
        EXPECT(gbc.pc(), 0xa7e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7e0), 0xcb);
        EXPECT(gbc.readMem(0xa7e1), 0x45);
        // CB 45 01E5
        gbc.setState(0x27ba, 0x838b, 0x83d0, 0xf021, 0x22fc, 0xc6ca, 0x1, 0x1);
        gbc.writeMem(0x27ba, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x838b);
        EXPECT(gbc.pc(), 0x27bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 01E6
        gbc.setState(0x1e23, 0x1913, 0xe780, 0xd3a1, 0xd2cb, 0x2325, 0x1, 0x1);
        gbc.writeMem(0x1e23, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x1913);
        EXPECT(gbc.pc(), 0x1e25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 01E7
        gbc.setState(0x700c, 0xf94d, 0x9300, 0x2ab6, 0xe8e4, 0x6228, 0x1, 0x1);
        gbc.writeMem(0x700c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf94d);
        EXPECT(gbc.pc(), 0x700e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 01E8
        gbc.setState(0x33bc, 0xf4ff, 0x7a70, 0xc644, 0x3f2d, 0xba14, 0x1, 0x1);
        gbc.writeMem(0x33bc, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf4ff);
        EXPECT(gbc.pc(), 0x33be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 01E9
        gbc.setState(0x14d0, 0xe540, 0xf930, 0x7ca0, 0x459d, 0x25, 0x1, 0x1);
        gbc.writeMem(0x14d0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe540);
        EXPECT(gbc.pc(), 0x14d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 01EA
        gbc.setState(0xd3bb, 0x20dd, 0xea00, 0x4c0b, 0x9af9, 0x1579, 0x1, 0x0);
        gbc.writeMem(0xd3bb, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x20dd);
        EXPECT(gbc.pc(), 0xd3bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3bb), 0xcb);
        EXPECT(gbc.readMem(0xd3bc), 0x45);
        // CB 45 01EB
        gbc.setState(0x4780, 0xd4aa, 0x4bf0, 0x215, 0x840, 0x1a3f, 0x1, 0x1);
        gbc.writeMem(0x4780, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd4aa);
        EXPECT(gbc.pc(), 0x4782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 01EC
        gbc.setState(0xdf53, 0x87b1, 0xe890, 0xf51b, 0x2da7, 0x771, 0x1, 0x0);
        gbc.writeMem(0xdf53, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x87b1);
        EXPECT(gbc.pc(), 0xdf55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf53), 0xcb);
        EXPECT(gbc.readMem(0xdf54), 0x45);
        // CB 45 01ED
        gbc.setState(0xdf3d, 0x3806, 0x5520, 0xd3f2, 0x5e86, 0xf919, 0x0, 0x1);
        gbc.writeMem(0xdf3d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x3806);
        EXPECT(gbc.pc(), 0xdf3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf3d), 0xcb);
        EXPECT(gbc.readMem(0xdf3e), 0x45);
        // CB 45 01EE
        gbc.setState(0xc577, 0x1c0, 0x78a0, 0x1b5b, 0x5922, 0x1a5c, 0x1, 0x1);
        gbc.writeMem(0xc577, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1c0);
        EXPECT(gbc.pc(), 0xc579);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc577), 0xcb);
        EXPECT(gbc.readMem(0xc578), 0x45);
        // CB 45 01EF
        gbc.setState(0xc846, 0x9bea, 0xc330, 0xe79a, 0x8856, 0xe22a, 0x0, 0x1);
        gbc.writeMem(0xc846, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x9bea);
        EXPECT(gbc.pc(), 0xc848);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc846), 0xcb);
        EXPECT(gbc.readMem(0xc847), 0x45);
        // CB 45 01F0
        gbc.setState(0x55c9, 0x17a7, 0x88b0, 0xc6d0, 0x9164, 0xad5d, 0x0, 0x0);
        gbc.writeMem(0x55c9, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x17a7);
        EXPECT(gbc.pc(), 0x55cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 01F1
        gbc.setState(0x2546, 0x52da, 0xf000, 0x58da, 0xb386, 0xac14, 0x0, 0x1);
        gbc.writeMem(0x2546, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x52da);
        EXPECT(gbc.pc(), 0x2548);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 01F2
        gbc.setState(0x871a, 0x2615, 0x96f0, 0xbca5, 0x4872, 0x8567, 0x0, 0x1);
        gbc.writeMem(0x871a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2615);
        EXPECT(gbc.pc(), 0x871c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x871a), 0xcb);
        EXPECT(gbc.readMem(0x871b), 0x45);
        // CB 45 01F3
        gbc.setState(0xe2e1, 0x366, 0x8c40, 0x5639, 0x358b, 0x3080, 0x1, 0x0);
        gbc.writeMem(0xe2e1, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x366);
        EXPECT(gbc.pc(), 0xe2e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2e1), 0xcb);
        EXPECT(gbc.readMem(0xe2e2), 0x45);
        // CB 45 01F5
        gbc.setState(0x4ccd, 0x8c28, 0xdd90, 0xbada, 0x8544, 0x9ed8, 0x1, 0x0);
        gbc.writeMem(0x4ccd, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8c28);
        EXPECT(gbc.pc(), 0x4ccf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 01F6
        gbc.setState(0xb07d, 0x52b7, 0x4a10, 0x82ed, 0xde58, 0xc1, 0x0, 0x1);
        gbc.writeMem(0xb07d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x52b7);
        EXPECT(gbc.pc(), 0xb07f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb07d), 0xcb);
        EXPECT(gbc.readMem(0xb07e), 0x45);
        // CB 45 01F8
        gbc.setState(0x717f, 0xe641, 0xc200, 0xe5ec, 0xed8c, 0xdb14, 0x0, 0x0);
        gbc.writeMem(0x717f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xe641);
        EXPECT(gbc.pc(), 0x7181);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 01F9
        gbc.setState(0x8278, 0x364f, 0x5020, 0x9fa6, 0xa82f, 0x7570, 0x0, 0x1);
        gbc.writeMem(0x8278, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x364f);
        EXPECT(gbc.pc(), 0x827a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8278), 0xcb);
        EXPECT(gbc.readMem(0x8279), 0x45);
        // CB 45 01FA
        gbc.setState(0xdd1b, 0x4bd6, 0x6890, 0x1c45, 0xd072, 0x6235, 0x1, 0x0);
        gbc.writeMem(0xdd1b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4bd6);
        EXPECT(gbc.pc(), 0xdd1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd1b), 0xcb);
        EXPECT(gbc.readMem(0xdd1c), 0x45);
        // CB 45 01FB
        gbc.setState(0x958d, 0x1863, 0x3710, 0xa9d4, 0xde70, 0x3280, 0x1, 0x1);
        gbc.writeMem(0x958d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1863);
        EXPECT(gbc.pc(), 0x958f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x958d), 0xcb);
        EXPECT(gbc.readMem(0x958e), 0x45);
        // CB 45 01FC
        gbc.setState(0x26d1, 0xa978, 0x8220, 0x5c61, 0x4469, 0x9602, 0x0, 0x1);
        gbc.writeMem(0x26d1, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xa978);
        EXPECT(gbc.pc(), 0x26d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 01FD
        gbc.setState(0x6bab, 0x5483, 0xa630, 0x8ab0, 0x8791, 0x738f, 0x0, 0x0);
        gbc.writeMem(0x6bab, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5483);
        EXPECT(gbc.pc(), 0x6bad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 01FE
        gbc.setState(0x18, 0xd240, 0xe0, 0xf4e2, 0xd263, 0xd24, 0x0, 0x0);
        gbc.writeMem(0x18, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd240);
        EXPECT(gbc.pc(), 0x1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 01FF
        gbc.setState(0x4227, 0x451d, 0x980, 0xfc4d, 0x1042, 0xae99, 0x1, 0x0);
        gbc.writeMem(0x4227, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x451d);
        EXPECT(gbc.pc(), 0x4229);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0200
        gbc.setState(0x1863, 0x19d6, 0x8ad0, 0x9d94, 0xb975, 0x1096, 0x1, 0x1);
        gbc.writeMem(0x1863, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x19d6);
        EXPECT(gbc.pc(), 0x1865);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0201
        gbc.setState(0xaf55, 0xf76a, 0x3610, 0xcf7b, 0x1c49, 0xa6b7, 0x0, 0x1);
        gbc.writeMem(0xaf55, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf76a);
        EXPECT(gbc.pc(), 0xaf57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf55), 0xcb);
        EXPECT(gbc.readMem(0xaf56), 0x45);
        // CB 45 0202
        gbc.setState(0x34a8, 0xa254, 0xf1b0, 0x5c82, 0xaae9, 0x5450, 0x1, 0x1);
        gbc.writeMem(0x34a8, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa254);
        EXPECT(gbc.pc(), 0x34aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0203
        gbc.setState(0x7ca9, 0xb057, 0xf950, 0xc508, 0x29b, 0x75a5, 0x0, 0x1);
        gbc.writeMem(0x7ca9, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xb057);
        EXPECT(gbc.pc(), 0x7cab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0204
        gbc.setState(0x5eb, 0xa619, 0x9580, 0x8fc0, 0xf950, 0x805f, 0x1, 0x1);
        gbc.writeMem(0x5eb, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa619);
        EXPECT(gbc.pc(), 0x5ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0205
        gbc.setState(0xb662, 0x1523, 0x4230, 0xf5cf, 0x6396, 0x8cd1, 0x0, 0x0);
        gbc.writeMem(0xb662, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1523);
        EXPECT(gbc.pc(), 0xb664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb662), 0xcb);
        EXPECT(gbc.readMem(0xb663), 0x45);
        // CB 45 0206
        gbc.setState(0x335e, 0x2bb, 0x6e20, 0x7263, 0x89d1, 0x998b, 0x1, 0x1);
        gbc.writeMem(0x335e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2bb);
        EXPECT(gbc.pc(), 0x3360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0207
        gbc.setState(0xdbbf, 0xc5c5, 0xf2e0, 0x9e08, 0x5744, 0xb58a, 0x0, 0x0);
        gbc.writeMem(0xdbbf, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc5c5);
        EXPECT(gbc.pc(), 0xdbc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbbf), 0xcb);
        EXPECT(gbc.readMem(0xdbc0), 0x45);
        // CB 45 0208
        gbc.setState(0x9e7f, 0x3da1, 0x3870, 0xfbb7, 0xf303, 0xe0e1, 0x0, 0x1);
        gbc.writeMem(0x9e7f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3da1);
        EXPECT(gbc.pc(), 0x9e81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e7f), 0xcb);
        EXPECT(gbc.readMem(0x9e80), 0x45);
        // CB 45 0209
        gbc.setState(0x963, 0xd0b3, 0xea10, 0x8600, 0x309b, 0x237f, 0x1, 0x0);
        gbc.writeMem(0x963, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd0b3);
        EXPECT(gbc.pc(), 0x965);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 020A
        gbc.setState(0x78f3, 0x30bc, 0x38c0, 0x2c11, 0xafa0, 0xaf69, 0x0, 0x0);
        gbc.writeMem(0x78f3, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x30bc);
        EXPECT(gbc.pc(), 0x78f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 020B
        gbc.setState(0x477e, 0xbe8, 0x18c0, 0x123c, 0xebab, 0xd3ba, 0x0, 0x1);
        gbc.writeMem(0x477e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xbe8);
        EXPECT(gbc.pc(), 0x4780);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 020C
        gbc.setState(0x6699, 0x198a, 0x5110, 0xd5a2, 0xaa9c, 0x42ab, 0x0, 0x1);
        gbc.writeMem(0x6699, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x198a);
        EXPECT(gbc.pc(), 0x669b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 020D
        gbc.setState(0x6ad1, 0xfcfa, 0x6860, 0x1ed4, 0x2f85, 0x10f7, 0x1, 0x0);
        gbc.writeMem(0x6ad1, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xfcfa);
        EXPECT(gbc.pc(), 0x6ad3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 020E
        gbc.setState(0x31e, 0xfc4, 0x4240, 0x6eaa, 0xe9bf, 0xe848, 0x0, 0x0);
        gbc.writeMem(0x31e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xfc4);
        EXPECT(gbc.pc(), 0x320);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 020F
        gbc.setState(0xe632, 0xbc00, 0xc350, 0xba3c, 0xb8d8, 0xced7, 0x1, 0x1);
        gbc.writeMem(0xe632, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xbc00);
        EXPECT(gbc.pc(), 0xe634);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe632), 0xcb);
        EXPECT(gbc.readMem(0xe633), 0x45);
        // CB 45 0210
        gbc.setState(0xe982, 0x8eb1, 0xdc80, 0x6c53, 0x9c2b, 0x10c, 0x1, 0x0);
        gbc.writeMem(0xe982, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8eb1);
        EXPECT(gbc.pc(), 0xe984);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe982), 0xcb);
        EXPECT(gbc.readMem(0xe983), 0x45);
        // CB 45 0211
        gbc.setState(0x115e, 0x9bc8, 0x8170, 0x3fc0, 0xf3bf, 0x61ab, 0x1, 0x0);
        gbc.writeMem(0x115e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x9bc8);
        EXPECT(gbc.pc(), 0x1160);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0212
        gbc.setState(0xe5de, 0x6ff9, 0xa080, 0xae41, 0xb999, 0xe026, 0x1, 0x0);
        gbc.writeMem(0xe5de, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x6ff9);
        EXPECT(gbc.pc(), 0xe5e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5de), 0xcb);
        EXPECT(gbc.readMem(0xe5df), 0x45);
        // CB 45 0213
        gbc.setState(0x2964, 0x9204, 0xda30, 0x8735, 0x5245, 0x7c6d, 0x1, 0x1);
        gbc.writeMem(0x2964, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x9204);
        EXPECT(gbc.pc(), 0x2966);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0214
        gbc.setState(0x60a2, 0xd39c, 0xe4e0, 0xf693, 0x8244, 0x85c2, 0x1, 0x1);
        gbc.writeMem(0x60a2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd39c);
        EXPECT(gbc.pc(), 0x60a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0215
        gbc.setState(0x433e, 0x872a, 0xbab0, 0x4bfb, 0x528d, 0x4d8b, 0x0, 0x0);
        gbc.writeMem(0x433e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x872a);
        EXPECT(gbc.pc(), 0x4340);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0216
        gbc.setState(0x1abc, 0x28ef, 0x9390, 0x4f2e, 0xbace, 0x89d0, 0x1, 0x1);
        gbc.writeMem(0x1abc, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x28ef);
        EXPECT(gbc.pc(), 0x1abe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0217
        gbc.setState(0x980a, 0xb805, 0xcf00, 0x150f, 0x2a16, 0x43a3, 0x1, 0x1);
        gbc.writeMem(0x980a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb805);
        EXPECT(gbc.pc(), 0x980c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x980a), 0xcb);
        EXPECT(gbc.readMem(0x980b), 0x45);
        // CB 45 0218
        gbc.setState(0x2668, 0xbdaf, 0x9e60, 0xb8e, 0xbc16, 0xf0a1, 0x1, 0x1);
        gbc.writeMem(0x2668, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xbdaf);
        EXPECT(gbc.pc(), 0x266a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0219
        gbc.setState(0xc755, 0x174a, 0x5fd0, 0xfe15, 0xdb81, 0x7c47, 0x1, 0x0);
        gbc.writeMem(0xc755, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x174a);
        EXPECT(gbc.pc(), 0xc757);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc755), 0xcb);
        EXPECT(gbc.readMem(0xc756), 0x45);
        // CB 45 021A
        gbc.setState(0xc19e, 0x1141, 0x9780, 0x4f8e, 0xc3d5, 0x35, 0x1, 0x1);
        gbc.writeMem(0xc19e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1141);
        EXPECT(gbc.pc(), 0xc1a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc19e), 0xcb);
        EXPECT(gbc.readMem(0xc19f), 0x45);
        // CB 45 021B
        gbc.setState(0x9a2d, 0xd2b, 0x3440, 0xd839, 0xcd47, 0xa5e2, 0x1, 0x0);
        gbc.writeMem(0x9a2d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd2b);
        EXPECT(gbc.pc(), 0x9a2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a2d), 0xcb);
        EXPECT(gbc.readMem(0x9a2e), 0x45);
        // CB 45 021C
        gbc.setState(0x812a, 0x7853, 0x1230, 0xca95, 0xa0e6, 0x1fc0, 0x1, 0x0);
        gbc.writeMem(0x812a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x7853);
        EXPECT(gbc.pc(), 0x812c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x812a), 0xcb);
        EXPECT(gbc.readMem(0x812b), 0x45);
        // CB 45 021D
        gbc.setState(0x2d58, 0x62cd, 0xe610, 0x6324, 0xea46, 0x47ac, 0x0, 0x1);
        gbc.writeMem(0x2d58, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x62cd);
        EXPECT(gbc.pc(), 0x2d5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 021E
        gbc.setState(0xdf58, 0x813e, 0xe3c0, 0xdf76, 0x22bc, 0xf68b, 0x1, 0x0);
        gbc.writeMem(0xdf58, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x813e);
        EXPECT(gbc.pc(), 0xdf5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf58), 0xcb);
        EXPECT(gbc.readMem(0xdf59), 0x45);
        // CB 45 021F
        gbc.setState(0x996, 0x7360, 0x5d0, 0xeaed, 0x1833, 0xf08f, 0x0, 0x0);
        gbc.writeMem(0x996, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x7360);
        EXPECT(gbc.pc(), 0x998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0220
        gbc.setState(0xa0ab, 0xa765, 0xe4f0, 0x87c6, 0x863c, 0x49c3, 0x0, 0x0);
        gbc.writeMem(0xa0ab, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa765);
        EXPECT(gbc.pc(), 0xa0ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0ab), 0xcb);
        EXPECT(gbc.readMem(0xa0ac), 0x45);
        // CB 45 0221
        gbc.setState(0xbc31, 0xb915, 0xabb0, 0x68d2, 0xbc94, 0xb173, 0x1, 0x0);
        gbc.writeMem(0xbc31, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xb915);
        EXPECT(gbc.pc(), 0xbc33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc31), 0xcb);
        EXPECT(gbc.readMem(0xbc32), 0x45);
        // CB 45 0222
        gbc.setState(0x923f, 0xc870, 0x3520, 0x6ecb, 0xd2f1, 0x86d2, 0x1, 0x0);
        gbc.writeMem(0x923f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc870);
        EXPECT(gbc.pc(), 0x9241);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x923f), 0xcb);
        EXPECT(gbc.readMem(0x9240), 0x45);
        // CB 45 0223
        gbc.setState(0x5441, 0x331, 0xae50, 0xe336, 0xbf73, 0x1e5b, 0x0, 0x0);
        gbc.writeMem(0x5441, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x331);
        EXPECT(gbc.pc(), 0x5443);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0224
        gbc.setState(0xe491, 0xea90, 0x9070, 0xb201, 0xc85a, 0x300, 0x0, 0x0);
        gbc.writeMem(0xe491, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xea90);
        EXPECT(gbc.pc(), 0xe493);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe491), 0xcb);
        EXPECT(gbc.readMem(0xe492), 0x45);
        // CB 45 0225
        gbc.setState(0x62e3, 0x4649, 0xf540, 0x5e01, 0x64ed, 0x1ce8, 0x1, 0x1);
        gbc.writeMem(0x62e3, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4649);
        EXPECT(gbc.pc(), 0x62e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0226
        gbc.setState(0x8be2, 0x949, 0xef60, 0x84f, 0xb352, 0xbf23, 0x1, 0x0);
        gbc.writeMem(0x8be2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x949);
        EXPECT(gbc.pc(), 0x8be4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8be2), 0xcb);
        EXPECT(gbc.readMem(0x8be3), 0x45);
        // CB 45 0227
        gbc.setState(0x42f, 0xa5f3, 0x36d0, 0xc564, 0x9a5c, 0xbc7f, 0x1, 0x0);
        gbc.writeMem(0x42f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa5f3);
        EXPECT(gbc.pc(), 0x431);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0228
        gbc.setState(0x22a9, 0x133a, 0x7960, 0x4835, 0x471c, 0x9ce, 0x0, 0x0);
        gbc.writeMem(0x22a9, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x133a);
        EXPECT(gbc.pc(), 0x22ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 022A
        gbc.setState(0x20a6, 0x5bff, 0xd2e0, 0x8815, 0x7d08, 0x3a37, 0x0, 0x0);
        gbc.writeMem(0x20a6, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5bff);
        EXPECT(gbc.pc(), 0x20a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 022C
        gbc.setState(0x4774, 0x38ee, 0x69d0, 0xc6bb, 0xe52c, 0x67ab, 0x0, 0x0);
        gbc.writeMem(0x4774, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x38ee);
        EXPECT(gbc.pc(), 0x4776);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 022D
        gbc.setState(0x424b, 0x3c4a, 0xd40, 0xf795, 0x8e2d, 0x78da, 0x1, 0x0);
        gbc.writeMem(0x424b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x3c4a);
        EXPECT(gbc.pc(), 0x424d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 022F
        gbc.setState(0xc840, 0xb0ac, 0x4270, 0xe0fe, 0xcbee, 0x6f77, 0x0, 0x1);
        gbc.writeMem(0xc840, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb0ac);
        EXPECT(gbc.pc(), 0xc842);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc840), 0xcb);
        EXPECT(gbc.readMem(0xc841), 0x45);
        // CB 45 0230
        gbc.setState(0x484a, 0x6751, 0xa60, 0x8049, 0xc7d2, 0x8c9d, 0x1, 0x0);
        gbc.writeMem(0x484a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x6751);
        EXPECT(gbc.pc(), 0x484c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0231
        gbc.setState(0xedf8, 0x29f8, 0x2af0, 0x3a70, 0x2ba5, 0xda16, 0x0, 0x0);
        gbc.writeMem(0xedf8, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x29f8);
        EXPECT(gbc.pc(), 0xedfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedf8), 0xcb);
        EXPECT(gbc.readMem(0xedf9), 0x45);
        // CB 45 0232
        gbc.setState(0xcf16, 0xd260, 0x68b0, 0xddb2, 0x809, 0x786d, 0x1, 0x1);
        gbc.writeMem(0xcf16, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xd260);
        EXPECT(gbc.pc(), 0xcf18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf16), 0xcb);
        EXPECT(gbc.readMem(0xcf17), 0x45);
        // CB 45 0233
        gbc.setState(0xc7c6, 0xf355, 0x3110, 0xa4a7, 0xa0c5, 0x92a7, 0x1, 0x1);
        gbc.writeMem(0xc7c6, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf355);
        EXPECT(gbc.pc(), 0xc7c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7c6), 0xcb);
        EXPECT(gbc.readMem(0xc7c7), 0x45);
        // CB 45 0234
        gbc.setState(0x703b, 0xcf63, 0x27b0, 0x8202, 0x8bda, 0xd4, 0x0, 0x1);
        gbc.writeMem(0x703b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xcf63);
        EXPECT(gbc.pc(), 0x703d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0235
        gbc.setState(0x1ca4, 0x3880, 0x1a40, 0xa7ad, 0x9531, 0xf358, 0x1, 0x1);
        gbc.writeMem(0x1ca4, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3880);
        EXPECT(gbc.pc(), 0x1ca6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0236
        gbc.setState(0x880d, 0x5cae, 0xba50, 0xf1d1, 0x3e64, 0x354a, 0x0, 0x1);
        gbc.writeMem(0x880d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5cae);
        EXPECT(gbc.pc(), 0x880f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x880d), 0xcb);
        EXPECT(gbc.readMem(0x880e), 0x45);
        // CB 45 0237
        gbc.setState(0xbb26, 0xeef3, 0xb4a0, 0x4c7, 0xc799, 0xa36, 0x1, 0x0);
        gbc.writeMem(0xbb26, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xeef3);
        EXPECT(gbc.pc(), 0xbb28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb26), 0xcb);
        EXPECT(gbc.readMem(0xbb27), 0x45);
        // CB 45 0238
        gbc.setState(0x43a, 0xe50c, 0xe720, 0x51d0, 0x27a2, 0x28b2, 0x1, 0x1);
        gbc.writeMem(0x43a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe50c);
        EXPECT(gbc.pc(), 0x43c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0239
        gbc.setState(0x7bfb, 0xc5fd, 0x2870, 0xc114, 0xaf1b, 0x74d9, 0x1, 0x0);
        gbc.writeMem(0x7bfb, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc5fd);
        EXPECT(gbc.pc(), 0x7bfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 023A
        gbc.setState(0x6ccc, 0xe158, 0x3410, 0x1db8, 0x1502, 0x97b8, 0x1, 0x0);
        gbc.writeMem(0x6ccc, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xe158);
        EXPECT(gbc.pc(), 0x6cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 023B
        gbc.setState(0x3448, 0x5435, 0xca40, 0xd5c3, 0xbcde, 0xe5b7, 0x1, 0x1);
        gbc.writeMem(0x3448, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5435);
        EXPECT(gbc.pc(), 0x344a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 023C
        gbc.setState(0x32db, 0x8122, 0xbce0, 0x27a9, 0x2aa3, 0x5227, 0x0, 0x1);
        gbc.writeMem(0x32db, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8122);
        EXPECT(gbc.pc(), 0x32dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 023D
        gbc.setState(0x252b, 0x557e, 0x63a0, 0xfd3e, 0xdb6f, 0x94e8, 0x1, 0x1);
        gbc.writeMem(0x252b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x557e);
        EXPECT(gbc.pc(), 0x252d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 023F
        gbc.setState(0x46b4, 0x4b8e, 0xae20, 0x4a69, 0x6427, 0x522e, 0x0, 0x0);
        gbc.writeMem(0x46b4, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4b8e);
        EXPECT(gbc.pc(), 0x46b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0240
        gbc.setState(0x50f9, 0xb45e, 0x68f0, 0x100d, 0x47cc, 0x8f72, 0x0, 0x1);
        gbc.writeMem(0x50f9, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb45e);
        EXPECT(gbc.pc(), 0x50fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0241
        gbc.setState(0x6f4e, 0x1541, 0x43d0, 0x9ff8, 0x321e, 0x158d, 0x0, 0x1);
        gbc.writeMem(0x6f4e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1541);
        EXPECT(gbc.pc(), 0x6f50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0242
        gbc.setState(0x417a, 0x5557, 0xdd10, 0x41cd, 0x1db7, 0x2ae7, 0x0, 0x1);
        gbc.writeMem(0x417a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5557);
        EXPECT(gbc.pc(), 0x417c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0243
        gbc.setState(0x428a, 0x7b97, 0x1840, 0x3809, 0x9c25, 0x23f3, 0x0, 0x0);
        gbc.writeMem(0x428a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7b97);
        EXPECT(gbc.pc(), 0x428c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0244
        gbc.setState(0x6662, 0xe1eb, 0x8920, 0x215a, 0xca4e, 0xc95a, 0x0, 0x1);
        gbc.writeMem(0x6662, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe1eb);
        EXPECT(gbc.pc(), 0x6664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0245
        gbc.setState(0x5810, 0x62fd, 0xfb0, 0x1896, 0x1787, 0x2dc8, 0x0, 0x1);
        gbc.writeMem(0x5810, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x62fd);
        EXPECT(gbc.pc(), 0x5812);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0246
        gbc.setState(0xb08a, 0xfaac, 0x5300, 0x4b61, 0x1d53, 0xb92, 0x0, 0x0);
        gbc.writeMem(0xb08a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xfaac);
        EXPECT(gbc.pc(), 0xb08c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb08a), 0xcb);
        EXPECT(gbc.readMem(0xb08b), 0x45);
        // CB 45 0247
        gbc.setState(0x5ec2, 0x8877, 0xd370, 0x171, 0x4df5, 0xea63, 0x0, 0x0);
        gbc.writeMem(0x5ec2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8877);
        EXPECT(gbc.pc(), 0x5ec4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0248
        gbc.setState(0x6a74, 0x6974, 0x21f0, 0xa786, 0x8895, 0x1d23, 0x0, 0x1);
        gbc.writeMem(0x6a74, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6974);
        EXPECT(gbc.pc(), 0x6a76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0249
        gbc.setState(0x7b24, 0xf23f, 0x5a70, 0xf773, 0xc192, 0x1d3d, 0x1, 0x1);
        gbc.writeMem(0x7b24, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf23f);
        EXPECT(gbc.pc(), 0x7b26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 024A
        gbc.setState(0x7b7, 0x9eb5, 0xdf30, 0x8300, 0x93f9, 0xfdc3, 0x1, 0x0);
        gbc.writeMem(0x7b7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x9eb5);
        EXPECT(gbc.pc(), 0x7b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 024B
        gbc.setState(0xb76a, 0x14e3, 0xcdf0, 0xaeab, 0x55d9, 0x6c9e, 0x0, 0x0);
        gbc.writeMem(0xb76a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x14e3);
        EXPECT(gbc.pc(), 0xb76c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb76a), 0xcb);
        EXPECT(gbc.readMem(0xb76b), 0x45);
        // CB 45 024C
        gbc.setState(0x5d51, 0xbe47, 0x9dc0, 0x827d, 0xb0cf, 0xd75d, 0x0, 0x0);
        gbc.writeMem(0x5d51, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xbe47);
        EXPECT(gbc.pc(), 0x5d53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 024D
        gbc.setState(0x489d, 0x15cd, 0x1a0, 0x8804, 0xc4c8, 0xe37a, 0x1, 0x1);
        gbc.writeMem(0x489d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x15cd);
        EXPECT(gbc.pc(), 0x489f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 024E
        gbc.setState(0x683e, 0x3a1c, 0xb0f0, 0xc2a, 0x6265, 0x6884, 0x0, 0x0);
        gbc.writeMem(0x683e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3a1c);
        EXPECT(gbc.pc(), 0x6840);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 024F
        gbc.setState(0xc114, 0x8e5a, 0xafe0, 0x15c7, 0x436a, 0x95c, 0x1, 0x1);
        gbc.writeMem(0xc114, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x8e5a);
        EXPECT(gbc.pc(), 0xc116);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc114), 0xcb);
        EXPECT(gbc.readMem(0xc115), 0x45);
        // CB 45 0250
        gbc.setState(0x5962, 0xf2e6, 0x6540, 0xb99b, 0xc476, 0x3d0d, 0x1, 0x0);
        gbc.writeMem(0x5962, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf2e6);
        EXPECT(gbc.pc(), 0x5964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0252
        gbc.setState(0x852c, 0x65e8, 0xc670, 0x9da6, 0x8615, 0xe00c, 0x1, 0x1);
        gbc.writeMem(0x852c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x65e8);
        EXPECT(gbc.pc(), 0x852e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x852c), 0xcb);
        EXPECT(gbc.readMem(0x852d), 0x45);
        // CB 45 0253
        gbc.setState(0x7f4e, 0xc56a, 0xc230, 0xfd5d, 0xf689, 0x4b9b, 0x1, 0x1);
        gbc.writeMem(0x7f4e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc56a);
        EXPECT(gbc.pc(), 0x7f50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0254
        gbc.setState(0x6fad, 0xd39d, 0xea20, 0xb95b, 0x67f8, 0x38ee, 0x1, 0x0);
        gbc.writeMem(0x6fad, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd39d);
        EXPECT(gbc.pc(), 0x6faf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0255
        gbc.setState(0x5e02, 0x74ef, 0x5960, 0x716b, 0xbd88, 0x78c4, 0x0, 0x0);
        gbc.writeMem(0x5e02, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x74ef);
        EXPECT(gbc.pc(), 0x5e04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0257
        gbc.setState(0x229b, 0x3627, 0x3aa0, 0x1136, 0xac22, 0x37bb, 0x0, 0x0);
        gbc.writeMem(0x229b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3627);
        EXPECT(gbc.pc(), 0x229d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0258
        gbc.setState(0x368, 0x17bf, 0x3290, 0x9914, 0xfaff, 0x1ea4, 0x1, 0x0);
        gbc.writeMem(0x368, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x17bf);
        EXPECT(gbc.pc(), 0x36a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 025A
        gbc.setState(0x7fd5, 0xa12a, 0x3350, 0xcc4c, 0x2772, 0x762c, 0x1, 0x1);
        gbc.writeMem(0x7fd5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa12a);
        EXPECT(gbc.pc(), 0x7fd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 025B
        gbc.setState(0x2997, 0x7208, 0xeca0, 0x45b5, 0x3abc, 0xb757, 0x0, 0x0);
        gbc.writeMem(0x2997, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7208);
        EXPECT(gbc.pc(), 0x2999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 025C
        gbc.setState(0xe189, 0x8cee, 0xe120, 0x42b9, 0x30ca, 0xd44, 0x1, 0x0);
        gbc.writeMem(0xe189, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x8cee);
        EXPECT(gbc.pc(), 0xe18b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe189), 0xcb);
        EXPECT(gbc.readMem(0xe18a), 0x45);
        // CB 45 025D
        gbc.setState(0x7b47, 0x2ebe, 0x5790, 0x38e7, 0x67f6, 0xa66d, 0x0, 0x0);
        gbc.writeMem(0x7b47, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2ebe);
        EXPECT(gbc.pc(), 0x7b49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 025E
        gbc.setState(0xbd86, 0x79bb, 0xe200, 0x4969, 0x2edb, 0x7922, 0x0, 0x0);
        gbc.writeMem(0xbd86, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x79bb);
        EXPECT(gbc.pc(), 0xbd88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd86), 0xcb);
        EXPECT(gbc.readMem(0xbd87), 0x45);
        // CB 45 025F
        gbc.setState(0xaeed, 0x1339, 0x6560, 0xafd9, 0xe793, 0x869f, 0x1, 0x0);
        gbc.writeMem(0xaeed, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x1339);
        EXPECT(gbc.pc(), 0xaeef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeed), 0xcb);
        EXPECT(gbc.readMem(0xaeee), 0x45);
        // CB 45 0260
        gbc.setState(0xc18b, 0xaa22, 0xef70, 0x1b1d, 0x6b86, 0x38c0, 0x0, 0x0);
        gbc.writeMem(0xc18b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xaa22);
        EXPECT(gbc.pc(), 0xc18d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc18b), 0xcb);
        EXPECT(gbc.readMem(0xc18c), 0x45);
        // CB 45 0261
        gbc.setState(0x9315, 0x4f39, 0x3d10, 0xfdd0, 0xbe69, 0x787b, 0x0, 0x1);
        gbc.writeMem(0x9315, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x4f39);
        EXPECT(gbc.pc(), 0x9317);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9315), 0xcb);
        EXPECT(gbc.readMem(0x9316), 0x45);
        // CB 45 0262
        gbc.setState(0x4dd, 0x2872, 0x5980, 0x73dc, 0x716d, 0xa348, 0x1, 0x1);
        gbc.writeMem(0x4dd, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2872);
        EXPECT(gbc.pc(), 0x4df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0263
        gbc.setState(0x3468, 0x8e1c, 0xe010, 0xe153, 0x495f, 0x52c5, 0x1, 0x1);
        gbc.writeMem(0x3468, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8e1c);
        EXPECT(gbc.pc(), 0x346a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0264
        gbc.setState(0x6e67, 0xca18, 0xd910, 0x5a5e, 0xf08d, 0x706a, 0x0, 0x1);
        gbc.writeMem(0x6e67, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xca18);
        EXPECT(gbc.pc(), 0x6e69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0265
        gbc.setState(0x65fd, 0x9472, 0xd2e0, 0xa8e3, 0xbd60, 0xc7c6, 0x0, 0x0);
        gbc.writeMem(0x65fd, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9472);
        EXPECT(gbc.pc(), 0x65ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0266
        gbc.setState(0xead3, 0x8996, 0x44d0, 0x3181, 0x5449, 0xc437, 0x1, 0x1);
        gbc.writeMem(0xead3, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x8996);
        EXPECT(gbc.pc(), 0xead5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xead3), 0xcb);
        EXPECT(gbc.readMem(0xead4), 0x45);
        // CB 45 0267
        gbc.setState(0x5054, 0x2db9, 0x2fe0, 0x8b4f, 0x59b5, 0x681a, 0x0, 0x1);
        gbc.writeMem(0x5054, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x2db9);
        EXPECT(gbc.pc(), 0x5056);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0268
        gbc.setState(0x994d, 0xf95b, 0x8300, 0x9d2f, 0x43a5, 0xff1b, 0x1, 0x0);
        gbc.writeMem(0x994d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf95b);
        EXPECT(gbc.pc(), 0x994f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x994d), 0xcb);
        EXPECT(gbc.readMem(0x994e), 0x45);
        // CB 45 026A
        gbc.setState(0x9c, 0xf10e, 0x3710, 0xe936, 0x6d9b, 0x92e5, 0x0, 0x1);
        gbc.writeMem(0x9c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf10e);
        EXPECT(gbc.pc(), 0x9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 026B
        gbc.setState(0xdbcc, 0x2f12, 0xf3c0, 0xbe80, 0x8766, 0xb0a4, 0x1, 0x0);
        gbc.writeMem(0xdbcc, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x2f12);
        EXPECT(gbc.pc(), 0xdbce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbcc), 0xcb);
        EXPECT(gbc.readMem(0xdbcd), 0x45);
        // CB 45 026C
        gbc.setState(0xdf25, 0x67b7, 0x4930, 0xd2b8, 0x1dc2, 0xe766, 0x0, 0x0);
        gbc.writeMem(0xdf25, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x67b7);
        EXPECT(gbc.pc(), 0xdf27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf25), 0xcb);
        EXPECT(gbc.readMem(0xdf26), 0x45);
        // CB 45 026D
        gbc.setState(0x9bed, 0x8c40, 0xc640, 0x7372, 0xd96e, 0x9d65, 0x1, 0x1);
        gbc.writeMem(0x9bed, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x8c40);
        EXPECT(gbc.pc(), 0x9bef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bed), 0xcb);
        EXPECT(gbc.readMem(0x9bee), 0x45);
        // CB 45 026E
        gbc.setState(0xbfae, 0xfa26, 0x5360, 0x4d22, 0xe54b, 0x63d3, 0x1, 0x1);
        gbc.writeMem(0xbfae, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xfa26);
        EXPECT(gbc.pc(), 0xbfb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfae), 0xcb);
        EXPECT(gbc.readMem(0xbfaf), 0x45);
        // CB 45 026F
        gbc.setState(0x4f74, 0x87aa, 0xb060, 0xd0fb, 0x83fc, 0xbf47, 0x0, 0x1);
        gbc.writeMem(0x4f74, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x87aa);
        EXPECT(gbc.pc(), 0x4f76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0270
        gbc.setState(0x9204, 0x18e8, 0x1170, 0x9259, 0xaa8c, 0xa79c, 0x0, 0x1);
        gbc.writeMem(0x9204, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x18e8);
        EXPECT(gbc.pc(), 0x9206);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9204), 0xcb);
        EXPECT(gbc.readMem(0x9205), 0x45);
        // CB 45 0271
        gbc.setState(0x21b8, 0x4b81, 0x1f00, 0x59de, 0x2040, 0xa0e5, 0x0, 0x1);
        gbc.writeMem(0x21b8, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4b81);
        EXPECT(gbc.pc(), 0x21ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0272
        gbc.setState(0x7fbe, 0x26f, 0xf7c0, 0xf1cb, 0xe440, 0x2d8e, 0x1, 0x1);
        gbc.writeMem(0x7fbe, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x26f);
        EXPECT(gbc.pc(), 0x7fc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0273
        gbc.setState(0xe89a, 0x590d, 0x9d70, 0x78d3, 0xc8, 0x26dd, 0x1, 0x1);
        gbc.writeMem(0xe89a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x590d);
        EXPECT(gbc.pc(), 0xe89c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe89a), 0xcb);
        EXPECT(gbc.readMem(0xe89b), 0x45);
        // CB 45 0274
        gbc.setState(0x6aa4, 0xd23, 0xb330, 0xffb8, 0xdb04, 0x5edc, 0x0, 0x0);
        gbc.writeMem(0x6aa4, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xd23);
        EXPECT(gbc.pc(), 0x6aa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0276
        gbc.setState(0x49c4, 0xea40, 0x7e00, 0xc5f3, 0x5d33, 0xab0d, 0x0, 0x0);
        gbc.writeMem(0x49c4, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xea40);
        EXPECT(gbc.pc(), 0x49c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0277
        gbc.setState(0xba3b, 0xbc5a, 0x2910, 0xddd2, 0xb473, 0x49b8, 0x1, 0x1);
        gbc.writeMem(0xba3b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xbc5a);
        EXPECT(gbc.pc(), 0xba3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba3b), 0xcb);
        EXPECT(gbc.readMem(0xba3c), 0x45);
        // CB 45 0278
        gbc.setState(0x5801, 0x4de7, 0x8db0, 0x87c4, 0x2593, 0x9a3e, 0x1, 0x1);
        gbc.writeMem(0x5801, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4de7);
        EXPECT(gbc.pc(), 0x5803);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0279
        gbc.setState(0x4098, 0x651b, 0x7950, 0x474d, 0xe26e, 0x2941, 0x0, 0x0);
        gbc.writeMem(0x4098, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x651b);
        EXPECT(gbc.pc(), 0x409a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 027A
        gbc.setState(0xed3d, 0xc6b7, 0x3250, 0x5619, 0x5f4d, 0x4db3, 0x1, 0x0);
        gbc.writeMem(0xed3d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xc6b7);
        EXPECT(gbc.pc(), 0xed3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed3d), 0xcb);
        EXPECT(gbc.readMem(0xed3e), 0x45);
        // CB 45 027B
        gbc.setState(0xa81e, 0x97ae, 0x8990, 0xeb05, 0xac73, 0xd7ed, 0x1, 0x1);
        gbc.writeMem(0xa81e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x97ae);
        EXPECT(gbc.pc(), 0xa820);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa81e), 0xcb);
        EXPECT(gbc.readMem(0xa81f), 0x45);
        // CB 45 027C
        gbc.setState(0xa96c, 0x871b, 0xfa60, 0x16c6, 0xbd4d, 0x297c, 0x1, 0x1);
        gbc.writeMem(0xa96c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x871b);
        EXPECT(gbc.pc(), 0xa96e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa96c), 0xcb);
        EXPECT(gbc.readMem(0xa96d), 0x45);
        // CB 45 027D
        gbc.setState(0x6a96, 0xdce2, 0xa9f0, 0x4670, 0xa4ae, 0x258b, 0x0, 0x0);
        gbc.writeMem(0x6a96, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xdce2);
        EXPECT(gbc.pc(), 0x6a98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 027E
        gbc.setState(0x1af8, 0x601b, 0x4980, 0x1527, 0xf2bc, 0xf9e3, 0x0, 0x0);
        gbc.writeMem(0x1af8, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x601b);
        EXPECT(gbc.pc(), 0x1afa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 027F
        gbc.setState(0x9300, 0x613d, 0x4ac0, 0xc46e, 0xa305, 0x37b6, 0x1, 0x0);
        gbc.writeMem(0x9300, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x613d);
        EXPECT(gbc.pc(), 0x9302);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9300), 0xcb);
        EXPECT(gbc.readMem(0x9301), 0x45);
        // CB 45 0280
        gbc.setState(0x6027, 0x150, 0x5a90, 0x8394, 0x27ad, 0xb1a3, 0x0, 0x1);
        gbc.writeMem(0x6027, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x150);
        EXPECT(gbc.pc(), 0x6029);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0282
        gbc.setState(0x3ccc, 0x635a, 0xc480, 0xa11a, 0x64f5, 0x97ae, 0x1, 0x1);
        gbc.writeMem(0x3ccc, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x635a);
        EXPECT(gbc.pc(), 0x3cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0283
        gbc.setState(0x3c4b, 0xdb18, 0xacb0, 0x75a2, 0xb006, 0x4dff, 0x0, 0x0);
        gbc.writeMem(0x3c4b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xdb18);
        EXPECT(gbc.pc(), 0x3c4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0284
        gbc.setState(0xd2b7, 0x4f03, 0x1e30, 0x569d, 0x206a, 0x522d, 0x0, 0x0);
        gbc.writeMem(0xd2b7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4f03);
        EXPECT(gbc.pc(), 0xd2b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2b7), 0xcb);
        EXPECT(gbc.readMem(0xd2b8), 0x45);
        // CB 45 0285
        gbc.setState(0xdd12, 0x1735, 0xbd00, 0x6478, 0x128b, 0xce73, 0x1, 0x0);
        gbc.writeMem(0xdd12, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x1735);
        EXPECT(gbc.pc(), 0xdd14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd12), 0xcb);
        EXPECT(gbc.readMem(0xdd13), 0x45);
        // CB 45 0286
        gbc.setState(0xb8ad, 0x2da6, 0x6940, 0x19ae, 0x4886, 0xfa35, 0x1, 0x0);
        gbc.writeMem(0xb8ad, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2da6);
        EXPECT(gbc.pc(), 0xb8af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8ad), 0xcb);
        EXPECT(gbc.readMem(0xb8ae), 0x45);
        // CB 45 0287
        gbc.setState(0x439, 0x2e47, 0x8260, 0x13a7, 0xe423, 0xc90a, 0x0, 0x1);
        gbc.writeMem(0x439, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x2e47);
        EXPECT(gbc.pc(), 0x43b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0288
        gbc.setState(0xaf83, 0xba31, 0x49d0, 0x623, 0x91e2, 0x990e, 0x0, 0x1);
        gbc.writeMem(0xaf83, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xba31);
        EXPECT(gbc.pc(), 0xaf85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf83), 0xcb);
        EXPECT(gbc.readMem(0xaf84), 0x45);
        // CB 45 0289
        gbc.setState(0xe294, 0x802d, 0x46d0, 0x562a, 0x2ee4, 0xec14, 0x0, 0x0);
        gbc.writeMem(0xe294, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x802d);
        EXPECT(gbc.pc(), 0xe296);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe294), 0xcb);
        EXPECT(gbc.readMem(0xe295), 0x45);
        // CB 45 028A
        gbc.setState(0xb680, 0x9a0e, 0x9e10, 0x3ae, 0xdf8d, 0xbdbd, 0x1, 0x0);
        gbc.writeMem(0xb680, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9a0e);
        EXPECT(gbc.pc(), 0xb682);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb680), 0xcb);
        EXPECT(gbc.readMem(0xb681), 0x45);
        // CB 45 028C
        gbc.setState(0x9504, 0x8b8c, 0x9860, 0xffa3, 0x4e13, 0x81e3, 0x0, 0x1);
        gbc.writeMem(0x9504, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8b8c);
        EXPECT(gbc.pc(), 0x9506);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9504), 0xcb);
        EXPECT(gbc.readMem(0x9505), 0x45);
        // CB 45 028D
        gbc.setState(0x5fdc, 0x69a2, 0xbd00, 0xe4fd, 0x66f7, 0x994b, 0x0, 0x1);
        gbc.writeMem(0x5fdc, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x69a2);
        EXPECT(gbc.pc(), 0x5fde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 028E
        gbc.setState(0x5aa1, 0x2a1b, 0xffc0, 0xadaf, 0x252, 0xf487, 0x0, 0x1);
        gbc.writeMem(0x5aa1, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2a1b);
        EXPECT(gbc.pc(), 0x5aa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 028F
        gbc.setState(0x2c3f, 0xc876, 0xb6a0, 0x89df, 0xf288, 0x5fef, 0x0, 0x1);
        gbc.writeMem(0x2c3f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc876);
        EXPECT(gbc.pc(), 0x2c41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0290
        gbc.setState(0x8daf, 0xbbd5, 0xcb0, 0xfce, 0x73d8, 0xbd3f, 0x0, 0x1);
        gbc.writeMem(0x8daf, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xbbd5);
        EXPECT(gbc.pc(), 0x8db1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8daf), 0xcb);
        EXPECT(gbc.readMem(0x8db0), 0x45);
        // CB 45 0291
        gbc.setState(0xde32, 0xec59, 0x3fc0, 0x4d6, 0x5559, 0xae1, 0x0, 0x0);
        gbc.writeMem(0xde32, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xec59);
        EXPECT(gbc.pc(), 0xde34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde32), 0xcb);
        EXPECT(gbc.readMem(0xde33), 0x45);
        // CB 45 0292
        gbc.setState(0x1bed, 0x5d43, 0x5800, 0xbb75, 0x528a, 0xe80b, 0x0, 0x1);
        gbc.writeMem(0x1bed, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x5d43);
        EXPECT(gbc.pc(), 0x1bef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0293
        gbc.setState(0x468c, 0xe24b, 0x7a10, 0x91a6, 0xe6a9, 0xcdb7, 0x1, 0x0);
        gbc.writeMem(0x468c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xe24b);
        EXPECT(gbc.pc(), 0x468e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0294
        gbc.setState(0x3593, 0x4c3e, 0xbb20, 0x7b1b, 0x4b36, 0x2c1, 0x0, 0x1);
        gbc.writeMem(0x3593, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4c3e);
        EXPECT(gbc.pc(), 0x3595);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0295
        gbc.setState(0xb21e, 0xe603, 0x2540, 0xe17b, 0x4ccf, 0x2262, 0x0, 0x0);
        gbc.writeMem(0xb21e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe603);
        EXPECT(gbc.pc(), 0xb220);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb21e), 0xcb);
        EXPECT(gbc.readMem(0xb21f), 0x45);
        // CB 45 0296
        gbc.setState(0xb1cf, 0x541c, 0x1aa0, 0x8388, 0xfd19, 0xd412, 0x1, 0x1);
        gbc.writeMem(0xb1cf, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x541c);
        EXPECT(gbc.pc(), 0xb1d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1cf), 0xcb);
        EXPECT(gbc.readMem(0xb1d0), 0x45);
        // CB 45 0297
        gbc.setState(0x1223, 0xc26d, 0x2820, 0x9c46, 0x9a7b, 0x7ffa, 0x0, 0x0);
        gbc.writeMem(0x1223, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc26d);
        EXPECT(gbc.pc(), 0x1225);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0298
        gbc.setState(0x86f2, 0xda7f, 0x8e80, 0x158d, 0xb534, 0xe682, 0x0, 0x0);
        gbc.writeMem(0x86f2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xda7f);
        EXPECT(gbc.pc(), 0x86f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86f2), 0xcb);
        EXPECT(gbc.readMem(0x86f3), 0x45);
        // CB 45 0299
        gbc.setState(0x66ef, 0xd18, 0x8700, 0xdf16, 0x2ea0, 0xd506, 0x1, 0x0);
        gbc.writeMem(0x66ef, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd18);
        EXPECT(gbc.pc(), 0x66f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 029A
        gbc.setState(0xe4f, 0x97e2, 0x6250, 0x262c, 0xf4bb, 0x7a69, 0x0, 0x1);
        gbc.writeMem(0xe4f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x97e2);
        EXPECT(gbc.pc(), 0xe51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 029B
        gbc.setState(0x2a56, 0x47b7, 0x4420, 0x3f15, 0x863a, 0xc7bb, 0x1, 0x1);
        gbc.writeMem(0x2a56, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x47b7);
        EXPECT(gbc.pc(), 0x2a58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 029C
        gbc.setState(0xbd73, 0xbd3a, 0xf960, 0xffb5, 0xdfcd, 0x2df1, 0x0, 0x1);
        gbc.writeMem(0xbd73, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xbd3a);
        EXPECT(gbc.pc(), 0xbd75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd73), 0xcb);
        EXPECT(gbc.readMem(0xbd74), 0x45);
        // CB 45 029D
        gbc.setState(0x9355, 0xcc0a, 0x8b80, 0xda1f, 0xd422, 0xe79, 0x0, 0x1);
        gbc.writeMem(0x9355, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xcc0a);
        EXPECT(gbc.pc(), 0x9357);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9355), 0xcb);
        EXPECT(gbc.readMem(0x9356), 0x45);
        // CB 45 029E
        gbc.setState(0xe6b0, 0x5ffa, 0x3cf0, 0xcb2e, 0x45c, 0x794c, 0x1, 0x1);
        gbc.writeMem(0xe6b0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x5ffa);
        EXPECT(gbc.pc(), 0xe6b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6b0), 0xcb);
        EXPECT(gbc.readMem(0xe6b1), 0x45);
        // CB 45 029F
        gbc.setState(0x1537, 0x8365, 0x4cd0, 0xa241, 0x13b9, 0x64da, 0x0, 0x1);
        gbc.writeMem(0x1537, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8365);
        EXPECT(gbc.pc(), 0x1539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02A0
        gbc.setState(0x44d7, 0x7d27, 0x8530, 0x7106, 0x2e92, 0x6858, 0x1, 0x0);
        gbc.writeMem(0x44d7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x7d27);
        EXPECT(gbc.pc(), 0x44d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02A1
        gbc.setState(0x88fc, 0xdd2f, 0x2a10, 0x9d3c, 0xfe27, 0x19c4, 0x0, 0x1);
        gbc.writeMem(0x88fc, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xdd2f);
        EXPECT(gbc.pc(), 0x88fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88fc), 0xcb);
        EXPECT(gbc.readMem(0x88fd), 0x45);
        // CB 45 02A2
        gbc.setState(0x64e2, 0xac31, 0x3710, 0xf5b0, 0x63ba, 0x21b6, 0x1, 0x0);
        gbc.writeMem(0x64e2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xac31);
        EXPECT(gbc.pc(), 0x64e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02A3
        gbc.setState(0x4290, 0x625e, 0xa490, 0xdcd4, 0x1373, 0xc74a, 0x0, 0x0);
        gbc.writeMem(0x4290, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x625e);
        EXPECT(gbc.pc(), 0x4292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02A4
        gbc.setState(0x6a5a, 0x8191, 0x7eb0, 0xdb8, 0x2e0a, 0x7c20, 0x0, 0x1);
        gbc.writeMem(0x6a5a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8191);
        EXPECT(gbc.pc(), 0x6a5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02A5
        gbc.setState(0x69fd, 0x9a94, 0xa2e0, 0x757, 0xb704, 0xd22e, 0x1, 0x0);
        gbc.writeMem(0x69fd, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x9a94);
        EXPECT(gbc.pc(), 0x69ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02A6
        gbc.setState(0x5824, 0x7652, 0x8d70, 0x282d, 0x5266, 0x672e, 0x1, 0x0);
        gbc.writeMem(0x5824, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7652);
        EXPECT(gbc.pc(), 0x5826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02A7
        gbc.setState(0xd62c, 0xc14b, 0x1460, 0x91bd, 0x53ce, 0x2e07, 0x1, 0x0);
        gbc.writeMem(0xd62c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc14b);
        EXPECT(gbc.pc(), 0xd62e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd62c), 0xcb);
        EXPECT(gbc.readMem(0xd62d), 0x45);
        // CB 45 02A8
        gbc.setState(0xabff, 0x40ab, 0x6190, 0x1a96, 0xd67e, 0x9801, 0x1, 0x0);
        gbc.writeMem(0xabff, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x40ab);
        EXPECT(gbc.pc(), 0xac01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabff), 0xcb);
        EXPECT(gbc.readMem(0xac00), 0x45);
        // CB 45 02A9
        gbc.setState(0x6e4f, 0xd466, 0x60f0, 0xad20, 0xfe13, 0xc1ff, 0x1, 0x1);
        gbc.writeMem(0x6e4f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd466);
        EXPECT(gbc.pc(), 0x6e51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02AA
        gbc.setState(0x49b3, 0x7fd9, 0x68d0, 0x4cea, 0xb66e, 0xe792, 0x0, 0x0);
        gbc.writeMem(0x49b3, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x7fd9);
        EXPECT(gbc.pc(), 0x49b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02AB
        gbc.setState(0xa3e4, 0x32d2, 0x15d0, 0xf49c, 0x640, 0xa41e, 0x0, 0x0);
        gbc.writeMem(0xa3e4, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x32d2);
        EXPECT(gbc.pc(), 0xa3e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3e4), 0xcb);
        EXPECT(gbc.readMem(0xa3e5), 0x45);
        // CB 45 02AC
        gbc.setState(0xc8a2, 0xd2b6, 0xf910, 0xecc, 0xfcfe, 0x3421, 0x0, 0x1);
        gbc.writeMem(0xc8a2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd2b6);
        EXPECT(gbc.pc(), 0xc8a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8a2), 0xcb);
        EXPECT(gbc.readMem(0xc8a3), 0x45);
        // CB 45 02AD
        gbc.setState(0x7f13, 0xe281, 0x5ac0, 0x7539, 0xfd8c, 0xf9d, 0x1, 0x1);
        gbc.writeMem(0x7f13, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xe281);
        EXPECT(gbc.pc(), 0x7f15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02AE
        gbc.setState(0x2c3d, 0x311e, 0x6b20, 0xbc42, 0x8d70, 0x3a30, 0x1, 0x1);
        gbc.writeMem(0x2c3d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x311e);
        EXPECT(gbc.pc(), 0x2c3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02AF
        gbc.setState(0xe08b, 0xe2e4, 0x6c50, 0xa67a, 0x325a, 0x35a4, 0x1, 0x0);
        gbc.writeMem(0xe08b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe2e4);
        EXPECT(gbc.pc(), 0xe08d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe08b), 0xcb);
        EXPECT(gbc.readMem(0xe08c), 0x45);
        // CB 45 02B0
        gbc.setState(0x2c51, 0x54f1, 0xa420, 0x58d3, 0xd7bb, 0x9937, 0x0, 0x1);
        gbc.writeMem(0x2c51, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x54f1);
        EXPECT(gbc.pc(), 0x2c53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02B2
        gbc.setState(0x9e56, 0x3d40, 0x1820, 0x5ea3, 0xbe42, 0x54e3, 0x1, 0x0);
        gbc.writeMem(0x9e56, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x3d40);
        EXPECT(gbc.pc(), 0x9e58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e56), 0xcb);
        EXPECT(gbc.readMem(0x9e57), 0x45);
        // CB 45 02B3
        gbc.setState(0x36c6, 0x12c8, 0x1480, 0xbfd7, 0x6e9e, 0xeef7, 0x1, 0x1);
        gbc.writeMem(0x36c6, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x12c8);
        EXPECT(gbc.pc(), 0x36c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02B4
        gbc.setState(0x5f9, 0x18f6, 0x2850, 0x3b6c, 0x27b0, 0xddf0, 0x1, 0x0);
        gbc.writeMem(0x5f9, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x18f6);
        EXPECT(gbc.pc(), 0x5fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02B5
        gbc.setState(0xb718, 0xb815, 0xb2d0, 0x32c9, 0x2727, 0x2781, 0x1, 0x0);
        gbc.writeMem(0xb718, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xb815);
        EXPECT(gbc.pc(), 0xb71a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb718), 0xcb);
        EXPECT(gbc.readMem(0xb719), 0x45);
        // CB 45 02B6
        gbc.setState(0x2c7e, 0x5e3c, 0x9db0, 0x6e8, 0x81f1, 0x287c, 0x0, 0x0);
        gbc.writeMem(0x2c7e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5e3c);
        EXPECT(gbc.pc(), 0x2c80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02B7
        gbc.setState(0x76f4, 0x9be4, 0x7f90, 0x1031, 0xb35, 0xec33, 0x1, 0x1);
        gbc.writeMem(0x76f4, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x9be4);
        EXPECT(gbc.pc(), 0x76f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02B8
        gbc.setState(0xd769, 0x22da, 0xde60, 0x7859, 0x4309, 0x92ab, 0x1, 0x0);
        gbc.writeMem(0xd769, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x22da);
        EXPECT(gbc.pc(), 0xd76b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd769), 0xcb);
        EXPECT(gbc.readMem(0xd76a), 0x45);
        // CB 45 02B9
        gbc.setState(0xc3e2, 0x79cf, 0x720, 0x5a50, 0x696c, 0x809c, 0x1, 0x1);
        gbc.writeMem(0xc3e2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x79cf);
        EXPECT(gbc.pc(), 0xc3e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3e2), 0xcb);
        EXPECT(gbc.readMem(0xc3e3), 0x45);
        // CB 45 02BA
        gbc.setState(0x1697, 0xf683, 0x5180, 0xcf34, 0x3b46, 0xf098, 0x0, 0x1);
        gbc.writeMem(0x1697, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xf683);
        EXPECT(gbc.pc(), 0x1699);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02BB
        gbc.setState(0x7e8e, 0x2361, 0x2ca0, 0x85bd, 0x8c39, 0xb382, 0x0, 0x1);
        gbc.writeMem(0x7e8e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x2361);
        EXPECT(gbc.pc(), 0x7e90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02BC
        gbc.setState(0x4823, 0xcd91, 0x6670, 0xe9a6, 0x74f5, 0x7a93, 0x0, 0x0);
        gbc.writeMem(0x4823, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xcd91);
        EXPECT(gbc.pc(), 0x4825);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02BD
        gbc.setState(0x6b47, 0xf644, 0x8fc0, 0x51ac, 0xc401, 0x55ce, 0x1, 0x1);
        gbc.writeMem(0x6b47, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf644);
        EXPECT(gbc.pc(), 0x6b49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02BE
        gbc.setState(0xbc35, 0x2334, 0xbdb0, 0xba42, 0xae32, 0xa709, 0x0, 0x0);
        gbc.writeMem(0xbc35, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x2334);
        EXPECT(gbc.pc(), 0xbc37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc35), 0xcb);
        EXPECT(gbc.readMem(0xbc36), 0x45);
        // CB 45 02BF
        gbc.setState(0x797e, 0x89c1, 0x5730, 0xbede, 0xf0aa, 0x26af, 0x0, 0x1);
        gbc.writeMem(0x797e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x89c1);
        EXPECT(gbc.pc(), 0x7980);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02C0
        gbc.setState(0xb7fd, 0xcfff, 0x5800, 0xd9d2, 0x9071, 0xd328, 0x1, 0x0);
        gbc.writeMem(0xb7fd, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xcfff);
        EXPECT(gbc.pc(), 0xb7ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7fd), 0xcb);
        EXPECT(gbc.readMem(0xb7fe), 0x45);
        // CB 45 02C1
        gbc.setState(0x10e0, 0x473d, 0xb900, 0xd583, 0x38f2, 0x835a, 0x1, 0x1);
        gbc.writeMem(0x10e0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x473d);
        EXPECT(gbc.pc(), 0x10e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02C2
        gbc.setState(0x6021, 0x213f, 0x7d0, 0x6153, 0x600c, 0x31fd, 0x0, 0x1);
        gbc.writeMem(0x6021, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x213f);
        EXPECT(gbc.pc(), 0x6023);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02C3
        gbc.setState(0x4005, 0x5ebe, 0xc5f0, 0xfa7, 0x1c03, 0xb104, 0x1, 0x1);
        gbc.writeMem(0x4005, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5ebe);
        EXPECT(gbc.pc(), 0x4007);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02C4
        gbc.setState(0xd732, 0xb8de, 0x71e0, 0x9954, 0xe761, 0x781f, 0x0, 0x0);
        gbc.writeMem(0xd732, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb8de);
        EXPECT(gbc.pc(), 0xd734);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd732), 0xcb);
        EXPECT(gbc.readMem(0xd733), 0x45);
        // CB 45 02C5
        gbc.setState(0x4746, 0x4ea1, 0x7220, 0xd1e2, 0x1fec, 0x711f, 0x0, 0x1);
        gbc.writeMem(0x4746, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4ea1);
        EXPECT(gbc.pc(), 0x4748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02C6
        gbc.setState(0xd1e5, 0x9c2d, 0x3ce0, 0x4e43, 0x1f47, 0x89f8, 0x1, 0x0);
        gbc.writeMem(0xd1e5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x9c2d);
        EXPECT(gbc.pc(), 0xd1e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1e5), 0xcb);
        EXPECT(gbc.readMem(0xd1e6), 0x45);
        // CB 45 02C7
        gbc.setState(0x798e, 0xe411, 0x75a0, 0xf83f, 0xd48, 0xb481, 0x0, 0x0);
        gbc.writeMem(0x798e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe411);
        EXPECT(gbc.pc(), 0x7990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02C8
        gbc.setState(0x3d4, 0xf582, 0x7d00, 0x1e0b, 0xff12, 0xec4d, 0x1, 0x1);
        gbc.writeMem(0x3d4, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf582);
        EXPECT(gbc.pc(), 0x3d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02C9
        gbc.setState(0x2986, 0xaa91, 0x6b80, 0xa6ec, 0x11a0, 0x41cb, 0x1, 0x1);
        gbc.writeMem(0x2986, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xaa91);
        EXPECT(gbc.pc(), 0x2988);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02CA
        gbc.setState(0xcbb2, 0x553a, 0x750, 0x55e9, 0xe3ca, 0x5b73, 0x0, 0x1);
        gbc.writeMem(0xcbb2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x553a);
        EXPECT(gbc.pc(), 0xcbb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbb2), 0xcb);
        EXPECT(gbc.readMem(0xcbb3), 0x45);
        // CB 45 02CB
        gbc.setState(0x1c0f, 0xe2cc, 0x6c40, 0x17dc, 0xcad7, 0x52dc, 0x0, 0x1);
        gbc.writeMem(0x1c0f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe2cc);
        EXPECT(gbc.pc(), 0x1c11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02CC
        gbc.setState(0xac48, 0x48b0, 0xea0, 0xbc9f, 0xa6eb, 0x3465, 0x0, 0x0);
        gbc.writeMem(0xac48, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x48b0);
        EXPECT(gbc.pc(), 0xac4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac48), 0xcb);
        EXPECT(gbc.readMem(0xac49), 0x45);
        // CB 45 02CD
        gbc.setState(0x32e9, 0xf571, 0xc310, 0x495, 0xba0a, 0xac8f, 0x1, 0x1);
        gbc.writeMem(0x32e9, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf571);
        EXPECT(gbc.pc(), 0x32eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02CE
        gbc.setState(0x9681, 0x56f, 0x4ab0, 0x85a1, 0xdd82, 0x1b6e, 0x1, 0x1);
        gbc.writeMem(0x9681, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x56f);
        EXPECT(gbc.pc(), 0x9683);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9681), 0xcb);
        EXPECT(gbc.readMem(0x9682), 0x45);
        // CB 45 02CF
        gbc.setState(0x1929, 0x34d9, 0x9aa0, 0x98e, 0x65e3, 0x1454, 0x0, 0x1);
        gbc.writeMem(0x1929, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x34d9);
        EXPECT(gbc.pc(), 0x192b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02D0
        gbc.setState(0x14e9, 0x9fbc, 0x1a30, 0x7f00, 0xade2, 0xc303, 0x1, 0x0);
        gbc.writeMem(0x14e9, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x9fbc);
        EXPECT(gbc.pc(), 0x14eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02D2
        gbc.setState(0xa23a, 0xd29c, 0x41b0, 0xcc13, 0x3b1c, 0xe063, 0x1, 0x0);
        gbc.writeMem(0xa23a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd29c);
        EXPECT(gbc.pc(), 0xa23c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa23a), 0xcb);
        EXPECT(gbc.readMem(0xa23b), 0x45);
        // CB 45 02D3
        gbc.setState(0x6fb1, 0x6953, 0x980, 0x31e9, 0xa2c2, 0xee05, 0x1, 0x1);
        gbc.writeMem(0x6fb1, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x6953);
        EXPECT(gbc.pc(), 0x6fb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02D4
        gbc.setState(0xf3d, 0x48c6, 0x3b70, 0xab9c, 0x5e45, 0xe912, 0x0, 0x1);
        gbc.writeMem(0xf3d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x48c6);
        EXPECT(gbc.pc(), 0xf3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02D5
        gbc.setState(0x131b, 0x675, 0xc5a0, 0xe53c, 0xd07c, 0x7a60, 0x0, 0x0);
        gbc.writeMem(0x131b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x675);
        EXPECT(gbc.pc(), 0x131d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02D6
        gbc.setState(0xb3ef, 0x4d4e, 0x4f70, 0xca9a, 0xf359, 0xda32, 0x0, 0x1);
        gbc.writeMem(0xb3ef, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x4d4e);
        EXPECT(gbc.pc(), 0xb3f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3ef), 0xcb);
        EXPECT(gbc.readMem(0xb3f0), 0x45);
        // CB 45 02D8
        gbc.setState(0x9139, 0x2cb6, 0xe40, 0x10f5, 0x467f, 0xf09c, 0x0, 0x1);
        gbc.writeMem(0x9139, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2cb6);
        EXPECT(gbc.pc(), 0x913b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9139), 0xcb);
        EXPECT(gbc.readMem(0x913a), 0x45);
        // CB 45 02D9
        gbc.setState(0x3580, 0x103d, 0x68a0, 0xf77d, 0xd321, 0x4555, 0x1, 0x0);
        gbc.writeMem(0x3580, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x103d);
        EXPECT(gbc.pc(), 0x3582);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02DA
        gbc.setState(0x610f, 0x57bf, 0xef10, 0x326f, 0x609b, 0x2cce, 0x1, 0x0);
        gbc.writeMem(0x610f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x57bf);
        EXPECT(gbc.pc(), 0x6111);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02DB
        gbc.setState(0x13e4, 0xe298, 0xb1d0, 0x336, 0xee7b, 0x1d63, 0x0, 0x0);
        gbc.writeMem(0x13e4, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xe298);
        EXPECT(gbc.pc(), 0x13e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02DC
        gbc.setState(0x47ec, 0x51f7, 0x6b0, 0x3eca, 0xb215, 0xc5e6, 0x0, 0x1);
        gbc.writeMem(0x47ec, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x51f7);
        EXPECT(gbc.pc(), 0x47ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02DD
        gbc.setState(0x9729, 0x42ed, 0x58d0, 0xa496, 0xe765, 0x7321, 0x0, 0x0);
        gbc.writeMem(0x9729, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x42ed);
        EXPECT(gbc.pc(), 0x972b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9729), 0xcb);
        EXPECT(gbc.readMem(0x972a), 0x45);
        // CB 45 02DE
        gbc.setState(0x16c6, 0x2552, 0x2790, 0xd56d, 0xfc9c, 0x679f, 0x0, 0x1);
        gbc.writeMem(0x16c6, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x2552);
        EXPECT(gbc.pc(), 0x16c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02DF
        gbc.setState(0xbc4f, 0x50dd, 0x8260, 0x5377, 0xae69, 0xf658, 0x1, 0x0);
        gbc.writeMem(0xbc4f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x50dd);
        EXPECT(gbc.pc(), 0xbc51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc4f), 0xcb);
        EXPECT(gbc.readMem(0xbc50), 0x45);
        // CB 45 02E0
        gbc.setState(0xcf12, 0x4987, 0xa020, 0x6, 0x3363, 0x88e4, 0x1, 0x1);
        gbc.writeMem(0xcf12, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4987);
        EXPECT(gbc.pc(), 0xcf14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf12), 0xcb);
        EXPECT(gbc.readMem(0xcf13), 0x45);
        // CB 45 02E1
        gbc.setState(0x46b8, 0x8483, 0x65c0, 0x84bf, 0xa06, 0xeab6, 0x0, 0x0);
        gbc.writeMem(0x46b8, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x8483);
        EXPECT(gbc.pc(), 0x46ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02E2
        gbc.setState(0xf67, 0x975e, 0x2b70, 0xb2a4, 0x9dbc, 0x7fc8, 0x1, 0x0);
        gbc.writeMem(0xf67, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x975e);
        EXPECT(gbc.pc(), 0xf69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02E3
        gbc.setState(0xd7fc, 0x2f14, 0x1440, 0xd136, 0xca5a, 0x6c50, 0x0, 0x1);
        gbc.writeMem(0xd7fc, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2f14);
        EXPECT(gbc.pc(), 0xd7fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7fc), 0xcb);
        EXPECT(gbc.readMem(0xd7fd), 0x45);
        // CB 45 02E4
        gbc.setState(0xdddb, 0xed19, 0x7080, 0x603f, 0x7a2f, 0x5a8, 0x0, 0x1);
        gbc.writeMem(0xdddb, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xed19);
        EXPECT(gbc.pc(), 0xdddd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdddb), 0xcb);
        EXPECT(gbc.readMem(0xdddc), 0x45);
        // CB 45 02E5
        gbc.setState(0x40b5, 0x8c34, 0x3fd0, 0xed5a, 0x4700, 0x84d1, 0x0, 0x0);
        gbc.writeMem(0x40b5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8c34);
        EXPECT(gbc.pc(), 0x40b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02E6
        gbc.setState(0x603, 0xad0b, 0x6f30, 0xc5a1, 0x6948, 0x1cee, 0x0, 0x1);
        gbc.writeMem(0x603, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xad0b);
        EXPECT(gbc.pc(), 0x605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02E7
        gbc.setState(0xe60e, 0x97a9, 0x60c0, 0x872c, 0xafc1, 0xac06, 0x0, 0x1);
        gbc.writeMem(0xe60e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x97a9);
        EXPECT(gbc.pc(), 0xe610);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe60e), 0xcb);
        EXPECT(gbc.readMem(0xe60f), 0x45);
        // CB 45 02E8
        gbc.setState(0xca9c, 0x1006, 0xde00, 0x62af, 0x89bb, 0x6a2b, 0x0, 0x0);
        gbc.writeMem(0xca9c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1006);
        EXPECT(gbc.pc(), 0xca9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca9c), 0xcb);
        EXPECT(gbc.readMem(0xca9d), 0x45);
        // CB 45 02E9
        gbc.setState(0x5ff1, 0x2f4f, 0x73e0, 0x8bb3, 0x6316, 0xa0fd, 0x1, 0x0);
        gbc.writeMem(0x5ff1, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2f4f);
        EXPECT(gbc.pc(), 0x5ff3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02EA
        gbc.setState(0x90cd, 0xf1df, 0x38f0, 0x2e09, 0x8fd2, 0xffed, 0x1, 0x0);
        gbc.writeMem(0x90cd, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf1df);
        EXPECT(gbc.pc(), 0x90cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90cd), 0xcb);
        EXPECT(gbc.readMem(0x90ce), 0x45);
        // CB 45 02EB
        gbc.setState(0x6e64, 0xca79, 0xa250, 0x8963, 0x3d6f, 0x1321, 0x0, 0x0);
        gbc.writeMem(0x6e64, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xca79);
        EXPECT(gbc.pc(), 0x6e66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02EC
        gbc.setState(0x4c38, 0xbb77, 0x2110, 0x518f, 0x395b, 0x60e6, 0x1, 0x0);
        gbc.writeMem(0x4c38, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xbb77);
        EXPECT(gbc.pc(), 0x4c3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02ED
        gbc.setState(0x6910, 0x252a, 0x6230, 0x72f5, 0xfcc2, 0x2396, 0x1, 0x1);
        gbc.writeMem(0x6910, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x252a);
        EXPECT(gbc.pc(), 0x6912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02EE
        gbc.setState(0xd9ae, 0x51d7, 0x3480, 0xd134, 0xea4e, 0xbc6c, 0x1, 0x1);
        gbc.writeMem(0xd9ae, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x51d7);
        EXPECT(gbc.pc(), 0xd9b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ae), 0xcb);
        EXPECT(gbc.readMem(0xd9af), 0x45);
        // CB 45 02F0
        gbc.setState(0xa669, 0xc66c, 0x1950, 0x38ab, 0xc246, 0x24c4, 0x0, 0x0);
        gbc.writeMem(0xa669, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc66c);
        EXPECT(gbc.pc(), 0xa66b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa669), 0xcb);
        EXPECT(gbc.readMem(0xa66a), 0x45);
        // CB 45 02F1
        gbc.setState(0xb5d3, 0x579e, 0x6e70, 0x746e, 0x4bbe, 0xa5ed, 0x0, 0x1);
        gbc.writeMem(0xb5d3, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x579e);
        EXPECT(gbc.pc(), 0xb5d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5d3), 0xcb);
        EXPECT(gbc.readMem(0xb5d4), 0x45);
        // CB 45 02F2
        gbc.setState(0xe244, 0xe47e, 0x9f00, 0x20cd, 0x904d, 0x8c3d, 0x0, 0x0);
        gbc.writeMem(0xe244, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe47e);
        EXPECT(gbc.pc(), 0xe246);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe244), 0xcb);
        EXPECT(gbc.readMem(0xe245), 0x45);
        // CB 45 02F3
        gbc.setState(0x997d, 0xdb89, 0x6ae0, 0x7859, 0x3afc, 0x4b86, 0x0, 0x1);
        gbc.writeMem(0x997d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xdb89);
        EXPECT(gbc.pc(), 0x997f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x997d), 0xcb);
        EXPECT(gbc.readMem(0x997e), 0x45);
        // CB 45 02F4
        gbc.setState(0x589c, 0x797d, 0x59b0, 0x839f, 0xeabb, 0xe8ba, 0x1, 0x0);
        gbc.writeMem(0x589c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x797d);
        EXPECT(gbc.pc(), 0x589e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02F5
        gbc.setState(0x861, 0xc950, 0x5820, 0xd17c, 0xc820, 0x5796, 0x0, 0x0);
        gbc.writeMem(0x861, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc950);
        EXPECT(gbc.pc(), 0x863);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02F6
        gbc.setState(0x5308, 0xf397, 0xcbf0, 0x6ff8, 0x638c, 0x3f3c, 0x0, 0x1);
        gbc.writeMem(0x5308, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf397);
        EXPECT(gbc.pc(), 0x530a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02F7
        gbc.setState(0x2b9, 0x68b4, 0x6140, 0x1f43, 0xcc5d, 0x237c, 0x0, 0x0);
        gbc.writeMem(0x2b9, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x68b4);
        EXPECT(gbc.pc(), 0x2bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02F8
        gbc.setState(0xdd9d, 0x1c63, 0x97a0, 0xe456, 0xb92d, 0xb122, 0x1, 0x1);
        gbc.writeMem(0xdd9d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1c63);
        EXPECT(gbc.pc(), 0xdd9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd9d), 0xcb);
        EXPECT(gbc.readMem(0xdd9e), 0x45);
        // CB 45 02F9
        gbc.setState(0xb88d, 0xd5b7, 0x8cb0, 0x9f6b, 0x551d, 0xc9cf, 0x0, 0x0);
        gbc.writeMem(0xb88d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd5b7);
        EXPECT(gbc.pc(), 0xb88f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb88d), 0xcb);
        EXPECT(gbc.readMem(0xb88e), 0x45);
        // CB 45 02FA
        gbc.setState(0x3626, 0x3ee9, 0x47f0, 0x8d7f, 0xb64b, 0x7b55, 0x1, 0x0);
        gbc.writeMem(0x3626, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x3ee9);
        EXPECT(gbc.pc(), 0x3628);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02FB
        gbc.setState(0x6b16, 0x2c9d, 0x2620, 0x8770, 0xc7f3, 0xa6e3, 0x0, 0x1);
        gbc.writeMem(0x6b16, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x2c9d);
        EXPECT(gbc.pc(), 0x6b18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02FC
        gbc.setState(0xd30f, 0xc394, 0x230, 0xe4e6, 0xe585, 0xeddb, 0x0, 0x0);
        gbc.writeMem(0xd30f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xc394);
        EXPECT(gbc.pc(), 0xd311);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd30f), 0xcb);
        EXPECT(gbc.readMem(0xd310), 0x45);
        // CB 45 02FD
        gbc.setState(0x5037, 0x1d6d, 0x6ad0, 0xd398, 0x8ce3, 0xd05a, 0x0, 0x1);
        gbc.writeMem(0x5037, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1d6d);
        EXPECT(gbc.pc(), 0x5039);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 02FE
        gbc.setState(0x29b7, 0xe609, 0xada0, 0x6475, 0x8b58, 0xbdc3, 0x1, 0x1);
        gbc.writeMem(0x29b7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe609);
        EXPECT(gbc.pc(), 0x29b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 02FF
        gbc.setState(0x9ce3, 0x1e95, 0x4670, 0xe13a, 0xd7dd, 0xfd08, 0x1, 0x1);
        gbc.writeMem(0x9ce3, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1e95);
        EXPECT(gbc.pc(), 0x9ce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ce3), 0xcb);
        EXPECT(gbc.readMem(0x9ce4), 0x45);
        // CB 45 0300
        gbc.setState(0xaec2, 0xd4f6, 0x4d90, 0x32d4, 0xdadc, 0x94cd, 0x1, 0x0);
        gbc.writeMem(0xaec2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd4f6);
        EXPECT(gbc.pc(), 0xaec4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaec2), 0xcb);
        EXPECT(gbc.readMem(0xaec3), 0x45);
        // CB 45 0301
        gbc.setState(0x5e22, 0xfea0, 0xbea0, 0x5dbb, 0x3455, 0x86d9, 0x0, 0x0);
        gbc.writeMem(0x5e22, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xfea0);
        EXPECT(gbc.pc(), 0x5e24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0302
        gbc.setState(0x93de, 0x9ebd, 0xd2c0, 0xca56, 0xef1c, 0x9928, 0x1, 0x0);
        gbc.writeMem(0x93de, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9ebd);
        EXPECT(gbc.pc(), 0x93e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93de), 0xcb);
        EXPECT(gbc.readMem(0x93df), 0x45);
        // CB 45 0303
        gbc.setState(0xd8ef, 0x9293, 0xeec0, 0xc458, 0x8d47, 0xe269, 0x1, 0x0);
        gbc.writeMem(0xd8ef, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x9293);
        EXPECT(gbc.pc(), 0xd8f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8ef), 0xcb);
        EXPECT(gbc.readMem(0xd8f0), 0x45);
        // CB 45 0304
        gbc.setState(0x12fe, 0x4f37, 0xf190, 0x4c3b, 0xa89, 0x3139, 0x1, 0x0);
        gbc.writeMem(0x12fe, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x4f37);
        EXPECT(gbc.pc(), 0x1300);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0305
        gbc.setState(0x5b0, 0xc39a, 0x1e70, 0xeab3, 0x87b8, 0x688, 0x1, 0x0);
        gbc.writeMem(0x5b0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc39a);
        EXPECT(gbc.pc(), 0x5b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0306
        gbc.setState(0x4233, 0xa7f4, 0x85f0, 0xfbc9, 0xd826, 0xc43c, 0x0, 0x0);
        gbc.writeMem(0x4233, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa7f4);
        EXPECT(gbc.pc(), 0x4235);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0307
        gbc.setState(0xcb15, 0x5e51, 0x4680, 0xd7a2, 0xf64, 0x5f39, 0x0, 0x0);
        gbc.writeMem(0xcb15, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5e51);
        EXPECT(gbc.pc(), 0xcb17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb15), 0xcb);
        EXPECT(gbc.readMem(0xcb16), 0x45);
        // CB 45 0308
        gbc.setState(0xdd7d, 0xa6ca, 0x64e0, 0xe871, 0x3d1d, 0x6477, 0x1, 0x1);
        gbc.writeMem(0xdd7d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa6ca);
        EXPECT(gbc.pc(), 0xdd7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd7d), 0xcb);
        EXPECT(gbc.readMem(0xdd7e), 0x45);
        // CB 45 0309
        gbc.setState(0x4045, 0xf12d, 0xae70, 0x9eb7, 0xed32, 0xf657, 0x0, 0x0);
        gbc.writeMem(0x4045, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf12d);
        EXPECT(gbc.pc(), 0x4047);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 030A
        gbc.setState(0x9d3d, 0xe4a3, 0x1ce0, 0x57b5, 0xbb9, 0xc4a7, 0x0, 0x0);
        gbc.writeMem(0x9d3d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xe4a3);
        EXPECT(gbc.pc(), 0x9d3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d3d), 0xcb);
        EXPECT(gbc.readMem(0x9d3e), 0x45);
        // CB 45 030B
        gbc.setState(0x173, 0x1ed4, 0xd3c0, 0xa797, 0x58d5, 0xdb68, 0x1, 0x1);
        gbc.writeMem(0x173, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1ed4);
        EXPECT(gbc.pc(), 0x175);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 030C
        gbc.setState(0x4a19, 0xea12, 0xcb10, 0x30ef, 0xb0cf, 0x9dae, 0x0, 0x1);
        gbc.writeMem(0x4a19, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xea12);
        EXPECT(gbc.pc(), 0x4a1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 030D
        gbc.setState(0x3580, 0x2449, 0xc420, 0xfed6, 0x4973, 0x231d, 0x0, 0x0);
        gbc.writeMem(0x3580, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2449);
        EXPECT(gbc.pc(), 0x3582);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 030E
        gbc.setState(0x9ef4, 0xa82e, 0x9530, 0xf992, 0x5b30, 0xecb, 0x1, 0x1);
        gbc.writeMem(0x9ef4, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa82e);
        EXPECT(gbc.pc(), 0x9ef6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ef4), 0xcb);
        EXPECT(gbc.readMem(0x9ef5), 0x45);
        // CB 45 030F
        gbc.setState(0x3647, 0x703f, 0x23d0, 0x6c41, 0x193b, 0x2211, 0x1, 0x0);
        gbc.writeMem(0x3647, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x703f);
        EXPECT(gbc.pc(), 0x3649);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0310
        gbc.setState(0x8ab8, 0xd503, 0xe830, 0x5231, 0x7d62, 0x6e26, 0x0, 0x0);
        gbc.writeMem(0x8ab8, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd503);
        EXPECT(gbc.pc(), 0x8aba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ab8), 0xcb);
        EXPECT(gbc.readMem(0x8ab9), 0x45);
        // CB 45 0311
        gbc.setState(0x6177, 0x6d8c, 0x85a0, 0x27b3, 0x1690, 0xb615, 0x0, 0x0);
        gbc.writeMem(0x6177, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6d8c);
        EXPECT(gbc.pc(), 0x6179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0312
        gbc.setState(0x9bb2, 0xa01c, 0x5930, 0x8acc, 0xab6a, 0xd6a1, 0x1, 0x0);
        gbc.writeMem(0x9bb2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa01c);
        EXPECT(gbc.pc(), 0x9bb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bb2), 0xcb);
        EXPECT(gbc.readMem(0x9bb3), 0x45);
        // CB 45 0313
        gbc.setState(0xcab0, 0x6dca, 0xed10, 0x2fc4, 0xfa51, 0x1f37, 0x1, 0x0);
        gbc.writeMem(0xcab0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6dca);
        EXPECT(gbc.pc(), 0xcab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcab0), 0xcb);
        EXPECT(gbc.readMem(0xcab1), 0x45);
        // CB 45 0314
        gbc.setState(0x3767, 0x32a2, 0x6470, 0x273, 0x4f90, 0x9a85, 0x0, 0x1);
        gbc.writeMem(0x3767, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x32a2);
        EXPECT(gbc.pc(), 0x3769);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0315
        gbc.setState(0xeef3, 0xf43, 0xfd90, 0x3c5, 0xd554, 0x7d4e, 0x0, 0x1);
        gbc.writeMem(0xeef3, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf43);
        EXPECT(gbc.pc(), 0xeef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeef3), 0xcb);
        EXPECT(gbc.readMem(0xeef4), 0x45);
        // CB 45 0316
        gbc.setState(0x1b30, 0x47b0, 0x9d00, 0xd05f, 0x995a, 0x44f5, 0x0, 0x1);
        gbc.writeMem(0x1b30, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x47b0);
        EXPECT(gbc.pc(), 0x1b32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0318
        gbc.setState(0x4c56, 0x834d, 0xb3f0, 0x5072, 0x5bd1, 0x496d, 0x0, 0x0);
        gbc.writeMem(0x4c56, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x834d);
        EXPECT(gbc.pc(), 0x4c58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0319
        gbc.setState(0xeb98, 0xf555, 0xfcb0, 0xe97d, 0x63f6, 0x760d, 0x0, 0x1);
        gbc.writeMem(0xeb98, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf555);
        EXPECT(gbc.pc(), 0xeb9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb98), 0xcb);
        EXPECT(gbc.readMem(0xeb99), 0x45);
        // CB 45 031A
        gbc.setState(0xac35, 0xa6b5, 0x50e0, 0x9745, 0xb48c, 0x390e, 0x1, 0x1);
        gbc.writeMem(0xac35, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xa6b5);
        EXPECT(gbc.pc(), 0xac37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac35), 0xcb);
        EXPECT(gbc.readMem(0xac36), 0x45);
        // CB 45 031B
        gbc.setState(0x9f86, 0xe7bb, 0x2aa0, 0xbf4b, 0x20b4, 0x9bd2, 0x1, 0x1);
        gbc.writeMem(0x9f86, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xe7bb);
        EXPECT(gbc.pc(), 0x9f88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f86), 0xcb);
        EXPECT(gbc.readMem(0x9f87), 0x45);
        // CB 45 031C
        gbc.setState(0x51ec, 0x34d8, 0x4aa0, 0xb71b, 0x55b1, 0x26a2, 0x1, 0x1);
        gbc.writeMem(0x51ec, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x34d8);
        EXPECT(gbc.pc(), 0x51ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 031D
        gbc.setState(0x3f2a, 0x777e, 0x1270, 0x9047, 0xa486, 0xadfb, 0x1, 0x0);
        gbc.writeMem(0x3f2a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x777e);
        EXPECT(gbc.pc(), 0x3f2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 031E
        gbc.setState(0xc645, 0x2605, 0xaaf0, 0xd330, 0x1610, 0x20a7, 0x0, 0x0);
        gbc.writeMem(0xc645, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2605);
        EXPECT(gbc.pc(), 0xc647);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc645), 0xcb);
        EXPECT(gbc.readMem(0xc646), 0x45);
        // CB 45 031F
        gbc.setState(0xd719, 0x5eb, 0x2e30, 0x98f, 0x7829, 0x61f0, 0x0, 0x0);
        gbc.writeMem(0xd719, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5eb);
        EXPECT(gbc.pc(), 0xd71b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd719), 0xcb);
        EXPECT(gbc.readMem(0xd71a), 0x45);
        // CB 45 0320
        gbc.setState(0xc3f0, 0x6778, 0x44f0, 0x4089, 0xbf30, 0xbf9d, 0x0, 0x0);
        gbc.writeMem(0xc3f0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x6778);
        EXPECT(gbc.pc(), 0xc3f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3f0), 0xcb);
        EXPECT(gbc.readMem(0xc3f1), 0x45);
        // CB 45 0321
        gbc.setState(0x2f66, 0xdde0, 0x9d90, 0xcbbb, 0x5bd6, 0xc946, 0x1, 0x1);
        gbc.writeMem(0x2f66, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xdde0);
        EXPECT(gbc.pc(), 0x2f68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0322
        gbc.setState(0x2f98, 0x6504, 0xc2a0, 0xff27, 0xacfb, 0xb0c6, 0x0, 0x0);
        gbc.writeMem(0x2f98, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x6504);
        EXPECT(gbc.pc(), 0x2f9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0323
        gbc.setState(0x685e, 0x34ad, 0x2540, 0x1160, 0x69a, 0x1c06, 0x1, 0x1);
        gbc.writeMem(0x685e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x34ad);
        EXPECT(gbc.pc(), 0x6860);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0324
        gbc.setState(0xc0a2, 0x94d9, 0x110, 0xcdd5, 0xade4, 0x35c6, 0x1, 0x0);
        gbc.writeMem(0xc0a2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x94d9);
        EXPECT(gbc.pc(), 0xc0a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0a2), 0xcb);
        EXPECT(gbc.readMem(0xc0a3), 0x45);
        // CB 45 0325
        gbc.setState(0x4ee, 0x4f5b, 0x3b10, 0xd92e, 0xfc19, 0xca7d, 0x1, 0x1);
        gbc.writeMem(0x4ee, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4f5b);
        EXPECT(gbc.pc(), 0x4f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0326
        gbc.setState(0x4f57, 0x2002, 0x8900, 0xa785, 0x8121, 0x87b3, 0x0, 0x0);
        gbc.writeMem(0x4f57, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2002);
        EXPECT(gbc.pc(), 0x4f59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0327
        gbc.setState(0xb524, 0x28e5, 0x6220, 0xfe93, 0x14cb, 0x304d, 0x0, 0x1);
        gbc.writeMem(0xb524, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x28e5);
        EXPECT(gbc.pc(), 0xb526);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb524), 0xcb);
        EXPECT(gbc.readMem(0xb525), 0x45);
        // CB 45 0328
        gbc.setState(0x335f, 0xf8b3, 0x2cb0, 0x3b66, 0x2d7b, 0xb8eb, 0x0, 0x0);
        gbc.writeMem(0x335f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xf8b3);
        EXPECT(gbc.pc(), 0x3361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0329
        gbc.setState(0x28b1, 0xe73e, 0x5a80, 0x1885, 0x5a26, 0xfad6, 0x0, 0x0);
        gbc.writeMem(0x28b1, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe73e);
        EXPECT(gbc.pc(), 0x28b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 032A
        gbc.setState(0xecd8, 0xa387, 0xb3d0, 0x889c, 0xa1e2, 0x9a9b, 0x0, 0x0);
        gbc.writeMem(0xecd8, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa387);
        EXPECT(gbc.pc(), 0xecda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecd8), 0xcb);
        EXPECT(gbc.readMem(0xecd9), 0x45);
        // CB 45 032B
        gbc.setState(0x1a92, 0xf4e7, 0x3280, 0xc627, 0xca5, 0xd8c1, 0x1, 0x0);
        gbc.writeMem(0x1a92, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xf4e7);
        EXPECT(gbc.pc(), 0x1a94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 032C
        gbc.setState(0xa100, 0xfc2, 0x8950, 0xed58, 0xe8e5, 0x2219, 0x0, 0x1);
        gbc.writeMem(0xa100, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xfc2);
        EXPECT(gbc.pc(), 0xa102);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa100), 0xcb);
        EXPECT(gbc.readMem(0xa101), 0x45);
        // CB 45 032D
        gbc.setState(0xc8d7, 0xfb1a, 0x3d50, 0x7f0d, 0x2b52, 0xe16e, 0x1, 0x1);
        gbc.writeMem(0xc8d7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xfb1a);
        EXPECT(gbc.pc(), 0xc8d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8d7), 0xcb);
        EXPECT(gbc.readMem(0xc8d8), 0x45);
        // CB 45 032E
        gbc.setState(0x7743, 0xb1eb, 0x25a0, 0xdec3, 0xe2e0, 0x1b9f, 0x1, 0x0);
        gbc.writeMem(0x7743, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb1eb);
        EXPECT(gbc.pc(), 0x7745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 032F
        gbc.setState(0x85ae, 0xad64, 0x6aa0, 0x7b91, 0xf2b1, 0x62fd, 0x0, 0x1);
        gbc.writeMem(0x85ae, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xad64);
        EXPECT(gbc.pc(), 0x85b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85ae), 0xcb);
        EXPECT(gbc.readMem(0x85af), 0x45);
        // CB 45 0330
        gbc.setState(0x1923, 0xf053, 0xfd20, 0xe7d0, 0x1b9a, 0xfa6, 0x0, 0x1);
        gbc.writeMem(0x1923, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf053);
        EXPECT(gbc.pc(), 0x1925);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0331
        gbc.setState(0xcdb8, 0x763a, 0xd620, 0x52ff, 0xdc38, 0xe559, 0x0, 0x1);
        gbc.writeMem(0xcdb8, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x763a);
        EXPECT(gbc.pc(), 0xcdba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdb8), 0xcb);
        EXPECT(gbc.readMem(0xcdb9), 0x45);
        // CB 45 0332
        gbc.setState(0x653f, 0x6381, 0x77e0, 0xadec, 0x3bdf, 0x136b, 0x0, 0x1);
        gbc.writeMem(0x653f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x6381);
        EXPECT(gbc.pc(), 0x6541);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0333
        gbc.setState(0x4a4a, 0xac49, 0xcf70, 0x5437, 0x4861, 0x8ae0, 0x0, 0x1);
        gbc.writeMem(0x4a4a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xac49);
        EXPECT(gbc.pc(), 0x4a4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0334
        gbc.setState(0x328c, 0x96d3, 0xa320, 0xeeb5, 0xc86d, 0xb119, 0x1, 0x0);
        gbc.writeMem(0x328c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x96d3);
        EXPECT(gbc.pc(), 0x328e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0335
        gbc.setState(0x5f2a, 0x29ab, 0x89b0, 0x761c, 0x12ab, 0xb59f, 0x0, 0x1);
        gbc.writeMem(0x5f2a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x29ab);
        EXPECT(gbc.pc(), 0x5f2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0336
        gbc.setState(0xcd5, 0x8660, 0xc080, 0x8bc6, 0x6254, 0xfec4, 0x0, 0x0);
        gbc.writeMem(0xcd5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8660);
        EXPECT(gbc.pc(), 0xcd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0337
        gbc.setState(0xc81f, 0x4189, 0x590, 0x532f, 0xe654, 0x465e, 0x0, 0x0);
        gbc.writeMem(0xc81f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4189);
        EXPECT(gbc.pc(), 0xc821);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc81f), 0xcb);
        EXPECT(gbc.readMem(0xc820), 0x45);
        // CB 45 0338
        gbc.setState(0x59e7, 0x43c1, 0x9580, 0x9901, 0x5284, 0x4961, 0x0, 0x1);
        gbc.writeMem(0x59e7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x43c1);
        EXPECT(gbc.pc(), 0x59e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0339
        gbc.setState(0x5938, 0x9b2, 0x3010, 0x33b8, 0xe6f7, 0x1b9e, 0x1, 0x1);
        gbc.writeMem(0x5938, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9b2);
        EXPECT(gbc.pc(), 0x593a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 033B
        gbc.setState(0xb240, 0x14b2, 0x98a0, 0x1603, 0x2769, 0x1315, 0x1, 0x0);
        gbc.writeMem(0xb240, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x14b2);
        EXPECT(gbc.pc(), 0xb242);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb240), 0xcb);
        EXPECT(gbc.readMem(0xb241), 0x45);
        // CB 45 033C
        gbc.setState(0x5100, 0x6609, 0xfea0, 0x9a99, 0x63a7, 0x5278, 0x1, 0x1);
        gbc.writeMem(0x5100, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6609);
        EXPECT(gbc.pc(), 0x5102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 033D
        gbc.setState(0x30af, 0xde54, 0x60a0, 0x1b16, 0x3f3b, 0x33c2, 0x0, 0x1);
        gbc.writeMem(0x30af, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xde54);
        EXPECT(gbc.pc(), 0x30b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 033E
        gbc.setState(0x7380, 0x519, 0xf750, 0x8418, 0xb7eb, 0xe7b7, 0x0, 0x1);
        gbc.writeMem(0x7380, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x519);
        EXPECT(gbc.pc(), 0x7382);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 033F
        gbc.setState(0xe727, 0x35e2, 0x5870, 0xd35e, 0xb319, 0x184f, 0x1, 0x0);
        gbc.writeMem(0xe727, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x35e2);
        EXPECT(gbc.pc(), 0xe729);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe727), 0xcb);
        EXPECT(gbc.readMem(0xe728), 0x45);
        // CB 45 0340
        gbc.setState(0x628b, 0xd5fb, 0x440, 0xc279, 0xb61, 0xec5b, 0x1, 0x0);
        gbc.writeMem(0x628b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd5fb);
        EXPECT(gbc.pc(), 0x628d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0341
        gbc.setState(0x8e23, 0xc7d7, 0x7d20, 0x70f0, 0xa33a, 0x3c5e, 0x1, 0x0);
        gbc.writeMem(0x8e23, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc7d7);
        EXPECT(gbc.pc(), 0x8e25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e23), 0xcb);
        EXPECT(gbc.readMem(0x8e24), 0x45);
        // CB 45 0342
        gbc.setState(0x9400, 0xad7c, 0x70b0, 0xfc11, 0x2603, 0xac36, 0x1, 0x0);
        gbc.writeMem(0x9400, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xad7c);
        EXPECT(gbc.pc(), 0x9402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9400), 0xcb);
        EXPECT(gbc.readMem(0x9401), 0x45);
        // CB 45 0343
        gbc.setState(0x56e2, 0x5b08, 0x5580, 0x8b2f, 0x9d23, 0xa9c0, 0x0, 0x0);
        gbc.writeMem(0x56e2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x5b08);
        EXPECT(gbc.pc(), 0x56e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0344
        gbc.setState(0x3757, 0xe417, 0xd4b0, 0xbbda, 0x7bff, 0x60f9, 0x0, 0x0);
        gbc.writeMem(0x3757, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe417);
        EXPECT(gbc.pc(), 0x3759);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0345
        gbc.setState(0x4884, 0xf7c7, 0x60b0, 0x4f0c, 0x863f, 0x86d1, 0x1, 0x0);
        gbc.writeMem(0x4884, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf7c7);
        EXPECT(gbc.pc(), 0x4886);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0346
        gbc.setState(0x4f88, 0xa37d, 0x1e80, 0xd502, 0xb373, 0xd8d6, 0x0, 0x0);
        gbc.writeMem(0x4f88, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa37d);
        EXPECT(gbc.pc(), 0x4f8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0348
        gbc.setState(0x629d, 0x185b, 0xd90, 0xefd1, 0xbfbf, 0xe113, 0x0, 0x1);
        gbc.writeMem(0x629d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x185b);
        EXPECT(gbc.pc(), 0x629f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0349
        gbc.setState(0x855d, 0xb2f, 0xc670, 0x7313, 0x5b49, 0xd885, 0x1, 0x1);
        gbc.writeMem(0x855d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb2f);
        EXPECT(gbc.pc(), 0x855f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x855d), 0xcb);
        EXPECT(gbc.readMem(0x855e), 0x45);
        // CB 45 034A
        gbc.setState(0x26e9, 0xd42a, 0x65a0, 0xcda2, 0xaa3a, 0xeb0b, 0x1, 0x1);
        gbc.writeMem(0x26e9, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd42a);
        EXPECT(gbc.pc(), 0x26eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 034B
        gbc.setState(0x81fa, 0x893d, 0xc540, 0x14d6, 0x99df, 0xb5ec, 0x0, 0x1);
        gbc.writeMem(0x81fa, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x893d);
        EXPECT(gbc.pc(), 0x81fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81fa), 0xcb);
        EXPECT(gbc.readMem(0x81fb), 0x45);
        // CB 45 034C
        gbc.setState(0x3b10, 0x1e6d, 0x2470, 0x2b6e, 0x53d7, 0x16a0, 0x0, 0x1);
        gbc.writeMem(0x3b10, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1e6d);
        EXPECT(gbc.pc(), 0x3b12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 034D
        gbc.setState(0xad3c, 0x56b8, 0x16e0, 0xbb15, 0xe2ee, 0x6012, 0x1, 0x0);
        gbc.writeMem(0xad3c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x56b8);
        EXPECT(gbc.pc(), 0xad3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad3c), 0xcb);
        EXPECT(gbc.readMem(0xad3d), 0x45);
        // CB 45 034E
        gbc.setState(0x2641, 0xd684, 0xb0c0, 0x4dda, 0x544d, 0x407e, 0x1, 0x1);
        gbc.writeMem(0x2641, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd684);
        EXPECT(gbc.pc(), 0x2643);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0350
        gbc.setState(0x21f, 0x1d1d, 0x6640, 0x49e8, 0xefa6, 0xdc6b, 0x1, 0x1);
        gbc.writeMem(0x21f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1d1d);
        EXPECT(gbc.pc(), 0x221);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0351
        gbc.setState(0xa17c, 0x901d, 0xb4e0, 0x4ba0, 0xa76, 0x4335, 0x1, 0x1);
        gbc.writeMem(0xa17c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x901d);
        EXPECT(gbc.pc(), 0xa17e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa17c), 0xcb);
        EXPECT(gbc.readMem(0xa17d), 0x45);
        // CB 45 0352
        gbc.setState(0xd8d2, 0xba44, 0x490, 0x5408, 0x3126, 0x90fa, 0x0, 0x1);
        gbc.writeMem(0xd8d2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xba44);
        EXPECT(gbc.pc(), 0xd8d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8d2), 0xcb);
        EXPECT(gbc.readMem(0xd8d3), 0x45);
        // CB 45 0353
        gbc.setState(0x60e4, 0x47a0, 0x19c0, 0xc21, 0x66b6, 0x47c7, 0x1, 0x0);
        gbc.writeMem(0x60e4, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x47a0);
        EXPECT(gbc.pc(), 0x60e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0354
        gbc.setState(0xa8f3, 0xd3ad, 0x8d30, 0x59ed, 0xcc7a, 0x6747, 0x1, 0x1);
        gbc.writeMem(0xa8f3, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xd3ad);
        EXPECT(gbc.pc(), 0xa8f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8f3), 0xcb);
        EXPECT(gbc.readMem(0xa8f4), 0x45);
        // CB 45 0355
        gbc.setState(0x2503, 0x929e, 0x1340, 0xc7dc, 0x52ce, 0xad0d, 0x1, 0x1);
        gbc.writeMem(0x2503, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x929e);
        EXPECT(gbc.pc(), 0x2505);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0356
        gbc.setState(0x2a91, 0x4670, 0xd060, 0xa7fa, 0x785f, 0xdf06, 0x1, 0x0);
        gbc.writeMem(0x2a91, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4670);
        EXPECT(gbc.pc(), 0x2a93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0357
        gbc.setState(0x40ec, 0x18cd, 0x8860, 0x89d6, 0xd402, 0x56c7, 0x1, 0x0);
        gbc.writeMem(0x40ec, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x18cd);
        EXPECT(gbc.pc(), 0x40ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0358
        gbc.setState(0xa8c2, 0xd079, 0xa040, 0x17c4, 0x7ef0, 0xb034, 0x0, 0x0);
        gbc.writeMem(0xa8c2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd079);
        EXPECT(gbc.pc(), 0xa8c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8c2), 0xcb);
        EXPECT(gbc.readMem(0xa8c3), 0x45);
        // CB 45 0359
        gbc.setState(0x7bce, 0xba6b, 0x1450, 0x8182, 0x63ce, 0xcf6a, 0x1, 0x0);
        gbc.writeMem(0x7bce, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xba6b);
        EXPECT(gbc.pc(), 0x7bd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 035A
        gbc.setState(0x1692, 0xb4c6, 0x7b60, 0x65a9, 0xe454, 0x8387, 0x0, 0x0);
        gbc.writeMem(0x1692, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb4c6);
        EXPECT(gbc.pc(), 0x1694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 035B
        gbc.setState(0x43f, 0x470a, 0x4580, 0x33a2, 0x516c, 0xff27, 0x0, 0x1);
        gbc.writeMem(0x43f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x470a);
        EXPECT(gbc.pc(), 0x441);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 035C
        gbc.setState(0x2147, 0xf355, 0x450, 0x1de0, 0xc110, 0xc57d, 0x1, 0x0);
        gbc.writeMem(0x2147, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf355);
        EXPECT(gbc.pc(), 0x2149);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 035D
        gbc.setState(0x9974, 0x670a, 0x7bb0, 0xa5af, 0x4908, 0x98d4, 0x0, 0x1);
        gbc.writeMem(0x9974, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x670a);
        EXPECT(gbc.pc(), 0x9976);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9974), 0xcb);
        EXPECT(gbc.readMem(0x9975), 0x45);
        // CB 45 035E
        gbc.setState(0x4d44, 0xba87, 0x3a80, 0x2937, 0x9de6, 0x423c, 0x0, 0x0);
        gbc.writeMem(0x4d44, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xba87);
        EXPECT(gbc.pc(), 0x4d46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 035F
        gbc.setState(0xefd1, 0xaccc, 0x7ca0, 0xf71a, 0x6284, 0xf319, 0x1, 0x1);
        gbc.writeMem(0xefd1, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xaccc);
        EXPECT(gbc.pc(), 0xefd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefd1), 0xcb);
        EXPECT(gbc.readMem(0xefd2), 0x45);
        // CB 45 0360
        gbc.setState(0x277e, 0x9c87, 0xa1e0, 0x6984, 0x4705, 0x208b, 0x0, 0x0);
        gbc.writeMem(0x277e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9c87);
        EXPECT(gbc.pc(), 0x2780);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0361
        gbc.setState(0x64ff, 0xaeb3, 0xd090, 0xa010, 0x4cca, 0x934, 0x1, 0x0);
        gbc.writeMem(0x64ff, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xaeb3);
        EXPECT(gbc.pc(), 0x6501);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0362
        gbc.setState(0x26b5, 0xc4e8, 0x4660, 0x33b6, 0xcc0a, 0x2f26, 0x1, 0x0);
        gbc.writeMem(0x26b5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc4e8);
        EXPECT(gbc.pc(), 0x26b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0363
        gbc.setState(0xac89, 0x6ac7, 0x14f0, 0x47a4, 0x93d8, 0x42dd, 0x0, 0x0);
        gbc.writeMem(0xac89, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x6ac7);
        EXPECT(gbc.pc(), 0xac8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac89), 0xcb);
        EXPECT(gbc.readMem(0xac8a), 0x45);
        // CB 45 0364
        gbc.setState(0x3b3c, 0xc742, 0x1e10, 0xd695, 0xba4b, 0xf95c, 0x0, 0x1);
        gbc.writeMem(0x3b3c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xc742);
        EXPECT(gbc.pc(), 0x3b3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0365
        gbc.setState(0x99fe, 0xd1fb, 0xcc30, 0x9129, 0xce6, 0xf7f5, 0x0, 0x0);
        gbc.writeMem(0x99fe, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xd1fb);
        EXPECT(gbc.pc(), 0x9a00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99fe), 0xcb);
        EXPECT(gbc.readMem(0x99ff), 0x45);
        // CB 45 0366
        gbc.setState(0x95ec, 0x7ce9, 0x2070, 0x2aa8, 0x81df, 0x7d2e, 0x1, 0x0);
        gbc.writeMem(0x95ec, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7ce9);
        EXPECT(gbc.pc(), 0x95ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95ec), 0xcb);
        EXPECT(gbc.readMem(0x95ed), 0x45);
        // CB 45 0367
        gbc.setState(0x9aee, 0x3f4f, 0xc40, 0x4058, 0x16d8, 0x8aab, 0x1, 0x1);
        gbc.writeMem(0x9aee, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3f4f);
        EXPECT(gbc.pc(), 0x9af0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aee), 0xcb);
        EXPECT(gbc.readMem(0x9aef), 0x45);
        // CB 45 0369
        gbc.setState(0xa744, 0xf8ea, 0x6870, 0xc386, 0x6b19, 0xb0a5, 0x1, 0x1);
        gbc.writeMem(0xa744, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf8ea);
        EXPECT(gbc.pc(), 0xa746);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa744), 0xcb);
        EXPECT(gbc.readMem(0xa745), 0x45);
        // CB 45 036A
        gbc.setState(0x7702, 0xd83a, 0xeb0, 0x1c3, 0x6c03, 0xca5f, 0x0, 0x1);
        gbc.writeMem(0x7702, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd83a);
        EXPECT(gbc.pc(), 0x7704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 036B
        gbc.setState(0x419e, 0xaddf, 0x5400, 0x4697, 0x7499, 0x9bbc, 0x1, 0x1);
        gbc.writeMem(0x419e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xaddf);
        EXPECT(gbc.pc(), 0x41a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 036C
        gbc.setState(0x74c, 0x2bb3, 0x8270, 0x45e6, 0xf802, 0xefab, 0x0, 0x1);
        gbc.writeMem(0x74c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2bb3);
        EXPECT(gbc.pc(), 0x74e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 036D
        gbc.setState(0x8fa4, 0xb96b, 0x77e0, 0x8483, 0xe2c3, 0xbacb, 0x1, 0x0);
        gbc.writeMem(0x8fa4, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb96b);
        EXPECT(gbc.pc(), 0x8fa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fa4), 0xcb);
        EXPECT(gbc.readMem(0x8fa5), 0x45);
        // CB 45 036E
        gbc.setState(0xdb3e, 0x5cd3, 0xa9d0, 0x4f57, 0xbcde, 0x96d7, 0x1, 0x0);
        gbc.writeMem(0xdb3e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x5cd3);
        EXPECT(gbc.pc(), 0xdb40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb3e), 0xcb);
        EXPECT(gbc.readMem(0xdb3f), 0x45);
        // CB 45 036F
        gbc.setState(0x931, 0xaac8, 0xebe0, 0x64f7, 0x978d, 0xabef, 0x0, 0x1);
        gbc.writeMem(0x931, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xaac8);
        EXPECT(gbc.pc(), 0x933);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0370
        gbc.setState(0x5f8a, 0x35d1, 0xa5d0, 0xc459, 0x888a, 0x2281, 0x0, 0x1);
        gbc.writeMem(0x5f8a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x35d1);
        EXPECT(gbc.pc(), 0x5f8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0371
        gbc.setState(0xa393, 0xd5eb, 0x6960, 0x225f, 0x90eb, 0xdc79, 0x1, 0x0);
        gbc.writeMem(0xa393, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd5eb);
        EXPECT(gbc.pc(), 0xa395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa393), 0xcb);
        EXPECT(gbc.readMem(0xa394), 0x45);
        // CB 45 0372
        gbc.setState(0x7ab8, 0x8a04, 0x3e50, 0x6c49, 0x7701, 0x4c12, 0x1, 0x0);
        gbc.writeMem(0x7ab8, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8a04);
        EXPECT(gbc.pc(), 0x7aba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0373
        gbc.setState(0x1360, 0xe14, 0x4cf0, 0x3a66, 0xbe3b, 0xbf23, 0x1, 0x0);
        gbc.writeMem(0x1360, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xe14);
        EXPECT(gbc.pc(), 0x1362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0374
        gbc.setState(0xb3c5, 0xbd3, 0xbb20, 0x3cc7, 0x734f, 0x9a0c, 0x1, 0x1);
        gbc.writeMem(0xb3c5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xbd3);
        EXPECT(gbc.pc(), 0xb3c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3c5), 0xcb);
        EXPECT(gbc.readMem(0xb3c6), 0x45);
        // CB 45 0375
        gbc.setState(0x45e0, 0x1d4a, 0x2620, 0xbfd8, 0xe52f, 0x486b, 0x1, 0x0);
        gbc.writeMem(0x45e0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1d4a);
        EXPECT(gbc.pc(), 0x45e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0376
        gbc.setState(0x524d, 0x4c04, 0xd250, 0xec08, 0xb20c, 0x49fa, 0x1, 0x0);
        gbc.writeMem(0x524d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4c04);
        EXPECT(gbc.pc(), 0x524f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0377
        gbc.setState(0x66d0, 0x4ce0, 0x8260, 0x22cd, 0x380b, 0xc68f, 0x1, 0x0);
        gbc.writeMem(0x66d0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x4ce0);
        EXPECT(gbc.pc(), 0x66d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0378
        gbc.setState(0xe900, 0xd48f, 0x1110, 0xd666, 0xb624, 0x433b, 0x0, 0x1);
        gbc.writeMem(0xe900, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xd48f);
        EXPECT(gbc.pc(), 0xe902);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe900), 0xcb);
        EXPECT(gbc.readMem(0xe901), 0x45);
        // CB 45 0379
        gbc.setState(0x93b1, 0xa77b, 0x1000, 0xeb8e, 0x5f80, 0x105a, 0x1, 0x1);
        gbc.writeMem(0x93b1, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa77b);
        EXPECT(gbc.pc(), 0x93b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93b1), 0xcb);
        EXPECT(gbc.readMem(0x93b2), 0x45);
        // CB 45 037B
        gbc.setState(0x7fbb, 0x4739, 0x90f0, 0xc5b8, 0x342e, 0x305f, 0x1, 0x1);
        gbc.writeMem(0x7fbb, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x4739);
        EXPECT(gbc.pc(), 0x7fbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 037C
        gbc.setState(0x53f0, 0x4800, 0xd2c0, 0xf4dc, 0xec79, 0xc21e, 0x1, 0x0);
        gbc.writeMem(0x53f0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x4800);
        EXPECT(gbc.pc(), 0x53f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 037D
        gbc.setState(0x3aa7, 0x2cf, 0x5630, 0x447, 0xd5b2, 0xc917, 0x1, 0x1);
        gbc.writeMem(0x3aa7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2cf);
        EXPECT(gbc.pc(), 0x3aa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 037E
        gbc.setState(0x5100, 0x6869, 0xec70, 0x311b, 0x3e20, 0x21b0, 0x0, 0x1);
        gbc.writeMem(0x5100, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6869);
        EXPECT(gbc.pc(), 0x5102);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 037F
        gbc.setState(0x88d8, 0x4521, 0x5900, 0x339, 0xd6a4, 0x7378, 0x0, 0x1);
        gbc.writeMem(0x88d8, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4521);
        EXPECT(gbc.pc(), 0x88da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88d8), 0xcb);
        EXPECT(gbc.readMem(0x88d9), 0x45);
        // CB 45 0380
        gbc.setState(0xdfa5, 0x95e7, 0x9070, 0x43ab, 0x796e, 0x369, 0x0, 0x1);
        gbc.writeMem(0xdfa5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x95e7);
        EXPECT(gbc.pc(), 0xdfa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfa5), 0xcb);
        EXPECT(gbc.readMem(0xdfa6), 0x45);
        // CB 45 0381
        gbc.setState(0x361e, 0xbc45, 0x42c0, 0x45e4, 0xd0bf, 0x2ac0, 0x1, 0x1);
        gbc.writeMem(0x361e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xbc45);
        EXPECT(gbc.pc(), 0x3620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0382
        gbc.setState(0xaee6, 0x4988, 0x3d20, 0x7eab, 0x185d, 0xc6af, 0x0, 0x1);
        gbc.writeMem(0xaee6, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4988);
        EXPECT(gbc.pc(), 0xaee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee6), 0xcb);
        EXPECT(gbc.readMem(0xaee7), 0x45);
        // CB 45 0384
        gbc.setState(0x2c93, 0xb416, 0x2250, 0x1fb0, 0xf10, 0x4c95, 0x1, 0x1);
        gbc.writeMem(0x2c93, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb416);
        EXPECT(gbc.pc(), 0x2c95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0386
        gbc.setState(0xcd47, 0x2cc8, 0x4dc0, 0x5092, 0xa9d8, 0xd25b, 0x1, 0x0);
        gbc.writeMem(0xcd47, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x2cc8);
        EXPECT(gbc.pc(), 0xcd49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd47), 0xcb);
        EXPECT(gbc.readMem(0xcd48), 0x45);
        // CB 45 0387
        gbc.setState(0x9b, 0x1b64, 0x69a0, 0xdc8e, 0xacda, 0x76fd, 0x1, 0x0);
        gbc.writeMem(0x9b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1b64);
        EXPECT(gbc.pc(), 0x9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0388
        gbc.setState(0x4135, 0x66c4, 0xd5c0, 0x867, 0x7920, 0xb817, 0x0, 0x1);
        gbc.writeMem(0x4135, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x66c4);
        EXPECT(gbc.pc(), 0x4137);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0389
        gbc.setState(0x1ff2, 0xdedd, 0x4630, 0x74bd, 0xdb6e, 0x4d04, 0x0, 0x0);
        gbc.writeMem(0x1ff2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xdedd);
        EXPECT(gbc.pc(), 0x1ff4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 038A
        gbc.setState(0xd08b, 0x314e, 0x8960, 0xf6b0, 0xbc93, 0x3a0c, 0x1, 0x1);
        gbc.writeMem(0xd08b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x314e);
        EXPECT(gbc.pc(), 0xd08d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd08b), 0xcb);
        EXPECT(gbc.readMem(0xd08c), 0x45);
        // CB 45 038B
        gbc.setState(0x8a7, 0x632c, 0xc7f0, 0x81db, 0x21f0, 0xec5c, 0x1, 0x0);
        gbc.writeMem(0x8a7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x632c);
        EXPECT(gbc.pc(), 0x8a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 038C
        gbc.setState(0x8ae9, 0xc763, 0xf490, 0x1311, 0x59f8, 0x3e0b, 0x0, 0x0);
        gbc.writeMem(0x8ae9, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc763);
        EXPECT(gbc.pc(), 0x8aeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ae9), 0xcb);
        EXPECT(gbc.readMem(0x8aea), 0x45);
        // CB 45 038D
        gbc.setState(0x1833, 0x2633, 0x1f70, 0x15d8, 0xec, 0xa22b, 0x0, 0x1);
        gbc.writeMem(0x1833, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2633);
        EXPECT(gbc.pc(), 0x1835);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 038E
        gbc.setState(0x2341, 0x7de4, 0xdb00, 0xc1a, 0x633c, 0xc1c9, 0x1, 0x1);
        gbc.writeMem(0x2341, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7de4);
        EXPECT(gbc.pc(), 0x2343);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 038F
        gbc.setState(0x69c0, 0x65ee, 0xbb90, 0xb219, 0xed5e, 0xacf6, 0x0, 0x1);
        gbc.writeMem(0x69c0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x65ee);
        EXPECT(gbc.pc(), 0x69c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0390
        gbc.setState(0x8756, 0x91bb, 0x9210, 0xd069, 0x969c, 0xc278, 0x0, 0x1);
        gbc.writeMem(0x8756, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x91bb);
        EXPECT(gbc.pc(), 0x8758);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8756), 0xcb);
        EXPECT(gbc.readMem(0x8757), 0x45);
        // CB 45 0391
        gbc.setState(0xb3ba, 0xd697, 0x5a40, 0xa967, 0x9c52, 0xc943, 0x0, 0x0);
        gbc.writeMem(0xb3ba, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd697);
        EXPECT(gbc.pc(), 0xb3bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3ba), 0xcb);
        EXPECT(gbc.readMem(0xb3bb), 0x45);
        // CB 45 0392
        gbc.setState(0x3943, 0xa694, 0xd890, 0x1eba, 0xd2fb, 0x1062, 0x0, 0x1);
        gbc.writeMem(0x3943, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa694);
        EXPECT(gbc.pc(), 0x3945);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0393
        gbc.setState(0xa76c, 0x558b, 0x3a80, 0x31a4, 0x665, 0x38ba, 0x0, 0x0);
        gbc.writeMem(0xa76c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x558b);
        EXPECT(gbc.pc(), 0xa76e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa76c), 0xcb);
        EXPECT(gbc.readMem(0xa76d), 0x45);
        // CB 45 0394
        gbc.setState(0x141f, 0x22e2, 0xfaf0, 0x6c9a, 0xb0a, 0x582f, 0x0, 0x1);
        gbc.writeMem(0x141f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x22e2);
        EXPECT(gbc.pc(), 0x1421);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 0395
        gbc.setState(0x9521, 0xd646, 0x1a20, 0x3ed0, 0xdca4, 0x5191, 0x1, 0x1);
        gbc.writeMem(0x9521, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd646);
        EXPECT(gbc.pc(), 0x9523);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9521), 0xcb);
        EXPECT(gbc.readMem(0x9522), 0x45);
        // CB 45 0396
        gbc.setState(0x1ccd, 0x8424, 0x6920, 0x296d, 0xb4a4, 0x36ad, 0x1, 0x1);
        gbc.writeMem(0x1ccd, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8424);
        EXPECT(gbc.pc(), 0x1ccf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 0397
        gbc.setState(0xd128, 0x847b, 0xa9d0, 0xade7, 0x6139, 0x6298, 0x1, 0x0);
        gbc.writeMem(0xd128, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x847b);
        EXPECT(gbc.pc(), 0xd12a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd128), 0xcb);
        EXPECT(gbc.readMem(0xd129), 0x45);
        // CB 45 0399
        gbc.setState(0xea90, 0x840a, 0x3a50, 0xd9b0, 0x7e57, 0x9303, 0x0, 0x1);
        gbc.writeMem(0xea90, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x840a);
        EXPECT(gbc.pc(), 0xea92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea90), 0xcb);
        EXPECT(gbc.readMem(0xea91), 0x45);
        // CB 45 039A
        gbc.setState(0x2d08, 0x7349, 0xaff0, 0x585c, 0x5a8b, 0x942c, 0x1, 0x0);
        gbc.writeMem(0x2d08, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7349);
        EXPECT(gbc.pc(), 0x2d0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 039C
        gbc.setState(0xca4a, 0xadba, 0x9340, 0x5577, 0x3e6d, 0x80dd, 0x0, 0x0);
        gbc.writeMem(0xca4a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xadba);
        EXPECT(gbc.pc(), 0xca4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca4a), 0xcb);
        EXPECT(gbc.readMem(0xca4b), 0x45);
        // CB 45 039D
        gbc.setState(0xcc4a, 0x6c72, 0x9b10, 0x745a, 0x70b, 0x9a68, 0x0, 0x0);
        gbc.writeMem(0xcc4a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x6c72);
        EXPECT(gbc.pc(), 0xcc4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc4a), 0xcb);
        EXPECT(gbc.readMem(0xcc4b), 0x45);
        // CB 45 039E
        gbc.setState(0xa3c8, 0x1836, 0xcf20, 0x4115, 0x620f, 0xc5bd, 0x1, 0x0);
        gbc.writeMem(0xa3c8, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1836);
        EXPECT(gbc.pc(), 0xa3ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3c8), 0xcb);
        EXPECT(gbc.readMem(0xa3c9), 0x45);
        // CB 45 039F
        gbc.setState(0xc9f5, 0x9e9, 0xc220, 0x8e2, 0xa81b, 0x3d4c, 0x1, 0x1);
        gbc.writeMem(0xc9f5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9e9);
        EXPECT(gbc.pc(), 0xc9f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9f5), 0xcb);
        EXPECT(gbc.readMem(0xc9f6), 0x45);
        // CB 45 03A0
        gbc.setState(0x8ddc, 0x78b1, 0x2cf0, 0x1b0, 0x1809, 0x2fab, 0x0, 0x0);
        gbc.writeMem(0x8ddc, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x78b1);
        EXPECT(gbc.pc(), 0x8dde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ddc), 0xcb);
        EXPECT(gbc.readMem(0x8ddd), 0x45);
        // CB 45 03A1
        gbc.setState(0x8107, 0x5dc, 0x100, 0x1dbd, 0x7686, 0x9e41, 0x0, 0x1);
        gbc.writeMem(0x8107, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x5dc);
        EXPECT(gbc.pc(), 0x8109);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8107), 0xcb);
        EXPECT(gbc.readMem(0x8108), 0x45);
        // CB 45 03A2
        gbc.setState(0x22b7, 0x2cb8, 0x44a0, 0x9af4, 0x93cc, 0x2f05, 0x1, 0x1);
        gbc.writeMem(0x22b7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2cb8);
        EXPECT(gbc.pc(), 0x22b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 03A3
        gbc.setState(0xee54, 0x262c, 0xa080, 0xe729, 0x8236, 0x3fbf, 0x1, 0x0);
        gbc.writeMem(0xee54, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x262c);
        EXPECT(gbc.pc(), 0xee56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee54), 0xcb);
        EXPECT(gbc.readMem(0xee55), 0x45);
        // CB 45 03A4
        gbc.setState(0x3718, 0x232c, 0xddb0, 0x42ef, 0x5474, 0xac23, 0x1, 0x1);
        gbc.writeMem(0x3718, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x232c);
        EXPECT(gbc.pc(), 0x371a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 03A5
        gbc.setState(0x4d72, 0x7c82, 0x15d0, 0x9732, 0xcfbf, 0x3bd6, 0x0, 0x1);
        gbc.writeMem(0x4d72, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7c82);
        EXPECT(gbc.pc(), 0x4d74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 03A6
        gbc.setState(0x54d7, 0xbc41, 0x5920, 0xca5c, 0xcec0, 0xc531, 0x1, 0x1);
        gbc.writeMem(0x54d7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xbc41);
        EXPECT(gbc.pc(), 0x54d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 03A7
        gbc.setState(0x8481, 0x2d31, 0xf070, 0x973, 0xfb87, 0xd464, 0x1, 0x1);
        gbc.writeMem(0x8481, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2d31);
        EXPECT(gbc.pc(), 0x8483);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8481), 0xcb);
        EXPECT(gbc.readMem(0x8482), 0x45);
        // CB 45 03A8
        gbc.setState(0x367c, 0xa80f, 0xbe40, 0xfc9b, 0x1622, 0xb47e, 0x1, 0x0);
        gbc.writeMem(0x367c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa80f);
        EXPECT(gbc.pc(), 0x367e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 03AA
        gbc.setState(0x202e, 0x49af, 0xa780, 0xc520, 0xa0bb, 0x62cb, 0x0, 0x0);
        gbc.writeMem(0x202e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x49af);
        EXPECT(gbc.pc(), 0x2030);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 03AB
        gbc.setState(0x9964, 0xe251, 0x60a0, 0xda06, 0x158f, 0x733c, 0x0, 0x0);
        gbc.writeMem(0x9964, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe251);
        EXPECT(gbc.pc(), 0x9966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9964), 0xcb);
        EXPECT(gbc.readMem(0x9965), 0x45);
        // CB 45 03AC
        gbc.setState(0x6498, 0x7a8a, 0x780, 0x4dae, 0x9723, 0xf04c, 0x1, 0x0);
        gbc.writeMem(0x6498, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7a8a);
        EXPECT(gbc.pc(), 0x649a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 03AD
        gbc.setState(0x3734, 0x4fc7, 0xbc10, 0xc03e, 0x3501, 0x81c0, 0x1, 0x0);
        gbc.writeMem(0x3734, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4fc7);
        EXPECT(gbc.pc(), 0x3736);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 03AE
        gbc.setState(0x7deb, 0x9c32, 0xaab0, 0x3174, 0x9fdd, 0xa70e, 0x0, 0x1);
        gbc.writeMem(0x7deb, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x9c32);
        EXPECT(gbc.pc(), 0x7ded);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 03AF
        gbc.setState(0xbed8, 0x1a4, 0xbea0, 0x27f7, 0x9f51, 0xe9c0, 0x0, 0x0);
        gbc.writeMem(0xbed8, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x1a4);
        EXPECT(gbc.pc(), 0xbeda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbed8), 0xcb);
        EXPECT(gbc.readMem(0xbed9), 0x45);
        // CB 45 03B0
        gbc.setState(0x5ec7, 0xe383, 0x5050, 0xc2ef, 0xbc13, 0x1751, 0x1, 0x0);
        gbc.writeMem(0x5ec7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe383);
        EXPECT(gbc.pc(), 0x5ec9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 03B1
        gbc.setState(0xd76f, 0x32ff, 0x7cf0, 0x77b3, 0x735d, 0xcaa8, 0x0, 0x0);
        gbc.writeMem(0xd76f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x32ff);
        EXPECT(gbc.pc(), 0xd771);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd76f), 0xcb);
        EXPECT(gbc.readMem(0xd770), 0x45);
        // CB 45 03B2
        gbc.setState(0xb6d8, 0xb0cf, 0x8080, 0xd96e, 0xcf94, 0xe93a, 0x0, 0x1);
        gbc.writeMem(0xb6d8, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb0cf);
        EXPECT(gbc.pc(), 0xb6da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6d8), 0xcb);
        EXPECT(gbc.readMem(0xb6d9), 0x45);
        // CB 45 03B3
        gbc.setState(0xc7f2, 0xa6c3, 0x80f0, 0xca02, 0x1cbb, 0x77d4, 0x1, 0x0);
        gbc.writeMem(0xc7f2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa6c3);
        EXPECT(gbc.pc(), 0xc7f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7f2), 0xcb);
        EXPECT(gbc.readMem(0xc7f3), 0x45);
        // CB 45 03B4
        gbc.setState(0x5dd, 0x431e, 0x3390, 0x7ad6, 0xee3f, 0x94af, 0x1, 0x1);
        gbc.writeMem(0x5dd, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x431e);
        EXPECT(gbc.pc(), 0x5df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 03B5
        gbc.setState(0xd5e4, 0xb7d8, 0x2250, 0x5bb2, 0x9bfc, 0x12a4, 0x0, 0x0);
        gbc.writeMem(0xd5e4, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb7d8);
        EXPECT(gbc.pc(), 0xd5e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5e4), 0xcb);
        EXPECT(gbc.readMem(0xd5e5), 0x45);
        // CB 45 03B6
        gbc.setState(0x5e4a, 0x67a9, 0x940, 0xa6a9, 0xe753, 0xfd25, 0x1, 0x0);
        gbc.writeMem(0x5e4a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x67a9);
        EXPECT(gbc.pc(), 0x5e4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 03B7
        gbc.setState(0x1fd5, 0xf65d, 0xb800, 0x4038, 0xe63a, 0x5202, 0x0, 0x0);
        gbc.writeMem(0x1fd5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xf65d);
        EXPECT(gbc.pc(), 0x1fd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 03B8
        gbc.setState(0xd153, 0x4c4, 0x10c0, 0xee9c, 0x53cb, 0xe4d6, 0x1, 0x0);
        gbc.writeMem(0xd153, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4c4);
        EXPECT(gbc.pc(), 0xd155);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd153), 0xcb);
        EXPECT(gbc.readMem(0xd154), 0x45);
        // CB 45 03B9
        gbc.setState(0x18b5, 0x67ce, 0x1850, 0x7766, 0x523a, 0x6dda, 0x1, 0x0);
        gbc.writeMem(0x18b5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x67ce);
        EXPECT(gbc.pc(), 0x18b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 03BB
        gbc.setState(0xbe3a, 0x144, 0xc2e0, 0xc354, 0x5a58, 0x9330, 0x1, 0x0);
        gbc.writeMem(0xbe3a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x144);
        EXPECT(gbc.pc(), 0xbe3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe3a), 0xcb);
        EXPECT(gbc.readMem(0xbe3b), 0x45);
        // CB 45 03BC
        gbc.setState(0x969a, 0x3a00, 0x19f0, 0x6edb, 0x5483, 0x7b83, 0x1, 0x0);
        gbc.writeMem(0x969a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3a00);
        EXPECT(gbc.pc(), 0x969c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x969a), 0xcb);
        EXPECT(gbc.readMem(0x969b), 0x45);
        // CB 45 03BF
        gbc.setState(0xaac4, 0xd898, 0xab70, 0x2bc5, 0xf30b, 0xe1c, 0x0, 0x1);
        gbc.writeMem(0xaac4, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd898);
        EXPECT(gbc.pc(), 0xaac6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaac4), 0xcb);
        EXPECT(gbc.readMem(0xaac5), 0x45);
        // CB 45 03C0
        gbc.setState(0x7fa5, 0x9437, 0xf280, 0xe96d, 0x22e0, 0xa8a3, 0x0, 0x0);
        gbc.writeMem(0x7fa5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9437);
        EXPECT(gbc.pc(), 0x7fa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 03C1
        gbc.setState(0x22d3, 0x849f, 0xd340, 0x8ec5, 0x89b2, 0x4339, 0x0, 0x0);
        gbc.writeMem(0x22d3, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x849f);
        EXPECT(gbc.pc(), 0x22d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 03C2
        gbc.setState(0x2bc9, 0x6964, 0xd2b0, 0x640a, 0xf060, 0x4836, 0x0, 0x0);
        gbc.writeMem(0x2bc9, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6964);
        EXPECT(gbc.pc(), 0x2bcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 03C3
        gbc.setState(0x1e1a, 0xf7f9, 0xcce0, 0x2866, 0xef2a, 0x5a31, 0x0, 0x1);
        gbc.writeMem(0x1e1a, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf7f9);
        EXPECT(gbc.pc(), 0x1e1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 03C4
        gbc.setState(0x2cab, 0xa853, 0x6e50, 0x7515, 0xefd0, 0x1856, 0x1, 0x0);
        gbc.writeMem(0x2cab, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xa853);
        EXPECT(gbc.pc(), 0x2cad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 03C5
        gbc.setState(0x288c, 0xe02a, 0x1e50, 0xbb34, 0x6e75, 0x2514, 0x1, 0x1);
        gbc.writeMem(0x288c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xe02a);
        EXPECT(gbc.pc(), 0x288e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 03C6
        gbc.setState(0xd984, 0x5b17, 0x6a60, 0x4a5b, 0x164, 0x804e, 0x0, 0x0);
        gbc.writeMem(0xd984, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5b17);
        EXPECT(gbc.pc(), 0xd986);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd984), 0xcb);
        EXPECT(gbc.readMem(0xd985), 0x45);
        // CB 45 03C7
        gbc.setState(0x26b0, 0x9a28, 0x4280, 0x35aa, 0x476d, 0x556b, 0x0, 0x0);
        gbc.writeMem(0x26b0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x9a28);
        EXPECT(gbc.pc(), 0x26b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 03C8
        gbc.setState(0x9092, 0xacfb, 0xd390, 0x5b39, 0x4e2b, 0x20c4, 0x1, 0x0);
        gbc.writeMem(0x9092, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xacfb);
        EXPECT(gbc.pc(), 0x9094);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9092), 0xcb);
        EXPECT(gbc.readMem(0x9093), 0x45);
        // CB 45 03C9
        gbc.setState(0x6f22, 0xc8bc, 0x9520, 0xc266, 0xa401, 0xf28f, 0x1, 0x0);
        gbc.writeMem(0x6f22, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc8bc);
        EXPECT(gbc.pc(), 0x6f24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 03CA
        gbc.setState(0x85d5, 0xb8b, 0x3f20, 0x93ca, 0xfee3, 0xc73f, 0x0, 0x1);
        gbc.writeMem(0x85d5, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb8b);
        EXPECT(gbc.pc(), 0x85d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85d5), 0xcb);
        EXPECT(gbc.readMem(0x85d6), 0x45);
        // CB 45 03CC
        gbc.setState(0x4a10, 0x8691, 0x6080, 0x49ca, 0x287e, 0x2f72, 0x0, 0x1);
        gbc.writeMem(0x4a10, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8691);
        EXPECT(gbc.pc(), 0x4a12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 03CD
        gbc.setState(0xac28, 0xcb2d, 0x4490, 0xdffe, 0x57c8, 0x6a16, 0x1, 0x0);
        gbc.writeMem(0xac28, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xcb2d);
        EXPECT(gbc.pc(), 0xac2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac28), 0xcb);
        EXPECT(gbc.readMem(0xac29), 0x45);
        // CB 45 03CE
        gbc.setState(0x33d, 0x8b5c, 0x2d40, 0x5f2d, 0x4620, 0xfec2, 0x0, 0x1);
        gbc.writeMem(0x33d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8b5c);
        EXPECT(gbc.pc(), 0x33f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 03CF
        gbc.setState(0x114f, 0x7ec1, 0xf980, 0xc93a, 0xb4, 0x5e33, 0x1, 0x0);
        gbc.writeMem(0x114f, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7ec1);
        EXPECT(gbc.pc(), 0x1151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 03D1
        gbc.setState(0xa5ab, 0x1623, 0x45f0, 0xcdd, 0x7477, 0x9b89, 0x1, 0x0);
        gbc.writeMem(0xa5ab, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1623);
        EXPECT(gbc.pc(), 0xa5ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5ab), 0xcb);
        EXPECT(gbc.readMem(0xa5ac), 0x45);
        // CB 45 03D2
        gbc.setState(0x42aa, 0x8c25, 0x59d0, 0x5f87, 0xc2a3, 0x4fad, 0x1, 0x0);
        gbc.writeMem(0x42aa, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8c25);
        EXPECT(gbc.pc(), 0x42ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 03D4
        gbc.setState(0xe750, 0xdacd, 0xb500, 0x260, 0x6ad2, 0x1b09, 0x0, 0x1);
        gbc.writeMem(0xe750, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xdacd);
        EXPECT(gbc.pc(), 0xe752);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe750), 0xcb);
        EXPECT(gbc.readMem(0xe751), 0x45);
        // CB 45 03D5
        gbc.setState(0x1f5b, 0xb412, 0xc800, 0x18bf, 0xe302, 0x5ca2, 0x1, 0x1);
        gbc.writeMem(0x1f5b, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb412);
        EXPECT(gbc.pc(), 0x1f5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 03D6
        gbc.setState(0x8e4d, 0x1229, 0x3ff0, 0x982a, 0x4f7c, 0x66c4, 0x1, 0x0);
        gbc.writeMem(0x8e4d, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1229);
        EXPECT(gbc.pc(), 0x8e4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e4d), 0xcb);
        EXPECT(gbc.readMem(0x8e4e), 0x45);
        // CB 45 03D8
        gbc.setState(0xefd7, 0xe682, 0x69e0, 0x8e28, 0xa9ea, 0x2fbe, 0x0, 0x0);
        gbc.writeMem(0xefd7, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe682);
        EXPECT(gbc.pc(), 0xefd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefd7), 0xcb);
        EXPECT(gbc.readMem(0xefd8), 0x45);
        // CB 45 03D9
        gbc.setState(0xc259, 0xa3dd, 0x8310, 0x30b1, 0x7d23, 0xade7, 0x0, 0x0);
        gbc.writeMem(0xc259, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa3dd);
        EXPECT(gbc.pc(), 0xc25b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc259), 0xcb);
        EXPECT(gbc.readMem(0xc25a), 0x45);
        // CB 45 03DA
        gbc.setState(0x1f15, 0x217c, 0xe860, 0xfb33, 0xbf85, 0x2d02, 0x1, 0x0);
        gbc.writeMem(0x1f15, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x217c);
        EXPECT(gbc.pc(), 0x1f17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 03DB
        gbc.setState(0x3a7c, 0xea84, 0x6d30, 0xe34a, 0x29e2, 0xd602, 0x0, 0x1);
        gbc.writeMem(0x3a7c, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xea84);
        EXPECT(gbc.pc(), 0x3a7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 03DC
        gbc.setState(0x37b2, 0x8268, 0x8060, 0xab3a, 0xf006, 0xa8a0, 0x1, 0x0);
        gbc.writeMem(0x37b2, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x8268);
        EXPECT(gbc.pc(), 0x37b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 03DD
        gbc.setState(0xe210, 0x7273, 0x31a0, 0x4b19, 0xbca2, 0x5a84, 0x0, 0x0);
        gbc.writeMem(0xe210, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7273);
        EXPECT(gbc.pc(), 0xe212);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe210), 0xcb);
        EXPECT(gbc.readMem(0xe211), 0x45);
        // CB 45 03DE
        gbc.setState(0x18ce, 0xfb10, 0x9490, 0x544e, 0xd3e4, 0x826b, 0x1, 0x0);
        gbc.writeMem(0x18ce, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xfb10);
        EXPECT(gbc.pc(), 0x18d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 03DF
        gbc.setState(0xb3a3, 0x32b3, 0x6920, 0x672d, 0x8a21, 0x6e04, 0x0, 0x0);
        gbc.writeMem(0xb3a3, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x32b3);
        EXPECT(gbc.pc(), 0xb3a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3a3), 0xcb);
        EXPECT(gbc.readMem(0xb3a4), 0x45);
        // CB 45 03E0
        gbc.setState(0x32bf, 0xffb, 0x8710, 0xd04a, 0x6be7, 0x136c, 0x0, 0x1);
        gbc.writeMem(0x32bf, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xffb);
        EXPECT(gbc.pc(), 0x32c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 03E1
        gbc.setState(0xceeb, 0x7a32, 0x8c90, 0x5a0b, 0x6e63, 0xda4a, 0x0, 0x1);
        gbc.writeMem(0xceeb, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7a32);
        EXPECT(gbc.pc(), 0xceed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceeb), 0xcb);
        EXPECT(gbc.readMem(0xceec), 0x45);
        // CB 45 03E2
        gbc.setState(0xac64, 0xee78, 0xc5d0, 0xb5a2, 0x3ab2, 0xa53d, 0x0, 0x1);
        gbc.writeMem(0xac64, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xee78);
        EXPECT(gbc.pc(), 0xac66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac64), 0xcb);
        EXPECT(gbc.readMem(0xac65), 0x45);
        // CB 45 03E3
        gbc.setState(0x68e0, 0x60b2, 0xdff0, 0x8350, 0x3216, 0xefad, 0x1, 0x0);
        gbc.writeMem(0x68e0, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x60b2);
        EXPECT(gbc.pc(), 0x68e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 45 03E4
        gbc.setState(0x584e, 0xd622, 0x9040, 0x4e27, 0x2c58, 0xfa34, 0x0, 0x0);
        gbc.writeMem(0x584e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd622);
        EXPECT(gbc.pc(), 0x5850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 45 03E5
        gbc.setState(0xde3e, 0x9ff3, 0xc900, 0x3d13, 0x7f7d, 0x762f, 0x0, 0x1);
        gbc.writeMem(0xde3e, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9ff3);
        EXPECT(gbc.pc(), 0xde40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde3e), 0xcb);
        EXPECT(gbc.readMem(0xde3f), 0x45);
        // CB 45 03E6
        gbc.setState(0xe878, 0x7616, 0x3680, 0x9f2a, 0xc8f0, 0x7b65, 0x1, 0x0);
        gbc.writeMem(0xe878, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x7616);
        EXPECT(gbc.pc(), 0xe87a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe878), 0xcb);
        EXPECT(gbc.readMem(0xe879), 0x45);
        // CB 45 03E7
        gbc.setState(0xbabc, 0x88e3, 0xfb40, 0x2b67, 0x4082, 0xaafc, 0x0, 0x1);
        gbc.writeMem(0xbabc, { 0xcb, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x88e3);
        EXPECT(gbc.pc(), 0xbabe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbabc), 0xcb);
        EXPECT(gbc.readMem(0xbabd), 0x45);
    }
}
#endif
