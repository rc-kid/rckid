    TEST(gbcemu, opcode_cb_d0) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB D0 0000
        gbc.setState(0x262d, 0x984e, 0xfc0, 0x2898, 0x7a35, 0xae90, 0x1, 0x1);
        gbc.writeMem(0x262d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x984e);
        EXPECT(gbc.pc(), 0x262f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0002
        gbc.setState(0x3b10, 0x7d7d, 0xc270, 0xa8ee, 0x7df6, 0xd86d, 0x1, 0x0);
        gbc.writeMem(0x3b10, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7d7d);
        EXPECT(gbc.pc(), 0x3b12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0003
        gbc.setState(0x9555, 0x3dc4, 0xbbd0, 0x4a9e, 0xe53a, 0xac79, 0x0, 0x1);
        gbc.writeMem(0x9555, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x3dc4);
        EXPECT(gbc.pc(), 0x9557);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9555), 0xcb);
        EXPECT(gbc.readMem(0x9556), 0xd0);
        // CB D0 0004
        gbc.setState(0xcd44, 0x957b, 0x120, 0x29c8, 0xecd5, 0x1203, 0x0, 0x0);
        gbc.writeMem(0xcd44, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x957b);
        EXPECT(gbc.pc(), 0xcd46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd44), 0xcb);
        EXPECT(gbc.readMem(0xcd45), 0xd0);
        // CB D0 0005
        gbc.setState(0xdc87, 0x1679, 0x7f60, 0x9dc5, 0x1d7d, 0x66a7, 0x0, 0x0);
        gbc.writeMem(0xdc87, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x1679);
        EXPECT(gbc.pc(), 0xdc89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc87), 0xcb);
        EXPECT(gbc.readMem(0xdc88), 0xd0);
        // CB D0 0006
        gbc.setState(0x5c86, 0xd5af, 0x68b0, 0x1d56, 0xb36f, 0xe874, 0x1, 0x1);
        gbc.writeMem(0x5c86, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd5af);
        EXPECT(gbc.pc(), 0x5c88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0007
        gbc.setState(0xe3ec, 0x25fb, 0x76f0, 0xd144, 0xd7b5, 0x451b, 0x0, 0x1);
        gbc.writeMem(0xe3ec, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x25fb);
        EXPECT(gbc.pc(), 0xe3ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ec), 0xcb);
        EXPECT(gbc.readMem(0xe3ed), 0xd0);
        // CB D0 0008
        gbc.setState(0xdb3a, 0x7bc2, 0x1060, 0x8fab, 0xfe5b, 0xf37d, 0x1, 0x1);
        gbc.writeMem(0xdb3a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7bc2);
        EXPECT(gbc.pc(), 0xdb3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb3a), 0xcb);
        EXPECT(gbc.readMem(0xdb3b), 0xd0);
        // CB D0 0009
        gbc.setState(0x2bc1, 0x382f, 0xe5c0, 0x991f, 0x8414, 0x249e, 0x1, 0x1);
        gbc.writeMem(0x2bc1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x382f);
        EXPECT(gbc.pc(), 0x2bc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 000A
        gbc.setState(0x8666, 0x79c0, 0x36e0, 0xe09d, 0x3a8, 0x2d55, 0x0, 0x0);
        gbc.writeMem(0x8666, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x79c0);
        EXPECT(gbc.pc(), 0x8668);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8666), 0xcb);
        EXPECT(gbc.readMem(0x8667), 0xd0);
        // CB D0 000B
        gbc.setState(0x527a, 0xc03d, 0x7c00, 0x5277, 0x23c, 0x843b, 0x1, 0x1);
        gbc.writeMem(0x527a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc03d);
        EXPECT(gbc.pc(), 0x527c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 000C
        gbc.setState(0x9dd0, 0x3b64, 0x2cd0, 0xaabb, 0x918c, 0xb411, 0x0, 0x1);
        gbc.writeMem(0x9dd0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x3b64);
        EXPECT(gbc.pc(), 0x9dd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dd0), 0xcb);
        EXPECT(gbc.readMem(0x9dd1), 0xd0);
        // CB D0 000D
        gbc.setState(0x2ea5, 0x1b06, 0x47a0, 0xdcb2, 0xeb26, 0xbabd, 0x1, 0x1);
        gbc.writeMem(0x2ea5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1b06);
        EXPECT(gbc.pc(), 0x2ea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 000E
        gbc.setState(0x5765, 0x3d04, 0x6510, 0x7c75, 0x10b, 0xed5c, 0x1, 0x0);
        gbc.writeMem(0x5765, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x3d04);
        EXPECT(gbc.pc(), 0x5767);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 000F
        gbc.setState(0x5351, 0x5bb, 0x4600, 0xb3ef, 0xa55b, 0x41d7, 0x0, 0x1);
        gbc.writeMem(0x5351, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x5bb);
        EXPECT(gbc.pc(), 0x5353);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0010
        gbc.setState(0x55b2, 0x5013, 0x5e60, 0x253e, 0x64f0, 0xc625, 0x1, 0x1);
        gbc.writeMem(0x55b2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5013);
        EXPECT(gbc.pc(), 0x55b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0011
        gbc.setState(0xeeb1, 0x7b95, 0x4590, 0xb3ee, 0xd996, 0x6160, 0x0, 0x0);
        gbc.writeMem(0xeeb1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7b95);
        EXPECT(gbc.pc(), 0xeeb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeb1), 0xcb);
        EXPECT(gbc.readMem(0xeeb2), 0xd0);
        // CB D0 0012
        gbc.setState(0xebcd, 0xf3a9, 0x5d50, 0xba0c, 0x5fc9, 0xd75f, 0x0, 0x0);
        gbc.writeMem(0xebcd, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf3a9);
        EXPECT(gbc.pc(), 0xebcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebcd), 0xcb);
        EXPECT(gbc.readMem(0xebce), 0xd0);
        // CB D0 0013
        gbc.setState(0xd1b8, 0xfc37, 0x1f90, 0xa332, 0x220d, 0x1b01, 0x0, 0x0);
        gbc.writeMem(0xd1b8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xfc37);
        EXPECT(gbc.pc(), 0xd1ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1b8), 0xcb);
        EXPECT(gbc.readMem(0xd1b9), 0xd0);
        // CB D0 0014
        gbc.setState(0x806d, 0x3077, 0x57e0, 0x5c61, 0x52dc, 0x3645, 0x1, 0x0);
        gbc.writeMem(0x806d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3077);
        EXPECT(gbc.pc(), 0x806f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x806d), 0xcb);
        EXPECT(gbc.readMem(0x806e), 0xd0);
        // CB D0 0015
        gbc.setState(0x582f, 0x136b, 0x9a60, 0x2c6c, 0x84fe, 0xd382, 0x1, 0x0);
        gbc.writeMem(0x582f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x136b);
        EXPECT(gbc.pc(), 0x5831);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0016
        gbc.setState(0x8d39, 0x3676, 0x86b0, 0x36e4, 0x6b, 0xdff, 0x1, 0x1);
        gbc.writeMem(0x8d39, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x3676);
        EXPECT(gbc.pc(), 0x8d3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d39), 0xcb);
        EXPECT(gbc.readMem(0x8d3a), 0xd0);
        // CB D0 0017
        gbc.setState(0x247d, 0x2504, 0x9770, 0xb8db, 0x48e3, 0xc786, 0x1, 0x0);
        gbc.writeMem(0x247d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x2504);
        EXPECT(gbc.pc(), 0x247f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0018
        gbc.setState(0xdb1b, 0x86e7, 0xeb10, 0x84c0, 0xd1d6, 0xf937, 0x1, 0x0);
        gbc.writeMem(0xdb1b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x86e7);
        EXPECT(gbc.pc(), 0xdb1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb1b), 0xcb);
        EXPECT(gbc.readMem(0xdb1c), 0xd0);
        // CB D0 0019
        gbc.setState(0xc49f, 0x9952, 0x69b0, 0x2502, 0x8ce, 0x3616, 0x0, 0x1);
        gbc.writeMem(0xc49f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9952);
        EXPECT(gbc.pc(), 0xc4a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc49f), 0xcb);
        EXPECT(gbc.readMem(0xc4a0), 0xd0);
        // CB D0 001A
        gbc.setState(0xd24e, 0x3d86, 0xc500, 0xe06f, 0x7d24, 0x3f2f, 0x1, 0x0);
        gbc.writeMem(0xd24e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x3d86);
        EXPECT(gbc.pc(), 0xd250);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd24e), 0xcb);
        EXPECT(gbc.readMem(0xd24f), 0xd0);
        // CB D0 001B
        gbc.setState(0x920a, 0x393c, 0xed90, 0xa5f4, 0x2105, 0x7641, 0x1, 0x0);
        gbc.writeMem(0x920a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x393c);
        EXPECT(gbc.pc(), 0x920c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x920a), 0xcb);
        EXPECT(gbc.readMem(0x920b), 0xd0);
        // CB D0 001C
        gbc.setState(0xcac4, 0x6a0, 0xce0, 0x7f2, 0x6437, 0xd979, 0x1, 0x1);
        gbc.writeMem(0xcac4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6a0);
        EXPECT(gbc.pc(), 0xcac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcac4), 0xcb);
        EXPECT(gbc.readMem(0xcac5), 0xd0);
        // CB D0 001E
        gbc.setState(0xc517, 0xdef7, 0x9780, 0xcd50, 0x194a, 0x6619, 0x0, 0x0);
        gbc.writeMem(0xc517, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xdef7);
        EXPECT(gbc.pc(), 0xc519);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc517), 0xcb);
        EXPECT(gbc.readMem(0xc518), 0xd0);
        // CB D0 001F
        gbc.setState(0xcab4, 0x85d0, 0xb570, 0x53c9, 0x644f, 0xc0eb, 0x0, 0x1);
        gbc.writeMem(0xcab4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x85d0);
        EXPECT(gbc.pc(), 0xcab6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcab4), 0xcb);
        EXPECT(gbc.readMem(0xcab5), 0xd0);
        // CB D0 0020
        gbc.setState(0x7d41, 0x68ff, 0x9790, 0xc886, 0x6bfb, 0x222a, 0x0, 0x1);
        gbc.writeMem(0x7d41, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x68ff);
        EXPECT(gbc.pc(), 0x7d43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0021
        gbc.setState(0x8046, 0x679e, 0x2aa0, 0xf169, 0x6093, 0x4207, 0x1, 0x0);
        gbc.writeMem(0x8046, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x679e);
        EXPECT(gbc.pc(), 0x8048);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8046), 0xcb);
        EXPECT(gbc.readMem(0x8047), 0xd0);
        // CB D0 0022
        gbc.setState(0x7aca, 0x939b, 0x10c0, 0x4f79, 0x8646, 0x2062, 0x1, 0x0);
        gbc.writeMem(0x7aca, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x939b);
        EXPECT(gbc.pc(), 0x7acc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0023
        gbc.setState(0x488e, 0xc6f3, 0xa80, 0xbeb7, 0xec25, 0xcaa9, 0x1, 0x1);
        gbc.writeMem(0x488e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xc6f3);
        EXPECT(gbc.pc(), 0x4890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0025
        gbc.setState(0xd37, 0x100, 0xfeb0, 0xfa1a, 0x72aa, 0x447f, 0x1, 0x1);
        gbc.writeMem(0xd37, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x100);
        EXPECT(gbc.pc(), 0xd39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0026
        gbc.setState(0x42f2, 0x5a38, 0xe750, 0xf337, 0xd291, 0x504b, 0x0, 0x0);
        gbc.writeMem(0x42f2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5a38);
        EXPECT(gbc.pc(), 0x42f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0027
        gbc.setState(0xda50, 0xe914, 0x9b50, 0x815e, 0x4b08, 0xc575, 0x0, 0x1);
        gbc.writeMem(0xda50, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe914);
        EXPECT(gbc.pc(), 0xda52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda50), 0xcb);
        EXPECT(gbc.readMem(0xda51), 0xd0);
        // CB D0 0028
        gbc.setState(0xc70d, 0xcea0, 0xf0a0, 0xf5f8, 0x58a7, 0xbcd0, 0x1, 0x0);
        gbc.writeMem(0xc70d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xcea0);
        EXPECT(gbc.pc(), 0xc70f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc70d), 0xcb);
        EXPECT(gbc.readMem(0xc70e), 0xd0);
        // CB D0 0029
        gbc.setState(0x21a8, 0x250c, 0x5530, 0x4481, 0x2c8, 0xc642, 0x0, 0x0);
        gbc.writeMem(0x21a8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x250c);
        EXPECT(gbc.pc(), 0x21aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 002A
        gbc.setState(0xadc5, 0x29ab, 0xe160, 0x182c, 0x4262, 0x36ad, 0x1, 0x1);
        gbc.writeMem(0xadc5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x29ab);
        EXPECT(gbc.pc(), 0xadc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadc5), 0xcb);
        EXPECT(gbc.readMem(0xadc6), 0xd0);
        // CB D0 002B
        gbc.setState(0x6313, 0x4405, 0xe7e0, 0x924c, 0xa766, 0x8bc2, 0x1, 0x0);
        gbc.writeMem(0x6313, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4405);
        EXPECT(gbc.pc(), 0x6315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 002C
        gbc.setState(0x9114, 0xa39b, 0x8600, 0x1c1b, 0x21bb, 0x873c, 0x1, 0x0);
        gbc.writeMem(0x9114, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa39b);
        EXPECT(gbc.pc(), 0x9116);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9114), 0xcb);
        EXPECT(gbc.readMem(0x9115), 0xd0);
        // CB D0 002D
        gbc.setState(0x8da2, 0x7d3a, 0x1b00, 0xd0fb, 0xedb5, 0x885b, 0x1, 0x1);
        gbc.writeMem(0x8da2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7d3a);
        EXPECT(gbc.pc(), 0x8da4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8da2), 0xcb);
        EXPECT(gbc.readMem(0x8da3), 0xd0);
        // CB D0 002E
        gbc.setState(0xca69, 0x1b2c, 0xc7f0, 0x528f, 0x1754, 0x834, 0x1, 0x0);
        gbc.writeMem(0xca69, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1b2c);
        EXPECT(gbc.pc(), 0xca6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca69), 0xcb);
        EXPECT(gbc.readMem(0xca6a), 0xd0);
        // CB D0 002F
        gbc.setState(0xcc45, 0x27d2, 0x3b40, 0x6c3b, 0xa493, 0xf181, 0x0, 0x1);
        gbc.writeMem(0xcc45, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x27d2);
        EXPECT(gbc.pc(), 0xcc47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc45), 0xcb);
        EXPECT(gbc.readMem(0xcc46), 0xd0);
        // CB D0 0030
        gbc.setState(0x6301, 0x6c0a, 0x2570, 0x8a9f, 0x3c6a, 0x6622, 0x1, 0x0);
        gbc.writeMem(0x6301, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6c0a);
        EXPECT(gbc.pc(), 0x6303);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0031
        gbc.setState(0x7f32, 0xbaa5, 0x2760, 0x75f9, 0xe3c0, 0x6494, 0x0, 0x0);
        gbc.writeMem(0x7f32, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xbaa5);
        EXPECT(gbc.pc(), 0x7f34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0032
        gbc.setState(0x6421, 0x8522, 0xecc0, 0x6767, 0xe99f, 0xed9, 0x0, 0x0);
        gbc.writeMem(0x6421, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x8522);
        EXPECT(gbc.pc(), 0x6423);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0033
        gbc.setState(0x743f, 0x6281, 0x2a40, 0x6a3c, 0x7c08, 0x318f, 0x1, 0x1);
        gbc.writeMem(0x743f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6281);
        EXPECT(gbc.pc(), 0x7441);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0035
        gbc.setState(0x16e3, 0x4c3d, 0x9280, 0xe516, 0xfe1d, 0x3917, 0x0, 0x0);
        gbc.writeMem(0x16e3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x4c3d);
        EXPECT(gbc.pc(), 0x16e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0036
        gbc.setState(0x88e1, 0xf021, 0xd8f0, 0x2dee, 0xa599, 0x54f, 0x0, 0x1);
        gbc.writeMem(0x88e1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf021);
        EXPECT(gbc.pc(), 0x88e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88e1), 0xcb);
        EXPECT(gbc.readMem(0x88e2), 0xd0);
        // CB D0 0037
        gbc.setState(0xe33b, 0xf5bb, 0xc8e0, 0xd1f, 0xc5b4, 0x52ba, 0x1, 0x1);
        gbc.writeMem(0xe33b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xf5bb);
        EXPECT(gbc.pc(), 0xe33d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe33b), 0xcb);
        EXPECT(gbc.readMem(0xe33c), 0xd0);
        // CB D0 0038
        gbc.setState(0x6a07, 0x10a3, 0x2760, 0xf007, 0x325c, 0x1fda, 0x0, 0x0);
        gbc.writeMem(0x6a07, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x10a3);
        EXPECT(gbc.pc(), 0x6a09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0039
        gbc.setState(0xddd9, 0x4ba6, 0xc260, 0xb9fb, 0x4005, 0xb511, 0x0, 0x0);
        gbc.writeMem(0xddd9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x4ba6);
        EXPECT(gbc.pc(), 0xdddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddd9), 0xcb);
        EXPECT(gbc.readMem(0xddda), 0xd0);
        // CB D0 003A
        gbc.setState(0x78e3, 0xc6f0, 0x2f30, 0x90fc, 0x56a1, 0xa4ce, 0x0, 0x1);
        gbc.writeMem(0x78e3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xc6f0);
        EXPECT(gbc.pc(), 0x78e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 003B
        gbc.setState(0x5c1a, 0x2463, 0x1700, 0x3566, 0x74b5, 0x1e38, 0x1, 0x1);
        gbc.writeMem(0x5c1a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2463);
        EXPECT(gbc.pc(), 0x5c1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 003C
        gbc.setState(0x2a6d, 0xf280, 0xa1a0, 0xfd93, 0xe10d, 0xc937, 0x1, 0x1);
        gbc.writeMem(0x2a6d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf280);
        EXPECT(gbc.pc(), 0x2a6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 003D
        gbc.setState(0x59d1, 0xefc9, 0x4d0, 0x98e5, 0xcfed, 0xb7c3, 0x1, 0x1);
        gbc.writeMem(0x59d1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xefc9);
        EXPECT(gbc.pc(), 0x59d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 003E
        gbc.setState(0x2b23, 0xae9e, 0x6670, 0xeb5d, 0xebff, 0x814c, 0x0, 0x1);
        gbc.writeMem(0x2b23, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xae9e);
        EXPECT(gbc.pc(), 0x2b25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 003F
        gbc.setState(0x452c, 0x90a5, 0x5870, 0x55eb, 0x119, 0x25fc, 0x1, 0x0);
        gbc.writeMem(0x452c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x90a5);
        EXPECT(gbc.pc(), 0x452e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0040
        gbc.setState(0x69b7, 0x467f, 0xafe0, 0x3ad, 0x58d7, 0x4f23, 0x1, 0x1);
        gbc.writeMem(0x69b7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x467f);
        EXPECT(gbc.pc(), 0x69b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0041
        gbc.setState(0x5c68, 0xdb44, 0x9ac0, 0x72c9, 0x1764, 0xb355, 0x1, 0x0);
        gbc.writeMem(0x5c68, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xdb44);
        EXPECT(gbc.pc(), 0x5c6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0042
        gbc.setState(0xb374, 0xab4, 0xc560, 0x5841, 0x3b4d, 0x4b4b, 0x0, 0x1);
        gbc.writeMem(0xb374, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xab4);
        EXPECT(gbc.pc(), 0xb376);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb374), 0xcb);
        EXPECT(gbc.readMem(0xb375), 0xd0);
        // CB D0 0043
        gbc.setState(0x76b2, 0x459d, 0xcac0, 0x3698, 0x9725, 0xaac6, 0x1, 0x0);
        gbc.writeMem(0x76b2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x459d);
        EXPECT(gbc.pc(), 0x76b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0044
        gbc.setState(0x7c4c, 0x5f20, 0x300, 0xb311, 0xc772, 0xa2ca, 0x1, 0x0);
        gbc.writeMem(0x7c4c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5f20);
        EXPECT(gbc.pc(), 0x7c4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0046
        gbc.setState(0x82e, 0xcd59, 0x2760, 0xa251, 0x64a8, 0x46f8, 0x0, 0x0);
        gbc.writeMem(0x82e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xcd59);
        EXPECT(gbc.pc(), 0x830);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0047
        gbc.setState(0xa6a8, 0x19b8, 0xc770, 0x4d82, 0x20e3, 0x69cf, 0x0, 0x0);
        gbc.writeMem(0xa6a8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x19b8);
        EXPECT(gbc.pc(), 0xa6aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6a8), 0xcb);
        EXPECT(gbc.readMem(0xa6a9), 0xd0);
        // CB D0 0048
        gbc.setState(0x507, 0xd328, 0x7300, 0xb610, 0x93c8, 0x498f, 0x1, 0x1);
        gbc.writeMem(0x507, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xd328);
        EXPECT(gbc.pc(), 0x509);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0049
        gbc.setState(0x7643, 0x79d1, 0xbd0, 0x4d9f, 0x5f0b, 0xaa46, 0x0, 0x1);
        gbc.writeMem(0x7643, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x79d1);
        EXPECT(gbc.pc(), 0x7645);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 004B
        gbc.setState(0x5ac, 0xb0e, 0x7100, 0x954, 0x9e06, 0xfd8a, 0x0, 0x1);
        gbc.writeMem(0x5ac, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb0e);
        EXPECT(gbc.pc(), 0x5ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 004C
        gbc.setState(0x57e, 0x104f, 0x2ce0, 0x3b8, 0x4ce9, 0x47ac, 0x0, 0x1);
        gbc.writeMem(0x57e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x104f);
        EXPECT(gbc.pc(), 0x580);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 004D
        gbc.setState(0x5e41, 0xe333, 0x5180, 0x4b77, 0xe0a2, 0x4dba, 0x1, 0x0);
        gbc.writeMem(0x5e41, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xe333);
        EXPECT(gbc.pc(), 0x5e43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 004E
        gbc.setState(0xcb7f, 0x5ac, 0xe00, 0x77f9, 0xa80f, 0xe66a, 0x1, 0x0);
        gbc.writeMem(0xcb7f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x5ac);
        EXPECT(gbc.pc(), 0xcb81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb7f), 0xcb);
        EXPECT(gbc.readMem(0xcb80), 0xd0);
        // CB D0 0050
        gbc.setState(0x1a5d, 0x5bc8, 0xf580, 0x53a6, 0xb6c3, 0xfe50, 0x0, 0x1);
        gbc.writeMem(0x1a5d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5bc8);
        EXPECT(gbc.pc(), 0x1a5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0051
        gbc.setState(0xd165, 0xbb53, 0x8e40, 0x68fc, 0xec90, 0x6de7, 0x1, 0x0);
        gbc.writeMem(0xd165, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xbb53);
        EXPECT(gbc.pc(), 0xd167);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd165), 0xcb);
        EXPECT(gbc.readMem(0xd166), 0xd0);
        // CB D0 0052
        gbc.setState(0x765a, 0x3503, 0x2860, 0x2eaf, 0xac88, 0x5860, 0x0, 0x1);
        gbc.writeMem(0x765a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3503);
        EXPECT(gbc.pc(), 0x765c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0054
        gbc.setState(0xe5d4, 0x4f0, 0xb680, 0xe23f, 0x78ed, 0xcfe7, 0x1, 0x0);
        gbc.writeMem(0xe5d4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4f0);
        EXPECT(gbc.pc(), 0xe5d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5d4), 0xcb);
        EXPECT(gbc.readMem(0xe5d5), 0xd0);
        // CB D0 0055
        gbc.setState(0x5cd4, 0x2f47, 0xceb0, 0x1ee7, 0x85cd, 0xd23f, 0x0, 0x0);
        gbc.writeMem(0x5cd4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2f47);
        EXPECT(gbc.pc(), 0x5cd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0056
        gbc.setState(0xea2e, 0xe071, 0x3a70, 0x75cb, 0x1057, 0x993a, 0x1, 0x1);
        gbc.writeMem(0xea2e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe071);
        EXPECT(gbc.pc(), 0xea30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea2e), 0xcb);
        EXPECT(gbc.readMem(0xea2f), 0xd0);
        // CB D0 0057
        gbc.setState(0xd61e, 0x792d, 0x14b0, 0x1a26, 0xcc27, 0xd5ee, 0x1, 0x0);
        gbc.writeMem(0xd61e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x792d);
        EXPECT(gbc.pc(), 0xd620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd61e), 0xcb);
        EXPECT(gbc.readMem(0xd61f), 0xd0);
        // CB D0 0058
        gbc.setState(0x3df7, 0xc48a, 0xbcc0, 0x56b, 0x27e, 0xfb1a, 0x1, 0x0);
        gbc.writeMem(0x3df7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc48a);
        EXPECT(gbc.pc(), 0x3df9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0059
        gbc.setState(0x3aaf, 0xe8ff, 0xb0e0, 0xaefe, 0x32f6, 0xf3f0, 0x0, 0x0);
        gbc.writeMem(0x3aaf, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xe8ff);
        EXPECT(gbc.pc(), 0x3ab1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 005A
        gbc.setState(0x1ee1, 0x342f, 0x94e0, 0x6730, 0xfa32, 0xf6fb, 0x0, 0x0);
        gbc.writeMem(0x1ee1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x342f);
        EXPECT(gbc.pc(), 0x1ee3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 005B
        gbc.setState(0x4fd5, 0x3450, 0x9780, 0x18ae, 0x8352, 0xf654, 0x1, 0x1);
        gbc.writeMem(0x4fd5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x3450);
        EXPECT(gbc.pc(), 0x4fd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 005C
        gbc.setState(0x707e, 0xd892, 0xcd30, 0xb30, 0xe6de, 0x4b83, 0x0, 0x1);
        gbc.writeMem(0x707e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd892);
        EXPECT(gbc.pc(), 0x7080);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 005D
        gbc.setState(0xeff4, 0xc229, 0x6350, 0x82e2, 0xab60, 0xbe52, 0x0, 0x0);
        gbc.writeMem(0xeff4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc229);
        EXPECT(gbc.pc(), 0xeff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeff4), 0xcb);
        EXPECT(gbc.readMem(0xeff5), 0xd0);
        // CB D0 005E
        gbc.setState(0x30dd, 0xa5ef, 0xf60, 0x7935, 0xd361, 0x8306, 0x1, 0x0);
        gbc.writeMem(0x30dd, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa5ef);
        EXPECT(gbc.pc(), 0x30df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 005F
        gbc.setState(0x39fd, 0x8108, 0x93a0, 0xe3d1, 0x3d96, 0xad29, 0x1, 0x1);
        gbc.writeMem(0x39fd, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8108);
        EXPECT(gbc.pc(), 0x39ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0060
        gbc.setState(0x2cba, 0xe9e5, 0x87f0, 0x33be, 0xb8c0, 0xfb7f, 0x1, 0x1);
        gbc.writeMem(0x2cba, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe9e5);
        EXPECT(gbc.pc(), 0x2cbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0061
        gbc.setState(0xac47, 0x60e2, 0xa40, 0xd852, 0xef12, 0x7530, 0x1, 0x0);
        gbc.writeMem(0xac47, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x60e2);
        EXPECT(gbc.pc(), 0xac49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac47), 0xcb);
        EXPECT(gbc.readMem(0xac48), 0xd0);
        // CB D0 0062
        gbc.setState(0x188f, 0x8261, 0x9d80, 0xd0c, 0x3640, 0x1901, 0x0, 0x0);
        gbc.writeMem(0x188f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x8261);
        EXPECT(gbc.pc(), 0x1891);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0063
        gbc.setState(0xcd4e, 0x2655, 0x5b80, 0x5326, 0x3ceb, 0x80bd, 0x0, 0x1);
        gbc.writeMem(0xcd4e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x2655);
        EXPECT(gbc.pc(), 0xcd50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd4e), 0xcb);
        EXPECT(gbc.readMem(0xcd4f), 0xd0);
        // CB D0 0064
        gbc.setState(0x7699, 0xee1a, 0xd500, 0xf699, 0x81c5, 0x7a89, 0x0, 0x0);
        gbc.writeMem(0x7699, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xee1a);
        EXPECT(gbc.pc(), 0x769b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0065
        gbc.setState(0x764a, 0x12f1, 0x17f0, 0x6810, 0xfc4a, 0xc439, 0x1, 0x0);
        gbc.writeMem(0x764a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x12f1);
        EXPECT(gbc.pc(), 0x764c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0066
        gbc.setState(0xc638, 0x9919, 0x8d0, 0x6562, 0x8651, 0xb732, 0x1, 0x0);
        gbc.writeMem(0xc638, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9919);
        EXPECT(gbc.pc(), 0xc63a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc638), 0xcb);
        EXPECT(gbc.readMem(0xc639), 0xd0);
        // CB D0 0067
        gbc.setState(0x7381, 0x1ac4, 0x1cd0, 0xebd0, 0x5767, 0x4771, 0x1, 0x0);
        gbc.writeMem(0x7381, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x1ac4);
        EXPECT(gbc.pc(), 0x7383);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0068
        gbc.setState(0x5b1a, 0x4d5c, 0xb0c0, 0x8dbb, 0x48c3, 0x3bc0, 0x0, 0x1);
        gbc.writeMem(0x5b1a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4d5c);
        EXPECT(gbc.pc(), 0x5b1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0069
        gbc.setState(0xbc9d, 0xfc89, 0xe800, 0xaad0, 0xb7e0, 0x287, 0x0, 0x0);
        gbc.writeMem(0xbc9d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xfc89);
        EXPECT(gbc.pc(), 0xbc9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc9d), 0xcb);
        EXPECT(gbc.readMem(0xbc9e), 0xd0);
        // CB D0 006A
        gbc.setState(0x3237, 0x1c55, 0x4f00, 0x985a, 0x8e8d, 0xcb44, 0x1, 0x1);
        gbc.writeMem(0x3237, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x1c55);
        EXPECT(gbc.pc(), 0x3239);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 006B
        gbc.setState(0xba3d, 0x1bff, 0x3d70, 0xc5c3, 0x578a, 0xe238, 0x0, 0x0);
        gbc.writeMem(0xba3d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x1bff);
        EXPECT(gbc.pc(), 0xba3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba3d), 0xcb);
        EXPECT(gbc.readMem(0xba3e), 0xd0);
        // CB D0 006C
        gbc.setState(0xb444, 0x8860, 0xe70, 0xaf84, 0xdc75, 0x4dc5, 0x0, 0x1);
        gbc.writeMem(0xb444, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8860);
        EXPECT(gbc.pc(), 0xb446);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb444), 0xcb);
        EXPECT(gbc.readMem(0xb445), 0xd0);
        // CB D0 006D
        gbc.setState(0xc887, 0xab01, 0xdf00, 0x1559, 0x7174, 0x8a8b, 0x0, 0x1);
        gbc.writeMem(0xc887, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xab01);
        EXPECT(gbc.pc(), 0xc889);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc887), 0xcb);
        EXPECT(gbc.readMem(0xc888), 0xd0);
        // CB D0 006E
        gbc.setState(0x95eb, 0x22be, 0x9fd0, 0x98a0, 0xa087, 0xeda2, 0x0, 0x0);
        gbc.writeMem(0x95eb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x22be);
        EXPECT(gbc.pc(), 0x95ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95eb), 0xcb);
        EXPECT(gbc.readMem(0x95ec), 0xd0);
        // CB D0 006F
        gbc.setState(0x4fcb, 0x9b8e, 0xf400, 0x31a2, 0xb81d, 0x2baf, 0x0, 0x0);
        gbc.writeMem(0x4fcb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9b8e);
        EXPECT(gbc.pc(), 0x4fcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0070
        gbc.setState(0x9e00, 0xf325, 0xf410, 0xb218, 0x444e, 0x2487, 0x1, 0x0);
        gbc.writeMem(0x9e00, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf325);
        EXPECT(gbc.pc(), 0x9e02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e00), 0xcb);
        EXPECT(gbc.readMem(0x9e01), 0xd0);
        // CB D0 0071
        gbc.setState(0x277, 0x4d4f, 0x60a0, 0xa9ae, 0xe51a, 0x7a41, 0x0, 0x1);
        gbc.writeMem(0x277, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x4d4f);
        EXPECT(gbc.pc(), 0x279);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0072
        gbc.setState(0xcbd7, 0xb42d, 0x67f0, 0x2a59, 0xc7a6, 0xddc4, 0x0, 0x0);
        gbc.writeMem(0xcbd7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb42d);
        EXPECT(gbc.pc(), 0xcbd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbd7), 0xcb);
        EXPECT(gbc.readMem(0xcbd8), 0xd0);
        // CB D0 0074
        gbc.setState(0xd6cf, 0x4f33, 0xffa0, 0x3318, 0x916c, 0xfee5, 0x1, 0x1);
        gbc.writeMem(0xd6cf, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4f33);
        EXPECT(gbc.pc(), 0xd6d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6cf), 0xcb);
        EXPECT(gbc.readMem(0xd6d0), 0xd0);
        // CB D0 0075
        gbc.setState(0xe294, 0xdb25, 0xe40, 0x7df5, 0x3e34, 0x22bb, 0x1, 0x0);
        gbc.writeMem(0xe294, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xdb25);
        EXPECT(gbc.pc(), 0xe296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe294), 0xcb);
        EXPECT(gbc.readMem(0xe295), 0xd0);
        // CB D0 0076
        gbc.setState(0x3335, 0x72f1, 0xd170, 0x1677, 0xc85c, 0xa766, 0x1, 0x1);
        gbc.writeMem(0x3335, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x72f1);
        EXPECT(gbc.pc(), 0x3337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0077
        gbc.setState(0x7342, 0xfdc4, 0x4d50, 0x7400, 0xd935, 0x3346, 0x1, 0x0);
        gbc.writeMem(0x7342, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xfdc4);
        EXPECT(gbc.pc(), 0x7344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0078
        gbc.setState(0x2dd8, 0x5176, 0xe4b0, 0xee13, 0xc2c7, 0x6ef5, 0x1, 0x1);
        gbc.writeMem(0x2dd8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5176);
        EXPECT(gbc.pc(), 0x2dda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 007A
        gbc.setState(0x354b, 0x2d26, 0xa510, 0x6332, 0xe2ad, 0x5162, 0x1, 0x1);
        gbc.writeMem(0x354b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2d26);
        EXPECT(gbc.pc(), 0x354d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 007B
        gbc.setState(0xac15, 0x6844, 0x50, 0x212e, 0xdf1a, 0xbf41, 0x0, 0x0);
        gbc.writeMem(0xac15, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6844);
        EXPECT(gbc.pc(), 0xac17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac15), 0xcb);
        EXPECT(gbc.readMem(0xac16), 0xd0);
        // CB D0 007C
        gbc.setState(0xb62a, 0x71e8, 0x41e0, 0x49e3, 0xd7c1, 0xb4c9, 0x1, 0x0);
        gbc.writeMem(0xb62a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x71e8);
        EXPECT(gbc.pc(), 0xb62c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb62a), 0xcb);
        EXPECT(gbc.readMem(0xb62b), 0xd0);
        // CB D0 007D
        gbc.setState(0x65ca, 0xf10, 0x3c30, 0xfd44, 0xf33e, 0x11f2, 0x1, 0x0);
        gbc.writeMem(0x65ca, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf10);
        EXPECT(gbc.pc(), 0x65cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 007E
        gbc.setState(0x8b85, 0x2787, 0xdff0, 0x5954, 0x28f0, 0xf97a, 0x1, 0x1);
        gbc.writeMem(0x8b85, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2787);
        EXPECT(gbc.pc(), 0x8b87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b85), 0xcb);
        EXPECT(gbc.readMem(0x8b86), 0xd0);
        // CB D0 007F
        gbc.setState(0x46c7, 0x8d03, 0x7fd0, 0xb614, 0x2aaf, 0xab4d, 0x1, 0x1);
        gbc.writeMem(0x46c7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8d03);
        EXPECT(gbc.pc(), 0x46c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0080
        gbc.setState(0x745b, 0xd697, 0x3890, 0xb4c3, 0xcb12, 0x306a, 0x1, 0x0);
        gbc.writeMem(0x745b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd697);
        EXPECT(gbc.pc(), 0x745d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0081
        gbc.setState(0x66e7, 0x46ed, 0x9af0, 0x5782, 0xd69d, 0xb05e, 0x1, 0x1);
        gbc.writeMem(0x66e7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x46ed);
        EXPECT(gbc.pc(), 0x66e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0082
        gbc.setState(0x8830, 0xc91f, 0xd260, 0xbfe5, 0x8794, 0x4391, 0x0, 0x0);
        gbc.writeMem(0x8830, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc91f);
        EXPECT(gbc.pc(), 0x8832);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8830), 0xcb);
        EXPECT(gbc.readMem(0x8831), 0xd0);
        // CB D0 0083
        gbc.setState(0xe4c1, 0xaf3, 0xf990, 0xd989, 0x9c0d, 0x7226, 0x0, 0x1);
        gbc.writeMem(0xe4c1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xaf3);
        EXPECT(gbc.pc(), 0xe4c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4c1), 0xcb);
        EXPECT(gbc.readMem(0xe4c2), 0xd0);
        // CB D0 0084
        gbc.setState(0x2eeb, 0xc2bd, 0x3b60, 0xe5f6, 0x9e7a, 0x8551, 0x1, 0x0);
        gbc.writeMem(0x2eeb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc2bd);
        EXPECT(gbc.pc(), 0x2eed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0085
        gbc.setState(0x3c98, 0x1b9f, 0x1c40, 0x3463, 0xdbd4, 0x90bf, 0x0, 0x0);
        gbc.writeMem(0x3c98, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1b9f);
        EXPECT(gbc.pc(), 0x3c9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0086
        gbc.setState(0xcfa7, 0x98d7, 0xfd30, 0x45e5, 0xbc91, 0x937d, 0x0, 0x0);
        gbc.writeMem(0xcfa7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x98d7);
        EXPECT(gbc.pc(), 0xcfa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfa7), 0xcb);
        EXPECT(gbc.readMem(0xcfa8), 0xd0);
        // CB D0 0087
        gbc.setState(0x63a1, 0x7c73, 0xada0, 0xfa08, 0x6c2c, 0x587, 0x1, 0x0);
        gbc.writeMem(0x63a1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7c73);
        EXPECT(gbc.pc(), 0x63a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0088
        gbc.setState(0x9bbe, 0x93f1, 0xee20, 0xc9d6, 0x4157, 0xb478, 0x1, 0x0);
        gbc.writeMem(0x9bbe, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x93f1);
        EXPECT(gbc.pc(), 0x9bc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bbe), 0xcb);
        EXPECT(gbc.readMem(0x9bbf), 0xd0);
        // CB D0 0089
        gbc.setState(0x9438, 0x4a68, 0xda10, 0x9a51, 0xd762, 0x88e8, 0x0, 0x0);
        gbc.writeMem(0x9438, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4a68);
        EXPECT(gbc.pc(), 0x943a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9438), 0xcb);
        EXPECT(gbc.readMem(0x9439), 0xd0);
        // CB D0 008A
        gbc.setState(0x8b19, 0x93f6, 0xf040, 0x3e7, 0x186b, 0x53fb, 0x1, 0x1);
        gbc.writeMem(0x8b19, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x93f6);
        EXPECT(gbc.pc(), 0x8b1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b19), 0xcb);
        EXPECT(gbc.readMem(0x8b1a), 0xd0);
        // CB D0 008B
        gbc.setState(0x602c, 0x68a0, 0x5e30, 0x5819, 0x3487, 0x15b1, 0x0, 0x1);
        gbc.writeMem(0x602c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x68a0);
        EXPECT(gbc.pc(), 0x602e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 008C
        gbc.setState(0xbea4, 0xb0b8, 0xffe0, 0x3db2, 0xd626, 0x96b6, 0x1, 0x1);
        gbc.writeMem(0xbea4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb0b8);
        EXPECT(gbc.pc(), 0xbea6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbea4), 0xcb);
        EXPECT(gbc.readMem(0xbea5), 0xd0);
        // CB D0 008E
        gbc.setState(0x2029, 0x5dcc, 0xfd0, 0xe35f, 0xbc3b, 0x53d1, 0x0, 0x1);
        gbc.writeMem(0x2029, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5dcc);
        EXPECT(gbc.pc(), 0x202b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 008F
        gbc.setState(0x342e, 0x961e, 0x3690, 0xa39f, 0xa2bb, 0x8629, 0x1, 0x1);
        gbc.writeMem(0x342e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x961e);
        EXPECT(gbc.pc(), 0x3430);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0091
        gbc.setState(0x850c, 0xc9ab, 0xbad0, 0x159c, 0x19bd, 0x2af4, 0x0, 0x1);
        gbc.writeMem(0x850c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc9ab);
        EXPECT(gbc.pc(), 0x850e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x850c), 0xcb);
        EXPECT(gbc.readMem(0x850d), 0xd0);
        // CB D0 0092
        gbc.setState(0x2bf5, 0x6c62, 0xab00, 0x5aad, 0x6a74, 0x4c6b, 0x0, 0x1);
        gbc.writeMem(0x2bf5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x6c62);
        EXPECT(gbc.pc(), 0x2bf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0093
        gbc.setState(0xd952, 0xc6c, 0x3c70, 0xcac7, 0xa2c9, 0x4933, 0x0, 0x0);
        gbc.writeMem(0xd952, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc6c);
        EXPECT(gbc.pc(), 0xd954);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd952), 0xcb);
        EXPECT(gbc.readMem(0xd953), 0xd0);
        // CB D0 0095
        gbc.setState(0x90e, 0xaf83, 0xd790, 0x695b, 0x7dd0, 0x65eb, 0x1, 0x1);
        gbc.writeMem(0x90e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xaf83);
        EXPECT(gbc.pc(), 0x910);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0096
        gbc.setState(0x7946, 0x6cf3, 0xc2d0, 0x10a9, 0x5f0a, 0x711, 0x1, 0x0);
        gbc.writeMem(0x7946, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6cf3);
        EXPECT(gbc.pc(), 0x7948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0098
        gbc.setState(0x6266, 0x9b3d, 0xa600, 0x6a9a, 0x31ba, 0xda8d, 0x1, 0x1);
        gbc.writeMem(0x6266, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x9b3d);
        EXPECT(gbc.pc(), 0x6268);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0099
        gbc.setState(0xb525, 0xdcd2, 0x1990, 0x99c1, 0x44c8, 0xe7bb, 0x0, 0x1);
        gbc.writeMem(0xb525, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xdcd2);
        EXPECT(gbc.pc(), 0xb527);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb525), 0xcb);
        EXPECT(gbc.readMem(0xb526), 0xd0);
        // CB D0 009C
        gbc.setState(0x6550, 0xae8c, 0x7db0, 0x82e7, 0x990c, 0x521b, 0x1, 0x0);
        gbc.writeMem(0x6550, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xae8c);
        EXPECT(gbc.pc(), 0x6552);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 009D
        gbc.setState(0x927a, 0xe71a, 0xf0d0, 0x8af1, 0x115a, 0x5d51, 0x0, 0x1);
        gbc.writeMem(0x927a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe71a);
        EXPECT(gbc.pc(), 0x927c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x927a), 0xcb);
        EXPECT(gbc.readMem(0x927b), 0xd0);
        // CB D0 009E
        gbc.setState(0x5238, 0x7417, 0xade0, 0x2cb6, 0x7d72, 0xedb8, 0x1, 0x0);
        gbc.writeMem(0x5238, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7417);
        EXPECT(gbc.pc(), 0x523a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 009F
        gbc.setState(0x3d01, 0xfe27, 0x1a50, 0x4dad, 0x1738, 0xf89a, 0x0, 0x1);
        gbc.writeMem(0x3d01, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xfe27);
        EXPECT(gbc.pc(), 0x3d03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00A0
        gbc.setState(0xe83, 0xc628, 0xb40, 0x3329, 0xec66, 0x35dc, 0x0, 0x0);
        gbc.writeMem(0xe83, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc628);
        EXPECT(gbc.pc(), 0xe85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 00A1
        gbc.setState(0x4efc, 0x7aca, 0x2af0, 0x2631, 0x76cb, 0x6363, 0x0, 0x0);
        gbc.writeMem(0x4efc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x7aca);
        EXPECT(gbc.pc(), 0x4efe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00A2
        gbc.setState(0xa4aa, 0x61ba, 0x77a0, 0xe6a5, 0x8a91, 0x7888, 0x0, 0x1);
        gbc.writeMem(0xa4aa, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x61ba);
        EXPECT(gbc.pc(), 0xa4ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4aa), 0xcb);
        EXPECT(gbc.readMem(0xa4ab), 0xd0);
        // CB D0 00A3
        gbc.setState(0x17f2, 0xacac, 0xb9a0, 0x5539, 0x2e99, 0xc89e, 0x0, 0x1);
        gbc.writeMem(0x17f2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xacac);
        EXPECT(gbc.pc(), 0x17f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 00A4
        gbc.setState(0x2dd1, 0xaed4, 0xb3c0, 0x5f90, 0x4e5, 0x356f, 0x0, 0x1);
        gbc.writeMem(0x2dd1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xaed4);
        EXPECT(gbc.pc(), 0x2dd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 00A5
        gbc.setState(0x4576, 0x75f, 0xdb40, 0xfdcd, 0x49b5, 0x1c77, 0x1, 0x0);
        gbc.writeMem(0x4576, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x75f);
        EXPECT(gbc.pc(), 0x4578);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 00A6
        gbc.setState(0xeb3c, 0xbae5, 0x3390, 0xabbf, 0x1948, 0xa6a3, 0x0, 0x0);
        gbc.writeMem(0xeb3c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xbae5);
        EXPECT(gbc.pc(), 0xeb3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb3c), 0xcb);
        EXPECT(gbc.readMem(0xeb3d), 0xd0);
        // CB D0 00A7
        gbc.setState(0x1e2, 0x2ef3, 0x4d40, 0x4364, 0x76c9, 0x7df6, 0x1, 0x1);
        gbc.writeMem(0x1e2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2ef3);
        EXPECT(gbc.pc(), 0x1e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 00A8
        gbc.setState(0x45d8, 0x14ec, 0xf2f0, 0x5c5c, 0xab3e, 0x14a7, 0x0, 0x1);
        gbc.writeMem(0x45d8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x14ec);
        EXPECT(gbc.pc(), 0x45da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00A9
        gbc.setState(0x3ad6, 0x962b, 0xecd0, 0x4d08, 0x75da, 0x4a22, 0x0, 0x0);
        gbc.writeMem(0x3ad6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x962b);
        EXPECT(gbc.pc(), 0x3ad8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00AA
        gbc.setState(0xa4c8, 0xb9bf, 0xaf0, 0xb544, 0x1d5c, 0x8dbd, 0x0, 0x0);
        gbc.writeMem(0xa4c8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb9bf);
        EXPECT(gbc.pc(), 0xa4ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4c8), 0xcb);
        EXPECT(gbc.readMem(0xa4c9), 0xd0);
        // CB D0 00AB
        gbc.setState(0x2921, 0xef6a, 0x9770, 0xd60c, 0x8c3, 0xfe4d, 0x0, 0x0);
        gbc.writeMem(0x2921, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xef6a);
        EXPECT(gbc.pc(), 0x2923);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00AC
        gbc.setState(0x505e, 0xd7d, 0x7e0, 0x6668, 0x82a9, 0x8173, 0x1, 0x1);
        gbc.writeMem(0x505e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd7d);
        EXPECT(gbc.pc(), 0x5060);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 00AD
        gbc.setState(0x586e, 0x622d, 0xf4e0, 0xaadd, 0xf65, 0x932d, 0x0, 0x0);
        gbc.writeMem(0x586e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x622d);
        EXPECT(gbc.pc(), 0x5870);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 00AE
        gbc.setState(0x5ab4, 0xce40, 0x280, 0x73b0, 0xc174, 0xc297, 0x1, 0x0);
        gbc.writeMem(0x5ab4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xce40);
        EXPECT(gbc.pc(), 0x5ab6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 00AF
        gbc.setState(0xc581, 0xad31, 0xce20, 0x9605, 0xe810, 0xb8f2, 0x1, 0x0);
        gbc.writeMem(0xc581, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xad31);
        EXPECT(gbc.pc(), 0xc583);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc581), 0xcb);
        EXPECT(gbc.readMem(0xc582), 0xd0);
        // CB D0 00B0
        gbc.setState(0xba52, 0x756b, 0x9330, 0x12e6, 0x3dd6, 0xd61b, 0x0, 0x0);
        gbc.writeMem(0xba52, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x756b);
        EXPECT(gbc.pc(), 0xba54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba52), 0xcb);
        EXPECT(gbc.readMem(0xba53), 0xd0);
        // CB D0 00B1
        gbc.setState(0x5c49, 0xa030, 0x9f90, 0x79be, 0xb4ff, 0x2c89, 0x0, 0x0);
        gbc.writeMem(0x5c49, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xa030);
        EXPECT(gbc.pc(), 0x5c4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00B2
        gbc.setState(0xbb9e, 0x8f99, 0xe260, 0xdf87, 0xc84a, 0x189e, 0x1, 0x0);
        gbc.writeMem(0xbb9e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8f99);
        EXPECT(gbc.pc(), 0xbba0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb9e), 0xcb);
        EXPECT(gbc.readMem(0xbb9f), 0xd0);
        // CB D0 00B3
        gbc.setState(0xecac, 0xf48f, 0xc660, 0xe0be, 0xb2bb, 0xcd0a, 0x1, 0x1);
        gbc.writeMem(0xecac, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf48f);
        EXPECT(gbc.pc(), 0xecae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecac), 0xcb);
        EXPECT(gbc.readMem(0xecad), 0xd0);
        // CB D0 00B4
        gbc.setState(0xa710, 0xa92c, 0xe570, 0xbee0, 0x6f5d, 0x3007, 0x1, 0x1);
        gbc.writeMem(0xa710, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa92c);
        EXPECT(gbc.pc(), 0xa712);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa710), 0xcb);
        EXPECT(gbc.readMem(0xa711), 0xd0);
        // CB D0 00B5
        gbc.setState(0xa002, 0x1371, 0x1c10, 0x788b, 0x67a4, 0xb808, 0x0, 0x1);
        gbc.writeMem(0xa002, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1371);
        EXPECT(gbc.pc(), 0xa004);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa002), 0xcb);
        EXPECT(gbc.readMem(0xa003), 0xd0);
        // CB D0 00B6
        gbc.setState(0x8df5, 0x53a4, 0x480, 0x6ad, 0x38d2, 0x1ca3, 0x0, 0x1);
        gbc.writeMem(0x8df5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x53a4);
        EXPECT(gbc.pc(), 0x8df7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8df5), 0xcb);
        EXPECT(gbc.readMem(0x8df6), 0xd0);
        // CB D0 00B7
        gbc.setState(0xd08d, 0x2a60, 0xa210, 0x3984, 0x2dbc, 0x4e8a, 0x0, 0x0);
        gbc.writeMem(0xd08d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2a60);
        EXPECT(gbc.pc(), 0xd08f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd08d), 0xcb);
        EXPECT(gbc.readMem(0xd08e), 0xd0);
        // CB D0 00B8
        gbc.setState(0xbc1a, 0x647b, 0xb2f0, 0x660d, 0x9b32, 0xa659, 0x0, 0x0);
        gbc.writeMem(0xbc1a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x647b);
        EXPECT(gbc.pc(), 0xbc1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc1a), 0xcb);
        EXPECT(gbc.readMem(0xbc1b), 0xd0);
        // CB D0 00B9
        gbc.setState(0xc24e, 0x752d, 0x380, 0x8c69, 0x3787, 0x6446, 0x1, 0x1);
        gbc.writeMem(0xc24e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x752d);
        EXPECT(gbc.pc(), 0xc250);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc24e), 0xcb);
        EXPECT(gbc.readMem(0xc24f), 0xd0);
        // CB D0 00BA
        gbc.setState(0x4c31, 0x5ef9, 0x0, 0xa983, 0xfbd, 0x78da, 0x0, 0x1);
        gbc.writeMem(0x4c31, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5ef9);
        EXPECT(gbc.pc(), 0x4c33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 00BB
        gbc.setState(0x45e1, 0x385a, 0xb760, 0xf78b, 0x9161, 0x59d0, 0x0, 0x0);
        gbc.writeMem(0x45e1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x385a);
        EXPECT(gbc.pc(), 0x45e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 00BC
        gbc.setState(0x1e5a, 0x54c8, 0x9a80, 0x2b7f, 0x8066, 0x21d0, 0x1, 0x0);
        gbc.writeMem(0x1e5a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x54c8);
        EXPECT(gbc.pc(), 0x1e5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 00BD
        gbc.setState(0x40aa, 0x8442, 0x160, 0x717b, 0xb8d5, 0x5c3b, 0x1, 0x1);
        gbc.writeMem(0x40aa, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x8442);
        EXPECT(gbc.pc(), 0x40ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 00BE
        gbc.setState(0xe927, 0xaa8, 0xc7c0, 0xeecf, 0x5feb, 0x5f75, 0x0, 0x1);
        gbc.writeMem(0xe927, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xaa8);
        EXPECT(gbc.pc(), 0xe929);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe927), 0xcb);
        EXPECT(gbc.readMem(0xe928), 0xd0);
        // CB D0 00BF
        gbc.setState(0x5c28, 0x964b, 0x8590, 0x6308, 0xbe60, 0xa39d, 0x1, 0x1);
        gbc.writeMem(0x5c28, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x964b);
        EXPECT(gbc.pc(), 0x5c2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00C0
        gbc.setState(0x3d8, 0x8a7e, 0x3960, 0xe502, 0x3504, 0x9452, 0x0, 0x1);
        gbc.writeMem(0x3d8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8a7e);
        EXPECT(gbc.pc(), 0x3da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 00C1
        gbc.setState(0xedb2, 0x888b, 0x9110, 0xcb2c, 0x171f, 0xa618, 0x0, 0x0);
        gbc.writeMem(0xedb2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x888b);
        EXPECT(gbc.pc(), 0xedb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedb2), 0xcb);
        EXPECT(gbc.readMem(0xedb3), 0xd0);
        // CB D0 00C2
        gbc.setState(0xea18, 0xaeb0, 0x7990, 0xb51a, 0x37d0, 0xb937, 0x0, 0x0);
        gbc.writeMem(0xea18, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xaeb0);
        EXPECT(gbc.pc(), 0xea1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea18), 0xcb);
        EXPECT(gbc.readMem(0xea19), 0xd0);
        // CB D0 00C3
        gbc.setState(0x802b, 0x5697, 0x9b00, 0x1366, 0x9a2a, 0x4a6c, 0x0, 0x1);
        gbc.writeMem(0x802b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5697);
        EXPECT(gbc.pc(), 0x802d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x802b), 0xcb);
        EXPECT(gbc.readMem(0x802c), 0xd0);
        // CB D0 00C4
        gbc.setState(0xbdca, 0xdca, 0xf900, 0x1f20, 0x5da8, 0x24f5, 0x0, 0x0);
        gbc.writeMem(0xbdca, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xdca);
        EXPECT(gbc.pc(), 0xbdcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdca), 0xcb);
        EXPECT(gbc.readMem(0xbdcb), 0xd0);
        // CB D0 00C5
        gbc.setState(0x7ae2, 0x8703, 0x6bb0, 0x4a0e, 0xe0a6, 0xd0ce, 0x0, 0x0);
        gbc.writeMem(0x7ae2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8703);
        EXPECT(gbc.pc(), 0x7ae4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00C6
        gbc.setState(0xd6f7, 0xcc06, 0xb6c0, 0xfae, 0xf43, 0x88b, 0x0, 0x1);
        gbc.writeMem(0xd6f7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xcc06);
        EXPECT(gbc.pc(), 0xd6f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6f7), 0xcb);
        EXPECT(gbc.readMem(0xd6f8), 0xd0);
        // CB D0 00C8
        gbc.setState(0xd48c, 0x7f5b, 0x35d0, 0x1a84, 0xe8eb, 0x9641, 0x1, 0x0);
        gbc.writeMem(0xd48c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7f5b);
        EXPECT(gbc.pc(), 0xd48e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd48c), 0xcb);
        EXPECT(gbc.readMem(0xd48d), 0xd0);
        // CB D0 00C9
        gbc.setState(0x5b55, 0x4ebd, 0x8690, 0x71ca, 0x954c, 0xd292, 0x1, 0x0);
        gbc.writeMem(0x5b55, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x4ebd);
        EXPECT(gbc.pc(), 0x5b57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00CA
        gbc.setState(0xe79d, 0x1687, 0x86f0, 0xa23b, 0x1ac9, 0x1c39, 0x1, 0x1);
        gbc.writeMem(0xe79d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x1687);
        EXPECT(gbc.pc(), 0xe79f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe79d), 0xcb);
        EXPECT(gbc.readMem(0xe79e), 0xd0);
        // CB D0 00CB
        gbc.setState(0x6f9d, 0x2ba1, 0xb360, 0xc9b3, 0x8f7a, 0x1c9b, 0x0, 0x0);
        gbc.writeMem(0x6f9d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x2ba1);
        EXPECT(gbc.pc(), 0x6f9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 00CC
        gbc.setState(0x3d51, 0x6bde, 0x7ab0, 0xb65a, 0xcc61, 0xb0f, 0x1, 0x1);
        gbc.writeMem(0x3d51, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x6bde);
        EXPECT(gbc.pc(), 0x3d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00CD
        gbc.setState(0x6f82, 0xdbb, 0x46c0, 0x148e, 0x2744, 0x99de, 0x0, 0x0);
        gbc.writeMem(0x6f82, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xdbb);
        EXPECT(gbc.pc(), 0x6f84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 00CE
        gbc.setState(0xcfef, 0x14ad, 0x65c0, 0x41a2, 0xd159, 0x9a8a, 0x0, 0x0);
        gbc.writeMem(0xcfef, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x14ad);
        EXPECT(gbc.pc(), 0xcff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfef), 0xcb);
        EXPECT(gbc.readMem(0xcff0), 0xd0);
        // CB D0 00CF
        gbc.setState(0x8d9b, 0xad88, 0x4fa0, 0xd305, 0xaf8, 0xcfa9, 0x0, 0x0);
        gbc.writeMem(0x8d9b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xad88);
        EXPECT(gbc.pc(), 0x8d9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d9b), 0xcb);
        EXPECT(gbc.readMem(0x8d9c), 0xd0);
        // CB D0 00D0
        gbc.setState(0xa19c, 0xcc35, 0xa570, 0xf449, 0x8203, 0x9fc5, 0x0, 0x0);
        gbc.writeMem(0xa19c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xcc35);
        EXPECT(gbc.pc(), 0xa19e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa19c), 0xcb);
        EXPECT(gbc.readMem(0xa19d), 0xd0);
        // CB D0 00D1
        gbc.setState(0xbe57, 0x637, 0xb20, 0xec28, 0x96e3, 0x5067, 0x1, 0x0);
        gbc.writeMem(0xbe57, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x637);
        EXPECT(gbc.pc(), 0xbe59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe57), 0xcb);
        EXPECT(gbc.readMem(0xbe58), 0xd0);
        // CB D0 00D2
        gbc.setState(0xad58, 0xfa8c, 0x19e0, 0x3867, 0x31bb, 0xd9a0, 0x1, 0x1);
        gbc.writeMem(0xad58, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xfa8c);
        EXPECT(gbc.pc(), 0xad5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad58), 0xcb);
        EXPECT(gbc.readMem(0xad59), 0xd0);
        // CB D0 00D3
        gbc.setState(0x1ac4, 0x510f, 0xa550, 0x4171, 0x78b4, 0xb31f, 0x0, 0x0);
        gbc.writeMem(0x1ac4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x510f);
        EXPECT(gbc.pc(), 0x1ac6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00D4
        gbc.setState(0xecf0, 0x2647, 0x5b90, 0xb0ee, 0x976f, 0xee2c, 0x1, 0x0);
        gbc.writeMem(0xecf0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2647);
        EXPECT(gbc.pc(), 0xecf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecf0), 0xcb);
        EXPECT(gbc.readMem(0xecf1), 0xd0);
        // CB D0 00D5
        gbc.setState(0x9c7f, 0x7ab7, 0xdea0, 0x528a, 0x9748, 0x3097, 0x0, 0x1);
        gbc.writeMem(0x9c7f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7ab7);
        EXPECT(gbc.pc(), 0x9c81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c7f), 0xcb);
        EXPECT(gbc.readMem(0x9c80), 0xd0);
        // CB D0 00D6
        gbc.setState(0x2ecf, 0x602a, 0xf520, 0x1447, 0xa256, 0x496d, 0x0, 0x1);
        gbc.writeMem(0x2ecf, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x602a);
        EXPECT(gbc.pc(), 0x2ed1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 00D7
        gbc.setState(0xa3c7, 0x86f8, 0x6630, 0x33c5, 0x1d3a, 0x894, 0x0, 0x0);
        gbc.writeMem(0xa3c7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x86f8);
        EXPECT(gbc.pc(), 0xa3c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3c7), 0xcb);
        EXPECT(gbc.readMem(0xa3c8), 0xd0);
        // CB D0 00D8
        gbc.setState(0x6428, 0x2e9, 0x9380, 0x27c0, 0x9329, 0x56fa, 0x1, 0x0);
        gbc.writeMem(0x6428, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2e9);
        EXPECT(gbc.pc(), 0x642a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 00DA
        gbc.setState(0xde13, 0x3bc2, 0xb0f0, 0x550, 0x6fd4, 0xd826, 0x0, 0x1);
        gbc.writeMem(0xde13, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x3bc2);
        EXPECT(gbc.pc(), 0xde15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde13), 0xcb);
        EXPECT(gbc.readMem(0xde14), 0xd0);
        // CB D0 00DB
        gbc.setState(0x1877, 0x33ed, 0x56e0, 0xccad, 0x3c9e, 0x6042, 0x1, 0x1);
        gbc.writeMem(0x1877, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x33ed);
        EXPECT(gbc.pc(), 0x1879);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 00DC
        gbc.setState(0xc677, 0xdca7, 0xc570, 0xf47b, 0xf9b5, 0xac56, 0x1, 0x1);
        gbc.writeMem(0xc677, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xdca7);
        EXPECT(gbc.pc(), 0xc679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc677), 0xcb);
        EXPECT(gbc.readMem(0xc678), 0xd0);
        // CB D0 00DD
        gbc.setState(0x3868, 0x5b24, 0x1510, 0xd95d, 0x8b61, 0x58dc, 0x1, 0x1);
        gbc.writeMem(0x3868, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5b24);
        EXPECT(gbc.pc(), 0x386a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00DE
        gbc.setState(0x55cc, 0x5966, 0x88e0, 0x8f85, 0x9ad9, 0xefff, 0x1, 0x0);
        gbc.writeMem(0x55cc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5966);
        EXPECT(gbc.pc(), 0x55ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 00DF
        gbc.setState(0x3807, 0x1192, 0x99c0, 0x9cc9, 0x2590, 0x7e73, 0x1, 0x1);
        gbc.writeMem(0x3807, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x1192);
        EXPECT(gbc.pc(), 0x3809);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 00E1
        gbc.setState(0x183d, 0x5fa3, 0x5e30, 0x3a9e, 0xf87a, 0x51d1, 0x1, 0x1);
        gbc.writeMem(0x183d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5fa3);
        EXPECT(gbc.pc(), 0x183f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00E2
        gbc.setState(0x56f8, 0x94b5, 0x5980, 0x8c91, 0x1374, 0x133a, 0x1, 0x0);
        gbc.writeMem(0x56f8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x94b5);
        EXPECT(gbc.pc(), 0x56fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 00E3
        gbc.setState(0x200c, 0xc47, 0x5a10, 0xa12f, 0x1da0, 0x44ac, 0x1, 0x1);
        gbc.writeMem(0x200c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc47);
        EXPECT(gbc.pc(), 0x200e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00E4
        gbc.setState(0xb8ab, 0xaaf9, 0xc0, 0xbfc8, 0xd9b7, 0xacd7, 0x0, 0x1);
        gbc.writeMem(0xb8ab, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xaaf9);
        EXPECT(gbc.pc(), 0xb8ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8ab), 0xcb);
        EXPECT(gbc.readMem(0xb8ac), 0xd0);
        // CB D0 00E5
        gbc.setState(0xaf8d, 0xdc37, 0xe1e0, 0x829b, 0xb68e, 0x90fc, 0x1, 0x0);
        gbc.writeMem(0xaf8d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xdc37);
        EXPECT(gbc.pc(), 0xaf8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf8d), 0xcb);
        EXPECT(gbc.readMem(0xaf8e), 0xd0);
        // CB D0 00E6
        gbc.setState(0x3102, 0x5a36, 0x9ed0, 0xbaae, 0x74e1, 0x8f05, 0x0, 0x0);
        gbc.writeMem(0x3102, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x5a36);
        EXPECT(gbc.pc(), 0x3104);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00E7
        gbc.setState(0x59b0, 0xb50e, 0xeff0, 0x605f, 0x81f7, 0xfbff, 0x1, 0x1);
        gbc.writeMem(0x59b0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xb50e);
        EXPECT(gbc.pc(), 0x59b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00E8
        gbc.setState(0x4e86, 0x592e, 0xa110, 0x8932, 0xa19a, 0xfb79, 0x1, 0x1);
        gbc.writeMem(0x4e86, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x592e);
        EXPECT(gbc.pc(), 0x4e88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00E9
        gbc.setState(0x1c38, 0x4b81, 0xdbb0, 0xf58e, 0x59a3, 0x6b61, 0x1, 0x0);
        gbc.writeMem(0x1c38, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x4b81);
        EXPECT(gbc.pc(), 0x1c3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00EA
        gbc.setState(0xc604, 0xf539, 0x37e0, 0x3a47, 0xa13d, 0x6dbd, 0x0, 0x0);
        gbc.writeMem(0xc604, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf539);
        EXPECT(gbc.pc(), 0xc606);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc604), 0xcb);
        EXPECT(gbc.readMem(0xc605), 0xd0);
        // CB D0 00EB
        gbc.setState(0x2ab0, 0x82cd, 0x39f0, 0x9da4, 0xeb9f, 0x1368, 0x1, 0x1);
        gbc.writeMem(0x2ab0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x82cd);
        EXPECT(gbc.pc(), 0x2ab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00EC
        gbc.setState(0x3d8b, 0x14db, 0x2870, 0xece2, 0xde51, 0x3711, 0x0, 0x0);
        gbc.writeMem(0x3d8b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x14db);
        EXPECT(gbc.pc(), 0x3d8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00ED
        gbc.setState(0xcd74, 0x2177, 0x8bb0, 0xbb14, 0x1516, 0xce1e, 0x0, 0x1);
        gbc.writeMem(0xcd74, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2177);
        EXPECT(gbc.pc(), 0xcd76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd74), 0xcb);
        EXPECT(gbc.readMem(0xcd75), 0xd0);
        // CB D0 00EE
        gbc.setState(0xc0ba, 0xb2f6, 0x1270, 0xa119, 0xcd6f, 0x8b5c, 0x1, 0x0);
        gbc.writeMem(0xc0ba, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb2f6);
        EXPECT(gbc.pc(), 0xc0bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0ba), 0xcb);
        EXPECT(gbc.readMem(0xc0bb), 0xd0);
        // CB D0 00EF
        gbc.setState(0x1a02, 0x9dfd, 0x6d30, 0x46e8, 0xac5d, 0x67e, 0x0, 0x1);
        gbc.writeMem(0x1a02, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9dfd);
        EXPECT(gbc.pc(), 0x1a04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00F0
        gbc.setState(0xa082, 0xb066, 0x6230, 0xe00, 0xf2df, 0x7e9c, 0x1, 0x1);
        gbc.writeMem(0xa082, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb066);
        EXPECT(gbc.pc(), 0xa084);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa082), 0xcb);
        EXPECT(gbc.readMem(0xa083), 0xd0);
        // CB D0 00F1
        gbc.setState(0x735b, 0x3d11, 0x7e70, 0x5445, 0x1611, 0x8ec9, 0x0, 0x0);
        gbc.writeMem(0x735b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3d11);
        EXPECT(gbc.pc(), 0x735d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00F2
        gbc.setState(0x8a13, 0x16e4, 0x3480, 0x6b0e, 0xcaf2, 0x8741, 0x0, 0x0);
        gbc.writeMem(0x8a13, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x16e4);
        EXPECT(gbc.pc(), 0x8a15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a13), 0xcb);
        EXPECT(gbc.readMem(0x8a14), 0xd0);
        // CB D0 00F4
        gbc.setState(0x9f57, 0xffc1, 0x8400, 0xdd4b, 0xe883, 0x1df3, 0x1, 0x1);
        gbc.writeMem(0x9f57, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xffc1);
        EXPECT(gbc.pc(), 0x9f59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f57), 0xcb);
        EXPECT(gbc.readMem(0x9f58), 0xd0);
        // CB D0 00F5
        gbc.setState(0x331e, 0xfc00, 0xe9f0, 0xa4bd, 0xf9e7, 0xdc, 0x0, 0x1);
        gbc.writeMem(0x331e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xfc00);
        EXPECT(gbc.pc(), 0x3320);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00F6
        gbc.setState(0x84d7, 0x1de8, 0xaa00, 0x8b42, 0x577a, 0x4611, 0x0, 0x0);
        gbc.writeMem(0x84d7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x1de8);
        EXPECT(gbc.pc(), 0x84d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84d7), 0xcb);
        EXPECT(gbc.readMem(0x84d8), 0xd0);
        // CB D0 00F7
        gbc.setState(0x17a3, 0xf5f3, 0xb410, 0x56b2, 0x9493, 0xb790, 0x1, 0x0);
        gbc.writeMem(0x17a3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xf5f3);
        EXPECT(gbc.pc(), 0x17a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00F8
        gbc.setState(0xd159, 0x39bf, 0xb770, 0x14cc, 0x161c, 0xc895, 0x0, 0x1);
        gbc.writeMem(0xd159, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x39bf);
        EXPECT(gbc.pc(), 0xd15b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd159), 0xcb);
        EXPECT(gbc.readMem(0xd15a), 0xd0);
        // CB D0 00F9
        gbc.setState(0x6355, 0x5acd, 0xea90, 0xd05b, 0x4c85, 0xecfb, 0x0, 0x0);
        gbc.writeMem(0x6355, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x5acd);
        EXPECT(gbc.pc(), 0x6357);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 00FA
        gbc.setState(0xb863, 0x4009, 0x9ae0, 0xc3dd, 0xecc3, 0xcb1f, 0x1, 0x1);
        gbc.writeMem(0xb863, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4009);
        EXPECT(gbc.pc(), 0xb865);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb863), 0xcb);
        EXPECT(gbc.readMem(0xb864), 0xd0);
        // CB D0 00FC
        gbc.setState(0x3901, 0x9959, 0x6720, 0xfa16, 0xbdae, 0xa791, 0x1, 0x0);
        gbc.writeMem(0x3901, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9959);
        EXPECT(gbc.pc(), 0x3903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 00FD
        gbc.setState(0x9d67, 0xcf6a, 0xd370, 0xcd76, 0xb83, 0x6b99, 0x0, 0x1);
        gbc.writeMem(0x9d67, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xcf6a);
        EXPECT(gbc.pc(), 0x9d69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d67), 0xcb);
        EXPECT(gbc.readMem(0x9d68), 0xd0);
        // CB D0 00FE
        gbc.setState(0xe3e7, 0xe7a4, 0x100, 0x71f5, 0xd613, 0x214b, 0x0, 0x1);
        gbc.writeMem(0xe3e7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe7a4);
        EXPECT(gbc.pc(), 0xe3e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3e7), 0xcb);
        EXPECT(gbc.readMem(0xe3e8), 0xd0);
        // CB D0 00FF
        gbc.setState(0x8c0d, 0x5a8f, 0xeb00, 0x105c, 0xd4ce, 0x7dd8, 0x1, 0x1);
        gbc.writeMem(0x8c0d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5a8f);
        EXPECT(gbc.pc(), 0x8c0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c0d), 0xcb);
        EXPECT(gbc.readMem(0x8c0e), 0xd0);
        // CB D0 0100
        gbc.setState(0x5ae0, 0x5c15, 0x2940, 0xa094, 0xced7, 0x5f23, 0x1, 0x1);
        gbc.writeMem(0x5ae0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x5c15);
        EXPECT(gbc.pc(), 0x5ae2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0101
        gbc.setState(0xd69, 0x7c14, 0x1390, 0x9fd9, 0xa621, 0x2bb1, 0x0, 0x1);
        gbc.writeMem(0xd69, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x7c14);
        EXPECT(gbc.pc(), 0xd6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0102
        gbc.setState(0x54bb, 0xe0da, 0x1460, 0x96e9, 0x13e9, 0xb80c, 0x0, 0x0);
        gbc.writeMem(0x54bb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xe0da);
        EXPECT(gbc.pc(), 0x54bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0103
        gbc.setState(0xb26e, 0x76f8, 0x4240, 0x34a6, 0x4dbd, 0xd62b, 0x0, 0x1);
        gbc.writeMem(0xb26e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x76f8);
        EXPECT(gbc.pc(), 0xb270);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb26e), 0xcb);
        EXPECT(gbc.readMem(0xb26f), 0xd0);
        // CB D0 0104
        gbc.setState(0xd3ff, 0xba46, 0x6de0, 0xa122, 0x6cc3, 0x43ce, 0x1, 0x0);
        gbc.writeMem(0xd3ff, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xba46);
        EXPECT(gbc.pc(), 0xd401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3ff), 0xcb);
        EXPECT(gbc.readMem(0xd400), 0xd0);
        // CB D0 0105
        gbc.setState(0x994b, 0x6ec8, 0xe610, 0xdc84, 0xd531, 0xeca9, 0x0, 0x1);
        gbc.writeMem(0x994b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x6ec8);
        EXPECT(gbc.pc(), 0x994d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x994b), 0xcb);
        EXPECT(gbc.readMem(0x994c), 0xd0);
        // CB D0 0106
        gbc.setState(0x20c8, 0x682, 0x85b0, 0x1d18, 0xa9de, 0xdd66, 0x0, 0x0);
        gbc.writeMem(0x20c8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x682);
        EXPECT(gbc.pc(), 0x20ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0107
        gbc.setState(0xc15, 0x1c5f, 0x1a00, 0x962e, 0x48c6, 0xac5f, 0x1, 0x1);
        gbc.writeMem(0xc15, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x1c5f);
        EXPECT(gbc.pc(), 0xc17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0108
        gbc.setState(0x2354, 0xd833, 0x9580, 0xe499, 0x5255, 0x3c8a, 0x0, 0x0);
        gbc.writeMem(0x2354, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xd833);
        EXPECT(gbc.pc(), 0x2356);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0109
        gbc.setState(0x9647, 0x9697, 0xeb30, 0xd9cb, 0xcfcc, 0xf483, 0x0, 0x0);
        gbc.writeMem(0x9647, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9697);
        EXPECT(gbc.pc(), 0x9649);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9647), 0xcb);
        EXPECT(gbc.readMem(0x9648), 0xd0);
        // CB D0 010A
        gbc.setState(0x9560, 0xab80, 0xbd80, 0x5411, 0x26f5, 0x4, 0x1, 0x1);
        gbc.writeMem(0x9560, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xab80);
        EXPECT(gbc.pc(), 0x9562);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9560), 0xcb);
        EXPECT(gbc.readMem(0x9561), 0xd0);
        // CB D0 010B
        gbc.setState(0xafd6, 0x81d8, 0xfa50, 0xf61c, 0xd4a2, 0x4146, 0x0, 0x0);
        gbc.writeMem(0xafd6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x81d8);
        EXPECT(gbc.pc(), 0xafd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafd6), 0xcb);
        EXPECT(gbc.readMem(0xafd7), 0xd0);
        // CB D0 010C
        gbc.setState(0xc390, 0xf4ce, 0x6660, 0x1e6f, 0x5f48, 0x7ac2, 0x0, 0x0);
        gbc.writeMem(0xc390, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf4ce);
        EXPECT(gbc.pc(), 0xc392);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc390), 0xcb);
        EXPECT(gbc.readMem(0xc391), 0xd0);
        // CB D0 010D
        gbc.setState(0xbcb6, 0xee62, 0xe6d0, 0x612a, 0xd8a7, 0x66d9, 0x0, 0x1);
        gbc.writeMem(0xbcb6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xee62);
        EXPECT(gbc.pc(), 0xbcb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcb6), 0xcb);
        EXPECT(gbc.readMem(0xbcb7), 0xd0);
        // CB D0 010E
        gbc.setState(0xba30, 0xad72, 0xe4e0, 0x675c, 0xd143, 0x73d6, 0x1, 0x0);
        gbc.writeMem(0xba30, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xad72);
        EXPECT(gbc.pc(), 0xba32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba30), 0xcb);
        EXPECT(gbc.readMem(0xba31), 0xd0);
        // CB D0 010F
        gbc.setState(0xcb83, 0x5b85, 0x8400, 0xd934, 0x2787, 0x3d29, 0x0, 0x0);
        gbc.writeMem(0xcb83, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x5b85);
        EXPECT(gbc.pc(), 0xcb85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb83), 0xcb);
        EXPECT(gbc.readMem(0xcb84), 0xd0);
        // CB D0 0110
        gbc.setState(0x42d, 0x2163, 0x7f0, 0xa0bd, 0xfb7d, 0xaff6, 0x0, 0x0);
        gbc.writeMem(0x42d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2163);
        EXPECT(gbc.pc(), 0x42f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0111
        gbc.setState(0x9723, 0x3997, 0xd890, 0x2da4, 0x400e, 0x6034, 0x1, 0x1);
        gbc.writeMem(0x9723, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3997);
        EXPECT(gbc.pc(), 0x9725);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9723), 0xcb);
        EXPECT(gbc.readMem(0x9724), 0xd0);
        // CB D0 0112
        gbc.setState(0x36ac, 0x2bca, 0xf3b0, 0xadc7, 0x67f, 0xda2a, 0x0, 0x0);
        gbc.writeMem(0x36ac, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2bca);
        EXPECT(gbc.pc(), 0x36ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0113
        gbc.setState(0x4a0f, 0xb63f, 0xc500, 0x995f, 0x6035, 0xa0d3, 0x0, 0x0);
        gbc.writeMem(0x4a0f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb63f);
        EXPECT(gbc.pc(), 0x4a11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0114
        gbc.setState(0x1f8e, 0xb0b8, 0x64e0, 0x86a7, 0xa9aa, 0xe4a4, 0x0, 0x1);
        gbc.writeMem(0x1f8e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb0b8);
        EXPECT(gbc.pc(), 0x1f90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0115
        gbc.setState(0xcb4a, 0x6846, 0x2560, 0x933b, 0xd19c, 0x6f21, 0x1, 0x0);
        gbc.writeMem(0xcb4a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6846);
        EXPECT(gbc.pc(), 0xcb4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb4a), 0xcb);
        EXPECT(gbc.readMem(0xcb4b), 0xd0);
        // CB D0 0116
        gbc.setState(0x2231, 0xa36, 0x1fc0, 0xda71, 0xe1dd, 0x4bea, 0x1, 0x1);
        gbc.writeMem(0x2231, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa36);
        EXPECT(gbc.pc(), 0x2233);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0117
        gbc.setState(0x4b03, 0xb72a, 0x9520, 0x2871, 0x1d3c, 0xf408, 0x0, 0x1);
        gbc.writeMem(0x4b03, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb72a);
        EXPECT(gbc.pc(), 0x4b05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0118
        gbc.setState(0x2729, 0x82c2, 0x2370, 0x54a5, 0xfd4d, 0xb8af, 0x1, 0x0);
        gbc.writeMem(0x2729, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x82c2);
        EXPECT(gbc.pc(), 0x272b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0119
        gbc.setState(0x500e, 0x953d, 0x3eb0, 0xd262, 0xac9b, 0x1231, 0x0, 0x0);
        gbc.writeMem(0x500e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x953d);
        EXPECT(gbc.pc(), 0x5010);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 011A
        gbc.setState(0x5d2f, 0x61ab, 0xf5f0, 0xa408, 0x765e, 0x6319, 0x0, 0x1);
        gbc.writeMem(0x5d2f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x61ab);
        EXPECT(gbc.pc(), 0x5d31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 011B
        gbc.setState(0x7134, 0xa364, 0xef0, 0x7063, 0x1dc5, 0xf790, 0x0, 0x1);
        gbc.writeMem(0x7134, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa364);
        EXPECT(gbc.pc(), 0x7136);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 011C
        gbc.setState(0xbab, 0x7185, 0xee00, 0x97be, 0xbe60, 0x7b9f, 0x1, 0x0);
        gbc.writeMem(0xbab, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7185);
        EXPECT(gbc.pc(), 0xbad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 011D
        gbc.setState(0x7d86, 0x6d7b, 0x63a0, 0x40d9, 0xd997, 0xb86d, 0x1, 0x0);
        gbc.writeMem(0x7d86, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6d7b);
        EXPECT(gbc.pc(), 0x7d88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 011E
        gbc.setState(0xd2c3, 0x9b72, 0x27b0, 0x314a, 0xec78, 0x4886, 0x1, 0x1);
        gbc.writeMem(0xd2c3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9b72);
        EXPECT(gbc.pc(), 0xd2c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2c3), 0xcb);
        EXPECT(gbc.readMem(0xd2c4), 0xd0);
        // CB D0 011F
        gbc.setState(0x626e, 0x16fa, 0x7e40, 0xc34e, 0x414d, 0x61b1, 0x0, 0x0);
        gbc.writeMem(0x626e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x16fa);
        EXPECT(gbc.pc(), 0x6270);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0120
        gbc.setState(0x49d5, 0x90f0, 0x7ac0, 0x4630, 0x6799, 0x3b39, 0x0, 0x1);
        gbc.writeMem(0x49d5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x90f0);
        EXPECT(gbc.pc(), 0x49d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0121
        gbc.setState(0x232e, 0x35e2, 0x8340, 0xf209, 0xa5f, 0x882a, 0x1, 0x0);
        gbc.writeMem(0x232e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x35e2);
        EXPECT(gbc.pc(), 0x2330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0122
        gbc.setState(0x23ad, 0x9cba, 0xcb70, 0x6642, 0x8492, 0x3ae9, 0x0, 0x1);
        gbc.writeMem(0x23ad, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9cba);
        EXPECT(gbc.pc(), 0x23af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0123
        gbc.setState(0xcecf, 0x344, 0xfa00, 0x3d12, 0xe6d, 0x61df, 0x0, 0x0);
        gbc.writeMem(0xcecf, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x344);
        EXPECT(gbc.pc(), 0xced1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcecf), 0xcb);
        EXPECT(gbc.readMem(0xced0), 0xd0);
        // CB D0 0124
        gbc.setState(0x8b69, 0x2938, 0x8c80, 0x112, 0xadba, 0xbde1, 0x1, 0x0);
        gbc.writeMem(0x8b69, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x2938);
        EXPECT(gbc.pc(), 0x8b6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b69), 0xcb);
        EXPECT(gbc.readMem(0x8b6a), 0xd0);
        // CB D0 0125
        gbc.setState(0xb943, 0x713, 0x2880, 0xbf71, 0x6e8, 0x7bce, 0x0, 0x1);
        gbc.writeMem(0xb943, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x713);
        EXPECT(gbc.pc(), 0xb945);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb943), 0xcb);
        EXPECT(gbc.readMem(0xb944), 0xd0);
        // CB D0 0126
        gbc.setState(0xd54, 0x6a4c, 0x8050, 0x9040, 0x4be7, 0x2c6a, 0x1, 0x1);
        gbc.writeMem(0xd54, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6a4c);
        EXPECT(gbc.pc(), 0xd56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0127
        gbc.setState(0xa533, 0x3676, 0x4110, 0xd5e2, 0x927b, 0x9b70, 0x1, 0x0);
        gbc.writeMem(0xa533, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3676);
        EXPECT(gbc.pc(), 0xa535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa533), 0xcb);
        EXPECT(gbc.readMem(0xa534), 0xd0);
        // CB D0 0128
        gbc.setState(0xedc, 0xc1c8, 0x4b00, 0x50d3, 0xe7a3, 0xc5ee, 0x0, 0x1);
        gbc.writeMem(0xedc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc1c8);
        EXPECT(gbc.pc(), 0xede);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 012A
        gbc.setState(0xb79d, 0x8cdb, 0xd150, 0x909c, 0xc24, 0x49db, 0x0, 0x1);
        gbc.writeMem(0xb79d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x8cdb);
        EXPECT(gbc.pc(), 0xb79f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb79d), 0xcb);
        EXPECT(gbc.readMem(0xb79e), 0xd0);
        // CB D0 012B
        gbc.setState(0x3234, 0xfcb5, 0x6860, 0xa718, 0xeeb1, 0xd3c4, 0x0, 0x1);
        gbc.writeMem(0x3234, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xfcb5);
        EXPECT(gbc.pc(), 0x3236);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 012C
        gbc.setState(0xeb87, 0x66ac, 0x8b80, 0x321f, 0x6313, 0x804, 0x0, 0x0);
        gbc.writeMem(0xeb87, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x66ac);
        EXPECT(gbc.pc(), 0xeb89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb87), 0xcb);
        EXPECT(gbc.readMem(0xeb88), 0xd0);
        // CB D0 012D
        gbc.setState(0x2327, 0xf4df, 0x5550, 0x81d4, 0x5bd9, 0x43a4, 0x1, 0x0);
        gbc.writeMem(0x2327, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf4df);
        EXPECT(gbc.pc(), 0x2329);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 012E
        gbc.setState(0xc772, 0x3665, 0xe040, 0x4997, 0x6198, 0xca35, 0x1, 0x0);
        gbc.writeMem(0xc772, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3665);
        EXPECT(gbc.pc(), 0xc774);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc772), 0xcb);
        EXPECT(gbc.readMem(0xc773), 0xd0);
        // CB D0 012F
        gbc.setState(0xa317, 0xe0c, 0x640, 0x25f3, 0x57b3, 0xb687, 0x0, 0x1);
        gbc.writeMem(0xa317, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe0c);
        EXPECT(gbc.pc(), 0xa319);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa317), 0xcb);
        EXPECT(gbc.readMem(0xa318), 0xd0);
        // CB D0 0130
        gbc.setState(0x4edf, 0x9d1b, 0x5730, 0xf7ac, 0x2bce, 0xd130, 0x0, 0x1);
        gbc.writeMem(0x4edf, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9d1b);
        EXPECT(gbc.pc(), 0x4ee1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0131
        gbc.setState(0xaffd, 0x7fae, 0x3280, 0x28d9, 0x9197, 0xada3, 0x1, 0x0);
        gbc.writeMem(0xaffd, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x7fae);
        EXPECT(gbc.pc(), 0xafff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaffd), 0xcb);
        EXPECT(gbc.readMem(0xaffe), 0xd0);
        // CB D0 0132
        gbc.setState(0x389a, 0xf90e, 0x5220, 0x1a99, 0x1154, 0x6a58, 0x0, 0x0);
        gbc.writeMem(0x389a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xf90e);
        EXPECT(gbc.pc(), 0x389c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0133
        gbc.setState(0x8468, 0xe582, 0x14a0, 0xdec5, 0xa59, 0x3ba7, 0x1, 0x1);
        gbc.writeMem(0x8468, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xe582);
        EXPECT(gbc.pc(), 0x846a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8468), 0xcb);
        EXPECT(gbc.readMem(0x8469), 0xd0);
        // CB D0 0134
        gbc.setState(0x8aa1, 0xa4cd, 0x28c0, 0x583, 0x5e27, 0x7af9, 0x0, 0x1);
        gbc.writeMem(0x8aa1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xa4cd);
        EXPECT(gbc.pc(), 0x8aa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aa1), 0xcb);
        EXPECT(gbc.readMem(0x8aa2), 0xd0);
        // CB D0 0135
        gbc.setState(0xdb46, 0xd349, 0x95b0, 0xb853, 0x47ab, 0x5dff, 0x1, 0x1);
        gbc.writeMem(0xdb46, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd349);
        EXPECT(gbc.pc(), 0xdb48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb46), 0xcb);
        EXPECT(gbc.readMem(0xdb47), 0xd0);
        // CB D0 0136
        gbc.setState(0xecc4, 0xddd7, 0xe490, 0x32c4, 0x18bd, 0x1d6d, 0x0, 0x0);
        gbc.writeMem(0xecc4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xddd7);
        EXPECT(gbc.pc(), 0xecc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecc4), 0xcb);
        EXPECT(gbc.readMem(0xecc5), 0xd0);
        // CB D0 0137
        gbc.setState(0x4e1d, 0xe292, 0xe270, 0x3311, 0x220a, 0xd08, 0x0, 0x0);
        gbc.writeMem(0x4e1d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe292);
        EXPECT(gbc.pc(), 0x4e1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0138
        gbc.setState(0xb52c, 0xbb92, 0xa2b0, 0xaa05, 0xbe36, 0xd96, 0x1, 0x1);
        gbc.writeMem(0xb52c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xbb92);
        EXPECT(gbc.pc(), 0xb52e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb52c), 0xcb);
        EXPECT(gbc.readMem(0xb52d), 0xd0);
        // CB D0 0139
        gbc.setState(0x94bc, 0x2580, 0x9080, 0xd7b5, 0x446, 0xdc14, 0x1, 0x1);
        gbc.writeMem(0x94bc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2580);
        EXPECT(gbc.pc(), 0x94be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94bc), 0xcb);
        EXPECT(gbc.readMem(0x94bd), 0xd0);
        // CB D0 013A
        gbc.setState(0x34b8, 0xd64a, 0x36f0, 0x35a, 0x46df, 0x9e42, 0x0, 0x0);
        gbc.writeMem(0x34b8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xd64a);
        EXPECT(gbc.pc(), 0x34ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 013B
        gbc.setState(0x2f4a, 0x4e0e, 0x2650, 0xa9d8, 0x6f78, 0x8672, 0x0, 0x1);
        gbc.writeMem(0x2f4a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x4e0e);
        EXPECT(gbc.pc(), 0x2f4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 013C
        gbc.setState(0x8d5e, 0xe2f0, 0xbd40, 0x38d3, 0xc541, 0x87a6, 0x1, 0x1);
        gbc.writeMem(0x8d5e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xe2f0);
        EXPECT(gbc.pc(), 0x8d60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d5e), 0xcb);
        EXPECT(gbc.readMem(0x8d5f), 0xd0);
        // CB D0 013D
        gbc.setState(0xc6e5, 0xfe76, 0x49b0, 0xd4e3, 0xbf72, 0x75f8, 0x1, 0x1);
        gbc.writeMem(0xc6e5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xfe76);
        EXPECT(gbc.pc(), 0xc6e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6e5), 0xcb);
        EXPECT(gbc.readMem(0xc6e6), 0xd0);
        // CB D0 013E
        gbc.setState(0x15dc, 0x8da7, 0x61e0, 0x589f, 0x920, 0xc860, 0x0, 0x1);
        gbc.writeMem(0x15dc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8da7);
        EXPECT(gbc.pc(), 0x15de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 013F
        gbc.setState(0xce9b, 0xe33, 0x3eb0, 0xf2a2, 0x85d, 0xa008, 0x0, 0x1);
        gbc.writeMem(0xce9b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe33);
        EXPECT(gbc.pc(), 0xce9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce9b), 0xcb);
        EXPECT(gbc.readMem(0xce9c), 0xd0);
        // CB D0 0140
        gbc.setState(0x71cb, 0xb7eb, 0x3430, 0x4855, 0x8f71, 0x55ed, 0x1, 0x0);
        gbc.writeMem(0x71cb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb7eb);
        EXPECT(gbc.pc(), 0x71cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0141
        gbc.setState(0x4247, 0x800f, 0xd300, 0xf11e, 0x87a0, 0x269, 0x0, 0x1);
        gbc.writeMem(0x4247, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x800f);
        EXPECT(gbc.pc(), 0x4249);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0142
        gbc.setState(0xb2de, 0xb256, 0x5870, 0xda79, 0xeadb, 0x57e9, 0x0, 0x0);
        gbc.writeMem(0xb2de, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb256);
        EXPECT(gbc.pc(), 0xb2e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2de), 0xcb);
        EXPECT(gbc.readMem(0xb2df), 0xd0);
        // CB D0 0143
        gbc.setState(0xb74c, 0x91de, 0xb5c0, 0xefd3, 0x6067, 0xd063, 0x0, 0x1);
        gbc.writeMem(0xb74c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x91de);
        EXPECT(gbc.pc(), 0xb74e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb74c), 0xcb);
        EXPECT(gbc.readMem(0xb74d), 0xd0);
        // CB D0 0144
        gbc.setState(0x75d6, 0xb656, 0x70f0, 0x3f20, 0xea22, 0x8146, 0x0, 0x1);
        gbc.writeMem(0x75d6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xb656);
        EXPECT(gbc.pc(), 0x75d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0145
        gbc.setState(0x253e, 0x82ae, 0x7f90, 0xa40d, 0x77a1, 0xd8, 0x0, 0x1);
        gbc.writeMem(0x253e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x82ae);
        EXPECT(gbc.pc(), 0x2540);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0146
        gbc.setState(0x4c34, 0x3c51, 0xf490, 0x944d, 0xbd58, 0x247b, 0x1, 0x0);
        gbc.writeMem(0x4c34, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x3c51);
        EXPECT(gbc.pc(), 0x4c36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0147
        gbc.setState(0x8ae4, 0xf57a, 0xeb40, 0x3c15, 0x2dfa, 0x99af, 0x1, 0x1);
        gbc.writeMem(0x8ae4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf57a);
        EXPECT(gbc.pc(), 0x8ae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ae4), 0xcb);
        EXPECT(gbc.readMem(0x8ae5), 0xd0);
        // CB D0 0148
        gbc.setState(0xa82, 0xbdbd, 0x8910, 0xafb5, 0x1f86, 0x2f66, 0x1, 0x1);
        gbc.writeMem(0xa82, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xbdbd);
        EXPECT(gbc.pc(), 0xa84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0149
        gbc.setState(0x6965, 0x1a07, 0x340, 0x93af, 0x1e73, 0xec42, 0x1, 0x1);
        gbc.writeMem(0x6965, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x1a07);
        EXPECT(gbc.pc(), 0x6967);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 014A
        gbc.setState(0x2672, 0x812b, 0xab90, 0x68fc, 0x151, 0x2f65, 0x0, 0x1);
        gbc.writeMem(0x2672, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x812b);
        EXPECT(gbc.pc(), 0x2674);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 014B
        gbc.setState(0x9efd, 0xd230, 0x75d0, 0x81d1, 0x4674, 0x14d5, 0x1, 0x0);
        gbc.writeMem(0x9efd, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xd230);
        EXPECT(gbc.pc(), 0x9eff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9efd), 0xcb);
        EXPECT(gbc.readMem(0x9efe), 0xd0);
        // CB D0 014C
        gbc.setState(0xc76, 0xddd7, 0x6890, 0x201, 0xf59a, 0x1b01, 0x1, 0x0);
        gbc.writeMem(0xc76, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xddd7);
        EXPECT(gbc.pc(), 0xc78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 014D
        gbc.setState(0x52a7, 0xb1e2, 0x5530, 0x9223, 0x322d, 0xc543, 0x1, 0x0);
        gbc.writeMem(0x52a7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb1e2);
        EXPECT(gbc.pc(), 0x52a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 014E
        gbc.setState(0xcc72, 0x3080, 0xbf70, 0x3187, 0x4883, 0xf5d, 0x1, 0x1);
        gbc.writeMem(0xcc72, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3080);
        EXPECT(gbc.pc(), 0xcc74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc72), 0xcb);
        EXPECT(gbc.readMem(0xcc73), 0xd0);
        // CB D0 014F
        gbc.setState(0x3c95, 0x7794, 0x9170, 0xa569, 0xa113, 0xccfe, 0x1, 0x1);
        gbc.writeMem(0x3c95, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x7794);
        EXPECT(gbc.pc(), 0x3c97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0150
        gbc.setState(0x7e5d, 0x17f0, 0x6cc0, 0xb17d, 0x1a42, 0xd2d0, 0x0, 0x1);
        gbc.writeMem(0x7e5d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x17f0);
        EXPECT(gbc.pc(), 0x7e5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0151
        gbc.setState(0x45fd, 0x4638, 0x7580, 0xd3fd, 0x81c6, 0x313a, 0x0, 0x1);
        gbc.writeMem(0x45fd, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4638);
        EXPECT(gbc.pc(), 0x45ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0152
        gbc.setState(0x2665, 0xf8e6, 0xa800, 0xde07, 0x2864, 0xb9b5, 0x0, 0x1);
        gbc.writeMem(0x2665, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf8e6);
        EXPECT(gbc.pc(), 0x2667);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0153
        gbc.setState(0xdfff, 0x1d91, 0x1ac0, 0x963e, 0x1189, 0x8f7b, 0x1, 0x0);
        gbc.writeMem(0xdfff, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x1d91);
        EXPECT(gbc.pc(), 0xe001);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfff), 0xcb);
        EXPECT(gbc.readMem(0xe000), 0xd0);
        // CB D0 0154
        gbc.setState(0x421, 0x620, 0x7920, 0xafe3, 0xf066, 0x568a, 0x0, 0x1);
        gbc.writeMem(0x421, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x620);
        EXPECT(gbc.pc(), 0x423);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0155
        gbc.setState(0xdb2, 0x2eab, 0x9980, 0xe53, 0x5ae9, 0x8230, 0x0, 0x1);
        gbc.writeMem(0xdb2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2eab);
        EXPECT(gbc.pc(), 0xdb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0156
        gbc.setState(0x814e, 0x5c22, 0xd930, 0xaf5a, 0xf2a0, 0x5344, 0x0, 0x1);
        gbc.writeMem(0x814e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5c22);
        EXPECT(gbc.pc(), 0x8150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x814e), 0xcb);
        EXPECT(gbc.readMem(0x814f), 0xd0);
        // CB D0 0157
        gbc.setState(0x3bd0, 0xf12, 0xdf20, 0xbb0b, 0x1318, 0x93c5, 0x1, 0x1);
        gbc.writeMem(0x3bd0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf12);
        EXPECT(gbc.pc(), 0x3bd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0158
        gbc.setState(0x55a6, 0xb6b6, 0x7f70, 0xf627, 0x638b, 0x7ad, 0x1, 0x1);
        gbc.writeMem(0x55a6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xb6b6);
        EXPECT(gbc.pc(), 0x55a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0159
        gbc.setState(0xc1d7, 0xc59c, 0x9ee0, 0x17d4, 0x5ed3, 0x731d, 0x0, 0x0);
        gbc.writeMem(0xc1d7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xc59c);
        EXPECT(gbc.pc(), 0xc1d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1d7), 0xcb);
        EXPECT(gbc.readMem(0xc1d8), 0xd0);
        // CB D0 015A
        gbc.setState(0x1929, 0xa303, 0xfc80, 0x9408, 0xd5bd, 0x2dc1, 0x0, 0x1);
        gbc.writeMem(0x1929, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa303);
        EXPECT(gbc.pc(), 0x192b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 015B
        gbc.setState(0xe8e0, 0x883, 0x6890, 0xedcd, 0x9f32, 0x2d81, 0x1, 0x0);
        gbc.writeMem(0xe8e0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x883);
        EXPECT(gbc.pc(), 0xe8e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8e0), 0xcb);
        EXPECT(gbc.readMem(0xe8e1), 0xd0);
        // CB D0 015C
        gbc.setState(0xa8d1, 0x9013, 0xf730, 0xfcbd, 0xea0, 0x9318, 0x1, 0x1);
        gbc.writeMem(0xa8d1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9013);
        EXPECT(gbc.pc(), 0xa8d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8d1), 0xcb);
        EXPECT(gbc.readMem(0xa8d2), 0xd0);
        // CB D0 015D
        gbc.setState(0xee94, 0x8263, 0x4f80, 0xb15, 0x4b5a, 0xc202, 0x1, 0x1);
        gbc.writeMem(0xee94, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x8263);
        EXPECT(gbc.pc(), 0xee96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee94), 0xcb);
        EXPECT(gbc.readMem(0xee95), 0xd0);
        // CB D0 015E
        gbc.setState(0x27c1, 0x37b0, 0xbc50, 0xb8dd, 0xe575, 0x5359, 0x1, 0x1);
        gbc.writeMem(0x27c1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x37b0);
        EXPECT(gbc.pc(), 0x27c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 015F
        gbc.setState(0x9b4b, 0x6fc6, 0xffb0, 0x3d0, 0xa6fb, 0xe865, 0x1, 0x0);
        gbc.writeMem(0x9b4b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x6fc6);
        EXPECT(gbc.pc(), 0x9b4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b4b), 0xcb);
        EXPECT(gbc.readMem(0x9b4c), 0xd0);
        // CB D0 0160
        gbc.setState(0xb7e7, 0x4463, 0x4ad0, 0xc739, 0x8a39, 0xf, 0x0, 0x1);
        gbc.writeMem(0xb7e7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x4463);
        EXPECT(gbc.pc(), 0xb7e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7e7), 0xcb);
        EXPECT(gbc.readMem(0xb7e8), 0xd0);
        // CB D0 0161
        gbc.setState(0x6990, 0x5564, 0x1b20, 0x489e, 0x9756, 0xf79f, 0x0, 0x0);
        gbc.writeMem(0x6990, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5564);
        EXPECT(gbc.pc(), 0x6992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0162
        gbc.setState(0xccf, 0x265f, 0xcbc0, 0x5fab, 0x9c8, 0x8e3f, 0x1, 0x1);
        gbc.writeMem(0xccf, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x265f);
        EXPECT(gbc.pc(), 0xcd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0163
        gbc.setState(0x7b9b, 0x70b3, 0x7f50, 0x1d0e, 0xea40, 0x78ab, 0x0, 0x0);
        gbc.writeMem(0x7b9b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x70b3);
        EXPECT(gbc.pc(), 0x7b9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0164
        gbc.setState(0x1b4a, 0x36e, 0x4f0, 0xce9a, 0x256f, 0xa87c, 0x1, 0x0);
        gbc.writeMem(0x1b4a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x36e);
        EXPECT(gbc.pc(), 0x1b4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0165
        gbc.setState(0x1371, 0x1d2e, 0x6640, 0x528c, 0xb233, 0x4ac8, 0x1, 0x1);
        gbc.writeMem(0x1371, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x1d2e);
        EXPECT(gbc.pc(), 0x1373);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0166
        gbc.setState(0x350e, 0xb400, 0xc540, 0xe4a3, 0x78a6, 0x1af2, 0x0, 0x0);
        gbc.writeMem(0x350e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xb400);
        EXPECT(gbc.pc(), 0x3510);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0167
        gbc.setState(0xdd74, 0xda71, 0xce20, 0x6165, 0x46cc, 0xa7d7, 0x1, 0x0);
        gbc.writeMem(0xdd74, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xda71);
        EXPECT(gbc.pc(), 0xdd76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd74), 0xcb);
        EXPECT(gbc.readMem(0xdd75), 0xd0);
        // CB D0 0168
        gbc.setState(0x978e, 0xd8d8, 0xb230, 0x752, 0x4808, 0x3b0a, 0x1, 0x0);
        gbc.writeMem(0x978e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd8d8);
        EXPECT(gbc.pc(), 0x9790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x978e), 0xcb);
        EXPECT(gbc.readMem(0x978f), 0xd0);
        // CB D0 0169
        gbc.setState(0x3376, 0xa887, 0x2fa0, 0x5d55, 0x24a9, 0x31b3, 0x0, 0x1);
        gbc.writeMem(0x3376, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa887);
        EXPECT(gbc.pc(), 0x3378);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 016A
        gbc.setState(0x21d6, 0x7fa0, 0x6af0, 0x795a, 0x6e44, 0x2d27, 0x0, 0x1);
        gbc.writeMem(0x21d6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7fa0);
        EXPECT(gbc.pc(), 0x21d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 016B
        gbc.setState(0x75a8, 0xbea1, 0xd50, 0x8b86, 0xbf5d, 0x63a5, 0x0, 0x0);
        gbc.writeMem(0x75a8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xbea1);
        EXPECT(gbc.pc(), 0x75aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 016C
        gbc.setState(0xf000, 0x94e8, 0x8540, 0x34b, 0xe0fd, 0xa84, 0x0, 0x1);
        gbc.writeMem(0xf000, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x94e8);
        EXPECT(gbc.pc(), 0xf002);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf000), 0xcb);
        EXPECT(gbc.readMem(0xf001), 0xd0);
        // CB D0 016D
        gbc.setState(0x4f8f, 0x7126, 0x3580, 0x5b65, 0x6b46, 0x371c, 0x0, 0x0);
        gbc.writeMem(0x4f8f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7126);
        EXPECT(gbc.pc(), 0x4f91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 016E
        gbc.setState(0x2ff3, 0x8cea, 0x5c10, 0x648b, 0xd0d6, 0xaf0c, 0x1, 0x1);
        gbc.writeMem(0x2ff3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8cea);
        EXPECT(gbc.pc(), 0x2ff5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 016F
        gbc.setState(0xcd57, 0xcece, 0xc080, 0xa9ba, 0x3c14, 0xb2a2, 0x1, 0x0);
        gbc.writeMem(0xcd57, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xcece);
        EXPECT(gbc.pc(), 0xcd59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd57), 0xcb);
        EXPECT(gbc.readMem(0xcd58), 0xd0);
        // CB D0 0170
        gbc.setState(0x13ea, 0xaff1, 0x3a0, 0xf3e4, 0xe30a, 0xd331, 0x0, 0x1);
        gbc.writeMem(0x13ea, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xaff1);
        EXPECT(gbc.pc(), 0x13ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0171
        gbc.setState(0x45f9, 0xf31d, 0x68c0, 0x4057, 0x2d68, 0x690c, 0x1, 0x1);
        gbc.writeMem(0x45f9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf31d);
        EXPECT(gbc.pc(), 0x45fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0172
        gbc.setState(0x9d26, 0xe0f9, 0xa220, 0xef6, 0x535f, 0x277a, 0x0, 0x0);
        gbc.writeMem(0x9d26, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe0f9);
        EXPECT(gbc.pc(), 0x9d28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d26), 0xcb);
        EXPECT(gbc.readMem(0x9d27), 0xd0);
        // CB D0 0173
        gbc.setState(0xd9dd, 0x3d73, 0xf4d0, 0xcea3, 0x2739, 0xad5e, 0x0, 0x1);
        gbc.writeMem(0xd9dd, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x3d73);
        EXPECT(gbc.pc(), 0xd9df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9dd), 0xcb);
        EXPECT(gbc.readMem(0xd9de), 0xd0);
        // CB D0 0174
        gbc.setState(0xc939, 0x2b8a, 0x2820, 0x3ad1, 0xb8ff, 0xb491, 0x0, 0x0);
        gbc.writeMem(0xc939, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2b8a);
        EXPECT(gbc.pc(), 0xc93b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc939), 0xcb);
        EXPECT(gbc.readMem(0xc93a), 0xd0);
        // CB D0 0175
        gbc.setState(0x9eab, 0x89e4, 0xf2b0, 0xb2e6, 0x22fd, 0xfd5b, 0x1, 0x0);
        gbc.writeMem(0x9eab, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x89e4);
        EXPECT(gbc.pc(), 0x9ead);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eab), 0xcb);
        EXPECT(gbc.readMem(0x9eac), 0xd0);
        // CB D0 0176
        gbc.setState(0x604a, 0xbd15, 0xd8a0, 0xbbdc, 0x771e, 0x78, 0x1, 0x0);
        gbc.writeMem(0x604a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xbd15);
        EXPECT(gbc.pc(), 0x604c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0177
        gbc.setState(0x259a, 0x161a, 0xde10, 0xf86d, 0x9d0b, 0x6350, 0x1, 0x1);
        gbc.writeMem(0x259a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x161a);
        EXPECT(gbc.pc(), 0x259c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0178
        gbc.setState(0xdb78, 0xca1e, 0x17b0, 0x9168, 0x984a, 0x8a9d, 0x0, 0x0);
        gbc.writeMem(0xdb78, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xca1e);
        EXPECT(gbc.pc(), 0xdb7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb78), 0xcb);
        EXPECT(gbc.readMem(0xdb79), 0xd0);
        // CB D0 0179
        gbc.setState(0xef10, 0x6e3a, 0x6d60, 0x8db9, 0x29e5, 0x8447, 0x0, 0x1);
        gbc.writeMem(0xef10, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x6e3a);
        EXPECT(gbc.pc(), 0xef12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef10), 0xcb);
        EXPECT(gbc.readMem(0xef11), 0xd0);
        // CB D0 017A
        gbc.setState(0x3604, 0x2175, 0x8390, 0x37c0, 0xe3f9, 0x7d92, 0x0, 0x0);
        gbc.writeMem(0x3604, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2175);
        EXPECT(gbc.pc(), 0x3606);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 017C
        gbc.setState(0x9b67, 0xc3e7, 0x78c0, 0xd16b, 0xb2dc, 0x35af, 0x0, 0x0);
        gbc.writeMem(0x9b67, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xc3e7);
        EXPECT(gbc.pc(), 0x9b69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b67), 0xcb);
        EXPECT(gbc.readMem(0x9b68), 0xd0);
        // CB D0 017D
        gbc.setState(0xcd2b, 0x87bd, 0xfb0, 0x5b99, 0xdaee, 0xbbfb, 0x1, 0x0);
        gbc.writeMem(0xcd2b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x87bd);
        EXPECT(gbc.pc(), 0xcd2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd2b), 0xcb);
        EXPECT(gbc.readMem(0xcd2c), 0xd0);
        // CB D0 017E
        gbc.setState(0xd266, 0xc5b7, 0xb990, 0x5605, 0xe77c, 0x534a, 0x0, 0x0);
        gbc.writeMem(0xd266, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc5b7);
        EXPECT(gbc.pc(), 0xd268);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd266), 0xcb);
        EXPECT(gbc.readMem(0xd267), 0xd0);
        // CB D0 017F
        gbc.setState(0xba05, 0xa5ca, 0x1b80, 0xaba3, 0xec5a, 0xb432, 0x1, 0x1);
        gbc.writeMem(0xba05, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa5ca);
        EXPECT(gbc.pc(), 0xba07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba05), 0xcb);
        EXPECT(gbc.readMem(0xba06), 0xd0);
        // CB D0 0180
        gbc.setState(0x82cf, 0x73c1, 0x9040, 0xbec3, 0x2646, 0xde3e, 0x0, 0x0);
        gbc.writeMem(0x82cf, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x73c1);
        EXPECT(gbc.pc(), 0x82d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82cf), 0xcb);
        EXPECT(gbc.readMem(0x82d0), 0xd0);
        // CB D0 0181
        gbc.setState(0x7b70, 0x2ea9, 0x1870, 0x2ba2, 0xf8db, 0xec3a, 0x0, 0x1);
        gbc.writeMem(0x7b70, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x2ea9);
        EXPECT(gbc.pc(), 0x7b72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0182
        gbc.setState(0xb1e5, 0x32ce, 0x6f00, 0xd234, 0x16f2, 0x3f42, 0x0, 0x0);
        gbc.writeMem(0xb1e5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x32ce);
        EXPECT(gbc.pc(), 0xb1e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1e5), 0xcb);
        EXPECT(gbc.readMem(0xb1e6), 0xd0);
        // CB D0 0184
        gbc.setState(0xd6c4, 0x90d4, 0xde40, 0x1af7, 0x8e05, 0x6b28, 0x0, 0x0);
        gbc.writeMem(0xd6c4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x90d4);
        EXPECT(gbc.pc(), 0xd6c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6c4), 0xcb);
        EXPECT(gbc.readMem(0xd6c5), 0xd0);
        // CB D0 0185
        gbc.setState(0xacdc, 0x5cc3, 0xe580, 0x7d3e, 0x1df8, 0x1b7, 0x0, 0x1);
        gbc.writeMem(0xacdc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5cc3);
        EXPECT(gbc.pc(), 0xacde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacdc), 0xcb);
        EXPECT(gbc.readMem(0xacdd), 0xd0);
        // CB D0 0186
        gbc.setState(0x317d, 0x1435, 0x5d20, 0x521f, 0x3931, 0xd669, 0x0, 0x1);
        gbc.writeMem(0x317d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1435);
        EXPECT(gbc.pc(), 0x317f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0187
        gbc.setState(0xa02d, 0xe54, 0xed60, 0xb225, 0xdfa5, 0x4459, 0x0, 0x0);
        gbc.writeMem(0xa02d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe54);
        EXPECT(gbc.pc(), 0xa02f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa02d), 0xcb);
        EXPECT(gbc.readMem(0xa02e), 0xd0);
        // CB D0 0188
        gbc.setState(0x80e4, 0xce43, 0xeb30, 0x532a, 0x6413, 0x2b31, 0x0, 0x1);
        gbc.writeMem(0x80e4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xce43);
        EXPECT(gbc.pc(), 0x80e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80e4), 0xcb);
        EXPECT(gbc.readMem(0x80e5), 0xd0);
        // CB D0 0189
        gbc.setState(0xda96, 0x14c9, 0xbe90, 0xc8f1, 0xfc12, 0xebd8, 0x1, 0x1);
        gbc.writeMem(0xda96, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x14c9);
        EXPECT(gbc.pc(), 0xda98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda96), 0xcb);
        EXPECT(gbc.readMem(0xda97), 0xd0);
        // CB D0 018A
        gbc.setState(0x6092, 0xc9d6, 0xb5a0, 0xb726, 0xb97c, 0x3fcb, 0x1, 0x0);
        gbc.writeMem(0x6092, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xc9d6);
        EXPECT(gbc.pc(), 0x6094);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 018B
        gbc.setState(0x597f, 0xee10, 0xb0e0, 0x47d9, 0x95e0, 0x23eb, 0x1, 0x0);
        gbc.writeMem(0x597f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xee10);
        EXPECT(gbc.pc(), 0x5981);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 018C
        gbc.setState(0xb7c0, 0xa1a5, 0xdc30, 0x8290, 0x1ac8, 0x6427, 0x0, 0x0);
        gbc.writeMem(0xb7c0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xa1a5);
        EXPECT(gbc.pc(), 0xb7c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7c0), 0xcb);
        EXPECT(gbc.readMem(0xb7c1), 0xd0);
        // CB D0 018E
        gbc.setState(0x1aff, 0xf0f2, 0x59b0, 0xd9ad, 0x51bd, 0x460e, 0x1, 0x0);
        gbc.writeMem(0x1aff, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf0f2);
        EXPECT(gbc.pc(), 0x1b01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 018F
        gbc.setState(0x391e, 0x3e78, 0xb1f0, 0xa33c, 0x1315, 0xefe5, 0x0, 0x1);
        gbc.writeMem(0x391e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3e78);
        EXPECT(gbc.pc(), 0x3920);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0190
        gbc.setState(0x6c37, 0x35de, 0x7b20, 0xe2f6, 0x8d9f, 0xa157, 0x0, 0x1);
        gbc.writeMem(0x6c37, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x35de);
        EXPECT(gbc.pc(), 0x6c39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0191
        gbc.setState(0x9a42, 0xd7f8, 0xdfe0, 0x5dcb, 0x2b2b, 0x9d0e, 0x1, 0x0);
        gbc.writeMem(0x9a42, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd7f8);
        EXPECT(gbc.pc(), 0x9a44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a42), 0xcb);
        EXPECT(gbc.readMem(0x9a43), 0xd0);
        // CB D0 0192
        gbc.setState(0x4740, 0x611, 0x4870, 0x48a8, 0xd273, 0x449, 0x0, 0x1);
        gbc.writeMem(0x4740, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x611);
        EXPECT(gbc.pc(), 0x4742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0193
        gbc.setState(0x64ae, 0xa992, 0xa590, 0x1d03, 0x914c, 0xb6e3, 0x0, 0x0);
        gbc.writeMem(0x64ae, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa992);
        EXPECT(gbc.pc(), 0x64b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0194
        gbc.setState(0x2b05, 0xa240, 0x3bd0, 0x2b8c, 0x7890, 0x66c0, 0x1, 0x1);
        gbc.writeMem(0x2b05, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa240);
        EXPECT(gbc.pc(), 0x2b07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0195
        gbc.setState(0xf0c, 0x2944, 0xd3a0, 0xd34d, 0xd48f, 0xe809, 0x1, 0x1);
        gbc.writeMem(0xf0c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x2944);
        EXPECT(gbc.pc(), 0xf0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0196
        gbc.setState(0x8e03, 0x78c7, 0x3520, 0x7a0b, 0xdc34, 0xd632, 0x1, 0x0);
        gbc.writeMem(0x8e03, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x78c7);
        EXPECT(gbc.pc(), 0x8e05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e03), 0xcb);
        EXPECT(gbc.readMem(0x8e04), 0xd0);
        // CB D0 0197
        gbc.setState(0x427b, 0x3afa, 0x3220, 0x9d92, 0xd3be, 0x2b8c, 0x1, 0x0);
        gbc.writeMem(0x427b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3afa);
        EXPECT(gbc.pc(), 0x427d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0198
        gbc.setState(0x1d20, 0xefc6, 0x86e0, 0x835b, 0x66d7, 0xc127, 0x1, 0x0);
        gbc.writeMem(0x1d20, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xefc6);
        EXPECT(gbc.pc(), 0x1d22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0199
        gbc.setState(0x5b69, 0x246a, 0xe4f0, 0x9275, 0xb34b, 0xbbf6, 0x0, 0x0);
        gbc.writeMem(0x5b69, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x246a);
        EXPECT(gbc.pc(), 0x5b6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 019A
        gbc.setState(0x5cee, 0x24a5, 0xffb0, 0x5cab, 0x5f48, 0xf552, 0x0, 0x1);
        gbc.writeMem(0x5cee, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x24a5);
        EXPECT(gbc.pc(), 0x5cf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 019B
        gbc.setState(0x7eaf, 0xe835, 0x5cf0, 0x7f6d, 0xa740, 0x2fa6, 0x1, 0x0);
        gbc.writeMem(0x7eaf, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xe835);
        EXPECT(gbc.pc(), 0x7eb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 019C
        gbc.setState(0xc059, 0xfba, 0x9b00, 0xc6e4, 0xb862, 0x3b76, 0x0, 0x1);
        gbc.writeMem(0xc059, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xfba);
        EXPECT(gbc.pc(), 0xc05b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc059), 0xcb);
        EXPECT(gbc.readMem(0xc05a), 0xd0);
        // CB D0 019D
        gbc.setState(0xa297, 0x2261, 0x1e0, 0xd715, 0x7e79, 0xc499, 0x0, 0x1);
        gbc.writeMem(0xa297, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x2261);
        EXPECT(gbc.pc(), 0xa299);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa297), 0xcb);
        EXPECT(gbc.readMem(0xa298), 0xd0);
        // CB D0 019E
        gbc.setState(0x7d8e, 0x7766, 0x7d50, 0x3f77, 0x82c8, 0x7d06, 0x0, 0x0);
        gbc.writeMem(0x7d8e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7766);
        EXPECT(gbc.pc(), 0x7d90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 019F
        gbc.setState(0x1c14, 0xefaa, 0xd890, 0xf943, 0x5c29, 0xc4e9, 0x1, 0x1);
        gbc.writeMem(0x1c14, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xefaa);
        EXPECT(gbc.pc(), 0x1c16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01A0
        gbc.setState(0xbc83, 0xd9c1, 0xfb10, 0x119c, 0x5869, 0x65f3, 0x1, 0x0);
        gbc.writeMem(0xbc83, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd9c1);
        EXPECT(gbc.pc(), 0xbc85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc83), 0xcb);
        EXPECT(gbc.readMem(0xbc84), 0xd0);
        // CB D0 01A1
        gbc.setState(0x96dd, 0xd1f3, 0xe4c0, 0x4dce, 0x6b9c, 0xdace, 0x0, 0x0);
        gbc.writeMem(0x96dd, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xd1f3);
        EXPECT(gbc.pc(), 0x96df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96dd), 0xcb);
        EXPECT(gbc.readMem(0x96de), 0xd0);
        // CB D0 01A2
        gbc.setState(0xe2ea, 0xab02, 0xc690, 0x25f5, 0x7af4, 0x658d, 0x0, 0x0);
        gbc.writeMem(0xe2ea, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xab02);
        EXPECT(gbc.pc(), 0xe2ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2ea), 0xcb);
        EXPECT(gbc.readMem(0xe2eb), 0xd0);
        // CB D0 01A3
        gbc.setState(0x7348, 0x30fc, 0x9cc0, 0x1d78, 0x4611, 0xfc74, 0x1, 0x1);
        gbc.writeMem(0x7348, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x30fc);
        EXPECT(gbc.pc(), 0x734a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 01A5
        gbc.setState(0x6a08, 0xf46c, 0x6a60, 0xc0a9, 0x152f, 0x3d51, 0x1, 0x1);
        gbc.writeMem(0x6a08, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf46c);
        EXPECT(gbc.pc(), 0x6a0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 01A6
        gbc.setState(0x577d, 0x9383, 0xa860, 0xdcf1, 0xbfc, 0xb425, 0x1, 0x0);
        gbc.writeMem(0x577d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9383);
        EXPECT(gbc.pc(), 0x577f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 01A8
        gbc.setState(0x8344, 0x829a, 0x2aa0, 0x5d2, 0x27dc, 0x68a5, 0x0, 0x0);
        gbc.writeMem(0x8344, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x829a);
        EXPECT(gbc.pc(), 0x8346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8344), 0xcb);
        EXPECT(gbc.readMem(0x8345), 0xd0);
        // CB D0 01A9
        gbc.setState(0xede2, 0x9fbd, 0x5aa0, 0x5a9a, 0xe25d, 0x7b0f, 0x0, 0x0);
        gbc.writeMem(0xede2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9fbd);
        EXPECT(gbc.pc(), 0xede4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xede2), 0xcb);
        EXPECT(gbc.readMem(0xede3), 0xd0);
        // CB D0 01AA
        gbc.setState(0x3f52, 0x9408, 0xdb60, 0xf6e5, 0x1309, 0x8351, 0x1, 0x0);
        gbc.writeMem(0x3f52, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9408);
        EXPECT(gbc.pc(), 0x3f54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 01AB
        gbc.setState(0x31c6, 0xdaa9, 0x86c0, 0x2e67, 0x6666, 0xc5d7, 0x0, 0x1);
        gbc.writeMem(0x31c6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xdaa9);
        EXPECT(gbc.pc(), 0x31c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 01AC
        gbc.setState(0xcbe2, 0xc31f, 0xa40, 0x42f1, 0xc539, 0x8e84, 0x1, 0x0);
        gbc.writeMem(0xcbe2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc31f);
        EXPECT(gbc.pc(), 0xcbe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbe2), 0xcb);
        EXPECT(gbc.readMem(0xcbe3), 0xd0);
        // CB D0 01AD
        gbc.setState(0xa37f, 0x593d, 0x2960, 0xa20b, 0x316b, 0x49c0, 0x0, 0x1);
        gbc.writeMem(0xa37f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x593d);
        EXPECT(gbc.pc(), 0xa381);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa37f), 0xcb);
        EXPECT(gbc.readMem(0xa380), 0xd0);
        // CB D0 01AE
        gbc.setState(0x2a61, 0x3a0e, 0x1650, 0x24ef, 0xd147, 0x31ac, 0x1, 0x1);
        gbc.writeMem(0x2a61, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x3a0e);
        EXPECT(gbc.pc(), 0x2a63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01AF
        gbc.setState(0xeeed, 0x8849, 0xe270, 0x393c, 0x89d, 0xad19, 0x0, 0x1);
        gbc.writeMem(0xeeed, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8849);
        EXPECT(gbc.pc(), 0xeeef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeed), 0xcb);
        EXPECT(gbc.readMem(0xeeee), 0xd0);
        // CB D0 01B0
        gbc.setState(0x78fb, 0xc6ad, 0xa2c0, 0xf04c, 0xfa90, 0x71b9, 0x0, 0x1);
        gbc.writeMem(0x78fb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc6ad);
        EXPECT(gbc.pc(), 0x78fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 01B1
        gbc.setState(0xd02a, 0xbb81, 0xf080, 0x54f1, 0x4941, 0xdbc2, 0x0, 0x1);
        gbc.writeMem(0xd02a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xbb81);
        EXPECT(gbc.pc(), 0xd02c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd02a), 0xcb);
        EXPECT(gbc.readMem(0xd02b), 0xd0);
        // CB D0 01B2
        gbc.setState(0x719, 0xe71b, 0x6450, 0xb773, 0x6943, 0xb134, 0x1, 0x0);
        gbc.writeMem(0x719, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe71b);
        EXPECT(gbc.pc(), 0x71b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01B3
        gbc.setState(0xb14d, 0x4d23, 0xf830, 0x5e28, 0xfad2, 0xa11b, 0x0, 0x1);
        gbc.writeMem(0xb14d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4d23);
        EXPECT(gbc.pc(), 0xb14f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb14d), 0xcb);
        EXPECT(gbc.readMem(0xb14e), 0xd0);
        // CB D0 01B4
        gbc.setState(0xbc4c, 0xb2a2, 0xd290, 0x186c, 0xf801, 0x50de, 0x0, 0x0);
        gbc.writeMem(0xbc4c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb2a2);
        EXPECT(gbc.pc(), 0xbc4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc4c), 0xcb);
        EXPECT(gbc.readMem(0xbc4d), 0xd0);
        // CB D0 01B5
        gbc.setState(0x76f5, 0x83c2, 0xd790, 0x398e, 0x769a, 0xe4ad, 0x0, 0x0);
        gbc.writeMem(0x76f5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x83c2);
        EXPECT(gbc.pc(), 0x76f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01B6
        gbc.setState(0x8fc7, 0xbdbb, 0x9e80, 0xfbb0, 0xa12c, 0xd1d9, 0x0, 0x1);
        gbc.writeMem(0x8fc7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xbdbb);
        EXPECT(gbc.pc(), 0x8fc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fc7), 0xcb);
        EXPECT(gbc.readMem(0x8fc8), 0xd0);
        // CB D0 01B7
        gbc.setState(0x8ac4, 0x6e74, 0xb5a0, 0x29d7, 0xd1aa, 0x891e, 0x0, 0x0);
        gbc.writeMem(0x8ac4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6e74);
        EXPECT(gbc.pc(), 0x8ac6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ac4), 0xcb);
        EXPECT(gbc.readMem(0x8ac5), 0xd0);
        // CB D0 01B8
        gbc.setState(0xa33c, 0xe8d3, 0xc40, 0x8bfc, 0x560a, 0x8061, 0x0, 0x1);
        gbc.writeMem(0xa33c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe8d3);
        EXPECT(gbc.pc(), 0xa33e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa33c), 0xcb);
        EXPECT(gbc.readMem(0xa33d), 0xd0);
        // CB D0 01B9
        gbc.setState(0xd8b2, 0x714d, 0x8870, 0x9ebb, 0xa188, 0xd47, 0x1, 0x1);
        gbc.writeMem(0xd8b2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x714d);
        EXPECT(gbc.pc(), 0xd8b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8b2), 0xcb);
        EXPECT(gbc.readMem(0xd8b3), 0xd0);
        // CB D0 01BA
        gbc.setState(0xdfa8, 0x4c51, 0x2470, 0xa717, 0xeb7c, 0xfcf4, 0x1, 0x1);
        gbc.writeMem(0xdfa8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4c51);
        EXPECT(gbc.pc(), 0xdfaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfa8), 0xcb);
        EXPECT(gbc.readMem(0xdfa9), 0xd0);
        // CB D0 01BB
        gbc.setState(0x972f, 0x3a0e, 0xd10, 0xa5ee, 0x598a, 0x37eb, 0x0, 0x1);
        gbc.writeMem(0x972f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3a0e);
        EXPECT(gbc.pc(), 0x9731);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x972f), 0xcb);
        EXPECT(gbc.readMem(0x9730), 0xd0);
        // CB D0 01BC
        gbc.setState(0x4d15, 0x3d29, 0xeed0, 0xcf3d, 0x4050, 0xb288, 0x1, 0x0);
        gbc.writeMem(0x4d15, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x3d29);
        EXPECT(gbc.pc(), 0x4d17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01BD
        gbc.setState(0xafeb, 0x33a3, 0x470, 0xd3b8, 0xcceb, 0x83e2, 0x0, 0x0);
        gbc.writeMem(0xafeb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x33a3);
        EXPECT(gbc.pc(), 0xafed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafeb), 0xcb);
        EXPECT(gbc.readMem(0xafec), 0xd0);
        // CB D0 01BE
        gbc.setState(0x3d4a, 0x43, 0xda30, 0x7c51, 0x864f, 0x9a0c, 0x1, 0x0);
        gbc.writeMem(0x3d4a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x43);
        EXPECT(gbc.pc(), 0x3d4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01BF
        gbc.setState(0x82d3, 0xd70c, 0x44e0, 0x16d2, 0xc710, 0x8dcc, 0x0, 0x0);
        gbc.writeMem(0x82d3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xd70c);
        EXPECT(gbc.pc(), 0x82d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82d3), 0xcb);
        EXPECT(gbc.readMem(0x82d4), 0xd0);
        // CB D0 01C0
        gbc.setState(0xa764, 0xf4d5, 0x32a0, 0xe455, 0x8442, 0x4174, 0x1, 0x0);
        gbc.writeMem(0xa764, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf4d5);
        EXPECT(gbc.pc(), 0xa766);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa764), 0xcb);
        EXPECT(gbc.readMem(0xa765), 0xd0);
        // CB D0 01C1
        gbc.setState(0x394, 0xae1, 0x91d0, 0x9579, 0xc1ad, 0x34d0, 0x0, 0x0);
        gbc.writeMem(0x394, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xae1);
        EXPECT(gbc.pc(), 0x396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01C2
        gbc.setState(0xb769, 0x7842, 0x2de0, 0x625b, 0xc7cf, 0xfc79, 0x0, 0x0);
        gbc.writeMem(0xb769, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x7842);
        EXPECT(gbc.pc(), 0xb76b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb769), 0xcb);
        EXPECT(gbc.readMem(0xb76a), 0xd0);
        // CB D0 01C3
        gbc.setState(0x11a1, 0xf769, 0xeb80, 0xce32, 0x7557, 0x17e5, 0x1, 0x1);
        gbc.writeMem(0x11a1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf769);
        EXPECT(gbc.pc(), 0x11a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 01C4
        gbc.setState(0xa356, 0x63d0, 0xd0b0, 0x7f21, 0x7a4b, 0x38aa, 0x1, 0x0);
        gbc.writeMem(0xa356, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x63d0);
        EXPECT(gbc.pc(), 0xa358);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa356), 0xcb);
        EXPECT(gbc.readMem(0xa357), 0xd0);
        // CB D0 01C5
        gbc.setState(0x1d82, 0x52f4, 0x5060, 0x8594, 0xe268, 0x5e93, 0x0, 0x0);
        gbc.writeMem(0x1d82, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x52f4);
        EXPECT(gbc.pc(), 0x1d84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 01C6
        gbc.setState(0xb7e1, 0xaef4, 0x64c0, 0x9163, 0xeb4f, 0x7747, 0x1, 0x0);
        gbc.writeMem(0xb7e1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xaef4);
        EXPECT(gbc.pc(), 0xb7e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7e1), 0xcb);
        EXPECT(gbc.readMem(0xb7e2), 0xd0);
        // CB D0 01C7
        gbc.setState(0xb82, 0x36da, 0x7ee0, 0x5afc, 0xb269, 0x20d1, 0x0, 0x1);
        gbc.writeMem(0xb82, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x36da);
        EXPECT(gbc.pc(), 0xb84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 01C8
        gbc.setState(0xd81, 0xdea, 0xfb50, 0x1438, 0x2726, 0x9712, 0x1, 0x0);
        gbc.writeMem(0xd81, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xdea);
        EXPECT(gbc.pc(), 0xd83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01C9
        gbc.setState(0x231f, 0xd587, 0x90, 0x66ac, 0x1802, 0xa4ba, 0x1, 0x0);
        gbc.writeMem(0x231f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd587);
        EXPECT(gbc.pc(), 0x2321);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01CA
        gbc.setState(0x1aba, 0xef2, 0xeb90, 0x4cf4, 0x42ac, 0x208b, 0x0, 0x0);
        gbc.writeMem(0x1aba, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xef2);
        EXPECT(gbc.pc(), 0x1abc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01CB
        gbc.setState(0x9c3b, 0xa201, 0x5460, 0xb18b, 0xcd62, 0xa537, 0x0, 0x1);
        gbc.writeMem(0x9c3b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xa201);
        EXPECT(gbc.pc(), 0x9c3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c3b), 0xcb);
        EXPECT(gbc.readMem(0x9c3c), 0xd0);
        // CB D0 01CC
        gbc.setState(0xe9ff, 0x6d43, 0x97c0, 0x6196, 0xc65f, 0x4a12, 0x0, 0x0);
        gbc.writeMem(0xe9ff, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6d43);
        EXPECT(gbc.pc(), 0xea01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ff), 0xcb);
        EXPECT(gbc.readMem(0xea00), 0xd0);
        // CB D0 01CD
        gbc.setState(0x332e, 0x187e, 0xa750, 0x8d48, 0xf06c, 0x2a82, 0x1, 0x0);
        gbc.writeMem(0x332e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x187e);
        EXPECT(gbc.pc(), 0x3330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01CE
        gbc.setState(0xc085, 0x361f, 0xcda0, 0x6060, 0xa573, 0x6454, 0x1, 0x1);
        gbc.writeMem(0xc085, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x361f);
        EXPECT(gbc.pc(), 0xc087);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc085), 0xcb);
        EXPECT(gbc.readMem(0xc086), 0xd0);
        // CB D0 01CF
        gbc.setState(0x5268, 0xf26, 0x5930, 0xa1cf, 0x2179, 0x5b67, 0x1, 0x1);
        gbc.writeMem(0x5268, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xf26);
        EXPECT(gbc.pc(), 0x526a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01D0
        gbc.setState(0x9ef9, 0xb83d, 0xa610, 0x6ac, 0x844e, 0xcc1f, 0x1, 0x1);
        gbc.writeMem(0x9ef9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb83d);
        EXPECT(gbc.pc(), 0x9efb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ef9), 0xcb);
        EXPECT(gbc.readMem(0x9efa), 0xd0);
        // CB D0 01D1
        gbc.setState(0xa6c7, 0x774b, 0x2360, 0xc7ee, 0x8071, 0xfa2d, 0x0, 0x1);
        gbc.writeMem(0xa6c7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x774b);
        EXPECT(gbc.pc(), 0xa6c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6c7), 0xcb);
        EXPECT(gbc.readMem(0xa6c8), 0xd0);
        // CB D0 01D2
        gbc.setState(0xeea9, 0x99b4, 0x10, 0xeb88, 0x37cc, 0xf24b, 0x1, 0x1);
        gbc.writeMem(0xeea9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x99b4);
        EXPECT(gbc.pc(), 0xeeab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeea9), 0xcb);
        EXPECT(gbc.readMem(0xeeaa), 0xd0);
        // CB D0 01D3
        gbc.setState(0x921, 0xaa88, 0xdc30, 0x3049, 0x4a59, 0x4951, 0x0, 0x1);
        gbc.writeMem(0x921, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xaa88);
        EXPECT(gbc.pc(), 0x923);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01D4
        gbc.setState(0xd065, 0xd75, 0xd650, 0x53b7, 0x4c68, 0xbe8b, 0x0, 0x1);
        gbc.writeMem(0xd065, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xd75);
        EXPECT(gbc.pc(), 0xd067);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd065), 0xcb);
        EXPECT(gbc.readMem(0xd066), 0xd0);
        // CB D0 01D5
        gbc.setState(0x5d5e, 0x4495, 0xeb60, 0xbabf, 0x4b2, 0x6c7e, 0x1, 0x0);
        gbc.writeMem(0x5d5e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x4495);
        EXPECT(gbc.pc(), 0x5d60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 01D6
        gbc.setState(0x16d4, 0x835c, 0x5880, 0x5f8b, 0xb0c9, 0xb6f7, 0x1, 0x0);
        gbc.writeMem(0x16d4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x835c);
        EXPECT(gbc.pc(), 0x16d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 01D7
        gbc.setState(0x4f7d, 0xc7a5, 0x5200, 0xbfbc, 0xbdcf, 0xd0c5, 0x0, 0x0);
        gbc.writeMem(0x4f7d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc7a5);
        EXPECT(gbc.pc(), 0x4f7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 01D8
        gbc.setState(0xc3b1, 0x2c20, 0x2a20, 0x5f46, 0x6837, 0xfcce, 0x0, 0x1);
        gbc.writeMem(0xc3b1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2c20);
        EXPECT(gbc.pc(), 0xc3b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3b1), 0xcb);
        EXPECT(gbc.readMem(0xc3b2), 0xd0);
        // CB D0 01D9
        gbc.setState(0x42ab, 0x3492, 0x1d0, 0xd1fa, 0x9fc5, 0x98b4, 0x0, 0x0);
        gbc.writeMem(0x42ab, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x3492);
        EXPECT(gbc.pc(), 0x42ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01DA
        gbc.setState(0xe0bc, 0xb065, 0x1080, 0x9237, 0xa41f, 0x239e, 0x0, 0x0);
        gbc.writeMem(0xe0bc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb065);
        EXPECT(gbc.pc(), 0xe0be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0bc), 0xcb);
        EXPECT(gbc.readMem(0xe0bd), 0xd0);
        // CB D0 01DB
        gbc.setState(0xa5d, 0xac0d, 0xf1b0, 0x9c50, 0x9f8c, 0x229b, 0x0, 0x0);
        gbc.writeMem(0xa5d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xac0d);
        EXPECT(gbc.pc(), 0xa5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01DC
        gbc.setState(0x258a, 0xd9cd, 0xa690, 0x5a50, 0x6544, 0x210e, 0x0, 0x0);
        gbc.writeMem(0x258a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd9cd);
        EXPECT(gbc.pc(), 0x258c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01DD
        gbc.setState(0x52f5, 0x9281, 0x3b20, 0x37f4, 0x566e, 0x8f0, 0x1, 0x1);
        gbc.writeMem(0x52f5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9281);
        EXPECT(gbc.pc(), 0x52f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 01DE
        gbc.setState(0x7746, 0x2d5e, 0x3760, 0xeee1, 0xc24f, 0xf54b, 0x0, 0x0);
        gbc.writeMem(0x7746, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2d5e);
        EXPECT(gbc.pc(), 0x7748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 01DF
        gbc.setState(0xc335, 0x7e64, 0x1d90, 0xd9d1, 0xc928, 0x28e8, 0x0, 0x1);
        gbc.writeMem(0xc335, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7e64);
        EXPECT(gbc.pc(), 0xc337);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc335), 0xcb);
        EXPECT(gbc.readMem(0xc336), 0xd0);
        // CB D0 01E0
        gbc.setState(0xb175, 0x9249, 0x3ed0, 0x763d, 0x16cb, 0xf369, 0x0, 0x1);
        gbc.writeMem(0xb175, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x9249);
        EXPECT(gbc.pc(), 0xb177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb175), 0xcb);
        EXPECT(gbc.readMem(0xb176), 0xd0);
        // CB D0 01E1
        gbc.setState(0x7d2a, 0xdcdb, 0x3b70, 0x3fbf, 0xd19e, 0xd8f1, 0x0, 0x0);
        gbc.writeMem(0x7d2a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xdcdb);
        EXPECT(gbc.pc(), 0x7d2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01E2
        gbc.setState(0xe504, 0x22e4, 0x1310, 0x66dc, 0x43de, 0x8665, 0x1, 0x0);
        gbc.writeMem(0xe504, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x22e4);
        EXPECT(gbc.pc(), 0xe506);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe504), 0xcb);
        EXPECT(gbc.readMem(0xe505), 0xd0);
        // CB D0 01E3
        gbc.setState(0xa389, 0xe8a2, 0x5dc0, 0xe773, 0xdd6a, 0xd134, 0x0, 0x1);
        gbc.writeMem(0xa389, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe8a2);
        EXPECT(gbc.pc(), 0xa38b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa389), 0xcb);
        EXPECT(gbc.readMem(0xa38a), 0xd0);
        // CB D0 01E4
        gbc.setState(0xe0e, 0x73c6, 0x9f50, 0xee60, 0x5352, 0xee7c, 0x0, 0x1);
        gbc.writeMem(0xe0e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x73c6);
        EXPECT(gbc.pc(), 0xe10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01E5
        gbc.setState(0x12d2, 0xb678, 0x6590, 0x213c, 0x5a8f, 0x6eda, 0x0, 0x1);
        gbc.writeMem(0x12d2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb678);
        EXPECT(gbc.pc(), 0x12d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01E6
        gbc.setState(0x2e5b, 0xa769, 0x8030, 0xe6c0, 0x4cfc, 0x1fe9, 0x0, 0x1);
        gbc.writeMem(0x2e5b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa769);
        EXPECT(gbc.pc(), 0x2e5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01E7
        gbc.setState(0xd6b4, 0x6f3d, 0xa00, 0x19e5, 0x1a18, 0x172c, 0x1, 0x1);
        gbc.writeMem(0xd6b4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x6f3d);
        EXPECT(gbc.pc(), 0xd6b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6b4), 0xcb);
        EXPECT(gbc.readMem(0xd6b5), 0xd0);
        // CB D0 01E8
        gbc.setState(0x8d3c, 0xcedd, 0x3c00, 0x214e, 0x122f, 0x3b2f, 0x1, 0x1);
        gbc.writeMem(0x8d3c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xcedd);
        EXPECT(gbc.pc(), 0x8d3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d3c), 0xcb);
        EXPECT(gbc.readMem(0x8d3d), 0xd0);
        // CB D0 01E9
        gbc.setState(0xc39d, 0x1745, 0xd910, 0x3e76, 0x5e9a, 0x31f0, 0x1, 0x1);
        gbc.writeMem(0xc39d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1745);
        EXPECT(gbc.pc(), 0xc39f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc39d), 0xcb);
        EXPECT(gbc.readMem(0xc39e), 0xd0);
        // CB D0 01EA
        gbc.setState(0xe5ec, 0x253b, 0xb300, 0x335a, 0xbad0, 0xd89d, 0x0, 0x0);
        gbc.writeMem(0xe5ec, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x253b);
        EXPECT(gbc.pc(), 0xe5ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5ec), 0xcb);
        EXPECT(gbc.readMem(0xe5ed), 0xd0);
        // CB D0 01EB
        gbc.setState(0x79b5, 0x1e80, 0xefb0, 0xadc1, 0x40ba, 0x2143, 0x1, 0x1);
        gbc.writeMem(0x79b5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1e80);
        EXPECT(gbc.pc(), 0x79b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01EC
        gbc.setState(0x6f07, 0xc083, 0x85e0, 0x85bc, 0xb8bc, 0x4fd7, 0x1, 0x0);
        gbc.writeMem(0x6f07, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc083);
        EXPECT(gbc.pc(), 0x6f09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 01ED
        gbc.setState(0x347f, 0x97c1, 0xae60, 0x599d, 0xaf0f, 0x7dd9, 0x1, 0x0);
        gbc.writeMem(0x347f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x97c1);
        EXPECT(gbc.pc(), 0x3481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 01EE
        gbc.setState(0x1d0c, 0x630b, 0x90, 0x2aa9, 0x1f88, 0x8099, 0x1, 0x0);
        gbc.writeMem(0x1d0c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x630b);
        EXPECT(gbc.pc(), 0x1d0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01EF
        gbc.setState(0xdd66, 0x70aa, 0xf660, 0x6598, 0x54e0, 0x5fcf, 0x1, 0x0);
        gbc.writeMem(0xdd66, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x70aa);
        EXPECT(gbc.pc(), 0xdd68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd66), 0xcb);
        EXPECT(gbc.readMem(0xdd67), 0xd0);
        // CB D0 01F0
        gbc.setState(0xcadf, 0x5346, 0xb600, 0xa0a4, 0x9506, 0x3409, 0x1, 0x1);
        gbc.writeMem(0xcadf, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5346);
        EXPECT(gbc.pc(), 0xcae1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcadf), 0xcb);
        EXPECT(gbc.readMem(0xcae0), 0xd0);
        // CB D0 01F1
        gbc.setState(0xedee, 0xc759, 0x7f0, 0xc3e, 0x630d, 0x57e4, 0x0, 0x1);
        gbc.writeMem(0xedee, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc759);
        EXPECT(gbc.pc(), 0xedf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedee), 0xcb);
        EXPECT(gbc.readMem(0xedef), 0xd0);
        // CB D0 01F2
        gbc.setState(0x3c02, 0x3e96, 0xd9a0, 0x3dd1, 0x80f5, 0xff3b, 0x1, 0x1);
        gbc.writeMem(0x3c02, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3e96);
        EXPECT(gbc.pc(), 0x3c04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 01F3
        gbc.setState(0xbe02, 0x2a33, 0x2a60, 0x8a6f, 0x6959, 0xa632, 0x0, 0x1);
        gbc.writeMem(0xbe02, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x2a33);
        EXPECT(gbc.pc(), 0xbe04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe02), 0xcb);
        EXPECT(gbc.readMem(0xbe03), 0xd0);
        // CB D0 01F4
        gbc.setState(0x3455, 0x9163, 0x830, 0x567b, 0xe7a5, 0xeb1c, 0x1, 0x1);
        gbc.writeMem(0x3455, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9163);
        EXPECT(gbc.pc(), 0x3457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01F5
        gbc.setState(0xceb6, 0x4836, 0x4990, 0x1067, 0x7cdd, 0x326e, 0x1, 0x0);
        gbc.writeMem(0xceb6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4836);
        EXPECT(gbc.pc(), 0xceb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceb6), 0xcb);
        EXPECT(gbc.readMem(0xceb7), 0xd0);
        // CB D0 01F6
        gbc.setState(0x5ebd, 0x8424, 0x3fd0, 0x6c72, 0xb4e2, 0xbcb0, 0x0, 0x0);
        gbc.writeMem(0x5ebd, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x8424);
        EXPECT(gbc.pc(), 0x5ebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01F7
        gbc.setState(0x1b53, 0xc34a, 0xc10, 0xe2b3, 0xb754, 0xd8fe, 0x1, 0x1);
        gbc.writeMem(0x1b53, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc34a);
        EXPECT(gbc.pc(), 0x1b55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01F8
        gbc.setState(0x666e, 0x3d66, 0x9e70, 0x163, 0x1423, 0x643d, 0x0, 0x1);
        gbc.writeMem(0x666e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x3d66);
        EXPECT(gbc.pc(), 0x6670);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 01F9
        gbc.setState(0xa24a, 0x750, 0xfb80, 0xd61a, 0x3402, 0x16b4, 0x1, 0x0);
        gbc.writeMem(0xa24a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x750);
        EXPECT(gbc.pc(), 0xa24c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa24a), 0xcb);
        EXPECT(gbc.readMem(0xa24b), 0xd0);
        // CB D0 01FB
        gbc.setState(0xd298, 0xd247, 0x930, 0xe62e, 0xbb77, 0x8219, 0x1, 0x0);
        gbc.writeMem(0xd298, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xd247);
        EXPECT(gbc.pc(), 0xd29a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd298), 0xcb);
        EXPECT(gbc.readMem(0xd299), 0xd0);
        // CB D0 01FC
        gbc.setState(0x1c03, 0xc47e, 0xb3c0, 0xbe5b, 0x1f54, 0x333, 0x1, 0x0);
        gbc.writeMem(0x1c03, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc47e);
        EXPECT(gbc.pc(), 0x1c05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 01FD
        gbc.setState(0xe167, 0xaec5, 0xb6d0, 0x862c, 0x39a6, 0x2662, 0x1, 0x1);
        gbc.writeMem(0xe167, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xaec5);
        EXPECT(gbc.pc(), 0xe169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe167), 0xcb);
        EXPECT(gbc.readMem(0xe168), 0xd0);
        // CB D0 01FE
        gbc.setState(0x9613, 0x527, 0x68b0, 0x717b, 0x4992, 0x7915, 0x1, 0x1);
        gbc.writeMem(0x9613, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x527);
        EXPECT(gbc.pc(), 0x9615);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9613), 0xcb);
        EXPECT(gbc.readMem(0x9614), 0xd0);
        // CB D0 01FF
        gbc.setState(0xc5a9, 0x5f47, 0x9820, 0xe575, 0x3c6e, 0x949f, 0x0, 0x0);
        gbc.writeMem(0xc5a9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5f47);
        EXPECT(gbc.pc(), 0xc5ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5a9), 0xcb);
        EXPECT(gbc.readMem(0xc5aa), 0xd0);
        // CB D0 0200
        gbc.setState(0xd2a3, 0xcf84, 0x4f00, 0xe4e3, 0xbaa9, 0x4c3, 0x1, 0x1);
        gbc.writeMem(0xd2a3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xcf84);
        EXPECT(gbc.pc(), 0xd2a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2a3), 0xcb);
        EXPECT(gbc.readMem(0xd2a4), 0xd0);
        // CB D0 0201
        gbc.setState(0x25c0, 0xa4e2, 0x7080, 0x8031, 0xef4e, 0x7112, 0x1, 0x1);
        gbc.writeMem(0x25c0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xa4e2);
        EXPECT(gbc.pc(), 0x25c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0202
        gbc.setState(0x5d87, 0xa018, 0x6960, 0xb796, 0x1a61, 0xae89, 0x1, 0x1);
        gbc.writeMem(0x5d87, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xa018);
        EXPECT(gbc.pc(), 0x5d89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0203
        gbc.setState(0x9480, 0x1bc0, 0x26e0, 0xef70, 0xaf32, 0x825, 0x1, 0x0);
        gbc.writeMem(0x9480, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x1bc0);
        EXPECT(gbc.pc(), 0x9482);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9480), 0xcb);
        EXPECT(gbc.readMem(0x9481), 0xd0);
        // CB D0 0205
        gbc.setState(0xc962, 0xa049, 0xb650, 0x7bf1, 0x51b, 0x3c78, 0x1, 0x1);
        gbc.writeMem(0xc962, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa049);
        EXPECT(gbc.pc(), 0xc964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc962), 0xcb);
        EXPECT(gbc.readMem(0xc963), 0xd0);
        // CB D0 0206
        gbc.setState(0xa15c, 0x4aba, 0x580, 0x2706, 0x776b, 0xc6e8, 0x1, 0x0);
        gbc.writeMem(0xa15c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4aba);
        EXPECT(gbc.pc(), 0xa15e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa15c), 0xcb);
        EXPECT(gbc.readMem(0xa15d), 0xd0);
        // CB D0 0207
        gbc.setState(0x353a, 0xe1a1, 0x4bf0, 0xfc39, 0x8e5f, 0x554d, 0x0, 0x0);
        gbc.writeMem(0x353a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe1a1);
        EXPECT(gbc.pc(), 0x353c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0208
        gbc.setState(0xb3c9, 0x2180, 0x6640, 0x4dd6, 0x3c37, 0xa03d, 0x0, 0x1);
        gbc.writeMem(0xb3c9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2180);
        EXPECT(gbc.pc(), 0xb3cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3c9), 0xcb);
        EXPECT(gbc.readMem(0xb3ca), 0xd0);
        // CB D0 0209
        gbc.setState(0xc4f7, 0xcf8a, 0xa420, 0xe0f2, 0xbba9, 0xcbad, 0x1, 0x0);
        gbc.writeMem(0xc4f7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xcf8a);
        EXPECT(gbc.pc(), 0xc4f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4f7), 0xcb);
        EXPECT(gbc.readMem(0xc4f8), 0xd0);
        // CB D0 020A
        gbc.setState(0x61ed, 0xe362, 0xec20, 0xc7af, 0xf90e, 0x73e2, 0x1, 0x0);
        gbc.writeMem(0x61ed, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe362);
        EXPECT(gbc.pc(), 0x61ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 020B
        gbc.setState(0xef21, 0x235d, 0x1b40, 0xd3e1, 0x48bb, 0xbf6e, 0x1, 0x1);
        gbc.writeMem(0xef21, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x235d);
        EXPECT(gbc.pc(), 0xef23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef21), 0xcb);
        EXPECT(gbc.readMem(0xef22), 0xd0);
        // CB D0 020C
        gbc.setState(0x4e81, 0x350d, 0xdf70, 0x152e, 0x78b9, 0x1679, 0x1, 0x1);
        gbc.writeMem(0x4e81, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x350d);
        EXPECT(gbc.pc(), 0x4e83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 020E
        gbc.setState(0x16de, 0xabce, 0xfea0, 0xb93b, 0x2fe7, 0xfdf9, 0x1, 0x1);
        gbc.writeMem(0x16de, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xabce);
        EXPECT(gbc.pc(), 0x16e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 020F
        gbc.setState(0x9cd9, 0xb52c, 0x5e10, 0x91a8, 0x4b99, 0x713e, 0x0, 0x0);
        gbc.writeMem(0x9cd9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb52c);
        EXPECT(gbc.pc(), 0x9cdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cd9), 0xcb);
        EXPECT(gbc.readMem(0x9cda), 0xd0);
        // CB D0 0210
        gbc.setState(0x66f8, 0x31f3, 0x72e0, 0x29d2, 0x7d4a, 0x4437, 0x1, 0x1);
        gbc.writeMem(0x66f8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x31f3);
        EXPECT(gbc.pc(), 0x66fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0211
        gbc.setState(0x4c56, 0xb375, 0xf560, 0xb2cc, 0xf968, 0x88dd, 0x0, 0x0);
        gbc.writeMem(0x4c56, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb375);
        EXPECT(gbc.pc(), 0x4c58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0212
        gbc.setState(0x4cbc, 0x8d5a, 0x9ee0, 0x126f, 0xc160, 0x1754, 0x0, 0x1);
        gbc.writeMem(0x4cbc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8d5a);
        EXPECT(gbc.pc(), 0x4cbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0213
        gbc.setState(0x8d3f, 0x3bcc, 0xe60, 0x800c, 0x6bb7, 0x453a, 0x1, 0x0);
        gbc.writeMem(0x8d3f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3bcc);
        EXPECT(gbc.pc(), 0x8d41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d3f), 0xcb);
        EXPECT(gbc.readMem(0x8d40), 0xd0);
        // CB D0 0214
        gbc.setState(0xe0f5, 0x52bd, 0x240, 0xf174, 0x90bd, 0xd918, 0x0, 0x0);
        gbc.writeMem(0xe0f5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x52bd);
        EXPECT(gbc.pc(), 0xe0f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0f5), 0xcb);
        EXPECT(gbc.readMem(0xe0f6), 0xd0);
        // CB D0 0215
        gbc.setState(0xc842, 0x5890, 0x7a00, 0x986e, 0x12d2, 0x620d, 0x1, 0x0);
        gbc.writeMem(0xc842, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5890);
        EXPECT(gbc.pc(), 0xc844);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc842), 0xcb);
        EXPECT(gbc.readMem(0xc843), 0xd0);
        // CB D0 0216
        gbc.setState(0x886, 0x72be, 0x92b0, 0x2186, 0x87e0, 0x727c, 0x0, 0x1);
        gbc.writeMem(0x886, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x72be);
        EXPECT(gbc.pc(), 0x888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0217
        gbc.setState(0xc11f, 0x6647, 0xdc70, 0xb5db, 0x6200, 0xff63, 0x1, 0x1);
        gbc.writeMem(0xc11f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6647);
        EXPECT(gbc.pc(), 0xc121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc11f), 0xcb);
        EXPECT(gbc.readMem(0xc120), 0xd0);
        // CB D0 0218
        gbc.setState(0xead2, 0x20a4, 0x6d00, 0x48c4, 0x7fec, 0xab20, 0x0, 0x1);
        gbc.writeMem(0xead2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x20a4);
        EXPECT(gbc.pc(), 0xead4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xead2), 0xcb);
        EXPECT(gbc.readMem(0xead3), 0xd0);
        // CB D0 0219
        gbc.setState(0x47e0, 0x845e, 0x8120, 0xd503, 0xa89a, 0x4d57, 0x1, 0x0);
        gbc.writeMem(0x47e0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x845e);
        EXPECT(gbc.pc(), 0x47e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 021A
        gbc.setState(0x2460, 0xb09c, 0xfc40, 0xa2ac, 0x639a, 0xcf64, 0x0, 0x0);
        gbc.writeMem(0x2460, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xb09c);
        EXPECT(gbc.pc(), 0x2462);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 021B
        gbc.setState(0x9940, 0x25b6, 0x2180, 0xdc5e, 0xd23f, 0x1c5, 0x0, 0x1);
        gbc.writeMem(0x9940, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x25b6);
        EXPECT(gbc.pc(), 0x9942);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9940), 0xcb);
        EXPECT(gbc.readMem(0x9941), 0xd0);
        // CB D0 021C
        gbc.setState(0xa60f, 0x89e7, 0x79f0, 0xfb15, 0x6c6e, 0x61c1, 0x0, 0x1);
        gbc.writeMem(0xa60f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x89e7);
        EXPECT(gbc.pc(), 0xa611);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa60f), 0xcb);
        EXPECT(gbc.readMem(0xa610), 0xd0);
        // CB D0 021D
        gbc.setState(0x7ab9, 0xa3b4, 0x6ec0, 0xc6c9, 0xf1e4, 0xf6ef, 0x0, 0x0);
        gbc.writeMem(0x7ab9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa3b4);
        EXPECT(gbc.pc(), 0x7abb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 021E
        gbc.setState(0x8858, 0x4b7d, 0x47f0, 0xfed3, 0xb, 0x1aaf, 0x0, 0x0);
        gbc.writeMem(0x8858, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4b7d);
        EXPECT(gbc.pc(), 0x885a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8858), 0xcb);
        EXPECT(gbc.readMem(0x8859), 0xd0);
        // CB D0 021F
        gbc.setState(0x6f70, 0x61a, 0x5a60, 0x47e1, 0x3978, 0x931a, 0x1, 0x1);
        gbc.writeMem(0x6f70, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x61a);
        EXPECT(gbc.pc(), 0x6f72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0220
        gbc.setState(0x74d7, 0xb3fb, 0x9b40, 0x7d9c, 0xb1a8, 0x1bd5, 0x0, 0x1);
        gbc.writeMem(0x74d7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xb3fb);
        EXPECT(gbc.pc(), 0x74d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0221
        gbc.setState(0x5356, 0x9a25, 0x1030, 0x845f, 0x391e, 0x4346, 0x1, 0x1);
        gbc.writeMem(0x5356, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9a25);
        EXPECT(gbc.pc(), 0x5358);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0222
        gbc.setState(0xe15b, 0x9b95, 0x67a0, 0x65be, 0x13cc, 0x5134, 0x1, 0x0);
        gbc.writeMem(0xe15b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9b95);
        EXPECT(gbc.pc(), 0xe15d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe15b), 0xcb);
        EXPECT(gbc.readMem(0xe15c), 0xd0);
        // CB D0 0223
        gbc.setState(0x43f2, 0x658f, 0xd950, 0x38cd, 0x1afc, 0xe042, 0x0, 0x0);
        gbc.writeMem(0x43f2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x658f);
        EXPECT(gbc.pc(), 0x43f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0224
        gbc.setState(0x9c8e, 0x294e, 0xf470, 0xb690, 0xacc1, 0x5cd2, 0x1, 0x0);
        gbc.writeMem(0x9c8e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x294e);
        EXPECT(gbc.pc(), 0x9c90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c8e), 0xcb);
        EXPECT(gbc.readMem(0x9c8f), 0xd0);
        // CB D0 0225
        gbc.setState(0x2ffe, 0xc435, 0xd980, 0x2f39, 0xf613, 0xb16b, 0x0, 0x1);
        gbc.writeMem(0x2ffe, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xc435);
        EXPECT(gbc.pc(), 0x3000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0226
        gbc.setState(0x22fa, 0xa19e, 0xa020, 0x3b3d, 0x6ddb, 0xb869, 0x0, 0x1);
        gbc.writeMem(0x22fa, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xa19e);
        EXPECT(gbc.pc(), 0x22fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0227
        gbc.setState(0x3a4b, 0xb8d1, 0xc040, 0x7e6a, 0xbea2, 0xcb87, 0x0, 0x1);
        gbc.writeMem(0x3a4b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb8d1);
        EXPECT(gbc.pc(), 0x3a4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0228
        gbc.setState(0xa89e, 0x7405, 0xfc80, 0x89f0, 0x82cf, 0x2d77, 0x0, 0x1);
        gbc.writeMem(0xa89e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7405);
        EXPECT(gbc.pc(), 0xa8a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa89e), 0xcb);
        EXPECT(gbc.readMem(0xa89f), 0xd0);
        // CB D0 0229
        gbc.setState(0xbc64, 0x1571, 0xfdb0, 0x4e2b, 0xf755, 0x5e26, 0x1, 0x0);
        gbc.writeMem(0xbc64, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1571);
        EXPECT(gbc.pc(), 0xbc66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc64), 0xcb);
        EXPECT(gbc.readMem(0xbc65), 0xd0);
        // CB D0 022A
        gbc.setState(0x1d57, 0x1c22, 0x9fd0, 0xb945, 0xe5f2, 0xfcb6, 0x0, 0x1);
        gbc.writeMem(0x1d57, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1c22);
        EXPECT(gbc.pc(), 0x1d59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 022B
        gbc.setState(0xa0ac, 0xf07a, 0x4850, 0x9a8b, 0xb642, 0x1c8f, 0x0, 0x1);
        gbc.writeMem(0xa0ac, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf07a);
        EXPECT(gbc.pc(), 0xa0ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0ac), 0xcb);
        EXPECT(gbc.readMem(0xa0ad), 0xd0);
        // CB D0 022C
        gbc.setState(0x258c, 0xa2c8, 0x3630, 0x6c8a, 0x4586, 0x4ce3, 0x0, 0x1);
        gbc.writeMem(0x258c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa2c8);
        EXPECT(gbc.pc(), 0x258e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 022D
        gbc.setState(0xceaf, 0xade2, 0xaf0, 0xabef, 0x7ce8, 0xcd52, 0x0, 0x0);
        gbc.writeMem(0xceaf, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xade2);
        EXPECT(gbc.pc(), 0xceb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceaf), 0xcb);
        EXPECT(gbc.readMem(0xceb0), 0xd0);
        // CB D0 022E
        gbc.setState(0x5b36, 0x4e68, 0x9c20, 0xa8eb, 0x9ba0, 0xfcc5, 0x0, 0x1);
        gbc.writeMem(0x5b36, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4e68);
        EXPECT(gbc.pc(), 0x5b38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 022F
        gbc.setState(0x6317, 0xe969, 0x8ba0, 0xbf2e, 0xf244, 0xda6, 0x0, 0x1);
        gbc.writeMem(0x6317, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xe969);
        EXPECT(gbc.pc(), 0x6319);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0230
        gbc.setState(0x4de, 0x476c, 0x7730, 0xa7a9, 0xbd82, 0xa80e, 0x1, 0x0);
        gbc.writeMem(0x4de, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x476c);
        EXPECT(gbc.pc(), 0x4e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0231
        gbc.setState(0x522, 0x7b16, 0x3ef0, 0xece, 0xdc03, 0xe97c, 0x1, 0x1);
        gbc.writeMem(0x522, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7b16);
        EXPECT(gbc.pc(), 0x524);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0232
        gbc.setState(0xa774, 0xd656, 0x7ae0, 0x6939, 0xa6df, 0x8dda, 0x0, 0x0);
        gbc.writeMem(0xa774, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xd656);
        EXPECT(gbc.pc(), 0xa776);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa774), 0xcb);
        EXPECT(gbc.readMem(0xa775), 0xd0);
        // CB D0 0233
        gbc.setState(0x8ed9, 0x1355, 0xdde0, 0x85f, 0x63a0, 0xd461, 0x0, 0x1);
        gbc.writeMem(0x8ed9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1355);
        EXPECT(gbc.pc(), 0x8edb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ed9), 0xcb);
        EXPECT(gbc.readMem(0x8eda), 0xd0);
        // CB D0 0234
        gbc.setState(0x20ab, 0xf047, 0xcd40, 0x9ac5, 0x39ee, 0xd9c, 0x0, 0x0);
        gbc.writeMem(0x20ab, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xf047);
        EXPECT(gbc.pc(), 0x20ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0235
        gbc.setState(0xd336, 0x13c, 0x27d0, 0x32b9, 0xd9f6, 0x7d29, 0x1, 0x1);
        gbc.writeMem(0xd336, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x13c);
        EXPECT(gbc.pc(), 0xd338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd336), 0xcb);
        EXPECT(gbc.readMem(0xd337), 0xd0);
        // CB D0 0236
        gbc.setState(0xce0d, 0xb8fd, 0x62a0, 0x285d, 0xb33c, 0xa4a, 0x1, 0x1);
        gbc.writeMem(0xce0d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb8fd);
        EXPECT(gbc.pc(), 0xce0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce0d), 0xcb);
        EXPECT(gbc.readMem(0xce0e), 0xd0);
        // CB D0 0237
        gbc.setState(0x6db5, 0x4ab0, 0x6330, 0x2724, 0x87c1, 0x1875, 0x0, 0x0);
        gbc.writeMem(0x6db5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x4ab0);
        EXPECT(gbc.pc(), 0x6db7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0238
        gbc.setState(0xdd1d, 0xf51, 0x96d0, 0x4190, 0xb7aa, 0xaff2, 0x0, 0x1);
        gbc.writeMem(0xdd1d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf51);
        EXPECT(gbc.pc(), 0xdd1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd1d), 0xcb);
        EXPECT(gbc.readMem(0xdd1e), 0xd0);
        // CB D0 0239
        gbc.setState(0x561a, 0x999a, 0x8f70, 0xcdc5, 0x64b8, 0xc7f3, 0x0, 0x0);
        gbc.writeMem(0x561a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x999a);
        EXPECT(gbc.pc(), 0x561c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 023A
        gbc.setState(0x835b, 0x9f2c, 0xc180, 0xa89f, 0xae7b, 0xda5, 0x1, 0x1);
        gbc.writeMem(0x835b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x9f2c);
        EXPECT(gbc.pc(), 0x835d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x835b), 0xcb);
        EXPECT(gbc.readMem(0x835c), 0xd0);
        // CB D0 023B
        gbc.setState(0xc933, 0xd214, 0xf10, 0xa1a, 0x2fce, 0x2eea, 0x0, 0x1);
        gbc.writeMem(0xc933, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd214);
        EXPECT(gbc.pc(), 0xc935);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc933), 0xcb);
        EXPECT(gbc.readMem(0xc934), 0xd0);
        // CB D0 023C
        gbc.setState(0x896b, 0xbf20, 0xda0, 0x3b47, 0x762f, 0xdb0a, 0x1, 0x1);
        gbc.writeMem(0x896b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xbf20);
        EXPECT(gbc.pc(), 0x896d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x896b), 0xcb);
        EXPECT(gbc.readMem(0x896c), 0xd0);
        // CB D0 023D
        gbc.setState(0xb5af, 0x4d9, 0x8ce0, 0x1ce, 0x198, 0xfc1d, 0x0, 0x1);
        gbc.writeMem(0xb5af, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x4d9);
        EXPECT(gbc.pc(), 0xb5b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5af), 0xcb);
        EXPECT(gbc.readMem(0xb5b0), 0xd0);
        // CB D0 023E
        gbc.setState(0x778d, 0x3b8b, 0x5270, 0x5184, 0xc81a, 0xdd0c, 0x1, 0x0);
        gbc.writeMem(0x778d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3b8b);
        EXPECT(gbc.pc(), 0x778f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 023F
        gbc.setState(0x1b11, 0xa871, 0xdf60, 0xeed8, 0x11c0, 0x9b0f, 0x1, 0x1);
        gbc.writeMem(0x1b11, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xa871);
        EXPECT(gbc.pc(), 0x1b13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0240
        gbc.setState(0xa947, 0xf0c2, 0x49f0, 0x2d19, 0x9d88, 0xbe13, 0x0, 0x0);
        gbc.writeMem(0xa947, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf0c2);
        EXPECT(gbc.pc(), 0xa949);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa947), 0xcb);
        EXPECT(gbc.readMem(0xa948), 0xd0);
        // CB D0 0241
        gbc.setState(0x76fe, 0xd1f5, 0x2ff0, 0xe455, 0xf005, 0xde99, 0x1, 0x1);
        gbc.writeMem(0x76fe, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd1f5);
        EXPECT(gbc.pc(), 0x7700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0242
        gbc.setState(0x721d, 0xab89, 0x2f90, 0x9b51, 0x813, 0xf027, 0x0, 0x0);
        gbc.writeMem(0x721d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xab89);
        EXPECT(gbc.pc(), 0x721f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0243
        gbc.setState(0xedfc, 0x3f17, 0x3f80, 0xc497, 0x42e, 0xa428, 0x1, 0x0);
        gbc.writeMem(0xedfc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3f17);
        EXPECT(gbc.pc(), 0xedfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedfc), 0xcb);
        EXPECT(gbc.readMem(0xedfd), 0xd0);
        // CB D0 0244
        gbc.setState(0x841e, 0x4728, 0xd330, 0xe6a7, 0xc424, 0xf79c, 0x1, 0x0);
        gbc.writeMem(0x841e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4728);
        EXPECT(gbc.pc(), 0x8420);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x841e), 0xcb);
        EXPECT(gbc.readMem(0x841f), 0xd0);
        // CB D0 0245
        gbc.setState(0xdd0, 0x721f, 0x5ef0, 0xa1dd, 0x10e0, 0x460, 0x0, 0x1);
        gbc.writeMem(0xdd0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x721f);
        EXPECT(gbc.pc(), 0xdd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0246
        gbc.setState(0x963a, 0xfbbb, 0xdcc0, 0x3a06, 0xff2c, 0x3599, 0x1, 0x0);
        gbc.writeMem(0x963a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xfbbb);
        EXPECT(gbc.pc(), 0x963c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x963a), 0xcb);
        EXPECT(gbc.readMem(0x963b), 0xd0);
        // CB D0 0247
        gbc.setState(0x1312, 0x132c, 0xab00, 0xaf03, 0xb4b9, 0x999d, 0x1, 0x1);
        gbc.writeMem(0x1312, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x132c);
        EXPECT(gbc.pc(), 0x1314);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0248
        gbc.setState(0xb1ab, 0x5d6e, 0x6e40, 0x3d8, 0x8c5b, 0x425, 0x1, 0x1);
        gbc.writeMem(0xb1ab, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5d6e);
        EXPECT(gbc.pc(), 0xb1ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1ab), 0xcb);
        EXPECT(gbc.readMem(0xb1ac), 0xd0);
        // CB D0 0249
        gbc.setState(0x150a, 0x33a1, 0x8450, 0xfb98, 0xe797, 0xa38c, 0x1, 0x1);
        gbc.writeMem(0x150a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x33a1);
        EXPECT(gbc.pc(), 0x150c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 024A
        gbc.setState(0x4df6, 0x4b50, 0xf590, 0x2aa8, 0xb82f, 0xeae4, 0x0, 0x1);
        gbc.writeMem(0x4df6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4b50);
        EXPECT(gbc.pc(), 0x4df8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 024B
        gbc.setState(0xe1d8, 0xb429, 0x23b0, 0xeb1a, 0x49dc, 0x5cea, 0x1, 0x0);
        gbc.writeMem(0xe1d8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb429);
        EXPECT(gbc.pc(), 0xe1da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1d8), 0xcb);
        EXPECT(gbc.readMem(0xe1d9), 0xd0);
        // CB D0 024C
        gbc.setState(0xb238, 0xa88e, 0xa170, 0x1caf, 0x12f0, 0x34db, 0x0, 0x1);
        gbc.writeMem(0xb238, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa88e);
        EXPECT(gbc.pc(), 0xb23a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb238), 0xcb);
        EXPECT(gbc.readMem(0xb239), 0xd0);
        // CB D0 024D
        gbc.setState(0x40cc, 0xefc9, 0x9dc0, 0x7654, 0x6d55, 0x5d3b, 0x0, 0x1);
        gbc.writeMem(0x40cc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xefc9);
        EXPECT(gbc.pc(), 0x40ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 024E
        gbc.setState(0xea0a, 0x1505, 0xb840, 0xfa2a, 0xf2ca, 0x24a0, 0x1, 0x1);
        gbc.writeMem(0xea0a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1505);
        EXPECT(gbc.pc(), 0xea0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea0a), 0xcb);
        EXPECT(gbc.readMem(0xea0b), 0xd0);
        // CB D0 024F
        gbc.setState(0xbafb, 0xd175, 0xf7f0, 0x92ea, 0x78cf, 0x2598, 0x1, 0x1);
        gbc.writeMem(0xbafb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd175);
        EXPECT(gbc.pc(), 0xbafd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbafb), 0xcb);
        EXPECT(gbc.readMem(0xbafc), 0xd0);
        // CB D0 0250
        gbc.setState(0x6cc9, 0x73c7, 0x7b90, 0x32ae, 0xefd0, 0x46e1, 0x1, 0x1);
        gbc.writeMem(0x6cc9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x73c7);
        EXPECT(gbc.pc(), 0x6ccb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0251
        gbc.setState(0xc3f6, 0xde, 0xde90, 0x244, 0x97a1, 0x9fd6, 0x1, 0x1);
        gbc.writeMem(0xc3f6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xde);
        EXPECT(gbc.pc(), 0xc3f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3f6), 0xcb);
        EXPECT(gbc.readMem(0xc3f7), 0xd0);
        // CB D0 0252
        gbc.setState(0x72ef, 0x8f22, 0xbd40, 0x3a65, 0xdad8, 0x5719, 0x1, 0x1);
        gbc.writeMem(0x72ef, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8f22);
        EXPECT(gbc.pc(), 0x72f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0253
        gbc.setState(0xb29f, 0x577a, 0x3280, 0x6e9a, 0x667a, 0x895c, 0x0, 0x1);
        gbc.writeMem(0xb29f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x577a);
        EXPECT(gbc.pc(), 0xb2a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb29f), 0xcb);
        EXPECT(gbc.readMem(0xb2a0), 0xd0);
        // CB D0 0254
        gbc.setState(0xe8cb, 0xea62, 0x8ee0, 0xe6b3, 0x417e, 0xa0f5, 0x0, 0x1);
        gbc.writeMem(0xe8cb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xea62);
        EXPECT(gbc.pc(), 0xe8cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8cb), 0xcb);
        EXPECT(gbc.readMem(0xe8cc), 0xd0);
        // CB D0 0255
        gbc.setState(0xef4f, 0xf2ff, 0x41d0, 0xd7cf, 0x7ae0, 0xf75f, 0x0, 0x1);
        gbc.writeMem(0xef4f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf2ff);
        EXPECT(gbc.pc(), 0xef51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef4f), 0xcb);
        EXPECT(gbc.readMem(0xef50), 0xd0);
        // CB D0 0256
        gbc.setState(0x2fae, 0x8984, 0xedf0, 0xbd5e, 0x4c45, 0x8f43, 0x1, 0x0);
        gbc.writeMem(0x2fae, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8984);
        EXPECT(gbc.pc(), 0x2fb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0257
        gbc.setState(0x94a4, 0xa1a9, 0xb80, 0x1cc8, 0xd8c4, 0xcac2, 0x0, 0x1);
        gbc.writeMem(0x94a4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa1a9);
        EXPECT(gbc.pc(), 0x94a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94a4), 0xcb);
        EXPECT(gbc.readMem(0x94a5), 0xd0);
        // CB D0 0258
        gbc.setState(0x165e, 0x8233, 0x2430, 0xdc76, 0x8884, 0x8265, 0x0, 0x1);
        gbc.writeMem(0x165e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x8233);
        EXPECT(gbc.pc(), 0x1660);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0259
        gbc.setState(0xcb5e, 0xa58, 0x7160, 0xe01f, 0xac76, 0xfb65, 0x1, 0x0);
        gbc.writeMem(0xcb5e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa58);
        EXPECT(gbc.pc(), 0xcb60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb5e), 0xcb);
        EXPECT(gbc.readMem(0xcb5f), 0xd0);
        // CB D0 025A
        gbc.setState(0x8287, 0xb20d, 0xbe40, 0x4feb, 0x1cef, 0x37b2, 0x1, 0x1);
        gbc.writeMem(0x8287, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb20d);
        EXPECT(gbc.pc(), 0x8289);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8287), 0xcb);
        EXPECT(gbc.readMem(0x8288), 0xd0);
        // CB D0 025D
        gbc.setState(0x4b89, 0xe4f2, 0x4950, 0x5874, 0xf51f, 0x6f69, 0x0, 0x1);
        gbc.writeMem(0x4b89, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe4f2);
        EXPECT(gbc.pc(), 0x4b8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 025E
        gbc.setState(0x562, 0xcaf, 0xeda0, 0x3b9b, 0x1134, 0xac10, 0x0, 0x0);
        gbc.writeMem(0x562, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xcaf);
        EXPECT(gbc.pc(), 0x564);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 025F
        gbc.setState(0x9be7, 0xb45f, 0x9430, 0x3097, 0x4cdb, 0x4637, 0x1, 0x1);
        gbc.writeMem(0x9be7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xb45f);
        EXPECT(gbc.pc(), 0x9be9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9be7), 0xcb);
        EXPECT(gbc.readMem(0x9be8), 0xd0);
        // CB D0 0260
        gbc.setState(0x572b, 0x6779, 0xc5d0, 0x8b57, 0xbeb9, 0x6381, 0x1, 0x1);
        gbc.writeMem(0x572b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6779);
        EXPECT(gbc.pc(), 0x572d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0261
        gbc.setState(0x311e, 0xc861, 0xda20, 0xfe4e, 0x74eb, 0x8c22, 0x1, 0x0);
        gbc.writeMem(0x311e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc861);
        EXPECT(gbc.pc(), 0x3120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0262
        gbc.setState(0x320e, 0x15bf, 0x8370, 0xdaab, 0xf3bd, 0xc837, 0x1, 0x0);
        gbc.writeMem(0x320e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x15bf);
        EXPECT(gbc.pc(), 0x3210);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0263
        gbc.setState(0x73a4, 0x4bc1, 0xb3f0, 0x6db, 0x6889, 0xa886, 0x1, 0x1);
        gbc.writeMem(0x73a4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4bc1);
        EXPECT(gbc.pc(), 0x73a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0264
        gbc.setState(0xe63, 0x5815, 0x9a50, 0x1cc0, 0xc80a, 0x4f22, 0x1, 0x0);
        gbc.writeMem(0xe63, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5815);
        EXPECT(gbc.pc(), 0xe65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0265
        gbc.setState(0x2196, 0xd92c, 0x8610, 0x6c39, 0xeb4, 0x9a60, 0x0, 0x0);
        gbc.writeMem(0x2196, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd92c);
        EXPECT(gbc.pc(), 0x2198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0266
        gbc.setState(0x57d, 0x317a, 0x7700, 0x7fef, 0x54ce, 0x38d4, 0x1, 0x1);
        gbc.writeMem(0x57d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x317a);
        EXPECT(gbc.pc(), 0x57f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0267
        gbc.setState(0xd6e5, 0x2baa, 0xd800, 0x89d2, 0x224d, 0xe060, 0x1, 0x1);
        gbc.writeMem(0xd6e5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2baa);
        EXPECT(gbc.pc(), 0xd6e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6e5), 0xcb);
        EXPECT(gbc.readMem(0xd6e6), 0xd0);
        // CB D0 0268
        gbc.setState(0x1573, 0xe742, 0x90b0, 0xe09f, 0xd5d3, 0xf8d, 0x1, 0x1);
        gbc.writeMem(0x1573, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe742);
        EXPECT(gbc.pc(), 0x1575);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0269
        gbc.setState(0x9183, 0xc1f5, 0x5a20, 0xdd6c, 0x306a, 0x588c, 0x0, 0x1);
        gbc.writeMem(0x9183, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xc1f5);
        EXPECT(gbc.pc(), 0x9185);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9183), 0xcb);
        EXPECT(gbc.readMem(0x9184), 0xd0);
        // CB D0 026A
        gbc.setState(0xda77, 0xe086, 0x3ed0, 0x8c9a, 0xca88, 0xb308, 0x1, 0x0);
        gbc.writeMem(0xda77, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe086);
        EXPECT(gbc.pc(), 0xda79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda77), 0xcb);
        EXPECT(gbc.readMem(0xda78), 0xd0);
        // CB D0 026B
        gbc.setState(0xd406, 0xa0d9, 0xe5a0, 0xd007, 0x7a34, 0xd002, 0x1, 0x1);
        gbc.writeMem(0xd406, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xa0d9);
        EXPECT(gbc.pc(), 0xd408);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd406), 0xcb);
        EXPECT(gbc.readMem(0xd407), 0xd0);
        // CB D0 026C
        gbc.setState(0xbc13, 0x9324, 0x3b00, 0x9a74, 0x89b9, 0x8845, 0x0, 0x1);
        gbc.writeMem(0xbc13, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x9324);
        EXPECT(gbc.pc(), 0xbc15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc13), 0xcb);
        EXPECT(gbc.readMem(0xbc14), 0xd0);
        // CB D0 026D
        gbc.setState(0x867f, 0xaec1, 0xa340, 0xbe92, 0xa71b, 0x1aae, 0x1, 0x0);
        gbc.writeMem(0x867f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xaec1);
        EXPECT(gbc.pc(), 0x8681);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x867f), 0xcb);
        EXPECT(gbc.readMem(0x8680), 0xd0);
        // CB D0 026E
        gbc.setState(0x1350, 0x219, 0x51c0, 0x2d06, 0x173a, 0x4161, 0x1, 0x1);
        gbc.writeMem(0x1350, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x219);
        EXPECT(gbc.pc(), 0x1352);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 026F
        gbc.setState(0x2658, 0x3b92, 0x2d0, 0x7ac0, 0x952, 0x1cae, 0x0, 0x0);
        gbc.writeMem(0x2658, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x3b92);
        EXPECT(gbc.pc(), 0x265a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0271
        gbc.setState(0x8573, 0x8157, 0xbde0, 0x4bf4, 0x3b7a, 0x2977, 0x0, 0x1);
        gbc.writeMem(0x8573, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x8157);
        EXPECT(gbc.pc(), 0x8575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8573), 0xcb);
        EXPECT(gbc.readMem(0x8574), 0xd0);
        // CB D0 0272
        gbc.setState(0x2551, 0x8e26, 0x7d40, 0x947a, 0x2809, 0x21d9, 0x0, 0x1);
        gbc.writeMem(0x2551, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x8e26);
        EXPECT(gbc.pc(), 0x2553);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0273
        gbc.setState(0x563, 0xbfad, 0x8060, 0xd30e, 0xd6b5, 0x59f9, 0x0, 0x0);
        gbc.writeMem(0x563, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xbfad);
        EXPECT(gbc.pc(), 0x565);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0274
        gbc.setState(0x97a2, 0x6c0e, 0x2f70, 0xf32b, 0x97ba, 0x4b9c, 0x1, 0x1);
        gbc.writeMem(0x97a2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6c0e);
        EXPECT(gbc.pc(), 0x97a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97a2), 0xcb);
        EXPECT(gbc.readMem(0x97a3), 0xd0);
        // CB D0 0275
        gbc.setState(0xdc81, 0x2456, 0x1c10, 0x1ea5, 0x72c2, 0x1705, 0x0, 0x1);
        gbc.writeMem(0xdc81, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2456);
        EXPECT(gbc.pc(), 0xdc83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc81), 0xcb);
        EXPECT(gbc.readMem(0xdc82), 0xd0);
        // CB D0 0277
        gbc.setState(0x672b, 0x8357, 0x2ac0, 0x786, 0x580f, 0xf0ee, 0x1, 0x1);
        gbc.writeMem(0x672b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x8357);
        EXPECT(gbc.pc(), 0x672d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0278
        gbc.setState(0x9667, 0x62a1, 0xc7e0, 0xfb54, 0x50b7, 0x6e96, 0x0, 0x1);
        gbc.writeMem(0x9667, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x62a1);
        EXPECT(gbc.pc(), 0x9669);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9667), 0xcb);
        EXPECT(gbc.readMem(0x9668), 0xd0);
        // CB D0 0279
        gbc.setState(0xdb9a, 0x4f74, 0xb360, 0x1fbf, 0xf2d, 0xddb9, 0x0, 0x1);
        gbc.writeMem(0xdb9a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x4f74);
        EXPECT(gbc.pc(), 0xdb9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb9a), 0xcb);
        EXPECT(gbc.readMem(0xdb9b), 0xd0);
        // CB D0 027A
        gbc.setState(0xb896, 0x22b7, 0x8f60, 0x158a, 0x2dc8, 0xbc59, 0x1, 0x0);
        gbc.writeMem(0xb896, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x22b7);
        EXPECT(gbc.pc(), 0xb898);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb896), 0xcb);
        EXPECT(gbc.readMem(0xb897), 0xd0);
        // CB D0 027B
        gbc.setState(0x1fe2, 0x2c3d, 0xa5c0, 0x61a4, 0xd738, 0xad11, 0x1, 0x1);
        gbc.writeMem(0x1fe2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2c3d);
        EXPECT(gbc.pc(), 0x1fe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 027C
        gbc.setState(0xbf0b, 0x67bb, 0x17d0, 0x6a04, 0x697d, 0xbdde, 0x1, 0x1);
        gbc.writeMem(0xbf0b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x67bb);
        EXPECT(gbc.pc(), 0xbf0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf0b), 0xcb);
        EXPECT(gbc.readMem(0xbf0c), 0xd0);
        // CB D0 027D
        gbc.setState(0x529e, 0xc568, 0x6a0, 0xfa94, 0x4dee, 0x72b6, 0x0, 0x1);
        gbc.writeMem(0x529e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc568);
        EXPECT(gbc.pc(), 0x52a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 027E
        gbc.setState(0x5235, 0xe4ad, 0x92a0, 0x8cbe, 0x35fe, 0x5180, 0x1, 0x0);
        gbc.writeMem(0x5235, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe4ad);
        EXPECT(gbc.pc(), 0x5237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 027F
        gbc.setState(0x5730, 0xcec1, 0xd4d0, 0x1205, 0x7465, 0xa1dc, 0x1, 0x1);
        gbc.writeMem(0x5730, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xcec1);
        EXPECT(gbc.pc(), 0x5732);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0280
        gbc.setState(0x20ee, 0xfec5, 0xc390, 0xe093, 0xe92e, 0xc091, 0x1, 0x0);
        gbc.writeMem(0x20ee, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xfec5);
        EXPECT(gbc.pc(), 0x20f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0281
        gbc.setState(0xd32e, 0xf861, 0xc770, 0xee3d, 0x86b, 0x3156, 0x0, 0x0);
        gbc.writeMem(0xd32e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xf861);
        EXPECT(gbc.pc(), 0xd330);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd32e), 0xcb);
        EXPECT(gbc.readMem(0xd32f), 0xd0);
        // CB D0 0282
        gbc.setState(0x2976, 0xc5e4, 0xec30, 0x8f2e, 0x577f, 0xebe1, 0x0, 0x0);
        gbc.writeMem(0x2976, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc5e4);
        EXPECT(gbc.pc(), 0x2978);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0283
        gbc.setState(0x40af, 0xaa38, 0xff60, 0xa14d, 0x822e, 0x4d49, 0x1, 0x1);
        gbc.writeMem(0x40af, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xaa38);
        EXPECT(gbc.pc(), 0x40b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0284
        gbc.setState(0x3df8, 0x663a, 0xf020, 0x4c79, 0x4fa0, 0x6584, 0x0, 0x0);
        gbc.writeMem(0x3df8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x663a);
        EXPECT(gbc.pc(), 0x3dfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0285
        gbc.setState(0xd494, 0xe1d8, 0xc390, 0xf82, 0x2c6b, 0x2ca7, 0x1, 0x1);
        gbc.writeMem(0xd494, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xe1d8);
        EXPECT(gbc.pc(), 0xd496);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd494), 0xcb);
        EXPECT(gbc.readMem(0xd495), 0xd0);
        // CB D0 0286
        gbc.setState(0xce62, 0xcec1, 0x41f0, 0xc8e, 0xdb01, 0xc530, 0x0, 0x0);
        gbc.writeMem(0xce62, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xcec1);
        EXPECT(gbc.pc(), 0xce64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce62), 0xcb);
        EXPECT(gbc.readMem(0xce63), 0xd0);
        // CB D0 0287
        gbc.setState(0xa227, 0x5528, 0x810, 0x6598, 0x158e, 0x1986, 0x1, 0x0);
        gbc.writeMem(0xa227, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5528);
        EXPECT(gbc.pc(), 0xa229);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa227), 0xcb);
        EXPECT(gbc.readMem(0xa228), 0xd0);
        // CB D0 0288
        gbc.setState(0xe7d5, 0x3ca6, 0x3820, 0x93b5, 0xfa01, 0x26a6, 0x1, 0x0);
        gbc.writeMem(0xe7d5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3ca6);
        EXPECT(gbc.pc(), 0xe7d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7d5), 0xcb);
        EXPECT(gbc.readMem(0xe7d6), 0xd0);
        // CB D0 0289
        gbc.setState(0xbc65, 0x30f9, 0xac10, 0xf939, 0x9b51, 0x3ea5, 0x1, 0x0);
        gbc.writeMem(0xbc65, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x30f9);
        EXPECT(gbc.pc(), 0xbc67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc65), 0xcb);
        EXPECT(gbc.readMem(0xbc66), 0xd0);
        // CB D0 028A
        gbc.setState(0xe2ee, 0x722e, 0xd90, 0x254f, 0x54a9, 0xf64a, 0x0, 0x1);
        gbc.writeMem(0xe2ee, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x722e);
        EXPECT(gbc.pc(), 0xe2f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2ee), 0xcb);
        EXPECT(gbc.readMem(0xe2ef), 0xd0);
        // CB D0 028B
        gbc.setState(0xde65, 0xa035, 0x30, 0x7cd8, 0xfccc, 0x727, 0x1, 0x1);
        gbc.writeMem(0xde65, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xa035);
        EXPECT(gbc.pc(), 0xde67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde65), 0xcb);
        EXPECT(gbc.readMem(0xde66), 0xd0);
        // CB D0 028C
        gbc.setState(0x5c4f, 0x8999, 0x86f0, 0xaa7, 0x7d7f, 0x88fd, 0x1, 0x1);
        gbc.writeMem(0x5c4f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x8999);
        EXPECT(gbc.pc(), 0x5c51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 028D
        gbc.setState(0xc72d, 0x5781, 0xa4a0, 0x82c3, 0xaa29, 0xa97c, 0x1, 0x0);
        gbc.writeMem(0xc72d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5781);
        EXPECT(gbc.pc(), 0xc72f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc72d), 0xcb);
        EXPECT(gbc.readMem(0xc72e), 0xd0);
        // CB D0 028E
        gbc.setState(0x5692, 0xcfbf, 0x2c0, 0xbf45, 0xf9b, 0xb106, 0x1, 0x0);
        gbc.writeMem(0x5692, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xcfbf);
        EXPECT(gbc.pc(), 0x5694);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 028F
        gbc.setState(0x90ce, 0xb9d1, 0x4ea0, 0xfb73, 0x5c41, 0x9c47, 0x1, 0x1);
        gbc.writeMem(0x90ce, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb9d1);
        EXPECT(gbc.pc(), 0x90d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90ce), 0xcb);
        EXPECT(gbc.readMem(0x90cf), 0xd0);
        // CB D0 0290
        gbc.setState(0x8fd9, 0xc39f, 0x5230, 0x8185, 0x360a, 0x3d67, 0x1, 0x1);
        gbc.writeMem(0x8fd9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc39f);
        EXPECT(gbc.pc(), 0x8fdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fd9), 0xcb);
        EXPECT(gbc.readMem(0x8fda), 0xd0);
        // CB D0 0291
        gbc.setState(0xa2e7, 0xf470, 0x3530, 0x87ea, 0x7055, 0x9b93, 0x1, 0x1);
        gbc.writeMem(0xa2e7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf470);
        EXPECT(gbc.pc(), 0xa2e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2e7), 0xcb);
        EXPECT(gbc.readMem(0xa2e8), 0xd0);
        // CB D0 0292
        gbc.setState(0xc455, 0x2aad, 0x6240, 0x77b0, 0xc866, 0x540c, 0x0, 0x1);
        gbc.writeMem(0xc455, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x2aad);
        EXPECT(gbc.pc(), 0xc457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc455), 0xcb);
        EXPECT(gbc.readMem(0xc456), 0xd0);
        // CB D0 0293
        gbc.setState(0x8193, 0x569d, 0x5f00, 0x48f5, 0x408c, 0x2ae5, 0x0, 0x0);
        gbc.writeMem(0x8193, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x569d);
        EXPECT(gbc.pc(), 0x8195);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8193), 0xcb);
        EXPECT(gbc.readMem(0x8194), 0xd0);
        // CB D0 0294
        gbc.setState(0xb091, 0x80f1, 0x30c0, 0x5638, 0x3c9d, 0x1316, 0x1, 0x0);
        gbc.writeMem(0xb091, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x80f1);
        EXPECT(gbc.pc(), 0xb093);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb091), 0xcb);
        EXPECT(gbc.readMem(0xb092), 0xd0);
        // CB D0 0295
        gbc.setState(0x89b2, 0x5db7, 0x3f20, 0x900f, 0xc105, 0x34af, 0x0, 0x1);
        gbc.writeMem(0x89b2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x5db7);
        EXPECT(gbc.pc(), 0x89b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89b2), 0xcb);
        EXPECT(gbc.readMem(0x89b3), 0xd0);
        // CB D0 0296
        gbc.setState(0x9d56, 0x5ad5, 0x2fb0, 0xc9, 0x2664, 0x19e4, 0x1, 0x0);
        gbc.writeMem(0x9d56, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5ad5);
        EXPECT(gbc.pc(), 0x9d58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d56), 0xcb);
        EXPECT(gbc.readMem(0x9d57), 0xd0);
        // CB D0 0297
        gbc.setState(0x6130, 0xf6d9, 0xf9c0, 0x6e0b, 0x7098, 0xfaeb, 0x1, 0x1);
        gbc.writeMem(0x6130, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xf6d9);
        EXPECT(gbc.pc(), 0x6132);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0298
        gbc.setState(0xb4e6, 0xf19a, 0x52d0, 0xb4e1, 0x5617, 0x3bc1, 0x1, 0x0);
        gbc.writeMem(0xb4e6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xf19a);
        EXPECT(gbc.pc(), 0xb4e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4e6), 0xcb);
        EXPECT(gbc.readMem(0xb4e7), 0xd0);
        // CB D0 029A
        gbc.setState(0xc0f2, 0xf8b2, 0xad90, 0xa0e, 0x8a02, 0xc63d, 0x0, 0x1);
        gbc.writeMem(0xc0f2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf8b2);
        EXPECT(gbc.pc(), 0xc0f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0f2), 0xcb);
        EXPECT(gbc.readMem(0xc0f3), 0xd0);
        // CB D0 029B
        gbc.setState(0x2d99, 0x166a, 0xfe80, 0xdb4b, 0x139b, 0xe3a4, 0x0, 0x1);
        gbc.writeMem(0x2d99, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x166a);
        EXPECT(gbc.pc(), 0x2d9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 029C
        gbc.setState(0xcfa7, 0x1329, 0xe5c0, 0x7a23, 0x73ea, 0xb3f5, 0x0, 0x0);
        gbc.writeMem(0xcfa7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1329);
        EXPECT(gbc.pc(), 0xcfa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfa7), 0xcb);
        EXPECT(gbc.readMem(0xcfa8), 0xd0);
        // CB D0 029D
        gbc.setState(0xa144, 0x703f, 0xad60, 0xc21f, 0x6c15, 0x5b0f, 0x0, 0x0);
        gbc.writeMem(0xa144, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x703f);
        EXPECT(gbc.pc(), 0xa146);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa144), 0xcb);
        EXPECT(gbc.readMem(0xa145), 0xd0);
        // CB D0 029E
        gbc.setState(0x42d2, 0xaf18, 0x3a40, 0xed42, 0x7e2, 0x8798, 0x1, 0x0);
        gbc.writeMem(0x42d2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xaf18);
        EXPECT(gbc.pc(), 0x42d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 029F
        gbc.setState(0x7401, 0x6f88, 0xab90, 0x6f21, 0xaaed, 0x362f, 0x0, 0x1);
        gbc.writeMem(0x7401, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x6f88);
        EXPECT(gbc.pc(), 0x7403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02A0
        gbc.setState(0x9667, 0xbdf0, 0x7d0, 0xe2a6, 0x3322, 0x9511, 0x1, 0x1);
        gbc.writeMem(0x9667, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xbdf0);
        EXPECT(gbc.pc(), 0x9669);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9667), 0xcb);
        EXPECT(gbc.readMem(0x9668), 0xd0);
        // CB D0 02A1
        gbc.setState(0xd520, 0xb54b, 0x62e0, 0x5eaa, 0x5b44, 0x27a2, 0x0, 0x1);
        gbc.writeMem(0xd520, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb54b);
        EXPECT(gbc.pc(), 0xd522);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd520), 0xcb);
        EXPECT(gbc.readMem(0xd521), 0xd0);
        // CB D0 02A2
        gbc.setState(0xba4a, 0x6fea, 0xba30, 0x4f08, 0xedb5, 0xfd0a, 0x1, 0x1);
        gbc.writeMem(0xba4a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x6fea);
        EXPECT(gbc.pc(), 0xba4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba4a), 0xcb);
        EXPECT(gbc.readMem(0xba4b), 0xd0);
        // CB D0 02A3
        gbc.setState(0x9074, 0xb0f8, 0x80c0, 0xa304, 0xef17, 0xff2a, 0x0, 0x1);
        gbc.writeMem(0x9074, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb0f8);
        EXPECT(gbc.pc(), 0x9076);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9074), 0xcb);
        EXPECT(gbc.readMem(0x9075), 0xd0);
        // CB D0 02A4
        gbc.setState(0x834c, 0xd2c7, 0xf470, 0xa0b, 0x1b85, 0x6f1d, 0x1, 0x1);
        gbc.writeMem(0x834c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd2c7);
        EXPECT(gbc.pc(), 0x834e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x834c), 0xcb);
        EXPECT(gbc.readMem(0x834d), 0xd0);
        // CB D0 02A5
        gbc.setState(0xedaa, 0xfbd9, 0xb240, 0x9fab, 0x6b03, 0xacf7, 0x1, 0x1);
        gbc.writeMem(0xedaa, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xfbd9);
        EXPECT(gbc.pc(), 0xedac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedaa), 0xcb);
        EXPECT(gbc.readMem(0xedab), 0xd0);
        // CB D0 02A6
        gbc.setState(0x1680, 0x8b66, 0xd7a0, 0xef8a, 0xe3f0, 0xe81a, 0x0, 0x1);
        gbc.writeMem(0x1680, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x8b66);
        EXPECT(gbc.pc(), 0x1682);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02A7
        gbc.setState(0x78a0, 0x8731, 0x4750, 0x608d, 0x2aa8, 0x804d, 0x1, 0x1);
        gbc.writeMem(0x78a0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8731);
        EXPECT(gbc.pc(), 0x78a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02A9
        gbc.setState(0xbd4, 0xf1d, 0xba40, 0x8557, 0x1982, 0x832f, 0x1, 0x0);
        gbc.writeMem(0xbd4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf1d);
        EXPECT(gbc.pc(), 0xbd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02AA
        gbc.setState(0xd5e, 0x66c0, 0x6c50, 0xa73e, 0xe9d9, 0xb22e, 0x1, 0x0);
        gbc.writeMem(0xd5e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x66c0);
        EXPECT(gbc.pc(), 0xd60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02AB
        gbc.setState(0x68c4, 0x888, 0x4390, 0x6cb3, 0xbf57, 0xe524, 0x0, 0x1);
        gbc.writeMem(0x68c4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x888);
        EXPECT(gbc.pc(), 0x68c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02AC
        gbc.setState(0x8a39, 0xff8a, 0x7c80, 0x1f0d, 0xb561, 0x7562, 0x0, 0x1);
        gbc.writeMem(0x8a39, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xff8a);
        EXPECT(gbc.pc(), 0x8a3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a39), 0xcb);
        EXPECT(gbc.readMem(0x8a3a), 0xd0);
        // CB D0 02AE
        gbc.setState(0x7f33, 0xb68, 0x7f10, 0x53f, 0x3802, 0xb2f3, 0x0, 0x1);
        gbc.writeMem(0x7f33, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xb68);
        EXPECT(gbc.pc(), 0x7f35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02AF
        gbc.setState(0x9800, 0x94f7, 0x8f70, 0x4683, 0xe918, 0xbc3e, 0x0, 0x0);
        gbc.writeMem(0x9800, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x94f7);
        EXPECT(gbc.pc(), 0x9802);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9800), 0xcb);
        EXPECT(gbc.readMem(0x9801), 0xd0);
        // CB D0 02B0
        gbc.setState(0x4edb, 0x8dfd, 0x4dd0, 0x3150, 0x9895, 0x554b, 0x0, 0x0);
        gbc.writeMem(0x4edb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8dfd);
        EXPECT(gbc.pc(), 0x4edd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02B1
        gbc.setState(0x3a7e, 0x6874, 0x2c60, 0xa3c5, 0x99e1, 0xfdb3, 0x0, 0x0);
        gbc.writeMem(0x3a7e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6874);
        EXPECT(gbc.pc(), 0x3a80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02B2
        gbc.setState(0x9314, 0x4bfe, 0x4580, 0x5153, 0xf2e2, 0x2d58, 0x0, 0x1);
        gbc.writeMem(0x9314, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4bfe);
        EXPECT(gbc.pc(), 0x9316);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9314), 0xcb);
        EXPECT(gbc.readMem(0x9315), 0xd0);
        // CB D0 02B3
        gbc.setState(0x61a5, 0x46ad, 0xe0d0, 0xd714, 0x9997, 0x247d, 0x1, 0x0);
        gbc.writeMem(0x61a5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x46ad);
        EXPECT(gbc.pc(), 0x61a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02B4
        gbc.setState(0xdd2b, 0xc13a, 0x8ed0, 0xb760, 0xcf4a, 0xd01, 0x0, 0x0);
        gbc.writeMem(0xdd2b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc13a);
        EXPECT(gbc.pc(), 0xdd2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd2b), 0xcb);
        EXPECT(gbc.readMem(0xdd2c), 0xd0);
        // CB D0 02B5
        gbc.setState(0x209a, 0x765a, 0x3ba0, 0x7246, 0xad09, 0x5c7c, 0x0, 0x1);
        gbc.writeMem(0x209a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x765a);
        EXPECT(gbc.pc(), 0x209c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02B6
        gbc.setState(0xc796, 0xdabd, 0x4f00, 0xdf9c, 0x475b, 0xc65f, 0x1, 0x1);
        gbc.writeMem(0xc796, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xdabd);
        EXPECT(gbc.pc(), 0xc798);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc796), 0xcb);
        EXPECT(gbc.readMem(0xc797), 0xd0);
        // CB D0 02B7
        gbc.setState(0x16f8, 0x8ee, 0xbef0, 0xe7f2, 0x7367, 0x3db6, 0x1, 0x0);
        gbc.writeMem(0x16f8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x8ee);
        EXPECT(gbc.pc(), 0x16fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02B8
        gbc.setState(0x1bc8, 0x426e, 0xde0, 0x6419, 0xe116, 0x2808, 0x0, 0x1);
        gbc.writeMem(0x1bc8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x426e);
        EXPECT(gbc.pc(), 0x1bca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02BA
        gbc.setState(0x1528, 0x1721, 0x5530, 0x5960, 0x398, 0x2b60, 0x1, 0x0);
        gbc.writeMem(0x1528, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1721);
        EXPECT(gbc.pc(), 0x152a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02BB
        gbc.setState(0x67e9, 0x3732, 0x30f0, 0x6b6a, 0xff32, 0x73cb, 0x1, 0x1);
        gbc.writeMem(0x67e9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3732);
        EXPECT(gbc.pc(), 0x67eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02BC
        gbc.setState(0x1f04, 0x7fbf, 0x81d0, 0x19e2, 0x85f, 0xc114, 0x1, 0x0);
        gbc.writeMem(0x1f04, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7fbf);
        EXPECT(gbc.pc(), 0x1f06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02BD
        gbc.setState(0x4c66, 0x54ad, 0xbf90, 0x2554, 0xfc49, 0x8922, 0x0, 0x1);
        gbc.writeMem(0x4c66, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x54ad);
        EXPECT(gbc.pc(), 0x4c68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02BE
        gbc.setState(0x392, 0xac44, 0x790, 0xf5e1, 0xfeb2, 0xfd96, 0x0, 0x0);
        gbc.writeMem(0x392, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xac44);
        EXPECT(gbc.pc(), 0x394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02BF
        gbc.setState(0xa104, 0x8d68, 0x3660, 0xb65c, 0x8c49, 0x1c97, 0x1, 0x1);
        gbc.writeMem(0xa104, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8d68);
        EXPECT(gbc.pc(), 0xa106);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa104), 0xcb);
        EXPECT(gbc.readMem(0xa105), 0xd0);
        // CB D0 02C0
        gbc.setState(0xe889, 0x81de, 0xbfc0, 0xa132, 0xd73d, 0x1d02, 0x0, 0x1);
        gbc.writeMem(0xe889, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x81de);
        EXPECT(gbc.pc(), 0xe88b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe889), 0xcb);
        EXPECT(gbc.readMem(0xe88a), 0xd0);
        // CB D0 02C1
        gbc.setState(0x2f45, 0x7313, 0xd40, 0x8319, 0x710b, 0x5fa, 0x1, 0x1);
        gbc.writeMem(0x2f45, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7313);
        EXPECT(gbc.pc(), 0x2f47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02C2
        gbc.setState(0xd212, 0xcae2, 0xa620, 0x75b7, 0x352e, 0xd594, 0x1, 0x1);
        gbc.writeMem(0xd212, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xcae2);
        EXPECT(gbc.pc(), 0xd214);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd212), 0xcb);
        EXPECT(gbc.readMem(0xd213), 0xd0);
        // CB D0 02C3
        gbc.setState(0x5df2, 0xf6a0, 0xb8a0, 0x18ac, 0x6186, 0x412, 0x1, 0x1);
        gbc.writeMem(0x5df2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xf6a0);
        EXPECT(gbc.pc(), 0x5df4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02C4
        gbc.setState(0x6272, 0x759b, 0xdb80, 0xe4f5, 0xbde7, 0x2f51, 0x1, 0x1);
        gbc.writeMem(0x6272, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x759b);
        EXPECT(gbc.pc(), 0x6274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02C5
        gbc.setState(0xb82a, 0xa55c, 0x7010, 0x9b0d, 0xf1da, 0x3094, 0x1, 0x1);
        gbc.writeMem(0xb82a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa55c);
        EXPECT(gbc.pc(), 0xb82c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb82a), 0xcb);
        EXPECT(gbc.readMem(0xb82b), 0xd0);
        // CB D0 02C6
        gbc.setState(0x12f0, 0xe9c3, 0x8c10, 0xb558, 0x6d49, 0xe4a3, 0x0, 0x1);
        gbc.writeMem(0x12f0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xe9c3);
        EXPECT(gbc.pc(), 0x12f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02C7
        gbc.setState(0xaf43, 0xeafe, 0xe840, 0xc6ea, 0x31fb, 0x140f, 0x0, 0x0);
        gbc.writeMem(0xaf43, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xeafe);
        EXPECT(gbc.pc(), 0xaf45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf43), 0xcb);
        EXPECT(gbc.readMem(0xaf44), 0xd0);
        // CB D0 02C8
        gbc.setState(0x6bb1, 0xa99c, 0x6ef0, 0xea50, 0x3b4c, 0xa, 0x0, 0x1);
        gbc.writeMem(0x6bb1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xa99c);
        EXPECT(gbc.pc(), 0x6bb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02C9
        gbc.setState(0xc515, 0x786f, 0x6b30, 0x5c9, 0x1696, 0xe2aa, 0x0, 0x1);
        gbc.writeMem(0xc515, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x786f);
        EXPECT(gbc.pc(), 0xc517);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc515), 0xcb);
        EXPECT(gbc.readMem(0xc516), 0xd0);
        // CB D0 02CB
        gbc.setState(0x9972, 0xbd4, 0x80, 0x6e74, 0xa8be, 0x9a83, 0x1, 0x0);
        gbc.writeMem(0x9972, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xbd4);
        EXPECT(gbc.pc(), 0x9974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9972), 0xcb);
        EXPECT(gbc.readMem(0x9973), 0xd0);
        // CB D0 02CC
        gbc.setState(0x7123, 0x9393, 0xe280, 0xa337, 0x6436, 0x960, 0x0, 0x1);
        gbc.writeMem(0x7123, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9393);
        EXPECT(gbc.pc(), 0x7125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02CD
        gbc.setState(0xd47a, 0x4c62, 0xcad0, 0x8a42, 0x1632, 0xe724, 0x1, 0x0);
        gbc.writeMem(0xd47a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4c62);
        EXPECT(gbc.pc(), 0xd47c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd47a), 0xcb);
        EXPECT(gbc.readMem(0xd47b), 0xd0);
        // CB D0 02CE
        gbc.setState(0x31cb, 0x7bda, 0xc60, 0x9f39, 0xf9d5, 0xc6de, 0x1, 0x0);
        gbc.writeMem(0x31cb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x7bda);
        EXPECT(gbc.pc(), 0x31cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02CF
        gbc.setState(0x1cd7, 0x45c9, 0x2050, 0x38aa, 0xf7e4, 0x61ab, 0x1, 0x0);
        gbc.writeMem(0x1cd7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x45c9);
        EXPECT(gbc.pc(), 0x1cd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02D0
        gbc.setState(0x49fa, 0x8119, 0x4580, 0xc45a, 0x4806, 0x4bfc, 0x1, 0x1);
        gbc.writeMem(0x49fa, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8119);
        EXPECT(gbc.pc(), 0x49fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02D1
        gbc.setState(0xd31d, 0x6bfe, 0x7140, 0xe85e, 0x16b1, 0x2911, 0x0, 0x1);
        gbc.writeMem(0xd31d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6bfe);
        EXPECT(gbc.pc(), 0xd31f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd31d), 0xcb);
        EXPECT(gbc.readMem(0xd31e), 0xd0);
        // CB D0 02D2
        gbc.setState(0x4036, 0xc5e0, 0xd9c0, 0xae64, 0x36ca, 0x2428, 0x0, 0x1);
        gbc.writeMem(0x4036, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xc5e0);
        EXPECT(gbc.pc(), 0x4038);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02D3
        gbc.setState(0xe088, 0xe460, 0xa7b0, 0x3371, 0x7b31, 0xf864, 0x0, 0x0);
        gbc.writeMem(0xe088, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe460);
        EXPECT(gbc.pc(), 0xe08a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe088), 0xcb);
        EXPECT(gbc.readMem(0xe089), 0xd0);
        // CB D0 02D4
        gbc.setState(0xac7c, 0xb118, 0x28d0, 0xcfb4, 0x8255, 0xce4c, 0x0, 0x0);
        gbc.writeMem(0xac7c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb118);
        EXPECT(gbc.pc(), 0xac7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac7c), 0xcb);
        EXPECT(gbc.readMem(0xac7d), 0xd0);
        // CB D0 02D5
        gbc.setState(0x796c, 0xfaec, 0x2ad0, 0xe41c, 0x5027, 0x22d7, 0x1, 0x1);
        gbc.writeMem(0x796c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xfaec);
        EXPECT(gbc.pc(), 0x796e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02D6
        gbc.setState(0x36db, 0xf606, 0xfea0, 0xd844, 0x9748, 0x1751, 0x0, 0x1);
        gbc.writeMem(0x36db, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf606);
        EXPECT(gbc.pc(), 0x36dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02D7
        gbc.setState(0xdf6b, 0xd5fb, 0xb580, 0xb97b, 0x5862, 0xb99c, 0x0, 0x0);
        gbc.writeMem(0xdf6b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd5fb);
        EXPECT(gbc.pc(), 0xdf6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf6b), 0xcb);
        EXPECT(gbc.readMem(0xdf6c), 0xd0);
        // CB D0 02D8
        gbc.setState(0x5edd, 0xfe61, 0xe880, 0x47af, 0x22eb, 0x2984, 0x1, 0x0);
        gbc.writeMem(0x5edd, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xfe61);
        EXPECT(gbc.pc(), 0x5edf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02D9
        gbc.setState(0x77f0, 0x1e68, 0xae0, 0xa88d, 0x5fcf, 0x8b95, 0x1, 0x0);
        gbc.writeMem(0x77f0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1e68);
        EXPECT(gbc.pc(), 0x77f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02DA
        gbc.setState(0xb2f1, 0xda8b, 0x2960, 0x7c83, 0xfaef, 0xba22, 0x0, 0x0);
        gbc.writeMem(0xb2f1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xda8b);
        EXPECT(gbc.pc(), 0xb2f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2f1), 0xcb);
        EXPECT(gbc.readMem(0xb2f2), 0xd0);
        // CB D0 02DB
        gbc.setState(0x277f, 0xbd40, 0xed00, 0x5dae, 0x132c, 0x37ec, 0x1, 0x0);
        gbc.writeMem(0x277f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xbd40);
        EXPECT(gbc.pc(), 0x2781);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02DC
        gbc.setState(0x661f, 0x3bb, 0xb380, 0xbf06, 0xd1ae, 0xfaf9, 0x1, 0x0);
        gbc.writeMem(0x661f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x3bb);
        EXPECT(gbc.pc(), 0x6621);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02DD
        gbc.setState(0x31ab, 0x913f, 0x12f0, 0xe03e, 0xd71a, 0x424d, 0x1, 0x0);
        gbc.writeMem(0x31ab, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x913f);
        EXPECT(gbc.pc(), 0x31ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02DE
        gbc.setState(0x4b31, 0x7946, 0xd60, 0x902b, 0xa361, 0x5d3f, 0x0, 0x0);
        gbc.writeMem(0x4b31, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7946);
        EXPECT(gbc.pc(), 0x4b33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02DF
        gbc.setState(0x3b7, 0xe5b6, 0xe20, 0xd9eb, 0xbaff, 0x93d1, 0x1, 0x1);
        gbc.writeMem(0x3b7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe5b6);
        EXPECT(gbc.pc(), 0x3b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02E0
        gbc.setState(0xb4fe, 0xfe72, 0xdf30, 0x29d6, 0xeec0, 0xcf3b, 0x0, 0x0);
        gbc.writeMem(0xb4fe, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xfe72);
        EXPECT(gbc.pc(), 0xb500);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4fe), 0xcb);
        EXPECT(gbc.readMem(0xb4ff), 0xd0);
        // CB D0 02E1
        gbc.setState(0x6f88, 0x8062, 0x8530, 0xa37, 0xef11, 0xc281, 0x0, 0x0);
        gbc.writeMem(0x6f88, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8062);
        EXPECT(gbc.pc(), 0x6f8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02E2
        gbc.setState(0x232e, 0x12f1, 0x9f10, 0x152e, 0x59c7, 0x27be, 0x1, 0x0);
        gbc.writeMem(0x232e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x12f1);
        EXPECT(gbc.pc(), 0x2330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02E3
        gbc.setState(0xb304, 0xa0a3, 0x9630, 0xbede, 0x9d2c, 0xe617, 0x0, 0x0);
        gbc.writeMem(0xb304, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa0a3);
        EXPECT(gbc.pc(), 0xb306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb304), 0xcb);
        EXPECT(gbc.readMem(0xb305), 0xd0);
        // CB D0 02E4
        gbc.setState(0xcd06, 0x1310, 0xdc20, 0xddcb, 0x4b2f, 0xa43, 0x1, 0x0);
        gbc.writeMem(0xcd06, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1310);
        EXPECT(gbc.pc(), 0xcd08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd06), 0xcb);
        EXPECT(gbc.readMem(0xcd07), 0xd0);
        // CB D0 02E5
        gbc.setState(0x3d70, 0x628e, 0x3000, 0x6c2e, 0x3b9d, 0xff5c, 0x1, 0x1);
        gbc.writeMem(0x3d70, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x628e);
        EXPECT(gbc.pc(), 0x3d72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02E6
        gbc.setState(0x14e4, 0x60ff, 0xa820, 0xeec2, 0xbe73, 0x479d, 0x0, 0x0);
        gbc.writeMem(0x14e4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x60ff);
        EXPECT(gbc.pc(), 0x14e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02E7
        gbc.setState(0xbb15, 0x717d, 0x5ec0, 0x20cc, 0xc071, 0x2b56, 0x1, 0x0);
        gbc.writeMem(0xbb15, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x717d);
        EXPECT(gbc.pc(), 0xbb17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb15), 0xcb);
        EXPECT(gbc.readMem(0xbb16), 0xd0);
        // CB D0 02E8
        gbc.setState(0xafaa, 0x13c2, 0x2570, 0xb8bb, 0xac0e, 0xd023, 0x1, 0x0);
        gbc.writeMem(0xafaa, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x13c2);
        EXPECT(gbc.pc(), 0xafac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafaa), 0xcb);
        EXPECT(gbc.readMem(0xafab), 0xd0);
        // CB D0 02E9
        gbc.setState(0x2d98, 0xdfe3, 0x5010, 0x94ee, 0x1e3c, 0xe970, 0x0, 0x0);
        gbc.writeMem(0x2d98, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xdfe3);
        EXPECT(gbc.pc(), 0x2d9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02EA
        gbc.setState(0x8ff3, 0xe749, 0xd940, 0xe8cb, 0xdf46, 0x70ab, 0x1, 0x0);
        gbc.writeMem(0x8ff3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe749);
        EXPECT(gbc.pc(), 0x8ff5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ff3), 0xcb);
        EXPECT(gbc.readMem(0x8ff4), 0xd0);
        // CB D0 02EB
        gbc.setState(0x6b04, 0xbf2b, 0x4f00, 0x476f, 0xaacc, 0x1b2a, 0x1, 0x1);
        gbc.writeMem(0x6b04, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xbf2b);
        EXPECT(gbc.pc(), 0x6b06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02EC
        gbc.setState(0xf57, 0x94d2, 0xf9e0, 0x1838, 0x86e3, 0x280b, 0x0, 0x1);
        gbc.writeMem(0xf57, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x94d2);
        EXPECT(gbc.pc(), 0xf59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02ED
        gbc.setState(0xc59d, 0xc154, 0x2ce0, 0x8533, 0xcd9b, 0x18df, 0x1, 0x1);
        gbc.writeMem(0xc59d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc154);
        EXPECT(gbc.pc(), 0xc59f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc59d), 0xcb);
        EXPECT(gbc.readMem(0xc59e), 0xd0);
        // CB D0 02EE
        gbc.setState(0x8305, 0xa408, 0x2910, 0x1512, 0xaac8, 0xcba6, 0x1, 0x1);
        gbc.writeMem(0x8305, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa408);
        EXPECT(gbc.pc(), 0x8307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8305), 0xcb);
        EXPECT(gbc.readMem(0x8306), 0xd0);
        // CB D0 02EF
        gbc.setState(0x456a, 0x5a43, 0x6cb0, 0xc163, 0x8996, 0x13f1, 0x0, 0x1);
        gbc.writeMem(0x456a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5a43);
        EXPECT(gbc.pc(), 0x456c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02F0
        gbc.setState(0xd653, 0x360a, 0x94d0, 0xa3ef, 0x8ef4, 0x4534, 0x1, 0x1);
        gbc.writeMem(0xd653, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x360a);
        EXPECT(gbc.pc(), 0xd655);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd653), 0xcb);
        EXPECT(gbc.readMem(0xd654), 0xd0);
        // CB D0 02F1
        gbc.setState(0xa932, 0x573d, 0xc60, 0x66bb, 0x613, 0x14ff, 0x0, 0x1);
        gbc.writeMem(0xa932, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x573d);
        EXPECT(gbc.pc(), 0xa934);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa932), 0xcb);
        EXPECT(gbc.readMem(0xa933), 0xd0);
        // CB D0 02F2
        gbc.setState(0x1890, 0xc3e4, 0x6030, 0x4870, 0x2502, 0xdb7a, 0x0, 0x1);
        gbc.writeMem(0x1890, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xc3e4);
        EXPECT(gbc.pc(), 0x1892);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02F5
        gbc.setState(0x7f25, 0xe5c9, 0x8040, 0x8ccd, 0x7702, 0x7477, 0x0, 0x0);
        gbc.writeMem(0x7f25, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe5c9);
        EXPECT(gbc.pc(), 0x7f27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02F7
        gbc.setState(0x151e, 0x5970, 0xd470, 0x17bb, 0x5907, 0xc8f7, 0x0, 0x1);
        gbc.writeMem(0x151e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5970);
        EXPECT(gbc.pc(), 0x1520);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02F8
        gbc.setState(0x311d, 0x6ba0, 0x48d0, 0xe92e, 0x3cd1, 0x7a71, 0x0, 0x0);
        gbc.writeMem(0x311d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6ba0);
        EXPECT(gbc.pc(), 0x311f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02F9
        gbc.setState(0xb8a7, 0x614a, 0xebf0, 0xc100, 0xd98c, 0x68f7, 0x1, 0x1);
        gbc.writeMem(0xb8a7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x614a);
        EXPECT(gbc.pc(), 0xb8a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8a7), 0xcb);
        EXPECT(gbc.readMem(0xb8a8), 0xd0);
        // CB D0 02FA
        gbc.setState(0x1ea5, 0x7bb, 0x4460, 0x3c4a, 0xf206, 0xf177, 0x1, 0x1);
        gbc.writeMem(0x1ea5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7bb);
        EXPECT(gbc.pc(), 0x1ea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02FB
        gbc.setState(0x5b8a, 0xbb61, 0xa450, 0x18fb, 0x2b02, 0x67ac, 0x0, 0x0);
        gbc.writeMem(0x5b8a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xbb61);
        EXPECT(gbc.pc(), 0x5b8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 02FC
        gbc.setState(0x8f96, 0x5e94, 0xfe40, 0xd3d9, 0x2c57, 0xef5d, 0x1, 0x1);
        gbc.writeMem(0x8f96, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5e94);
        EXPECT(gbc.pc(), 0x8f98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f96), 0xcb);
        EXPECT(gbc.readMem(0x8f97), 0xd0);
        // CB D0 02FD
        gbc.setState(0x50e0, 0x225e, 0x40c0, 0x3d5c, 0x4eca, 0xb41b, 0x1, 0x1);
        gbc.writeMem(0x50e0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x225e);
        EXPECT(gbc.pc(), 0x50e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 02FE
        gbc.setState(0xbfb7, 0x38f4, 0xe840, 0x5bd6, 0xf2f4, 0x952c, 0x0, 0x0);
        gbc.writeMem(0xbfb7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x38f4);
        EXPECT(gbc.pc(), 0xbfb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb7), 0xcb);
        EXPECT(gbc.readMem(0xbfb8), 0xd0);
        // CB D0 02FF
        gbc.setState(0xdb87, 0x1a6e, 0xe3c0, 0x665d, 0x2888, 0xa46f, 0x1, 0x0);
        gbc.writeMem(0xdb87, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1a6e);
        EXPECT(gbc.pc(), 0xdb89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb87), 0xcb);
        EXPECT(gbc.readMem(0xdb88), 0xd0);
        // CB D0 0300
        gbc.setState(0xd534, 0xbf46, 0xd9c0, 0xa748, 0x8dbe, 0x5232, 0x0, 0x0);
        gbc.writeMem(0xd534, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xbf46);
        EXPECT(gbc.pc(), 0xd536);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd534), 0xcb);
        EXPECT(gbc.readMem(0xd535), 0xd0);
        // CB D0 0301
        gbc.setState(0xce85, 0x53b5, 0xd610, 0x4c57, 0x913d, 0x843c, 0x1, 0x0);
        gbc.writeMem(0xce85, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x53b5);
        EXPECT(gbc.pc(), 0xce87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce85), 0xcb);
        EXPECT(gbc.readMem(0xce86), 0xd0);
        // CB D0 0302
        gbc.setState(0xc964, 0xe9ff, 0xd8b0, 0xa2f8, 0x31b2, 0x5097, 0x0, 0x1);
        gbc.writeMem(0xc964, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe9ff);
        EXPECT(gbc.pc(), 0xc966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc964), 0xcb);
        EXPECT(gbc.readMem(0xc965), 0xd0);
        // CB D0 0303
        gbc.setState(0x7814, 0x5146, 0x2ad0, 0xab9b, 0xa435, 0x7d5d, 0x1, 0x1);
        gbc.writeMem(0x7814, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5146);
        EXPECT(gbc.pc(), 0x7816);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0305
        gbc.setState(0xe4d3, 0xabf2, 0x1810, 0xf2a4, 0xcff3, 0x1df9, 0x0, 0x1);
        gbc.writeMem(0xe4d3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xabf2);
        EXPECT(gbc.pc(), 0xe4d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4d3), 0xcb);
        EXPECT(gbc.readMem(0xe4d4), 0xd0);
        // CB D0 0306
        gbc.setState(0xeb27, 0x5cb3, 0x370, 0x2382, 0x592f, 0x1bf3, 0x1, 0x0);
        gbc.writeMem(0xeb27, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x5cb3);
        EXPECT(gbc.pc(), 0xeb29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb27), 0xcb);
        EXPECT(gbc.readMem(0xeb28), 0xd0);
        // CB D0 0307
        gbc.setState(0xac26, 0x5bd3, 0x5260, 0x7bcc, 0x4346, 0xa358, 0x1, 0x1);
        gbc.writeMem(0xac26, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5bd3);
        EXPECT(gbc.pc(), 0xac28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac26), 0xcb);
        EXPECT(gbc.readMem(0xac27), 0xd0);
        // CB D0 0309
        gbc.setState(0x857f, 0x2e97, 0x7bf0, 0x67cf, 0x4769, 0x4302, 0x0, 0x0);
        gbc.writeMem(0x857f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2e97);
        EXPECT(gbc.pc(), 0x8581);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x857f), 0xcb);
        EXPECT(gbc.readMem(0x8580), 0xd0);
        // CB D0 030A
        gbc.setState(0xeabb, 0xb58e, 0x1000, 0x3c05, 0xd7d8, 0x17e1, 0x0, 0x1);
        gbc.writeMem(0xeabb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb58e);
        EXPECT(gbc.pc(), 0xeabd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeabb), 0xcb);
        EXPECT(gbc.readMem(0xeabc), 0xd0);
        // CB D0 030B
        gbc.setState(0x5d55, 0x2563, 0x1810, 0x4d96, 0xefce, 0x4be, 0x0, 0x1);
        gbc.writeMem(0x5d55, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x2563);
        EXPECT(gbc.pc(), 0x5d57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 030C
        gbc.setState(0x7e1b, 0xd7ce, 0x7200, 0x653e, 0x381f, 0x2abc, 0x1, 0x1);
        gbc.writeMem(0x7e1b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xd7ce);
        EXPECT(gbc.pc(), 0x7e1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 030D
        gbc.setState(0x2f8d, 0x2e6, 0x6e10, 0x6bdf, 0x99ec, 0xf00c, 0x0, 0x0);
        gbc.writeMem(0x2f8d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x2e6);
        EXPECT(gbc.pc(), 0x2f8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 030E
        gbc.setState(0xe4ae, 0x936a, 0x580, 0xe89c, 0x22fc, 0x649a, 0x1, 0x0);
        gbc.writeMem(0xe4ae, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x936a);
        EXPECT(gbc.pc(), 0xe4b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4ae), 0xcb);
        EXPECT(gbc.readMem(0xe4af), 0xd0);
        // CB D0 030F
        gbc.setState(0x438a, 0x63c6, 0x8530, 0x98e3, 0x50e0, 0x1a17, 0x1, 0x0);
        gbc.writeMem(0x438a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x63c6);
        EXPECT(gbc.pc(), 0x438c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0310
        gbc.setState(0xa521, 0xa296, 0x1f10, 0x6a7, 0x539d, 0x8638, 0x0, 0x1);
        gbc.writeMem(0xa521, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa296);
        EXPECT(gbc.pc(), 0xa523);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa521), 0xcb);
        EXPECT(gbc.readMem(0xa522), 0xd0);
        // CB D0 0311
        gbc.setState(0x678e, 0x406, 0x21c0, 0xb3bd, 0x6e96, 0x6ccb, 0x1, 0x1);
        gbc.writeMem(0x678e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x406);
        EXPECT(gbc.pc(), 0x6790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0312
        gbc.setState(0x231b, 0x7560, 0x2f40, 0xa6ef, 0xd9ac, 0x96f0, 0x1, 0x0);
        gbc.writeMem(0x231b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7560);
        EXPECT(gbc.pc(), 0x231d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0313
        gbc.setState(0xb185, 0x9e0e, 0xae20, 0xdd7c, 0x5403, 0x87c3, 0x0, 0x1);
        gbc.writeMem(0xb185, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x9e0e);
        EXPECT(gbc.pc(), 0xb187);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb185), 0xcb);
        EXPECT(gbc.readMem(0xb186), 0xd0);
        // CB D0 0314
        gbc.setState(0xaf49, 0x486b, 0xaea0, 0x2a0, 0xccf2, 0xec96, 0x0, 0x1);
        gbc.writeMem(0xaf49, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x486b);
        EXPECT(gbc.pc(), 0xaf4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf49), 0xcb);
        EXPECT(gbc.readMem(0xaf4a), 0xd0);
        // CB D0 0315
        gbc.setState(0xb0f3, 0xcb26, 0x4de0, 0x1f9d, 0xb1aa, 0x1fa, 0x1, 0x0);
        gbc.writeMem(0xb0f3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xcb26);
        EXPECT(gbc.pc(), 0xb0f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0f3), 0xcb);
        EXPECT(gbc.readMem(0xb0f4), 0xd0);
        // CB D0 0316
        gbc.setState(0x96d8, 0x1c, 0xc330, 0x7791, 0x42c6, 0xf995, 0x1, 0x1);
        gbc.writeMem(0x96d8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1c);
        EXPECT(gbc.pc(), 0x96da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96d8), 0xcb);
        EXPECT(gbc.readMem(0x96d9), 0xd0);
        // CB D0 0317
        gbc.setState(0x4bd0, 0x819f, 0x82b0, 0x731c, 0x8966, 0x7e52, 0x1, 0x0);
        gbc.writeMem(0x4bd0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x819f);
        EXPECT(gbc.pc(), 0x4bd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0318
        gbc.setState(0xb467, 0x8b0b, 0xc3c0, 0xb111, 0xbf80, 0xa05b, 0x0, 0x0);
        gbc.writeMem(0xb467, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8b0b);
        EXPECT(gbc.pc(), 0xb469);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb467), 0xcb);
        EXPECT(gbc.readMem(0xb468), 0xd0);
        // CB D0 0319
        gbc.setState(0xb7aa, 0xe6ba, 0x350, 0x6dc8, 0xa84f, 0x731c, 0x1, 0x1);
        gbc.writeMem(0xb7aa, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe6ba);
        EXPECT(gbc.pc(), 0xb7ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7aa), 0xcb);
        EXPECT(gbc.readMem(0xb7ab), 0xd0);
        // CB D0 031A
        gbc.setState(0x2cfa, 0x1413, 0x3d10, 0x30b0, 0xe64d, 0xec3a, 0x0, 0x0);
        gbc.writeMem(0x2cfa, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x1413);
        EXPECT(gbc.pc(), 0x2cfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 031B
        gbc.setState(0x9e68, 0x73e3, 0x2b20, 0x90df, 0x43c6, 0xe913, 0x0, 0x0);
        gbc.writeMem(0x9e68, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x73e3);
        EXPECT(gbc.pc(), 0x9e6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e68), 0xcb);
        EXPECT(gbc.readMem(0x9e69), 0xd0);
        // CB D0 031C
        gbc.setState(0xa046, 0x89ec, 0x4b80, 0x7f25, 0xa6a9, 0xa0fd, 0x0, 0x1);
        gbc.writeMem(0xa046, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x89ec);
        EXPECT(gbc.pc(), 0xa048);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa046), 0xcb);
        EXPECT(gbc.readMem(0xa047), 0xd0);
        // CB D0 031E
        gbc.setState(0x2767, 0x2373, 0x2210, 0xf669, 0x46e7, 0xe68b, 0x1, 0x1);
        gbc.writeMem(0x2767, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2373);
        EXPECT(gbc.pc(), 0x2769);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 031F
        gbc.setState(0xc, 0xcbe7, 0xd560, 0x7998, 0x262, 0x87a3, 0x1, 0x1);
        gbc.writeMem(0xc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xcbe7);
        EXPECT(gbc.pc(), 0xe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0320
        gbc.setState(0x9b5a, 0x3ff5, 0x5c00, 0xefa6, 0x48b7, 0xa17d, 0x1, 0x0);
        gbc.writeMem(0x9b5a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3ff5);
        EXPECT(gbc.pc(), 0x9b5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b5a), 0xcb);
        EXPECT(gbc.readMem(0x9b5b), 0xd0);
        // CB D0 0321
        gbc.setState(0xc12b, 0x81f5, 0x3f50, 0xc2dd, 0xfd33, 0xd40f, 0x1, 0x0);
        gbc.writeMem(0xc12b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x81f5);
        EXPECT(gbc.pc(), 0xc12d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc12b), 0xcb);
        EXPECT(gbc.readMem(0xc12c), 0xd0);
        // CB D0 0322
        gbc.setState(0x812c, 0x1be8, 0x7490, 0x161d, 0x9c28, 0x2fe4, 0x1, 0x0);
        gbc.writeMem(0x812c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1be8);
        EXPECT(gbc.pc(), 0x812e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x812c), 0xcb);
        EXPECT(gbc.readMem(0x812d), 0xd0);
        // CB D0 0323
        gbc.setState(0x7cec, 0xbbac, 0xc430, 0x573b, 0xb20e, 0x6980, 0x1, 0x0);
        gbc.writeMem(0x7cec, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xbbac);
        EXPECT(gbc.pc(), 0x7cee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0324
        gbc.setState(0xa504, 0x4cfe, 0xc3d0, 0x638f, 0xa1b2, 0x71fe, 0x1, 0x0);
        gbc.writeMem(0xa504, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x4cfe);
        EXPECT(gbc.pc(), 0xa506);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa504), 0xcb);
        EXPECT(gbc.readMem(0xa505), 0xd0);
        // CB D0 0325
        gbc.setState(0x45e4, 0x1a3b, 0xd350, 0x5185, 0x3d9f, 0x96f4, 0x0, 0x0);
        gbc.writeMem(0x45e4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1a3b);
        EXPECT(gbc.pc(), 0x45e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0326
        gbc.setState(0xee70, 0xf2c8, 0xc10, 0xed72, 0xedef, 0x477, 0x1, 0x0);
        gbc.writeMem(0xee70, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xf2c8);
        EXPECT(gbc.pc(), 0xee72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee70), 0xcb);
        EXPECT(gbc.readMem(0xee71), 0xd0);
        // CB D0 0327
        gbc.setState(0xb7ad, 0x44a6, 0x2fe0, 0x83b5, 0xb756, 0x1c40, 0x1, 0x1);
        gbc.writeMem(0xb7ad, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x44a6);
        EXPECT(gbc.pc(), 0xb7af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ad), 0xcb);
        EXPECT(gbc.readMem(0xb7ae), 0xd0);
        // CB D0 0328
        gbc.setState(0x5d1b, 0x4169, 0x5c0, 0x8972, 0x96e5, 0xb0c2, 0x0, 0x1);
        gbc.writeMem(0x5d1b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4169);
        EXPECT(gbc.pc(), 0x5d1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0329
        gbc.setState(0xe5e3, 0xee31, 0x7210, 0xef54, 0xf3bf, 0x4c75, 0x1, 0x1);
        gbc.writeMem(0xe5e3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xee31);
        EXPECT(gbc.pc(), 0xe5e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5e3), 0xcb);
        EXPECT(gbc.readMem(0xe5e4), 0xd0);
        // CB D0 032A
        gbc.setState(0x5dde, 0xed47, 0x44d0, 0x66c5, 0xf5d0, 0xba0e, 0x0, 0x0);
        gbc.writeMem(0x5dde, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xed47);
        EXPECT(gbc.pc(), 0x5de0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 032B
        gbc.setState(0x4a3c, 0xd9ad, 0xbee0, 0x8472, 0x5936, 0xb63, 0x0, 0x1);
        gbc.writeMem(0x4a3c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd9ad);
        EXPECT(gbc.pc(), 0x4a3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 032C
        gbc.setState(0x3448, 0xe017, 0xe390, 0xe62c, 0x9803, 0xbc3d, 0x1, 0x1);
        gbc.writeMem(0x3448, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe017);
        EXPECT(gbc.pc(), 0x344a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 032D
        gbc.setState(0xe89a, 0xe6f5, 0xe510, 0x9e04, 0x38c7, 0xe9e0, 0x1, 0x1);
        gbc.writeMem(0xe89a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe6f5);
        EXPECT(gbc.pc(), 0xe89c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe89a), 0xcb);
        EXPECT(gbc.readMem(0xe89b), 0xd0);
        // CB D0 032E
        gbc.setState(0xdcc7, 0x6f62, 0xfca0, 0x9e0e, 0x1dc4, 0x45cc, 0x1, 0x0);
        gbc.writeMem(0xdcc7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6f62);
        EXPECT(gbc.pc(), 0xdcc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcc7), 0xcb);
        EXPECT(gbc.readMem(0xdcc8), 0xd0);
        // CB D0 032F
        gbc.setState(0x748c, 0xff83, 0x9200, 0xfb2a, 0xa72c, 0x42, 0x1, 0x0);
        gbc.writeMem(0x748c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xff83);
        EXPECT(gbc.pc(), 0x748e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0330
        gbc.setState(0xb537, 0xd450, 0xc590, 0xc197, 0x2e35, 0x3dec, 0x0, 0x1);
        gbc.writeMem(0xb537, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd450);
        EXPECT(gbc.pc(), 0xb539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb537), 0xcb);
        EXPECT(gbc.readMem(0xb538), 0xd0);
        // CB D0 0331
        gbc.setState(0x53a6, 0xfd82, 0x8660, 0x3f41, 0x40bf, 0x257b, 0x0, 0x0);
        gbc.writeMem(0x53a6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xfd82);
        EXPECT(gbc.pc(), 0x53a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0332
        gbc.setState(0xbecb, 0x3df2, 0x380, 0x45e, 0xb82f, 0x8f4a, 0x1, 0x1);
        gbc.writeMem(0xbecb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3df2);
        EXPECT(gbc.pc(), 0xbecd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbecb), 0xcb);
        EXPECT(gbc.readMem(0xbecc), 0xd0);
        // CB D0 0333
        gbc.setState(0x90b7, 0xeae1, 0x3060, 0xdd4c, 0xf290, 0xf0e9, 0x0, 0x0);
        gbc.writeMem(0x90b7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xeae1);
        EXPECT(gbc.pc(), 0x90b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90b7), 0xcb);
        EXPECT(gbc.readMem(0x90b8), 0xd0);
        // CB D0 0335
        gbc.setState(0x6b63, 0x6157, 0x8740, 0xa572, 0x872f, 0x4cb0, 0x0, 0x1);
        gbc.writeMem(0x6b63, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6157);
        EXPECT(gbc.pc(), 0x6b65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0336
        gbc.setState(0x24ce, 0x6cf2, 0x1e10, 0x1310, 0x6cfb, 0x9920, 0x1, 0x1);
        gbc.writeMem(0x24ce, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6cf2);
        EXPECT(gbc.pc(), 0x24d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0338
        gbc.setState(0xa51b, 0x4cb, 0xc450, 0x3a7a, 0x429d, 0x183d, 0x1, 0x1);
        gbc.writeMem(0xa51b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4cb);
        EXPECT(gbc.pc(), 0xa51d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa51b), 0xcb);
        EXPECT(gbc.readMem(0xa51c), 0xd0);
        // CB D0 0339
        gbc.setState(0xc5a2, 0x6fff, 0x1530, 0x861b, 0xd6b0, 0xd8a, 0x1, 0x1);
        gbc.writeMem(0xc5a2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x6fff);
        EXPECT(gbc.pc(), 0xc5a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5a2), 0xcb);
        EXPECT(gbc.readMem(0xc5a3), 0xd0);
        // CB D0 033A
        gbc.setState(0x21bb, 0x929, 0xf150, 0xdfb1, 0xffa8, 0xc659, 0x0, 0x1);
        gbc.writeMem(0x21bb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x929);
        EXPECT(gbc.pc(), 0x21bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 033B
        gbc.setState(0xea22, 0x7256, 0x2bb0, 0xad60, 0xb7cb, 0x8d4f, 0x0, 0x1);
        gbc.writeMem(0xea22, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7256);
        EXPECT(gbc.pc(), 0xea24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea22), 0xcb);
        EXPECT(gbc.readMem(0xea23), 0xd0);
        // CB D0 033C
        gbc.setState(0x5f8a, 0xd0ae, 0x1800, 0x2e47, 0xa0ad, 0x6d09, 0x0, 0x0);
        gbc.writeMem(0x5f8a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xd0ae);
        EXPECT(gbc.pc(), 0x5f8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 033D
        gbc.setState(0x96f0, 0x8f74, 0x5450, 0xa84e, 0x301a, 0x6d15, 0x0, 0x0);
        gbc.writeMem(0x96f0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8f74);
        EXPECT(gbc.pc(), 0x96f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96f0), 0xcb);
        EXPECT(gbc.readMem(0x96f1), 0xd0);
        // CB D0 033E
        gbc.setState(0x95db, 0x80a, 0x28f0, 0x6bcd, 0xb2fa, 0x1456, 0x0, 0x1);
        gbc.writeMem(0x95db, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x80a);
        EXPECT(gbc.pc(), 0x95dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95db), 0xcb);
        EXPECT(gbc.readMem(0x95dc), 0xd0);
        // CB D0 0340
        gbc.setState(0x5a56, 0xc974, 0x1c00, 0xfdde, 0xa9f6, 0x11c3, 0x0, 0x0);
        gbc.writeMem(0x5a56, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc974);
        EXPECT(gbc.pc(), 0x5a58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0341
        gbc.setState(0xb04, 0xaa1c, 0xda10, 0xa39f, 0x58c2, 0xd04a, 0x1, 0x0);
        gbc.writeMem(0xb04, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xaa1c);
        EXPECT(gbc.pc(), 0xb06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0342
        gbc.setState(0x7a11, 0xd66, 0x18b0, 0x386d, 0xcfc1, 0x9676, 0x1, 0x1);
        gbc.writeMem(0x7a11, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd66);
        EXPECT(gbc.pc(), 0x7a13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0343
        gbc.setState(0x39ac, 0xc7b7, 0x6540, 0xf251, 0x2ca7, 0xcfec, 0x0, 0x0);
        gbc.writeMem(0x39ac, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc7b7);
        EXPECT(gbc.pc(), 0x39ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0344
        gbc.setState(0x9ff0, 0x3b99, 0x7b0, 0x38f7, 0x9353, 0xeee, 0x0, 0x1);
        gbc.writeMem(0x9ff0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3b99);
        EXPECT(gbc.pc(), 0x9ff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ff0), 0xcb);
        EXPECT(gbc.readMem(0x9ff1), 0xd0);
        // CB D0 0345
        gbc.setState(0x8e01, 0xbcbe, 0x2930, 0x533b, 0x499c, 0xef94, 0x1, 0x0);
        gbc.writeMem(0x8e01, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xbcbe);
        EXPECT(gbc.pc(), 0x8e03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e01), 0xcb);
        EXPECT(gbc.readMem(0x8e02), 0xd0);
        // CB D0 0346
        gbc.setState(0x78d2, 0xb709, 0xf500, 0x8d20, 0xb91a, 0xd26f, 0x1, 0x1);
        gbc.writeMem(0x78d2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb709);
        EXPECT(gbc.pc(), 0x78d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0347
        gbc.setState(0x8eb3, 0xdc61, 0x9450, 0x32a, 0xdc8f, 0x65b7, 0x0, 0x1);
        gbc.writeMem(0x8eb3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xdc61);
        EXPECT(gbc.pc(), 0x8eb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eb3), 0xcb);
        EXPECT(gbc.readMem(0x8eb4), 0xd0);
        // CB D0 0348
        gbc.setState(0x462a, 0x8859, 0xda10, 0x616c, 0x7670, 0x469f, 0x1, 0x0);
        gbc.writeMem(0x462a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8859);
        EXPECT(gbc.pc(), 0x462c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0349
        gbc.setState(0x9fa7, 0x2aaa, 0xd1e0, 0xe7ce, 0x2cdf, 0x5b47, 0x0, 0x1);
        gbc.writeMem(0x9fa7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2aaa);
        EXPECT(gbc.pc(), 0x9fa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fa7), 0xcb);
        EXPECT(gbc.readMem(0x9fa8), 0xd0);
        // CB D0 034A
        gbc.setState(0x19b3, 0xea05, 0xc940, 0x4648, 0x3136, 0xe7d3, 0x0, 0x1);
        gbc.writeMem(0x19b3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xea05);
        EXPECT(gbc.pc(), 0x19b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 034B
        gbc.setState(0x66e5, 0xc355, 0x8410, 0xd2e3, 0x7310, 0x3d82, 0x1, 0x0);
        gbc.writeMem(0x66e5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc355);
        EXPECT(gbc.pc(), 0x66e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 034D
        gbc.setState(0xa3e9, 0xf60e, 0xc100, 0x5884, 0x85eb, 0x77, 0x0, 0x1);
        gbc.writeMem(0xa3e9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xf60e);
        EXPECT(gbc.pc(), 0xa3eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3e9), 0xcb);
        EXPECT(gbc.readMem(0xa3ea), 0xd0);
        // CB D0 034E
        gbc.setState(0x148f, 0xaa1e, 0x3540, 0x8f31, 0xfa25, 0x221b, 0x0, 0x0);
        gbc.writeMem(0x148f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xaa1e);
        EXPECT(gbc.pc(), 0x1491);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 034F
        gbc.setState(0xb902, 0xdd20, 0xd7c0, 0x6b6b, 0x4ca1, 0x38af, 0x0, 0x1);
        gbc.writeMem(0xb902, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xdd20);
        EXPECT(gbc.pc(), 0xb904);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb902), 0xcb);
        EXPECT(gbc.readMem(0xb903), 0xd0);
        // CB D0 0350
        gbc.setState(0xea5f, 0xea97, 0xb6c0, 0xa384, 0x6419, 0x6bc2, 0x0, 0x0);
        gbc.writeMem(0xea5f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xea97);
        EXPECT(gbc.pc(), 0xea61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea5f), 0xcb);
        EXPECT(gbc.readMem(0xea60), 0xd0);
        // CB D0 0351
        gbc.setState(0x4341, 0x57ce, 0x6a90, 0x1c50, 0xcdb3, 0x9539, 0x0, 0x0);
        gbc.writeMem(0x4341, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x57ce);
        EXPECT(gbc.pc(), 0x4343);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0352
        gbc.setState(0x99f5, 0xa498, 0xcae0, 0x557d, 0x1a1f, 0x14b2, 0x1, 0x1);
        gbc.writeMem(0x99f5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xa498);
        EXPECT(gbc.pc(), 0x99f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99f5), 0xcb);
        EXPECT(gbc.readMem(0x99f6), 0xd0);
        // CB D0 0353
        gbc.setState(0x8718, 0x72ae, 0x4b50, 0x9494, 0x26ca, 0x18b6, 0x1, 0x0);
        gbc.writeMem(0x8718, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x72ae);
        EXPECT(gbc.pc(), 0x871a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8718), 0xcb);
        EXPECT(gbc.readMem(0x8719), 0xd0);
        // CB D0 0354
        gbc.setState(0x993e, 0xb7f0, 0xf530, 0x7fa0, 0x2f23, 0x2dd0, 0x1, 0x1);
        gbc.writeMem(0x993e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xb7f0);
        EXPECT(gbc.pc(), 0x9940);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x993e), 0xcb);
        EXPECT(gbc.readMem(0x993f), 0xd0);
        // CB D0 0356
        gbc.setState(0x59f0, 0x1e9b, 0xc600, 0xb03b, 0x280f, 0xda9a, 0x0, 0x0);
        gbc.writeMem(0x59f0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1e9b);
        EXPECT(gbc.pc(), 0x59f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0357
        gbc.setState(0xd6a0, 0x9a75, 0xb6f0, 0x889f, 0x8437, 0x9a3e, 0x1, 0x0);
        gbc.writeMem(0xd6a0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x9a75);
        EXPECT(gbc.pc(), 0xd6a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6a0), 0xcb);
        EXPECT(gbc.readMem(0xd6a1), 0xd0);
        // CB D0 0358
        gbc.setState(0x4bc, 0xb8db, 0x4300, 0x383b, 0x4d1f, 0x71c4, 0x1, 0x1);
        gbc.writeMem(0x4bc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb8db);
        EXPECT(gbc.pc(), 0x4be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0359
        gbc.setState(0xccc, 0x1445, 0x4cb0, 0x73d9, 0x8757, 0xef65, 0x0, 0x1);
        gbc.writeMem(0xccc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x1445);
        EXPECT(gbc.pc(), 0xcce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 035A
        gbc.setState(0xdd8a, 0xc2b2, 0x9b10, 0x5849, 0x2f4, 0x43ce, 0x0, 0x0);
        gbc.writeMem(0xdd8a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xc2b2);
        EXPECT(gbc.pc(), 0xdd8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd8a), 0xcb);
        EXPECT(gbc.readMem(0xdd8b), 0xd0);
        // CB D0 035B
        gbc.setState(0x791e, 0x858e, 0x5f0, 0x2bbf, 0x4fcf, 0x1367, 0x0, 0x0);
        gbc.writeMem(0x791e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x858e);
        EXPECT(gbc.pc(), 0x7920);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 035C
        gbc.setState(0x86be, 0xc82, 0x4c0, 0xb710, 0xad65, 0x774, 0x1, 0x0);
        gbc.writeMem(0x86be, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc82);
        EXPECT(gbc.pc(), 0x86c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86be), 0xcb);
        EXPECT(gbc.readMem(0x86bf), 0xd0);
        // CB D0 035D
        gbc.setState(0x1a25, 0x3b5b, 0x4700, 0x5b19, 0x8f45, 0x7be3, 0x1, 0x1);
        gbc.writeMem(0x1a25, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x3b5b);
        EXPECT(gbc.pc(), 0x1a27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 035E
        gbc.setState(0xc628, 0x8d35, 0x800, 0x2be, 0x3a6c, 0x1655, 0x0, 0x0);
        gbc.writeMem(0xc628, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8d35);
        EXPECT(gbc.pc(), 0xc62a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc628), 0xcb);
        EXPECT(gbc.readMem(0xc629), 0xd0);
        // CB D0 035F
        gbc.setState(0xd9e3, 0xbd02, 0xbcd0, 0x18bb, 0x57, 0xf6eb, 0x0, 0x0);
        gbc.writeMem(0xd9e3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xbd02);
        EXPECT(gbc.pc(), 0xd9e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9e3), 0xcb);
        EXPECT(gbc.readMem(0xd9e4), 0xd0);
        // CB D0 0360
        gbc.setState(0x50b0, 0xe506, 0xa0c0, 0xaff5, 0xea8c, 0xda62, 0x0, 0x1);
        gbc.writeMem(0x50b0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe506);
        EXPECT(gbc.pc(), 0x50b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0362
        gbc.setState(0xb70e, 0xa535, 0xcbf0, 0xf269, 0x3f8b, 0x831b, 0x1, 0x0);
        gbc.writeMem(0xb70e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa535);
        EXPECT(gbc.pc(), 0xb710);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb70e), 0xcb);
        EXPECT(gbc.readMem(0xb70f), 0xd0);
        // CB D0 0363
        gbc.setState(0x4d0, 0x5384, 0xd370, 0xbb26, 0xaea1, 0x6ab0, 0x1, 0x1);
        gbc.writeMem(0x4d0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x5384);
        EXPECT(gbc.pc(), 0x4d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0364
        gbc.setState(0xe00f, 0x7b57, 0xe920, 0xe3db, 0xdee0, 0xa9ed, 0x1, 0x1);
        gbc.writeMem(0xe00f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7b57);
        EXPECT(gbc.pc(), 0xe011);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe00f), 0xcb);
        EXPECT(gbc.readMem(0xe010), 0xd0);
        // CB D0 0365
        gbc.setState(0xc428, 0x5873, 0xbc50, 0x8a84, 0xc6d, 0x97d8, 0x1, 0x1);
        gbc.writeMem(0xc428, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5873);
        EXPECT(gbc.pc(), 0xc42a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc428), 0xcb);
        EXPECT(gbc.readMem(0xc429), 0xd0);
        // CB D0 0366
        gbc.setState(0x8f77, 0xa88f, 0x5180, 0x8038, 0x1ae1, 0x6060, 0x0, 0x1);
        gbc.writeMem(0x8f77, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa88f);
        EXPECT(gbc.pc(), 0x8f79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f77), 0xcb);
        EXPECT(gbc.readMem(0x8f78), 0xd0);
        // CB D0 0367
        gbc.setState(0x1c8f, 0x2245, 0x48d0, 0xdef8, 0x378b, 0xb535, 0x1, 0x1);
        gbc.writeMem(0x1c8f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2245);
        EXPECT(gbc.pc(), 0x1c91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0368
        gbc.setState(0x1a5e, 0x7fb5, 0x44a0, 0xdbcc, 0x8e06, 0x68aa, 0x1, 0x0);
        gbc.writeMem(0x1a5e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7fb5);
        EXPECT(gbc.pc(), 0x1a60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0369
        gbc.setState(0x59e9, 0x6f2f, 0x5340, 0xe7ee, 0xac62, 0xd8e2, 0x1, 0x1);
        gbc.writeMem(0x59e9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x6f2f);
        EXPECT(gbc.pc(), 0x59eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 036A
        gbc.setState(0xba2e, 0xebbf, 0xc2f0, 0xa82e, 0xa794, 0xe8f9, 0x0, 0x0);
        gbc.writeMem(0xba2e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xebbf);
        EXPECT(gbc.pc(), 0xba30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba2e), 0xcb);
        EXPECT(gbc.readMem(0xba2f), 0xd0);
        // CB D0 036B
        gbc.setState(0x7997, 0x2b31, 0x68e0, 0x6d7b, 0x7c76, 0x62fa, 0x0, 0x0);
        gbc.writeMem(0x7997, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2b31);
        EXPECT(gbc.pc(), 0x7999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 036C
        gbc.setState(0x5d6d, 0xfa32, 0xb640, 0xe480, 0x23c7, 0x5088, 0x1, 0x1);
        gbc.writeMem(0x5d6d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xfa32);
        EXPECT(gbc.pc(), 0x5d6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 036D
        gbc.setState(0x3556, 0xb1c4, 0x98a0, 0xc5d0, 0x825e, 0xec7d, 0x0, 0x1);
        gbc.writeMem(0x3556, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb1c4);
        EXPECT(gbc.pc(), 0x3558);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 036E
        gbc.setState(0xbb3e, 0x1d9c, 0x1af0, 0x7cd2, 0xb116, 0x1775, 0x0, 0x0);
        gbc.writeMem(0xbb3e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1d9c);
        EXPECT(gbc.pc(), 0xbb40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb3e), 0xcb);
        EXPECT(gbc.readMem(0xbb3f), 0xd0);
        // CB D0 036F
        gbc.setState(0xcbe5, 0x7c5d, 0xe920, 0xa210, 0x64d8, 0x919c, 0x0, 0x1);
        gbc.writeMem(0xcbe5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x7c5d);
        EXPECT(gbc.pc(), 0xcbe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbe5), 0xcb);
        EXPECT(gbc.readMem(0xcbe6), 0xd0);
        // CB D0 0370
        gbc.setState(0x8b1d, 0x9a57, 0xcea0, 0x31f4, 0x7fec, 0xbdbb, 0x0, 0x1);
        gbc.writeMem(0x8b1d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9a57);
        EXPECT(gbc.pc(), 0x8b1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b1d), 0xcb);
        EXPECT(gbc.readMem(0x8b1e), 0xd0);
        // CB D0 0371
        gbc.setState(0x5ac, 0x8e62, 0x9210, 0xfbfb, 0x6c61, 0x9d6d, 0x0, 0x1);
        gbc.writeMem(0x5ac, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8e62);
        EXPECT(gbc.pc(), 0x5ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0373
        gbc.setState(0x24dd, 0x5cc7, 0xfc50, 0xb9eb, 0xe208, 0xf096, 0x1, 0x0);
        gbc.writeMem(0x24dd, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5cc7);
        EXPECT(gbc.pc(), 0x24df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0374
        gbc.setState(0x5b91, 0xd228, 0xd1f0, 0xc4bb, 0x3476, 0x2939, 0x0, 0x1);
        gbc.writeMem(0x5b91, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd228);
        EXPECT(gbc.pc(), 0x5b93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0375
        gbc.setState(0xa620, 0x64d, 0xf430, 0x8d47, 0x5a73, 0xdeaa, 0x1, 0x1);
        gbc.writeMem(0xa620, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x64d);
        EXPECT(gbc.pc(), 0xa622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa620), 0xcb);
        EXPECT(gbc.readMem(0xa621), 0xd0);
        // CB D0 0376
        gbc.setState(0x6cee, 0xe06e, 0xe670, 0xa7e, 0xad99, 0xb763, 0x0, 0x1);
        gbc.writeMem(0x6cee, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xe06e);
        EXPECT(gbc.pc(), 0x6cf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0377
        gbc.setState(0x3733, 0x9dc2, 0x8b70, 0x5f14, 0x307d, 0x91eb, 0x1, 0x1);
        gbc.writeMem(0x3733, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x9dc2);
        EXPECT(gbc.pc(), 0x3735);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0378
        gbc.setState(0x13bb, 0x36b3, 0xe2b0, 0x36f1, 0x67f0, 0x8ecd, 0x0, 0x1);
        gbc.writeMem(0x13bb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x36b3);
        EXPECT(gbc.pc(), 0x13bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0379
        gbc.setState(0xa691, 0xc57a, 0xb9f0, 0x7ecb, 0x19eb, 0xb67d, 0x0, 0x1);
        gbc.writeMem(0xa691, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc57a);
        EXPECT(gbc.pc(), 0xa693);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa691), 0xcb);
        EXPECT(gbc.readMem(0xa692), 0xd0);
        // CB D0 037B
        gbc.setState(0x48bc, 0x908b, 0x2b40, 0xdefd, 0xf7c2, 0xb75, 0x1, 0x1);
        gbc.writeMem(0x48bc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x908b);
        EXPECT(gbc.pc(), 0x48be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 037C
        gbc.setState(0x3904, 0x54a3, 0xd350, 0xab7, 0x139b, 0x32ed, 0x1, 0x1);
        gbc.writeMem(0x3904, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x54a3);
        EXPECT(gbc.pc(), 0x3906);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 037D
        gbc.setState(0x56c1, 0x8454, 0x69b0, 0xf7f3, 0x6135, 0x9ff9, 0x0, 0x0);
        gbc.writeMem(0x56c1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8454);
        EXPECT(gbc.pc(), 0x56c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 037E
        gbc.setState(0xeb2, 0xe187, 0xe620, 0x4502, 0x9116, 0xa97e, 0x0, 0x0);
        gbc.writeMem(0xeb2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe187);
        EXPECT(gbc.pc(), 0xeb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 037F
        gbc.setState(0x9377, 0x9874, 0x8200, 0x679b, 0x638e, 0x9ce8, 0x0, 0x1);
        gbc.writeMem(0x9377, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x9874);
        EXPECT(gbc.pc(), 0x9379);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9377), 0xcb);
        EXPECT(gbc.readMem(0x9378), 0xd0);
        // CB D0 0380
        gbc.setState(0x3ca8, 0x98, 0xb800, 0xd29f, 0xdd27, 0x2c21, 0x0, 0x0);
        gbc.writeMem(0x3ca8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x98);
        EXPECT(gbc.pc(), 0x3caa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0381
        gbc.setState(0x1efe, 0xc5ef, 0x5dc0, 0xe29a, 0x6a71, 0x980e, 0x0, 0x1);
        gbc.writeMem(0x1efe, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc5ef);
        EXPECT(gbc.pc(), 0x1f00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0382
        gbc.setState(0x5707, 0xb065, 0x7a30, 0x5d05, 0xc6bf, 0x3970, 0x0, 0x0);
        gbc.writeMem(0x5707, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xb065);
        EXPECT(gbc.pc(), 0x5709);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0383
        gbc.setState(0x8075, 0x3a5a, 0x5db0, 0xe577, 0xef40, 0x709b, 0x0, 0x1);
        gbc.writeMem(0x8075, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x3a5a);
        EXPECT(gbc.pc(), 0x8077);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8075), 0xcb);
        EXPECT(gbc.readMem(0x8076), 0xd0);
        // CB D0 0384
        gbc.setState(0x816a, 0xd853, 0x8c90, 0x9f02, 0xb3c9, 0x5958, 0x0, 0x1);
        gbc.writeMem(0x816a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xd853);
        EXPECT(gbc.pc(), 0x816c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x816a), 0xcb);
        EXPECT(gbc.readMem(0x816b), 0xd0);
        // CB D0 0385
        gbc.setState(0xc415, 0x334f, 0x2060, 0x5ea8, 0xa089, 0xf7bf, 0x1, 0x1);
        gbc.writeMem(0xc415, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x334f);
        EXPECT(gbc.pc(), 0xc417);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc415), 0xcb);
        EXPECT(gbc.readMem(0xc416), 0xd0);
        // CB D0 0386
        gbc.setState(0x55ca, 0xf40d, 0xcc30, 0x17f3, 0x9ea1, 0x27ec, 0x0, 0x1);
        gbc.writeMem(0x55ca, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xf40d);
        EXPECT(gbc.pc(), 0x55cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0387
        gbc.setState(0x2e86, 0xfd36, 0x56e0, 0xa1d7, 0xa1fc, 0x258e, 0x0, 0x0);
        gbc.writeMem(0x2e86, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xfd36);
        EXPECT(gbc.pc(), 0x2e88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0388
        gbc.setState(0xa576, 0x3572, 0x68e0, 0x348f, 0x54c7, 0xa0e9, 0x1, 0x0);
        gbc.writeMem(0xa576, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x3572);
        EXPECT(gbc.pc(), 0xa578);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa576), 0xcb);
        EXPECT(gbc.readMem(0xa577), 0xd0);
        // CB D0 0389
        gbc.setState(0x7c2a, 0x1b70, 0xd0b0, 0x2744, 0x75b, 0x30a4, 0x0, 0x1);
        gbc.writeMem(0x7c2a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1b70);
        EXPECT(gbc.pc(), 0x7c2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 038A
        gbc.setState(0x1c30, 0x4de9, 0x9f0, 0x4100, 0x2722, 0xae63, 0x0, 0x0);
        gbc.writeMem(0x1c30, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4de9);
        EXPECT(gbc.pc(), 0x1c32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 038B
        gbc.setState(0xdcb3, 0xcdc8, 0x8590, 0x7395, 0x8ad4, 0x6faf, 0x0, 0x0);
        gbc.writeMem(0xdcb3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xcdc8);
        EXPECT(gbc.pc(), 0xdcb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcb3), 0xcb);
        EXPECT(gbc.readMem(0xdcb4), 0xd0);
        // CB D0 038C
        gbc.setState(0x30a3, 0x1776, 0x1840, 0xe689, 0xdb4c, 0x3c94, 0x1, 0x1);
        gbc.writeMem(0x30a3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1776);
        EXPECT(gbc.pc(), 0x30a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 038D
        gbc.setState(0xb292, 0xb507, 0x8700, 0x4941, 0x1621, 0x45c4, 0x0, 0x1);
        gbc.writeMem(0xb292, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb507);
        EXPECT(gbc.pc(), 0xb294);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb292), 0xcb);
        EXPECT(gbc.readMem(0xb293), 0xd0);
        // CB D0 038E
        gbc.setState(0x4691, 0x69ac, 0xd2a0, 0x6705, 0xc97a, 0xaf04, 0x0, 0x1);
        gbc.writeMem(0x4691, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x69ac);
        EXPECT(gbc.pc(), 0x4693);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 038F
        gbc.setState(0x6402, 0x296d, 0x1930, 0x32d3, 0xec18, 0x1b4b, 0x0, 0x1);
        gbc.writeMem(0x6402, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x296d);
        EXPECT(gbc.pc(), 0x6404);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 0390
        gbc.setState(0xd771, 0xa807, 0x37a0, 0xab5a, 0x8850, 0xd7cc, 0x1, 0x1);
        gbc.writeMem(0xd771, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa807);
        EXPECT(gbc.pc(), 0xd773);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd771), 0xcb);
        EXPECT(gbc.readMem(0xd772), 0xd0);
        // CB D0 0391
        gbc.setState(0x7d05, 0x323c, 0xfba0, 0x949, 0xaefa, 0xb9fd, 0x1, 0x1);
        gbc.writeMem(0x7d05, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x323c);
        EXPECT(gbc.pc(), 0x7d07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0392
        gbc.setState(0x64ce, 0x7414, 0x3860, 0xa20e, 0x5257, 0xa4df, 0x0, 0x1);
        gbc.writeMem(0x64ce, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7414);
        EXPECT(gbc.pc(), 0x64d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 0393
        gbc.setState(0xe076, 0x900b, 0x310, 0x63f7, 0xe169, 0x2c2f, 0x1, 0x0);
        gbc.writeMem(0xe076, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x900b);
        EXPECT(gbc.pc(), 0xe078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe076), 0xcb);
        EXPECT(gbc.readMem(0xe077), 0xd0);
        // CB D0 0394
        gbc.setState(0x90c8, 0xbb7c, 0xb650, 0xf24f, 0xcde8, 0x79e, 0x1, 0x1);
        gbc.writeMem(0x90c8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xbb7c);
        EXPECT(gbc.pc(), 0x90ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90c8), 0xcb);
        EXPECT(gbc.readMem(0x90c9), 0xd0);
        // CB D0 0395
        gbc.setState(0xa1d3, 0xc66e, 0xf430, 0x677e, 0xf01c, 0x9083, 0x0, 0x0);
        gbc.writeMem(0xa1d3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc66e);
        EXPECT(gbc.pc(), 0xa1d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1d3), 0xcb);
        EXPECT(gbc.readMem(0xa1d4), 0xd0);
        // CB D0 0396
        gbc.setState(0xe715, 0x2551, 0x41f0, 0x2938, 0xc05a, 0x7ad5, 0x0, 0x1);
        gbc.writeMem(0xe715, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2551);
        EXPECT(gbc.pc(), 0xe717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe715), 0xcb);
        EXPECT(gbc.readMem(0xe716), 0xd0);
        // CB D0 0397
        gbc.setState(0xc280, 0x7639, 0xf3a0, 0x3303, 0x3a51, 0x5141, 0x1, 0x0);
        gbc.writeMem(0xc280, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7639);
        EXPECT(gbc.pc(), 0xc282);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc280), 0xcb);
        EXPECT(gbc.readMem(0xc281), 0xd0);
        // CB D0 0398
        gbc.setState(0xec89, 0xdabf, 0xc50, 0x8172, 0x56ec, 0xa67c, 0x0, 0x1);
        gbc.writeMem(0xec89, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xdabf);
        EXPECT(gbc.pc(), 0xec8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec89), 0xcb);
        EXPECT(gbc.readMem(0xec8a), 0xd0);
        // CB D0 0399
        gbc.setState(0xcb2d, 0xf646, 0x1530, 0x4de5, 0xcb4b, 0xb975, 0x1, 0x1);
        gbc.writeMem(0xcb2d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf646);
        EXPECT(gbc.pc(), 0xcb2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb2d), 0xcb);
        EXPECT(gbc.readMem(0xcb2e), 0xd0);
        // CB D0 039A
        gbc.setState(0x6111, 0x80c8, 0x0, 0xafa4, 0x4b46, 0x52c8, 0x1, 0x1);
        gbc.writeMem(0x6111, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x80c8);
        EXPECT(gbc.pc(), 0x6113);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 039C
        gbc.setState(0x4729, 0xd3da, 0x970, 0xc5c8, 0xb294, 0x3e2, 0x1, 0x1);
        gbc.writeMem(0x4729, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd3da);
        EXPECT(gbc.pc(), 0x472b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 039D
        gbc.setState(0xed67, 0xa4b7, 0xc7e0, 0xfba7, 0xaa2d, 0x6683, 0x0, 0x0);
        gbc.writeMem(0xed67, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xa4b7);
        EXPECT(gbc.pc(), 0xed69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed67), 0xcb);
        EXPECT(gbc.readMem(0xed68), 0xd0);
        // CB D0 039E
        gbc.setState(0x5b77, 0x90b3, 0x8b50, 0xa23d, 0x5f02, 0x4e56, 0x0, 0x1);
        gbc.writeMem(0x5b77, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x90b3);
        EXPECT(gbc.pc(), 0x5b79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 039F
        gbc.setState(0x1168, 0x1038, 0x8c50, 0x28bf, 0x2aab, 0x2071, 0x0, 0x1);
        gbc.writeMem(0x1168, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x1038);
        EXPECT(gbc.pc(), 0x116a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 03A0
        gbc.setState(0x9d34, 0x5d2a, 0x54c0, 0xe5dc, 0x8eca, 0x2c4f, 0x1, 0x0);
        gbc.writeMem(0x9d34, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x5d2a);
        EXPECT(gbc.pc(), 0x9d36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d34), 0xcb);
        EXPECT(gbc.readMem(0x9d35), 0xd0);
        // CB D0 03A3
        gbc.setState(0xcd18, 0x235, 0x21f0, 0x5b25, 0x46cf, 0x6245, 0x0, 0x1);
        gbc.writeMem(0xcd18, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x235);
        EXPECT(gbc.pc(), 0xcd1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd18), 0xcb);
        EXPECT(gbc.readMem(0xcd19), 0xd0);
        // CB D0 03A4
        gbc.setState(0xbb44, 0x3d9, 0x2370, 0xd213, 0xa38b, 0xcc93, 0x0, 0x1);
        gbc.writeMem(0xbb44, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x3d9);
        EXPECT(gbc.pc(), 0xbb46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb44), 0xcb);
        EXPECT(gbc.readMem(0xbb45), 0xd0);
        // CB D0 03A5
        gbc.setState(0xeda1, 0x72a, 0x38d0, 0x7fab, 0xdd6d, 0x9cf3, 0x0, 0x1);
        gbc.writeMem(0xeda1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x72a);
        EXPECT(gbc.pc(), 0xeda3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeda1), 0xcb);
        EXPECT(gbc.readMem(0xeda2), 0xd0);
        // CB D0 03A6
        gbc.setState(0xeb12, 0x8e9a, 0x33e0, 0xef3, 0xe07, 0xc3ea, 0x1, 0x0);
        gbc.writeMem(0xeb12, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8e9a);
        EXPECT(gbc.pc(), 0xeb14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb12), 0xcb);
        EXPECT(gbc.readMem(0xeb13), 0xd0);
        // CB D0 03A7
        gbc.setState(0xa8ab, 0xd4dd, 0xe600, 0x8df1, 0x55ca, 0xcf8d, 0x1, 0x0);
        gbc.writeMem(0xa8ab, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd4dd);
        EXPECT(gbc.pc(), 0xa8ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8ab), 0xcb);
        EXPECT(gbc.readMem(0xa8ac), 0xd0);
        // CB D0 03A8
        gbc.setState(0xac2c, 0xf802, 0x7f10, 0xb368, 0x4b9f, 0xd4c8, 0x0, 0x0);
        gbc.writeMem(0xac2c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xf802);
        EXPECT(gbc.pc(), 0xac2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac2c), 0xcb);
        EXPECT(gbc.readMem(0xac2d), 0xd0);
        // CB D0 03A9
        gbc.setState(0xc985, 0x52d2, 0xa3c0, 0x354e, 0x8eed, 0xd3d3, 0x0, 0x1);
        gbc.writeMem(0xc985, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x52d2);
        EXPECT(gbc.pc(), 0xc987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc985), 0xcb);
        EXPECT(gbc.readMem(0xc986), 0xd0);
        // CB D0 03AA
        gbc.setState(0xbd89, 0xd513, 0x3080, 0x9018, 0x3a05, 0xac56, 0x1, 0x0);
        gbc.writeMem(0xbd89, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd513);
        EXPECT(gbc.pc(), 0xbd8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd89), 0xcb);
        EXPECT(gbc.readMem(0xbd8a), 0xd0);
        // CB D0 03AB
        gbc.setState(0x2372, 0x1941, 0x43d0, 0xc151, 0x543b, 0xc96d, 0x1, 0x0);
        gbc.writeMem(0x2372, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x1941);
        EXPECT(gbc.pc(), 0x2374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 03AC
        gbc.setState(0x44db, 0x7ac8, 0xd440, 0xb53b, 0x1930, 0x60b6, 0x0, 0x1);
        gbc.writeMem(0x44db, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7ac8);
        EXPECT(gbc.pc(), 0x44dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 03AD
        gbc.setState(0xdc0f, 0xb830, 0x600, 0x8683, 0x9a28, 0x7c71, 0x0, 0x0);
        gbc.writeMem(0xdc0f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xb830);
        EXPECT(gbc.pc(), 0xdc11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc0f), 0xcb);
        EXPECT(gbc.readMem(0xdc10), 0xd0);
        // CB D0 03AE
        gbc.setState(0xca3e, 0x4b03, 0xa20, 0x8751, 0x1ad0, 0xb8b1, 0x0, 0x0);
        gbc.writeMem(0xca3e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4b03);
        EXPECT(gbc.pc(), 0xca40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca3e), 0xcb);
        EXPECT(gbc.readMem(0xca3f), 0xd0);
        // CB D0 03AF
        gbc.setState(0xb277, 0x701b, 0x9ac0, 0x990c, 0x3a94, 0x2a34, 0x1, 0x0);
        gbc.writeMem(0xb277, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x701b);
        EXPECT(gbc.pc(), 0xb279);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb277), 0xcb);
        EXPECT(gbc.readMem(0xb278), 0xd0);
        // CB D0 03B0
        gbc.setState(0x4fcc, 0xc017, 0xe0f0, 0xb309, 0x36e, 0x53b2, 0x1, 0x0);
        gbc.writeMem(0x4fcc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xc017);
        EXPECT(gbc.pc(), 0x4fce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 03B1
        gbc.setState(0x6831, 0xc45b, 0xa6f0, 0xfee5, 0xc880, 0xacc8, 0x0, 0x1);
        gbc.writeMem(0x6831, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc45b);
        EXPECT(gbc.pc(), 0x6833);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 03B2
        gbc.setState(0x2b74, 0x7b0d, 0x9950, 0x9838, 0xcbc, 0x43b7, 0x1, 0x1);
        gbc.writeMem(0x2b74, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x7b0d);
        EXPECT(gbc.pc(), 0x2b76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 03B3
        gbc.setState(0x3972, 0xcef6, 0x8d50, 0x27ff, 0x643f, 0x5915, 0x0, 0x1);
        gbc.writeMem(0x3972, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xcef6);
        EXPECT(gbc.pc(), 0x3974);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 03B4
        gbc.setState(0x542, 0x7e71, 0x8000, 0x744, 0x4777, 0x293c, 0x0, 0x0);
        gbc.writeMem(0x542, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x7e71);
        EXPECT(gbc.pc(), 0x544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 03B5
        gbc.setState(0x770a, 0x1cb0, 0x5030, 0x264c, 0xc620, 0x5ffb, 0x0, 0x1);
        gbc.writeMem(0x770a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1cb0);
        EXPECT(gbc.pc(), 0x770c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 03B6
        gbc.setState(0xdcbb, 0x4476, 0xfe90, 0x8618, 0x23ad, 0x46d9, 0x1, 0x1);
        gbc.writeMem(0xdcbb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4476);
        EXPECT(gbc.pc(), 0xdcbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcbb), 0xcb);
        EXPECT(gbc.readMem(0xdcbc), 0xd0);
        // CB D0 03B7
        gbc.setState(0x8bd8, 0x3763, 0x8180, 0xc60e, 0x9744, 0xc2a, 0x1, 0x1);
        gbc.writeMem(0x8bd8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x3763);
        EXPECT(gbc.pc(), 0x8bda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bd8), 0xcb);
        EXPECT(gbc.readMem(0x8bd9), 0xd0);
        // CB D0 03B8
        gbc.setState(0xcd72, 0x3aae, 0xdd50, 0xdd6e, 0xbb23, 0x9e96, 0x1, 0x1);
        gbc.writeMem(0xcd72, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x3aae);
        EXPECT(gbc.pc(), 0xcd74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd72), 0xcb);
        EXPECT(gbc.readMem(0xcd73), 0xd0);
        // CB D0 03B9
        gbc.setState(0x9e9a, 0xa09a, 0x4e70, 0xcada, 0xda06, 0xb113, 0x0, 0x1);
        gbc.writeMem(0x9e9a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xa09a);
        EXPECT(gbc.pc(), 0x9e9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e9a), 0xcb);
        EXPECT(gbc.readMem(0x9e9b), 0xd0);
        // CB D0 03BA
        gbc.setState(0xa193, 0x7a08, 0x5eb0, 0xb582, 0x4ba8, 0x3900, 0x0, 0x1);
        gbc.writeMem(0xa193, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7a08);
        EXPECT(gbc.pc(), 0xa195);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa193), 0xcb);
        EXPECT(gbc.readMem(0xa194), 0xd0);
        // CB D0 03BB
        gbc.setState(0xa751, 0x6874, 0x4ea0, 0x952, 0x852, 0xf0b4, 0x1, 0x0);
        gbc.writeMem(0xa751, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6874);
        EXPECT(gbc.pc(), 0xa753);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa751), 0xcb);
        EXPECT(gbc.readMem(0xa752), 0xd0);
        // CB D0 03BC
        gbc.setState(0x1ec5, 0x21bc, 0x1d70, 0x240d, 0x8689, 0xdfe8, 0x1, 0x0);
        gbc.writeMem(0x1ec5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x21bc);
        EXPECT(gbc.pc(), 0x1ec7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 03BD
        gbc.setState(0xd351, 0x262f, 0xacf0, 0x8bac, 0x56ca, 0xbdd1, 0x1, 0x0);
        gbc.writeMem(0xd351, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x262f);
        EXPECT(gbc.pc(), 0xd353);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd351), 0xcb);
        EXPECT(gbc.readMem(0xd352), 0xd0);
        // CB D0 03BE
        gbc.setState(0xda33, 0x2ab9, 0x8b70, 0xf88c, 0xdc31, 0x5058, 0x1, 0x1);
        gbc.writeMem(0xda33, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x2ab9);
        EXPECT(gbc.pc(), 0xda35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda33), 0xcb);
        EXPECT(gbc.readMem(0xda34), 0xd0);
        // CB D0 03BF
        gbc.setState(0xb73, 0x603c, 0xc3c0, 0x748d, 0x5c00, 0xb7c5, 0x1, 0x1);
        gbc.writeMem(0xb73, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x603c);
        EXPECT(gbc.pc(), 0xb75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 03C0
        gbc.setState(0x47c2, 0xa2a9, 0x6b40, 0x3be0, 0x4667, 0x8efe, 0x0, 0x1);
        gbc.writeMem(0x47c2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa2a9);
        EXPECT(gbc.pc(), 0x47c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 03C1
        gbc.setState(0xd334, 0x66f7, 0xae80, 0x2ebb, 0x7490, 0xfbcf, 0x1, 0x0);
        gbc.writeMem(0xd334, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x66f7);
        EXPECT(gbc.pc(), 0xd336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd334), 0xcb);
        EXPECT(gbc.readMem(0xd335), 0xd0);
        // CB D0 03C2
        gbc.setState(0x3020, 0x6f8d, 0xcd90, 0xb394, 0xd5bb, 0x3c81, 0x0, 0x0);
        gbc.writeMem(0x3020, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6f8d);
        EXPECT(gbc.pc(), 0x3022);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 03C3
        gbc.setState(0xdf9d, 0xce78, 0x9350, 0x30b5, 0xc911, 0x1500, 0x1, 0x0);
        gbc.writeMem(0xdf9d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xce78);
        EXPECT(gbc.pc(), 0xdf9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf9d), 0xcb);
        EXPECT(gbc.readMem(0xdf9e), 0xd0);
        // CB D0 03C4
        gbc.setState(0x5735, 0x8bb, 0xb7a0, 0xe522, 0x5782, 0x59d4, 0x0, 0x1);
        gbc.writeMem(0x5735, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8bb);
        EXPECT(gbc.pc(), 0x5737);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 03C5
        gbc.setState(0x186a, 0xa95d, 0x5970, 0x3509, 0x2d42, 0xca2f, 0x1, 0x1);
        gbc.writeMem(0x186a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa95d);
        EXPECT(gbc.pc(), 0x186c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 03C6
        gbc.setState(0x260c, 0xc5b9, 0x8060, 0xfa8f, 0x1beb, 0x268e, 0x0, 0x1);
        gbc.writeMem(0x260c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc5b9);
        EXPECT(gbc.pc(), 0x260e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 03C7
        gbc.setState(0xeba, 0x6635, 0x13d0, 0x7d40, 0x1488, 0xc2c1, 0x1, 0x0);
        gbc.writeMem(0xeba, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6635);
        EXPECT(gbc.pc(), 0xebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 03C8
        gbc.setState(0xeebf, 0xa06, 0x4e20, 0xf101, 0x9ce8, 0xdf5, 0x1, 0x1);
        gbc.writeMem(0xeebf, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa06);
        EXPECT(gbc.pc(), 0xeec1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeebf), 0xcb);
        EXPECT(gbc.readMem(0xeec0), 0xd0);
        // CB D0 03C9
        gbc.setState(0x3822, 0x76c3, 0xe90, 0x5e1d, 0x7b7b, 0x7460, 0x1, 0x1);
        gbc.writeMem(0x3822, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x76c3);
        EXPECT(gbc.pc(), 0x3824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 03CA
        gbc.setState(0xc6c1, 0x13d9, 0x93f0, 0x2db0, 0x309e, 0xf130, 0x0, 0x0);
        gbc.writeMem(0xc6c1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x13d9);
        EXPECT(gbc.pc(), 0xc6c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6c1), 0xcb);
        EXPECT(gbc.readMem(0xc6c2), 0xd0);
        // CB D0 03CB
        gbc.setState(0x48da, 0x4a07, 0xe1f0, 0x2f37, 0x9728, 0x77cf, 0x0, 0x1);
        gbc.writeMem(0x48da, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4a07);
        EXPECT(gbc.pc(), 0x48dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 03CC
        gbc.setState(0xc1f0, 0xd36a, 0xb4a0, 0x6b5a, 0x335, 0xfdfb, 0x1, 0x0);
        gbc.writeMem(0xc1f0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xd36a);
        EXPECT(gbc.pc(), 0xc1f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1f0), 0xcb);
        EXPECT(gbc.readMem(0xc1f1), 0xd0);
        // CB D0 03CD
        gbc.setState(0xee44, 0x1281, 0x1ad0, 0x3ba7, 0x3df7, 0x6139, 0x1, 0x0);
        gbc.writeMem(0xee44, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x1281);
        EXPECT(gbc.pc(), 0xee46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee44), 0xcb);
        EXPECT(gbc.readMem(0xee45), 0xd0);
        // CB D0 03CE
        gbc.setState(0xa057, 0x8036, 0xe4d0, 0xfa1, 0x35f, 0xac95, 0x1, 0x0);
        gbc.writeMem(0xa057, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8036);
        EXPECT(gbc.pc(), 0xa059);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa057), 0xcb);
        EXPECT(gbc.readMem(0xa058), 0xd0);
        // CB D0 03CF
        gbc.setState(0x3317, 0x6095, 0x8430, 0xf02, 0xa4fb, 0xb852, 0x0, 0x1);
        gbc.writeMem(0x3317, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6095);
        EXPECT(gbc.pc(), 0x3319);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 03D0
        gbc.setState(0x1b03, 0x6670, 0xc7a0, 0x935a, 0xc930, 0x6009, 0x1, 0x1);
        gbc.writeMem(0x1b03, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6670);
        EXPECT(gbc.pc(), 0x1b05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 03D2
        gbc.setState(0x2018, 0x7d36, 0xc4d0, 0xfda1, 0xa348, 0xd477, 0x0, 0x1);
        gbc.writeMem(0x2018, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7d36);
        EXPECT(gbc.pc(), 0x201a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 03D3
        gbc.setState(0xce15, 0x9d0e, 0xd740, 0x3781, 0xbee8, 0x1ece, 0x0, 0x0);
        gbc.writeMem(0xce15, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x9d0e);
        EXPECT(gbc.pc(), 0xce17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce15), 0xcb);
        EXPECT(gbc.readMem(0xce16), 0xd0);
        // CB D0 03D4
        gbc.setState(0x4d20, 0x4b14, 0xcf30, 0x22df, 0xba78, 0x981b, 0x0, 0x0);
        gbc.writeMem(0x4d20, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4b14);
        EXPECT(gbc.pc(), 0x4d22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB D0 03D5
        gbc.setState(0xe614, 0x35c8, 0xa6f0, 0xa0cc, 0xe999, 0x8a24, 0x0, 0x1);
        gbc.writeMem(0xe614, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x35c8);
        EXPECT(gbc.pc(), 0xe616);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe614), 0xcb);
        EXPECT(gbc.readMem(0xe615), 0xd0);
        // CB D0 03D6
        gbc.setState(0x33fc, 0xd648, 0xa110, 0x3fbc, 0xdc41, 0xfd90, 0x1, 0x0);
        gbc.writeMem(0x33fc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xd648);
        EXPECT(gbc.pc(), 0x33fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 03D7
        gbc.setState(0x9383, 0xfeee, 0xf020, 0x9c38, 0xfb22, 0x4620, 0x1, 0x0);
        gbc.writeMem(0x9383, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xfeee);
        EXPECT(gbc.pc(), 0x9385);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9383), 0xcb);
        EXPECT(gbc.readMem(0x9384), 0xd0);
        // CB D0 03D8
        gbc.setState(0xe493, 0xe36e, 0x4eb0, 0x7b1a, 0xbf1a, 0x9e9f, 0x1, 0x1);
        gbc.writeMem(0xe493, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe36e);
        EXPECT(gbc.pc(), 0xe495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe493), 0xcb);
        EXPECT(gbc.readMem(0xe494), 0xd0);
        // CB D0 03D9
        gbc.setState(0x4053, 0xfd2, 0x2510, 0xb388, 0x1cf2, 0x972d, 0x0, 0x1);
        gbc.writeMem(0x4053, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xfd2);
        EXPECT(gbc.pc(), 0x4055);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB D0 03DA
        gbc.setState(0x78c5, 0x4fb3, 0x260, 0x7544, 0x7909, 0x77ec, 0x1, 0x0);
        gbc.writeMem(0x78c5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4fb3);
        EXPECT(gbc.pc(), 0x78c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 03DB
        gbc.setState(0xecdc, 0x6f4, 0x5ed0, 0x86a3, 0xb442, 0x2546, 0x1, 0x1);
        gbc.writeMem(0xecdc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6f4);
        EXPECT(gbc.pc(), 0xecde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecdc), 0xcb);
        EXPECT(gbc.readMem(0xecdd), 0xd0);
        // CB D0 03DC
        gbc.setState(0xb91c, 0xab7, 0xc920, 0x23e, 0xb4af, 0xee04, 0x0, 0x0);
        gbc.writeMem(0xb91c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xab7);
        EXPECT(gbc.pc(), 0xb91e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb91c), 0xcb);
        EXPECT(gbc.readMem(0xb91d), 0xd0);
        // CB D0 03DD
        gbc.setState(0xf6e, 0xb891, 0x5020, 0x5000, 0xf369, 0x4f31, 0x1, 0x0);
        gbc.writeMem(0xf6e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb891);
        EXPECT(gbc.pc(), 0xf70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB D0 03DE
        gbc.setState(0xaf66, 0xfe9d, 0x4c10, 0xd0ab, 0x7609, 0xe713, 0x1, 0x1);
        gbc.writeMem(0xaf66, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xfe9d);
        EXPECT(gbc.pc(), 0xaf68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf66), 0xcb);
        EXPECT(gbc.readMem(0xaf67), 0xd0);
        // CB D0 03DF
        gbc.setState(0xc67f, 0x366f, 0x1f50, 0x7dd9, 0x3d4c, 0x4b2, 0x1, 0x0);
        gbc.writeMem(0xc67f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x366f);
        EXPECT(gbc.pc(), 0xc681);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc67f), 0xcb);
        EXPECT(gbc.readMem(0xc680), 0xd0);
        // CB D0 03E0
        gbc.setState(0xc032, 0x163, 0xa750, 0xc332, 0x62b8, 0xb96, 0x1, 0x0);
        gbc.writeMem(0xc032, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x163);
        EXPECT(gbc.pc(), 0xc034);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc032), 0xcb);
        EXPECT(gbc.readMem(0xc033), 0xd0);
        // CB D0 03E1
        gbc.setState(0xa27a, 0x1055, 0x35b0, 0xa2c9, 0x9145, 0xfc9, 0x0, 0x1);
        gbc.writeMem(0xa27a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1055);
        EXPECT(gbc.pc(), 0xa27c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa27a), 0xcb);
        EXPECT(gbc.readMem(0xa27b), 0xd0);
        // CB D0 03E2
        gbc.setState(0xa624, 0x6986, 0xba10, 0x25d1, 0x3bf1, 0xc772, 0x1, 0x1);
        gbc.writeMem(0xa624, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6986);
        EXPECT(gbc.pc(), 0xa626);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa624), 0xcb);
        EXPECT(gbc.readMem(0xa625), 0xd0);
        // CB D0 03E3
        gbc.setState(0x9c20, 0x23f8, 0x63e0, 0xf874, 0x232f, 0x3e77, 0x1, 0x1);
        gbc.writeMem(0x9c20, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x23f8);
        EXPECT(gbc.pc(), 0x9c22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c20), 0xcb);
        EXPECT(gbc.readMem(0x9c21), 0xd0);
        // CB D0 03E4
        gbc.setState(0xe303, 0xc7ac, 0x4ab0, 0x900b, 0x4f33, 0x975b, 0x1, 0x0);
        gbc.writeMem(0xe303, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc7ac);
        EXPECT(gbc.pc(), 0xe305);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe303), 0xcb);
        EXPECT(gbc.readMem(0xe304), 0xd0);
        // CB D0 03E5
        gbc.setState(0xa364, 0xc9c5, 0x6a50, 0xa545, 0x2ba5, 0x6c9f, 0x0, 0x1);
        gbc.writeMem(0xa364, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc9c5);
        EXPECT(gbc.pc(), 0xa366);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa364), 0xcb);
        EXPECT(gbc.readMem(0xa365), 0xd0);
        // CB D0 03E6
        gbc.setState(0x62eb, 0x5605, 0x89c0, 0xa05, 0xe8a5, 0x9497, 0x0, 0x1);
        gbc.writeMem(0x62eb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5605);
        EXPECT(gbc.pc(), 0x62ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB D0 03E7
        gbc.setState(0xceb1, 0x9554, 0xf660, 0x9770, 0x8d24, 0xe2a2, 0x1, 0x0);
        gbc.writeMem(0xceb1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9554);
        EXPECT(gbc.pc(), 0xceb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceb1), 0xcb);
        EXPECT(gbc.readMem(0xceb2), 0xd0);
    }
