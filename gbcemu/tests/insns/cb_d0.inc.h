    TEST(gbcemu, opcode_cb_d0) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB D0 0000
        gbc.setState(0x262d, 0x984e, 0xfc0, 0x2898, 0x7a35, 0xae90, 0x1, 0x1);
        gbc.writeMem(0x262d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x984e, gbc.sp());
        EXPECT(0x262f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0002
        gbc.setState(0x3b10, 0x7d7d, 0xc270, 0xa8ee, 0x7df6, 0xd86d, 0x1, 0x0);
        gbc.writeMem(0x3b10, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7d7d, gbc.sp());
        EXPECT(0x3b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0003
        gbc.setState(0x9555, 0x3dc4, 0xbbd0, 0x4a9e, 0xe53a, 0xac79, 0x0, 0x1);
        gbc.writeMem(0x9555, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3dc4, gbc.sp());
        EXPECT(0x9557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9555));
        EXPECT(0xd0, gbc.readMem(0x9556));
        // CB D0 0004
        gbc.setState(0xcd44, 0x957b, 0x120, 0x29c8, 0xecd5, 0x1203, 0x0, 0x0);
        gbc.writeMem(0xcd44, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x957b, gbc.sp());
        EXPECT(0xcd46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd44));
        EXPECT(0xd0, gbc.readMem(0xcd45));
        // CB D0 0005
        gbc.setState(0xdc87, 0x1679, 0x7f60, 0x9dc5, 0x1d7d, 0x66a7, 0x0, 0x0);
        gbc.writeMem(0xdc87, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1679, gbc.sp());
        EXPECT(0xdc89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc87));
        EXPECT(0xd0, gbc.readMem(0xdc88));
        // CB D0 0006
        gbc.setState(0x5c86, 0xd5af, 0x68b0, 0x1d56, 0xb36f, 0xe874, 0x1, 0x1);
        gbc.writeMem(0x5c86, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd5af, gbc.sp());
        EXPECT(0x5c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0007
        gbc.setState(0xe3ec, 0x25fb, 0x76f0, 0xd144, 0xd7b5, 0x451b, 0x0, 0x1);
        gbc.writeMem(0xe3ec, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x25fb, gbc.sp());
        EXPECT(0xe3ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ec));
        EXPECT(0xd0, gbc.readMem(0xe3ed));
        // CB D0 0008
        gbc.setState(0xdb3a, 0x7bc2, 0x1060, 0x8fab, 0xfe5b, 0xf37d, 0x1, 0x1);
        gbc.writeMem(0xdb3a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7bc2, gbc.sp());
        EXPECT(0xdb3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb3a));
        EXPECT(0xd0, gbc.readMem(0xdb3b));
        // CB D0 0009
        gbc.setState(0x2bc1, 0x382f, 0xe5c0, 0x991f, 0x8414, 0x249e, 0x1, 0x1);
        gbc.writeMem(0x2bc1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x382f, gbc.sp());
        EXPECT(0x2bc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 000A
        gbc.setState(0x8666, 0x79c0, 0x36e0, 0xe09d, 0x3a8, 0x2d55, 0x0, 0x0);
        gbc.writeMem(0x8666, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x79c0, gbc.sp());
        EXPECT(0x8668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8666));
        EXPECT(0xd0, gbc.readMem(0x8667));
        // CB D0 000B
        gbc.setState(0x527a, 0xc03d, 0x7c00, 0x5277, 0x23c, 0x843b, 0x1, 0x1);
        gbc.writeMem(0x527a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc03d, gbc.sp());
        EXPECT(0x527c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 000C
        gbc.setState(0x9dd0, 0x3b64, 0x2cd0, 0xaabb, 0x918c, 0xb411, 0x0, 0x1);
        gbc.writeMem(0x9dd0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3b64, gbc.sp());
        EXPECT(0x9dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dd0));
        EXPECT(0xd0, gbc.readMem(0x9dd1));
        // CB D0 000D
        gbc.setState(0x2ea5, 0x1b06, 0x47a0, 0xdcb2, 0xeb26, 0xbabd, 0x1, 0x1);
        gbc.writeMem(0x2ea5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1b06, gbc.sp());
        EXPECT(0x2ea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 000E
        gbc.setState(0x5765, 0x3d04, 0x6510, 0x7c75, 0x10b, 0xed5c, 0x1, 0x0);
        gbc.writeMem(0x5765, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3d04, gbc.sp());
        EXPECT(0x5767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 000F
        gbc.setState(0x5351, 0x5bb, 0x4600, 0xb3ef, 0xa55b, 0x41d7, 0x0, 0x1);
        gbc.writeMem(0x5351, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5bb, gbc.sp());
        EXPECT(0x5353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0010
        gbc.setState(0x55b2, 0x5013, 0x5e60, 0x253e, 0x64f0, 0xc625, 0x1, 0x1);
        gbc.writeMem(0x55b2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5013, gbc.sp());
        EXPECT(0x55b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0011
        gbc.setState(0xeeb1, 0x7b95, 0x4590, 0xb3ee, 0xd996, 0x6160, 0x0, 0x0);
        gbc.writeMem(0xeeb1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7b95, gbc.sp());
        EXPECT(0xeeb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeb1));
        EXPECT(0xd0, gbc.readMem(0xeeb2));
        // CB D0 0012
        gbc.setState(0xebcd, 0xf3a9, 0x5d50, 0xba0c, 0x5fc9, 0xd75f, 0x0, 0x0);
        gbc.writeMem(0xebcd, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf3a9, gbc.sp());
        EXPECT(0xebcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebcd));
        EXPECT(0xd0, gbc.readMem(0xebce));
        // CB D0 0013
        gbc.setState(0xd1b8, 0xfc37, 0x1f90, 0xa332, 0x220d, 0x1b01, 0x0, 0x0);
        gbc.writeMem(0xd1b8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xfc37, gbc.sp());
        EXPECT(0xd1ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1b8));
        EXPECT(0xd0, gbc.readMem(0xd1b9));
        // CB D0 0014
        gbc.setState(0x806d, 0x3077, 0x57e0, 0x5c61, 0x52dc, 0x3645, 0x1, 0x0);
        gbc.writeMem(0x806d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3077, gbc.sp());
        EXPECT(0x806f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x806d));
        EXPECT(0xd0, gbc.readMem(0x806e));
        // CB D0 0015
        gbc.setState(0x582f, 0x136b, 0x9a60, 0x2c6c, 0x84fe, 0xd382, 0x1, 0x0);
        gbc.writeMem(0x582f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x136b, gbc.sp());
        EXPECT(0x5831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0016
        gbc.setState(0x8d39, 0x3676, 0x86b0, 0x36e4, 0x6b, 0xdff, 0x1, 0x1);
        gbc.writeMem(0x8d39, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3676, gbc.sp());
        EXPECT(0x8d3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d39));
        EXPECT(0xd0, gbc.readMem(0x8d3a));
        // CB D0 0017
        gbc.setState(0x247d, 0x2504, 0x9770, 0xb8db, 0x48e3, 0xc786, 0x1, 0x0);
        gbc.writeMem(0x247d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2504, gbc.sp());
        EXPECT(0x247f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0018
        gbc.setState(0xdb1b, 0x86e7, 0xeb10, 0x84c0, 0xd1d6, 0xf937, 0x1, 0x0);
        gbc.writeMem(0xdb1b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x86e7, gbc.sp());
        EXPECT(0xdb1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb1b));
        EXPECT(0xd0, gbc.readMem(0xdb1c));
        // CB D0 0019
        gbc.setState(0xc49f, 0x9952, 0x69b0, 0x2502, 0x8ce, 0x3616, 0x0, 0x1);
        gbc.writeMem(0xc49f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9952, gbc.sp());
        EXPECT(0xc4a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc49f));
        EXPECT(0xd0, gbc.readMem(0xc4a0));
        // CB D0 001A
        gbc.setState(0xd24e, 0x3d86, 0xc500, 0xe06f, 0x7d24, 0x3f2f, 0x1, 0x0);
        gbc.writeMem(0xd24e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3d86, gbc.sp());
        EXPECT(0xd250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd24e));
        EXPECT(0xd0, gbc.readMem(0xd24f));
        // CB D0 001B
        gbc.setState(0x920a, 0x393c, 0xed90, 0xa5f4, 0x2105, 0x7641, 0x1, 0x0);
        gbc.writeMem(0x920a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x393c, gbc.sp());
        EXPECT(0x920c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x920a));
        EXPECT(0xd0, gbc.readMem(0x920b));
        // CB D0 001C
        gbc.setState(0xcac4, 0x6a0, 0xce0, 0x7f2, 0x6437, 0xd979, 0x1, 0x1);
        gbc.writeMem(0xcac4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6a0, gbc.sp());
        EXPECT(0xcac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac4));
        EXPECT(0xd0, gbc.readMem(0xcac5));
        // CB D0 001E
        gbc.setState(0xc517, 0xdef7, 0x9780, 0xcd50, 0x194a, 0x6619, 0x0, 0x0);
        gbc.writeMem(0xc517, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdef7, gbc.sp());
        EXPECT(0xc519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc517));
        EXPECT(0xd0, gbc.readMem(0xc518));
        // CB D0 001F
        gbc.setState(0xcab4, 0x85d0, 0xb570, 0x53c9, 0x644f, 0xc0eb, 0x0, 0x1);
        gbc.writeMem(0xcab4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x85d0, gbc.sp());
        EXPECT(0xcab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcab4));
        EXPECT(0xd0, gbc.readMem(0xcab5));
        // CB D0 0020
        gbc.setState(0x7d41, 0x68ff, 0x9790, 0xc886, 0x6bfb, 0x222a, 0x0, 0x1);
        gbc.writeMem(0x7d41, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x68ff, gbc.sp());
        EXPECT(0x7d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0021
        gbc.setState(0x8046, 0x679e, 0x2aa0, 0xf169, 0x6093, 0x4207, 0x1, 0x0);
        gbc.writeMem(0x8046, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x679e, gbc.sp());
        EXPECT(0x8048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8046));
        EXPECT(0xd0, gbc.readMem(0x8047));
        // CB D0 0022
        gbc.setState(0x7aca, 0x939b, 0x10c0, 0x4f79, 0x8646, 0x2062, 0x1, 0x0);
        gbc.writeMem(0x7aca, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x939b, gbc.sp());
        EXPECT(0x7acc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0023
        gbc.setState(0x488e, 0xc6f3, 0xa80, 0xbeb7, 0xec25, 0xcaa9, 0x1, 0x1);
        gbc.writeMem(0x488e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc6f3, gbc.sp());
        EXPECT(0x4890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0025
        gbc.setState(0xd37, 0x100, 0xfeb0, 0xfa1a, 0x72aa, 0x447f, 0x1, 0x1);
        gbc.writeMem(0xd37, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x100, gbc.sp());
        EXPECT(0xd39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0026
        gbc.setState(0x42f2, 0x5a38, 0xe750, 0xf337, 0xd291, 0x504b, 0x0, 0x0);
        gbc.writeMem(0x42f2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5a38, gbc.sp());
        EXPECT(0x42f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0027
        gbc.setState(0xda50, 0xe914, 0x9b50, 0x815e, 0x4b08, 0xc575, 0x0, 0x1);
        gbc.writeMem(0xda50, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe914, gbc.sp());
        EXPECT(0xda52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda50));
        EXPECT(0xd0, gbc.readMem(0xda51));
        // CB D0 0028
        gbc.setState(0xc70d, 0xcea0, 0xf0a0, 0xf5f8, 0x58a7, 0xbcd0, 0x1, 0x0);
        gbc.writeMem(0xc70d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcea0, gbc.sp());
        EXPECT(0xc70f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc70d));
        EXPECT(0xd0, gbc.readMem(0xc70e));
        // CB D0 0029
        gbc.setState(0x21a8, 0x250c, 0x5530, 0x4481, 0x2c8, 0xc642, 0x0, 0x0);
        gbc.writeMem(0x21a8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x250c, gbc.sp());
        EXPECT(0x21aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 002A
        gbc.setState(0xadc5, 0x29ab, 0xe160, 0x182c, 0x4262, 0x36ad, 0x1, 0x1);
        gbc.writeMem(0xadc5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x29ab, gbc.sp());
        EXPECT(0xadc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc5));
        EXPECT(0xd0, gbc.readMem(0xadc6));
        // CB D0 002B
        gbc.setState(0x6313, 0x4405, 0xe7e0, 0x924c, 0xa766, 0x8bc2, 0x1, 0x0);
        gbc.writeMem(0x6313, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4405, gbc.sp());
        EXPECT(0x6315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 002C
        gbc.setState(0x9114, 0xa39b, 0x8600, 0x1c1b, 0x21bb, 0x873c, 0x1, 0x0);
        gbc.writeMem(0x9114, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa39b, gbc.sp());
        EXPECT(0x9116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9114));
        EXPECT(0xd0, gbc.readMem(0x9115));
        // CB D0 002D
        gbc.setState(0x8da2, 0x7d3a, 0x1b00, 0xd0fb, 0xedb5, 0x885b, 0x1, 0x1);
        gbc.writeMem(0x8da2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7d3a, gbc.sp());
        EXPECT(0x8da4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da2));
        EXPECT(0xd0, gbc.readMem(0x8da3));
        // CB D0 002E
        gbc.setState(0xca69, 0x1b2c, 0xc7f0, 0x528f, 0x1754, 0x834, 0x1, 0x0);
        gbc.writeMem(0xca69, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1b2c, gbc.sp());
        EXPECT(0xca6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca69));
        EXPECT(0xd0, gbc.readMem(0xca6a));
        // CB D0 002F
        gbc.setState(0xcc45, 0x27d2, 0x3b40, 0x6c3b, 0xa493, 0xf181, 0x0, 0x1);
        gbc.writeMem(0xcc45, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x27d2, gbc.sp());
        EXPECT(0xcc47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc45));
        EXPECT(0xd0, gbc.readMem(0xcc46));
        // CB D0 0030
        gbc.setState(0x6301, 0x6c0a, 0x2570, 0x8a9f, 0x3c6a, 0x6622, 0x1, 0x0);
        gbc.writeMem(0x6301, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6c0a, gbc.sp());
        EXPECT(0x6303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0031
        gbc.setState(0x7f32, 0xbaa5, 0x2760, 0x75f9, 0xe3c0, 0x6494, 0x0, 0x0);
        gbc.writeMem(0x7f32, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbaa5, gbc.sp());
        EXPECT(0x7f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0032
        gbc.setState(0x6421, 0x8522, 0xecc0, 0x6767, 0xe99f, 0xed9, 0x0, 0x0);
        gbc.writeMem(0x6421, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8522, gbc.sp());
        EXPECT(0x6423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0033
        gbc.setState(0x743f, 0x6281, 0x2a40, 0x6a3c, 0x7c08, 0x318f, 0x1, 0x1);
        gbc.writeMem(0x743f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6281, gbc.sp());
        EXPECT(0x7441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0035
        gbc.setState(0x16e3, 0x4c3d, 0x9280, 0xe516, 0xfe1d, 0x3917, 0x0, 0x0);
        gbc.writeMem(0x16e3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4c3d, gbc.sp());
        EXPECT(0x16e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0036
        gbc.setState(0x88e1, 0xf021, 0xd8f0, 0x2dee, 0xa599, 0x54f, 0x0, 0x1);
        gbc.writeMem(0x88e1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf021, gbc.sp());
        EXPECT(0x88e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88e1));
        EXPECT(0xd0, gbc.readMem(0x88e2));
        // CB D0 0037
        gbc.setState(0xe33b, 0xf5bb, 0xc8e0, 0xd1f, 0xc5b4, 0x52ba, 0x1, 0x1);
        gbc.writeMem(0xe33b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf5bb, gbc.sp());
        EXPECT(0xe33d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe33b));
        EXPECT(0xd0, gbc.readMem(0xe33c));
        // CB D0 0038
        gbc.setState(0x6a07, 0x10a3, 0x2760, 0xf007, 0x325c, 0x1fda, 0x0, 0x0);
        gbc.writeMem(0x6a07, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x10a3, gbc.sp());
        EXPECT(0x6a09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0039
        gbc.setState(0xddd9, 0x4ba6, 0xc260, 0xb9fb, 0x4005, 0xb511, 0x0, 0x0);
        gbc.writeMem(0xddd9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4ba6, gbc.sp());
        EXPECT(0xdddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddd9));
        EXPECT(0xd0, gbc.readMem(0xddda));
        // CB D0 003A
        gbc.setState(0x78e3, 0xc6f0, 0x2f30, 0x90fc, 0x56a1, 0xa4ce, 0x0, 0x1);
        gbc.writeMem(0x78e3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc6f0, gbc.sp());
        EXPECT(0x78e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 003B
        gbc.setState(0x5c1a, 0x2463, 0x1700, 0x3566, 0x74b5, 0x1e38, 0x1, 0x1);
        gbc.writeMem(0x5c1a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2463, gbc.sp());
        EXPECT(0x5c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 003C
        gbc.setState(0x2a6d, 0xf280, 0xa1a0, 0xfd93, 0xe10d, 0xc937, 0x1, 0x1);
        gbc.writeMem(0x2a6d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf280, gbc.sp());
        EXPECT(0x2a6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 003D
        gbc.setState(0x59d1, 0xefc9, 0x4d0, 0x98e5, 0xcfed, 0xb7c3, 0x1, 0x1);
        gbc.writeMem(0x59d1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xefc9, gbc.sp());
        EXPECT(0x59d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 003E
        gbc.setState(0x2b23, 0xae9e, 0x6670, 0xeb5d, 0xebff, 0x814c, 0x0, 0x1);
        gbc.writeMem(0x2b23, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xae9e, gbc.sp());
        EXPECT(0x2b25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 003F
        gbc.setState(0x452c, 0x90a5, 0x5870, 0x55eb, 0x119, 0x25fc, 0x1, 0x0);
        gbc.writeMem(0x452c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x90a5, gbc.sp());
        EXPECT(0x452e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0040
        gbc.setState(0x69b7, 0x467f, 0xafe0, 0x3ad, 0x58d7, 0x4f23, 0x1, 0x1);
        gbc.writeMem(0x69b7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x467f, gbc.sp());
        EXPECT(0x69b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0041
        gbc.setState(0x5c68, 0xdb44, 0x9ac0, 0x72c9, 0x1764, 0xb355, 0x1, 0x0);
        gbc.writeMem(0x5c68, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xdb44, gbc.sp());
        EXPECT(0x5c6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0042
        gbc.setState(0xb374, 0xab4, 0xc560, 0x5841, 0x3b4d, 0x4b4b, 0x0, 0x1);
        gbc.writeMem(0xb374, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xab4, gbc.sp());
        EXPECT(0xb376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb374));
        EXPECT(0xd0, gbc.readMem(0xb375));
        // CB D0 0043
        gbc.setState(0x76b2, 0x459d, 0xcac0, 0x3698, 0x9725, 0xaac6, 0x1, 0x0);
        gbc.writeMem(0x76b2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x459d, gbc.sp());
        EXPECT(0x76b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0044
        gbc.setState(0x7c4c, 0x5f20, 0x300, 0xb311, 0xc772, 0xa2ca, 0x1, 0x0);
        gbc.writeMem(0x7c4c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5f20, gbc.sp());
        EXPECT(0x7c4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0046
        gbc.setState(0x82e, 0xcd59, 0x2760, 0xa251, 0x64a8, 0x46f8, 0x0, 0x0);
        gbc.writeMem(0x82e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xcd59, gbc.sp());
        EXPECT(0x830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0047
        gbc.setState(0xa6a8, 0x19b8, 0xc770, 0x4d82, 0x20e3, 0x69cf, 0x0, 0x0);
        gbc.writeMem(0xa6a8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x19b8, gbc.sp());
        EXPECT(0xa6aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a8));
        EXPECT(0xd0, gbc.readMem(0xa6a9));
        // CB D0 0048
        gbc.setState(0x507, 0xd328, 0x7300, 0xb610, 0x93c8, 0x498f, 0x1, 0x1);
        gbc.writeMem(0x507, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd328, gbc.sp());
        EXPECT(0x509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0049
        gbc.setState(0x7643, 0x79d1, 0xbd0, 0x4d9f, 0x5f0b, 0xaa46, 0x0, 0x1);
        gbc.writeMem(0x7643, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x79d1, gbc.sp());
        EXPECT(0x7645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 004B
        gbc.setState(0x5ac, 0xb0e, 0x7100, 0x954, 0x9e06, 0xfd8a, 0x0, 0x1);
        gbc.writeMem(0x5ac, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb0e, gbc.sp());
        EXPECT(0x5ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 004C
        gbc.setState(0x57e, 0x104f, 0x2ce0, 0x3b8, 0x4ce9, 0x47ac, 0x0, 0x1);
        gbc.writeMem(0x57e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x104f, gbc.sp());
        EXPECT(0x580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 004D
        gbc.setState(0x5e41, 0xe333, 0x5180, 0x4b77, 0xe0a2, 0x4dba, 0x1, 0x0);
        gbc.writeMem(0x5e41, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe333, gbc.sp());
        EXPECT(0x5e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 004E
        gbc.setState(0xcb7f, 0x5ac, 0xe00, 0x77f9, 0xa80f, 0xe66a, 0x1, 0x0);
        gbc.writeMem(0xcb7f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5ac, gbc.sp());
        EXPECT(0xcb81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb7f));
        EXPECT(0xd0, gbc.readMem(0xcb80));
        // CB D0 0050
        gbc.setState(0x1a5d, 0x5bc8, 0xf580, 0x53a6, 0xb6c3, 0xfe50, 0x0, 0x1);
        gbc.writeMem(0x1a5d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5bc8, gbc.sp());
        EXPECT(0x1a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0051
        gbc.setState(0xd165, 0xbb53, 0x8e40, 0x68fc, 0xec90, 0x6de7, 0x1, 0x0);
        gbc.writeMem(0xd165, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbb53, gbc.sp());
        EXPECT(0xd167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd165));
        EXPECT(0xd0, gbc.readMem(0xd166));
        // CB D0 0052
        gbc.setState(0x765a, 0x3503, 0x2860, 0x2eaf, 0xac88, 0x5860, 0x0, 0x1);
        gbc.writeMem(0x765a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3503, gbc.sp());
        EXPECT(0x765c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0054
        gbc.setState(0xe5d4, 0x4f0, 0xb680, 0xe23f, 0x78ed, 0xcfe7, 0x1, 0x0);
        gbc.writeMem(0xe5d4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4f0, gbc.sp());
        EXPECT(0xe5d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d4));
        EXPECT(0xd0, gbc.readMem(0xe5d5));
        // CB D0 0055
        gbc.setState(0x5cd4, 0x2f47, 0xceb0, 0x1ee7, 0x85cd, 0xd23f, 0x0, 0x0);
        gbc.writeMem(0x5cd4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2f47, gbc.sp());
        EXPECT(0x5cd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0056
        gbc.setState(0xea2e, 0xe071, 0x3a70, 0x75cb, 0x1057, 0x993a, 0x1, 0x1);
        gbc.writeMem(0xea2e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe071, gbc.sp());
        EXPECT(0xea30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea2e));
        EXPECT(0xd0, gbc.readMem(0xea2f));
        // CB D0 0057
        gbc.setState(0xd61e, 0x792d, 0x14b0, 0x1a26, 0xcc27, 0xd5ee, 0x1, 0x0);
        gbc.writeMem(0xd61e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x792d, gbc.sp());
        EXPECT(0xd620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd61e));
        EXPECT(0xd0, gbc.readMem(0xd61f));
        // CB D0 0058
        gbc.setState(0x3df7, 0xc48a, 0xbcc0, 0x56b, 0x27e, 0xfb1a, 0x1, 0x0);
        gbc.writeMem(0x3df7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc48a, gbc.sp());
        EXPECT(0x3df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0059
        gbc.setState(0x3aaf, 0xe8ff, 0xb0e0, 0xaefe, 0x32f6, 0xf3f0, 0x0, 0x0);
        gbc.writeMem(0x3aaf, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe8ff, gbc.sp());
        EXPECT(0x3ab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 005A
        gbc.setState(0x1ee1, 0x342f, 0x94e0, 0x6730, 0xfa32, 0xf6fb, 0x0, 0x0);
        gbc.writeMem(0x1ee1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x342f, gbc.sp());
        EXPECT(0x1ee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 005B
        gbc.setState(0x4fd5, 0x3450, 0x9780, 0x18ae, 0x8352, 0xf654, 0x1, 0x1);
        gbc.writeMem(0x4fd5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3450, gbc.sp());
        EXPECT(0x4fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 005C
        gbc.setState(0x707e, 0xd892, 0xcd30, 0xb30, 0xe6de, 0x4b83, 0x0, 0x1);
        gbc.writeMem(0x707e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd892, gbc.sp());
        EXPECT(0x7080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 005D
        gbc.setState(0xeff4, 0xc229, 0x6350, 0x82e2, 0xab60, 0xbe52, 0x0, 0x0);
        gbc.writeMem(0xeff4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc229, gbc.sp());
        EXPECT(0xeff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeff4));
        EXPECT(0xd0, gbc.readMem(0xeff5));
        // CB D0 005E
        gbc.setState(0x30dd, 0xa5ef, 0xf60, 0x7935, 0xd361, 0x8306, 0x1, 0x0);
        gbc.writeMem(0x30dd, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa5ef, gbc.sp());
        EXPECT(0x30df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 005F
        gbc.setState(0x39fd, 0x8108, 0x93a0, 0xe3d1, 0x3d96, 0xad29, 0x1, 0x1);
        gbc.writeMem(0x39fd, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8108, gbc.sp());
        EXPECT(0x39ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0060
        gbc.setState(0x2cba, 0xe9e5, 0x87f0, 0x33be, 0xb8c0, 0xfb7f, 0x1, 0x1);
        gbc.writeMem(0x2cba, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe9e5, gbc.sp());
        EXPECT(0x2cbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0061
        gbc.setState(0xac47, 0x60e2, 0xa40, 0xd852, 0xef12, 0x7530, 0x1, 0x0);
        gbc.writeMem(0xac47, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x60e2, gbc.sp());
        EXPECT(0xac49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac47));
        EXPECT(0xd0, gbc.readMem(0xac48));
        // CB D0 0062
        gbc.setState(0x188f, 0x8261, 0x9d80, 0xd0c, 0x3640, 0x1901, 0x0, 0x0);
        gbc.writeMem(0x188f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8261, gbc.sp());
        EXPECT(0x1891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0063
        gbc.setState(0xcd4e, 0x2655, 0x5b80, 0x5326, 0x3ceb, 0x80bd, 0x0, 0x1);
        gbc.writeMem(0xcd4e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2655, gbc.sp());
        EXPECT(0xcd50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd4e));
        EXPECT(0xd0, gbc.readMem(0xcd4f));
        // CB D0 0064
        gbc.setState(0x7699, 0xee1a, 0xd500, 0xf699, 0x81c5, 0x7a89, 0x0, 0x0);
        gbc.writeMem(0x7699, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xee1a, gbc.sp());
        EXPECT(0x769b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0065
        gbc.setState(0x764a, 0x12f1, 0x17f0, 0x6810, 0xfc4a, 0xc439, 0x1, 0x0);
        gbc.writeMem(0x764a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x12f1, gbc.sp());
        EXPECT(0x764c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0066
        gbc.setState(0xc638, 0x9919, 0x8d0, 0x6562, 0x8651, 0xb732, 0x1, 0x0);
        gbc.writeMem(0xc638, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9919, gbc.sp());
        EXPECT(0xc63a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc638));
        EXPECT(0xd0, gbc.readMem(0xc639));
        // CB D0 0067
        gbc.setState(0x7381, 0x1ac4, 0x1cd0, 0xebd0, 0x5767, 0x4771, 0x1, 0x0);
        gbc.writeMem(0x7381, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1ac4, gbc.sp());
        EXPECT(0x7383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0068
        gbc.setState(0x5b1a, 0x4d5c, 0xb0c0, 0x8dbb, 0x48c3, 0x3bc0, 0x0, 0x1);
        gbc.writeMem(0x5b1a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4d5c, gbc.sp());
        EXPECT(0x5b1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0069
        gbc.setState(0xbc9d, 0xfc89, 0xe800, 0xaad0, 0xb7e0, 0x287, 0x0, 0x0);
        gbc.writeMem(0xbc9d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfc89, gbc.sp());
        EXPECT(0xbc9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc9d));
        EXPECT(0xd0, gbc.readMem(0xbc9e));
        // CB D0 006A
        gbc.setState(0x3237, 0x1c55, 0x4f00, 0x985a, 0x8e8d, 0xcb44, 0x1, 0x1);
        gbc.writeMem(0x3237, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1c55, gbc.sp());
        EXPECT(0x3239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 006B
        gbc.setState(0xba3d, 0x1bff, 0x3d70, 0xc5c3, 0x578a, 0xe238, 0x0, 0x0);
        gbc.writeMem(0xba3d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1bff, gbc.sp());
        EXPECT(0xba3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba3d));
        EXPECT(0xd0, gbc.readMem(0xba3e));
        // CB D0 006C
        gbc.setState(0xb444, 0x8860, 0xe70, 0xaf84, 0xdc75, 0x4dc5, 0x0, 0x1);
        gbc.writeMem(0xb444, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8860, gbc.sp());
        EXPECT(0xb446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb444));
        EXPECT(0xd0, gbc.readMem(0xb445));
        // CB D0 006D
        gbc.setState(0xc887, 0xab01, 0xdf00, 0x1559, 0x7174, 0x8a8b, 0x0, 0x1);
        gbc.writeMem(0xc887, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xab01, gbc.sp());
        EXPECT(0xc889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc887));
        EXPECT(0xd0, gbc.readMem(0xc888));
        // CB D0 006E
        gbc.setState(0x95eb, 0x22be, 0x9fd0, 0x98a0, 0xa087, 0xeda2, 0x0, 0x0);
        gbc.writeMem(0x95eb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x22be, gbc.sp());
        EXPECT(0x95ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95eb));
        EXPECT(0xd0, gbc.readMem(0x95ec));
        // CB D0 006F
        gbc.setState(0x4fcb, 0x9b8e, 0xf400, 0x31a2, 0xb81d, 0x2baf, 0x0, 0x0);
        gbc.writeMem(0x4fcb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9b8e, gbc.sp());
        EXPECT(0x4fcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0070
        gbc.setState(0x9e00, 0xf325, 0xf410, 0xb218, 0x444e, 0x2487, 0x1, 0x0);
        gbc.writeMem(0x9e00, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf325, gbc.sp());
        EXPECT(0x9e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e00));
        EXPECT(0xd0, gbc.readMem(0x9e01));
        // CB D0 0071
        gbc.setState(0x277, 0x4d4f, 0x60a0, 0xa9ae, 0xe51a, 0x7a41, 0x0, 0x1);
        gbc.writeMem(0x277, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4d4f, gbc.sp());
        EXPECT(0x279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0072
        gbc.setState(0xcbd7, 0xb42d, 0x67f0, 0x2a59, 0xc7a6, 0xddc4, 0x0, 0x0);
        gbc.writeMem(0xcbd7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb42d, gbc.sp());
        EXPECT(0xcbd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbd7));
        EXPECT(0xd0, gbc.readMem(0xcbd8));
        // CB D0 0074
        gbc.setState(0xd6cf, 0x4f33, 0xffa0, 0x3318, 0x916c, 0xfee5, 0x1, 0x1);
        gbc.writeMem(0xd6cf, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4f33, gbc.sp());
        EXPECT(0xd6d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6cf));
        EXPECT(0xd0, gbc.readMem(0xd6d0));
        // CB D0 0075
        gbc.setState(0xe294, 0xdb25, 0xe40, 0x7df5, 0x3e34, 0x22bb, 0x1, 0x0);
        gbc.writeMem(0xe294, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdb25, gbc.sp());
        EXPECT(0xe296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe294));
        EXPECT(0xd0, gbc.readMem(0xe295));
        // CB D0 0076
        gbc.setState(0x3335, 0x72f1, 0xd170, 0x1677, 0xc85c, 0xa766, 0x1, 0x1);
        gbc.writeMem(0x3335, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x72f1, gbc.sp());
        EXPECT(0x3337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0077
        gbc.setState(0x7342, 0xfdc4, 0x4d50, 0x7400, 0xd935, 0x3346, 0x1, 0x0);
        gbc.writeMem(0x7342, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xfdc4, gbc.sp());
        EXPECT(0x7344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0078
        gbc.setState(0x2dd8, 0x5176, 0xe4b0, 0xee13, 0xc2c7, 0x6ef5, 0x1, 0x1);
        gbc.writeMem(0x2dd8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5176, gbc.sp());
        EXPECT(0x2dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 007A
        gbc.setState(0x354b, 0x2d26, 0xa510, 0x6332, 0xe2ad, 0x5162, 0x1, 0x1);
        gbc.writeMem(0x354b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2d26, gbc.sp());
        EXPECT(0x354d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 007B
        gbc.setState(0xac15, 0x6844, 0x50, 0x212e, 0xdf1a, 0xbf41, 0x0, 0x0);
        gbc.writeMem(0xac15, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6844, gbc.sp());
        EXPECT(0xac17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac15));
        EXPECT(0xd0, gbc.readMem(0xac16));
        // CB D0 007C
        gbc.setState(0xb62a, 0x71e8, 0x41e0, 0x49e3, 0xd7c1, 0xb4c9, 0x1, 0x0);
        gbc.writeMem(0xb62a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x71e8, gbc.sp());
        EXPECT(0xb62c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb62a));
        EXPECT(0xd0, gbc.readMem(0xb62b));
        // CB D0 007D
        gbc.setState(0x65ca, 0xf10, 0x3c30, 0xfd44, 0xf33e, 0x11f2, 0x1, 0x0);
        gbc.writeMem(0x65ca, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf10, gbc.sp());
        EXPECT(0x65cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 007E
        gbc.setState(0x8b85, 0x2787, 0xdff0, 0x5954, 0x28f0, 0xf97a, 0x1, 0x1);
        gbc.writeMem(0x8b85, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2787, gbc.sp());
        EXPECT(0x8b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b85));
        EXPECT(0xd0, gbc.readMem(0x8b86));
        // CB D0 007F
        gbc.setState(0x46c7, 0x8d03, 0x7fd0, 0xb614, 0x2aaf, 0xab4d, 0x1, 0x1);
        gbc.writeMem(0x46c7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8d03, gbc.sp());
        EXPECT(0x46c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0080
        gbc.setState(0x745b, 0xd697, 0x3890, 0xb4c3, 0xcb12, 0x306a, 0x1, 0x0);
        gbc.writeMem(0x745b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd697, gbc.sp());
        EXPECT(0x745d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0081
        gbc.setState(0x66e7, 0x46ed, 0x9af0, 0x5782, 0xd69d, 0xb05e, 0x1, 0x1);
        gbc.writeMem(0x66e7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x46ed, gbc.sp());
        EXPECT(0x66e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0082
        gbc.setState(0x8830, 0xc91f, 0xd260, 0xbfe5, 0x8794, 0x4391, 0x0, 0x0);
        gbc.writeMem(0x8830, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc91f, gbc.sp());
        EXPECT(0x8832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8830));
        EXPECT(0xd0, gbc.readMem(0x8831));
        // CB D0 0083
        gbc.setState(0xe4c1, 0xaf3, 0xf990, 0xd989, 0x9c0d, 0x7226, 0x0, 0x1);
        gbc.writeMem(0xe4c1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xaf3, gbc.sp());
        EXPECT(0xe4c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c1));
        EXPECT(0xd0, gbc.readMem(0xe4c2));
        // CB D0 0084
        gbc.setState(0x2eeb, 0xc2bd, 0x3b60, 0xe5f6, 0x9e7a, 0x8551, 0x1, 0x0);
        gbc.writeMem(0x2eeb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc2bd, gbc.sp());
        EXPECT(0x2eed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0085
        gbc.setState(0x3c98, 0x1b9f, 0x1c40, 0x3463, 0xdbd4, 0x90bf, 0x0, 0x0);
        gbc.writeMem(0x3c98, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1b9f, gbc.sp());
        EXPECT(0x3c9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0086
        gbc.setState(0xcfa7, 0x98d7, 0xfd30, 0x45e5, 0xbc91, 0x937d, 0x0, 0x0);
        gbc.writeMem(0xcfa7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x98d7, gbc.sp());
        EXPECT(0xcfa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfa7));
        EXPECT(0xd0, gbc.readMem(0xcfa8));
        // CB D0 0087
        gbc.setState(0x63a1, 0x7c73, 0xada0, 0xfa08, 0x6c2c, 0x587, 0x1, 0x0);
        gbc.writeMem(0x63a1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7c73, gbc.sp());
        EXPECT(0x63a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0088
        gbc.setState(0x9bbe, 0x93f1, 0xee20, 0xc9d6, 0x4157, 0xb478, 0x1, 0x0);
        gbc.writeMem(0x9bbe, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x93f1, gbc.sp());
        EXPECT(0x9bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bbe));
        EXPECT(0xd0, gbc.readMem(0x9bbf));
        // CB D0 0089
        gbc.setState(0x9438, 0x4a68, 0xda10, 0x9a51, 0xd762, 0x88e8, 0x0, 0x0);
        gbc.writeMem(0x9438, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4a68, gbc.sp());
        EXPECT(0x943a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9438));
        EXPECT(0xd0, gbc.readMem(0x9439));
        // CB D0 008A
        gbc.setState(0x8b19, 0x93f6, 0xf040, 0x3e7, 0x186b, 0x53fb, 0x1, 0x1);
        gbc.writeMem(0x8b19, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x93f6, gbc.sp());
        EXPECT(0x8b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b19));
        EXPECT(0xd0, gbc.readMem(0x8b1a));
        // CB D0 008B
        gbc.setState(0x602c, 0x68a0, 0x5e30, 0x5819, 0x3487, 0x15b1, 0x0, 0x1);
        gbc.writeMem(0x602c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x68a0, gbc.sp());
        EXPECT(0x602e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 008C
        gbc.setState(0xbea4, 0xb0b8, 0xffe0, 0x3db2, 0xd626, 0x96b6, 0x1, 0x1);
        gbc.writeMem(0xbea4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb0b8, gbc.sp());
        EXPECT(0xbea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbea4));
        EXPECT(0xd0, gbc.readMem(0xbea5));
        // CB D0 008E
        gbc.setState(0x2029, 0x5dcc, 0xfd0, 0xe35f, 0xbc3b, 0x53d1, 0x0, 0x1);
        gbc.writeMem(0x2029, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5dcc, gbc.sp());
        EXPECT(0x202b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 008F
        gbc.setState(0x342e, 0x961e, 0x3690, 0xa39f, 0xa2bb, 0x8629, 0x1, 0x1);
        gbc.writeMem(0x342e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x961e, gbc.sp());
        EXPECT(0x3430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0091
        gbc.setState(0x850c, 0xc9ab, 0xbad0, 0x159c, 0x19bd, 0x2af4, 0x0, 0x1);
        gbc.writeMem(0x850c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc9ab, gbc.sp());
        EXPECT(0x850e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x850c));
        EXPECT(0xd0, gbc.readMem(0x850d));
        // CB D0 0092
        gbc.setState(0x2bf5, 0x6c62, 0xab00, 0x5aad, 0x6a74, 0x4c6b, 0x0, 0x1);
        gbc.writeMem(0x2bf5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6c62, gbc.sp());
        EXPECT(0x2bf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0093
        gbc.setState(0xd952, 0xc6c, 0x3c70, 0xcac7, 0xa2c9, 0x4933, 0x0, 0x0);
        gbc.writeMem(0xd952, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc6c, gbc.sp());
        EXPECT(0xd954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd952));
        EXPECT(0xd0, gbc.readMem(0xd953));
        // CB D0 0095
        gbc.setState(0x90e, 0xaf83, 0xd790, 0x695b, 0x7dd0, 0x65eb, 0x1, 0x1);
        gbc.writeMem(0x90e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xaf83, gbc.sp());
        EXPECT(0x910, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0096
        gbc.setState(0x7946, 0x6cf3, 0xc2d0, 0x10a9, 0x5f0a, 0x711, 0x1, 0x0);
        gbc.writeMem(0x7946, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6cf3, gbc.sp());
        EXPECT(0x7948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0098
        gbc.setState(0x6266, 0x9b3d, 0xa600, 0x6a9a, 0x31ba, 0xda8d, 0x1, 0x1);
        gbc.writeMem(0x6266, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9b3d, gbc.sp());
        EXPECT(0x6268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0099
        gbc.setState(0xb525, 0xdcd2, 0x1990, 0x99c1, 0x44c8, 0xe7bb, 0x0, 0x1);
        gbc.writeMem(0xb525, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdcd2, gbc.sp());
        EXPECT(0xb527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb525));
        EXPECT(0xd0, gbc.readMem(0xb526));
        // CB D0 009C
        gbc.setState(0x6550, 0xae8c, 0x7db0, 0x82e7, 0x990c, 0x521b, 0x1, 0x0);
        gbc.writeMem(0x6550, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xae8c, gbc.sp());
        EXPECT(0x6552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 009D
        gbc.setState(0x927a, 0xe71a, 0xf0d0, 0x8af1, 0x115a, 0x5d51, 0x0, 0x1);
        gbc.writeMem(0x927a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe71a, gbc.sp());
        EXPECT(0x927c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x927a));
        EXPECT(0xd0, gbc.readMem(0x927b));
        // CB D0 009E
        gbc.setState(0x5238, 0x7417, 0xade0, 0x2cb6, 0x7d72, 0xedb8, 0x1, 0x0);
        gbc.writeMem(0x5238, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7417, gbc.sp());
        EXPECT(0x523a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 009F
        gbc.setState(0x3d01, 0xfe27, 0x1a50, 0x4dad, 0x1738, 0xf89a, 0x0, 0x1);
        gbc.writeMem(0x3d01, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xfe27, gbc.sp());
        EXPECT(0x3d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00A0
        gbc.setState(0xe83, 0xc628, 0xb40, 0x3329, 0xec66, 0x35dc, 0x0, 0x0);
        gbc.writeMem(0xe83, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc628, gbc.sp());
        EXPECT(0xe85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 00A1
        gbc.setState(0x4efc, 0x7aca, 0x2af0, 0x2631, 0x76cb, 0x6363, 0x0, 0x0);
        gbc.writeMem(0x4efc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7aca, gbc.sp());
        EXPECT(0x4efe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00A2
        gbc.setState(0xa4aa, 0x61ba, 0x77a0, 0xe6a5, 0x8a91, 0x7888, 0x0, 0x1);
        gbc.writeMem(0xa4aa, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x61ba, gbc.sp());
        EXPECT(0xa4ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4aa));
        EXPECT(0xd0, gbc.readMem(0xa4ab));
        // CB D0 00A3
        gbc.setState(0x17f2, 0xacac, 0xb9a0, 0x5539, 0x2e99, 0xc89e, 0x0, 0x1);
        gbc.writeMem(0x17f2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xacac, gbc.sp());
        EXPECT(0x17f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 00A4
        gbc.setState(0x2dd1, 0xaed4, 0xb3c0, 0x5f90, 0x4e5, 0x356f, 0x0, 0x1);
        gbc.writeMem(0x2dd1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xaed4, gbc.sp());
        EXPECT(0x2dd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 00A5
        gbc.setState(0x4576, 0x75f, 0xdb40, 0xfdcd, 0x49b5, 0x1c77, 0x1, 0x0);
        gbc.writeMem(0x4576, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x75f, gbc.sp());
        EXPECT(0x4578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 00A6
        gbc.setState(0xeb3c, 0xbae5, 0x3390, 0xabbf, 0x1948, 0xa6a3, 0x0, 0x0);
        gbc.writeMem(0xeb3c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbae5, gbc.sp());
        EXPECT(0xeb3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb3c));
        EXPECT(0xd0, gbc.readMem(0xeb3d));
        // CB D0 00A7
        gbc.setState(0x1e2, 0x2ef3, 0x4d40, 0x4364, 0x76c9, 0x7df6, 0x1, 0x1);
        gbc.writeMem(0x1e2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2ef3, gbc.sp());
        EXPECT(0x1e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 00A8
        gbc.setState(0x45d8, 0x14ec, 0xf2f0, 0x5c5c, 0xab3e, 0x14a7, 0x0, 0x1);
        gbc.writeMem(0x45d8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x14ec, gbc.sp());
        EXPECT(0x45da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00A9
        gbc.setState(0x3ad6, 0x962b, 0xecd0, 0x4d08, 0x75da, 0x4a22, 0x0, 0x0);
        gbc.writeMem(0x3ad6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x962b, gbc.sp());
        EXPECT(0x3ad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00AA
        gbc.setState(0xa4c8, 0xb9bf, 0xaf0, 0xb544, 0x1d5c, 0x8dbd, 0x0, 0x0);
        gbc.writeMem(0xa4c8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb9bf, gbc.sp());
        EXPECT(0xa4ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c8));
        EXPECT(0xd0, gbc.readMem(0xa4c9));
        // CB D0 00AB
        gbc.setState(0x2921, 0xef6a, 0x9770, 0xd60c, 0x8c3, 0xfe4d, 0x0, 0x0);
        gbc.writeMem(0x2921, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xef6a, gbc.sp());
        EXPECT(0x2923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00AC
        gbc.setState(0x505e, 0xd7d, 0x7e0, 0x6668, 0x82a9, 0x8173, 0x1, 0x1);
        gbc.writeMem(0x505e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd7d, gbc.sp());
        EXPECT(0x5060, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 00AD
        gbc.setState(0x586e, 0x622d, 0xf4e0, 0xaadd, 0xf65, 0x932d, 0x0, 0x0);
        gbc.writeMem(0x586e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x622d, gbc.sp());
        EXPECT(0x5870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 00AE
        gbc.setState(0x5ab4, 0xce40, 0x280, 0x73b0, 0xc174, 0xc297, 0x1, 0x0);
        gbc.writeMem(0x5ab4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xce40, gbc.sp());
        EXPECT(0x5ab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 00AF
        gbc.setState(0xc581, 0xad31, 0xce20, 0x9605, 0xe810, 0xb8f2, 0x1, 0x0);
        gbc.writeMem(0xc581, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xad31, gbc.sp());
        EXPECT(0xc583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc581));
        EXPECT(0xd0, gbc.readMem(0xc582));
        // CB D0 00B0
        gbc.setState(0xba52, 0x756b, 0x9330, 0x12e6, 0x3dd6, 0xd61b, 0x0, 0x0);
        gbc.writeMem(0xba52, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x756b, gbc.sp());
        EXPECT(0xba54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba52));
        EXPECT(0xd0, gbc.readMem(0xba53));
        // CB D0 00B1
        gbc.setState(0x5c49, 0xa030, 0x9f90, 0x79be, 0xb4ff, 0x2c89, 0x0, 0x0);
        gbc.writeMem(0x5c49, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa030, gbc.sp());
        EXPECT(0x5c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00B2
        gbc.setState(0xbb9e, 0x8f99, 0xe260, 0xdf87, 0xc84a, 0x189e, 0x1, 0x0);
        gbc.writeMem(0xbb9e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8f99, gbc.sp());
        EXPECT(0xbba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb9e));
        EXPECT(0xd0, gbc.readMem(0xbb9f));
        // CB D0 00B3
        gbc.setState(0xecac, 0xf48f, 0xc660, 0xe0be, 0xb2bb, 0xcd0a, 0x1, 0x1);
        gbc.writeMem(0xecac, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf48f, gbc.sp());
        EXPECT(0xecae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecac));
        EXPECT(0xd0, gbc.readMem(0xecad));
        // CB D0 00B4
        gbc.setState(0xa710, 0xa92c, 0xe570, 0xbee0, 0x6f5d, 0x3007, 0x1, 0x1);
        gbc.writeMem(0xa710, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa92c, gbc.sp());
        EXPECT(0xa712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa710));
        EXPECT(0xd0, gbc.readMem(0xa711));
        // CB D0 00B5
        gbc.setState(0xa002, 0x1371, 0x1c10, 0x788b, 0x67a4, 0xb808, 0x0, 0x1);
        gbc.writeMem(0xa002, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1371, gbc.sp());
        EXPECT(0xa004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa002));
        EXPECT(0xd0, gbc.readMem(0xa003));
        // CB D0 00B6
        gbc.setState(0x8df5, 0x53a4, 0x480, 0x6ad, 0x38d2, 0x1ca3, 0x0, 0x1);
        gbc.writeMem(0x8df5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x53a4, gbc.sp());
        EXPECT(0x8df7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df5));
        EXPECT(0xd0, gbc.readMem(0x8df6));
        // CB D0 00B7
        gbc.setState(0xd08d, 0x2a60, 0xa210, 0x3984, 0x2dbc, 0x4e8a, 0x0, 0x0);
        gbc.writeMem(0xd08d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2a60, gbc.sp());
        EXPECT(0xd08f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd08d));
        EXPECT(0xd0, gbc.readMem(0xd08e));
        // CB D0 00B8
        gbc.setState(0xbc1a, 0x647b, 0xb2f0, 0x660d, 0x9b32, 0xa659, 0x0, 0x0);
        gbc.writeMem(0xbc1a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x647b, gbc.sp());
        EXPECT(0xbc1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc1a));
        EXPECT(0xd0, gbc.readMem(0xbc1b));
        // CB D0 00B9
        gbc.setState(0xc24e, 0x752d, 0x380, 0x8c69, 0x3787, 0x6446, 0x1, 0x1);
        gbc.writeMem(0xc24e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x752d, gbc.sp());
        EXPECT(0xc250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc24e));
        EXPECT(0xd0, gbc.readMem(0xc24f));
        // CB D0 00BA
        gbc.setState(0x4c31, 0x5ef9, 0x0, 0xa983, 0xfbd, 0x78da, 0x0, 0x1);
        gbc.writeMem(0x4c31, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5ef9, gbc.sp());
        EXPECT(0x4c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 00BB
        gbc.setState(0x45e1, 0x385a, 0xb760, 0xf78b, 0x9161, 0x59d0, 0x0, 0x0);
        gbc.writeMem(0x45e1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x385a, gbc.sp());
        EXPECT(0x45e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 00BC
        gbc.setState(0x1e5a, 0x54c8, 0x9a80, 0x2b7f, 0x8066, 0x21d0, 0x1, 0x0);
        gbc.writeMem(0x1e5a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x54c8, gbc.sp());
        EXPECT(0x1e5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 00BD
        gbc.setState(0x40aa, 0x8442, 0x160, 0x717b, 0xb8d5, 0x5c3b, 0x1, 0x1);
        gbc.writeMem(0x40aa, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8442, gbc.sp());
        EXPECT(0x40ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 00BE
        gbc.setState(0xe927, 0xaa8, 0xc7c0, 0xeecf, 0x5feb, 0x5f75, 0x0, 0x1);
        gbc.writeMem(0xe927, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xaa8, gbc.sp());
        EXPECT(0xe929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe927));
        EXPECT(0xd0, gbc.readMem(0xe928));
        // CB D0 00BF
        gbc.setState(0x5c28, 0x964b, 0x8590, 0x6308, 0xbe60, 0xa39d, 0x1, 0x1);
        gbc.writeMem(0x5c28, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x964b, gbc.sp());
        EXPECT(0x5c2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00C0
        gbc.setState(0x3d8, 0x8a7e, 0x3960, 0xe502, 0x3504, 0x9452, 0x0, 0x1);
        gbc.writeMem(0x3d8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8a7e, gbc.sp());
        EXPECT(0x3da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 00C1
        gbc.setState(0xedb2, 0x888b, 0x9110, 0xcb2c, 0x171f, 0xa618, 0x0, 0x0);
        gbc.writeMem(0xedb2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x888b, gbc.sp());
        EXPECT(0xedb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb2));
        EXPECT(0xd0, gbc.readMem(0xedb3));
        // CB D0 00C2
        gbc.setState(0xea18, 0xaeb0, 0x7990, 0xb51a, 0x37d0, 0xb937, 0x0, 0x0);
        gbc.writeMem(0xea18, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xaeb0, gbc.sp());
        EXPECT(0xea1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea18));
        EXPECT(0xd0, gbc.readMem(0xea19));
        // CB D0 00C3
        gbc.setState(0x802b, 0x5697, 0x9b00, 0x1366, 0x9a2a, 0x4a6c, 0x0, 0x1);
        gbc.writeMem(0x802b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5697, gbc.sp());
        EXPECT(0x802d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x802b));
        EXPECT(0xd0, gbc.readMem(0x802c));
        // CB D0 00C4
        gbc.setState(0xbdca, 0xdca, 0xf900, 0x1f20, 0x5da8, 0x24f5, 0x0, 0x0);
        gbc.writeMem(0xbdca, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xdca, gbc.sp());
        EXPECT(0xbdcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdca));
        EXPECT(0xd0, gbc.readMem(0xbdcb));
        // CB D0 00C5
        gbc.setState(0x7ae2, 0x8703, 0x6bb0, 0x4a0e, 0xe0a6, 0xd0ce, 0x0, 0x0);
        gbc.writeMem(0x7ae2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8703, gbc.sp());
        EXPECT(0x7ae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00C6
        gbc.setState(0xd6f7, 0xcc06, 0xb6c0, 0xfae, 0xf43, 0x88b, 0x0, 0x1);
        gbc.writeMem(0xd6f7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xcc06, gbc.sp());
        EXPECT(0xd6f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6f7));
        EXPECT(0xd0, gbc.readMem(0xd6f8));
        // CB D0 00C8
        gbc.setState(0xd48c, 0x7f5b, 0x35d0, 0x1a84, 0xe8eb, 0x9641, 0x1, 0x0);
        gbc.writeMem(0xd48c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7f5b, gbc.sp());
        EXPECT(0xd48e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd48c));
        EXPECT(0xd0, gbc.readMem(0xd48d));
        // CB D0 00C9
        gbc.setState(0x5b55, 0x4ebd, 0x8690, 0x71ca, 0x954c, 0xd292, 0x1, 0x0);
        gbc.writeMem(0x5b55, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4ebd, gbc.sp());
        EXPECT(0x5b57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00CA
        gbc.setState(0xe79d, 0x1687, 0x86f0, 0xa23b, 0x1ac9, 0x1c39, 0x1, 0x1);
        gbc.writeMem(0xe79d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1687, gbc.sp());
        EXPECT(0xe79f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe79d));
        EXPECT(0xd0, gbc.readMem(0xe79e));
        // CB D0 00CB
        gbc.setState(0x6f9d, 0x2ba1, 0xb360, 0xc9b3, 0x8f7a, 0x1c9b, 0x0, 0x0);
        gbc.writeMem(0x6f9d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2ba1, gbc.sp());
        EXPECT(0x6f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 00CC
        gbc.setState(0x3d51, 0x6bde, 0x7ab0, 0xb65a, 0xcc61, 0xb0f, 0x1, 0x1);
        gbc.writeMem(0x3d51, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6bde, gbc.sp());
        EXPECT(0x3d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00CD
        gbc.setState(0x6f82, 0xdbb, 0x46c0, 0x148e, 0x2744, 0x99de, 0x0, 0x0);
        gbc.writeMem(0x6f82, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xdbb, gbc.sp());
        EXPECT(0x6f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 00CE
        gbc.setState(0xcfef, 0x14ad, 0x65c0, 0x41a2, 0xd159, 0x9a8a, 0x0, 0x0);
        gbc.writeMem(0xcfef, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x14ad, gbc.sp());
        EXPECT(0xcff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfef));
        EXPECT(0xd0, gbc.readMem(0xcff0));
        // CB D0 00CF
        gbc.setState(0x8d9b, 0xad88, 0x4fa0, 0xd305, 0xaf8, 0xcfa9, 0x0, 0x0);
        gbc.writeMem(0x8d9b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xad88, gbc.sp());
        EXPECT(0x8d9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d9b));
        EXPECT(0xd0, gbc.readMem(0x8d9c));
        // CB D0 00D0
        gbc.setState(0xa19c, 0xcc35, 0xa570, 0xf449, 0x8203, 0x9fc5, 0x0, 0x0);
        gbc.writeMem(0xa19c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xcc35, gbc.sp());
        EXPECT(0xa19e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa19c));
        EXPECT(0xd0, gbc.readMem(0xa19d));
        // CB D0 00D1
        gbc.setState(0xbe57, 0x637, 0xb20, 0xec28, 0x96e3, 0x5067, 0x1, 0x0);
        gbc.writeMem(0xbe57, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x637, gbc.sp());
        EXPECT(0xbe59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe57));
        EXPECT(0xd0, gbc.readMem(0xbe58));
        // CB D0 00D2
        gbc.setState(0xad58, 0xfa8c, 0x19e0, 0x3867, 0x31bb, 0xd9a0, 0x1, 0x1);
        gbc.writeMem(0xad58, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfa8c, gbc.sp());
        EXPECT(0xad5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad58));
        EXPECT(0xd0, gbc.readMem(0xad59));
        // CB D0 00D3
        gbc.setState(0x1ac4, 0x510f, 0xa550, 0x4171, 0x78b4, 0xb31f, 0x0, 0x0);
        gbc.writeMem(0x1ac4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x510f, gbc.sp());
        EXPECT(0x1ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00D4
        gbc.setState(0xecf0, 0x2647, 0x5b90, 0xb0ee, 0x976f, 0xee2c, 0x1, 0x0);
        gbc.writeMem(0xecf0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2647, gbc.sp());
        EXPECT(0xecf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecf0));
        EXPECT(0xd0, gbc.readMem(0xecf1));
        // CB D0 00D5
        gbc.setState(0x9c7f, 0x7ab7, 0xdea0, 0x528a, 0x9748, 0x3097, 0x0, 0x1);
        gbc.writeMem(0x9c7f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7ab7, gbc.sp());
        EXPECT(0x9c81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c7f));
        EXPECT(0xd0, gbc.readMem(0x9c80));
        // CB D0 00D6
        gbc.setState(0x2ecf, 0x602a, 0xf520, 0x1447, 0xa256, 0x496d, 0x0, 0x1);
        gbc.writeMem(0x2ecf, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x602a, gbc.sp());
        EXPECT(0x2ed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 00D7
        gbc.setState(0xa3c7, 0x86f8, 0x6630, 0x33c5, 0x1d3a, 0x894, 0x0, 0x0);
        gbc.writeMem(0xa3c7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x86f8, gbc.sp());
        EXPECT(0xa3c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3c7));
        EXPECT(0xd0, gbc.readMem(0xa3c8));
        // CB D0 00D8
        gbc.setState(0x6428, 0x2e9, 0x9380, 0x27c0, 0x9329, 0x56fa, 0x1, 0x0);
        gbc.writeMem(0x6428, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2e9, gbc.sp());
        EXPECT(0x642a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 00DA
        gbc.setState(0xde13, 0x3bc2, 0xb0f0, 0x550, 0x6fd4, 0xd826, 0x0, 0x1);
        gbc.writeMem(0xde13, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3bc2, gbc.sp());
        EXPECT(0xde15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde13));
        EXPECT(0xd0, gbc.readMem(0xde14));
        // CB D0 00DB
        gbc.setState(0x1877, 0x33ed, 0x56e0, 0xccad, 0x3c9e, 0x6042, 0x1, 0x1);
        gbc.writeMem(0x1877, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x33ed, gbc.sp());
        EXPECT(0x1879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 00DC
        gbc.setState(0xc677, 0xdca7, 0xc570, 0xf47b, 0xf9b5, 0xac56, 0x1, 0x1);
        gbc.writeMem(0xc677, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdca7, gbc.sp());
        EXPECT(0xc679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc677));
        EXPECT(0xd0, gbc.readMem(0xc678));
        // CB D0 00DD
        gbc.setState(0x3868, 0x5b24, 0x1510, 0xd95d, 0x8b61, 0x58dc, 0x1, 0x1);
        gbc.writeMem(0x3868, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5b24, gbc.sp());
        EXPECT(0x386a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00DE
        gbc.setState(0x55cc, 0x5966, 0x88e0, 0x8f85, 0x9ad9, 0xefff, 0x1, 0x0);
        gbc.writeMem(0x55cc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5966, gbc.sp());
        EXPECT(0x55ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 00DF
        gbc.setState(0x3807, 0x1192, 0x99c0, 0x9cc9, 0x2590, 0x7e73, 0x1, 0x1);
        gbc.writeMem(0x3807, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1192, gbc.sp());
        EXPECT(0x3809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 00E1
        gbc.setState(0x183d, 0x5fa3, 0x5e30, 0x3a9e, 0xf87a, 0x51d1, 0x1, 0x1);
        gbc.writeMem(0x183d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5fa3, gbc.sp());
        EXPECT(0x183f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00E2
        gbc.setState(0x56f8, 0x94b5, 0x5980, 0x8c91, 0x1374, 0x133a, 0x1, 0x0);
        gbc.writeMem(0x56f8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x94b5, gbc.sp());
        EXPECT(0x56fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 00E3
        gbc.setState(0x200c, 0xc47, 0x5a10, 0xa12f, 0x1da0, 0x44ac, 0x1, 0x1);
        gbc.writeMem(0x200c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc47, gbc.sp());
        EXPECT(0x200e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00E4
        gbc.setState(0xb8ab, 0xaaf9, 0xc0, 0xbfc8, 0xd9b7, 0xacd7, 0x0, 0x1);
        gbc.writeMem(0xb8ab, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xaaf9, gbc.sp());
        EXPECT(0xb8ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ab));
        EXPECT(0xd0, gbc.readMem(0xb8ac));
        // CB D0 00E5
        gbc.setState(0xaf8d, 0xdc37, 0xe1e0, 0x829b, 0xb68e, 0x90fc, 0x1, 0x0);
        gbc.writeMem(0xaf8d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdc37, gbc.sp());
        EXPECT(0xaf8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf8d));
        EXPECT(0xd0, gbc.readMem(0xaf8e));
        // CB D0 00E6
        gbc.setState(0x3102, 0x5a36, 0x9ed0, 0xbaae, 0x74e1, 0x8f05, 0x0, 0x0);
        gbc.writeMem(0x3102, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5a36, gbc.sp());
        EXPECT(0x3104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00E7
        gbc.setState(0x59b0, 0xb50e, 0xeff0, 0x605f, 0x81f7, 0xfbff, 0x1, 0x1);
        gbc.writeMem(0x59b0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb50e, gbc.sp());
        EXPECT(0x59b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00E8
        gbc.setState(0x4e86, 0x592e, 0xa110, 0x8932, 0xa19a, 0xfb79, 0x1, 0x1);
        gbc.writeMem(0x4e86, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x592e, gbc.sp());
        EXPECT(0x4e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00E9
        gbc.setState(0x1c38, 0x4b81, 0xdbb0, 0xf58e, 0x59a3, 0x6b61, 0x1, 0x0);
        gbc.writeMem(0x1c38, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4b81, gbc.sp());
        EXPECT(0x1c3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00EA
        gbc.setState(0xc604, 0xf539, 0x37e0, 0x3a47, 0xa13d, 0x6dbd, 0x0, 0x0);
        gbc.writeMem(0xc604, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf539, gbc.sp());
        EXPECT(0xc606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc604));
        EXPECT(0xd0, gbc.readMem(0xc605));
        // CB D0 00EB
        gbc.setState(0x2ab0, 0x82cd, 0x39f0, 0x9da4, 0xeb9f, 0x1368, 0x1, 0x1);
        gbc.writeMem(0x2ab0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x82cd, gbc.sp());
        EXPECT(0x2ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00EC
        gbc.setState(0x3d8b, 0x14db, 0x2870, 0xece2, 0xde51, 0x3711, 0x0, 0x0);
        gbc.writeMem(0x3d8b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x14db, gbc.sp());
        EXPECT(0x3d8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00ED
        gbc.setState(0xcd74, 0x2177, 0x8bb0, 0xbb14, 0x1516, 0xce1e, 0x0, 0x1);
        gbc.writeMem(0xcd74, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2177, gbc.sp());
        EXPECT(0xcd76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd74));
        EXPECT(0xd0, gbc.readMem(0xcd75));
        // CB D0 00EE
        gbc.setState(0xc0ba, 0xb2f6, 0x1270, 0xa119, 0xcd6f, 0x8b5c, 0x1, 0x0);
        gbc.writeMem(0xc0ba, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb2f6, gbc.sp());
        EXPECT(0xc0bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ba));
        EXPECT(0xd0, gbc.readMem(0xc0bb));
        // CB D0 00EF
        gbc.setState(0x1a02, 0x9dfd, 0x6d30, 0x46e8, 0xac5d, 0x67e, 0x0, 0x1);
        gbc.writeMem(0x1a02, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9dfd, gbc.sp());
        EXPECT(0x1a04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00F0
        gbc.setState(0xa082, 0xb066, 0x6230, 0xe00, 0xf2df, 0x7e9c, 0x1, 0x1);
        gbc.writeMem(0xa082, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb066, gbc.sp());
        EXPECT(0xa084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa082));
        EXPECT(0xd0, gbc.readMem(0xa083));
        // CB D0 00F1
        gbc.setState(0x735b, 0x3d11, 0x7e70, 0x5445, 0x1611, 0x8ec9, 0x0, 0x0);
        gbc.writeMem(0x735b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3d11, gbc.sp());
        EXPECT(0x735d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00F2
        gbc.setState(0x8a13, 0x16e4, 0x3480, 0x6b0e, 0xcaf2, 0x8741, 0x0, 0x0);
        gbc.writeMem(0x8a13, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x16e4, gbc.sp());
        EXPECT(0x8a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a13));
        EXPECT(0xd0, gbc.readMem(0x8a14));
        // CB D0 00F4
        gbc.setState(0x9f57, 0xffc1, 0x8400, 0xdd4b, 0xe883, 0x1df3, 0x1, 0x1);
        gbc.writeMem(0x9f57, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xffc1, gbc.sp());
        EXPECT(0x9f59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f57));
        EXPECT(0xd0, gbc.readMem(0x9f58));
        // CB D0 00F5
        gbc.setState(0x331e, 0xfc00, 0xe9f0, 0xa4bd, 0xf9e7, 0xdc, 0x0, 0x1);
        gbc.writeMem(0x331e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfc00, gbc.sp());
        EXPECT(0x3320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00F6
        gbc.setState(0x84d7, 0x1de8, 0xaa00, 0x8b42, 0x577a, 0x4611, 0x0, 0x0);
        gbc.writeMem(0x84d7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1de8, gbc.sp());
        EXPECT(0x84d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84d7));
        EXPECT(0xd0, gbc.readMem(0x84d8));
        // CB D0 00F7
        gbc.setState(0x17a3, 0xf5f3, 0xb410, 0x56b2, 0x9493, 0xb790, 0x1, 0x0);
        gbc.writeMem(0x17a3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf5f3, gbc.sp());
        EXPECT(0x17a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00F8
        gbc.setState(0xd159, 0x39bf, 0xb770, 0x14cc, 0x161c, 0xc895, 0x0, 0x1);
        gbc.writeMem(0xd159, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x39bf, gbc.sp());
        EXPECT(0xd15b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd159));
        EXPECT(0xd0, gbc.readMem(0xd15a));
        // CB D0 00F9
        gbc.setState(0x6355, 0x5acd, 0xea90, 0xd05b, 0x4c85, 0xecfb, 0x0, 0x0);
        gbc.writeMem(0x6355, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5acd, gbc.sp());
        EXPECT(0x6357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 00FA
        gbc.setState(0xb863, 0x4009, 0x9ae0, 0xc3dd, 0xecc3, 0xcb1f, 0x1, 0x1);
        gbc.writeMem(0xb863, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4009, gbc.sp());
        EXPECT(0xb865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb863));
        EXPECT(0xd0, gbc.readMem(0xb864));
        // CB D0 00FC
        gbc.setState(0x3901, 0x9959, 0x6720, 0xfa16, 0xbdae, 0xa791, 0x1, 0x0);
        gbc.writeMem(0x3901, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9959, gbc.sp());
        EXPECT(0x3903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 00FD
        gbc.setState(0x9d67, 0xcf6a, 0xd370, 0xcd76, 0xb83, 0x6b99, 0x0, 0x1);
        gbc.writeMem(0x9d67, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcf6a, gbc.sp());
        EXPECT(0x9d69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d67));
        EXPECT(0xd0, gbc.readMem(0x9d68));
        // CB D0 00FE
        gbc.setState(0xe3e7, 0xe7a4, 0x100, 0x71f5, 0xd613, 0x214b, 0x0, 0x1);
        gbc.writeMem(0xe3e7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe7a4, gbc.sp());
        EXPECT(0xe3e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3e7));
        EXPECT(0xd0, gbc.readMem(0xe3e8));
        // CB D0 00FF
        gbc.setState(0x8c0d, 0x5a8f, 0xeb00, 0x105c, 0xd4ce, 0x7dd8, 0x1, 0x1);
        gbc.writeMem(0x8c0d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5a8f, gbc.sp());
        EXPECT(0x8c0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c0d));
        EXPECT(0xd0, gbc.readMem(0x8c0e));
        // CB D0 0100
        gbc.setState(0x5ae0, 0x5c15, 0x2940, 0xa094, 0xced7, 0x5f23, 0x1, 0x1);
        gbc.writeMem(0x5ae0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5c15, gbc.sp());
        EXPECT(0x5ae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0101
        gbc.setState(0xd69, 0x7c14, 0x1390, 0x9fd9, 0xa621, 0x2bb1, 0x0, 0x1);
        gbc.writeMem(0xd69, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7c14, gbc.sp());
        EXPECT(0xd6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0102
        gbc.setState(0x54bb, 0xe0da, 0x1460, 0x96e9, 0x13e9, 0xb80c, 0x0, 0x0);
        gbc.writeMem(0x54bb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe0da, gbc.sp());
        EXPECT(0x54bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0103
        gbc.setState(0xb26e, 0x76f8, 0x4240, 0x34a6, 0x4dbd, 0xd62b, 0x0, 0x1);
        gbc.writeMem(0xb26e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x76f8, gbc.sp());
        EXPECT(0xb270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb26e));
        EXPECT(0xd0, gbc.readMem(0xb26f));
        // CB D0 0104
        gbc.setState(0xd3ff, 0xba46, 0x6de0, 0xa122, 0x6cc3, 0x43ce, 0x1, 0x0);
        gbc.writeMem(0xd3ff, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xba46, gbc.sp());
        EXPECT(0xd401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ff));
        EXPECT(0xd0, gbc.readMem(0xd400));
        // CB D0 0105
        gbc.setState(0x994b, 0x6ec8, 0xe610, 0xdc84, 0xd531, 0xeca9, 0x0, 0x1);
        gbc.writeMem(0x994b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6ec8, gbc.sp());
        EXPECT(0x994d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x994b));
        EXPECT(0xd0, gbc.readMem(0x994c));
        // CB D0 0106
        gbc.setState(0x20c8, 0x682, 0x85b0, 0x1d18, 0xa9de, 0xdd66, 0x0, 0x0);
        gbc.writeMem(0x20c8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x682, gbc.sp());
        EXPECT(0x20ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0107
        gbc.setState(0xc15, 0x1c5f, 0x1a00, 0x962e, 0x48c6, 0xac5f, 0x1, 0x1);
        gbc.writeMem(0xc15, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1c5f, gbc.sp());
        EXPECT(0xc17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0108
        gbc.setState(0x2354, 0xd833, 0x9580, 0xe499, 0x5255, 0x3c8a, 0x0, 0x0);
        gbc.writeMem(0x2354, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd833, gbc.sp());
        EXPECT(0x2356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0109
        gbc.setState(0x9647, 0x9697, 0xeb30, 0xd9cb, 0xcfcc, 0xf483, 0x0, 0x0);
        gbc.writeMem(0x9647, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9697, gbc.sp());
        EXPECT(0x9649, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9647));
        EXPECT(0xd0, gbc.readMem(0x9648));
        // CB D0 010A
        gbc.setState(0x9560, 0xab80, 0xbd80, 0x5411, 0x26f5, 0x4, 0x1, 0x1);
        gbc.writeMem(0x9560, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xab80, gbc.sp());
        EXPECT(0x9562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9560));
        EXPECT(0xd0, gbc.readMem(0x9561));
        // CB D0 010B
        gbc.setState(0xafd6, 0x81d8, 0xfa50, 0xf61c, 0xd4a2, 0x4146, 0x0, 0x0);
        gbc.writeMem(0xafd6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x81d8, gbc.sp());
        EXPECT(0xafd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd6));
        EXPECT(0xd0, gbc.readMem(0xafd7));
        // CB D0 010C
        gbc.setState(0xc390, 0xf4ce, 0x6660, 0x1e6f, 0x5f48, 0x7ac2, 0x0, 0x0);
        gbc.writeMem(0xc390, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf4ce, gbc.sp());
        EXPECT(0xc392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc390));
        EXPECT(0xd0, gbc.readMem(0xc391));
        // CB D0 010D
        gbc.setState(0xbcb6, 0xee62, 0xe6d0, 0x612a, 0xd8a7, 0x66d9, 0x0, 0x1);
        gbc.writeMem(0xbcb6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xee62, gbc.sp());
        EXPECT(0xbcb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb6));
        EXPECT(0xd0, gbc.readMem(0xbcb7));
        // CB D0 010E
        gbc.setState(0xba30, 0xad72, 0xe4e0, 0x675c, 0xd143, 0x73d6, 0x1, 0x0);
        gbc.writeMem(0xba30, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xad72, gbc.sp());
        EXPECT(0xba32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba30));
        EXPECT(0xd0, gbc.readMem(0xba31));
        // CB D0 010F
        gbc.setState(0xcb83, 0x5b85, 0x8400, 0xd934, 0x2787, 0x3d29, 0x0, 0x0);
        gbc.writeMem(0xcb83, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5b85, gbc.sp());
        EXPECT(0xcb85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb83));
        EXPECT(0xd0, gbc.readMem(0xcb84));
        // CB D0 0110
        gbc.setState(0x42d, 0x2163, 0x7f0, 0xa0bd, 0xfb7d, 0xaff6, 0x0, 0x0);
        gbc.writeMem(0x42d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2163, gbc.sp());
        EXPECT(0x42f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0111
        gbc.setState(0x9723, 0x3997, 0xd890, 0x2da4, 0x400e, 0x6034, 0x1, 0x1);
        gbc.writeMem(0x9723, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3997, gbc.sp());
        EXPECT(0x9725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9723));
        EXPECT(0xd0, gbc.readMem(0x9724));
        // CB D0 0112
        gbc.setState(0x36ac, 0x2bca, 0xf3b0, 0xadc7, 0x67f, 0xda2a, 0x0, 0x0);
        gbc.writeMem(0x36ac, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2bca, gbc.sp());
        EXPECT(0x36ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0113
        gbc.setState(0x4a0f, 0xb63f, 0xc500, 0x995f, 0x6035, 0xa0d3, 0x0, 0x0);
        gbc.writeMem(0x4a0f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb63f, gbc.sp());
        EXPECT(0x4a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0114
        gbc.setState(0x1f8e, 0xb0b8, 0x64e0, 0x86a7, 0xa9aa, 0xe4a4, 0x0, 0x1);
        gbc.writeMem(0x1f8e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb0b8, gbc.sp());
        EXPECT(0x1f90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0115
        gbc.setState(0xcb4a, 0x6846, 0x2560, 0x933b, 0xd19c, 0x6f21, 0x1, 0x0);
        gbc.writeMem(0xcb4a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6846, gbc.sp());
        EXPECT(0xcb4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb4a));
        EXPECT(0xd0, gbc.readMem(0xcb4b));
        // CB D0 0116
        gbc.setState(0x2231, 0xa36, 0x1fc0, 0xda71, 0xe1dd, 0x4bea, 0x1, 0x1);
        gbc.writeMem(0x2231, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa36, gbc.sp());
        EXPECT(0x2233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0117
        gbc.setState(0x4b03, 0xb72a, 0x9520, 0x2871, 0x1d3c, 0xf408, 0x0, 0x1);
        gbc.writeMem(0x4b03, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb72a, gbc.sp());
        EXPECT(0x4b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0118
        gbc.setState(0x2729, 0x82c2, 0x2370, 0x54a5, 0xfd4d, 0xb8af, 0x1, 0x0);
        gbc.writeMem(0x2729, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x82c2, gbc.sp());
        EXPECT(0x272b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0119
        gbc.setState(0x500e, 0x953d, 0x3eb0, 0xd262, 0xac9b, 0x1231, 0x0, 0x0);
        gbc.writeMem(0x500e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x953d, gbc.sp());
        EXPECT(0x5010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 011A
        gbc.setState(0x5d2f, 0x61ab, 0xf5f0, 0xa408, 0x765e, 0x6319, 0x0, 0x1);
        gbc.writeMem(0x5d2f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x61ab, gbc.sp());
        EXPECT(0x5d31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 011B
        gbc.setState(0x7134, 0xa364, 0xef0, 0x7063, 0x1dc5, 0xf790, 0x0, 0x1);
        gbc.writeMem(0x7134, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa364, gbc.sp());
        EXPECT(0x7136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 011C
        gbc.setState(0xbab, 0x7185, 0xee00, 0x97be, 0xbe60, 0x7b9f, 0x1, 0x0);
        gbc.writeMem(0xbab, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7185, gbc.sp());
        EXPECT(0xbad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 011D
        gbc.setState(0x7d86, 0x6d7b, 0x63a0, 0x40d9, 0xd997, 0xb86d, 0x1, 0x0);
        gbc.writeMem(0x7d86, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6d7b, gbc.sp());
        EXPECT(0x7d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 011E
        gbc.setState(0xd2c3, 0x9b72, 0x27b0, 0x314a, 0xec78, 0x4886, 0x1, 0x1);
        gbc.writeMem(0xd2c3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9b72, gbc.sp());
        EXPECT(0xd2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c3));
        EXPECT(0xd0, gbc.readMem(0xd2c4));
        // CB D0 011F
        gbc.setState(0x626e, 0x16fa, 0x7e40, 0xc34e, 0x414d, 0x61b1, 0x0, 0x0);
        gbc.writeMem(0x626e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x16fa, gbc.sp());
        EXPECT(0x6270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0120
        gbc.setState(0x49d5, 0x90f0, 0x7ac0, 0x4630, 0x6799, 0x3b39, 0x0, 0x1);
        gbc.writeMem(0x49d5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x90f0, gbc.sp());
        EXPECT(0x49d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0121
        gbc.setState(0x232e, 0x35e2, 0x8340, 0xf209, 0xa5f, 0x882a, 0x1, 0x0);
        gbc.writeMem(0x232e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x35e2, gbc.sp());
        EXPECT(0x2330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0122
        gbc.setState(0x23ad, 0x9cba, 0xcb70, 0x6642, 0x8492, 0x3ae9, 0x0, 0x1);
        gbc.writeMem(0x23ad, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9cba, gbc.sp());
        EXPECT(0x23af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0123
        gbc.setState(0xcecf, 0x344, 0xfa00, 0x3d12, 0xe6d, 0x61df, 0x0, 0x0);
        gbc.writeMem(0xcecf, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x344, gbc.sp());
        EXPECT(0xced1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcecf));
        EXPECT(0xd0, gbc.readMem(0xced0));
        // CB D0 0124
        gbc.setState(0x8b69, 0x2938, 0x8c80, 0x112, 0xadba, 0xbde1, 0x1, 0x0);
        gbc.writeMem(0x8b69, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2938, gbc.sp());
        EXPECT(0x8b6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b69));
        EXPECT(0xd0, gbc.readMem(0x8b6a));
        // CB D0 0125
        gbc.setState(0xb943, 0x713, 0x2880, 0xbf71, 0x6e8, 0x7bce, 0x0, 0x1);
        gbc.writeMem(0xb943, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x713, gbc.sp());
        EXPECT(0xb945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb943));
        EXPECT(0xd0, gbc.readMem(0xb944));
        // CB D0 0126
        gbc.setState(0xd54, 0x6a4c, 0x8050, 0x9040, 0x4be7, 0x2c6a, 0x1, 0x1);
        gbc.writeMem(0xd54, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6a4c, gbc.sp());
        EXPECT(0xd56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0127
        gbc.setState(0xa533, 0x3676, 0x4110, 0xd5e2, 0x927b, 0x9b70, 0x1, 0x0);
        gbc.writeMem(0xa533, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3676, gbc.sp());
        EXPECT(0xa535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa533));
        EXPECT(0xd0, gbc.readMem(0xa534));
        // CB D0 0128
        gbc.setState(0xedc, 0xc1c8, 0x4b00, 0x50d3, 0xe7a3, 0xc5ee, 0x0, 0x1);
        gbc.writeMem(0xedc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc1c8, gbc.sp());
        EXPECT(0xede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 012A
        gbc.setState(0xb79d, 0x8cdb, 0xd150, 0x909c, 0xc24, 0x49db, 0x0, 0x1);
        gbc.writeMem(0xb79d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8cdb, gbc.sp());
        EXPECT(0xb79f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb79d));
        EXPECT(0xd0, gbc.readMem(0xb79e));
        // CB D0 012B
        gbc.setState(0x3234, 0xfcb5, 0x6860, 0xa718, 0xeeb1, 0xd3c4, 0x0, 0x1);
        gbc.writeMem(0x3234, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xfcb5, gbc.sp());
        EXPECT(0x3236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 012C
        gbc.setState(0xeb87, 0x66ac, 0x8b80, 0x321f, 0x6313, 0x804, 0x0, 0x0);
        gbc.writeMem(0xeb87, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x66ac, gbc.sp());
        EXPECT(0xeb89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb87));
        EXPECT(0xd0, gbc.readMem(0xeb88));
        // CB D0 012D
        gbc.setState(0x2327, 0xf4df, 0x5550, 0x81d4, 0x5bd9, 0x43a4, 0x1, 0x0);
        gbc.writeMem(0x2327, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf4df, gbc.sp());
        EXPECT(0x2329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 012E
        gbc.setState(0xc772, 0x3665, 0xe040, 0x4997, 0x6198, 0xca35, 0x1, 0x0);
        gbc.writeMem(0xc772, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3665, gbc.sp());
        EXPECT(0xc774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc772));
        EXPECT(0xd0, gbc.readMem(0xc773));
        // CB D0 012F
        gbc.setState(0xa317, 0xe0c, 0x640, 0x25f3, 0x57b3, 0xb687, 0x0, 0x1);
        gbc.writeMem(0xa317, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe0c, gbc.sp());
        EXPECT(0xa319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa317));
        EXPECT(0xd0, gbc.readMem(0xa318));
        // CB D0 0130
        gbc.setState(0x4edf, 0x9d1b, 0x5730, 0xf7ac, 0x2bce, 0xd130, 0x0, 0x1);
        gbc.writeMem(0x4edf, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9d1b, gbc.sp());
        EXPECT(0x4ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0131
        gbc.setState(0xaffd, 0x7fae, 0x3280, 0x28d9, 0x9197, 0xada3, 0x1, 0x0);
        gbc.writeMem(0xaffd, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7fae, gbc.sp());
        EXPECT(0xafff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaffd));
        EXPECT(0xd0, gbc.readMem(0xaffe));
        // CB D0 0132
        gbc.setState(0x389a, 0xf90e, 0x5220, 0x1a99, 0x1154, 0x6a58, 0x0, 0x0);
        gbc.writeMem(0x389a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf90e, gbc.sp());
        EXPECT(0x389c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0133
        gbc.setState(0x8468, 0xe582, 0x14a0, 0xdec5, 0xa59, 0x3ba7, 0x1, 0x1);
        gbc.writeMem(0x8468, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe582, gbc.sp());
        EXPECT(0x846a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8468));
        EXPECT(0xd0, gbc.readMem(0x8469));
        // CB D0 0134
        gbc.setState(0x8aa1, 0xa4cd, 0x28c0, 0x583, 0x5e27, 0x7af9, 0x0, 0x1);
        gbc.writeMem(0x8aa1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa4cd, gbc.sp());
        EXPECT(0x8aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aa1));
        EXPECT(0xd0, gbc.readMem(0x8aa2));
        // CB D0 0135
        gbc.setState(0xdb46, 0xd349, 0x95b0, 0xb853, 0x47ab, 0x5dff, 0x1, 0x1);
        gbc.writeMem(0xdb46, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd349, gbc.sp());
        EXPECT(0xdb48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb46));
        EXPECT(0xd0, gbc.readMem(0xdb47));
        // CB D0 0136
        gbc.setState(0xecc4, 0xddd7, 0xe490, 0x32c4, 0x18bd, 0x1d6d, 0x0, 0x0);
        gbc.writeMem(0xecc4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xddd7, gbc.sp());
        EXPECT(0xecc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecc4));
        EXPECT(0xd0, gbc.readMem(0xecc5));
        // CB D0 0137
        gbc.setState(0x4e1d, 0xe292, 0xe270, 0x3311, 0x220a, 0xd08, 0x0, 0x0);
        gbc.writeMem(0x4e1d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe292, gbc.sp());
        EXPECT(0x4e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0138
        gbc.setState(0xb52c, 0xbb92, 0xa2b0, 0xaa05, 0xbe36, 0xd96, 0x1, 0x1);
        gbc.writeMem(0xb52c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbb92, gbc.sp());
        EXPECT(0xb52e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb52c));
        EXPECT(0xd0, gbc.readMem(0xb52d));
        // CB D0 0139
        gbc.setState(0x94bc, 0x2580, 0x9080, 0xd7b5, 0x446, 0xdc14, 0x1, 0x1);
        gbc.writeMem(0x94bc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2580, gbc.sp());
        EXPECT(0x94be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94bc));
        EXPECT(0xd0, gbc.readMem(0x94bd));
        // CB D0 013A
        gbc.setState(0x34b8, 0xd64a, 0x36f0, 0x35a, 0x46df, 0x9e42, 0x0, 0x0);
        gbc.writeMem(0x34b8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd64a, gbc.sp());
        EXPECT(0x34ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 013B
        gbc.setState(0x2f4a, 0x4e0e, 0x2650, 0xa9d8, 0x6f78, 0x8672, 0x0, 0x1);
        gbc.writeMem(0x2f4a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4e0e, gbc.sp());
        EXPECT(0x2f4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 013C
        gbc.setState(0x8d5e, 0xe2f0, 0xbd40, 0x38d3, 0xc541, 0x87a6, 0x1, 0x1);
        gbc.writeMem(0x8d5e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe2f0, gbc.sp());
        EXPECT(0x8d60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d5e));
        EXPECT(0xd0, gbc.readMem(0x8d5f));
        // CB D0 013D
        gbc.setState(0xc6e5, 0xfe76, 0x49b0, 0xd4e3, 0xbf72, 0x75f8, 0x1, 0x1);
        gbc.writeMem(0xc6e5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfe76, gbc.sp());
        EXPECT(0xc6e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e5));
        EXPECT(0xd0, gbc.readMem(0xc6e6));
        // CB D0 013E
        gbc.setState(0x15dc, 0x8da7, 0x61e0, 0x589f, 0x920, 0xc860, 0x0, 0x1);
        gbc.writeMem(0x15dc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8da7, gbc.sp());
        EXPECT(0x15de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 013F
        gbc.setState(0xce9b, 0xe33, 0x3eb0, 0xf2a2, 0x85d, 0xa008, 0x0, 0x1);
        gbc.writeMem(0xce9b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe33, gbc.sp());
        EXPECT(0xce9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce9b));
        EXPECT(0xd0, gbc.readMem(0xce9c));
        // CB D0 0140
        gbc.setState(0x71cb, 0xb7eb, 0x3430, 0x4855, 0x8f71, 0x55ed, 0x1, 0x0);
        gbc.writeMem(0x71cb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb7eb, gbc.sp());
        EXPECT(0x71cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0141
        gbc.setState(0x4247, 0x800f, 0xd300, 0xf11e, 0x87a0, 0x269, 0x0, 0x1);
        gbc.writeMem(0x4247, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x800f, gbc.sp());
        EXPECT(0x4249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0142
        gbc.setState(0xb2de, 0xb256, 0x5870, 0xda79, 0xeadb, 0x57e9, 0x0, 0x0);
        gbc.writeMem(0xb2de, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb256, gbc.sp());
        EXPECT(0xb2e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2de));
        EXPECT(0xd0, gbc.readMem(0xb2df));
        // CB D0 0143
        gbc.setState(0xb74c, 0x91de, 0xb5c0, 0xefd3, 0x6067, 0xd063, 0x0, 0x1);
        gbc.writeMem(0xb74c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x91de, gbc.sp());
        EXPECT(0xb74e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb74c));
        EXPECT(0xd0, gbc.readMem(0xb74d));
        // CB D0 0144
        gbc.setState(0x75d6, 0xb656, 0x70f0, 0x3f20, 0xea22, 0x8146, 0x0, 0x1);
        gbc.writeMem(0x75d6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb656, gbc.sp());
        EXPECT(0x75d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0145
        gbc.setState(0x253e, 0x82ae, 0x7f90, 0xa40d, 0x77a1, 0xd8, 0x0, 0x1);
        gbc.writeMem(0x253e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x82ae, gbc.sp());
        EXPECT(0x2540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0146
        gbc.setState(0x4c34, 0x3c51, 0xf490, 0x944d, 0xbd58, 0x247b, 0x1, 0x0);
        gbc.writeMem(0x4c34, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3c51, gbc.sp());
        EXPECT(0x4c36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0147
        gbc.setState(0x8ae4, 0xf57a, 0xeb40, 0x3c15, 0x2dfa, 0x99af, 0x1, 0x1);
        gbc.writeMem(0x8ae4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf57a, gbc.sp());
        EXPECT(0x8ae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae4));
        EXPECT(0xd0, gbc.readMem(0x8ae5));
        // CB D0 0148
        gbc.setState(0xa82, 0xbdbd, 0x8910, 0xafb5, 0x1f86, 0x2f66, 0x1, 0x1);
        gbc.writeMem(0xa82, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbdbd, gbc.sp());
        EXPECT(0xa84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0149
        gbc.setState(0x6965, 0x1a07, 0x340, 0x93af, 0x1e73, 0xec42, 0x1, 0x1);
        gbc.writeMem(0x6965, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1a07, gbc.sp());
        EXPECT(0x6967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 014A
        gbc.setState(0x2672, 0x812b, 0xab90, 0x68fc, 0x151, 0x2f65, 0x0, 0x1);
        gbc.writeMem(0x2672, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x812b, gbc.sp());
        EXPECT(0x2674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 014B
        gbc.setState(0x9efd, 0xd230, 0x75d0, 0x81d1, 0x4674, 0x14d5, 0x1, 0x0);
        gbc.writeMem(0x9efd, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd230, gbc.sp());
        EXPECT(0x9eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9efd));
        EXPECT(0xd0, gbc.readMem(0x9efe));
        // CB D0 014C
        gbc.setState(0xc76, 0xddd7, 0x6890, 0x201, 0xf59a, 0x1b01, 0x1, 0x0);
        gbc.writeMem(0xc76, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xddd7, gbc.sp());
        EXPECT(0xc78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 014D
        gbc.setState(0x52a7, 0xb1e2, 0x5530, 0x9223, 0x322d, 0xc543, 0x1, 0x0);
        gbc.writeMem(0x52a7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb1e2, gbc.sp());
        EXPECT(0x52a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 014E
        gbc.setState(0xcc72, 0x3080, 0xbf70, 0x3187, 0x4883, 0xf5d, 0x1, 0x1);
        gbc.writeMem(0xcc72, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3080, gbc.sp());
        EXPECT(0xcc74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc72));
        EXPECT(0xd0, gbc.readMem(0xcc73));
        // CB D0 014F
        gbc.setState(0x3c95, 0x7794, 0x9170, 0xa569, 0xa113, 0xccfe, 0x1, 0x1);
        gbc.writeMem(0x3c95, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7794, gbc.sp());
        EXPECT(0x3c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0150
        gbc.setState(0x7e5d, 0x17f0, 0x6cc0, 0xb17d, 0x1a42, 0xd2d0, 0x0, 0x1);
        gbc.writeMem(0x7e5d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x17f0, gbc.sp());
        EXPECT(0x7e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0151
        gbc.setState(0x45fd, 0x4638, 0x7580, 0xd3fd, 0x81c6, 0x313a, 0x0, 0x1);
        gbc.writeMem(0x45fd, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4638, gbc.sp());
        EXPECT(0x45ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0152
        gbc.setState(0x2665, 0xf8e6, 0xa800, 0xde07, 0x2864, 0xb9b5, 0x0, 0x1);
        gbc.writeMem(0x2665, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf8e6, gbc.sp());
        EXPECT(0x2667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0153
        gbc.setState(0xdfff, 0x1d91, 0x1ac0, 0x963e, 0x1189, 0x8f7b, 0x1, 0x0);
        gbc.writeMem(0xdfff, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1d91, gbc.sp());
        EXPECT(0xe001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfff));
        EXPECT(0xd0, gbc.readMem(0xe000));
        // CB D0 0154
        gbc.setState(0x421, 0x620, 0x7920, 0xafe3, 0xf066, 0x568a, 0x0, 0x1);
        gbc.writeMem(0x421, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x620, gbc.sp());
        EXPECT(0x423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0155
        gbc.setState(0xdb2, 0x2eab, 0x9980, 0xe53, 0x5ae9, 0x8230, 0x0, 0x1);
        gbc.writeMem(0xdb2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2eab, gbc.sp());
        EXPECT(0xdb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0156
        gbc.setState(0x814e, 0x5c22, 0xd930, 0xaf5a, 0xf2a0, 0x5344, 0x0, 0x1);
        gbc.writeMem(0x814e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5c22, gbc.sp());
        EXPECT(0x8150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x814e));
        EXPECT(0xd0, gbc.readMem(0x814f));
        // CB D0 0157
        gbc.setState(0x3bd0, 0xf12, 0xdf20, 0xbb0b, 0x1318, 0x93c5, 0x1, 0x1);
        gbc.writeMem(0x3bd0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf12, gbc.sp());
        EXPECT(0x3bd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0158
        gbc.setState(0x55a6, 0xb6b6, 0x7f70, 0xf627, 0x638b, 0x7ad, 0x1, 0x1);
        gbc.writeMem(0x55a6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb6b6, gbc.sp());
        EXPECT(0x55a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0159
        gbc.setState(0xc1d7, 0xc59c, 0x9ee0, 0x17d4, 0x5ed3, 0x731d, 0x0, 0x0);
        gbc.writeMem(0xc1d7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc59c, gbc.sp());
        EXPECT(0xc1d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1d7));
        EXPECT(0xd0, gbc.readMem(0xc1d8));
        // CB D0 015A
        gbc.setState(0x1929, 0xa303, 0xfc80, 0x9408, 0xd5bd, 0x2dc1, 0x0, 0x1);
        gbc.writeMem(0x1929, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa303, gbc.sp());
        EXPECT(0x192b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 015B
        gbc.setState(0xe8e0, 0x883, 0x6890, 0xedcd, 0x9f32, 0x2d81, 0x1, 0x0);
        gbc.writeMem(0xe8e0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x883, gbc.sp());
        EXPECT(0xe8e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8e0));
        EXPECT(0xd0, gbc.readMem(0xe8e1));
        // CB D0 015C
        gbc.setState(0xa8d1, 0x9013, 0xf730, 0xfcbd, 0xea0, 0x9318, 0x1, 0x1);
        gbc.writeMem(0xa8d1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9013, gbc.sp());
        EXPECT(0xa8d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d1));
        EXPECT(0xd0, gbc.readMem(0xa8d2));
        // CB D0 015D
        gbc.setState(0xee94, 0x8263, 0x4f80, 0xb15, 0x4b5a, 0xc202, 0x1, 0x1);
        gbc.writeMem(0xee94, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8263, gbc.sp());
        EXPECT(0xee96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee94));
        EXPECT(0xd0, gbc.readMem(0xee95));
        // CB D0 015E
        gbc.setState(0x27c1, 0x37b0, 0xbc50, 0xb8dd, 0xe575, 0x5359, 0x1, 0x1);
        gbc.writeMem(0x27c1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x37b0, gbc.sp());
        EXPECT(0x27c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 015F
        gbc.setState(0x9b4b, 0x6fc6, 0xffb0, 0x3d0, 0xa6fb, 0xe865, 0x1, 0x0);
        gbc.writeMem(0x9b4b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6fc6, gbc.sp());
        EXPECT(0x9b4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b4b));
        EXPECT(0xd0, gbc.readMem(0x9b4c));
        // CB D0 0160
        gbc.setState(0xb7e7, 0x4463, 0x4ad0, 0xc739, 0x8a39, 0xf, 0x0, 0x1);
        gbc.writeMem(0xb7e7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4463, gbc.sp());
        EXPECT(0xb7e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e7));
        EXPECT(0xd0, gbc.readMem(0xb7e8));
        // CB D0 0161
        gbc.setState(0x6990, 0x5564, 0x1b20, 0x489e, 0x9756, 0xf79f, 0x0, 0x0);
        gbc.writeMem(0x6990, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5564, gbc.sp());
        EXPECT(0x6992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0162
        gbc.setState(0xccf, 0x265f, 0xcbc0, 0x5fab, 0x9c8, 0x8e3f, 0x1, 0x1);
        gbc.writeMem(0xccf, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x265f, gbc.sp());
        EXPECT(0xcd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0163
        gbc.setState(0x7b9b, 0x70b3, 0x7f50, 0x1d0e, 0xea40, 0x78ab, 0x0, 0x0);
        gbc.writeMem(0x7b9b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x70b3, gbc.sp());
        EXPECT(0x7b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0164
        gbc.setState(0x1b4a, 0x36e, 0x4f0, 0xce9a, 0x256f, 0xa87c, 0x1, 0x0);
        gbc.writeMem(0x1b4a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x36e, gbc.sp());
        EXPECT(0x1b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0165
        gbc.setState(0x1371, 0x1d2e, 0x6640, 0x528c, 0xb233, 0x4ac8, 0x1, 0x1);
        gbc.writeMem(0x1371, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1d2e, gbc.sp());
        EXPECT(0x1373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0166
        gbc.setState(0x350e, 0xb400, 0xc540, 0xe4a3, 0x78a6, 0x1af2, 0x0, 0x0);
        gbc.writeMem(0x350e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb400, gbc.sp());
        EXPECT(0x3510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0167
        gbc.setState(0xdd74, 0xda71, 0xce20, 0x6165, 0x46cc, 0xa7d7, 0x1, 0x0);
        gbc.writeMem(0xdd74, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xda71, gbc.sp());
        EXPECT(0xdd76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd74));
        EXPECT(0xd0, gbc.readMem(0xdd75));
        // CB D0 0168
        gbc.setState(0x978e, 0xd8d8, 0xb230, 0x752, 0x4808, 0x3b0a, 0x1, 0x0);
        gbc.writeMem(0x978e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd8d8, gbc.sp());
        EXPECT(0x9790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x978e));
        EXPECT(0xd0, gbc.readMem(0x978f));
        // CB D0 0169
        gbc.setState(0x3376, 0xa887, 0x2fa0, 0x5d55, 0x24a9, 0x31b3, 0x0, 0x1);
        gbc.writeMem(0x3376, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa887, gbc.sp());
        EXPECT(0x3378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 016A
        gbc.setState(0x21d6, 0x7fa0, 0x6af0, 0x795a, 0x6e44, 0x2d27, 0x0, 0x1);
        gbc.writeMem(0x21d6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7fa0, gbc.sp());
        EXPECT(0x21d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 016B
        gbc.setState(0x75a8, 0xbea1, 0xd50, 0x8b86, 0xbf5d, 0x63a5, 0x0, 0x0);
        gbc.writeMem(0x75a8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbea1, gbc.sp());
        EXPECT(0x75aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 016C
        gbc.setState(0xf000, 0x94e8, 0x8540, 0x34b, 0xe0fd, 0xa84, 0x0, 0x1);
        gbc.writeMem(0xf000, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x94e8, gbc.sp());
        EXPECT(0xf002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xf000));
        EXPECT(0xd0, gbc.readMem(0xf001));
        // CB D0 016D
        gbc.setState(0x4f8f, 0x7126, 0x3580, 0x5b65, 0x6b46, 0x371c, 0x0, 0x0);
        gbc.writeMem(0x4f8f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7126, gbc.sp());
        EXPECT(0x4f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 016E
        gbc.setState(0x2ff3, 0x8cea, 0x5c10, 0x648b, 0xd0d6, 0xaf0c, 0x1, 0x1);
        gbc.writeMem(0x2ff3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8cea, gbc.sp());
        EXPECT(0x2ff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 016F
        gbc.setState(0xcd57, 0xcece, 0xc080, 0xa9ba, 0x3c14, 0xb2a2, 0x1, 0x0);
        gbc.writeMem(0xcd57, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcece, gbc.sp());
        EXPECT(0xcd59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd57));
        EXPECT(0xd0, gbc.readMem(0xcd58));
        // CB D0 0170
        gbc.setState(0x13ea, 0xaff1, 0x3a0, 0xf3e4, 0xe30a, 0xd331, 0x0, 0x1);
        gbc.writeMem(0x13ea, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xaff1, gbc.sp());
        EXPECT(0x13ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0171
        gbc.setState(0x45f9, 0xf31d, 0x68c0, 0x4057, 0x2d68, 0x690c, 0x1, 0x1);
        gbc.writeMem(0x45f9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf31d, gbc.sp());
        EXPECT(0x45fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0172
        gbc.setState(0x9d26, 0xe0f9, 0xa220, 0xef6, 0x535f, 0x277a, 0x0, 0x0);
        gbc.writeMem(0x9d26, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe0f9, gbc.sp());
        EXPECT(0x9d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d26));
        EXPECT(0xd0, gbc.readMem(0x9d27));
        // CB D0 0173
        gbc.setState(0xd9dd, 0x3d73, 0xf4d0, 0xcea3, 0x2739, 0xad5e, 0x0, 0x1);
        gbc.writeMem(0xd9dd, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3d73, gbc.sp());
        EXPECT(0xd9df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9dd));
        EXPECT(0xd0, gbc.readMem(0xd9de));
        // CB D0 0174
        gbc.setState(0xc939, 0x2b8a, 0x2820, 0x3ad1, 0xb8ff, 0xb491, 0x0, 0x0);
        gbc.writeMem(0xc939, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2b8a, gbc.sp());
        EXPECT(0xc93b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc939));
        EXPECT(0xd0, gbc.readMem(0xc93a));
        // CB D0 0175
        gbc.setState(0x9eab, 0x89e4, 0xf2b0, 0xb2e6, 0x22fd, 0xfd5b, 0x1, 0x0);
        gbc.writeMem(0x9eab, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x89e4, gbc.sp());
        EXPECT(0x9ead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eab));
        EXPECT(0xd0, gbc.readMem(0x9eac));
        // CB D0 0176
        gbc.setState(0x604a, 0xbd15, 0xd8a0, 0xbbdc, 0x771e, 0x78, 0x1, 0x0);
        gbc.writeMem(0x604a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbd15, gbc.sp());
        EXPECT(0x604c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0177
        gbc.setState(0x259a, 0x161a, 0xde10, 0xf86d, 0x9d0b, 0x6350, 0x1, 0x1);
        gbc.writeMem(0x259a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x161a, gbc.sp());
        EXPECT(0x259c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0178
        gbc.setState(0xdb78, 0xca1e, 0x17b0, 0x9168, 0x984a, 0x8a9d, 0x0, 0x0);
        gbc.writeMem(0xdb78, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xca1e, gbc.sp());
        EXPECT(0xdb7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb78));
        EXPECT(0xd0, gbc.readMem(0xdb79));
        // CB D0 0179
        gbc.setState(0xef10, 0x6e3a, 0x6d60, 0x8db9, 0x29e5, 0x8447, 0x0, 0x1);
        gbc.writeMem(0xef10, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6e3a, gbc.sp());
        EXPECT(0xef12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef10));
        EXPECT(0xd0, gbc.readMem(0xef11));
        // CB D0 017A
        gbc.setState(0x3604, 0x2175, 0x8390, 0x37c0, 0xe3f9, 0x7d92, 0x0, 0x0);
        gbc.writeMem(0x3604, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2175, gbc.sp());
        EXPECT(0x3606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 017C
        gbc.setState(0x9b67, 0xc3e7, 0x78c0, 0xd16b, 0xb2dc, 0x35af, 0x0, 0x0);
        gbc.writeMem(0x9b67, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc3e7, gbc.sp());
        EXPECT(0x9b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b67));
        EXPECT(0xd0, gbc.readMem(0x9b68));
        // CB D0 017D
        gbc.setState(0xcd2b, 0x87bd, 0xfb0, 0x5b99, 0xdaee, 0xbbfb, 0x1, 0x0);
        gbc.writeMem(0xcd2b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x87bd, gbc.sp());
        EXPECT(0xcd2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd2b));
        EXPECT(0xd0, gbc.readMem(0xcd2c));
        // CB D0 017E
        gbc.setState(0xd266, 0xc5b7, 0xb990, 0x5605, 0xe77c, 0x534a, 0x0, 0x0);
        gbc.writeMem(0xd266, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc5b7, gbc.sp());
        EXPECT(0xd268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd266));
        EXPECT(0xd0, gbc.readMem(0xd267));
        // CB D0 017F
        gbc.setState(0xba05, 0xa5ca, 0x1b80, 0xaba3, 0xec5a, 0xb432, 0x1, 0x1);
        gbc.writeMem(0xba05, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa5ca, gbc.sp());
        EXPECT(0xba07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba05));
        EXPECT(0xd0, gbc.readMem(0xba06));
        // CB D0 0180
        gbc.setState(0x82cf, 0x73c1, 0x9040, 0xbec3, 0x2646, 0xde3e, 0x0, 0x0);
        gbc.writeMem(0x82cf, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x73c1, gbc.sp());
        EXPECT(0x82d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82cf));
        EXPECT(0xd0, gbc.readMem(0x82d0));
        // CB D0 0181
        gbc.setState(0x7b70, 0x2ea9, 0x1870, 0x2ba2, 0xf8db, 0xec3a, 0x0, 0x1);
        gbc.writeMem(0x7b70, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2ea9, gbc.sp());
        EXPECT(0x7b72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0182
        gbc.setState(0xb1e5, 0x32ce, 0x6f00, 0xd234, 0x16f2, 0x3f42, 0x0, 0x0);
        gbc.writeMem(0xb1e5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x32ce, gbc.sp());
        EXPECT(0xb1e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1e5));
        EXPECT(0xd0, gbc.readMem(0xb1e6));
        // CB D0 0184
        gbc.setState(0xd6c4, 0x90d4, 0xde40, 0x1af7, 0x8e05, 0x6b28, 0x0, 0x0);
        gbc.writeMem(0xd6c4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x90d4, gbc.sp());
        EXPECT(0xd6c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6c4));
        EXPECT(0xd0, gbc.readMem(0xd6c5));
        // CB D0 0185
        gbc.setState(0xacdc, 0x5cc3, 0xe580, 0x7d3e, 0x1df8, 0x1b7, 0x0, 0x1);
        gbc.writeMem(0xacdc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5cc3, gbc.sp());
        EXPECT(0xacde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacdc));
        EXPECT(0xd0, gbc.readMem(0xacdd));
        // CB D0 0186
        gbc.setState(0x317d, 0x1435, 0x5d20, 0x521f, 0x3931, 0xd669, 0x0, 0x1);
        gbc.writeMem(0x317d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1435, gbc.sp());
        EXPECT(0x317f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0187
        gbc.setState(0xa02d, 0xe54, 0xed60, 0xb225, 0xdfa5, 0x4459, 0x0, 0x0);
        gbc.writeMem(0xa02d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe54, gbc.sp());
        EXPECT(0xa02f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa02d));
        EXPECT(0xd0, gbc.readMem(0xa02e));
        // CB D0 0188
        gbc.setState(0x80e4, 0xce43, 0xeb30, 0x532a, 0x6413, 0x2b31, 0x0, 0x1);
        gbc.writeMem(0x80e4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xce43, gbc.sp());
        EXPECT(0x80e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e4));
        EXPECT(0xd0, gbc.readMem(0x80e5));
        // CB D0 0189
        gbc.setState(0xda96, 0x14c9, 0xbe90, 0xc8f1, 0xfc12, 0xebd8, 0x1, 0x1);
        gbc.writeMem(0xda96, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x14c9, gbc.sp());
        EXPECT(0xda98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda96));
        EXPECT(0xd0, gbc.readMem(0xda97));
        // CB D0 018A
        gbc.setState(0x6092, 0xc9d6, 0xb5a0, 0xb726, 0xb97c, 0x3fcb, 0x1, 0x0);
        gbc.writeMem(0x6092, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc9d6, gbc.sp());
        EXPECT(0x6094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 018B
        gbc.setState(0x597f, 0xee10, 0xb0e0, 0x47d9, 0x95e0, 0x23eb, 0x1, 0x0);
        gbc.writeMem(0x597f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xee10, gbc.sp());
        EXPECT(0x5981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 018C
        gbc.setState(0xb7c0, 0xa1a5, 0xdc30, 0x8290, 0x1ac8, 0x6427, 0x0, 0x0);
        gbc.writeMem(0xb7c0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa1a5, gbc.sp());
        EXPECT(0xb7c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7c0));
        EXPECT(0xd0, gbc.readMem(0xb7c1));
        // CB D0 018E
        gbc.setState(0x1aff, 0xf0f2, 0x59b0, 0xd9ad, 0x51bd, 0x460e, 0x1, 0x0);
        gbc.writeMem(0x1aff, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf0f2, gbc.sp());
        EXPECT(0x1b01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 018F
        gbc.setState(0x391e, 0x3e78, 0xb1f0, 0xa33c, 0x1315, 0xefe5, 0x0, 0x1);
        gbc.writeMem(0x391e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3e78, gbc.sp());
        EXPECT(0x3920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0190
        gbc.setState(0x6c37, 0x35de, 0x7b20, 0xe2f6, 0x8d9f, 0xa157, 0x0, 0x1);
        gbc.writeMem(0x6c37, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x35de, gbc.sp());
        EXPECT(0x6c39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0191
        gbc.setState(0x9a42, 0xd7f8, 0xdfe0, 0x5dcb, 0x2b2b, 0x9d0e, 0x1, 0x0);
        gbc.writeMem(0x9a42, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd7f8, gbc.sp());
        EXPECT(0x9a44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a42));
        EXPECT(0xd0, gbc.readMem(0x9a43));
        // CB D0 0192
        gbc.setState(0x4740, 0x611, 0x4870, 0x48a8, 0xd273, 0x449, 0x0, 0x1);
        gbc.writeMem(0x4740, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x611, gbc.sp());
        EXPECT(0x4742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0193
        gbc.setState(0x64ae, 0xa992, 0xa590, 0x1d03, 0x914c, 0xb6e3, 0x0, 0x0);
        gbc.writeMem(0x64ae, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa992, gbc.sp());
        EXPECT(0x64b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0194
        gbc.setState(0x2b05, 0xa240, 0x3bd0, 0x2b8c, 0x7890, 0x66c0, 0x1, 0x1);
        gbc.writeMem(0x2b05, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa240, gbc.sp());
        EXPECT(0x2b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0195
        gbc.setState(0xf0c, 0x2944, 0xd3a0, 0xd34d, 0xd48f, 0xe809, 0x1, 0x1);
        gbc.writeMem(0xf0c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2944, gbc.sp());
        EXPECT(0xf0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0196
        gbc.setState(0x8e03, 0x78c7, 0x3520, 0x7a0b, 0xdc34, 0xd632, 0x1, 0x0);
        gbc.writeMem(0x8e03, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x78c7, gbc.sp());
        EXPECT(0x8e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e03));
        EXPECT(0xd0, gbc.readMem(0x8e04));
        // CB D0 0197
        gbc.setState(0x427b, 0x3afa, 0x3220, 0x9d92, 0xd3be, 0x2b8c, 0x1, 0x0);
        gbc.writeMem(0x427b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3afa, gbc.sp());
        EXPECT(0x427d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0198
        gbc.setState(0x1d20, 0xefc6, 0x86e0, 0x835b, 0x66d7, 0xc127, 0x1, 0x0);
        gbc.writeMem(0x1d20, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xefc6, gbc.sp());
        EXPECT(0x1d22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0199
        gbc.setState(0x5b69, 0x246a, 0xe4f0, 0x9275, 0xb34b, 0xbbf6, 0x0, 0x0);
        gbc.writeMem(0x5b69, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x246a, gbc.sp());
        EXPECT(0x5b6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 019A
        gbc.setState(0x5cee, 0x24a5, 0xffb0, 0x5cab, 0x5f48, 0xf552, 0x0, 0x1);
        gbc.writeMem(0x5cee, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x24a5, gbc.sp());
        EXPECT(0x5cf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 019B
        gbc.setState(0x7eaf, 0xe835, 0x5cf0, 0x7f6d, 0xa740, 0x2fa6, 0x1, 0x0);
        gbc.writeMem(0x7eaf, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe835, gbc.sp());
        EXPECT(0x7eb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 019C
        gbc.setState(0xc059, 0xfba, 0x9b00, 0xc6e4, 0xb862, 0x3b76, 0x0, 0x1);
        gbc.writeMem(0xc059, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfba, gbc.sp());
        EXPECT(0xc05b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc059));
        EXPECT(0xd0, gbc.readMem(0xc05a));
        // CB D0 019D
        gbc.setState(0xa297, 0x2261, 0x1e0, 0xd715, 0x7e79, 0xc499, 0x0, 0x1);
        gbc.writeMem(0xa297, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2261, gbc.sp());
        EXPECT(0xa299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa297));
        EXPECT(0xd0, gbc.readMem(0xa298));
        // CB D0 019E
        gbc.setState(0x7d8e, 0x7766, 0x7d50, 0x3f77, 0x82c8, 0x7d06, 0x0, 0x0);
        gbc.writeMem(0x7d8e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7766, gbc.sp());
        EXPECT(0x7d90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 019F
        gbc.setState(0x1c14, 0xefaa, 0xd890, 0xf943, 0x5c29, 0xc4e9, 0x1, 0x1);
        gbc.writeMem(0x1c14, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xefaa, gbc.sp());
        EXPECT(0x1c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01A0
        gbc.setState(0xbc83, 0xd9c1, 0xfb10, 0x119c, 0x5869, 0x65f3, 0x1, 0x0);
        gbc.writeMem(0xbc83, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd9c1, gbc.sp());
        EXPECT(0xbc85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc83));
        EXPECT(0xd0, gbc.readMem(0xbc84));
        // CB D0 01A1
        gbc.setState(0x96dd, 0xd1f3, 0xe4c0, 0x4dce, 0x6b9c, 0xdace, 0x0, 0x0);
        gbc.writeMem(0x96dd, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd1f3, gbc.sp());
        EXPECT(0x96df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96dd));
        EXPECT(0xd0, gbc.readMem(0x96de));
        // CB D0 01A2
        gbc.setState(0xe2ea, 0xab02, 0xc690, 0x25f5, 0x7af4, 0x658d, 0x0, 0x0);
        gbc.writeMem(0xe2ea, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xab02, gbc.sp());
        EXPECT(0xe2ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ea));
        EXPECT(0xd0, gbc.readMem(0xe2eb));
        // CB D0 01A3
        gbc.setState(0x7348, 0x30fc, 0x9cc0, 0x1d78, 0x4611, 0xfc74, 0x1, 0x1);
        gbc.writeMem(0x7348, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x30fc, gbc.sp());
        EXPECT(0x734a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 01A5
        gbc.setState(0x6a08, 0xf46c, 0x6a60, 0xc0a9, 0x152f, 0x3d51, 0x1, 0x1);
        gbc.writeMem(0x6a08, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf46c, gbc.sp());
        EXPECT(0x6a0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 01A6
        gbc.setState(0x577d, 0x9383, 0xa860, 0xdcf1, 0xbfc, 0xb425, 0x1, 0x0);
        gbc.writeMem(0x577d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9383, gbc.sp());
        EXPECT(0x577f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 01A8
        gbc.setState(0x8344, 0x829a, 0x2aa0, 0x5d2, 0x27dc, 0x68a5, 0x0, 0x0);
        gbc.writeMem(0x8344, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x829a, gbc.sp());
        EXPECT(0x8346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8344));
        EXPECT(0xd0, gbc.readMem(0x8345));
        // CB D0 01A9
        gbc.setState(0xede2, 0x9fbd, 0x5aa0, 0x5a9a, 0xe25d, 0x7b0f, 0x0, 0x0);
        gbc.writeMem(0xede2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9fbd, gbc.sp());
        EXPECT(0xede4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xede2));
        EXPECT(0xd0, gbc.readMem(0xede3));
        // CB D0 01AA
        gbc.setState(0x3f52, 0x9408, 0xdb60, 0xf6e5, 0x1309, 0x8351, 0x1, 0x0);
        gbc.writeMem(0x3f52, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9408, gbc.sp());
        EXPECT(0x3f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 01AB
        gbc.setState(0x31c6, 0xdaa9, 0x86c0, 0x2e67, 0x6666, 0xc5d7, 0x0, 0x1);
        gbc.writeMem(0x31c6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xdaa9, gbc.sp());
        EXPECT(0x31c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 01AC
        gbc.setState(0xcbe2, 0xc31f, 0xa40, 0x42f1, 0xc539, 0x8e84, 0x1, 0x0);
        gbc.writeMem(0xcbe2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc31f, gbc.sp());
        EXPECT(0xcbe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbe2));
        EXPECT(0xd0, gbc.readMem(0xcbe3));
        // CB D0 01AD
        gbc.setState(0xa37f, 0x593d, 0x2960, 0xa20b, 0x316b, 0x49c0, 0x0, 0x1);
        gbc.writeMem(0xa37f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x593d, gbc.sp());
        EXPECT(0xa381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa37f));
        EXPECT(0xd0, gbc.readMem(0xa380));
        // CB D0 01AE
        gbc.setState(0x2a61, 0x3a0e, 0x1650, 0x24ef, 0xd147, 0x31ac, 0x1, 0x1);
        gbc.writeMem(0x2a61, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3a0e, gbc.sp());
        EXPECT(0x2a63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01AF
        gbc.setState(0xeeed, 0x8849, 0xe270, 0x393c, 0x89d, 0xad19, 0x0, 0x1);
        gbc.writeMem(0xeeed, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8849, gbc.sp());
        EXPECT(0xeeef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeed));
        EXPECT(0xd0, gbc.readMem(0xeeee));
        // CB D0 01B0
        gbc.setState(0x78fb, 0xc6ad, 0xa2c0, 0xf04c, 0xfa90, 0x71b9, 0x0, 0x1);
        gbc.writeMem(0x78fb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc6ad, gbc.sp());
        EXPECT(0x78fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 01B1
        gbc.setState(0xd02a, 0xbb81, 0xf080, 0x54f1, 0x4941, 0xdbc2, 0x0, 0x1);
        gbc.writeMem(0xd02a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xbb81, gbc.sp());
        EXPECT(0xd02c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd02a));
        EXPECT(0xd0, gbc.readMem(0xd02b));
        // CB D0 01B2
        gbc.setState(0x719, 0xe71b, 0x6450, 0xb773, 0x6943, 0xb134, 0x1, 0x0);
        gbc.writeMem(0x719, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe71b, gbc.sp());
        EXPECT(0x71b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01B3
        gbc.setState(0xb14d, 0x4d23, 0xf830, 0x5e28, 0xfad2, 0xa11b, 0x0, 0x1);
        gbc.writeMem(0xb14d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4d23, gbc.sp());
        EXPECT(0xb14f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb14d));
        EXPECT(0xd0, gbc.readMem(0xb14e));
        // CB D0 01B4
        gbc.setState(0xbc4c, 0xb2a2, 0xd290, 0x186c, 0xf801, 0x50de, 0x0, 0x0);
        gbc.writeMem(0xbc4c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb2a2, gbc.sp());
        EXPECT(0xbc4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc4c));
        EXPECT(0xd0, gbc.readMem(0xbc4d));
        // CB D0 01B5
        gbc.setState(0x76f5, 0x83c2, 0xd790, 0x398e, 0x769a, 0xe4ad, 0x0, 0x0);
        gbc.writeMem(0x76f5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x83c2, gbc.sp());
        EXPECT(0x76f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01B6
        gbc.setState(0x8fc7, 0xbdbb, 0x9e80, 0xfbb0, 0xa12c, 0xd1d9, 0x0, 0x1);
        gbc.writeMem(0x8fc7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbdbb, gbc.sp());
        EXPECT(0x8fc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fc7));
        EXPECT(0xd0, gbc.readMem(0x8fc8));
        // CB D0 01B7
        gbc.setState(0x8ac4, 0x6e74, 0xb5a0, 0x29d7, 0xd1aa, 0x891e, 0x0, 0x0);
        gbc.writeMem(0x8ac4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6e74, gbc.sp());
        EXPECT(0x8ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac4));
        EXPECT(0xd0, gbc.readMem(0x8ac5));
        // CB D0 01B8
        gbc.setState(0xa33c, 0xe8d3, 0xc40, 0x8bfc, 0x560a, 0x8061, 0x0, 0x1);
        gbc.writeMem(0xa33c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe8d3, gbc.sp());
        EXPECT(0xa33e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa33c));
        EXPECT(0xd0, gbc.readMem(0xa33d));
        // CB D0 01B9
        gbc.setState(0xd8b2, 0x714d, 0x8870, 0x9ebb, 0xa188, 0xd47, 0x1, 0x1);
        gbc.writeMem(0xd8b2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x714d, gbc.sp());
        EXPECT(0xd8b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b2));
        EXPECT(0xd0, gbc.readMem(0xd8b3));
        // CB D0 01BA
        gbc.setState(0xdfa8, 0x4c51, 0x2470, 0xa717, 0xeb7c, 0xfcf4, 0x1, 0x1);
        gbc.writeMem(0xdfa8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4c51, gbc.sp());
        EXPECT(0xdfaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfa8));
        EXPECT(0xd0, gbc.readMem(0xdfa9));
        // CB D0 01BB
        gbc.setState(0x972f, 0x3a0e, 0xd10, 0xa5ee, 0x598a, 0x37eb, 0x0, 0x1);
        gbc.writeMem(0x972f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3a0e, gbc.sp());
        EXPECT(0x9731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x972f));
        EXPECT(0xd0, gbc.readMem(0x9730));
        // CB D0 01BC
        gbc.setState(0x4d15, 0x3d29, 0xeed0, 0xcf3d, 0x4050, 0xb288, 0x1, 0x0);
        gbc.writeMem(0x4d15, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3d29, gbc.sp());
        EXPECT(0x4d17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01BD
        gbc.setState(0xafeb, 0x33a3, 0x470, 0xd3b8, 0xcceb, 0x83e2, 0x0, 0x0);
        gbc.writeMem(0xafeb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x33a3, gbc.sp());
        EXPECT(0xafed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafeb));
        EXPECT(0xd0, gbc.readMem(0xafec));
        // CB D0 01BE
        gbc.setState(0x3d4a, 0x43, 0xda30, 0x7c51, 0x864f, 0x9a0c, 0x1, 0x0);
        gbc.writeMem(0x3d4a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x43, gbc.sp());
        EXPECT(0x3d4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01BF
        gbc.setState(0x82d3, 0xd70c, 0x44e0, 0x16d2, 0xc710, 0x8dcc, 0x0, 0x0);
        gbc.writeMem(0x82d3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd70c, gbc.sp());
        EXPECT(0x82d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d3));
        EXPECT(0xd0, gbc.readMem(0x82d4));
        // CB D0 01C0
        gbc.setState(0xa764, 0xf4d5, 0x32a0, 0xe455, 0x8442, 0x4174, 0x1, 0x0);
        gbc.writeMem(0xa764, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf4d5, gbc.sp());
        EXPECT(0xa766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa764));
        EXPECT(0xd0, gbc.readMem(0xa765));
        // CB D0 01C1
        gbc.setState(0x394, 0xae1, 0x91d0, 0x9579, 0xc1ad, 0x34d0, 0x0, 0x0);
        gbc.writeMem(0x394, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xae1, gbc.sp());
        EXPECT(0x396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01C2
        gbc.setState(0xb769, 0x7842, 0x2de0, 0x625b, 0xc7cf, 0xfc79, 0x0, 0x0);
        gbc.writeMem(0xb769, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7842, gbc.sp());
        EXPECT(0xb76b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb769));
        EXPECT(0xd0, gbc.readMem(0xb76a));
        // CB D0 01C3
        gbc.setState(0x11a1, 0xf769, 0xeb80, 0xce32, 0x7557, 0x17e5, 0x1, 0x1);
        gbc.writeMem(0x11a1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf769, gbc.sp());
        EXPECT(0x11a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 01C4
        gbc.setState(0xa356, 0x63d0, 0xd0b0, 0x7f21, 0x7a4b, 0x38aa, 0x1, 0x0);
        gbc.writeMem(0xa356, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x63d0, gbc.sp());
        EXPECT(0xa358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa356));
        EXPECT(0xd0, gbc.readMem(0xa357));
        // CB D0 01C5
        gbc.setState(0x1d82, 0x52f4, 0x5060, 0x8594, 0xe268, 0x5e93, 0x0, 0x0);
        gbc.writeMem(0x1d82, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x52f4, gbc.sp());
        EXPECT(0x1d84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 01C6
        gbc.setState(0xb7e1, 0xaef4, 0x64c0, 0x9163, 0xeb4f, 0x7747, 0x1, 0x0);
        gbc.writeMem(0xb7e1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xaef4, gbc.sp());
        EXPECT(0xb7e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e1));
        EXPECT(0xd0, gbc.readMem(0xb7e2));
        // CB D0 01C7
        gbc.setState(0xb82, 0x36da, 0x7ee0, 0x5afc, 0xb269, 0x20d1, 0x0, 0x1);
        gbc.writeMem(0xb82, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x36da, gbc.sp());
        EXPECT(0xb84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 01C8
        gbc.setState(0xd81, 0xdea, 0xfb50, 0x1438, 0x2726, 0x9712, 0x1, 0x0);
        gbc.writeMem(0xd81, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdea, gbc.sp());
        EXPECT(0xd83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01C9
        gbc.setState(0x231f, 0xd587, 0x90, 0x66ac, 0x1802, 0xa4ba, 0x1, 0x0);
        gbc.writeMem(0x231f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd587, gbc.sp());
        EXPECT(0x2321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01CA
        gbc.setState(0x1aba, 0xef2, 0xeb90, 0x4cf4, 0x42ac, 0x208b, 0x0, 0x0);
        gbc.writeMem(0x1aba, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xef2, gbc.sp());
        EXPECT(0x1abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01CB
        gbc.setState(0x9c3b, 0xa201, 0x5460, 0xb18b, 0xcd62, 0xa537, 0x0, 0x1);
        gbc.writeMem(0x9c3b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa201, gbc.sp());
        EXPECT(0x9c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c3b));
        EXPECT(0xd0, gbc.readMem(0x9c3c));
        // CB D0 01CC
        gbc.setState(0xe9ff, 0x6d43, 0x97c0, 0x6196, 0xc65f, 0x4a12, 0x0, 0x0);
        gbc.writeMem(0xe9ff, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6d43, gbc.sp());
        EXPECT(0xea01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ff));
        EXPECT(0xd0, gbc.readMem(0xea00));
        // CB D0 01CD
        gbc.setState(0x332e, 0x187e, 0xa750, 0x8d48, 0xf06c, 0x2a82, 0x1, 0x0);
        gbc.writeMem(0x332e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x187e, gbc.sp());
        EXPECT(0x3330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01CE
        gbc.setState(0xc085, 0x361f, 0xcda0, 0x6060, 0xa573, 0x6454, 0x1, 0x1);
        gbc.writeMem(0xc085, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x361f, gbc.sp());
        EXPECT(0xc087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc085));
        EXPECT(0xd0, gbc.readMem(0xc086));
        // CB D0 01CF
        gbc.setState(0x5268, 0xf26, 0x5930, 0xa1cf, 0x2179, 0x5b67, 0x1, 0x1);
        gbc.writeMem(0x5268, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf26, gbc.sp());
        EXPECT(0x526a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01D0
        gbc.setState(0x9ef9, 0xb83d, 0xa610, 0x6ac, 0x844e, 0xcc1f, 0x1, 0x1);
        gbc.writeMem(0x9ef9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb83d, gbc.sp());
        EXPECT(0x9efb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ef9));
        EXPECT(0xd0, gbc.readMem(0x9efa));
        // CB D0 01D1
        gbc.setState(0xa6c7, 0x774b, 0x2360, 0xc7ee, 0x8071, 0xfa2d, 0x0, 0x1);
        gbc.writeMem(0xa6c7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x774b, gbc.sp());
        EXPECT(0xa6c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6c7));
        EXPECT(0xd0, gbc.readMem(0xa6c8));
        // CB D0 01D2
        gbc.setState(0xeea9, 0x99b4, 0x10, 0xeb88, 0x37cc, 0xf24b, 0x1, 0x1);
        gbc.writeMem(0xeea9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x99b4, gbc.sp());
        EXPECT(0xeeab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea9));
        EXPECT(0xd0, gbc.readMem(0xeeaa));
        // CB D0 01D3
        gbc.setState(0x921, 0xaa88, 0xdc30, 0x3049, 0x4a59, 0x4951, 0x0, 0x1);
        gbc.writeMem(0x921, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xaa88, gbc.sp());
        EXPECT(0x923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01D4
        gbc.setState(0xd065, 0xd75, 0xd650, 0x53b7, 0x4c68, 0xbe8b, 0x0, 0x1);
        gbc.writeMem(0xd065, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd75, gbc.sp());
        EXPECT(0xd067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd065));
        EXPECT(0xd0, gbc.readMem(0xd066));
        // CB D0 01D5
        gbc.setState(0x5d5e, 0x4495, 0xeb60, 0xbabf, 0x4b2, 0x6c7e, 0x1, 0x0);
        gbc.writeMem(0x5d5e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4495, gbc.sp());
        EXPECT(0x5d60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 01D6
        gbc.setState(0x16d4, 0x835c, 0x5880, 0x5f8b, 0xb0c9, 0xb6f7, 0x1, 0x0);
        gbc.writeMem(0x16d4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x835c, gbc.sp());
        EXPECT(0x16d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 01D7
        gbc.setState(0x4f7d, 0xc7a5, 0x5200, 0xbfbc, 0xbdcf, 0xd0c5, 0x0, 0x0);
        gbc.writeMem(0x4f7d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc7a5, gbc.sp());
        EXPECT(0x4f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 01D8
        gbc.setState(0xc3b1, 0x2c20, 0x2a20, 0x5f46, 0x6837, 0xfcce, 0x0, 0x1);
        gbc.writeMem(0xc3b1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2c20, gbc.sp());
        EXPECT(0xc3b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b1));
        EXPECT(0xd0, gbc.readMem(0xc3b2));
        // CB D0 01D9
        gbc.setState(0x42ab, 0x3492, 0x1d0, 0xd1fa, 0x9fc5, 0x98b4, 0x0, 0x0);
        gbc.writeMem(0x42ab, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3492, gbc.sp());
        EXPECT(0x42ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01DA
        gbc.setState(0xe0bc, 0xb065, 0x1080, 0x9237, 0xa41f, 0x239e, 0x0, 0x0);
        gbc.writeMem(0xe0bc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb065, gbc.sp());
        EXPECT(0xe0be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0bc));
        EXPECT(0xd0, gbc.readMem(0xe0bd));
        // CB D0 01DB
        gbc.setState(0xa5d, 0xac0d, 0xf1b0, 0x9c50, 0x9f8c, 0x229b, 0x0, 0x0);
        gbc.writeMem(0xa5d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xac0d, gbc.sp());
        EXPECT(0xa5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01DC
        gbc.setState(0x258a, 0xd9cd, 0xa690, 0x5a50, 0x6544, 0x210e, 0x0, 0x0);
        gbc.writeMem(0x258a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd9cd, gbc.sp());
        EXPECT(0x258c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01DD
        gbc.setState(0x52f5, 0x9281, 0x3b20, 0x37f4, 0x566e, 0x8f0, 0x1, 0x1);
        gbc.writeMem(0x52f5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9281, gbc.sp());
        EXPECT(0x52f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 01DE
        gbc.setState(0x7746, 0x2d5e, 0x3760, 0xeee1, 0xc24f, 0xf54b, 0x0, 0x0);
        gbc.writeMem(0x7746, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2d5e, gbc.sp());
        EXPECT(0x7748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 01DF
        gbc.setState(0xc335, 0x7e64, 0x1d90, 0xd9d1, 0xc928, 0x28e8, 0x0, 0x1);
        gbc.writeMem(0xc335, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7e64, gbc.sp());
        EXPECT(0xc337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc335));
        EXPECT(0xd0, gbc.readMem(0xc336));
        // CB D0 01E0
        gbc.setState(0xb175, 0x9249, 0x3ed0, 0x763d, 0x16cb, 0xf369, 0x0, 0x1);
        gbc.writeMem(0xb175, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9249, gbc.sp());
        EXPECT(0xb177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb175));
        EXPECT(0xd0, gbc.readMem(0xb176));
        // CB D0 01E1
        gbc.setState(0x7d2a, 0xdcdb, 0x3b70, 0x3fbf, 0xd19e, 0xd8f1, 0x0, 0x0);
        gbc.writeMem(0x7d2a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdcdb, gbc.sp());
        EXPECT(0x7d2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01E2
        gbc.setState(0xe504, 0x22e4, 0x1310, 0x66dc, 0x43de, 0x8665, 0x1, 0x0);
        gbc.writeMem(0xe504, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x22e4, gbc.sp());
        EXPECT(0xe506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe504));
        EXPECT(0xd0, gbc.readMem(0xe505));
        // CB D0 01E3
        gbc.setState(0xa389, 0xe8a2, 0x5dc0, 0xe773, 0xdd6a, 0xd134, 0x0, 0x1);
        gbc.writeMem(0xa389, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe8a2, gbc.sp());
        EXPECT(0xa38b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa389));
        EXPECT(0xd0, gbc.readMem(0xa38a));
        // CB D0 01E4
        gbc.setState(0xe0e, 0x73c6, 0x9f50, 0xee60, 0x5352, 0xee7c, 0x0, 0x1);
        gbc.writeMem(0xe0e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x73c6, gbc.sp());
        EXPECT(0xe10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01E5
        gbc.setState(0x12d2, 0xb678, 0x6590, 0x213c, 0x5a8f, 0x6eda, 0x0, 0x1);
        gbc.writeMem(0x12d2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb678, gbc.sp());
        EXPECT(0x12d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01E6
        gbc.setState(0x2e5b, 0xa769, 0x8030, 0xe6c0, 0x4cfc, 0x1fe9, 0x0, 0x1);
        gbc.writeMem(0x2e5b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa769, gbc.sp());
        EXPECT(0x2e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01E7
        gbc.setState(0xd6b4, 0x6f3d, 0xa00, 0x19e5, 0x1a18, 0x172c, 0x1, 0x1);
        gbc.writeMem(0xd6b4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6f3d, gbc.sp());
        EXPECT(0xd6b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6b4));
        EXPECT(0xd0, gbc.readMem(0xd6b5));
        // CB D0 01E8
        gbc.setState(0x8d3c, 0xcedd, 0x3c00, 0x214e, 0x122f, 0x3b2f, 0x1, 0x1);
        gbc.writeMem(0x8d3c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xcedd, gbc.sp());
        EXPECT(0x8d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d3c));
        EXPECT(0xd0, gbc.readMem(0x8d3d));
        // CB D0 01E9
        gbc.setState(0xc39d, 0x1745, 0xd910, 0x3e76, 0x5e9a, 0x31f0, 0x1, 0x1);
        gbc.writeMem(0xc39d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1745, gbc.sp());
        EXPECT(0xc39f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc39d));
        EXPECT(0xd0, gbc.readMem(0xc39e));
        // CB D0 01EA
        gbc.setState(0xe5ec, 0x253b, 0xb300, 0x335a, 0xbad0, 0xd89d, 0x0, 0x0);
        gbc.writeMem(0xe5ec, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x253b, gbc.sp());
        EXPECT(0xe5ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ec));
        EXPECT(0xd0, gbc.readMem(0xe5ed));
        // CB D0 01EB
        gbc.setState(0x79b5, 0x1e80, 0xefb0, 0xadc1, 0x40ba, 0x2143, 0x1, 0x1);
        gbc.writeMem(0x79b5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1e80, gbc.sp());
        EXPECT(0x79b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01EC
        gbc.setState(0x6f07, 0xc083, 0x85e0, 0x85bc, 0xb8bc, 0x4fd7, 0x1, 0x0);
        gbc.writeMem(0x6f07, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc083, gbc.sp());
        EXPECT(0x6f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 01ED
        gbc.setState(0x347f, 0x97c1, 0xae60, 0x599d, 0xaf0f, 0x7dd9, 0x1, 0x0);
        gbc.writeMem(0x347f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x97c1, gbc.sp());
        EXPECT(0x3481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 01EE
        gbc.setState(0x1d0c, 0x630b, 0x90, 0x2aa9, 0x1f88, 0x8099, 0x1, 0x0);
        gbc.writeMem(0x1d0c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x630b, gbc.sp());
        EXPECT(0x1d0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01EF
        gbc.setState(0xdd66, 0x70aa, 0xf660, 0x6598, 0x54e0, 0x5fcf, 0x1, 0x0);
        gbc.writeMem(0xdd66, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x70aa, gbc.sp());
        EXPECT(0xdd68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd66));
        EXPECT(0xd0, gbc.readMem(0xdd67));
        // CB D0 01F0
        gbc.setState(0xcadf, 0x5346, 0xb600, 0xa0a4, 0x9506, 0x3409, 0x1, 0x1);
        gbc.writeMem(0xcadf, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5346, gbc.sp());
        EXPECT(0xcae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcadf));
        EXPECT(0xd0, gbc.readMem(0xcae0));
        // CB D0 01F1
        gbc.setState(0xedee, 0xc759, 0x7f0, 0xc3e, 0x630d, 0x57e4, 0x0, 0x1);
        gbc.writeMem(0xedee, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc759, gbc.sp());
        EXPECT(0xedf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedee));
        EXPECT(0xd0, gbc.readMem(0xedef));
        // CB D0 01F2
        gbc.setState(0x3c02, 0x3e96, 0xd9a0, 0x3dd1, 0x80f5, 0xff3b, 0x1, 0x1);
        gbc.writeMem(0x3c02, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3e96, gbc.sp());
        EXPECT(0x3c04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 01F3
        gbc.setState(0xbe02, 0x2a33, 0x2a60, 0x8a6f, 0x6959, 0xa632, 0x0, 0x1);
        gbc.writeMem(0xbe02, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2a33, gbc.sp());
        EXPECT(0xbe04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe02));
        EXPECT(0xd0, gbc.readMem(0xbe03));
        // CB D0 01F4
        gbc.setState(0x3455, 0x9163, 0x830, 0x567b, 0xe7a5, 0xeb1c, 0x1, 0x1);
        gbc.writeMem(0x3455, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9163, gbc.sp());
        EXPECT(0x3457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01F5
        gbc.setState(0xceb6, 0x4836, 0x4990, 0x1067, 0x7cdd, 0x326e, 0x1, 0x0);
        gbc.writeMem(0xceb6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4836, gbc.sp());
        EXPECT(0xceb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceb6));
        EXPECT(0xd0, gbc.readMem(0xceb7));
        // CB D0 01F6
        gbc.setState(0x5ebd, 0x8424, 0x3fd0, 0x6c72, 0xb4e2, 0xbcb0, 0x0, 0x0);
        gbc.writeMem(0x5ebd, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8424, gbc.sp());
        EXPECT(0x5ebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01F7
        gbc.setState(0x1b53, 0xc34a, 0xc10, 0xe2b3, 0xb754, 0xd8fe, 0x1, 0x1);
        gbc.writeMem(0x1b53, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc34a, gbc.sp());
        EXPECT(0x1b55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01F8
        gbc.setState(0x666e, 0x3d66, 0x9e70, 0x163, 0x1423, 0x643d, 0x0, 0x1);
        gbc.writeMem(0x666e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3d66, gbc.sp());
        EXPECT(0x6670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 01F9
        gbc.setState(0xa24a, 0x750, 0xfb80, 0xd61a, 0x3402, 0x16b4, 0x1, 0x0);
        gbc.writeMem(0xa24a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x750, gbc.sp());
        EXPECT(0xa24c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa24a));
        EXPECT(0xd0, gbc.readMem(0xa24b));
        // CB D0 01FB
        gbc.setState(0xd298, 0xd247, 0x930, 0xe62e, 0xbb77, 0x8219, 0x1, 0x0);
        gbc.writeMem(0xd298, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd247, gbc.sp());
        EXPECT(0xd29a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd298));
        EXPECT(0xd0, gbc.readMem(0xd299));
        // CB D0 01FC
        gbc.setState(0x1c03, 0xc47e, 0xb3c0, 0xbe5b, 0x1f54, 0x333, 0x1, 0x0);
        gbc.writeMem(0x1c03, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc47e, gbc.sp());
        EXPECT(0x1c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 01FD
        gbc.setState(0xe167, 0xaec5, 0xb6d0, 0x862c, 0x39a6, 0x2662, 0x1, 0x1);
        gbc.writeMem(0xe167, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xaec5, gbc.sp());
        EXPECT(0xe169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe167));
        EXPECT(0xd0, gbc.readMem(0xe168));
        // CB D0 01FE
        gbc.setState(0x9613, 0x527, 0x68b0, 0x717b, 0x4992, 0x7915, 0x1, 0x1);
        gbc.writeMem(0x9613, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x527, gbc.sp());
        EXPECT(0x9615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9613));
        EXPECT(0xd0, gbc.readMem(0x9614));
        // CB D0 01FF
        gbc.setState(0xc5a9, 0x5f47, 0x9820, 0xe575, 0x3c6e, 0x949f, 0x0, 0x0);
        gbc.writeMem(0xc5a9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5f47, gbc.sp());
        EXPECT(0xc5ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5a9));
        EXPECT(0xd0, gbc.readMem(0xc5aa));
        // CB D0 0200
        gbc.setState(0xd2a3, 0xcf84, 0x4f00, 0xe4e3, 0xbaa9, 0x4c3, 0x1, 0x1);
        gbc.writeMem(0xd2a3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xcf84, gbc.sp());
        EXPECT(0xd2a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2a3));
        EXPECT(0xd0, gbc.readMem(0xd2a4));
        // CB D0 0201
        gbc.setState(0x25c0, 0xa4e2, 0x7080, 0x8031, 0xef4e, 0x7112, 0x1, 0x1);
        gbc.writeMem(0x25c0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa4e2, gbc.sp());
        EXPECT(0x25c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0202
        gbc.setState(0x5d87, 0xa018, 0x6960, 0xb796, 0x1a61, 0xae89, 0x1, 0x1);
        gbc.writeMem(0x5d87, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa018, gbc.sp());
        EXPECT(0x5d89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0203
        gbc.setState(0x9480, 0x1bc0, 0x26e0, 0xef70, 0xaf32, 0x825, 0x1, 0x0);
        gbc.writeMem(0x9480, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1bc0, gbc.sp());
        EXPECT(0x9482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9480));
        EXPECT(0xd0, gbc.readMem(0x9481));
        // CB D0 0205
        gbc.setState(0xc962, 0xa049, 0xb650, 0x7bf1, 0x51b, 0x3c78, 0x1, 0x1);
        gbc.writeMem(0xc962, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa049, gbc.sp());
        EXPECT(0xc964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc962));
        EXPECT(0xd0, gbc.readMem(0xc963));
        // CB D0 0206
        gbc.setState(0xa15c, 0x4aba, 0x580, 0x2706, 0x776b, 0xc6e8, 0x1, 0x0);
        gbc.writeMem(0xa15c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4aba, gbc.sp());
        EXPECT(0xa15e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa15c));
        EXPECT(0xd0, gbc.readMem(0xa15d));
        // CB D0 0207
        gbc.setState(0x353a, 0xe1a1, 0x4bf0, 0xfc39, 0x8e5f, 0x554d, 0x0, 0x0);
        gbc.writeMem(0x353a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe1a1, gbc.sp());
        EXPECT(0x353c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0208
        gbc.setState(0xb3c9, 0x2180, 0x6640, 0x4dd6, 0x3c37, 0xa03d, 0x0, 0x1);
        gbc.writeMem(0xb3c9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2180, gbc.sp());
        EXPECT(0xb3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3c9));
        EXPECT(0xd0, gbc.readMem(0xb3ca));
        // CB D0 0209
        gbc.setState(0xc4f7, 0xcf8a, 0xa420, 0xe0f2, 0xbba9, 0xcbad, 0x1, 0x0);
        gbc.writeMem(0xc4f7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xcf8a, gbc.sp());
        EXPECT(0xc4f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f7));
        EXPECT(0xd0, gbc.readMem(0xc4f8));
        // CB D0 020A
        gbc.setState(0x61ed, 0xe362, 0xec20, 0xc7af, 0xf90e, 0x73e2, 0x1, 0x0);
        gbc.writeMem(0x61ed, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe362, gbc.sp());
        EXPECT(0x61ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 020B
        gbc.setState(0xef21, 0x235d, 0x1b40, 0xd3e1, 0x48bb, 0xbf6e, 0x1, 0x1);
        gbc.writeMem(0xef21, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x235d, gbc.sp());
        EXPECT(0xef23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef21));
        EXPECT(0xd0, gbc.readMem(0xef22));
        // CB D0 020C
        gbc.setState(0x4e81, 0x350d, 0xdf70, 0x152e, 0x78b9, 0x1679, 0x1, 0x1);
        gbc.writeMem(0x4e81, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x350d, gbc.sp());
        EXPECT(0x4e83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 020E
        gbc.setState(0x16de, 0xabce, 0xfea0, 0xb93b, 0x2fe7, 0xfdf9, 0x1, 0x1);
        gbc.writeMem(0x16de, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xabce, gbc.sp());
        EXPECT(0x16e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 020F
        gbc.setState(0x9cd9, 0xb52c, 0x5e10, 0x91a8, 0x4b99, 0x713e, 0x0, 0x0);
        gbc.writeMem(0x9cd9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb52c, gbc.sp());
        EXPECT(0x9cdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd9));
        EXPECT(0xd0, gbc.readMem(0x9cda));
        // CB D0 0210
        gbc.setState(0x66f8, 0x31f3, 0x72e0, 0x29d2, 0x7d4a, 0x4437, 0x1, 0x1);
        gbc.writeMem(0x66f8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x31f3, gbc.sp());
        EXPECT(0x66fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0211
        gbc.setState(0x4c56, 0xb375, 0xf560, 0xb2cc, 0xf968, 0x88dd, 0x0, 0x0);
        gbc.writeMem(0x4c56, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb375, gbc.sp());
        EXPECT(0x4c58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0212
        gbc.setState(0x4cbc, 0x8d5a, 0x9ee0, 0x126f, 0xc160, 0x1754, 0x0, 0x1);
        gbc.writeMem(0x4cbc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8d5a, gbc.sp());
        EXPECT(0x4cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0213
        gbc.setState(0x8d3f, 0x3bcc, 0xe60, 0x800c, 0x6bb7, 0x453a, 0x1, 0x0);
        gbc.writeMem(0x8d3f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3bcc, gbc.sp());
        EXPECT(0x8d41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d3f));
        EXPECT(0xd0, gbc.readMem(0x8d40));
        // CB D0 0214
        gbc.setState(0xe0f5, 0x52bd, 0x240, 0xf174, 0x90bd, 0xd918, 0x0, 0x0);
        gbc.writeMem(0xe0f5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x52bd, gbc.sp());
        EXPECT(0xe0f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0f5));
        EXPECT(0xd0, gbc.readMem(0xe0f6));
        // CB D0 0215
        gbc.setState(0xc842, 0x5890, 0x7a00, 0x986e, 0x12d2, 0x620d, 0x1, 0x0);
        gbc.writeMem(0xc842, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5890, gbc.sp());
        EXPECT(0xc844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc842));
        EXPECT(0xd0, gbc.readMem(0xc843));
        // CB D0 0216
        gbc.setState(0x886, 0x72be, 0x92b0, 0x2186, 0x87e0, 0x727c, 0x0, 0x1);
        gbc.writeMem(0x886, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x72be, gbc.sp());
        EXPECT(0x888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0217
        gbc.setState(0xc11f, 0x6647, 0xdc70, 0xb5db, 0x6200, 0xff63, 0x1, 0x1);
        gbc.writeMem(0xc11f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6647, gbc.sp());
        EXPECT(0xc121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc11f));
        EXPECT(0xd0, gbc.readMem(0xc120));
        // CB D0 0218
        gbc.setState(0xead2, 0x20a4, 0x6d00, 0x48c4, 0x7fec, 0xab20, 0x0, 0x1);
        gbc.writeMem(0xead2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x20a4, gbc.sp());
        EXPECT(0xead4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xead2));
        EXPECT(0xd0, gbc.readMem(0xead3));
        // CB D0 0219
        gbc.setState(0x47e0, 0x845e, 0x8120, 0xd503, 0xa89a, 0x4d57, 0x1, 0x0);
        gbc.writeMem(0x47e0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x845e, gbc.sp());
        EXPECT(0x47e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 021A
        gbc.setState(0x2460, 0xb09c, 0xfc40, 0xa2ac, 0x639a, 0xcf64, 0x0, 0x0);
        gbc.writeMem(0x2460, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb09c, gbc.sp());
        EXPECT(0x2462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 021B
        gbc.setState(0x9940, 0x25b6, 0x2180, 0xdc5e, 0xd23f, 0x1c5, 0x0, 0x1);
        gbc.writeMem(0x9940, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x25b6, gbc.sp());
        EXPECT(0x9942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9940));
        EXPECT(0xd0, gbc.readMem(0x9941));
        // CB D0 021C
        gbc.setState(0xa60f, 0x89e7, 0x79f0, 0xfb15, 0x6c6e, 0x61c1, 0x0, 0x1);
        gbc.writeMem(0xa60f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x89e7, gbc.sp());
        EXPECT(0xa611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa60f));
        EXPECT(0xd0, gbc.readMem(0xa610));
        // CB D0 021D
        gbc.setState(0x7ab9, 0xa3b4, 0x6ec0, 0xc6c9, 0xf1e4, 0xf6ef, 0x0, 0x0);
        gbc.writeMem(0x7ab9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa3b4, gbc.sp());
        EXPECT(0x7abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 021E
        gbc.setState(0x8858, 0x4b7d, 0x47f0, 0xfed3, 0xb, 0x1aaf, 0x0, 0x0);
        gbc.writeMem(0x8858, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4b7d, gbc.sp());
        EXPECT(0x885a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8858));
        EXPECT(0xd0, gbc.readMem(0x8859));
        // CB D0 021F
        gbc.setState(0x6f70, 0x61a, 0x5a60, 0x47e1, 0x3978, 0x931a, 0x1, 0x1);
        gbc.writeMem(0x6f70, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x61a, gbc.sp());
        EXPECT(0x6f72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0220
        gbc.setState(0x74d7, 0xb3fb, 0x9b40, 0x7d9c, 0xb1a8, 0x1bd5, 0x0, 0x1);
        gbc.writeMem(0x74d7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb3fb, gbc.sp());
        EXPECT(0x74d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0221
        gbc.setState(0x5356, 0x9a25, 0x1030, 0x845f, 0x391e, 0x4346, 0x1, 0x1);
        gbc.writeMem(0x5356, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9a25, gbc.sp());
        EXPECT(0x5358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0222
        gbc.setState(0xe15b, 0x9b95, 0x67a0, 0x65be, 0x13cc, 0x5134, 0x1, 0x0);
        gbc.writeMem(0xe15b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9b95, gbc.sp());
        EXPECT(0xe15d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe15b));
        EXPECT(0xd0, gbc.readMem(0xe15c));
        // CB D0 0223
        gbc.setState(0x43f2, 0x658f, 0xd950, 0x38cd, 0x1afc, 0xe042, 0x0, 0x0);
        gbc.writeMem(0x43f2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x658f, gbc.sp());
        EXPECT(0x43f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0224
        gbc.setState(0x9c8e, 0x294e, 0xf470, 0xb690, 0xacc1, 0x5cd2, 0x1, 0x0);
        gbc.writeMem(0x9c8e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x294e, gbc.sp());
        EXPECT(0x9c90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c8e));
        EXPECT(0xd0, gbc.readMem(0x9c8f));
        // CB D0 0225
        gbc.setState(0x2ffe, 0xc435, 0xd980, 0x2f39, 0xf613, 0xb16b, 0x0, 0x1);
        gbc.writeMem(0x2ffe, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc435, gbc.sp());
        EXPECT(0x3000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0226
        gbc.setState(0x22fa, 0xa19e, 0xa020, 0x3b3d, 0x6ddb, 0xb869, 0x0, 0x1);
        gbc.writeMem(0x22fa, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa19e, gbc.sp());
        EXPECT(0x22fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0227
        gbc.setState(0x3a4b, 0xb8d1, 0xc040, 0x7e6a, 0xbea2, 0xcb87, 0x0, 0x1);
        gbc.writeMem(0x3a4b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb8d1, gbc.sp());
        EXPECT(0x3a4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0228
        gbc.setState(0xa89e, 0x7405, 0xfc80, 0x89f0, 0x82cf, 0x2d77, 0x0, 0x1);
        gbc.writeMem(0xa89e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7405, gbc.sp());
        EXPECT(0xa8a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa89e));
        EXPECT(0xd0, gbc.readMem(0xa89f));
        // CB D0 0229
        gbc.setState(0xbc64, 0x1571, 0xfdb0, 0x4e2b, 0xf755, 0x5e26, 0x1, 0x0);
        gbc.writeMem(0xbc64, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1571, gbc.sp());
        EXPECT(0xbc66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc64));
        EXPECT(0xd0, gbc.readMem(0xbc65));
        // CB D0 022A
        gbc.setState(0x1d57, 0x1c22, 0x9fd0, 0xb945, 0xe5f2, 0xfcb6, 0x0, 0x1);
        gbc.writeMem(0x1d57, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1c22, gbc.sp());
        EXPECT(0x1d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 022B
        gbc.setState(0xa0ac, 0xf07a, 0x4850, 0x9a8b, 0xb642, 0x1c8f, 0x0, 0x1);
        gbc.writeMem(0xa0ac, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf07a, gbc.sp());
        EXPECT(0xa0ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ac));
        EXPECT(0xd0, gbc.readMem(0xa0ad));
        // CB D0 022C
        gbc.setState(0x258c, 0xa2c8, 0x3630, 0x6c8a, 0x4586, 0x4ce3, 0x0, 0x1);
        gbc.writeMem(0x258c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa2c8, gbc.sp());
        EXPECT(0x258e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 022D
        gbc.setState(0xceaf, 0xade2, 0xaf0, 0xabef, 0x7ce8, 0xcd52, 0x0, 0x0);
        gbc.writeMem(0xceaf, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xade2, gbc.sp());
        EXPECT(0xceb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceaf));
        EXPECT(0xd0, gbc.readMem(0xceb0));
        // CB D0 022E
        gbc.setState(0x5b36, 0x4e68, 0x9c20, 0xa8eb, 0x9ba0, 0xfcc5, 0x0, 0x1);
        gbc.writeMem(0x5b36, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4e68, gbc.sp());
        EXPECT(0x5b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 022F
        gbc.setState(0x6317, 0xe969, 0x8ba0, 0xbf2e, 0xf244, 0xda6, 0x0, 0x1);
        gbc.writeMem(0x6317, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe969, gbc.sp());
        EXPECT(0x6319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0230
        gbc.setState(0x4de, 0x476c, 0x7730, 0xa7a9, 0xbd82, 0xa80e, 0x1, 0x0);
        gbc.writeMem(0x4de, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x476c, gbc.sp());
        EXPECT(0x4e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0231
        gbc.setState(0x522, 0x7b16, 0x3ef0, 0xece, 0xdc03, 0xe97c, 0x1, 0x1);
        gbc.writeMem(0x522, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7b16, gbc.sp());
        EXPECT(0x524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0232
        gbc.setState(0xa774, 0xd656, 0x7ae0, 0x6939, 0xa6df, 0x8dda, 0x0, 0x0);
        gbc.writeMem(0xa774, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd656, gbc.sp());
        EXPECT(0xa776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa774));
        EXPECT(0xd0, gbc.readMem(0xa775));
        // CB D0 0233
        gbc.setState(0x8ed9, 0x1355, 0xdde0, 0x85f, 0x63a0, 0xd461, 0x0, 0x1);
        gbc.writeMem(0x8ed9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1355, gbc.sp());
        EXPECT(0x8edb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed9));
        EXPECT(0xd0, gbc.readMem(0x8eda));
        // CB D0 0234
        gbc.setState(0x20ab, 0xf047, 0xcd40, 0x9ac5, 0x39ee, 0xd9c, 0x0, 0x0);
        gbc.writeMem(0x20ab, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf047, gbc.sp());
        EXPECT(0x20ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0235
        gbc.setState(0xd336, 0x13c, 0x27d0, 0x32b9, 0xd9f6, 0x7d29, 0x1, 0x1);
        gbc.writeMem(0xd336, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x13c, gbc.sp());
        EXPECT(0xd338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd336));
        EXPECT(0xd0, gbc.readMem(0xd337));
        // CB D0 0236
        gbc.setState(0xce0d, 0xb8fd, 0x62a0, 0x285d, 0xb33c, 0xa4a, 0x1, 0x1);
        gbc.writeMem(0xce0d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb8fd, gbc.sp());
        EXPECT(0xce0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce0d));
        EXPECT(0xd0, gbc.readMem(0xce0e));
        // CB D0 0237
        gbc.setState(0x6db5, 0x4ab0, 0x6330, 0x2724, 0x87c1, 0x1875, 0x0, 0x0);
        gbc.writeMem(0x6db5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4ab0, gbc.sp());
        EXPECT(0x6db7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0238
        gbc.setState(0xdd1d, 0xf51, 0x96d0, 0x4190, 0xb7aa, 0xaff2, 0x0, 0x1);
        gbc.writeMem(0xdd1d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf51, gbc.sp());
        EXPECT(0xdd1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd1d));
        EXPECT(0xd0, gbc.readMem(0xdd1e));
        // CB D0 0239
        gbc.setState(0x561a, 0x999a, 0x8f70, 0xcdc5, 0x64b8, 0xc7f3, 0x0, 0x0);
        gbc.writeMem(0x561a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x999a, gbc.sp());
        EXPECT(0x561c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 023A
        gbc.setState(0x835b, 0x9f2c, 0xc180, 0xa89f, 0xae7b, 0xda5, 0x1, 0x1);
        gbc.writeMem(0x835b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9f2c, gbc.sp());
        EXPECT(0x835d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x835b));
        EXPECT(0xd0, gbc.readMem(0x835c));
        // CB D0 023B
        gbc.setState(0xc933, 0xd214, 0xf10, 0xa1a, 0x2fce, 0x2eea, 0x0, 0x1);
        gbc.writeMem(0xc933, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd214, gbc.sp());
        EXPECT(0xc935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc933));
        EXPECT(0xd0, gbc.readMem(0xc934));
        // CB D0 023C
        gbc.setState(0x896b, 0xbf20, 0xda0, 0x3b47, 0x762f, 0xdb0a, 0x1, 0x1);
        gbc.writeMem(0x896b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbf20, gbc.sp());
        EXPECT(0x896d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x896b));
        EXPECT(0xd0, gbc.readMem(0x896c));
        // CB D0 023D
        gbc.setState(0xb5af, 0x4d9, 0x8ce0, 0x1ce, 0x198, 0xfc1d, 0x0, 0x1);
        gbc.writeMem(0xb5af, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4d9, gbc.sp());
        EXPECT(0xb5b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5af));
        EXPECT(0xd0, gbc.readMem(0xb5b0));
        // CB D0 023E
        gbc.setState(0x778d, 0x3b8b, 0x5270, 0x5184, 0xc81a, 0xdd0c, 0x1, 0x0);
        gbc.writeMem(0x778d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3b8b, gbc.sp());
        EXPECT(0x778f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 023F
        gbc.setState(0x1b11, 0xa871, 0xdf60, 0xeed8, 0x11c0, 0x9b0f, 0x1, 0x1);
        gbc.writeMem(0x1b11, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa871, gbc.sp());
        EXPECT(0x1b13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0240
        gbc.setState(0xa947, 0xf0c2, 0x49f0, 0x2d19, 0x9d88, 0xbe13, 0x0, 0x0);
        gbc.writeMem(0xa947, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf0c2, gbc.sp());
        EXPECT(0xa949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa947));
        EXPECT(0xd0, gbc.readMem(0xa948));
        // CB D0 0241
        gbc.setState(0x76fe, 0xd1f5, 0x2ff0, 0xe455, 0xf005, 0xde99, 0x1, 0x1);
        gbc.writeMem(0x76fe, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd1f5, gbc.sp());
        EXPECT(0x7700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0242
        gbc.setState(0x721d, 0xab89, 0x2f90, 0x9b51, 0x813, 0xf027, 0x0, 0x0);
        gbc.writeMem(0x721d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xab89, gbc.sp());
        EXPECT(0x721f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0243
        gbc.setState(0xedfc, 0x3f17, 0x3f80, 0xc497, 0x42e, 0xa428, 0x1, 0x0);
        gbc.writeMem(0xedfc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3f17, gbc.sp());
        EXPECT(0xedfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedfc));
        EXPECT(0xd0, gbc.readMem(0xedfd));
        // CB D0 0244
        gbc.setState(0x841e, 0x4728, 0xd330, 0xe6a7, 0xc424, 0xf79c, 0x1, 0x0);
        gbc.writeMem(0x841e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4728, gbc.sp());
        EXPECT(0x8420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x841e));
        EXPECT(0xd0, gbc.readMem(0x841f));
        // CB D0 0245
        gbc.setState(0xdd0, 0x721f, 0x5ef0, 0xa1dd, 0x10e0, 0x460, 0x0, 0x1);
        gbc.writeMem(0xdd0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x721f, gbc.sp());
        EXPECT(0xdd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0246
        gbc.setState(0x963a, 0xfbbb, 0xdcc0, 0x3a06, 0xff2c, 0x3599, 0x1, 0x0);
        gbc.writeMem(0x963a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfbbb, gbc.sp());
        EXPECT(0x963c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x963a));
        EXPECT(0xd0, gbc.readMem(0x963b));
        // CB D0 0247
        gbc.setState(0x1312, 0x132c, 0xab00, 0xaf03, 0xb4b9, 0x999d, 0x1, 0x1);
        gbc.writeMem(0x1312, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x132c, gbc.sp());
        EXPECT(0x1314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0248
        gbc.setState(0xb1ab, 0x5d6e, 0x6e40, 0x3d8, 0x8c5b, 0x425, 0x1, 0x1);
        gbc.writeMem(0xb1ab, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5d6e, gbc.sp());
        EXPECT(0xb1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ab));
        EXPECT(0xd0, gbc.readMem(0xb1ac));
        // CB D0 0249
        gbc.setState(0x150a, 0x33a1, 0x8450, 0xfb98, 0xe797, 0xa38c, 0x1, 0x1);
        gbc.writeMem(0x150a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x33a1, gbc.sp());
        EXPECT(0x150c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 024A
        gbc.setState(0x4df6, 0x4b50, 0xf590, 0x2aa8, 0xb82f, 0xeae4, 0x0, 0x1);
        gbc.writeMem(0x4df6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4b50, gbc.sp());
        EXPECT(0x4df8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 024B
        gbc.setState(0xe1d8, 0xb429, 0x23b0, 0xeb1a, 0x49dc, 0x5cea, 0x1, 0x0);
        gbc.writeMem(0xe1d8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb429, gbc.sp());
        EXPECT(0xe1da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1d8));
        EXPECT(0xd0, gbc.readMem(0xe1d9));
        // CB D0 024C
        gbc.setState(0xb238, 0xa88e, 0xa170, 0x1caf, 0x12f0, 0x34db, 0x0, 0x1);
        gbc.writeMem(0xb238, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa88e, gbc.sp());
        EXPECT(0xb23a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb238));
        EXPECT(0xd0, gbc.readMem(0xb239));
        // CB D0 024D
        gbc.setState(0x40cc, 0xefc9, 0x9dc0, 0x7654, 0x6d55, 0x5d3b, 0x0, 0x1);
        gbc.writeMem(0x40cc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xefc9, gbc.sp());
        EXPECT(0x40ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 024E
        gbc.setState(0xea0a, 0x1505, 0xb840, 0xfa2a, 0xf2ca, 0x24a0, 0x1, 0x1);
        gbc.writeMem(0xea0a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1505, gbc.sp());
        EXPECT(0xea0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea0a));
        EXPECT(0xd0, gbc.readMem(0xea0b));
        // CB D0 024F
        gbc.setState(0xbafb, 0xd175, 0xf7f0, 0x92ea, 0x78cf, 0x2598, 0x1, 0x1);
        gbc.writeMem(0xbafb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd175, gbc.sp());
        EXPECT(0xbafd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbafb));
        EXPECT(0xd0, gbc.readMem(0xbafc));
        // CB D0 0250
        gbc.setState(0x6cc9, 0x73c7, 0x7b90, 0x32ae, 0xefd0, 0x46e1, 0x1, 0x1);
        gbc.writeMem(0x6cc9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x73c7, gbc.sp());
        EXPECT(0x6ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0251
        gbc.setState(0xc3f6, 0xde, 0xde90, 0x244, 0x97a1, 0x9fd6, 0x1, 0x1);
        gbc.writeMem(0xc3f6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xde, gbc.sp());
        EXPECT(0xc3f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3f6));
        EXPECT(0xd0, gbc.readMem(0xc3f7));
        // CB D0 0252
        gbc.setState(0x72ef, 0x8f22, 0xbd40, 0x3a65, 0xdad8, 0x5719, 0x1, 0x1);
        gbc.writeMem(0x72ef, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8f22, gbc.sp());
        EXPECT(0x72f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0253
        gbc.setState(0xb29f, 0x577a, 0x3280, 0x6e9a, 0x667a, 0x895c, 0x0, 0x1);
        gbc.writeMem(0xb29f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x577a, gbc.sp());
        EXPECT(0xb2a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb29f));
        EXPECT(0xd0, gbc.readMem(0xb2a0));
        // CB D0 0254
        gbc.setState(0xe8cb, 0xea62, 0x8ee0, 0xe6b3, 0x417e, 0xa0f5, 0x0, 0x1);
        gbc.writeMem(0xe8cb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xea62, gbc.sp());
        EXPECT(0xe8cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8cb));
        EXPECT(0xd0, gbc.readMem(0xe8cc));
        // CB D0 0255
        gbc.setState(0xef4f, 0xf2ff, 0x41d0, 0xd7cf, 0x7ae0, 0xf75f, 0x0, 0x1);
        gbc.writeMem(0xef4f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf2ff, gbc.sp());
        EXPECT(0xef51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef4f));
        EXPECT(0xd0, gbc.readMem(0xef50));
        // CB D0 0256
        gbc.setState(0x2fae, 0x8984, 0xedf0, 0xbd5e, 0x4c45, 0x8f43, 0x1, 0x0);
        gbc.writeMem(0x2fae, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8984, gbc.sp());
        EXPECT(0x2fb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0257
        gbc.setState(0x94a4, 0xa1a9, 0xb80, 0x1cc8, 0xd8c4, 0xcac2, 0x0, 0x1);
        gbc.writeMem(0x94a4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa1a9, gbc.sp());
        EXPECT(0x94a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94a4));
        EXPECT(0xd0, gbc.readMem(0x94a5));
        // CB D0 0258
        gbc.setState(0x165e, 0x8233, 0x2430, 0xdc76, 0x8884, 0x8265, 0x0, 0x1);
        gbc.writeMem(0x165e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8233, gbc.sp());
        EXPECT(0x1660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0259
        gbc.setState(0xcb5e, 0xa58, 0x7160, 0xe01f, 0xac76, 0xfb65, 0x1, 0x0);
        gbc.writeMem(0xcb5e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa58, gbc.sp());
        EXPECT(0xcb60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb5e));
        EXPECT(0xd0, gbc.readMem(0xcb5f));
        // CB D0 025A
        gbc.setState(0x8287, 0xb20d, 0xbe40, 0x4feb, 0x1cef, 0x37b2, 0x1, 0x1);
        gbc.writeMem(0x8287, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb20d, gbc.sp());
        EXPECT(0x8289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8287));
        EXPECT(0xd0, gbc.readMem(0x8288));
        // CB D0 025D
        gbc.setState(0x4b89, 0xe4f2, 0x4950, 0x5874, 0xf51f, 0x6f69, 0x0, 0x1);
        gbc.writeMem(0x4b89, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe4f2, gbc.sp());
        EXPECT(0x4b8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 025E
        gbc.setState(0x562, 0xcaf, 0xeda0, 0x3b9b, 0x1134, 0xac10, 0x0, 0x0);
        gbc.writeMem(0x562, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcaf, gbc.sp());
        EXPECT(0x564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 025F
        gbc.setState(0x9be7, 0xb45f, 0x9430, 0x3097, 0x4cdb, 0x4637, 0x1, 0x1);
        gbc.writeMem(0x9be7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb45f, gbc.sp());
        EXPECT(0x9be9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9be7));
        EXPECT(0xd0, gbc.readMem(0x9be8));
        // CB D0 0260
        gbc.setState(0x572b, 0x6779, 0xc5d0, 0x8b57, 0xbeb9, 0x6381, 0x1, 0x1);
        gbc.writeMem(0x572b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6779, gbc.sp());
        EXPECT(0x572d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0261
        gbc.setState(0x311e, 0xc861, 0xda20, 0xfe4e, 0x74eb, 0x8c22, 0x1, 0x0);
        gbc.writeMem(0x311e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc861, gbc.sp());
        EXPECT(0x3120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0262
        gbc.setState(0x320e, 0x15bf, 0x8370, 0xdaab, 0xf3bd, 0xc837, 0x1, 0x0);
        gbc.writeMem(0x320e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x15bf, gbc.sp());
        EXPECT(0x3210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0263
        gbc.setState(0x73a4, 0x4bc1, 0xb3f0, 0x6db, 0x6889, 0xa886, 0x1, 0x1);
        gbc.writeMem(0x73a4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4bc1, gbc.sp());
        EXPECT(0x73a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0264
        gbc.setState(0xe63, 0x5815, 0x9a50, 0x1cc0, 0xc80a, 0x4f22, 0x1, 0x0);
        gbc.writeMem(0xe63, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5815, gbc.sp());
        EXPECT(0xe65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0265
        gbc.setState(0x2196, 0xd92c, 0x8610, 0x6c39, 0xeb4, 0x9a60, 0x0, 0x0);
        gbc.writeMem(0x2196, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd92c, gbc.sp());
        EXPECT(0x2198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0266
        gbc.setState(0x57d, 0x317a, 0x7700, 0x7fef, 0x54ce, 0x38d4, 0x1, 0x1);
        gbc.writeMem(0x57d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x317a, gbc.sp());
        EXPECT(0x57f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0267
        gbc.setState(0xd6e5, 0x2baa, 0xd800, 0x89d2, 0x224d, 0xe060, 0x1, 0x1);
        gbc.writeMem(0xd6e5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2baa, gbc.sp());
        EXPECT(0xd6e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6e5));
        EXPECT(0xd0, gbc.readMem(0xd6e6));
        // CB D0 0268
        gbc.setState(0x1573, 0xe742, 0x90b0, 0xe09f, 0xd5d3, 0xf8d, 0x1, 0x1);
        gbc.writeMem(0x1573, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe742, gbc.sp());
        EXPECT(0x1575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0269
        gbc.setState(0x9183, 0xc1f5, 0x5a20, 0xdd6c, 0x306a, 0x588c, 0x0, 0x1);
        gbc.writeMem(0x9183, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc1f5, gbc.sp());
        EXPECT(0x9185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9183));
        EXPECT(0xd0, gbc.readMem(0x9184));
        // CB D0 026A
        gbc.setState(0xda77, 0xe086, 0x3ed0, 0x8c9a, 0xca88, 0xb308, 0x1, 0x0);
        gbc.writeMem(0xda77, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe086, gbc.sp());
        EXPECT(0xda79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda77));
        EXPECT(0xd0, gbc.readMem(0xda78));
        // CB D0 026B
        gbc.setState(0xd406, 0xa0d9, 0xe5a0, 0xd007, 0x7a34, 0xd002, 0x1, 0x1);
        gbc.writeMem(0xd406, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa0d9, gbc.sp());
        EXPECT(0xd408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd406));
        EXPECT(0xd0, gbc.readMem(0xd407));
        // CB D0 026C
        gbc.setState(0xbc13, 0x9324, 0x3b00, 0x9a74, 0x89b9, 0x8845, 0x0, 0x1);
        gbc.writeMem(0xbc13, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9324, gbc.sp());
        EXPECT(0xbc15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc13));
        EXPECT(0xd0, gbc.readMem(0xbc14));
        // CB D0 026D
        gbc.setState(0x867f, 0xaec1, 0xa340, 0xbe92, 0xa71b, 0x1aae, 0x1, 0x0);
        gbc.writeMem(0x867f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xaec1, gbc.sp());
        EXPECT(0x8681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x867f));
        EXPECT(0xd0, gbc.readMem(0x8680));
        // CB D0 026E
        gbc.setState(0x1350, 0x219, 0x51c0, 0x2d06, 0x173a, 0x4161, 0x1, 0x1);
        gbc.writeMem(0x1350, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x219, gbc.sp());
        EXPECT(0x1352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 026F
        gbc.setState(0x2658, 0x3b92, 0x2d0, 0x7ac0, 0x952, 0x1cae, 0x0, 0x0);
        gbc.writeMem(0x2658, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3b92, gbc.sp());
        EXPECT(0x265a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0271
        gbc.setState(0x8573, 0x8157, 0xbde0, 0x4bf4, 0x3b7a, 0x2977, 0x0, 0x1);
        gbc.writeMem(0x8573, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8157, gbc.sp());
        EXPECT(0x8575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8573));
        EXPECT(0xd0, gbc.readMem(0x8574));
        // CB D0 0272
        gbc.setState(0x2551, 0x8e26, 0x7d40, 0x947a, 0x2809, 0x21d9, 0x0, 0x1);
        gbc.writeMem(0x2551, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8e26, gbc.sp());
        EXPECT(0x2553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0273
        gbc.setState(0x563, 0xbfad, 0x8060, 0xd30e, 0xd6b5, 0x59f9, 0x0, 0x0);
        gbc.writeMem(0x563, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbfad, gbc.sp());
        EXPECT(0x565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0274
        gbc.setState(0x97a2, 0x6c0e, 0x2f70, 0xf32b, 0x97ba, 0x4b9c, 0x1, 0x1);
        gbc.writeMem(0x97a2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6c0e, gbc.sp());
        EXPECT(0x97a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97a2));
        EXPECT(0xd0, gbc.readMem(0x97a3));
        // CB D0 0275
        gbc.setState(0xdc81, 0x2456, 0x1c10, 0x1ea5, 0x72c2, 0x1705, 0x0, 0x1);
        gbc.writeMem(0xdc81, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2456, gbc.sp());
        EXPECT(0xdc83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc81));
        EXPECT(0xd0, gbc.readMem(0xdc82));
        // CB D0 0277
        gbc.setState(0x672b, 0x8357, 0x2ac0, 0x786, 0x580f, 0xf0ee, 0x1, 0x1);
        gbc.writeMem(0x672b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8357, gbc.sp());
        EXPECT(0x672d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0278
        gbc.setState(0x9667, 0x62a1, 0xc7e0, 0xfb54, 0x50b7, 0x6e96, 0x0, 0x1);
        gbc.writeMem(0x9667, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x62a1, gbc.sp());
        EXPECT(0x9669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9667));
        EXPECT(0xd0, gbc.readMem(0x9668));
        // CB D0 0279
        gbc.setState(0xdb9a, 0x4f74, 0xb360, 0x1fbf, 0xf2d, 0xddb9, 0x0, 0x1);
        gbc.writeMem(0xdb9a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4f74, gbc.sp());
        EXPECT(0xdb9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb9a));
        EXPECT(0xd0, gbc.readMem(0xdb9b));
        // CB D0 027A
        gbc.setState(0xb896, 0x22b7, 0x8f60, 0x158a, 0x2dc8, 0xbc59, 0x1, 0x0);
        gbc.writeMem(0xb896, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x22b7, gbc.sp());
        EXPECT(0xb898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb896));
        EXPECT(0xd0, gbc.readMem(0xb897));
        // CB D0 027B
        gbc.setState(0x1fe2, 0x2c3d, 0xa5c0, 0x61a4, 0xd738, 0xad11, 0x1, 0x1);
        gbc.writeMem(0x1fe2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2c3d, gbc.sp());
        EXPECT(0x1fe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 027C
        gbc.setState(0xbf0b, 0x67bb, 0x17d0, 0x6a04, 0x697d, 0xbdde, 0x1, 0x1);
        gbc.writeMem(0xbf0b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x67bb, gbc.sp());
        EXPECT(0xbf0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf0b));
        EXPECT(0xd0, gbc.readMem(0xbf0c));
        // CB D0 027D
        gbc.setState(0x529e, 0xc568, 0x6a0, 0xfa94, 0x4dee, 0x72b6, 0x0, 0x1);
        gbc.writeMem(0x529e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc568, gbc.sp());
        EXPECT(0x52a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 027E
        gbc.setState(0x5235, 0xe4ad, 0x92a0, 0x8cbe, 0x35fe, 0x5180, 0x1, 0x0);
        gbc.writeMem(0x5235, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe4ad, gbc.sp());
        EXPECT(0x5237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 027F
        gbc.setState(0x5730, 0xcec1, 0xd4d0, 0x1205, 0x7465, 0xa1dc, 0x1, 0x1);
        gbc.writeMem(0x5730, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcec1, gbc.sp());
        EXPECT(0x5732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0280
        gbc.setState(0x20ee, 0xfec5, 0xc390, 0xe093, 0xe92e, 0xc091, 0x1, 0x0);
        gbc.writeMem(0x20ee, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xfec5, gbc.sp());
        EXPECT(0x20f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0281
        gbc.setState(0xd32e, 0xf861, 0xc770, 0xee3d, 0x86b, 0x3156, 0x0, 0x0);
        gbc.writeMem(0xd32e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf861, gbc.sp());
        EXPECT(0xd330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32e));
        EXPECT(0xd0, gbc.readMem(0xd32f));
        // CB D0 0282
        gbc.setState(0x2976, 0xc5e4, 0xec30, 0x8f2e, 0x577f, 0xebe1, 0x0, 0x0);
        gbc.writeMem(0x2976, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc5e4, gbc.sp());
        EXPECT(0x2978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0283
        gbc.setState(0x40af, 0xaa38, 0xff60, 0xa14d, 0x822e, 0x4d49, 0x1, 0x1);
        gbc.writeMem(0x40af, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xaa38, gbc.sp());
        EXPECT(0x40b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0284
        gbc.setState(0x3df8, 0x663a, 0xf020, 0x4c79, 0x4fa0, 0x6584, 0x0, 0x0);
        gbc.writeMem(0x3df8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x663a, gbc.sp());
        EXPECT(0x3dfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0285
        gbc.setState(0xd494, 0xe1d8, 0xc390, 0xf82, 0x2c6b, 0x2ca7, 0x1, 0x1);
        gbc.writeMem(0xd494, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe1d8, gbc.sp());
        EXPECT(0xd496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd494));
        EXPECT(0xd0, gbc.readMem(0xd495));
        // CB D0 0286
        gbc.setState(0xce62, 0xcec1, 0x41f0, 0xc8e, 0xdb01, 0xc530, 0x0, 0x0);
        gbc.writeMem(0xce62, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xcec1, gbc.sp());
        EXPECT(0xce64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce62));
        EXPECT(0xd0, gbc.readMem(0xce63));
        // CB D0 0287
        gbc.setState(0xa227, 0x5528, 0x810, 0x6598, 0x158e, 0x1986, 0x1, 0x0);
        gbc.writeMem(0xa227, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5528, gbc.sp());
        EXPECT(0xa229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa227));
        EXPECT(0xd0, gbc.readMem(0xa228));
        // CB D0 0288
        gbc.setState(0xe7d5, 0x3ca6, 0x3820, 0x93b5, 0xfa01, 0x26a6, 0x1, 0x0);
        gbc.writeMem(0xe7d5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3ca6, gbc.sp());
        EXPECT(0xe7d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d5));
        EXPECT(0xd0, gbc.readMem(0xe7d6));
        // CB D0 0289
        gbc.setState(0xbc65, 0x30f9, 0xac10, 0xf939, 0x9b51, 0x3ea5, 0x1, 0x0);
        gbc.writeMem(0xbc65, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x30f9, gbc.sp());
        EXPECT(0xbc67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc65));
        EXPECT(0xd0, gbc.readMem(0xbc66));
        // CB D0 028A
        gbc.setState(0xe2ee, 0x722e, 0xd90, 0x254f, 0x54a9, 0xf64a, 0x0, 0x1);
        gbc.writeMem(0xe2ee, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x722e, gbc.sp());
        EXPECT(0xe2f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ee));
        EXPECT(0xd0, gbc.readMem(0xe2ef));
        // CB D0 028B
        gbc.setState(0xde65, 0xa035, 0x30, 0x7cd8, 0xfccc, 0x727, 0x1, 0x1);
        gbc.writeMem(0xde65, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa035, gbc.sp());
        EXPECT(0xde67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde65));
        EXPECT(0xd0, gbc.readMem(0xde66));
        // CB D0 028C
        gbc.setState(0x5c4f, 0x8999, 0x86f0, 0xaa7, 0x7d7f, 0x88fd, 0x1, 0x1);
        gbc.writeMem(0x5c4f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8999, gbc.sp());
        EXPECT(0x5c51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 028D
        gbc.setState(0xc72d, 0x5781, 0xa4a0, 0x82c3, 0xaa29, 0xa97c, 0x1, 0x0);
        gbc.writeMem(0xc72d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5781, gbc.sp());
        EXPECT(0xc72f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc72d));
        EXPECT(0xd0, gbc.readMem(0xc72e));
        // CB D0 028E
        gbc.setState(0x5692, 0xcfbf, 0x2c0, 0xbf45, 0xf9b, 0xb106, 0x1, 0x0);
        gbc.writeMem(0x5692, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xcfbf, gbc.sp());
        EXPECT(0x5694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 028F
        gbc.setState(0x90ce, 0xb9d1, 0x4ea0, 0xfb73, 0x5c41, 0x9c47, 0x1, 0x1);
        gbc.writeMem(0x90ce, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb9d1, gbc.sp());
        EXPECT(0x90d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90ce));
        EXPECT(0xd0, gbc.readMem(0x90cf));
        // CB D0 0290
        gbc.setState(0x8fd9, 0xc39f, 0x5230, 0x8185, 0x360a, 0x3d67, 0x1, 0x1);
        gbc.writeMem(0x8fd9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc39f, gbc.sp());
        EXPECT(0x8fdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fd9));
        EXPECT(0xd0, gbc.readMem(0x8fda));
        // CB D0 0291
        gbc.setState(0xa2e7, 0xf470, 0x3530, 0x87ea, 0x7055, 0x9b93, 0x1, 0x1);
        gbc.writeMem(0xa2e7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf470, gbc.sp());
        EXPECT(0xa2e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e7));
        EXPECT(0xd0, gbc.readMem(0xa2e8));
        // CB D0 0292
        gbc.setState(0xc455, 0x2aad, 0x6240, 0x77b0, 0xc866, 0x540c, 0x0, 0x1);
        gbc.writeMem(0xc455, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2aad, gbc.sp());
        EXPECT(0xc457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc455));
        EXPECT(0xd0, gbc.readMem(0xc456));
        // CB D0 0293
        gbc.setState(0x8193, 0x569d, 0x5f00, 0x48f5, 0x408c, 0x2ae5, 0x0, 0x0);
        gbc.writeMem(0x8193, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x569d, gbc.sp());
        EXPECT(0x8195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8193));
        EXPECT(0xd0, gbc.readMem(0x8194));
        // CB D0 0294
        gbc.setState(0xb091, 0x80f1, 0x30c0, 0x5638, 0x3c9d, 0x1316, 0x1, 0x0);
        gbc.writeMem(0xb091, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x80f1, gbc.sp());
        EXPECT(0xb093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb091));
        EXPECT(0xd0, gbc.readMem(0xb092));
        // CB D0 0295
        gbc.setState(0x89b2, 0x5db7, 0x3f20, 0x900f, 0xc105, 0x34af, 0x0, 0x1);
        gbc.writeMem(0x89b2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5db7, gbc.sp());
        EXPECT(0x89b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89b2));
        EXPECT(0xd0, gbc.readMem(0x89b3));
        // CB D0 0296
        gbc.setState(0x9d56, 0x5ad5, 0x2fb0, 0xc9, 0x2664, 0x19e4, 0x1, 0x0);
        gbc.writeMem(0x9d56, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5ad5, gbc.sp());
        EXPECT(0x9d58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d56));
        EXPECT(0xd0, gbc.readMem(0x9d57));
        // CB D0 0297
        gbc.setState(0x6130, 0xf6d9, 0xf9c0, 0x6e0b, 0x7098, 0xfaeb, 0x1, 0x1);
        gbc.writeMem(0x6130, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf6d9, gbc.sp());
        EXPECT(0x6132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0298
        gbc.setState(0xb4e6, 0xf19a, 0x52d0, 0xb4e1, 0x5617, 0x3bc1, 0x1, 0x0);
        gbc.writeMem(0xb4e6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf19a, gbc.sp());
        EXPECT(0xb4e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e6));
        EXPECT(0xd0, gbc.readMem(0xb4e7));
        // CB D0 029A
        gbc.setState(0xc0f2, 0xf8b2, 0xad90, 0xa0e, 0x8a02, 0xc63d, 0x0, 0x1);
        gbc.writeMem(0xc0f2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf8b2, gbc.sp());
        EXPECT(0xc0f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f2));
        EXPECT(0xd0, gbc.readMem(0xc0f3));
        // CB D0 029B
        gbc.setState(0x2d99, 0x166a, 0xfe80, 0xdb4b, 0x139b, 0xe3a4, 0x0, 0x1);
        gbc.writeMem(0x2d99, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x166a, gbc.sp());
        EXPECT(0x2d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 029C
        gbc.setState(0xcfa7, 0x1329, 0xe5c0, 0x7a23, 0x73ea, 0xb3f5, 0x0, 0x0);
        gbc.writeMem(0xcfa7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1329, gbc.sp());
        EXPECT(0xcfa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfa7));
        EXPECT(0xd0, gbc.readMem(0xcfa8));
        // CB D0 029D
        gbc.setState(0xa144, 0x703f, 0xad60, 0xc21f, 0x6c15, 0x5b0f, 0x0, 0x0);
        gbc.writeMem(0xa144, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x703f, gbc.sp());
        EXPECT(0xa146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa144));
        EXPECT(0xd0, gbc.readMem(0xa145));
        // CB D0 029E
        gbc.setState(0x42d2, 0xaf18, 0x3a40, 0xed42, 0x7e2, 0x8798, 0x1, 0x0);
        gbc.writeMem(0x42d2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xaf18, gbc.sp());
        EXPECT(0x42d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 029F
        gbc.setState(0x7401, 0x6f88, 0xab90, 0x6f21, 0xaaed, 0x362f, 0x0, 0x1);
        gbc.writeMem(0x7401, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6f88, gbc.sp());
        EXPECT(0x7403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02A0
        gbc.setState(0x9667, 0xbdf0, 0x7d0, 0xe2a6, 0x3322, 0x9511, 0x1, 0x1);
        gbc.writeMem(0x9667, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbdf0, gbc.sp());
        EXPECT(0x9669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9667));
        EXPECT(0xd0, gbc.readMem(0x9668));
        // CB D0 02A1
        gbc.setState(0xd520, 0xb54b, 0x62e0, 0x5eaa, 0x5b44, 0x27a2, 0x0, 0x1);
        gbc.writeMem(0xd520, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb54b, gbc.sp());
        EXPECT(0xd522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd520));
        EXPECT(0xd0, gbc.readMem(0xd521));
        // CB D0 02A2
        gbc.setState(0xba4a, 0x6fea, 0xba30, 0x4f08, 0xedb5, 0xfd0a, 0x1, 0x1);
        gbc.writeMem(0xba4a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6fea, gbc.sp());
        EXPECT(0xba4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba4a));
        EXPECT(0xd0, gbc.readMem(0xba4b));
        // CB D0 02A3
        gbc.setState(0x9074, 0xb0f8, 0x80c0, 0xa304, 0xef17, 0xff2a, 0x0, 0x1);
        gbc.writeMem(0x9074, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb0f8, gbc.sp());
        EXPECT(0x9076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9074));
        EXPECT(0xd0, gbc.readMem(0x9075));
        // CB D0 02A4
        gbc.setState(0x834c, 0xd2c7, 0xf470, 0xa0b, 0x1b85, 0x6f1d, 0x1, 0x1);
        gbc.writeMem(0x834c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd2c7, gbc.sp());
        EXPECT(0x834e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x834c));
        EXPECT(0xd0, gbc.readMem(0x834d));
        // CB D0 02A5
        gbc.setState(0xedaa, 0xfbd9, 0xb240, 0x9fab, 0x6b03, 0xacf7, 0x1, 0x1);
        gbc.writeMem(0xedaa, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfbd9, gbc.sp());
        EXPECT(0xedac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedaa));
        EXPECT(0xd0, gbc.readMem(0xedab));
        // CB D0 02A6
        gbc.setState(0x1680, 0x8b66, 0xd7a0, 0xef8a, 0xe3f0, 0xe81a, 0x0, 0x1);
        gbc.writeMem(0x1680, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8b66, gbc.sp());
        EXPECT(0x1682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02A7
        gbc.setState(0x78a0, 0x8731, 0x4750, 0x608d, 0x2aa8, 0x804d, 0x1, 0x1);
        gbc.writeMem(0x78a0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8731, gbc.sp());
        EXPECT(0x78a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02A9
        gbc.setState(0xbd4, 0xf1d, 0xba40, 0x8557, 0x1982, 0x832f, 0x1, 0x0);
        gbc.writeMem(0xbd4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf1d, gbc.sp());
        EXPECT(0xbd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02AA
        gbc.setState(0xd5e, 0x66c0, 0x6c50, 0xa73e, 0xe9d9, 0xb22e, 0x1, 0x0);
        gbc.writeMem(0xd5e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x66c0, gbc.sp());
        EXPECT(0xd60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02AB
        gbc.setState(0x68c4, 0x888, 0x4390, 0x6cb3, 0xbf57, 0xe524, 0x0, 0x1);
        gbc.writeMem(0x68c4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x888, gbc.sp());
        EXPECT(0x68c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02AC
        gbc.setState(0x8a39, 0xff8a, 0x7c80, 0x1f0d, 0xb561, 0x7562, 0x0, 0x1);
        gbc.writeMem(0x8a39, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xff8a, gbc.sp());
        EXPECT(0x8a3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a39));
        EXPECT(0xd0, gbc.readMem(0x8a3a));
        // CB D0 02AE
        gbc.setState(0x7f33, 0xb68, 0x7f10, 0x53f, 0x3802, 0xb2f3, 0x0, 0x1);
        gbc.writeMem(0x7f33, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb68, gbc.sp());
        EXPECT(0x7f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02AF
        gbc.setState(0x9800, 0x94f7, 0x8f70, 0x4683, 0xe918, 0xbc3e, 0x0, 0x0);
        gbc.writeMem(0x9800, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x94f7, gbc.sp());
        EXPECT(0x9802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9800));
        EXPECT(0xd0, gbc.readMem(0x9801));
        // CB D0 02B0
        gbc.setState(0x4edb, 0x8dfd, 0x4dd0, 0x3150, 0x9895, 0x554b, 0x0, 0x0);
        gbc.writeMem(0x4edb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8dfd, gbc.sp());
        EXPECT(0x4edd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02B1
        gbc.setState(0x3a7e, 0x6874, 0x2c60, 0xa3c5, 0x99e1, 0xfdb3, 0x0, 0x0);
        gbc.writeMem(0x3a7e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6874, gbc.sp());
        EXPECT(0x3a80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02B2
        gbc.setState(0x9314, 0x4bfe, 0x4580, 0x5153, 0xf2e2, 0x2d58, 0x0, 0x1);
        gbc.writeMem(0x9314, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4bfe, gbc.sp());
        EXPECT(0x9316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9314));
        EXPECT(0xd0, gbc.readMem(0x9315));
        // CB D0 02B3
        gbc.setState(0x61a5, 0x46ad, 0xe0d0, 0xd714, 0x9997, 0x247d, 0x1, 0x0);
        gbc.writeMem(0x61a5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x46ad, gbc.sp());
        EXPECT(0x61a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02B4
        gbc.setState(0xdd2b, 0xc13a, 0x8ed0, 0xb760, 0xcf4a, 0xd01, 0x0, 0x0);
        gbc.writeMem(0xdd2b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc13a, gbc.sp());
        EXPECT(0xdd2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd2b));
        EXPECT(0xd0, gbc.readMem(0xdd2c));
        // CB D0 02B5
        gbc.setState(0x209a, 0x765a, 0x3ba0, 0x7246, 0xad09, 0x5c7c, 0x0, 0x1);
        gbc.writeMem(0x209a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x765a, gbc.sp());
        EXPECT(0x209c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02B6
        gbc.setState(0xc796, 0xdabd, 0x4f00, 0xdf9c, 0x475b, 0xc65f, 0x1, 0x1);
        gbc.writeMem(0xc796, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xdabd, gbc.sp());
        EXPECT(0xc798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc796));
        EXPECT(0xd0, gbc.readMem(0xc797));
        // CB D0 02B7
        gbc.setState(0x16f8, 0x8ee, 0xbef0, 0xe7f2, 0x7367, 0x3db6, 0x1, 0x0);
        gbc.writeMem(0x16f8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8ee, gbc.sp());
        EXPECT(0x16fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02B8
        gbc.setState(0x1bc8, 0x426e, 0xde0, 0x6419, 0xe116, 0x2808, 0x0, 0x1);
        gbc.writeMem(0x1bc8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x426e, gbc.sp());
        EXPECT(0x1bca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02BA
        gbc.setState(0x1528, 0x1721, 0x5530, 0x5960, 0x398, 0x2b60, 0x1, 0x0);
        gbc.writeMem(0x1528, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1721, gbc.sp());
        EXPECT(0x152a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02BB
        gbc.setState(0x67e9, 0x3732, 0x30f0, 0x6b6a, 0xff32, 0x73cb, 0x1, 0x1);
        gbc.writeMem(0x67e9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3732, gbc.sp());
        EXPECT(0x67eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02BC
        gbc.setState(0x1f04, 0x7fbf, 0x81d0, 0x19e2, 0x85f, 0xc114, 0x1, 0x0);
        gbc.writeMem(0x1f04, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7fbf, gbc.sp());
        EXPECT(0x1f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02BD
        gbc.setState(0x4c66, 0x54ad, 0xbf90, 0x2554, 0xfc49, 0x8922, 0x0, 0x1);
        gbc.writeMem(0x4c66, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x54ad, gbc.sp());
        EXPECT(0x4c68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02BE
        gbc.setState(0x392, 0xac44, 0x790, 0xf5e1, 0xfeb2, 0xfd96, 0x0, 0x0);
        gbc.writeMem(0x392, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xac44, gbc.sp());
        EXPECT(0x394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02BF
        gbc.setState(0xa104, 0x8d68, 0x3660, 0xb65c, 0x8c49, 0x1c97, 0x1, 0x1);
        gbc.writeMem(0xa104, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8d68, gbc.sp());
        EXPECT(0xa106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa104));
        EXPECT(0xd0, gbc.readMem(0xa105));
        // CB D0 02C0
        gbc.setState(0xe889, 0x81de, 0xbfc0, 0xa132, 0xd73d, 0x1d02, 0x0, 0x1);
        gbc.writeMem(0xe889, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x81de, gbc.sp());
        EXPECT(0xe88b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe889));
        EXPECT(0xd0, gbc.readMem(0xe88a));
        // CB D0 02C1
        gbc.setState(0x2f45, 0x7313, 0xd40, 0x8319, 0x710b, 0x5fa, 0x1, 0x1);
        gbc.writeMem(0x2f45, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7313, gbc.sp());
        EXPECT(0x2f47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02C2
        gbc.setState(0xd212, 0xcae2, 0xa620, 0x75b7, 0x352e, 0xd594, 0x1, 0x1);
        gbc.writeMem(0xd212, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcae2, gbc.sp());
        EXPECT(0xd214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd212));
        EXPECT(0xd0, gbc.readMem(0xd213));
        // CB D0 02C3
        gbc.setState(0x5df2, 0xf6a0, 0xb8a0, 0x18ac, 0x6186, 0x412, 0x1, 0x1);
        gbc.writeMem(0x5df2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf6a0, gbc.sp());
        EXPECT(0x5df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02C4
        gbc.setState(0x6272, 0x759b, 0xdb80, 0xe4f5, 0xbde7, 0x2f51, 0x1, 0x1);
        gbc.writeMem(0x6272, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x759b, gbc.sp());
        EXPECT(0x6274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02C5
        gbc.setState(0xb82a, 0xa55c, 0x7010, 0x9b0d, 0xf1da, 0x3094, 0x1, 0x1);
        gbc.writeMem(0xb82a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa55c, gbc.sp());
        EXPECT(0xb82c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb82a));
        EXPECT(0xd0, gbc.readMem(0xb82b));
        // CB D0 02C6
        gbc.setState(0x12f0, 0xe9c3, 0x8c10, 0xb558, 0x6d49, 0xe4a3, 0x0, 0x1);
        gbc.writeMem(0x12f0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe9c3, gbc.sp());
        EXPECT(0x12f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02C7
        gbc.setState(0xaf43, 0xeafe, 0xe840, 0xc6ea, 0x31fb, 0x140f, 0x0, 0x0);
        gbc.writeMem(0xaf43, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xeafe, gbc.sp());
        EXPECT(0xaf45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf43));
        EXPECT(0xd0, gbc.readMem(0xaf44));
        // CB D0 02C8
        gbc.setState(0x6bb1, 0xa99c, 0x6ef0, 0xea50, 0x3b4c, 0xa, 0x0, 0x1);
        gbc.writeMem(0x6bb1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa99c, gbc.sp());
        EXPECT(0x6bb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02C9
        gbc.setState(0xc515, 0x786f, 0x6b30, 0x5c9, 0x1696, 0xe2aa, 0x0, 0x1);
        gbc.writeMem(0xc515, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x786f, gbc.sp());
        EXPECT(0xc517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc515));
        EXPECT(0xd0, gbc.readMem(0xc516));
        // CB D0 02CB
        gbc.setState(0x9972, 0xbd4, 0x80, 0x6e74, 0xa8be, 0x9a83, 0x1, 0x0);
        gbc.writeMem(0x9972, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbd4, gbc.sp());
        EXPECT(0x9974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9972));
        EXPECT(0xd0, gbc.readMem(0x9973));
        // CB D0 02CC
        gbc.setState(0x7123, 0x9393, 0xe280, 0xa337, 0x6436, 0x960, 0x0, 0x1);
        gbc.writeMem(0x7123, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9393, gbc.sp());
        EXPECT(0x7125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02CD
        gbc.setState(0xd47a, 0x4c62, 0xcad0, 0x8a42, 0x1632, 0xe724, 0x1, 0x0);
        gbc.writeMem(0xd47a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4c62, gbc.sp());
        EXPECT(0xd47c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd47a));
        EXPECT(0xd0, gbc.readMem(0xd47b));
        // CB D0 02CE
        gbc.setState(0x31cb, 0x7bda, 0xc60, 0x9f39, 0xf9d5, 0xc6de, 0x1, 0x0);
        gbc.writeMem(0x31cb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7bda, gbc.sp());
        EXPECT(0x31cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02CF
        gbc.setState(0x1cd7, 0x45c9, 0x2050, 0x38aa, 0xf7e4, 0x61ab, 0x1, 0x0);
        gbc.writeMem(0x1cd7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x45c9, gbc.sp());
        EXPECT(0x1cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02D0
        gbc.setState(0x49fa, 0x8119, 0x4580, 0xc45a, 0x4806, 0x4bfc, 0x1, 0x1);
        gbc.writeMem(0x49fa, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8119, gbc.sp());
        EXPECT(0x49fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02D1
        gbc.setState(0xd31d, 0x6bfe, 0x7140, 0xe85e, 0x16b1, 0x2911, 0x0, 0x1);
        gbc.writeMem(0xd31d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6bfe, gbc.sp());
        EXPECT(0xd31f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd31d));
        EXPECT(0xd0, gbc.readMem(0xd31e));
        // CB D0 02D2
        gbc.setState(0x4036, 0xc5e0, 0xd9c0, 0xae64, 0x36ca, 0x2428, 0x0, 0x1);
        gbc.writeMem(0x4036, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc5e0, gbc.sp());
        EXPECT(0x4038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02D3
        gbc.setState(0xe088, 0xe460, 0xa7b0, 0x3371, 0x7b31, 0xf864, 0x0, 0x0);
        gbc.writeMem(0xe088, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe460, gbc.sp());
        EXPECT(0xe08a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe088));
        EXPECT(0xd0, gbc.readMem(0xe089));
        // CB D0 02D4
        gbc.setState(0xac7c, 0xb118, 0x28d0, 0xcfb4, 0x8255, 0xce4c, 0x0, 0x0);
        gbc.writeMem(0xac7c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb118, gbc.sp());
        EXPECT(0xac7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac7c));
        EXPECT(0xd0, gbc.readMem(0xac7d));
        // CB D0 02D5
        gbc.setState(0x796c, 0xfaec, 0x2ad0, 0xe41c, 0x5027, 0x22d7, 0x1, 0x1);
        gbc.writeMem(0x796c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfaec, gbc.sp());
        EXPECT(0x796e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02D6
        gbc.setState(0x36db, 0xf606, 0xfea0, 0xd844, 0x9748, 0x1751, 0x0, 0x1);
        gbc.writeMem(0x36db, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf606, gbc.sp());
        EXPECT(0x36dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02D7
        gbc.setState(0xdf6b, 0xd5fb, 0xb580, 0xb97b, 0x5862, 0xb99c, 0x0, 0x0);
        gbc.writeMem(0xdf6b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd5fb, gbc.sp());
        EXPECT(0xdf6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf6b));
        EXPECT(0xd0, gbc.readMem(0xdf6c));
        // CB D0 02D8
        gbc.setState(0x5edd, 0xfe61, 0xe880, 0x47af, 0x22eb, 0x2984, 0x1, 0x0);
        gbc.writeMem(0x5edd, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfe61, gbc.sp());
        EXPECT(0x5edf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02D9
        gbc.setState(0x77f0, 0x1e68, 0xae0, 0xa88d, 0x5fcf, 0x8b95, 0x1, 0x0);
        gbc.writeMem(0x77f0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1e68, gbc.sp());
        EXPECT(0x77f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02DA
        gbc.setState(0xb2f1, 0xda8b, 0x2960, 0x7c83, 0xfaef, 0xba22, 0x0, 0x0);
        gbc.writeMem(0xb2f1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xda8b, gbc.sp());
        EXPECT(0xb2f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f1));
        EXPECT(0xd0, gbc.readMem(0xb2f2));
        // CB D0 02DB
        gbc.setState(0x277f, 0xbd40, 0xed00, 0x5dae, 0x132c, 0x37ec, 0x1, 0x0);
        gbc.writeMem(0x277f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbd40, gbc.sp());
        EXPECT(0x2781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02DC
        gbc.setState(0x661f, 0x3bb, 0xb380, 0xbf06, 0xd1ae, 0xfaf9, 0x1, 0x0);
        gbc.writeMem(0x661f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3bb, gbc.sp());
        EXPECT(0x6621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02DD
        gbc.setState(0x31ab, 0x913f, 0x12f0, 0xe03e, 0xd71a, 0x424d, 0x1, 0x0);
        gbc.writeMem(0x31ab, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x913f, gbc.sp());
        EXPECT(0x31ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02DE
        gbc.setState(0x4b31, 0x7946, 0xd60, 0x902b, 0xa361, 0x5d3f, 0x0, 0x0);
        gbc.writeMem(0x4b31, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7946, gbc.sp());
        EXPECT(0x4b33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02DF
        gbc.setState(0x3b7, 0xe5b6, 0xe20, 0xd9eb, 0xbaff, 0x93d1, 0x1, 0x1);
        gbc.writeMem(0x3b7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe5b6, gbc.sp());
        EXPECT(0x3b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02E0
        gbc.setState(0xb4fe, 0xfe72, 0xdf30, 0x29d6, 0xeec0, 0xcf3b, 0x0, 0x0);
        gbc.writeMem(0xb4fe, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfe72, gbc.sp());
        EXPECT(0xb500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4fe));
        EXPECT(0xd0, gbc.readMem(0xb4ff));
        // CB D0 02E1
        gbc.setState(0x6f88, 0x8062, 0x8530, 0xa37, 0xef11, 0xc281, 0x0, 0x0);
        gbc.writeMem(0x6f88, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8062, gbc.sp());
        EXPECT(0x6f8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02E2
        gbc.setState(0x232e, 0x12f1, 0x9f10, 0x152e, 0x59c7, 0x27be, 0x1, 0x0);
        gbc.writeMem(0x232e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x12f1, gbc.sp());
        EXPECT(0x2330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02E3
        gbc.setState(0xb304, 0xa0a3, 0x9630, 0xbede, 0x9d2c, 0xe617, 0x0, 0x0);
        gbc.writeMem(0xb304, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa0a3, gbc.sp());
        EXPECT(0xb306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb304));
        EXPECT(0xd0, gbc.readMem(0xb305));
        // CB D0 02E4
        gbc.setState(0xcd06, 0x1310, 0xdc20, 0xddcb, 0x4b2f, 0xa43, 0x1, 0x0);
        gbc.writeMem(0xcd06, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1310, gbc.sp());
        EXPECT(0xcd08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd06));
        EXPECT(0xd0, gbc.readMem(0xcd07));
        // CB D0 02E5
        gbc.setState(0x3d70, 0x628e, 0x3000, 0x6c2e, 0x3b9d, 0xff5c, 0x1, 0x1);
        gbc.writeMem(0x3d70, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x628e, gbc.sp());
        EXPECT(0x3d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02E6
        gbc.setState(0x14e4, 0x60ff, 0xa820, 0xeec2, 0xbe73, 0x479d, 0x0, 0x0);
        gbc.writeMem(0x14e4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x60ff, gbc.sp());
        EXPECT(0x14e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02E7
        gbc.setState(0xbb15, 0x717d, 0x5ec0, 0x20cc, 0xc071, 0x2b56, 0x1, 0x0);
        gbc.writeMem(0xbb15, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x717d, gbc.sp());
        EXPECT(0xbb17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb15));
        EXPECT(0xd0, gbc.readMem(0xbb16));
        // CB D0 02E8
        gbc.setState(0xafaa, 0x13c2, 0x2570, 0xb8bb, 0xac0e, 0xd023, 0x1, 0x0);
        gbc.writeMem(0xafaa, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x13c2, gbc.sp());
        EXPECT(0xafac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafaa));
        EXPECT(0xd0, gbc.readMem(0xafab));
        // CB D0 02E9
        gbc.setState(0x2d98, 0xdfe3, 0x5010, 0x94ee, 0x1e3c, 0xe970, 0x0, 0x0);
        gbc.writeMem(0x2d98, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xdfe3, gbc.sp());
        EXPECT(0x2d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02EA
        gbc.setState(0x8ff3, 0xe749, 0xd940, 0xe8cb, 0xdf46, 0x70ab, 0x1, 0x0);
        gbc.writeMem(0x8ff3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe749, gbc.sp());
        EXPECT(0x8ff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ff3));
        EXPECT(0xd0, gbc.readMem(0x8ff4));
        // CB D0 02EB
        gbc.setState(0x6b04, 0xbf2b, 0x4f00, 0x476f, 0xaacc, 0x1b2a, 0x1, 0x1);
        gbc.writeMem(0x6b04, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xbf2b, gbc.sp());
        EXPECT(0x6b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02EC
        gbc.setState(0xf57, 0x94d2, 0xf9e0, 0x1838, 0x86e3, 0x280b, 0x0, 0x1);
        gbc.writeMem(0xf57, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x94d2, gbc.sp());
        EXPECT(0xf59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02ED
        gbc.setState(0xc59d, 0xc154, 0x2ce0, 0x8533, 0xcd9b, 0x18df, 0x1, 0x1);
        gbc.writeMem(0xc59d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc154, gbc.sp());
        EXPECT(0xc59f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc59d));
        EXPECT(0xd0, gbc.readMem(0xc59e));
        // CB D0 02EE
        gbc.setState(0x8305, 0xa408, 0x2910, 0x1512, 0xaac8, 0xcba6, 0x1, 0x1);
        gbc.writeMem(0x8305, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa408, gbc.sp());
        EXPECT(0x8307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8305));
        EXPECT(0xd0, gbc.readMem(0x8306));
        // CB D0 02EF
        gbc.setState(0x456a, 0x5a43, 0x6cb0, 0xc163, 0x8996, 0x13f1, 0x0, 0x1);
        gbc.writeMem(0x456a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5a43, gbc.sp());
        EXPECT(0x456c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02F0
        gbc.setState(0xd653, 0x360a, 0x94d0, 0xa3ef, 0x8ef4, 0x4534, 0x1, 0x1);
        gbc.writeMem(0xd653, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x360a, gbc.sp());
        EXPECT(0xd655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd653));
        EXPECT(0xd0, gbc.readMem(0xd654));
        // CB D0 02F1
        gbc.setState(0xa932, 0x573d, 0xc60, 0x66bb, 0x613, 0x14ff, 0x0, 0x1);
        gbc.writeMem(0xa932, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x573d, gbc.sp());
        EXPECT(0xa934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa932));
        EXPECT(0xd0, gbc.readMem(0xa933));
        // CB D0 02F2
        gbc.setState(0x1890, 0xc3e4, 0x6030, 0x4870, 0x2502, 0xdb7a, 0x0, 0x1);
        gbc.writeMem(0x1890, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc3e4, gbc.sp());
        EXPECT(0x1892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02F5
        gbc.setState(0x7f25, 0xe5c9, 0x8040, 0x8ccd, 0x7702, 0x7477, 0x0, 0x0);
        gbc.writeMem(0x7f25, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe5c9, gbc.sp());
        EXPECT(0x7f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02F7
        gbc.setState(0x151e, 0x5970, 0xd470, 0x17bb, 0x5907, 0xc8f7, 0x0, 0x1);
        gbc.writeMem(0x151e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5970, gbc.sp());
        EXPECT(0x1520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02F8
        gbc.setState(0x311d, 0x6ba0, 0x48d0, 0xe92e, 0x3cd1, 0x7a71, 0x0, 0x0);
        gbc.writeMem(0x311d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6ba0, gbc.sp());
        EXPECT(0x311f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02F9
        gbc.setState(0xb8a7, 0x614a, 0xebf0, 0xc100, 0xd98c, 0x68f7, 0x1, 0x1);
        gbc.writeMem(0xb8a7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x614a, gbc.sp());
        EXPECT(0xb8a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a7));
        EXPECT(0xd0, gbc.readMem(0xb8a8));
        // CB D0 02FA
        gbc.setState(0x1ea5, 0x7bb, 0x4460, 0x3c4a, 0xf206, 0xf177, 0x1, 0x1);
        gbc.writeMem(0x1ea5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7bb, gbc.sp());
        EXPECT(0x1ea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02FB
        gbc.setState(0x5b8a, 0xbb61, 0xa450, 0x18fb, 0x2b02, 0x67ac, 0x0, 0x0);
        gbc.writeMem(0x5b8a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbb61, gbc.sp());
        EXPECT(0x5b8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 02FC
        gbc.setState(0x8f96, 0x5e94, 0xfe40, 0xd3d9, 0x2c57, 0xef5d, 0x1, 0x1);
        gbc.writeMem(0x8f96, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5e94, gbc.sp());
        EXPECT(0x8f98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f96));
        EXPECT(0xd0, gbc.readMem(0x8f97));
        // CB D0 02FD
        gbc.setState(0x50e0, 0x225e, 0x40c0, 0x3d5c, 0x4eca, 0xb41b, 0x1, 0x1);
        gbc.writeMem(0x50e0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x225e, gbc.sp());
        EXPECT(0x50e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 02FE
        gbc.setState(0xbfb7, 0x38f4, 0xe840, 0x5bd6, 0xf2f4, 0x952c, 0x0, 0x0);
        gbc.writeMem(0xbfb7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x38f4, gbc.sp());
        EXPECT(0xbfb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfb7));
        EXPECT(0xd0, gbc.readMem(0xbfb8));
        // CB D0 02FF
        gbc.setState(0xdb87, 0x1a6e, 0xe3c0, 0x665d, 0x2888, 0xa46f, 0x1, 0x0);
        gbc.writeMem(0xdb87, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1a6e, gbc.sp());
        EXPECT(0xdb89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb87));
        EXPECT(0xd0, gbc.readMem(0xdb88));
        // CB D0 0300
        gbc.setState(0xd534, 0xbf46, 0xd9c0, 0xa748, 0x8dbe, 0x5232, 0x0, 0x0);
        gbc.writeMem(0xd534, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbf46, gbc.sp());
        EXPECT(0xd536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd534));
        EXPECT(0xd0, gbc.readMem(0xd535));
        // CB D0 0301
        gbc.setState(0xce85, 0x53b5, 0xd610, 0x4c57, 0x913d, 0x843c, 0x1, 0x0);
        gbc.writeMem(0xce85, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x53b5, gbc.sp());
        EXPECT(0xce87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce85));
        EXPECT(0xd0, gbc.readMem(0xce86));
        // CB D0 0302
        gbc.setState(0xc964, 0xe9ff, 0xd8b0, 0xa2f8, 0x31b2, 0x5097, 0x0, 0x1);
        gbc.writeMem(0xc964, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe9ff, gbc.sp());
        EXPECT(0xc966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc964));
        EXPECT(0xd0, gbc.readMem(0xc965));
        // CB D0 0303
        gbc.setState(0x7814, 0x5146, 0x2ad0, 0xab9b, 0xa435, 0x7d5d, 0x1, 0x1);
        gbc.writeMem(0x7814, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5146, gbc.sp());
        EXPECT(0x7816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0305
        gbc.setState(0xe4d3, 0xabf2, 0x1810, 0xf2a4, 0xcff3, 0x1df9, 0x0, 0x1);
        gbc.writeMem(0xe4d3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xabf2, gbc.sp());
        EXPECT(0xe4d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4d3));
        EXPECT(0xd0, gbc.readMem(0xe4d4));
        // CB D0 0306
        gbc.setState(0xeb27, 0x5cb3, 0x370, 0x2382, 0x592f, 0x1bf3, 0x1, 0x0);
        gbc.writeMem(0xeb27, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5cb3, gbc.sp());
        EXPECT(0xeb29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb27));
        EXPECT(0xd0, gbc.readMem(0xeb28));
        // CB D0 0307
        gbc.setState(0xac26, 0x5bd3, 0x5260, 0x7bcc, 0x4346, 0xa358, 0x1, 0x1);
        gbc.writeMem(0xac26, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5bd3, gbc.sp());
        EXPECT(0xac28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac26));
        EXPECT(0xd0, gbc.readMem(0xac27));
        // CB D0 0309
        gbc.setState(0x857f, 0x2e97, 0x7bf0, 0x67cf, 0x4769, 0x4302, 0x0, 0x0);
        gbc.writeMem(0x857f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2e97, gbc.sp());
        EXPECT(0x8581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x857f));
        EXPECT(0xd0, gbc.readMem(0x8580));
        // CB D0 030A
        gbc.setState(0xeabb, 0xb58e, 0x1000, 0x3c05, 0xd7d8, 0x17e1, 0x0, 0x1);
        gbc.writeMem(0xeabb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb58e, gbc.sp());
        EXPECT(0xeabd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeabb));
        EXPECT(0xd0, gbc.readMem(0xeabc));
        // CB D0 030B
        gbc.setState(0x5d55, 0x2563, 0x1810, 0x4d96, 0xefce, 0x4be, 0x0, 0x1);
        gbc.writeMem(0x5d55, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2563, gbc.sp());
        EXPECT(0x5d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 030C
        gbc.setState(0x7e1b, 0xd7ce, 0x7200, 0x653e, 0x381f, 0x2abc, 0x1, 0x1);
        gbc.writeMem(0x7e1b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd7ce, gbc.sp());
        EXPECT(0x7e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 030D
        gbc.setState(0x2f8d, 0x2e6, 0x6e10, 0x6bdf, 0x99ec, 0xf00c, 0x0, 0x0);
        gbc.writeMem(0x2f8d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2e6, gbc.sp());
        EXPECT(0x2f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 030E
        gbc.setState(0xe4ae, 0x936a, 0x580, 0xe89c, 0x22fc, 0x649a, 0x1, 0x0);
        gbc.writeMem(0xe4ae, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x936a, gbc.sp());
        EXPECT(0xe4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ae));
        EXPECT(0xd0, gbc.readMem(0xe4af));
        // CB D0 030F
        gbc.setState(0x438a, 0x63c6, 0x8530, 0x98e3, 0x50e0, 0x1a17, 0x1, 0x0);
        gbc.writeMem(0x438a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x63c6, gbc.sp());
        EXPECT(0x438c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0310
        gbc.setState(0xa521, 0xa296, 0x1f10, 0x6a7, 0x539d, 0x8638, 0x0, 0x1);
        gbc.writeMem(0xa521, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa296, gbc.sp());
        EXPECT(0xa523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa521));
        EXPECT(0xd0, gbc.readMem(0xa522));
        // CB D0 0311
        gbc.setState(0x678e, 0x406, 0x21c0, 0xb3bd, 0x6e96, 0x6ccb, 0x1, 0x1);
        gbc.writeMem(0x678e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x406, gbc.sp());
        EXPECT(0x6790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0312
        gbc.setState(0x231b, 0x7560, 0x2f40, 0xa6ef, 0xd9ac, 0x96f0, 0x1, 0x0);
        gbc.writeMem(0x231b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7560, gbc.sp());
        EXPECT(0x231d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0313
        gbc.setState(0xb185, 0x9e0e, 0xae20, 0xdd7c, 0x5403, 0x87c3, 0x0, 0x1);
        gbc.writeMem(0xb185, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9e0e, gbc.sp());
        EXPECT(0xb187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb185));
        EXPECT(0xd0, gbc.readMem(0xb186));
        // CB D0 0314
        gbc.setState(0xaf49, 0x486b, 0xaea0, 0x2a0, 0xccf2, 0xec96, 0x0, 0x1);
        gbc.writeMem(0xaf49, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x486b, gbc.sp());
        EXPECT(0xaf4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf49));
        EXPECT(0xd0, gbc.readMem(0xaf4a));
        // CB D0 0315
        gbc.setState(0xb0f3, 0xcb26, 0x4de0, 0x1f9d, 0xb1aa, 0x1fa, 0x1, 0x0);
        gbc.writeMem(0xb0f3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xcb26, gbc.sp());
        EXPECT(0xb0f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0f3));
        EXPECT(0xd0, gbc.readMem(0xb0f4));
        // CB D0 0316
        gbc.setState(0x96d8, 0x1c, 0xc330, 0x7791, 0x42c6, 0xf995, 0x1, 0x1);
        gbc.writeMem(0x96d8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1c, gbc.sp());
        EXPECT(0x96da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d8));
        EXPECT(0xd0, gbc.readMem(0x96d9));
        // CB D0 0317
        gbc.setState(0x4bd0, 0x819f, 0x82b0, 0x731c, 0x8966, 0x7e52, 0x1, 0x0);
        gbc.writeMem(0x4bd0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x819f, gbc.sp());
        EXPECT(0x4bd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0318
        gbc.setState(0xb467, 0x8b0b, 0xc3c0, 0xb111, 0xbf80, 0xa05b, 0x0, 0x0);
        gbc.writeMem(0xb467, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8b0b, gbc.sp());
        EXPECT(0xb469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb467));
        EXPECT(0xd0, gbc.readMem(0xb468));
        // CB D0 0319
        gbc.setState(0xb7aa, 0xe6ba, 0x350, 0x6dc8, 0xa84f, 0x731c, 0x1, 0x1);
        gbc.writeMem(0xb7aa, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe6ba, gbc.sp());
        EXPECT(0xb7ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7aa));
        EXPECT(0xd0, gbc.readMem(0xb7ab));
        // CB D0 031A
        gbc.setState(0x2cfa, 0x1413, 0x3d10, 0x30b0, 0xe64d, 0xec3a, 0x0, 0x0);
        gbc.writeMem(0x2cfa, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1413, gbc.sp());
        EXPECT(0x2cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 031B
        gbc.setState(0x9e68, 0x73e3, 0x2b20, 0x90df, 0x43c6, 0xe913, 0x0, 0x0);
        gbc.writeMem(0x9e68, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x73e3, gbc.sp());
        EXPECT(0x9e6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e68));
        EXPECT(0xd0, gbc.readMem(0x9e69));
        // CB D0 031C
        gbc.setState(0xa046, 0x89ec, 0x4b80, 0x7f25, 0xa6a9, 0xa0fd, 0x0, 0x1);
        gbc.writeMem(0xa046, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x89ec, gbc.sp());
        EXPECT(0xa048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa046));
        EXPECT(0xd0, gbc.readMem(0xa047));
        // CB D0 031E
        gbc.setState(0x2767, 0x2373, 0x2210, 0xf669, 0x46e7, 0xe68b, 0x1, 0x1);
        gbc.writeMem(0x2767, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2373, gbc.sp());
        EXPECT(0x2769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 031F
        gbc.setState(0xc, 0xcbe7, 0xd560, 0x7998, 0x262, 0x87a3, 0x1, 0x1);
        gbc.writeMem(0xc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xcbe7, gbc.sp());
        EXPECT(0xe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0320
        gbc.setState(0x9b5a, 0x3ff5, 0x5c00, 0xefa6, 0x48b7, 0xa17d, 0x1, 0x0);
        gbc.writeMem(0x9b5a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3ff5, gbc.sp());
        EXPECT(0x9b5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b5a));
        EXPECT(0xd0, gbc.readMem(0x9b5b));
        // CB D0 0321
        gbc.setState(0xc12b, 0x81f5, 0x3f50, 0xc2dd, 0xfd33, 0xd40f, 0x1, 0x0);
        gbc.writeMem(0xc12b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x81f5, gbc.sp());
        EXPECT(0xc12d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc12b));
        EXPECT(0xd0, gbc.readMem(0xc12c));
        // CB D0 0322
        gbc.setState(0x812c, 0x1be8, 0x7490, 0x161d, 0x9c28, 0x2fe4, 0x1, 0x0);
        gbc.writeMem(0x812c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1be8, gbc.sp());
        EXPECT(0x812e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x812c));
        EXPECT(0xd0, gbc.readMem(0x812d));
        // CB D0 0323
        gbc.setState(0x7cec, 0xbbac, 0xc430, 0x573b, 0xb20e, 0x6980, 0x1, 0x0);
        gbc.writeMem(0x7cec, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbbac, gbc.sp());
        EXPECT(0x7cee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0324
        gbc.setState(0xa504, 0x4cfe, 0xc3d0, 0x638f, 0xa1b2, 0x71fe, 0x1, 0x0);
        gbc.writeMem(0xa504, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4cfe, gbc.sp());
        EXPECT(0xa506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa504));
        EXPECT(0xd0, gbc.readMem(0xa505));
        // CB D0 0325
        gbc.setState(0x45e4, 0x1a3b, 0xd350, 0x5185, 0x3d9f, 0x96f4, 0x0, 0x0);
        gbc.writeMem(0x45e4, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1a3b, gbc.sp());
        EXPECT(0x45e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0326
        gbc.setState(0xee70, 0xf2c8, 0xc10, 0xed72, 0xedef, 0x477, 0x1, 0x0);
        gbc.writeMem(0xee70, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf2c8, gbc.sp());
        EXPECT(0xee72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee70));
        EXPECT(0xd0, gbc.readMem(0xee71));
        // CB D0 0327
        gbc.setState(0xb7ad, 0x44a6, 0x2fe0, 0x83b5, 0xb756, 0x1c40, 0x1, 0x1);
        gbc.writeMem(0xb7ad, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x44a6, gbc.sp());
        EXPECT(0xb7af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ad));
        EXPECT(0xd0, gbc.readMem(0xb7ae));
        // CB D0 0328
        gbc.setState(0x5d1b, 0x4169, 0x5c0, 0x8972, 0x96e5, 0xb0c2, 0x0, 0x1);
        gbc.writeMem(0x5d1b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4169, gbc.sp());
        EXPECT(0x5d1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0329
        gbc.setState(0xe5e3, 0xee31, 0x7210, 0xef54, 0xf3bf, 0x4c75, 0x1, 0x1);
        gbc.writeMem(0xe5e3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xee31, gbc.sp());
        EXPECT(0xe5e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5e3));
        EXPECT(0xd0, gbc.readMem(0xe5e4));
        // CB D0 032A
        gbc.setState(0x5dde, 0xed47, 0x44d0, 0x66c5, 0xf5d0, 0xba0e, 0x0, 0x0);
        gbc.writeMem(0x5dde, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xed47, gbc.sp());
        EXPECT(0x5de0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 032B
        gbc.setState(0x4a3c, 0xd9ad, 0xbee0, 0x8472, 0x5936, 0xb63, 0x0, 0x1);
        gbc.writeMem(0x4a3c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd9ad, gbc.sp());
        EXPECT(0x4a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 032C
        gbc.setState(0x3448, 0xe017, 0xe390, 0xe62c, 0x9803, 0xbc3d, 0x1, 0x1);
        gbc.writeMem(0x3448, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe017, gbc.sp());
        EXPECT(0x344a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 032D
        gbc.setState(0xe89a, 0xe6f5, 0xe510, 0x9e04, 0x38c7, 0xe9e0, 0x1, 0x1);
        gbc.writeMem(0xe89a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe6f5, gbc.sp());
        EXPECT(0xe89c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe89a));
        EXPECT(0xd0, gbc.readMem(0xe89b));
        // CB D0 032E
        gbc.setState(0xdcc7, 0x6f62, 0xfca0, 0x9e0e, 0x1dc4, 0x45cc, 0x1, 0x0);
        gbc.writeMem(0xdcc7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6f62, gbc.sp());
        EXPECT(0xdcc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcc7));
        EXPECT(0xd0, gbc.readMem(0xdcc8));
        // CB D0 032F
        gbc.setState(0x748c, 0xff83, 0x9200, 0xfb2a, 0xa72c, 0x42, 0x1, 0x0);
        gbc.writeMem(0x748c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xff83, gbc.sp());
        EXPECT(0x748e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0330
        gbc.setState(0xb537, 0xd450, 0xc590, 0xc197, 0x2e35, 0x3dec, 0x0, 0x1);
        gbc.writeMem(0xb537, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd450, gbc.sp());
        EXPECT(0xb539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb537));
        EXPECT(0xd0, gbc.readMem(0xb538));
        // CB D0 0331
        gbc.setState(0x53a6, 0xfd82, 0x8660, 0x3f41, 0x40bf, 0x257b, 0x0, 0x0);
        gbc.writeMem(0x53a6, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfd82, gbc.sp());
        EXPECT(0x53a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0332
        gbc.setState(0xbecb, 0x3df2, 0x380, 0x45e, 0xb82f, 0x8f4a, 0x1, 0x1);
        gbc.writeMem(0xbecb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3df2, gbc.sp());
        EXPECT(0xbecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbecb));
        EXPECT(0xd0, gbc.readMem(0xbecc));
        // CB D0 0333
        gbc.setState(0x90b7, 0xeae1, 0x3060, 0xdd4c, 0xf290, 0xf0e9, 0x0, 0x0);
        gbc.writeMem(0x90b7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xeae1, gbc.sp());
        EXPECT(0x90b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90b7));
        EXPECT(0xd0, gbc.readMem(0x90b8));
        // CB D0 0335
        gbc.setState(0x6b63, 0x6157, 0x8740, 0xa572, 0x872f, 0x4cb0, 0x0, 0x1);
        gbc.writeMem(0x6b63, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6157, gbc.sp());
        EXPECT(0x6b65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0336
        gbc.setState(0x24ce, 0x6cf2, 0x1e10, 0x1310, 0x6cfb, 0x9920, 0x1, 0x1);
        gbc.writeMem(0x24ce, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6cf2, gbc.sp());
        EXPECT(0x24d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0338
        gbc.setState(0xa51b, 0x4cb, 0xc450, 0x3a7a, 0x429d, 0x183d, 0x1, 0x1);
        gbc.writeMem(0xa51b, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4cb, gbc.sp());
        EXPECT(0xa51d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa51b));
        EXPECT(0xd0, gbc.readMem(0xa51c));
        // CB D0 0339
        gbc.setState(0xc5a2, 0x6fff, 0x1530, 0x861b, 0xd6b0, 0xd8a, 0x1, 0x1);
        gbc.writeMem(0xc5a2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6fff, gbc.sp());
        EXPECT(0xc5a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5a2));
        EXPECT(0xd0, gbc.readMem(0xc5a3));
        // CB D0 033A
        gbc.setState(0x21bb, 0x929, 0xf150, 0xdfb1, 0xffa8, 0xc659, 0x0, 0x1);
        gbc.writeMem(0x21bb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x929, gbc.sp());
        EXPECT(0x21bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 033B
        gbc.setState(0xea22, 0x7256, 0x2bb0, 0xad60, 0xb7cb, 0x8d4f, 0x0, 0x1);
        gbc.writeMem(0xea22, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7256, gbc.sp());
        EXPECT(0xea24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea22));
        EXPECT(0xd0, gbc.readMem(0xea23));
        // CB D0 033C
        gbc.setState(0x5f8a, 0xd0ae, 0x1800, 0x2e47, 0xa0ad, 0x6d09, 0x0, 0x0);
        gbc.writeMem(0x5f8a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd0ae, gbc.sp());
        EXPECT(0x5f8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 033D
        gbc.setState(0x96f0, 0x8f74, 0x5450, 0xa84e, 0x301a, 0x6d15, 0x0, 0x0);
        gbc.writeMem(0x96f0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8f74, gbc.sp());
        EXPECT(0x96f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f0));
        EXPECT(0xd0, gbc.readMem(0x96f1));
        // CB D0 033E
        gbc.setState(0x95db, 0x80a, 0x28f0, 0x6bcd, 0xb2fa, 0x1456, 0x0, 0x1);
        gbc.writeMem(0x95db, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x80a, gbc.sp());
        EXPECT(0x95dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95db));
        EXPECT(0xd0, gbc.readMem(0x95dc));
        // CB D0 0340
        gbc.setState(0x5a56, 0xc974, 0x1c00, 0xfdde, 0xa9f6, 0x11c3, 0x0, 0x0);
        gbc.writeMem(0x5a56, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc974, gbc.sp());
        EXPECT(0x5a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0341
        gbc.setState(0xb04, 0xaa1c, 0xda10, 0xa39f, 0x58c2, 0xd04a, 0x1, 0x0);
        gbc.writeMem(0xb04, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xaa1c, gbc.sp());
        EXPECT(0xb06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0342
        gbc.setState(0x7a11, 0xd66, 0x18b0, 0x386d, 0xcfc1, 0x9676, 0x1, 0x1);
        gbc.writeMem(0x7a11, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd66, gbc.sp());
        EXPECT(0x7a13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0343
        gbc.setState(0x39ac, 0xc7b7, 0x6540, 0xf251, 0x2ca7, 0xcfec, 0x0, 0x0);
        gbc.writeMem(0x39ac, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc7b7, gbc.sp());
        EXPECT(0x39ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0344
        gbc.setState(0x9ff0, 0x3b99, 0x7b0, 0x38f7, 0x9353, 0xeee, 0x0, 0x1);
        gbc.writeMem(0x9ff0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3b99, gbc.sp());
        EXPECT(0x9ff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ff0));
        EXPECT(0xd0, gbc.readMem(0x9ff1));
        // CB D0 0345
        gbc.setState(0x8e01, 0xbcbe, 0x2930, 0x533b, 0x499c, 0xef94, 0x1, 0x0);
        gbc.writeMem(0x8e01, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbcbe, gbc.sp());
        EXPECT(0x8e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e01));
        EXPECT(0xd0, gbc.readMem(0x8e02));
        // CB D0 0346
        gbc.setState(0x78d2, 0xb709, 0xf500, 0x8d20, 0xb91a, 0xd26f, 0x1, 0x1);
        gbc.writeMem(0x78d2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb709, gbc.sp());
        EXPECT(0x78d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0347
        gbc.setState(0x8eb3, 0xdc61, 0x9450, 0x32a, 0xdc8f, 0x65b7, 0x0, 0x1);
        gbc.writeMem(0x8eb3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdc61, gbc.sp());
        EXPECT(0x8eb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eb3));
        EXPECT(0xd0, gbc.readMem(0x8eb4));
        // CB D0 0348
        gbc.setState(0x462a, 0x8859, 0xda10, 0x616c, 0x7670, 0x469f, 0x1, 0x0);
        gbc.writeMem(0x462a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8859, gbc.sp());
        EXPECT(0x462c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0349
        gbc.setState(0x9fa7, 0x2aaa, 0xd1e0, 0xe7ce, 0x2cdf, 0x5b47, 0x0, 0x1);
        gbc.writeMem(0x9fa7, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2aaa, gbc.sp());
        EXPECT(0x9fa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fa7));
        EXPECT(0xd0, gbc.readMem(0x9fa8));
        // CB D0 034A
        gbc.setState(0x19b3, 0xea05, 0xc940, 0x4648, 0x3136, 0xe7d3, 0x0, 0x1);
        gbc.writeMem(0x19b3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xea05, gbc.sp());
        EXPECT(0x19b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 034B
        gbc.setState(0x66e5, 0xc355, 0x8410, 0xd2e3, 0x7310, 0x3d82, 0x1, 0x0);
        gbc.writeMem(0x66e5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc355, gbc.sp());
        EXPECT(0x66e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 034D
        gbc.setState(0xa3e9, 0xf60e, 0xc100, 0x5884, 0x85eb, 0x77, 0x0, 0x1);
        gbc.writeMem(0xa3e9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf60e, gbc.sp());
        EXPECT(0xa3eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3e9));
        EXPECT(0xd0, gbc.readMem(0xa3ea));
        // CB D0 034E
        gbc.setState(0x148f, 0xaa1e, 0x3540, 0x8f31, 0xfa25, 0x221b, 0x0, 0x0);
        gbc.writeMem(0x148f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xaa1e, gbc.sp());
        EXPECT(0x1491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 034F
        gbc.setState(0xb902, 0xdd20, 0xd7c0, 0x6b6b, 0x4ca1, 0x38af, 0x0, 0x1);
        gbc.writeMem(0xb902, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xdd20, gbc.sp());
        EXPECT(0xb904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb902));
        EXPECT(0xd0, gbc.readMem(0xb903));
        // CB D0 0350
        gbc.setState(0xea5f, 0xea97, 0xb6c0, 0xa384, 0x6419, 0x6bc2, 0x0, 0x0);
        gbc.writeMem(0xea5f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xea97, gbc.sp());
        EXPECT(0xea61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea5f));
        EXPECT(0xd0, gbc.readMem(0xea60));
        // CB D0 0351
        gbc.setState(0x4341, 0x57ce, 0x6a90, 0x1c50, 0xcdb3, 0x9539, 0x0, 0x0);
        gbc.writeMem(0x4341, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x57ce, gbc.sp());
        EXPECT(0x4343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0352
        gbc.setState(0x99f5, 0xa498, 0xcae0, 0x557d, 0x1a1f, 0x14b2, 0x1, 0x1);
        gbc.writeMem(0x99f5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa498, gbc.sp());
        EXPECT(0x99f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99f5));
        EXPECT(0xd0, gbc.readMem(0x99f6));
        // CB D0 0353
        gbc.setState(0x8718, 0x72ae, 0x4b50, 0x9494, 0x26ca, 0x18b6, 0x1, 0x0);
        gbc.writeMem(0x8718, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x72ae, gbc.sp());
        EXPECT(0x871a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8718));
        EXPECT(0xd0, gbc.readMem(0x8719));
        // CB D0 0354
        gbc.setState(0x993e, 0xb7f0, 0xf530, 0x7fa0, 0x2f23, 0x2dd0, 0x1, 0x1);
        gbc.writeMem(0x993e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb7f0, gbc.sp());
        EXPECT(0x9940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x993e));
        EXPECT(0xd0, gbc.readMem(0x993f));
        // CB D0 0356
        gbc.setState(0x59f0, 0x1e9b, 0xc600, 0xb03b, 0x280f, 0xda9a, 0x0, 0x0);
        gbc.writeMem(0x59f0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1e9b, gbc.sp());
        EXPECT(0x59f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0357
        gbc.setState(0xd6a0, 0x9a75, 0xb6f0, 0x889f, 0x8437, 0x9a3e, 0x1, 0x0);
        gbc.writeMem(0xd6a0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9a75, gbc.sp());
        EXPECT(0xd6a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6a0));
        EXPECT(0xd0, gbc.readMem(0xd6a1));
        // CB D0 0358
        gbc.setState(0x4bc, 0xb8db, 0x4300, 0x383b, 0x4d1f, 0x71c4, 0x1, 0x1);
        gbc.writeMem(0x4bc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb8db, gbc.sp());
        EXPECT(0x4be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0359
        gbc.setState(0xccc, 0x1445, 0x4cb0, 0x73d9, 0x8757, 0xef65, 0x0, 0x1);
        gbc.writeMem(0xccc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1445, gbc.sp());
        EXPECT(0xcce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 035A
        gbc.setState(0xdd8a, 0xc2b2, 0x9b10, 0x5849, 0x2f4, 0x43ce, 0x0, 0x0);
        gbc.writeMem(0xdd8a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc2b2, gbc.sp());
        EXPECT(0xdd8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd8a));
        EXPECT(0xd0, gbc.readMem(0xdd8b));
        // CB D0 035B
        gbc.setState(0x791e, 0x858e, 0x5f0, 0x2bbf, 0x4fcf, 0x1367, 0x0, 0x0);
        gbc.writeMem(0x791e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x858e, gbc.sp());
        EXPECT(0x7920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 035C
        gbc.setState(0x86be, 0xc82, 0x4c0, 0xb710, 0xad65, 0x774, 0x1, 0x0);
        gbc.writeMem(0x86be, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc82, gbc.sp());
        EXPECT(0x86c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86be));
        EXPECT(0xd0, gbc.readMem(0x86bf));
        // CB D0 035D
        gbc.setState(0x1a25, 0x3b5b, 0x4700, 0x5b19, 0x8f45, 0x7be3, 0x1, 0x1);
        gbc.writeMem(0x1a25, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3b5b, gbc.sp());
        EXPECT(0x1a27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 035E
        gbc.setState(0xc628, 0x8d35, 0x800, 0x2be, 0x3a6c, 0x1655, 0x0, 0x0);
        gbc.writeMem(0xc628, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8d35, gbc.sp());
        EXPECT(0xc62a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc628));
        EXPECT(0xd0, gbc.readMem(0xc629));
        // CB D0 035F
        gbc.setState(0xd9e3, 0xbd02, 0xbcd0, 0x18bb, 0x57, 0xf6eb, 0x0, 0x0);
        gbc.writeMem(0xd9e3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xbd02, gbc.sp());
        EXPECT(0xd9e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e3));
        EXPECT(0xd0, gbc.readMem(0xd9e4));
        // CB D0 0360
        gbc.setState(0x50b0, 0xe506, 0xa0c0, 0xaff5, 0xea8c, 0xda62, 0x0, 0x1);
        gbc.writeMem(0x50b0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe506, gbc.sp());
        EXPECT(0x50b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0362
        gbc.setState(0xb70e, 0xa535, 0xcbf0, 0xf269, 0x3f8b, 0x831b, 0x1, 0x0);
        gbc.writeMem(0xb70e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa535, gbc.sp());
        EXPECT(0xb710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb70e));
        EXPECT(0xd0, gbc.readMem(0xb70f));
        // CB D0 0363
        gbc.setState(0x4d0, 0x5384, 0xd370, 0xbb26, 0xaea1, 0x6ab0, 0x1, 0x1);
        gbc.writeMem(0x4d0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5384, gbc.sp());
        EXPECT(0x4d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0364
        gbc.setState(0xe00f, 0x7b57, 0xe920, 0xe3db, 0xdee0, 0xa9ed, 0x1, 0x1);
        gbc.writeMem(0xe00f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7b57, gbc.sp());
        EXPECT(0xe011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe00f));
        EXPECT(0xd0, gbc.readMem(0xe010));
        // CB D0 0365
        gbc.setState(0xc428, 0x5873, 0xbc50, 0x8a84, 0xc6d, 0x97d8, 0x1, 0x1);
        gbc.writeMem(0xc428, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5873, gbc.sp());
        EXPECT(0xc42a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc428));
        EXPECT(0xd0, gbc.readMem(0xc429));
        // CB D0 0366
        gbc.setState(0x8f77, 0xa88f, 0x5180, 0x8038, 0x1ae1, 0x6060, 0x0, 0x1);
        gbc.writeMem(0x8f77, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa88f, gbc.sp());
        EXPECT(0x8f79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f77));
        EXPECT(0xd0, gbc.readMem(0x8f78));
        // CB D0 0367
        gbc.setState(0x1c8f, 0x2245, 0x48d0, 0xdef8, 0x378b, 0xb535, 0x1, 0x1);
        gbc.writeMem(0x1c8f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2245, gbc.sp());
        EXPECT(0x1c91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0368
        gbc.setState(0x1a5e, 0x7fb5, 0x44a0, 0xdbcc, 0x8e06, 0x68aa, 0x1, 0x0);
        gbc.writeMem(0x1a5e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7fb5, gbc.sp());
        EXPECT(0x1a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0369
        gbc.setState(0x59e9, 0x6f2f, 0x5340, 0xe7ee, 0xac62, 0xd8e2, 0x1, 0x1);
        gbc.writeMem(0x59e9, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6f2f, gbc.sp());
        EXPECT(0x59eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 036A
        gbc.setState(0xba2e, 0xebbf, 0xc2f0, 0xa82e, 0xa794, 0xe8f9, 0x0, 0x0);
        gbc.writeMem(0xba2e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xebbf, gbc.sp());
        EXPECT(0xba30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba2e));
        EXPECT(0xd0, gbc.readMem(0xba2f));
        // CB D0 036B
        gbc.setState(0x7997, 0x2b31, 0x68e0, 0x6d7b, 0x7c76, 0x62fa, 0x0, 0x0);
        gbc.writeMem(0x7997, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2b31, gbc.sp());
        EXPECT(0x7999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 036C
        gbc.setState(0x5d6d, 0xfa32, 0xb640, 0xe480, 0x23c7, 0x5088, 0x1, 0x1);
        gbc.writeMem(0x5d6d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xfa32, gbc.sp());
        EXPECT(0x5d6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 036D
        gbc.setState(0x3556, 0xb1c4, 0x98a0, 0xc5d0, 0x825e, 0xec7d, 0x0, 0x1);
        gbc.writeMem(0x3556, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb1c4, gbc.sp());
        EXPECT(0x3558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 036E
        gbc.setState(0xbb3e, 0x1d9c, 0x1af0, 0x7cd2, 0xb116, 0x1775, 0x0, 0x0);
        gbc.writeMem(0xbb3e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1d9c, gbc.sp());
        EXPECT(0xbb40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb3e));
        EXPECT(0xd0, gbc.readMem(0xbb3f));
        // CB D0 036F
        gbc.setState(0xcbe5, 0x7c5d, 0xe920, 0xa210, 0x64d8, 0x919c, 0x0, 0x1);
        gbc.writeMem(0xcbe5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7c5d, gbc.sp());
        EXPECT(0xcbe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbe5));
        EXPECT(0xd0, gbc.readMem(0xcbe6));
        // CB D0 0370
        gbc.setState(0x8b1d, 0x9a57, 0xcea0, 0x31f4, 0x7fec, 0xbdbb, 0x0, 0x1);
        gbc.writeMem(0x8b1d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9a57, gbc.sp());
        EXPECT(0x8b1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b1d));
        EXPECT(0xd0, gbc.readMem(0x8b1e));
        // CB D0 0371
        gbc.setState(0x5ac, 0x8e62, 0x9210, 0xfbfb, 0x6c61, 0x9d6d, 0x0, 0x1);
        gbc.writeMem(0x5ac, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8e62, gbc.sp());
        EXPECT(0x5ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0373
        gbc.setState(0x24dd, 0x5cc7, 0xfc50, 0xb9eb, 0xe208, 0xf096, 0x1, 0x0);
        gbc.writeMem(0x24dd, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5cc7, gbc.sp());
        EXPECT(0x24df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0374
        gbc.setState(0x5b91, 0xd228, 0xd1f0, 0xc4bb, 0x3476, 0x2939, 0x0, 0x1);
        gbc.writeMem(0x5b91, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd228, gbc.sp());
        EXPECT(0x5b93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0375
        gbc.setState(0xa620, 0x64d, 0xf430, 0x8d47, 0x5a73, 0xdeaa, 0x1, 0x1);
        gbc.writeMem(0xa620, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x64d, gbc.sp());
        EXPECT(0xa622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa620));
        EXPECT(0xd0, gbc.readMem(0xa621));
        // CB D0 0376
        gbc.setState(0x6cee, 0xe06e, 0xe670, 0xa7e, 0xad99, 0xb763, 0x0, 0x1);
        gbc.writeMem(0x6cee, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe06e, gbc.sp());
        EXPECT(0x6cf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0377
        gbc.setState(0x3733, 0x9dc2, 0x8b70, 0x5f14, 0x307d, 0x91eb, 0x1, 0x1);
        gbc.writeMem(0x3733, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9dc2, gbc.sp());
        EXPECT(0x3735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0378
        gbc.setState(0x13bb, 0x36b3, 0xe2b0, 0x36f1, 0x67f0, 0x8ecd, 0x0, 0x1);
        gbc.writeMem(0x13bb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x36b3, gbc.sp());
        EXPECT(0x13bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0379
        gbc.setState(0xa691, 0xc57a, 0xb9f0, 0x7ecb, 0x19eb, 0xb67d, 0x0, 0x1);
        gbc.writeMem(0xa691, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc57a, gbc.sp());
        EXPECT(0xa693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa691));
        EXPECT(0xd0, gbc.readMem(0xa692));
        // CB D0 037B
        gbc.setState(0x48bc, 0x908b, 0x2b40, 0xdefd, 0xf7c2, 0xb75, 0x1, 0x1);
        gbc.writeMem(0x48bc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x908b, gbc.sp());
        EXPECT(0x48be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 037C
        gbc.setState(0x3904, 0x54a3, 0xd350, 0xab7, 0x139b, 0x32ed, 0x1, 0x1);
        gbc.writeMem(0x3904, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x54a3, gbc.sp());
        EXPECT(0x3906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 037D
        gbc.setState(0x56c1, 0x8454, 0x69b0, 0xf7f3, 0x6135, 0x9ff9, 0x0, 0x0);
        gbc.writeMem(0x56c1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8454, gbc.sp());
        EXPECT(0x56c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 037E
        gbc.setState(0xeb2, 0xe187, 0xe620, 0x4502, 0x9116, 0xa97e, 0x0, 0x0);
        gbc.writeMem(0xeb2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe187, gbc.sp());
        EXPECT(0xeb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 037F
        gbc.setState(0x9377, 0x9874, 0x8200, 0x679b, 0x638e, 0x9ce8, 0x0, 0x1);
        gbc.writeMem(0x9377, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9874, gbc.sp());
        EXPECT(0x9379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9377));
        EXPECT(0xd0, gbc.readMem(0x9378));
        // CB D0 0380
        gbc.setState(0x3ca8, 0x98, 0xb800, 0xd29f, 0xdd27, 0x2c21, 0x0, 0x0);
        gbc.writeMem(0x3ca8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x98, gbc.sp());
        EXPECT(0x3caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0381
        gbc.setState(0x1efe, 0xc5ef, 0x5dc0, 0xe29a, 0x6a71, 0x980e, 0x0, 0x1);
        gbc.writeMem(0x1efe, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc5ef, gbc.sp());
        EXPECT(0x1f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0382
        gbc.setState(0x5707, 0xb065, 0x7a30, 0x5d05, 0xc6bf, 0x3970, 0x0, 0x0);
        gbc.writeMem(0x5707, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb065, gbc.sp());
        EXPECT(0x5709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0383
        gbc.setState(0x8075, 0x3a5a, 0x5db0, 0xe577, 0xef40, 0x709b, 0x0, 0x1);
        gbc.writeMem(0x8075, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3a5a, gbc.sp());
        EXPECT(0x8077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8075));
        EXPECT(0xd0, gbc.readMem(0x8076));
        // CB D0 0384
        gbc.setState(0x816a, 0xd853, 0x8c90, 0x9f02, 0xb3c9, 0x5958, 0x0, 0x1);
        gbc.writeMem(0x816a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd853, gbc.sp());
        EXPECT(0x816c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x816a));
        EXPECT(0xd0, gbc.readMem(0x816b));
        // CB D0 0385
        gbc.setState(0xc415, 0x334f, 0x2060, 0x5ea8, 0xa089, 0xf7bf, 0x1, 0x1);
        gbc.writeMem(0xc415, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x334f, gbc.sp());
        EXPECT(0xc417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc415));
        EXPECT(0xd0, gbc.readMem(0xc416));
        // CB D0 0386
        gbc.setState(0x55ca, 0xf40d, 0xcc30, 0x17f3, 0x9ea1, 0x27ec, 0x0, 0x1);
        gbc.writeMem(0x55ca, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf40d, gbc.sp());
        EXPECT(0x55cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0387
        gbc.setState(0x2e86, 0xfd36, 0x56e0, 0xa1d7, 0xa1fc, 0x258e, 0x0, 0x0);
        gbc.writeMem(0x2e86, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xfd36, gbc.sp());
        EXPECT(0x2e88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0388
        gbc.setState(0xa576, 0x3572, 0x68e0, 0x348f, 0x54c7, 0xa0e9, 0x1, 0x0);
        gbc.writeMem(0xa576, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3572, gbc.sp());
        EXPECT(0xa578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa576));
        EXPECT(0xd0, gbc.readMem(0xa577));
        // CB D0 0389
        gbc.setState(0x7c2a, 0x1b70, 0xd0b0, 0x2744, 0x75b, 0x30a4, 0x0, 0x1);
        gbc.writeMem(0x7c2a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1b70, gbc.sp());
        EXPECT(0x7c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 038A
        gbc.setState(0x1c30, 0x4de9, 0x9f0, 0x4100, 0x2722, 0xae63, 0x0, 0x0);
        gbc.writeMem(0x1c30, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4de9, gbc.sp());
        EXPECT(0x1c32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 038B
        gbc.setState(0xdcb3, 0xcdc8, 0x8590, 0x7395, 0x8ad4, 0x6faf, 0x0, 0x0);
        gbc.writeMem(0xdcb3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcdc8, gbc.sp());
        EXPECT(0xdcb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb3));
        EXPECT(0xd0, gbc.readMem(0xdcb4));
        // CB D0 038C
        gbc.setState(0x30a3, 0x1776, 0x1840, 0xe689, 0xdb4c, 0x3c94, 0x1, 0x1);
        gbc.writeMem(0x30a3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1776, gbc.sp());
        EXPECT(0x30a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 038D
        gbc.setState(0xb292, 0xb507, 0x8700, 0x4941, 0x1621, 0x45c4, 0x0, 0x1);
        gbc.writeMem(0xb292, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb507, gbc.sp());
        EXPECT(0xb294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb292));
        EXPECT(0xd0, gbc.readMem(0xb293));
        // CB D0 038E
        gbc.setState(0x4691, 0x69ac, 0xd2a0, 0x6705, 0xc97a, 0xaf04, 0x0, 0x1);
        gbc.writeMem(0x4691, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x69ac, gbc.sp());
        EXPECT(0x4693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 038F
        gbc.setState(0x6402, 0x296d, 0x1930, 0x32d3, 0xec18, 0x1b4b, 0x0, 0x1);
        gbc.writeMem(0x6402, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x296d, gbc.sp());
        EXPECT(0x6404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 0390
        gbc.setState(0xd771, 0xa807, 0x37a0, 0xab5a, 0x8850, 0xd7cc, 0x1, 0x1);
        gbc.writeMem(0xd771, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa807, gbc.sp());
        EXPECT(0xd773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd771));
        EXPECT(0xd0, gbc.readMem(0xd772));
        // CB D0 0391
        gbc.setState(0x7d05, 0x323c, 0xfba0, 0x949, 0xaefa, 0xb9fd, 0x1, 0x1);
        gbc.writeMem(0x7d05, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x323c, gbc.sp());
        EXPECT(0x7d07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0392
        gbc.setState(0x64ce, 0x7414, 0x3860, 0xa20e, 0x5257, 0xa4df, 0x0, 0x1);
        gbc.writeMem(0x64ce, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7414, gbc.sp());
        EXPECT(0x64d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 0393
        gbc.setState(0xe076, 0x900b, 0x310, 0x63f7, 0xe169, 0x2c2f, 0x1, 0x0);
        gbc.writeMem(0xe076, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x900b, gbc.sp());
        EXPECT(0xe078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe076));
        EXPECT(0xd0, gbc.readMem(0xe077));
        // CB D0 0394
        gbc.setState(0x90c8, 0xbb7c, 0xb650, 0xf24f, 0xcde8, 0x79e, 0x1, 0x1);
        gbc.writeMem(0x90c8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbb7c, gbc.sp());
        EXPECT(0x90ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90c8));
        EXPECT(0xd0, gbc.readMem(0x90c9));
        // CB D0 0395
        gbc.setState(0xa1d3, 0xc66e, 0xf430, 0x677e, 0xf01c, 0x9083, 0x0, 0x0);
        gbc.writeMem(0xa1d3, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc66e, gbc.sp());
        EXPECT(0xa1d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d3));
        EXPECT(0xd0, gbc.readMem(0xa1d4));
        // CB D0 0396
        gbc.setState(0xe715, 0x2551, 0x41f0, 0x2938, 0xc05a, 0x7ad5, 0x0, 0x1);
        gbc.writeMem(0xe715, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2551, gbc.sp());
        EXPECT(0xe717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe715));
        EXPECT(0xd0, gbc.readMem(0xe716));
        // CB D0 0397
        gbc.setState(0xc280, 0x7639, 0xf3a0, 0x3303, 0x3a51, 0x5141, 0x1, 0x0);
        gbc.writeMem(0xc280, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7639, gbc.sp());
        EXPECT(0xc282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc280));
        EXPECT(0xd0, gbc.readMem(0xc281));
        // CB D0 0398
        gbc.setState(0xec89, 0xdabf, 0xc50, 0x8172, 0x56ec, 0xa67c, 0x0, 0x1);
        gbc.writeMem(0xec89, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdabf, gbc.sp());
        EXPECT(0xec8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec89));
        EXPECT(0xd0, gbc.readMem(0xec8a));
        // CB D0 0399
        gbc.setState(0xcb2d, 0xf646, 0x1530, 0x4de5, 0xcb4b, 0xb975, 0x1, 0x1);
        gbc.writeMem(0xcb2d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf646, gbc.sp());
        EXPECT(0xcb2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb2d));
        EXPECT(0xd0, gbc.readMem(0xcb2e));
        // CB D0 039A
        gbc.setState(0x6111, 0x80c8, 0x0, 0xafa4, 0x4b46, 0x52c8, 0x1, 0x1);
        gbc.writeMem(0x6111, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x80c8, gbc.sp());
        EXPECT(0x6113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 039C
        gbc.setState(0x4729, 0xd3da, 0x970, 0xc5c8, 0xb294, 0x3e2, 0x1, 0x1);
        gbc.writeMem(0x4729, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd3da, gbc.sp());
        EXPECT(0x472b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 039D
        gbc.setState(0xed67, 0xa4b7, 0xc7e0, 0xfba7, 0xaa2d, 0x6683, 0x0, 0x0);
        gbc.writeMem(0xed67, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa4b7, gbc.sp());
        EXPECT(0xed69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed67));
        EXPECT(0xd0, gbc.readMem(0xed68));
        // CB D0 039E
        gbc.setState(0x5b77, 0x90b3, 0x8b50, 0xa23d, 0x5f02, 0x4e56, 0x0, 0x1);
        gbc.writeMem(0x5b77, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x90b3, gbc.sp());
        EXPECT(0x5b79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 039F
        gbc.setState(0x1168, 0x1038, 0x8c50, 0x28bf, 0x2aab, 0x2071, 0x0, 0x1);
        gbc.writeMem(0x1168, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1038, gbc.sp());
        EXPECT(0x116a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 03A0
        gbc.setState(0x9d34, 0x5d2a, 0x54c0, 0xe5dc, 0x8eca, 0x2c4f, 0x1, 0x0);
        gbc.writeMem(0x9d34, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5d2a, gbc.sp());
        EXPECT(0x9d36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d34));
        EXPECT(0xd0, gbc.readMem(0x9d35));
        // CB D0 03A3
        gbc.setState(0xcd18, 0x235, 0x21f0, 0x5b25, 0x46cf, 0x6245, 0x0, 0x1);
        gbc.writeMem(0xcd18, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x235, gbc.sp());
        EXPECT(0xcd1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd18));
        EXPECT(0xd0, gbc.readMem(0xcd19));
        // CB D0 03A4
        gbc.setState(0xbb44, 0x3d9, 0x2370, 0xd213, 0xa38b, 0xcc93, 0x0, 0x1);
        gbc.writeMem(0xbb44, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3d9, gbc.sp());
        EXPECT(0xbb46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb44));
        EXPECT(0xd0, gbc.readMem(0xbb45));
        // CB D0 03A5
        gbc.setState(0xeda1, 0x72a, 0x38d0, 0x7fab, 0xdd6d, 0x9cf3, 0x0, 0x1);
        gbc.writeMem(0xeda1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x72a, gbc.sp());
        EXPECT(0xeda3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeda1));
        EXPECT(0xd0, gbc.readMem(0xeda2));
        // CB D0 03A6
        gbc.setState(0xeb12, 0x8e9a, 0x33e0, 0xef3, 0xe07, 0xc3ea, 0x1, 0x0);
        gbc.writeMem(0xeb12, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8e9a, gbc.sp());
        EXPECT(0xeb14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb12));
        EXPECT(0xd0, gbc.readMem(0xeb13));
        // CB D0 03A7
        gbc.setState(0xa8ab, 0xd4dd, 0xe600, 0x8df1, 0x55ca, 0xcf8d, 0x1, 0x0);
        gbc.writeMem(0xa8ab, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd4dd, gbc.sp());
        EXPECT(0xa8ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8ab));
        EXPECT(0xd0, gbc.readMem(0xa8ac));
        // CB D0 03A8
        gbc.setState(0xac2c, 0xf802, 0x7f10, 0xb368, 0x4b9f, 0xd4c8, 0x0, 0x0);
        gbc.writeMem(0xac2c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf802, gbc.sp());
        EXPECT(0xac2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac2c));
        EXPECT(0xd0, gbc.readMem(0xac2d));
        // CB D0 03A9
        gbc.setState(0xc985, 0x52d2, 0xa3c0, 0x354e, 0x8eed, 0xd3d3, 0x0, 0x1);
        gbc.writeMem(0xc985, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x52d2, gbc.sp());
        EXPECT(0xc987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc985));
        EXPECT(0xd0, gbc.readMem(0xc986));
        // CB D0 03AA
        gbc.setState(0xbd89, 0xd513, 0x3080, 0x9018, 0x3a05, 0xac56, 0x1, 0x0);
        gbc.writeMem(0xbd89, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd513, gbc.sp());
        EXPECT(0xbd8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd89));
        EXPECT(0xd0, gbc.readMem(0xbd8a));
        // CB D0 03AB
        gbc.setState(0x2372, 0x1941, 0x43d0, 0xc151, 0x543b, 0xc96d, 0x1, 0x0);
        gbc.writeMem(0x2372, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1941, gbc.sp());
        EXPECT(0x2374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 03AC
        gbc.setState(0x44db, 0x7ac8, 0xd440, 0xb53b, 0x1930, 0x60b6, 0x0, 0x1);
        gbc.writeMem(0x44db, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7ac8, gbc.sp());
        EXPECT(0x44dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 03AD
        gbc.setState(0xdc0f, 0xb830, 0x600, 0x8683, 0x9a28, 0x7c71, 0x0, 0x0);
        gbc.writeMem(0xdc0f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb830, gbc.sp());
        EXPECT(0xdc11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc0f));
        EXPECT(0xd0, gbc.readMem(0xdc10));
        // CB D0 03AE
        gbc.setState(0xca3e, 0x4b03, 0xa20, 0x8751, 0x1ad0, 0xb8b1, 0x0, 0x0);
        gbc.writeMem(0xca3e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4b03, gbc.sp());
        EXPECT(0xca40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca3e));
        EXPECT(0xd0, gbc.readMem(0xca3f));
        // CB D0 03AF
        gbc.setState(0xb277, 0x701b, 0x9ac0, 0x990c, 0x3a94, 0x2a34, 0x1, 0x0);
        gbc.writeMem(0xb277, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x701b, gbc.sp());
        EXPECT(0xb279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb277));
        EXPECT(0xd0, gbc.readMem(0xb278));
        // CB D0 03B0
        gbc.setState(0x4fcc, 0xc017, 0xe0f0, 0xb309, 0x36e, 0x53b2, 0x1, 0x0);
        gbc.writeMem(0x4fcc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc017, gbc.sp());
        EXPECT(0x4fce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 03B1
        gbc.setState(0x6831, 0xc45b, 0xa6f0, 0xfee5, 0xc880, 0xacc8, 0x0, 0x1);
        gbc.writeMem(0x6831, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc45b, gbc.sp());
        EXPECT(0x6833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 03B2
        gbc.setState(0x2b74, 0x7b0d, 0x9950, 0x9838, 0xcbc, 0x43b7, 0x1, 0x1);
        gbc.writeMem(0x2b74, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7b0d, gbc.sp());
        EXPECT(0x2b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 03B3
        gbc.setState(0x3972, 0xcef6, 0x8d50, 0x27ff, 0x643f, 0x5915, 0x0, 0x1);
        gbc.writeMem(0x3972, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xcef6, gbc.sp());
        EXPECT(0x3974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 03B4
        gbc.setState(0x542, 0x7e71, 0x8000, 0x744, 0x4777, 0x293c, 0x0, 0x0);
        gbc.writeMem(0x542, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7e71, gbc.sp());
        EXPECT(0x544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 03B5
        gbc.setState(0x770a, 0x1cb0, 0x5030, 0x264c, 0xc620, 0x5ffb, 0x0, 0x1);
        gbc.writeMem(0x770a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1cb0, gbc.sp());
        EXPECT(0x770c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 03B6
        gbc.setState(0xdcbb, 0x4476, 0xfe90, 0x8618, 0x23ad, 0x46d9, 0x1, 0x1);
        gbc.writeMem(0xdcbb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4476, gbc.sp());
        EXPECT(0xdcbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcbb));
        EXPECT(0xd0, gbc.readMem(0xdcbc));
        // CB D0 03B7
        gbc.setState(0x8bd8, 0x3763, 0x8180, 0xc60e, 0x9744, 0xc2a, 0x1, 0x1);
        gbc.writeMem(0x8bd8, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3763, gbc.sp());
        EXPECT(0x8bda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd8));
        EXPECT(0xd0, gbc.readMem(0x8bd9));
        // CB D0 03B8
        gbc.setState(0xcd72, 0x3aae, 0xdd50, 0xdd6e, 0xbb23, 0x9e96, 0x1, 0x1);
        gbc.writeMem(0xcd72, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3aae, gbc.sp());
        EXPECT(0xcd74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd72));
        EXPECT(0xd0, gbc.readMem(0xcd73));
        // CB D0 03B9
        gbc.setState(0x9e9a, 0xa09a, 0x4e70, 0xcada, 0xda06, 0xb113, 0x0, 0x1);
        gbc.writeMem(0x9e9a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa09a, gbc.sp());
        EXPECT(0x9e9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e9a));
        EXPECT(0xd0, gbc.readMem(0x9e9b));
        // CB D0 03BA
        gbc.setState(0xa193, 0x7a08, 0x5eb0, 0xb582, 0x4ba8, 0x3900, 0x0, 0x1);
        gbc.writeMem(0xa193, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7a08, gbc.sp());
        EXPECT(0xa195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa193));
        EXPECT(0xd0, gbc.readMem(0xa194));
        // CB D0 03BB
        gbc.setState(0xa751, 0x6874, 0x4ea0, 0x952, 0x852, 0xf0b4, 0x1, 0x0);
        gbc.writeMem(0xa751, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6874, gbc.sp());
        EXPECT(0xa753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa751));
        EXPECT(0xd0, gbc.readMem(0xa752));
        // CB D0 03BC
        gbc.setState(0x1ec5, 0x21bc, 0x1d70, 0x240d, 0x8689, 0xdfe8, 0x1, 0x0);
        gbc.writeMem(0x1ec5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x21bc, gbc.sp());
        EXPECT(0x1ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 03BD
        gbc.setState(0xd351, 0x262f, 0xacf0, 0x8bac, 0x56ca, 0xbdd1, 0x1, 0x0);
        gbc.writeMem(0xd351, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x262f, gbc.sp());
        EXPECT(0xd353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd351));
        EXPECT(0xd0, gbc.readMem(0xd352));
        // CB D0 03BE
        gbc.setState(0xda33, 0x2ab9, 0x8b70, 0xf88c, 0xdc31, 0x5058, 0x1, 0x1);
        gbc.writeMem(0xda33, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2ab9, gbc.sp());
        EXPECT(0xda35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda33));
        EXPECT(0xd0, gbc.readMem(0xda34));
        // CB D0 03BF
        gbc.setState(0xb73, 0x603c, 0xc3c0, 0x748d, 0x5c00, 0xb7c5, 0x1, 0x1);
        gbc.writeMem(0xb73, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x603c, gbc.sp());
        EXPECT(0xb75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 03C0
        gbc.setState(0x47c2, 0xa2a9, 0x6b40, 0x3be0, 0x4667, 0x8efe, 0x0, 0x1);
        gbc.writeMem(0x47c2, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa2a9, gbc.sp());
        EXPECT(0x47c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 03C1
        gbc.setState(0xd334, 0x66f7, 0xae80, 0x2ebb, 0x7490, 0xfbcf, 0x1, 0x0);
        gbc.writeMem(0xd334, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x66f7, gbc.sp());
        EXPECT(0xd336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd334));
        EXPECT(0xd0, gbc.readMem(0xd335));
        // CB D0 03C2
        gbc.setState(0x3020, 0x6f8d, 0xcd90, 0xb394, 0xd5bb, 0x3c81, 0x0, 0x0);
        gbc.writeMem(0x3020, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6f8d, gbc.sp());
        EXPECT(0x3022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 03C3
        gbc.setState(0xdf9d, 0xce78, 0x9350, 0x30b5, 0xc911, 0x1500, 0x1, 0x0);
        gbc.writeMem(0xdf9d, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xce78, gbc.sp());
        EXPECT(0xdf9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf9d));
        EXPECT(0xd0, gbc.readMem(0xdf9e));
        // CB D0 03C4
        gbc.setState(0x5735, 0x8bb, 0xb7a0, 0xe522, 0x5782, 0x59d4, 0x0, 0x1);
        gbc.writeMem(0x5735, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8bb, gbc.sp());
        EXPECT(0x5737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 03C5
        gbc.setState(0x186a, 0xa95d, 0x5970, 0x3509, 0x2d42, 0xca2f, 0x1, 0x1);
        gbc.writeMem(0x186a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa95d, gbc.sp());
        EXPECT(0x186c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 03C6
        gbc.setState(0x260c, 0xc5b9, 0x8060, 0xfa8f, 0x1beb, 0x268e, 0x0, 0x1);
        gbc.writeMem(0x260c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc5b9, gbc.sp());
        EXPECT(0x260e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 03C7
        gbc.setState(0xeba, 0x6635, 0x13d0, 0x7d40, 0x1488, 0xc2c1, 0x1, 0x0);
        gbc.writeMem(0xeba, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6635, gbc.sp());
        EXPECT(0xebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 03C8
        gbc.setState(0xeebf, 0xa06, 0x4e20, 0xf101, 0x9ce8, 0xdf5, 0x1, 0x1);
        gbc.writeMem(0xeebf, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa06, gbc.sp());
        EXPECT(0xeec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeebf));
        EXPECT(0xd0, gbc.readMem(0xeec0));
        // CB D0 03C9
        gbc.setState(0x3822, 0x76c3, 0xe90, 0x5e1d, 0x7b7b, 0x7460, 0x1, 0x1);
        gbc.writeMem(0x3822, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x76c3, gbc.sp());
        EXPECT(0x3824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 03CA
        gbc.setState(0xc6c1, 0x13d9, 0x93f0, 0x2db0, 0x309e, 0xf130, 0x0, 0x0);
        gbc.writeMem(0xc6c1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x13d9, gbc.sp());
        EXPECT(0xc6c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6c1));
        EXPECT(0xd0, gbc.readMem(0xc6c2));
        // CB D0 03CB
        gbc.setState(0x48da, 0x4a07, 0xe1f0, 0x2f37, 0x9728, 0x77cf, 0x0, 0x1);
        gbc.writeMem(0x48da, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4a07, gbc.sp());
        EXPECT(0x48dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 03CC
        gbc.setState(0xc1f0, 0xd36a, 0xb4a0, 0x6b5a, 0x335, 0xfdfb, 0x1, 0x0);
        gbc.writeMem(0xc1f0, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd36a, gbc.sp());
        EXPECT(0xc1f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1f0));
        EXPECT(0xd0, gbc.readMem(0xc1f1));
        // CB D0 03CD
        gbc.setState(0xee44, 0x1281, 0x1ad0, 0x3ba7, 0x3df7, 0x6139, 0x1, 0x0);
        gbc.writeMem(0xee44, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1281, gbc.sp());
        EXPECT(0xee46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee44));
        EXPECT(0xd0, gbc.readMem(0xee45));
        // CB D0 03CE
        gbc.setState(0xa057, 0x8036, 0xe4d0, 0xfa1, 0x35f, 0xac95, 0x1, 0x0);
        gbc.writeMem(0xa057, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8036, gbc.sp());
        EXPECT(0xa059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa057));
        EXPECT(0xd0, gbc.readMem(0xa058));
        // CB D0 03CF
        gbc.setState(0x3317, 0x6095, 0x8430, 0xf02, 0xa4fb, 0xb852, 0x0, 0x1);
        gbc.writeMem(0x3317, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6095, gbc.sp());
        EXPECT(0x3319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 03D0
        gbc.setState(0x1b03, 0x6670, 0xc7a0, 0x935a, 0xc930, 0x6009, 0x1, 0x1);
        gbc.writeMem(0x1b03, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6670, gbc.sp());
        EXPECT(0x1b05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 03D2
        gbc.setState(0x2018, 0x7d36, 0xc4d0, 0xfda1, 0xa348, 0xd477, 0x0, 0x1);
        gbc.writeMem(0x2018, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7d36, gbc.sp());
        EXPECT(0x201a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 03D3
        gbc.setState(0xce15, 0x9d0e, 0xd740, 0x3781, 0xbee8, 0x1ece, 0x0, 0x0);
        gbc.writeMem(0xce15, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9d0e, gbc.sp());
        EXPECT(0xce17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce15));
        EXPECT(0xd0, gbc.readMem(0xce16));
        // CB D0 03D4
        gbc.setState(0x4d20, 0x4b14, 0xcf30, 0x22df, 0xba78, 0x981b, 0x0, 0x0);
        gbc.writeMem(0x4d20, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4b14, gbc.sp());
        EXPECT(0x4d22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 03D5
        gbc.setState(0xe614, 0x35c8, 0xa6f0, 0xa0cc, 0xe999, 0x8a24, 0x0, 0x1);
        gbc.writeMem(0xe614, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x35c8, gbc.sp());
        EXPECT(0xe616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe614));
        EXPECT(0xd0, gbc.readMem(0xe615));
        // CB D0 03D6
        gbc.setState(0x33fc, 0xd648, 0xa110, 0x3fbc, 0xdc41, 0xfd90, 0x1, 0x0);
        gbc.writeMem(0x33fc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd648, gbc.sp());
        EXPECT(0x33fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 03D7
        gbc.setState(0x9383, 0xfeee, 0xf020, 0x9c38, 0xfb22, 0x4620, 0x1, 0x0);
        gbc.writeMem(0x9383, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfeee, gbc.sp());
        EXPECT(0x9385, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9383));
        EXPECT(0xd0, gbc.readMem(0x9384));
        // CB D0 03D8
        gbc.setState(0xe493, 0xe36e, 0x4eb0, 0x7b1a, 0xbf1a, 0x9e9f, 0x1, 0x1);
        gbc.writeMem(0xe493, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe36e, gbc.sp());
        EXPECT(0xe495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe493));
        EXPECT(0xd0, gbc.readMem(0xe494));
        // CB D0 03D9
        gbc.setState(0x4053, 0xfd2, 0x2510, 0xb388, 0x1cf2, 0x972d, 0x0, 0x1);
        gbc.writeMem(0x4053, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfd2, gbc.sp());
        EXPECT(0x4055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D0 03DA
        gbc.setState(0x78c5, 0x4fb3, 0x260, 0x7544, 0x7909, 0x77ec, 0x1, 0x0);
        gbc.writeMem(0x78c5, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4fb3, gbc.sp());
        EXPECT(0x78c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 03DB
        gbc.setState(0xecdc, 0x6f4, 0x5ed0, 0x86a3, 0xb442, 0x2546, 0x1, 0x1);
        gbc.writeMem(0xecdc, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6f4, gbc.sp());
        EXPECT(0xecde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecdc));
        EXPECT(0xd0, gbc.readMem(0xecdd));
        // CB D0 03DC
        gbc.setState(0xb91c, 0xab7, 0xc920, 0x23e, 0xb4af, 0xee04, 0x0, 0x0);
        gbc.writeMem(0xb91c, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xab7, gbc.sp());
        EXPECT(0xb91e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb91c));
        EXPECT(0xd0, gbc.readMem(0xb91d));
        // CB D0 03DD
        gbc.setState(0xf6e, 0xb891, 0x5020, 0x5000, 0xf369, 0x4f31, 0x1, 0x0);
        gbc.writeMem(0xf6e, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb891, gbc.sp());
        EXPECT(0xf70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 03DE
        gbc.setState(0xaf66, 0xfe9d, 0x4c10, 0xd0ab, 0x7609, 0xe713, 0x1, 0x1);
        gbc.writeMem(0xaf66, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfe9d, gbc.sp());
        EXPECT(0xaf68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf66));
        EXPECT(0xd0, gbc.readMem(0xaf67));
        // CB D0 03DF
        gbc.setState(0xc67f, 0x366f, 0x1f50, 0x7dd9, 0x3d4c, 0x4b2, 0x1, 0x0);
        gbc.writeMem(0xc67f, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x366f, gbc.sp());
        EXPECT(0xc681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc67f));
        EXPECT(0xd0, gbc.readMem(0xc680));
        // CB D0 03E0
        gbc.setState(0xc032, 0x163, 0xa750, 0xc332, 0x62b8, 0xb96, 0x1, 0x0);
        gbc.writeMem(0xc032, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x163, gbc.sp());
        EXPECT(0xc034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc032));
        EXPECT(0xd0, gbc.readMem(0xc033));
        // CB D0 03E1
        gbc.setState(0xa27a, 0x1055, 0x35b0, 0xa2c9, 0x9145, 0xfc9, 0x0, 0x1);
        gbc.writeMem(0xa27a, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1055, gbc.sp());
        EXPECT(0xa27c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa27a));
        EXPECT(0xd0, gbc.readMem(0xa27b));
        // CB D0 03E2
        gbc.setState(0xa624, 0x6986, 0xba10, 0x25d1, 0x3bf1, 0xc772, 0x1, 0x1);
        gbc.writeMem(0xa624, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6986, gbc.sp());
        EXPECT(0xa626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa624));
        EXPECT(0xd0, gbc.readMem(0xa625));
        // CB D0 03E3
        gbc.setState(0x9c20, 0x23f8, 0x63e0, 0xf874, 0x232f, 0x3e77, 0x1, 0x1);
        gbc.writeMem(0x9c20, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x23f8, gbc.sp());
        EXPECT(0x9c22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c20));
        EXPECT(0xd0, gbc.readMem(0x9c21));
        // CB D0 03E4
        gbc.setState(0xe303, 0xc7ac, 0x4ab0, 0x900b, 0x4f33, 0x975b, 0x1, 0x0);
        gbc.writeMem(0xe303, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc7ac, gbc.sp());
        EXPECT(0xe305, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe303));
        EXPECT(0xd0, gbc.readMem(0xe304));
        // CB D0 03E5
        gbc.setState(0xa364, 0xc9c5, 0x6a50, 0xa545, 0x2ba5, 0x6c9f, 0x0, 0x1);
        gbc.writeMem(0xa364, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc9c5, gbc.sp());
        EXPECT(0xa366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa364));
        EXPECT(0xd0, gbc.readMem(0xa365));
        // CB D0 03E6
        gbc.setState(0x62eb, 0x5605, 0x89c0, 0xa05, 0xe8a5, 0x9497, 0x0, 0x1);
        gbc.writeMem(0x62eb, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5605, gbc.sp());
        EXPECT(0x62ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D0 03E7
        gbc.setState(0xceb1, 0x9554, 0xf660, 0x9770, 0x8d24, 0xe2a2, 0x1, 0x0);
        gbc.writeMem(0xceb1, { 0xcb, 0xd0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9554, gbc.sp());
        EXPECT(0xceb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceb1));
        EXPECT(0xd0, gbc.readMem(0xceb2));
    }
