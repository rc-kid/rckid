#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_a0)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_a0) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB A0 0000
        gbc.setState(0x8d5b, 0xb02b, 0x4c20, 0xef15, 0x1cdc, 0x4aa5, 0x0, 0x0);
        gbc.writeMem(0x8d5b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xb02b);
        EXPECT(gbc.pc(), 0x8d5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d5b), 0xcb);
        EXPECT(gbc.readMem(0x8d5c), 0xa0);
        // CB A0 0001
        gbc.setState(0x99ad, 0x3955, 0x6000, 0x79c1, 0x1e71, 0x8967, 0x0, 0x1);
        gbc.writeMem(0x99ad, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3955);
        EXPECT(gbc.pc(), 0x99af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ad), 0xcb);
        EXPECT(gbc.readMem(0x99ae), 0xa0);
        // CB A0 0002
        gbc.setState(0x814e, 0x9bc0, 0x7c00, 0xe745, 0xfec6, 0xdd2d, 0x1, 0x1);
        gbc.writeMem(0x814e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9bc0);
        EXPECT(gbc.pc(), 0x8150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x814e), 0xcb);
        EXPECT(gbc.readMem(0x814f), 0xa0);
        // CB A0 0003
        gbc.setState(0x2976, 0xc817, 0x9f20, 0x1178, 0x90fe, 0xcca5, 0x1, 0x1);
        gbc.writeMem(0x2976, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc817);
        EXPECT(gbc.pc(), 0x2978);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0004
        gbc.setState(0x1578, 0x8443, 0x5330, 0x6efd, 0x7942, 0x1fb2, 0x1, 0x1);
        gbc.writeMem(0x1578, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8443);
        EXPECT(gbc.pc(), 0x157a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0005
        gbc.setState(0xacae, 0x394, 0x660, 0x338, 0x115f, 0x7f8e, 0x0, 0x1);
        gbc.writeMem(0xacae, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x394);
        EXPECT(gbc.pc(), 0xacb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacae), 0xcb);
        EXPECT(gbc.readMem(0xacaf), 0xa0);
        // CB A0 0006
        gbc.setState(0xe391, 0x9160, 0x2cb0, 0x9be, 0x7e81, 0x7840, 0x1, 0x0);
        gbc.writeMem(0xe391, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x9160);
        EXPECT(gbc.pc(), 0xe393);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe391), 0xcb);
        EXPECT(gbc.readMem(0xe392), 0xa0);
        // CB A0 0007
        gbc.setState(0x680c, 0xe023, 0x1710, 0x1ba7, 0x106a, 0x2ec1, 0x0, 0x1);
        gbc.writeMem(0x680c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe023);
        EXPECT(gbc.pc(), 0x680e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0008
        gbc.setState(0x80fa, 0xbfa5, 0xe9b0, 0x95d5, 0xddf5, 0x2e0a, 0x0, 0x0);
        gbc.writeMem(0x80fa, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xbfa5);
        EXPECT(gbc.pc(), 0x80fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80fa), 0xcb);
        EXPECT(gbc.readMem(0x80fb), 0xa0);
        // CB A0 0009
        gbc.setState(0x2294, 0xdae8, 0xb360, 0x34ae, 0x6525, 0xe56e, 0x1, 0x1);
        gbc.writeMem(0x2294, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xdae8);
        EXPECT(gbc.pc(), 0x2296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 000A
        gbc.setState(0xdcff, 0x7a8b, 0x5e80, 0x97fc, 0xf56, 0xd13b, 0x1, 0x0);
        gbc.writeMem(0xdcff, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7a8b);
        EXPECT(gbc.pc(), 0xdd01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcff), 0xcb);
        EXPECT(gbc.readMem(0xdd00), 0xa0);
        // CB A0 000B
        gbc.setState(0xc77d, 0x959b, 0x3f80, 0x6e20, 0xee49, 0xf985, 0x0, 0x0);
        gbc.writeMem(0xc77d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x959b);
        EXPECT(gbc.pc(), 0xc77f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc77d), 0xcb);
        EXPECT(gbc.readMem(0xc77e), 0xa0);
        // CB A0 000D
        gbc.setState(0x32f5, 0x698c, 0x9650, 0xa1b3, 0xbc2f, 0x296c, 0x0, 0x1);
        gbc.writeMem(0x32f5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x698c);
        EXPECT(gbc.pc(), 0x32f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 000E
        gbc.setState(0x5806, 0x8ed5, 0x3fc0, 0xdc63, 0x63e, 0x5017, 0x1, 0x0);
        gbc.writeMem(0x5806, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x8ed5);
        EXPECT(gbc.pc(), 0x5808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 000F
        gbc.setState(0x1fc5, 0xb63f, 0xb910, 0xfc83, 0x9393, 0xb0a4, 0x1, 0x1);
        gbc.writeMem(0x1fc5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb63f);
        EXPECT(gbc.pc(), 0x1fc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0010
        gbc.setState(0x78d8, 0x2152, 0x18a0, 0x77fe, 0x66d2, 0x9181, 0x0, 0x0);
        gbc.writeMem(0x78d8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2152);
        EXPECT(gbc.pc(), 0x78da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0011
        gbc.setState(0x3c36, 0x8eef, 0x99a0, 0x28df, 0x4cf8, 0x43d7, 0x0, 0x0);
        gbc.writeMem(0x3c36, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x8eef);
        EXPECT(gbc.pc(), 0x3c38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0012
        gbc.setState(0xbf46, 0xc61f, 0x2c40, 0x77b, 0xa792, 0x374c, 0x0, 0x0);
        gbc.writeMem(0xbf46, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc61f);
        EXPECT(gbc.pc(), 0xbf48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf46), 0xcb);
        EXPECT(gbc.readMem(0xbf47), 0xa0);
        // CB A0 0013
        gbc.setState(0x73da, 0x3b0, 0x4cf0, 0xada0, 0xb8d2, 0x24ea, 0x0, 0x1);
        gbc.writeMem(0x73da, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3b0);
        EXPECT(gbc.pc(), 0x73dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0015
        gbc.setState(0x881d, 0xef5a, 0x4a70, 0xfb94, 0x5953, 0xd0e8, 0x1, 0x1);
        gbc.writeMem(0x881d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xef5a);
        EXPECT(gbc.pc(), 0x881f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x881d), 0xcb);
        EXPECT(gbc.readMem(0x881e), 0xa0);
        // CB A0 0016
        gbc.setState(0x4100, 0x75ae, 0x8a40, 0x56f8, 0x717e, 0x5cba, 0x0, 0x0);
        gbc.writeMem(0x4100, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x75ae);
        EXPECT(gbc.pc(), 0x4102);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0017
        gbc.setState(0x3632, 0x2553, 0x23d0, 0x597e, 0xc89c, 0x7fb1, 0x1, 0x1);
        gbc.writeMem(0x3632, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2553);
        EXPECT(gbc.pc(), 0x3634);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0019
        gbc.setState(0x9ce, 0x8350, 0x6020, 0xb99, 0xf3d3, 0xea04, 0x0, 0x0);
        gbc.writeMem(0x9ce, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x8350);
        EXPECT(gbc.pc(), 0x9d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 001A
        gbc.setState(0x1730, 0x4866, 0x5510, 0xccc9, 0xa7cb, 0xa243, 0x1, 0x0);
        gbc.writeMem(0x1730, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x4866);
        EXPECT(gbc.pc(), 0x1732);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 001B
        gbc.setState(0x9c3a, 0xed53, 0x8920, 0x89e0, 0x820d, 0xc483, 0x0, 0x1);
        gbc.writeMem(0x9c3a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xed53);
        EXPECT(gbc.pc(), 0x9c3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c3a), 0xcb);
        EXPECT(gbc.readMem(0x9c3b), 0xa0);
        // CB A0 001C
        gbc.setState(0xbdac, 0x900b, 0x2df0, 0x30ad, 0x46b4, 0x129f, 0x0, 0x1);
        gbc.writeMem(0xbdac, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x900b);
        EXPECT(gbc.pc(), 0xbdae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdac), 0xcb);
        EXPECT(gbc.readMem(0xbdad), 0xa0);
        // CB A0 001D
        gbc.setState(0xadb3, 0x2a96, 0x4a70, 0x1269, 0xf6b8, 0xe8bf, 0x1, 0x0);
        gbc.writeMem(0xadb3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2a96);
        EXPECT(gbc.pc(), 0xadb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadb3), 0xcb);
        EXPECT(gbc.readMem(0xadb4), 0xa0);
        // CB A0 001E
        gbc.setState(0xcdfd, 0x9987, 0x3a90, 0x2f73, 0x246, 0x59db, 0x1, 0x0);
        gbc.writeMem(0xcdfd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9987);
        EXPECT(gbc.pc(), 0xcdff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdfd), 0xcb);
        EXPECT(gbc.readMem(0xcdfe), 0xa0);
        // CB A0 001F
        gbc.setState(0x4b0d, 0xca2d, 0x4df0, 0x3a1f, 0xd03b, 0xbfe5, 0x1, 0x0);
        gbc.writeMem(0x4b0d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xca2d);
        EXPECT(gbc.pc(), 0x4b0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0020
        gbc.setState(0x1eef, 0xba8c, 0xc6a0, 0xeaff, 0x5747, 0x9e9e, 0x1, 0x0);
        gbc.writeMem(0x1eef, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xba8c);
        EXPECT(gbc.pc(), 0x1ef1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0021
        gbc.setState(0x1028, 0xf9dc, 0x6360, 0x7d07, 0x1bf7, 0x6490, 0x1, 0x0);
        gbc.writeMem(0x1028, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xf9dc);
        EXPECT(gbc.pc(), 0x102a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0022
        gbc.setState(0xd218, 0x6fc6, 0x7760, 0xe16b, 0x7868, 0x9a8, 0x0, 0x0);
        gbc.writeMem(0xd218, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6fc6);
        EXPECT(gbc.pc(), 0xd21a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd218), 0xcb);
        EXPECT(gbc.readMem(0xd219), 0xa0);
        // CB A0 0023
        gbc.setState(0x48de, 0xc6f2, 0x4110, 0x7eb5, 0x251e, 0x20df, 0x1, 0x1);
        gbc.writeMem(0x48de, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc6f2);
        EXPECT(gbc.pc(), 0x48e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0024
        gbc.setState(0xe8a2, 0xcb3a, 0xe580, 0x5a94, 0x4b06, 0xe992, 0x1, 0x0);
        gbc.writeMem(0xe8a2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xcb3a);
        EXPECT(gbc.pc(), 0xe8a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8a2), 0xcb);
        EXPECT(gbc.readMem(0xe8a3), 0xa0);
        // CB A0 0025
        gbc.setState(0x12b3, 0x7145, 0xfe0, 0x3052, 0x90f5, 0x664, 0x0, 0x1);
        gbc.writeMem(0x12b3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x7145);
        EXPECT(gbc.pc(), 0x12b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0026
        gbc.setState(0x2aa3, 0xc6fd, 0x25a0, 0xb7b6, 0x2cb5, 0xc9bb, 0x0, 0x0);
        gbc.writeMem(0x2aa3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xc6fd);
        EXPECT(gbc.pc(), 0x2aa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0027
        gbc.setState(0xbff2, 0xc5d2, 0xb5c0, 0x75f9, 0xa511, 0x5ba9, 0x0, 0x0);
        gbc.writeMem(0xbff2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xc5d2);
        EXPECT(gbc.pc(), 0xbff4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbff2), 0xcb);
        EXPECT(gbc.readMem(0xbff3), 0xa0);
        // CB A0 0028
        gbc.setState(0x46a, 0xb8c4, 0x5a70, 0x8696, 0xbc, 0xd7b2, 0x0, 0x0);
        gbc.writeMem(0x46a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb8c4);
        EXPECT(gbc.pc(), 0x46c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0029
        gbc.setState(0xa694, 0x1eb, 0xf610, 0x6f49, 0x2550, 0xdd98, 0x0, 0x1);
        gbc.writeMem(0xa694, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1eb);
        EXPECT(gbc.pc(), 0xa696);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa694), 0xcb);
        EXPECT(gbc.readMem(0xa695), 0xa0);
        // CB A0 002A
        gbc.setState(0xd8d9, 0x7d10, 0xf560, 0x2c4a, 0x551d, 0x641b, 0x0, 0x0);
        gbc.writeMem(0xd8d9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7d10);
        EXPECT(gbc.pc(), 0xd8db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8d9), 0xcb);
        EXPECT(gbc.readMem(0xd8da), 0xa0);
        // CB A0 002B
        gbc.setState(0xd036, 0xc6d, 0x7500, 0x4268, 0xbc32, 0x652e, 0x0, 0x1);
        gbc.writeMem(0xd036, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xc6d);
        EXPECT(gbc.pc(), 0xd038);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd036), 0xcb);
        EXPECT(gbc.readMem(0xd037), 0xa0);
        // CB A0 002C
        gbc.setState(0x484, 0xae77, 0xceb0, 0x80d1, 0x634e, 0x2311, 0x1, 0x0);
        gbc.writeMem(0x484, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xae77);
        EXPECT(gbc.pc(), 0x486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 002E
        gbc.setState(0x4cec, 0x63ea, 0xd070, 0x5316, 0xa2c6, 0x61b4, 0x1, 0x1);
        gbc.writeMem(0x4cec, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x63ea);
        EXPECT(gbc.pc(), 0x4cee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 002F
        gbc.setState(0x7ff8, 0x876b, 0xa250, 0x23ef, 0x25a9, 0x1f8c, 0x1, 0x1);
        gbc.writeMem(0x7ff8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x876b);
        EXPECT(gbc.pc(), 0x7ffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0030
        gbc.setState(0x46cc, 0x69f, 0x45b0, 0xfbac, 0x3daa, 0xfbc5, 0x1, 0x1);
        gbc.writeMem(0x46cc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x69f);
        EXPECT(gbc.pc(), 0x46ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0031
        gbc.setState(0x9622, 0x7a43, 0x4900, 0xddb6, 0xde04, 0x3ddd, 0x1, 0x1);
        gbc.writeMem(0x9622, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7a43);
        EXPECT(gbc.pc(), 0x9624);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9622), 0xcb);
        EXPECT(gbc.readMem(0x9623), 0xa0);
        // CB A0 0032
        gbc.setState(0x44eb, 0x94da, 0x9d20, 0xb69a, 0x94ef, 0x3d42, 0x1, 0x0);
        gbc.writeMem(0x44eb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x94da);
        EXPECT(gbc.pc(), 0x44ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0033
        gbc.setState(0x6f79, 0x4d66, 0x2e0, 0x4cd5, 0xa548, 0x1a4b, 0x0, 0x0);
        gbc.writeMem(0x6f79, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4d66);
        EXPECT(gbc.pc(), 0x6f7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0034
        gbc.setState(0x9544, 0x31db, 0x7830, 0xcb8e, 0xc3f, 0xed8f, 0x1, 0x0);
        gbc.writeMem(0x9544, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x31db);
        EXPECT(gbc.pc(), 0x9546);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9544), 0xcb);
        EXPECT(gbc.readMem(0x9545), 0xa0);
        // CB A0 0035
        gbc.setState(0xb2b5, 0x46f2, 0x3510, 0xaba4, 0x7337, 0xcee1, 0x1, 0x0);
        gbc.writeMem(0xb2b5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x46f2);
        EXPECT(gbc.pc(), 0xb2b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2b5), 0xcb);
        EXPECT(gbc.readMem(0xb2b6), 0xa0);
        // CB A0 0036
        gbc.setState(0x9102, 0xf7f8, 0xfd30, 0xd909, 0xad20, 0x6d20, 0x1, 0x0);
        gbc.writeMem(0x9102, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf7f8);
        EXPECT(gbc.pc(), 0x9104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9102), 0xcb);
        EXPECT(gbc.readMem(0x9103), 0xa0);
        // CB A0 0037
        gbc.setState(0xe116, 0xb023, 0x3270, 0xf145, 0x8924, 0xd34d, 0x0, 0x0);
        gbc.writeMem(0xe116, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb023);
        EXPECT(gbc.pc(), 0xe118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe116), 0xcb);
        EXPECT(gbc.readMem(0xe117), 0xa0);
        // CB A0 0038
        gbc.setState(0x9324, 0x7291, 0x170, 0xad0d, 0x9e53, 0xd2a5, 0x0, 0x0);
        gbc.writeMem(0x9324, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x7291);
        EXPECT(gbc.pc(), 0x9326);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9324), 0xcb);
        EXPECT(gbc.readMem(0x9325), 0xa0);
        // CB A0 0039
        gbc.setState(0x3359, 0x9c75, 0x62d0, 0x3fa3, 0x86d0, 0xe820, 0x0, 0x1);
        gbc.writeMem(0x3359, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9c75);
        EXPECT(gbc.pc(), 0x335b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 003A
        gbc.setState(0x6ed3, 0x5994, 0x66f0, 0x3b9a, 0xb71f, 0xfaf7, 0x0, 0x1);
        gbc.writeMem(0x6ed3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5994);
        EXPECT(gbc.pc(), 0x6ed5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 003B
        gbc.setState(0x2869, 0x4ba6, 0xe1b0, 0xb80f, 0x13db, 0x4314, 0x0, 0x1);
        gbc.writeMem(0x2869, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4ba6);
        EXPECT(gbc.pc(), 0x286b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 003D
        gbc.setState(0x5cd0, 0x70ae, 0x9e40, 0x4e76, 0x909f, 0xedc4, 0x1, 0x1);
        gbc.writeMem(0x5cd0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x70ae);
        EXPECT(gbc.pc(), 0x5cd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 003E
        gbc.setState(0x3c24, 0x89d2, 0x6e50, 0x7046, 0x8e66, 0xfa32, 0x0, 0x0);
        gbc.writeMem(0x3c24, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x89d2);
        EXPECT(gbc.pc(), 0x3c26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 003F
        gbc.setState(0x3bc, 0x68da, 0xb210, 0xbb38, 0xc09b, 0x7d3e, 0x0, 0x1);
        gbc.writeMem(0x3bc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x68da);
        EXPECT(gbc.pc(), 0x3be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0041
        gbc.setState(0x3928, 0x448b, 0xfcc0, 0x951d, 0x48ea, 0xc4cd, 0x1, 0x1);
        gbc.writeMem(0x3928, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x448b);
        EXPECT(gbc.pc(), 0x392a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0042
        gbc.setState(0xcad6, 0x95a9, 0x230, 0x75ad, 0x74d5, 0x8815, 0x1, 0x1);
        gbc.writeMem(0xcad6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x95a9);
        EXPECT(gbc.pc(), 0xcad8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcad6), 0xcb);
        EXPECT(gbc.readMem(0xcad7), 0xa0);
        // CB A0 0043
        gbc.setState(0xcdef, 0x5645, 0xfbc0, 0x3baa, 0xe36e, 0x9b4e, 0x1, 0x1);
        gbc.writeMem(0xcdef, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5645);
        EXPECT(gbc.pc(), 0xcdf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdef), 0xcb);
        EXPECT(gbc.readMem(0xcdf0), 0xa0);
        // CB A0 0044
        gbc.setState(0xb68c, 0x2eb4, 0xb5c0, 0xea3c, 0x77ee, 0xe1b5, 0x1, 0x1);
        gbc.writeMem(0xb68c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2eb4);
        EXPECT(gbc.pc(), 0xb68e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb68c), 0xcb);
        EXPECT(gbc.readMem(0xb68d), 0xa0);
        // CB A0 0045
        gbc.setState(0xc6e6, 0x4e53, 0x1740, 0x8992, 0x2791, 0x9671, 0x1, 0x0);
        gbc.writeMem(0xc6e6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4e53);
        EXPECT(gbc.pc(), 0xc6e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6e6), 0xcb);
        EXPECT(gbc.readMem(0xc6e7), 0xa0);
        // CB A0 0046
        gbc.setState(0xbd18, 0x54df, 0x5a60, 0x920b, 0x3461, 0x95ab, 0x1, 0x1);
        gbc.writeMem(0xbd18, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x54df);
        EXPECT(gbc.pc(), 0xbd1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd18), 0xcb);
        EXPECT(gbc.readMem(0xbd19), 0xa0);
        // CB A0 0047
        gbc.setState(0xdf08, 0x5ae1, 0x54b0, 0xeef7, 0xaf68, 0x96f2, 0x1, 0x0);
        gbc.writeMem(0xdf08, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5ae1);
        EXPECT(gbc.pc(), 0xdf0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf08), 0xcb);
        EXPECT(gbc.readMem(0xdf09), 0xa0);
        // CB A0 0048
        gbc.setState(0x4bcc, 0x1827, 0xc9d0, 0xa1fd, 0x6a40, 0xff86, 0x0, 0x1);
        gbc.writeMem(0x4bcc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1827);
        EXPECT(gbc.pc(), 0x4bce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0049
        gbc.setState(0xe1df, 0x28e5, 0x2110, 0xf524, 0x8570, 0x6093, 0x0, 0x1);
        gbc.writeMem(0xe1df, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x28e5);
        EXPECT(gbc.pc(), 0xe1e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1df), 0xcb);
        EXPECT(gbc.readMem(0xe1e0), 0xa0);
        // CB A0 004A
        gbc.setState(0x8829, 0x585a, 0x4ab0, 0xaa61, 0x6928, 0x4dee, 0x0, 0x1);
        gbc.writeMem(0x8829, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x585a);
        EXPECT(gbc.pc(), 0x882b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8829), 0xcb);
        EXPECT(gbc.readMem(0x882a), 0xa0);
        // CB A0 004B
        gbc.setState(0xb6d0, 0x19, 0x7b10, 0xc031, 0x74d4, 0xaa5e, 0x0, 0x1);
        gbc.writeMem(0xb6d0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x19);
        EXPECT(gbc.pc(), 0xb6d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6d0), 0xcb);
        EXPECT(gbc.readMem(0xb6d1), 0xa0);
        // CB A0 004C
        gbc.setState(0x8437, 0x541d, 0x7700, 0x23b3, 0xb8e9, 0x3116, 0x0, 0x0);
        gbc.writeMem(0x8437, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x541d);
        EXPECT(gbc.pc(), 0x8439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8437), 0xcb);
        EXPECT(gbc.readMem(0x8438), 0xa0);
        // CB A0 004D
        gbc.setState(0x1c78, 0xcc76, 0xf50, 0xfe7, 0x69eb, 0xa594, 0x0, 0x1);
        gbc.writeMem(0x1c78, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xcc76);
        EXPECT(gbc.pc(), 0x1c7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 004E
        gbc.setState(0xba88, 0xb9e0, 0xf4a0, 0xb799, 0x7b6f, 0x5339, 0x0, 0x1);
        gbc.writeMem(0xba88, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xb9e0);
        EXPECT(gbc.pc(), 0xba8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba88), 0xcb);
        EXPECT(gbc.readMem(0xba89), 0xa0);
        // CB A0 004F
        gbc.setState(0xea40, 0xe9a6, 0x75d0, 0x1099, 0x5ad4, 0x9ff6, 0x1, 0x1);
        gbc.writeMem(0xea40, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe9a6);
        EXPECT(gbc.pc(), 0xea42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea40), 0xcb);
        EXPECT(gbc.readMem(0xea41), 0xa0);
        // CB A0 0050
        gbc.setState(0x51a6, 0xee79, 0x8ba0, 0x846f, 0xf367, 0x9750, 0x0, 0x1);
        gbc.writeMem(0x51a6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xee79);
        EXPECT(gbc.pc(), 0x51a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0052
        gbc.setState(0x3735, 0xbcd0, 0x4470, 0xb409, 0x3423, 0xe5eb, 0x1, 0x1);
        gbc.writeMem(0x3735, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xbcd0);
        EXPECT(gbc.pc(), 0x3737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0053
        gbc.setState(0x29f0, 0x9dbd, 0xef90, 0x6f8c, 0xe059, 0x9235, 0x0, 0x1);
        gbc.writeMem(0x29f0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9dbd);
        EXPECT(gbc.pc(), 0x29f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0054
        gbc.setState(0xb7a4, 0x654a, 0xc3f0, 0xd4d3, 0x6f25, 0x5b1f, 0x1, 0x1);
        gbc.writeMem(0xb7a4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x654a);
        EXPECT(gbc.pc(), 0xb7a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7a4), 0xcb);
        EXPECT(gbc.readMem(0xb7a5), 0xa0);
        // CB A0 0055
        gbc.setState(0x75c0, 0xecb9, 0x29a0, 0xbdc1, 0x4134, 0xf9f9, 0x0, 0x1);
        gbc.writeMem(0x75c0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xecb9);
        EXPECT(gbc.pc(), 0x75c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0056
        gbc.setState(0xd313, 0xa204, 0x15e0, 0x606, 0x3827, 0x8bbb, 0x1, 0x1);
        gbc.writeMem(0xd313, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa204);
        EXPECT(gbc.pc(), 0xd315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd313), 0xcb);
        EXPECT(gbc.readMem(0xd314), 0xa0);
        // CB A0 0057
        gbc.setState(0xed55, 0x7e77, 0xe140, 0xe06b, 0x7abe, 0xa3f2, 0x1, 0x1);
        gbc.writeMem(0xed55, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x7e77);
        EXPECT(gbc.pc(), 0xed57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed55), 0xcb);
        EXPECT(gbc.readMem(0xed56), 0xa0);
        // CB A0 0058
        gbc.setState(0x604b, 0x2f2a, 0xfe90, 0x42, 0x43c0, 0x2557, 0x0, 0x0);
        gbc.writeMem(0x604b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2f2a);
        EXPECT(gbc.pc(), 0x604d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0059
        gbc.setState(0x1fea, 0x50dc, 0x9000, 0xae63, 0x6cb7, 0x728b, 0x1, 0x1);
        gbc.writeMem(0x1fea, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x50dc);
        EXPECT(gbc.pc(), 0x1fec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 005A
        gbc.setState(0xa24f, 0xdf8b, 0x54f0, 0x7da2, 0x3879, 0x469f, 0x1, 0x0);
        gbc.writeMem(0xa24f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xdf8b);
        EXPECT(gbc.pc(), 0xa251);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa24f), 0xcb);
        EXPECT(gbc.readMem(0xa250), 0xa0);
        // CB A0 005B
        gbc.setState(0x96a8, 0x5ec, 0xe290, 0xa29b, 0xdc75, 0x308, 0x0, 0x1);
        gbc.writeMem(0x96a8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x5ec);
        EXPECT(gbc.pc(), 0x96aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96a8), 0xcb);
        EXPECT(gbc.readMem(0x96a9), 0xa0);
        // CB A0 005C
        gbc.setState(0xb21c, 0x54d7, 0x8650, 0x6f41, 0xc13d, 0x7ed6, 0x0, 0x0);
        gbc.writeMem(0xb21c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x54d7);
        EXPECT(gbc.pc(), 0xb21e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb21c), 0xcb);
        EXPECT(gbc.readMem(0xb21d), 0xa0);
        // CB A0 005D
        gbc.setState(0x3de2, 0x29a8, 0xd750, 0x9bac, 0x127, 0x9b31, 0x0, 0x0);
        gbc.writeMem(0x3de2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x29a8);
        EXPECT(gbc.pc(), 0x3de4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 005E
        gbc.setState(0x896, 0x8eff, 0x7a40, 0x91ea, 0xc426, 0xb58e, 0x1, 0x1);
        gbc.writeMem(0x896, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x8eff);
        EXPECT(gbc.pc(), 0x898);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 005F
        gbc.setState(0x1027, 0x3da5, 0x55f0, 0xea53, 0xca38, 0xe398, 0x1, 0x1);
        gbc.writeMem(0x1027, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3da5);
        EXPECT(gbc.pc(), 0x1029);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0060
        gbc.setState(0xdbd, 0xdee0, 0x19f0, 0x25d0, 0x1cf7, 0x6578, 0x0, 0x1);
        gbc.writeMem(0xdbd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xdee0);
        EXPECT(gbc.pc(), 0xdbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0062
        gbc.setState(0xe08f, 0x6b6e, 0xdd60, 0x126c, 0x10d9, 0x6fef, 0x1, 0x0);
        gbc.writeMem(0xe08f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6b6e);
        EXPECT(gbc.pc(), 0xe091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe08f), 0xcb);
        EXPECT(gbc.readMem(0xe090), 0xa0);
        // CB A0 0063
        gbc.setState(0x333e, 0x5f93, 0x89f0, 0xbc34, 0x27be, 0xb6c8, 0x0, 0x1);
        gbc.writeMem(0x333e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5f93);
        EXPECT(gbc.pc(), 0x3340);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0064
        gbc.setState(0xd1f7, 0x9444, 0x2b70, 0x7767, 0x89ac, 0x73c3, 0x0, 0x1);
        gbc.writeMem(0xd1f7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x9444);
        EXPECT(gbc.pc(), 0xd1f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1f7), 0xcb);
        EXPECT(gbc.readMem(0xd1f8), 0xa0);
        // CB A0 0065
        gbc.setState(0x9253, 0xe656, 0x95f0, 0xfaa0, 0x435, 0xb543, 0x1, 0x1);
        gbc.writeMem(0x9253, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe656);
        EXPECT(gbc.pc(), 0x9255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9253), 0xcb);
        EXPECT(gbc.readMem(0x9254), 0xa0);
        // CB A0 0066
        gbc.setState(0x300f, 0xf002, 0xad30, 0x9aca, 0xdfb8, 0x3ca5, 0x1, 0x1);
        gbc.writeMem(0x300f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf002);
        EXPECT(gbc.pc(), 0x3011);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0067
        gbc.setState(0xa1b1, 0xbfc6, 0xab60, 0x5353, 0x683f, 0x3f32, 0x0, 0x1);
        gbc.writeMem(0xa1b1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xbfc6);
        EXPECT(gbc.pc(), 0xa1b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1b1), 0xcb);
        EXPECT(gbc.readMem(0xa1b2), 0xa0);
        // CB A0 0068
        gbc.setState(0xd896, 0x4f95, 0x1cf0, 0x2528, 0xe660, 0xf703, 0x1, 0x1);
        gbc.writeMem(0xd896, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4f95);
        EXPECT(gbc.pc(), 0xd898);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd896), 0xcb);
        EXPECT(gbc.readMem(0xd897), 0xa0);
        // CB A0 0069
        gbc.setState(0xd7f7, 0xc532, 0xd440, 0xe85d, 0x3bd4, 0xbd14, 0x1, 0x0);
        gbc.writeMem(0xd7f7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc532);
        EXPECT(gbc.pc(), 0xd7f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7f7), 0xcb);
        EXPECT(gbc.readMem(0xd7f8), 0xa0);
        // CB A0 006A
        gbc.setState(0x35cb, 0x51f7, 0xdef0, 0xa462, 0x3880, 0x1829, 0x1, 0x0);
        gbc.writeMem(0x35cb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x51f7);
        EXPECT(gbc.pc(), 0x35cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 006B
        gbc.setState(0x671d, 0x5776, 0xcac0, 0xe797, 0x7163, 0x70a1, 0x1, 0x0);
        gbc.writeMem(0x671d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x5776);
        EXPECT(gbc.pc(), 0x671f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 006C
        gbc.setState(0x1eff, 0xa09a, 0xffd0, 0xed3b, 0x21ec, 0xc985, 0x0, 0x0);
        gbc.writeMem(0x1eff, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa09a);
        EXPECT(gbc.pc(), 0x1f01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 006D
        gbc.setState(0x7655, 0x9944, 0xf4c0, 0x7340, 0x6921, 0xc918, 0x0, 0x1);
        gbc.writeMem(0x7655, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9944);
        EXPECT(gbc.pc(), 0x7657);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 006E
        gbc.setState(0x14fc, 0x7224, 0x4f00, 0x7bf0, 0x9c9f, 0xa468, 0x0, 0x0);
        gbc.writeMem(0x14fc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x7224);
        EXPECT(gbc.pc(), 0x14fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 006F
        gbc.setState(0xa0ae, 0x5390, 0x2ef0, 0x39ef, 0x279b, 0x555b, 0x0, 0x0);
        gbc.writeMem(0xa0ae, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x5390);
        EXPECT(gbc.pc(), 0xa0b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0ae), 0xcb);
        EXPECT(gbc.readMem(0xa0af), 0xa0);
        // CB A0 0070
        gbc.setState(0x6c7, 0x80f0, 0x6cc0, 0x253d, 0x4895, 0x1046, 0x0, 0x1);
        gbc.writeMem(0x6c7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x80f0);
        EXPECT(gbc.pc(), 0x6c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0071
        gbc.setState(0xc0c8, 0xd26f, 0x8800, 0xb196, 0x1f14, 0x39ef, 0x1, 0x0);
        gbc.writeMem(0xc0c8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xd26f);
        EXPECT(gbc.pc(), 0xc0ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0c8), 0xcb);
        EXPECT(gbc.readMem(0xc0c9), 0xa0);
        // CB A0 0072
        gbc.setState(0x2be1, 0xfa22, 0xcd50, 0xd0e, 0x1d8, 0x540d, 0x1, 0x0);
        gbc.writeMem(0x2be1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xfa22);
        EXPECT(gbc.pc(), 0x2be3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0073
        gbc.setState(0x7f11, 0x8f9b, 0xf780, 0x1378, 0x6b69, 0xb442, 0x1, 0x1);
        gbc.writeMem(0x7f11, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x8f9b);
        EXPECT(gbc.pc(), 0x7f13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0074
        gbc.setState(0xd41a, 0x5f45, 0x8ee0, 0x11db, 0x85bc, 0x61ee, 0x1, 0x0);
        gbc.writeMem(0xd41a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5f45);
        EXPECT(gbc.pc(), 0xd41c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd41a), 0xcb);
        EXPECT(gbc.readMem(0xd41b), 0xa0);
        // CB A0 0075
        gbc.setState(0x8522, 0xb839, 0x1e40, 0xccc7, 0x6a55, 0x46b8, 0x0, 0x1);
        gbc.writeMem(0x8522, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb839);
        EXPECT(gbc.pc(), 0x8524);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8522), 0xcb);
        EXPECT(gbc.readMem(0x8523), 0xa0);
        // CB A0 0076
        gbc.setState(0x8d51, 0x41cf, 0x4780, 0xbd4e, 0x5997, 0x8b3c, 0x1, 0x1);
        gbc.writeMem(0x8d51, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x41cf);
        EXPECT(gbc.pc(), 0x8d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d51), 0xcb);
        EXPECT(gbc.readMem(0x8d52), 0xa0);
        // CB A0 0077
        gbc.setState(0x2b1e, 0xc7a6, 0x4260, 0x3734, 0x39d2, 0x3290, 0x1, 0x1);
        gbc.writeMem(0x2b1e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc7a6);
        EXPECT(gbc.pc(), 0x2b20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0078
        gbc.setState(0x602, 0x1420, 0x6ac0, 0x92f, 0x65fc, 0x66b2, 0x1, 0x1);
        gbc.writeMem(0x602, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1420);
        EXPECT(gbc.pc(), 0x604);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0079
        gbc.setState(0xb3ff, 0xf549, 0x5830, 0x9c95, 0x58b5, 0x84e, 0x1, 0x0);
        gbc.writeMem(0xb3ff, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf549);
        EXPECT(gbc.pc(), 0xb401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3ff), 0xcb);
        EXPECT(gbc.readMem(0xb400), 0xa0);
        // CB A0 007A
        gbc.setState(0x7dc4, 0x4895, 0xf5f0, 0x4d23, 0xf2e5, 0x7590, 0x0, 0x1);
        gbc.writeMem(0x7dc4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4895);
        EXPECT(gbc.pc(), 0x7dc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 007B
        gbc.setState(0x46c, 0x596, 0xd1c0, 0xb26a, 0xa28d, 0xec87, 0x0, 0x1);
        gbc.writeMem(0x46c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x596);
        EXPECT(gbc.pc(), 0x46e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 007C
        gbc.setState(0x35c4, 0xdf20, 0x6ba0, 0xc73b, 0xd378, 0x18e2, 0x1, 0x1);
        gbc.writeMem(0x35c4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xdf20);
        EXPECT(gbc.pc(), 0x35c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 007D
        gbc.setState(0x36ed, 0xd26e, 0x4c50, 0xdbc8, 0x84fa, 0x5774, 0x1, 0x1);
        gbc.writeMem(0x36ed, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd26e);
        EXPECT(gbc.pc(), 0x36ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 007E
        gbc.setState(0xeb0c, 0x8894, 0x6ab0, 0x91d0, 0xafe2, 0x6e4a, 0x1, 0x1);
        gbc.writeMem(0xeb0c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8894);
        EXPECT(gbc.pc(), 0xeb0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb0c), 0xcb);
        EXPECT(gbc.readMem(0xeb0d), 0xa0);
        // CB A0 007F
        gbc.setState(0x25db, 0x6304, 0x90d0, 0x8efd, 0xee4a, 0xc4fc, 0x0, 0x1);
        gbc.writeMem(0x25db, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6304);
        EXPECT(gbc.pc(), 0x25dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0080
        gbc.setState(0x1b0, 0xcdac, 0x8ae0, 0x3146, 0x8f20, 0x1835, 0x1, 0x0);
        gbc.writeMem(0x1b0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xcdac);
        EXPECT(gbc.pc(), 0x1b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0081
        gbc.setState(0x94ff, 0x8e11, 0x39b0, 0xf846, 0xa881, 0x6572, 0x1, 0x0);
        gbc.writeMem(0x94ff, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8e11);
        EXPECT(gbc.pc(), 0x9501);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94ff), 0xcb);
        EXPECT(gbc.readMem(0x9500), 0xa0);
        // CB A0 0082
        gbc.setState(0xb2ce, 0xf659, 0x9830, 0x10fe, 0x8633, 0xbc6c, 0x1, 0x0);
        gbc.writeMem(0xb2ce, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xf659);
        EXPECT(gbc.pc(), 0xb2d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2ce), 0xcb);
        EXPECT(gbc.readMem(0xb2cf), 0xa0);
        // CB A0 0083
        gbc.setState(0x40, 0x397d, 0xd330, 0x93b6, 0x537c, 0x12b0, 0x1, 0x0);
        gbc.writeMem(0x40, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x397d);
        EXPECT(gbc.pc(), 0x42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0084
        gbc.setState(0x49c, 0xb1c6, 0x5d90, 0x7303, 0xa7d, 0x80e6, 0x0, 0x0);
        gbc.writeMem(0x49c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb1c6);
        EXPECT(gbc.pc(), 0x49e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0085
        gbc.setState(0x4a88, 0xcd82, 0x2520, 0xe537, 0x5a82, 0x7553, 0x0, 0x1);
        gbc.writeMem(0x4a88, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xcd82);
        EXPECT(gbc.pc(), 0x4a8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0086
        gbc.setState(0x8f9b, 0x3cfd, 0xaa40, 0x1e62, 0x83ad, 0xf354, 0x1, 0x1);
        gbc.writeMem(0x8f9b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x3cfd);
        EXPECT(gbc.pc(), 0x8f9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f9b), 0xcb);
        EXPECT(gbc.readMem(0x8f9c), 0xa0);
        // CB A0 0087
        gbc.setState(0x94de, 0x3d9, 0x42d0, 0xb5b3, 0xd635, 0x45e8, 0x1, 0x0);
        gbc.writeMem(0x94de, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3d9);
        EXPECT(gbc.pc(), 0x94e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94de), 0xcb);
        EXPECT(gbc.readMem(0x94df), 0xa0);
        // CB A0 0088
        gbc.setState(0xcb80, 0x1ed5, 0xc0f0, 0xb06, 0xacb7, 0x8b56, 0x1, 0x1);
        gbc.writeMem(0xcb80, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1ed5);
        EXPECT(gbc.pc(), 0xcb82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb80), 0xcb);
        EXPECT(gbc.readMem(0xcb81), 0xa0);
        // CB A0 0089
        gbc.setState(0x64c9, 0x3ddf, 0xd060, 0x3f6e, 0xd052, 0xcfb5, 0x0, 0x1);
        gbc.writeMem(0x64c9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x3ddf);
        EXPECT(gbc.pc(), 0x64cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 008A
        gbc.setState(0x2c62, 0xfda2, 0x6130, 0x5124, 0x89b, 0x654e, 0x0, 0x1);
        gbc.writeMem(0x2c62, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xfda2);
        EXPECT(gbc.pc(), 0x2c64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 008B
        gbc.setState(0x85af, 0xea08, 0xdd50, 0x9c70, 0x18ba, 0xee4d, 0x1, 0x1);
        gbc.writeMem(0x85af, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xea08);
        EXPECT(gbc.pc(), 0x85b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85af), 0xcb);
        EXPECT(gbc.readMem(0x85b0), 0xa0);
        // CB A0 008C
        gbc.setState(0x8799, 0xb1b7, 0xe8d0, 0x5363, 0x81c3, 0xb850, 0x0, 0x0);
        gbc.writeMem(0x8799, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb1b7);
        EXPECT(gbc.pc(), 0x879b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8799), 0xcb);
        EXPECT(gbc.readMem(0x879a), 0xa0);
        // CB A0 008D
        gbc.setState(0x9225, 0x4ccb, 0x66b0, 0x732d, 0xcff2, 0xe676, 0x0, 0x0);
        gbc.writeMem(0x9225, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x4ccb);
        EXPECT(gbc.pc(), 0x9227);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9225), 0xcb);
        EXPECT(gbc.readMem(0x9226), 0xa0);
        // CB A0 008E
        gbc.setState(0x1dae, 0x29b9, 0xd250, 0x5f42, 0xa026, 0x8383, 0x0, 0x0);
        gbc.writeMem(0x1dae, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x29b9);
        EXPECT(gbc.pc(), 0x1db0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0090
        gbc.setState(0x286a, 0x3983, 0x3250, 0xd08b, 0x3739, 0xba75, 0x0, 0x0);
        gbc.writeMem(0x286a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x3983);
        EXPECT(gbc.pc(), 0x286c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0092
        gbc.setState(0x6161, 0x7af1, 0x4350, 0xd532, 0x602c, 0xdfaf, 0x0, 0x0);
        gbc.writeMem(0x6161, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7af1);
        EXPECT(gbc.pc(), 0x6163);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0093
        gbc.setState(0x9ccf, 0x75f, 0x5010, 0x30df, 0x9cf, 0xf896, 0x0, 0x0);
        gbc.writeMem(0x9ccf, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x75f);
        EXPECT(gbc.pc(), 0x9cd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ccf), 0xcb);
        EXPECT(gbc.readMem(0x9cd0), 0xa0);
        // CB A0 0094
        gbc.setState(0xe647, 0x8152, 0x21f0, 0x4167, 0x56fd, 0xe468, 0x1, 0x0);
        gbc.writeMem(0xe647, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8152);
        EXPECT(gbc.pc(), 0xe649);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe647), 0xcb);
        EXPECT(gbc.readMem(0xe648), 0xa0);
        // CB A0 0095
        gbc.setState(0x2f58, 0x535b, 0x5290, 0xd6d8, 0x6e81, 0x2004, 0x1, 0x0);
        gbc.writeMem(0x2f58, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x535b);
        EXPECT(gbc.pc(), 0x2f5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0096
        gbc.setState(0x67bf, 0x569c, 0xbd90, 0x2599, 0xb00a, 0xf9d5, 0x1, 0x0);
        gbc.writeMem(0x67bf, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x569c);
        EXPECT(gbc.pc(), 0x67c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0097
        gbc.setState(0x87d1, 0x839d, 0x3d40, 0x559b, 0x1d2c, 0x54cd, 0x1, 0x0);
        gbc.writeMem(0x87d1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x839d);
        EXPECT(gbc.pc(), 0x87d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87d1), 0xcb);
        EXPECT(gbc.readMem(0x87d2), 0xa0);
        // CB A0 0098
        gbc.setState(0xd10f, 0x3e42, 0x45c0, 0xc85b, 0x8c38, 0x6f35, 0x1, 0x0);
        gbc.writeMem(0xd10f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3e42);
        EXPECT(gbc.pc(), 0xd111);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd10f), 0xcb);
        EXPECT(gbc.readMem(0xd110), 0xa0);
        // CB A0 0099
        gbc.setState(0x8daf, 0xa79a, 0xbb70, 0x88d5, 0x8b2f, 0x74c9, 0x1, 0x0);
        gbc.writeMem(0x8daf, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa79a);
        EXPECT(gbc.pc(), 0x8db1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8daf), 0xcb);
        EXPECT(gbc.readMem(0x8db0), 0xa0);
        // CB A0 009A
        gbc.setState(0xa4da, 0x69dc, 0x790, 0xe0b0, 0x4210, 0x8f46, 0x0, 0x1);
        gbc.writeMem(0xa4da, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x69dc);
        EXPECT(gbc.pc(), 0xa4dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4da), 0xcb);
        EXPECT(gbc.readMem(0xa4db), 0xa0);
        // CB A0 009B
        gbc.setState(0x5ddc, 0xb669, 0xd4b0, 0x3fd5, 0x561, 0x2a35, 0x1, 0x0);
        gbc.writeMem(0x5ddc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb669);
        EXPECT(gbc.pc(), 0x5dde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 009C
        gbc.setState(0x8e57, 0xfa08, 0x3d00, 0xeac5, 0x5a28, 0x6e35, 0x1, 0x1);
        gbc.writeMem(0x8e57, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xfa08);
        EXPECT(gbc.pc(), 0x8e59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e57), 0xcb);
        EXPECT(gbc.readMem(0x8e58), 0xa0);
        // CB A0 009D
        gbc.setState(0xdb69, 0x2658, 0x2140, 0x81c2, 0x11b2, 0x751, 0x1, 0x0);
        gbc.writeMem(0xdb69, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x2658);
        EXPECT(gbc.pc(), 0xdb6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb69), 0xcb);
        EXPECT(gbc.readMem(0xdb6a), 0xa0);
        // CB A0 009E
        gbc.setState(0x37a3, 0x5157, 0x41e0, 0x82e4, 0x405, 0x1caa, 0x0, 0x0);
        gbc.writeMem(0x37a3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5157);
        EXPECT(gbc.pc(), 0x37a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 009F
        gbc.setState(0xc196, 0x4a9, 0xa8f0, 0x7740, 0xbaf4, 0xb80, 0x0, 0x1);
        gbc.writeMem(0xc196, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4a9);
        EXPECT(gbc.pc(), 0xc198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc196), 0xcb);
        EXPECT(gbc.readMem(0xc197), 0xa0);
        // CB A0 00A0
        gbc.setState(0xad07, 0xc498, 0xa240, 0xe1eb, 0x768f, 0x6eb9, 0x1, 0x0);
        gbc.writeMem(0xad07, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc498);
        EXPECT(gbc.pc(), 0xad09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad07), 0xcb);
        EXPECT(gbc.readMem(0xad08), 0xa0);
        // CB A0 00A1
        gbc.setState(0x8358, 0x254f, 0x7d60, 0x5cd1, 0xc727, 0x38c6, 0x1, 0x0);
        gbc.writeMem(0x8358, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x254f);
        EXPECT(gbc.pc(), 0x835a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8358), 0xcb);
        EXPECT(gbc.readMem(0x8359), 0xa0);
        // CB A0 00A3
        gbc.setState(0xe24c, 0x8508, 0x4b70, 0x36a7, 0x5296, 0x6aa1, 0x1, 0x1);
        gbc.writeMem(0xe24c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8508);
        EXPECT(gbc.pc(), 0xe24e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe24c), 0xcb);
        EXPECT(gbc.readMem(0xe24d), 0xa0);
        // CB A0 00A4
        gbc.setState(0xd9ae, 0x42b8, 0xbc60, 0xe445, 0x5efd, 0x8117, 0x1, 0x0);
        gbc.writeMem(0xd9ae, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x42b8);
        EXPECT(gbc.pc(), 0xd9b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ae), 0xcb);
        EXPECT(gbc.readMem(0xd9af), 0xa0);
        // CB A0 00A5
        gbc.setState(0x686d, 0xcff8, 0xdf0, 0x9d1a, 0xcd2d, 0x1c62, 0x0, 0x0);
        gbc.writeMem(0x686d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xcff8);
        EXPECT(gbc.pc(), 0x686f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00A6
        gbc.setState(0xadda, 0x98a2, 0x2db0, 0x68da, 0xea8e, 0x1788, 0x0, 0x0);
        gbc.writeMem(0xadda, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x98a2);
        EXPECT(gbc.pc(), 0xaddc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadda), 0xcb);
        EXPECT(gbc.readMem(0xaddb), 0xa0);
        // CB A0 00A8
        gbc.setState(0x3d95, 0xa609, 0x67b0, 0xa26c, 0xb5ff, 0xe878, 0x1, 0x0);
        gbc.writeMem(0x3d95, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa609);
        EXPECT(gbc.pc(), 0x3d97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00A9
        gbc.setState(0xcfb4, 0xbfd5, 0x2ca0, 0x235f, 0x2144, 0x9e5, 0x1, 0x1);
        gbc.writeMem(0xcfb4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xbfd5);
        EXPECT(gbc.pc(), 0xcfb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfb4), 0xcb);
        EXPECT(gbc.readMem(0xcfb5), 0xa0);
        // CB A0 00AA
        gbc.setState(0xa4af, 0x1900, 0x1150, 0xcb4d, 0x9cb0, 0x37ee, 0x0, 0x0);
        gbc.writeMem(0xa4af, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1900);
        EXPECT(gbc.pc(), 0xa4b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4af), 0xcb);
        EXPECT(gbc.readMem(0xa4b0), 0xa0);
        // CB A0 00AB
        gbc.setState(0x485c, 0x1a83, 0x55a0, 0xce90, 0x8b68, 0xd41f, 0x1, 0x0);
        gbc.writeMem(0x485c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x1a83);
        EXPECT(gbc.pc(), 0x485e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 00AC
        gbc.setState(0x8a69, 0xc07d, 0xff70, 0x213d, 0xc322, 0xd6fe, 0x0, 0x1);
        gbc.writeMem(0x8a69, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc07d);
        EXPECT(gbc.pc(), 0x8a6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a69), 0xcb);
        EXPECT(gbc.readMem(0x8a6a), 0xa0);
        // CB A0 00AD
        gbc.setState(0xc018, 0xc386, 0x34d0, 0x2633, 0xfc0f, 0xc553, 0x1, 0x1);
        gbc.writeMem(0xc018, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xc386);
        EXPECT(gbc.pc(), 0xc01a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc018), 0xcb);
        EXPECT(gbc.readMem(0xc019), 0xa0);
        // CB A0 00AE
        gbc.setState(0xd5c1, 0xac9b, 0xda60, 0x9598, 0x335, 0xca22, 0x1, 0x0);
        gbc.writeMem(0xd5c1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xac9b);
        EXPECT(gbc.pc(), 0xd5c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5c1), 0xcb);
        EXPECT(gbc.readMem(0xd5c2), 0xa0);
        // CB A0 00AF
        gbc.setState(0xa429, 0x43df, 0x4b20, 0xb513, 0xfd5e, 0x1cf3, 0x1, 0x0);
        gbc.writeMem(0xa429, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x43df);
        EXPECT(gbc.pc(), 0xa42b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa429), 0xcb);
        EXPECT(gbc.readMem(0xa42a), 0xa0);
        // CB A0 00B1
        gbc.setState(0xbbc2, 0x1b5b, 0x90, 0xe19f, 0x37fb, 0xaa51, 0x1, 0x0);
        gbc.writeMem(0xbbc2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1b5b);
        EXPECT(gbc.pc(), 0xbbc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbc2), 0xcb);
        EXPECT(gbc.readMem(0xbbc3), 0xa0);
        // CB A0 00B2
        gbc.setState(0x79f7, 0xc519, 0x1ce0, 0x8ca6, 0xc642, 0x67d, 0x0, 0x0);
        gbc.writeMem(0x79f7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc519);
        EXPECT(gbc.pc(), 0x79f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 00B3
        gbc.setState(0xae02, 0x9f43, 0x7c10, 0x2384, 0x40c5, 0x4509, 0x1, 0x1);
        gbc.writeMem(0xae02, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x9f43);
        EXPECT(gbc.pc(), 0xae04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae02), 0xcb);
        EXPECT(gbc.readMem(0xae03), 0xa0);
        // CB A0 00B5
        gbc.setState(0x3432, 0x3620, 0xc2f0, 0xdcdb, 0x18a4, 0x4e08, 0x1, 0x1);
        gbc.writeMem(0x3432, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x3620);
        EXPECT(gbc.pc(), 0x3434);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00B6
        gbc.setState(0xa545, 0x6b09, 0xe4e0, 0x5be, 0x1c0a, 0x68ab, 0x0, 0x1);
        gbc.writeMem(0xa545, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6b09);
        EXPECT(gbc.pc(), 0xa547);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa545), 0xcb);
        EXPECT(gbc.readMem(0xa546), 0xa0);
        // CB A0 00B7
        gbc.setState(0x7be, 0x549, 0x9f90, 0x55e2, 0xb9b, 0x8abc, 0x0, 0x1);
        gbc.writeMem(0x7be, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x549);
        EXPECT(gbc.pc(), 0x7c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00B8
        gbc.setState(0x240a, 0x2c3a, 0xbde0, 0x829a, 0x4954, 0xba41, 0x1, 0x0);
        gbc.writeMem(0x240a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x2c3a);
        EXPECT(gbc.pc(), 0x240c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 00B9
        gbc.setState(0xe1ee, 0x4679, 0xc630, 0x4f76, 0xa67c, 0x2fb4, 0x1, 0x0);
        gbc.writeMem(0xe1ee, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4679);
        EXPECT(gbc.pc(), 0xe1f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ee), 0xcb);
        EXPECT(gbc.readMem(0xe1ef), 0xa0);
        // CB A0 00BA
        gbc.setState(0x926b, 0x6a46, 0x9e10, 0x9f0c, 0x64ac, 0x33e0, 0x1, 0x1);
        gbc.writeMem(0x926b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6a46);
        EXPECT(gbc.pc(), 0x926d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x926b), 0xcb);
        EXPECT(gbc.readMem(0x926c), 0xa0);
        // CB A0 00BB
        gbc.setState(0x66e3, 0xf646, 0x8eb0, 0x733, 0x3b, 0xa610, 0x0, 0x1);
        gbc.writeMem(0x66e3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf646);
        EXPECT(gbc.pc(), 0x66e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00BC
        gbc.setState(0x59da, 0xc086, 0x4f10, 0x7879, 0xd3a3, 0xc777, 0x1, 0x0);
        gbc.writeMem(0x59da, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc086);
        EXPECT(gbc.pc(), 0x59dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00BD
        gbc.setState(0xb30, 0x523a, 0x3490, 0x92d8, 0x3f4f, 0xb3b9, 0x0, 0x0);
        gbc.writeMem(0xb30, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x523a);
        EXPECT(gbc.pc(), 0xb32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00BE
        gbc.setState(0xa57d, 0x3124, 0x52d0, 0x5e14, 0xd64c, 0xec6d, 0x0, 0x0);
        gbc.writeMem(0xa57d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3124);
        EXPECT(gbc.pc(), 0xa57f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa57d), 0xcb);
        EXPECT(gbc.readMem(0xa57e), 0xa0);
        // CB A0 00BF
        gbc.setState(0xcf26, 0x8c1a, 0xeb70, 0xd770, 0xf9da, 0x230f, 0x0, 0x0);
        gbc.writeMem(0xcf26, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8c1a);
        EXPECT(gbc.pc(), 0xcf28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf26), 0xcb);
        EXPECT(gbc.readMem(0xcf27), 0xa0);
        // CB A0 00C0
        gbc.setState(0x52e0, 0x74cc, 0x4790, 0x739e, 0x5623, 0xe3a5, 0x0, 0x1);
        gbc.writeMem(0x52e0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x74cc);
        EXPECT(gbc.pc(), 0x52e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00C1
        gbc.setState(0x61f7, 0xb9ff, 0x7030, 0x6eec, 0xacbb, 0x11a7, 0x1, 0x0);
        gbc.writeMem(0x61f7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xb9ff);
        EXPECT(gbc.pc(), 0x61f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00C2
        gbc.setState(0xd259, 0xd59d, 0xf2b0, 0x8374, 0xad86, 0xad1c, 0x0, 0x0);
        gbc.writeMem(0xd259, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd59d);
        EXPECT(gbc.pc(), 0xd25b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd259), 0xcb);
        EXPECT(gbc.readMem(0xd25a), 0xa0);
        // CB A0 00C3
        gbc.setState(0x34f8, 0xf496, 0xf1f0, 0xdc3d, 0x2d6a, 0xbe73, 0x0, 0x1);
        gbc.writeMem(0x34f8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf496);
        EXPECT(gbc.pc(), 0x34fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00C4
        gbc.setState(0x4846, 0xe309, 0x2560, 0xf5ce, 0x285e, 0x74b1, 0x1, 0x1);
        gbc.writeMem(0x4846, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xe309);
        EXPECT(gbc.pc(), 0x4848);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 00C5
        gbc.setState(0x2c5d, 0x8c41, 0xf470, 0x4ca0, 0xaa5d, 0x42e5, 0x1, 0x1);
        gbc.writeMem(0x2c5d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x8c41);
        EXPECT(gbc.pc(), 0x2c5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00C6
        gbc.setState(0x33b0, 0xc90d, 0xf140, 0xa37d, 0xc5a9, 0xd590, 0x1, 0x1);
        gbc.writeMem(0x33b0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc90d);
        EXPECT(gbc.pc(), 0x33b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 00C7
        gbc.setState(0x7a97, 0x8b00, 0x9ed0, 0xc05c, 0x9e3d, 0x1f0a, 0x1, 0x0);
        gbc.writeMem(0x7a97, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8b00);
        EXPECT(gbc.pc(), 0x7a99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00C8
        gbc.setState(0xf29, 0x7206, 0x7a50, 0xc3ed, 0xffe9, 0x7a71, 0x0, 0x0);
        gbc.writeMem(0xf29, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7206);
        EXPECT(gbc.pc(), 0xf2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00C9
        gbc.setState(0x548c, 0xc83d, 0xe640, 0x8b17, 0xc2a8, 0x82e2, 0x0, 0x1);
        gbc.writeMem(0x548c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc83d);
        EXPECT(gbc.pc(), 0x548e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 00CA
        gbc.setState(0x1129, 0xa675, 0x3940, 0x15ab, 0xb7c1, 0xe350, 0x1, 0x0);
        gbc.writeMem(0x1129, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa675);
        EXPECT(gbc.pc(), 0x112b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 00CB
        gbc.setState(0x106e, 0x79a0, 0x5890, 0xec1d, 0xc5a1, 0x1e03, 0x1, 0x0);
        gbc.writeMem(0x106e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x79a0);
        EXPECT(gbc.pc(), 0x1070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00CC
        gbc.setState(0x821c, 0x66c9, 0xdc90, 0x8158, 0x3f28, 0xe95e, 0x1, 0x0);
        gbc.writeMem(0x821c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x66c9);
        EXPECT(gbc.pc(), 0x821e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x821c), 0xcb);
        EXPECT(gbc.readMem(0x821d), 0xa0);
        // CB A0 00CD
        gbc.setState(0xbdac, 0x4198, 0x2a80, 0x8924, 0x6cfe, 0x2b01, 0x1, 0x1);
        gbc.writeMem(0xbdac, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4198);
        EXPECT(gbc.pc(), 0xbdae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdac), 0xcb);
        EXPECT(gbc.readMem(0xbdad), 0xa0);
        // CB A0 00CE
        gbc.setState(0x4056, 0xb4c0, 0x9e90, 0x4585, 0xb831, 0x31f3, 0x0, 0x1);
        gbc.writeMem(0x4056, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xb4c0);
        EXPECT(gbc.pc(), 0x4058);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00CF
        gbc.setState(0x202d, 0xf79b, 0xcf60, 0xc3b7, 0xe84e, 0x8c1a, 0x1, 0x0);
        gbc.writeMem(0x202d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf79b);
        EXPECT(gbc.pc(), 0x202f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 00D0
        gbc.setState(0x49ba, 0xcc74, 0x67e0, 0xa30c, 0x68ea, 0xf893, 0x0, 0x1);
        gbc.writeMem(0x49ba, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xcc74);
        EXPECT(gbc.pc(), 0x49bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 00D1
        gbc.setState(0xd75f, 0xf326, 0x9a60, 0x62a1, 0x1b7d, 0x148c, 0x0, 0x0);
        gbc.writeMem(0xd75f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf326);
        EXPECT(gbc.pc(), 0xd761);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd75f), 0xcb);
        EXPECT(gbc.readMem(0xd760), 0xa0);
        // CB A0 00D2
        gbc.setState(0x17d7, 0x6e3a, 0x2270, 0x361c, 0x5e85, 0x56fd, 0x0, 0x0);
        gbc.writeMem(0x17d7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6e3a);
        EXPECT(gbc.pc(), 0x17d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00D3
        gbc.setState(0x48d6, 0x8229, 0xbec0, 0xb1fc, 0xb391, 0xc1e1, 0x0, 0x0);
        gbc.writeMem(0x48d6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x8229);
        EXPECT(gbc.pc(), 0x48d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 00D4
        gbc.setState(0xe5d4, 0xf886, 0x6590, 0x8501, 0x51fb, 0xe525, 0x0, 0x1);
        gbc.writeMem(0xe5d4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf886);
        EXPECT(gbc.pc(), 0xe5d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5d4), 0xcb);
        EXPECT(gbc.readMem(0xe5d5), 0xa0);
        // CB A0 00D5
        gbc.setState(0x8cc7, 0x3125, 0x6c50, 0x9aa6, 0x4995, 0x4e52, 0x1, 0x0);
        gbc.writeMem(0x8cc7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x3125);
        EXPECT(gbc.pc(), 0x8cc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cc7), 0xcb);
        EXPECT(gbc.readMem(0x8cc8), 0xa0);
        // CB A0 00D6
        gbc.setState(0xeec7, 0xb33b, 0xaa40, 0x6f8, 0xf27b, 0x93d7, 0x0, 0x1);
        gbc.writeMem(0xeec7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb33b);
        EXPECT(gbc.pc(), 0xeec9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeec7), 0xcb);
        EXPECT(gbc.readMem(0xeec8), 0xa0);
        // CB A0 00D7
        gbc.setState(0xb87, 0xe3a5, 0x1280, 0x96e, 0x86f9, 0xa2ec, 0x0, 0x0);
        gbc.writeMem(0xb87, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xe3a5);
        EXPECT(gbc.pc(), 0xb89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 00D8
        gbc.setState(0x5a44, 0x69e6, 0xe500, 0x51e8, 0xad09, 0xab4d, 0x0, 0x1);
        gbc.writeMem(0x5a44, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x69e6);
        EXPECT(gbc.pc(), 0x5a46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 00D9
        gbc.setState(0x9ba7, 0xb6ae, 0x3040, 0x8aa8, 0xce7, 0xb565, 0x0, 0x1);
        gbc.writeMem(0x9ba7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb6ae);
        EXPECT(gbc.pc(), 0x9ba9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ba7), 0xcb);
        EXPECT(gbc.readMem(0x9ba8), 0xa0);
        // CB A0 00DA
        gbc.setState(0xdf6a, 0x93f, 0x53d0, 0xe6c, 0x9b51, 0x402e, 0x0, 0x0);
        gbc.writeMem(0xdf6a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x93f);
        EXPECT(gbc.pc(), 0xdf6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf6a), 0xcb);
        EXPECT(gbc.readMem(0xdf6b), 0xa0);
        // CB A0 00DB
        gbc.setState(0x3323, 0xbc13, 0x4c0, 0xe548, 0x8c9a, 0xdb45, 0x1, 0x0);
        gbc.writeMem(0x3323, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xbc13);
        EXPECT(gbc.pc(), 0x3325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 00DC
        gbc.setState(0x2c88, 0x5a78, 0x8cf0, 0x6b6b, 0x371c, 0x2b98, 0x1, 0x1);
        gbc.writeMem(0x2c88, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x5a78);
        EXPECT(gbc.pc(), 0x2c8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00DD
        gbc.setState(0xb603, 0xa3b7, 0xf300, 0xe866, 0x75a2, 0xdad9, 0x0, 0x0);
        gbc.writeMem(0xb603, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa3b7);
        EXPECT(gbc.pc(), 0xb605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb603), 0xcb);
        EXPECT(gbc.readMem(0xb604), 0xa0);
        // CB A0 00DE
        gbc.setState(0xb2c0, 0x915d, 0x6470, 0x3d87, 0x56b0, 0x782, 0x1, 0x1);
        gbc.writeMem(0xb2c0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x915d);
        EXPECT(gbc.pc(), 0xb2c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2c0), 0xcb);
        EXPECT(gbc.readMem(0xb2c1), 0xa0);
        // CB A0 00DF
        gbc.setState(0x3a65, 0x215f, 0x7fb0, 0xae8b, 0x45fc, 0x2bc9, 0x1, 0x1);
        gbc.writeMem(0x3a65, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x215f);
        EXPECT(gbc.pc(), 0x3a67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00E0
        gbc.setState(0xd7d3, 0x719a, 0x83b0, 0x280d, 0x2901, 0xd3bf, 0x0, 0x1);
        gbc.writeMem(0xd7d3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x719a);
        EXPECT(gbc.pc(), 0xd7d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7d3), 0xcb);
        EXPECT(gbc.readMem(0xd7d4), 0xa0);
        // CB A0 00E1
        gbc.setState(0x4f66, 0x6d2e, 0xcbb0, 0xd49a, 0x1ceb, 0x6f92, 0x0, 0x1);
        gbc.writeMem(0x4f66, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6d2e);
        EXPECT(gbc.pc(), 0x4f68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00E2
        gbc.setState(0xcd70, 0x6f47, 0x8000, 0x1767, 0x1661, 0x2fb3, 0x1, 0x0);
        gbc.writeMem(0xcd70, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6f47);
        EXPECT(gbc.pc(), 0xcd72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd70), 0xcb);
        EXPECT(gbc.readMem(0xcd71), 0xa0);
        // CB A0 00E3
        gbc.setState(0xa6d1, 0x4eec, 0xa050, 0x8c6, 0xe91c, 0x183d, 0x1, 0x0);
        gbc.writeMem(0xa6d1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4eec);
        EXPECT(gbc.pc(), 0xa6d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6d1), 0xcb);
        EXPECT(gbc.readMem(0xa6d2), 0xa0);
        // CB A0 00E4
        gbc.setState(0x1dfa, 0x1060, 0xa910, 0x8e20, 0x9a4b, 0x307b, 0x0, 0x1);
        gbc.writeMem(0x1dfa, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x1060);
        EXPECT(gbc.pc(), 0x1dfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00E5
        gbc.setState(0x431b, 0x4f99, 0x8120, 0x226a, 0xad7c, 0x82c6, 0x0, 0x1);
        gbc.writeMem(0x431b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4f99);
        EXPECT(gbc.pc(), 0x431d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 00E6
        gbc.setState(0x87f5, 0xef06, 0x6170, 0x6cbf, 0x4aaa, 0x289, 0x0, 0x0);
        gbc.writeMem(0x87f5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xef06);
        EXPECT(gbc.pc(), 0x87f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87f5), 0xcb);
        EXPECT(gbc.readMem(0x87f6), 0xa0);
        // CB A0 00E7
        gbc.setState(0xcbd4, 0x94d0, 0x9bd0, 0xc60a, 0xe200, 0xde7f, 0x1, 0x1);
        gbc.writeMem(0xcbd4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x94d0);
        EXPECT(gbc.pc(), 0xcbd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbd4), 0xcb);
        EXPECT(gbc.readMem(0xcbd5), 0xa0);
        // CB A0 00E9
        gbc.setState(0x3727, 0x699e, 0xc900, 0xd788, 0x4510, 0x1078, 0x0, 0x1);
        gbc.writeMem(0x3727, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x699e);
        EXPECT(gbc.pc(), 0x3729);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 00EA
        gbc.setState(0x7a94, 0x7fdb, 0x24f0, 0x6a0a, 0xffd4, 0xd134, 0x0, 0x1);
        gbc.writeMem(0x7a94, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7fdb);
        EXPECT(gbc.pc(), 0x7a96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00EB
        gbc.setState(0x7882, 0x92a2, 0xdd40, 0x7c28, 0x2f3f, 0x16d9, 0x0, 0x1);
        gbc.writeMem(0x7882, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x92a2);
        EXPECT(gbc.pc(), 0x7884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 00EC
        gbc.setState(0x2c4, 0x90d4, 0xf120, 0x888d, 0x159f, 0xb993, 0x0, 0x0);
        gbc.writeMem(0x2c4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x90d4);
        EXPECT(gbc.pc(), 0x2c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 00ED
        gbc.setState(0x90c4, 0x4080, 0xb3d0, 0xdeb4, 0xf0df, 0x7399, 0x1, 0x1);
        gbc.writeMem(0x90c4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4080);
        EXPECT(gbc.pc(), 0x90c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90c4), 0xcb);
        EXPECT(gbc.readMem(0x90c5), 0xa0);
        // CB A0 00EE
        gbc.setState(0x4b67, 0x9f31, 0xbd10, 0xdce2, 0x331e, 0xe034, 0x0, 0x0);
        gbc.writeMem(0x4b67, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9f31);
        EXPECT(gbc.pc(), 0x4b69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00EF
        gbc.setState(0x263c, 0x7f94, 0x1a30, 0xd3f9, 0x4547, 0x6f4, 0x0, 0x1);
        gbc.writeMem(0x263c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7f94);
        EXPECT(gbc.pc(), 0x263e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00F0
        gbc.setState(0x96a7, 0x55d9, 0x7930, 0xd707, 0x544f, 0xc092, 0x0, 0x0);
        gbc.writeMem(0x96a7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x55d9);
        EXPECT(gbc.pc(), 0x96a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96a7), 0xcb);
        EXPECT(gbc.readMem(0x96a8), 0xa0);
        // CB A0 00F1
        gbc.setState(0x19d7, 0x63d6, 0xf100, 0x9ed8, 0xeab, 0x3558, 0x0, 0x1);
        gbc.writeMem(0x19d7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x63d6);
        EXPECT(gbc.pc(), 0x19d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 00F2
        gbc.setState(0x716e, 0xb5e8, 0xd2a0, 0x989d, 0x6b0f, 0x1117, 0x1, 0x1);
        gbc.writeMem(0x716e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb5e8);
        EXPECT(gbc.pc(), 0x7170);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 00F4
        gbc.setState(0x9389, 0xd397, 0xd0c0, 0x2f25, 0xb1, 0xc22d, 0x1, 0x1);
        gbc.writeMem(0x9389, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd397);
        EXPECT(gbc.pc(), 0x938b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9389), 0xcb);
        EXPECT(gbc.readMem(0x938a), 0xa0);
        // CB A0 00F5
        gbc.setState(0xe516, 0x9a97, 0xfa70, 0xa948, 0xd0be, 0xc0b1, 0x1, 0x1);
        gbc.writeMem(0xe516, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9a97);
        EXPECT(gbc.pc(), 0xe518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe516), 0xcb);
        EXPECT(gbc.readMem(0xe517), 0xa0);
        // CB A0 00F6
        gbc.setState(0xc416, 0xbb96, 0xbc40, 0xbb59, 0xf3a4, 0xcbcf, 0x1, 0x1);
        gbc.writeMem(0xc416, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xbb96);
        EXPECT(gbc.pc(), 0xc418);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc416), 0xcb);
        EXPECT(gbc.readMem(0xc417), 0xa0);
        // CB A0 00F7
        gbc.setState(0xa7d0, 0xa2b9, 0x3200, 0x516e, 0x736b, 0x8481, 0x0, 0x0);
        gbc.writeMem(0xa7d0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa2b9);
        EXPECT(gbc.pc(), 0xa7d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7d0), 0xcb);
        EXPECT(gbc.readMem(0xa7d1), 0xa0);
        // CB A0 00F8
        gbc.setState(0xbf95, 0xf33d, 0x6df0, 0xc6bf, 0xd7d7, 0xec83, 0x1, 0x1);
        gbc.writeMem(0xbf95, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xf33d);
        EXPECT(gbc.pc(), 0xbf97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf95), 0xcb);
        EXPECT(gbc.readMem(0xbf96), 0xa0);
        // CB A0 00F9
        gbc.setState(0x1a87, 0x7dab, 0x3e50, 0xc54b, 0xb71a, 0x199f, 0x0, 0x1);
        gbc.writeMem(0x1a87, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7dab);
        EXPECT(gbc.pc(), 0x1a89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00FA
        gbc.setState(0x3629, 0x5c13, 0x5370, 0xf3d8, 0x444, 0xe4e2, 0x0, 0x0);
        gbc.writeMem(0x3629, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5c13);
        EXPECT(gbc.pc(), 0x362b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00FB
        gbc.setState(0x7ed1, 0xd5f5, 0xefd0, 0x2b5a, 0x4f90, 0x3d9b, 0x0, 0x0);
        gbc.writeMem(0x7ed1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd5f5);
        EXPECT(gbc.pc(), 0x7ed3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00FC
        gbc.setState(0x616, 0x17ae, 0x6d40, 0xf300, 0xdf17, 0xf47a, 0x0, 0x0);
        gbc.writeMem(0x616, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x17ae);
        EXPECT(gbc.pc(), 0x618);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 00FD
        gbc.setState(0xad9e, 0x1388, 0xbe70, 0x5321, 0x1eb, 0xd64a, 0x1, 0x1);
        gbc.writeMem(0xad9e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1388);
        EXPECT(gbc.pc(), 0xada0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad9e), 0xcb);
        EXPECT(gbc.readMem(0xad9f), 0xa0);
        // CB A0 00FE
        gbc.setState(0x1e25, 0x8897, 0x25f0, 0x8383, 0x2c5, 0x31e5, 0x0, 0x0);
        gbc.writeMem(0x1e25, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x8897);
        EXPECT(gbc.pc(), 0x1e27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 00FF
        gbc.setState(0xaac0, 0x2253, 0x2470, 0xfbfd, 0x3bb3, 0xd652, 0x0, 0x0);
        gbc.writeMem(0xaac0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2253);
        EXPECT(gbc.pc(), 0xaac2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaac0), 0xcb);
        EXPECT(gbc.readMem(0xaac1), 0xa0);
        // CB A0 0101
        gbc.setState(0x8903, 0x5902, 0x5030, 0x8265, 0x756d, 0xcf51, 0x1, 0x0);
        gbc.writeMem(0x8903, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5902);
        EXPECT(gbc.pc(), 0x8905);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8903), 0xcb);
        EXPECT(gbc.readMem(0x8904), 0xa0);
        // CB A0 0102
        gbc.setState(0x7cc4, 0xdd89, 0x61a0, 0xfa6b, 0x1f35, 0xde38, 0x1, 0x0);
        gbc.writeMem(0x7cc4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xdd89);
        EXPECT(gbc.pc(), 0x7cc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0103
        gbc.setState(0xe16d, 0x4576, 0x1680, 0xb107, 0x754, 0x6db1, 0x1, 0x0);
        gbc.writeMem(0xe16d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4576);
        EXPECT(gbc.pc(), 0xe16f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe16d), 0xcb);
        EXPECT(gbc.readMem(0xe16e), 0xa0);
        // CB A0 0104
        gbc.setState(0xc185, 0xeaa9, 0xc6b0, 0x4b0d, 0xa9e8, 0x7099, 0x1, 0x1);
        gbc.writeMem(0xc185, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xeaa9);
        EXPECT(gbc.pc(), 0xc187);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc185), 0xcb);
        EXPECT(gbc.readMem(0xc186), 0xa0);
        // CB A0 0105
        gbc.setState(0x6bd2, 0x9abe, 0x7540, 0xf11e, 0xc3ba, 0x1f3a, 0x1, 0x1);
        gbc.writeMem(0x6bd2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9abe);
        EXPECT(gbc.pc(), 0x6bd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0106
        gbc.setState(0xdaa0, 0x4f6b, 0xd270, 0x28c0, 0xe4b4, 0x5627, 0x0, 0x0);
        gbc.writeMem(0xdaa0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4f6b);
        EXPECT(gbc.pc(), 0xdaa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaa0), 0xcb);
        EXPECT(gbc.readMem(0xdaa1), 0xa0);
        // CB A0 0107
        gbc.setState(0x8405, 0xfcf2, 0xcb60, 0xd82, 0x9ca, 0xf59f, 0x1, 0x1);
        gbc.writeMem(0x8405, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xfcf2);
        EXPECT(gbc.pc(), 0x8407);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8405), 0xcb);
        EXPECT(gbc.readMem(0x8406), 0xa0);
        // CB A0 0109
        gbc.setState(0x7275, 0x1b81, 0xbf20, 0xfdd6, 0x3848, 0xc65, 0x0, 0x0);
        gbc.writeMem(0x7275, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x1b81);
        EXPECT(gbc.pc(), 0x7277);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 010A
        gbc.setState(0xbdd1, 0xf9ed, 0x15b0, 0xd250, 0x4ba5, 0x7d9a, 0x0, 0x1);
        gbc.writeMem(0xbdd1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf9ed);
        EXPECT(gbc.pc(), 0xbdd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdd1), 0xcb);
        EXPECT(gbc.readMem(0xbdd2), 0xa0);
        // CB A0 010B
        gbc.setState(0xde48, 0xd23, 0x5800, 0xfc55, 0xd6e1, 0x4bf4, 0x0, 0x1);
        gbc.writeMem(0xde48, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd23);
        EXPECT(gbc.pc(), 0xde4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde48), 0xcb);
        EXPECT(gbc.readMem(0xde49), 0xa0);
        // CB A0 010C
        gbc.setState(0x508f, 0x862, 0x3180, 0xe910, 0x9548, 0xc32b, 0x0, 0x1);
        gbc.writeMem(0x508f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x862);
        EXPECT(gbc.pc(), 0x5091);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 010D
        gbc.setState(0x5580, 0x3d4f, 0xabd0, 0xb5, 0x374d, 0xf4d1, 0x1, 0x0);
        gbc.writeMem(0x5580, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3d4f);
        EXPECT(gbc.pc(), 0x5582);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 010E
        gbc.setState(0x246f, 0xf29, 0x8e0, 0x615e, 0x907d, 0x4dee, 0x0, 0x0);
        gbc.writeMem(0x246f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xf29);
        EXPECT(gbc.pc(), 0x2471);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 010F
        gbc.setState(0x8a07, 0x6f6f, 0x2d20, 0xf6fc, 0x5e70, 0x9e07, 0x1, 0x0);
        gbc.writeMem(0x8a07, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6f6f);
        EXPECT(gbc.pc(), 0x8a09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a07), 0xcb);
        EXPECT(gbc.readMem(0x8a08), 0xa0);
        // CB A0 0110
        gbc.setState(0x223e, 0xaa5d, 0x81e0, 0xf6cc, 0xbcfc, 0x5664, 0x1, 0x0);
        gbc.writeMem(0x223e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xaa5d);
        EXPECT(gbc.pc(), 0x2240);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0112
        gbc.setState(0x341f, 0xbc31, 0x6670, 0x1b60, 0xd07a, 0x59b5, 0x0, 0x1);
        gbc.writeMem(0x341f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xbc31);
        EXPECT(gbc.pc(), 0x3421);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0113
        gbc.setState(0x6c20, 0x18f1, 0xa5e0, 0x8cf9, 0x1428, 0x9b7, 0x1, 0x1);
        gbc.writeMem(0x6c20, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x18f1);
        EXPECT(gbc.pc(), 0x6c22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0115
        gbc.setState(0xed2b, 0x6cc3, 0x2d20, 0x4000, 0xe6c2, 0x1350, 0x0, 0x0);
        gbc.writeMem(0xed2b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6cc3);
        EXPECT(gbc.pc(), 0xed2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed2b), 0xcb);
        EXPECT(gbc.readMem(0xed2c), 0xa0);
        // CB A0 0116
        gbc.setState(0x53ce, 0xf5b2, 0x7290, 0x1c48, 0x121e, 0xc97b, 0x0, 0x1);
        gbc.writeMem(0x53ce, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf5b2);
        EXPECT(gbc.pc(), 0x53d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0117
        gbc.setState(0x22fc, 0x90, 0x9760, 0x4144, 0xaf8a, 0x7c92, 0x0, 0x1);
        gbc.writeMem(0x22fc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x90);
        EXPECT(gbc.pc(), 0x22fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0118
        gbc.setState(0x9906, 0xc5e4, 0x48a0, 0x43ea, 0xa3c9, 0xbf68, 0x0, 0x1);
        gbc.writeMem(0x9906, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc5e4);
        EXPECT(gbc.pc(), 0x9908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9906), 0xcb);
        EXPECT(gbc.readMem(0x9907), 0xa0);
        // CB A0 0119
        gbc.setState(0xdb7a, 0x3b8a, 0xab70, 0xa33e, 0xa3b6, 0x3453, 0x1, 0x0);
        gbc.writeMem(0xdb7a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3b8a);
        EXPECT(gbc.pc(), 0xdb7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb7a), 0xcb);
        EXPECT(gbc.readMem(0xdb7b), 0xa0);
        // CB A0 011A
        gbc.setState(0x76cd, 0xffbb, 0xc7c0, 0x22c7, 0x1b49, 0x7828, 0x1, 0x0);
        gbc.writeMem(0x76cd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xffbb);
        EXPECT(gbc.pc(), 0x76cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 011B
        gbc.setState(0x7d4a, 0x750b, 0x5710, 0x3753, 0x99cd, 0xe9d0, 0x1, 0x1);
        gbc.writeMem(0x7d4a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x750b);
        EXPECT(gbc.pc(), 0x7d4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 011C
        gbc.setState(0xed91, 0xefc3, 0xa330, 0xdce2, 0x2325, 0x6620, 0x1, 0x1);
        gbc.writeMem(0xed91, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xefc3);
        EXPECT(gbc.pc(), 0xed93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed91), 0xcb);
        EXPECT(gbc.readMem(0xed92), 0xa0);
        // CB A0 011D
        gbc.setState(0xe748, 0xe04a, 0x3050, 0xb9b2, 0xb7ca, 0x42ae, 0x0, 0x0);
        gbc.writeMem(0xe748, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe04a);
        EXPECT(gbc.pc(), 0xe74a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe748), 0xcb);
        EXPECT(gbc.readMem(0xe749), 0xa0);
        // CB A0 011E
        gbc.setState(0x8c27, 0x2622, 0xdf00, 0xd4aa, 0xb227, 0x53d1, 0x0, 0x0);
        gbc.writeMem(0x8c27, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x2622);
        EXPECT(gbc.pc(), 0x8c29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c27), 0xcb);
        EXPECT(gbc.readMem(0x8c28), 0xa0);
        // CB A0 011F
        gbc.setState(0x887, 0xb35c, 0x3bc0, 0xf948, 0xe981, 0x9735, 0x0, 0x1);
        gbc.writeMem(0x887, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb35c);
        EXPECT(gbc.pc(), 0x889);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0120
        gbc.setState(0xdf8f, 0xc1e0, 0xc5b0, 0xdca7, 0x71e9, 0x1e5b, 0x0, 0x0);
        gbc.writeMem(0xdf8f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc1e0);
        EXPECT(gbc.pc(), 0xdf91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf8f), 0xcb);
        EXPECT(gbc.readMem(0xdf90), 0xa0);
        // CB A0 0121
        gbc.setState(0x2a78, 0xf278, 0x8610, 0x1c74, 0xcc5e, 0xb5a4, 0x1, 0x1);
        gbc.writeMem(0x2a78, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf278);
        EXPECT(gbc.pc(), 0x2a7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0122
        gbc.setState(0x673f, 0xdeac, 0x8ca0, 0x512c, 0xd3f9, 0xa861, 0x1, 0x0);
        gbc.writeMem(0x673f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xdeac);
        EXPECT(gbc.pc(), 0x6741);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0123
        gbc.setState(0xd35a, 0xc456, 0xbf0, 0x16fa, 0x3bfa, 0x2480, 0x0, 0x0);
        gbc.writeMem(0xd35a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xc456);
        EXPECT(gbc.pc(), 0xd35c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd35a), 0xcb);
        EXPECT(gbc.readMem(0xd35b), 0xa0);
        // CB A0 0124
        gbc.setState(0x8767, 0x7aed, 0x4000, 0xe65, 0xa5a7, 0x9392, 0x1, 0x0);
        gbc.writeMem(0x8767, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x7aed);
        EXPECT(gbc.pc(), 0x8769);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8767), 0xcb);
        EXPECT(gbc.readMem(0x8768), 0xa0);
        // CB A0 0125
        gbc.setState(0x55, 0x746d, 0xde0, 0x41b6, 0x2c36, 0x7d46, 0x0, 0x1);
        gbc.writeMem(0x55, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x746d);
        EXPECT(gbc.pc(), 0x57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0126
        gbc.setState(0xc56a, 0xa449, 0x7c20, 0x97d6, 0xad1b, 0xc552, 0x0, 0x1);
        gbc.writeMem(0xc56a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa449);
        EXPECT(gbc.pc(), 0xc56c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc56a), 0xcb);
        EXPECT(gbc.readMem(0xc56b), 0xa0);
        // CB A0 0127
        gbc.setState(0xd35, 0xaf4, 0x9ec0, 0x87e3, 0xd17c, 0x21ac, 0x1, 0x1);
        gbc.writeMem(0xd35, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xaf4);
        EXPECT(gbc.pc(), 0xd37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0128
        gbc.setState(0x81c2, 0x7c5f, 0xe100, 0x20bd, 0x88d, 0x29fe, 0x0, 0x0);
        gbc.writeMem(0x81c2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x7c5f);
        EXPECT(gbc.pc(), 0x81c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81c2), 0xcb);
        EXPECT(gbc.readMem(0x81c3), 0xa0);
        // CB A0 0129
        gbc.setState(0x7aba, 0x9c42, 0x1360, 0x5fa3, 0xa6b0, 0x6e52, 0x1, 0x0);
        gbc.writeMem(0x7aba, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9c42);
        EXPECT(gbc.pc(), 0x7abc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 012A
        gbc.setState(0xb1c0, 0x8db8, 0x3b0, 0xc9d5, 0xa6ab, 0xbe64, 0x0, 0x1);
        gbc.writeMem(0xb1c0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8db8);
        EXPECT(gbc.pc(), 0xb1c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1c0), 0xcb);
        EXPECT(gbc.readMem(0xb1c1), 0xa0);
        // CB A0 012B
        gbc.setState(0xc2a9, 0xbb4d, 0xaae0, 0x8624, 0xcedc, 0x11ce, 0x1, 0x0);
        gbc.writeMem(0xc2a9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xbb4d);
        EXPECT(gbc.pc(), 0xc2ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2a9), 0xcb);
        EXPECT(gbc.readMem(0xc2aa), 0xa0);
        // CB A0 012C
        gbc.setState(0x5e9a, 0x3150, 0xe2c0, 0x19ac, 0x207f, 0x3c35, 0x0, 0x1);
        gbc.writeMem(0x5e9a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3150);
        EXPECT(gbc.pc(), 0x5e9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 012D
        gbc.setState(0xea50, 0x2f7b, 0x4cf0, 0x8f8d, 0xea9f, 0x1010, 0x0, 0x1);
        gbc.writeMem(0xea50, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x2f7b);
        EXPECT(gbc.pc(), 0xea52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea50), 0xcb);
        EXPECT(gbc.readMem(0xea51), 0xa0);
        // CB A0 012E
        gbc.setState(0x4466, 0xb25f, 0xfc80, 0xef8a, 0xb829, 0x86e9, 0x1, 0x0);
        gbc.writeMem(0x4466, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb25f);
        EXPECT(gbc.pc(), 0x4468);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 012F
        gbc.setState(0x6b8a, 0xf3d7, 0xb4b0, 0x6f48, 0xf5a7, 0xb121, 0x1, 0x0);
        gbc.writeMem(0x6b8a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf3d7);
        EXPECT(gbc.pc(), 0x6b8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0130
        gbc.setState(0x595f, 0xab97, 0x36f0, 0x5fac, 0x8ea1, 0x2f13, 0x0, 0x0);
        gbc.writeMem(0x595f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xab97);
        EXPECT(gbc.pc(), 0x5961);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0132
        gbc.setState(0xb32a, 0x4d69, 0x9b30, 0xcfb4, 0xd251, 0x1a82, 0x0, 0x1);
        gbc.writeMem(0xb32a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4d69);
        EXPECT(gbc.pc(), 0xb32c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb32a), 0xcb);
        EXPECT(gbc.readMem(0xb32b), 0xa0);
        // CB A0 0133
        gbc.setState(0xe231, 0xed58, 0x5260, 0x71b2, 0xa020, 0xbe5f, 0x1, 0x0);
        gbc.writeMem(0xe231, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xed58);
        EXPECT(gbc.pc(), 0xe233);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe231), 0xcb);
        EXPECT(gbc.readMem(0xe232), 0xa0);
        // CB A0 0134
        gbc.setState(0xcc9f, 0xfa8b, 0x75b0, 0xb085, 0x80ca, 0x2b87, 0x1, 0x1);
        gbc.writeMem(0xcc9f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xfa8b);
        EXPECT(gbc.pc(), 0xcca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc9f), 0xcb);
        EXPECT(gbc.readMem(0xcca0), 0xa0);
        // CB A0 0135
        gbc.setState(0x6fca, 0x3934, 0x1c70, 0x767b, 0x2258, 0x4482, 0x0, 0x0);
        gbc.writeMem(0x6fca, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3934);
        EXPECT(gbc.pc(), 0x6fcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0136
        gbc.setState(0x54c9, 0xc8f2, 0xbed0, 0x84e5, 0x1749, 0x6b9c, 0x1, 0x1);
        gbc.writeMem(0x54c9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc8f2);
        EXPECT(gbc.pc(), 0x54cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0137
        gbc.setState(0x8bad, 0x420c, 0x1900, 0xf8d3, 0xa7c4, 0x134d, 0x1, 0x1);
        gbc.writeMem(0x8bad, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x420c);
        EXPECT(gbc.pc(), 0x8baf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bad), 0xcb);
        EXPECT(gbc.readMem(0x8bae), 0xa0);
        // CB A0 0138
        gbc.setState(0x4a51, 0xc6cb, 0x4650, 0x15b1, 0x5754, 0x317c, 0x0, 0x1);
        gbc.writeMem(0x4a51, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc6cb);
        EXPECT(gbc.pc(), 0x4a53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0139
        gbc.setState(0xa818, 0xbd77, 0x4630, 0x4680, 0xe02e, 0x453e, 0x0, 0x0);
        gbc.writeMem(0xa818, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xbd77);
        EXPECT(gbc.pc(), 0xa81a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa818), 0xcb);
        EXPECT(gbc.readMem(0xa819), 0xa0);
        // CB A0 013A
        gbc.setState(0x2fed, 0x7a0f, 0xe6a0, 0x3a1, 0x1dba, 0xd4b7, 0x1, 0x0);
        gbc.writeMem(0x2fed, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x7a0f);
        EXPECT(gbc.pc(), 0x2fef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 013B
        gbc.setState(0x22f6, 0xeb07, 0x1790, 0xa271, 0x97fa, 0x66f0, 0x0, 0x0);
        gbc.writeMem(0x22f6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xeb07);
        EXPECT(gbc.pc(), 0x22f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 013C
        gbc.setState(0x4b7, 0x846d, 0x9320, 0xfaa3, 0x6506, 0xe4b6, 0x0, 0x0);
        gbc.writeMem(0x4b7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x846d);
        EXPECT(gbc.pc(), 0x4b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 013D
        gbc.setState(0x87d6, 0x3133, 0x10a0, 0x1541, 0x2b64, 0x2e62, 0x1, 0x1);
        gbc.writeMem(0x87d6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3133);
        EXPECT(gbc.pc(), 0x87d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87d6), 0xcb);
        EXPECT(gbc.readMem(0x87d7), 0xa0);
        // CB A0 013E
        gbc.setState(0x24ac, 0x5bd9, 0xcdd0, 0xf332, 0xc64f, 0xc00a, 0x1, 0x1);
        gbc.writeMem(0x24ac, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x5bd9);
        EXPECT(gbc.pc(), 0x24ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 013F
        gbc.setState(0xb9fa, 0x3b3, 0x2810, 0xeb8d, 0xb2b6, 0x2373, 0x1, 0x1);
        gbc.writeMem(0xb9fa, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3b3);
        EXPECT(gbc.pc(), 0xb9fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9fa), 0xcb);
        EXPECT(gbc.readMem(0xb9fb), 0xa0);
        // CB A0 0140
        gbc.setState(0xa80e, 0xd273, 0x2d20, 0x22e1, 0x3d8a, 0xee8e, 0x1, 0x1);
        gbc.writeMem(0xa80e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd273);
        EXPECT(gbc.pc(), 0xa810);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa80e), 0xcb);
        EXPECT(gbc.readMem(0xa80f), 0xa0);
        // CB A0 0141
        gbc.setState(0x8417, 0xe5cb, 0xc790, 0x98b6, 0xfe0b, 0x6790, 0x1, 0x0);
        gbc.writeMem(0x8417, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe5cb);
        EXPECT(gbc.pc(), 0x8419);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8417), 0xcb);
        EXPECT(gbc.readMem(0x8418), 0xa0);
        // CB A0 0142
        gbc.setState(0x9ba4, 0x92ab, 0x8910, 0x5bce, 0xd6d6, 0x4f93, 0x0, 0x1);
        gbc.writeMem(0x9ba4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x92ab);
        EXPECT(gbc.pc(), 0x9ba6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ba4), 0xcb);
        EXPECT(gbc.readMem(0x9ba5), 0xa0);
        // CB A0 0143
        gbc.setState(0x4bdd, 0xb7db, 0xca10, 0xec70, 0xf64b, 0xa351, 0x1, 0x0);
        gbc.writeMem(0x4bdd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xb7db);
        EXPECT(gbc.pc(), 0x4bdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0144
        gbc.setState(0xc01b, 0x9fc2, 0x7b0, 0xfd46, 0x7121, 0xae87, 0x0, 0x1);
        gbc.writeMem(0xc01b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9fc2);
        EXPECT(gbc.pc(), 0xc01d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc01b), 0xcb);
        EXPECT(gbc.readMem(0xc01c), 0xa0);
        // CB A0 0145
        gbc.setState(0xb573, 0x9e7b, 0xde40, 0x551a, 0x4a27, 0x10a8, 0x0, 0x0);
        gbc.writeMem(0xb573, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x9e7b);
        EXPECT(gbc.pc(), 0xb575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb573), 0xcb);
        EXPECT(gbc.readMem(0xb574), 0xa0);
        // CB A0 0146
        gbc.setState(0x335, 0xe09d, 0x6eb0, 0x92e0, 0xf482, 0x975, 0x0, 0x1);
        gbc.writeMem(0x335, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe09d);
        EXPECT(gbc.pc(), 0x337);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0147
        gbc.setState(0x1364, 0xea1, 0x990, 0x6873, 0x4d41, 0x669e, 0x1, 0x0);
        gbc.writeMem(0x1364, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xea1);
        EXPECT(gbc.pc(), 0x1366);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0148
        gbc.setState(0xd463, 0x11f8, 0x2690, 0xc0c4, 0x94ee, 0xcc92, 0x0, 0x0);
        gbc.writeMem(0xd463, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x11f8);
        EXPECT(gbc.pc(), 0xd465);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd463), 0xcb);
        EXPECT(gbc.readMem(0xd464), 0xa0);
        // CB A0 0149
        gbc.setState(0xb257, 0xcc00, 0xb550, 0x2423, 0xd464, 0x7f0b, 0x1, 0x1);
        gbc.writeMem(0xb257, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xcc00);
        EXPECT(gbc.pc(), 0xb259);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb257), 0xcb);
        EXPECT(gbc.readMem(0xb258), 0xa0);
        // CB A0 014A
        gbc.setState(0xc68d, 0x4205, 0xae20, 0x42d2, 0xcabe, 0x7fc1, 0x1, 0x0);
        gbc.writeMem(0xc68d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4205);
        EXPECT(gbc.pc(), 0xc68f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc68d), 0xcb);
        EXPECT(gbc.readMem(0xc68e), 0xa0);
        // CB A0 014B
        gbc.setState(0x85d7, 0xb19e, 0x5580, 0xbc6f, 0x5e7f, 0xd47d, 0x0, 0x1);
        gbc.writeMem(0x85d7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb19e);
        EXPECT(gbc.pc(), 0x85d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85d7), 0xcb);
        EXPECT(gbc.readMem(0x85d8), 0xa0);
        // CB A0 014C
        gbc.setState(0x6fa2, 0x40b4, 0x11c0, 0xcfcc, 0xe89e, 0x2d45, 0x0, 0x1);
        gbc.writeMem(0x6fa2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x40b4);
        EXPECT(gbc.pc(), 0x6fa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 014D
        gbc.setState(0xd82c, 0x77a2, 0xded0, 0x18b2, 0x6259, 0xc608, 0x1, 0x1);
        gbc.writeMem(0xd82c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x77a2);
        EXPECT(gbc.pc(), 0xd82e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd82c), 0xcb);
        EXPECT(gbc.readMem(0xd82d), 0xa0);
        // CB A0 014E
        gbc.setState(0x40e4, 0x5170, 0xd3b0, 0x3b53, 0xba04, 0x7f68, 0x1, 0x0);
        gbc.writeMem(0x40e4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5170);
        EXPECT(gbc.pc(), 0x40e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 014F
        gbc.setState(0x8eb3, 0x1536, 0xa060, 0xbcdd, 0x6398, 0xc187, 0x1, 0x1);
        gbc.writeMem(0x8eb3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x1536);
        EXPECT(gbc.pc(), 0x8eb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eb3), 0xcb);
        EXPECT(gbc.readMem(0x8eb4), 0xa0);
        // CB A0 0150
        gbc.setState(0x9aeb, 0x60bb, 0x49a0, 0xd4c5, 0xc946, 0x9787, 0x1, 0x1);
        gbc.writeMem(0x9aeb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x60bb);
        EXPECT(gbc.pc(), 0x9aed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aeb), 0xcb);
        EXPECT(gbc.readMem(0x9aec), 0xa0);
        // CB A0 0151
        gbc.setState(0x41da, 0x6870, 0x5240, 0x9fa, 0x3e57, 0x270, 0x1, 0x1);
        gbc.writeMem(0x41da, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6870);
        EXPECT(gbc.pc(), 0x41dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0152
        gbc.setState(0x413b, 0x5204, 0x2a00, 0x3438, 0xab26, 0xa117, 0x0, 0x0);
        gbc.writeMem(0x413b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x5204);
        EXPECT(gbc.pc(), 0x413d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0153
        gbc.setState(0x4cf0, 0x8d92, 0xf8d0, 0x7bd, 0x8472, 0xafcf, 0x0, 0x0);
        gbc.writeMem(0x4cf0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x8d92);
        EXPECT(gbc.pc(), 0x4cf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0154
        gbc.setState(0x2f16, 0xa0a5, 0x6a30, 0xbf7c, 0x1b60, 0xf476, 0x1, 0x0);
        gbc.writeMem(0x2f16, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa0a5);
        EXPECT(gbc.pc(), 0x2f18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0156
        gbc.setState(0x81c1, 0xc769, 0x2210, 0x88f2, 0xabf6, 0xccbf, 0x0, 0x0);
        gbc.writeMem(0x81c1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xc769);
        EXPECT(gbc.pc(), 0x81c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81c1), 0xcb);
        EXPECT(gbc.readMem(0x81c2), 0xa0);
        // CB A0 0157
        gbc.setState(0x6a6b, 0x92a8, 0x59b0, 0x70bc, 0x1a10, 0x8f9b, 0x0, 0x0);
        gbc.writeMem(0x6a6b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x92a8);
        EXPECT(gbc.pc(), 0x6a6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0159
        gbc.setState(0xe5fd, 0x79ee, 0x1c80, 0x2256, 0xaa89, 0x3912, 0x1, 0x0);
        gbc.writeMem(0xe5fd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x79ee);
        EXPECT(gbc.pc(), 0xe5ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5fd), 0xcb);
        EXPECT(gbc.readMem(0xe5fe), 0xa0);
        // CB A0 015A
        gbc.setState(0xafb3, 0x932c, 0x7820, 0xd8de, 0x4ce4, 0x69f9, 0x0, 0x0);
        gbc.writeMem(0xafb3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x932c);
        EXPECT(gbc.pc(), 0xafb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafb3), 0xcb);
        EXPECT(gbc.readMem(0xafb4), 0xa0);
        // CB A0 015B
        gbc.setState(0x7f07, 0x16aa, 0xca0, 0x407a, 0xf96d, 0xb078, 0x1, 0x0);
        gbc.writeMem(0x7f07, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x16aa);
        EXPECT(gbc.pc(), 0x7f09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 015C
        gbc.setState(0x62fa, 0x7fa, 0x86d0, 0x7bff, 0x4776, 0xd5e0, 0x0, 0x1);
        gbc.writeMem(0x62fa, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x7fa);
        EXPECT(gbc.pc(), 0x62fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 015E
        gbc.setState(0x277c, 0x4199, 0x62b0, 0xdd29, 0x45a1, 0x2c1c, 0x0, 0x1);
        gbc.writeMem(0x277c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x4199);
        EXPECT(gbc.pc(), 0x277e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 015F
        gbc.setState(0xde5, 0x7a74, 0x76d0, 0x2593, 0x5374, 0xc640, 0x0, 0x1);
        gbc.writeMem(0xde5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7a74);
        EXPECT(gbc.pc(), 0xde7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0160
        gbc.setState(0x32bd, 0x9e87, 0xd640, 0xbf81, 0x3a3b, 0x2f79, 0x1, 0x1);
        gbc.writeMem(0x32bd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x9e87);
        EXPECT(gbc.pc(), 0x32bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0161
        gbc.setState(0x9f12, 0x3887, 0xe0, 0x6eb5, 0x3711, 0x62e3, 0x1, 0x1);
        gbc.writeMem(0x9f12, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x3887);
        EXPECT(gbc.pc(), 0x9f14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f12), 0xcb);
        EXPECT(gbc.readMem(0x9f13), 0xa0);
        // CB A0 0162
        gbc.setState(0x4c81, 0xbe64, 0xa4d0, 0xd531, 0xc604, 0x25df, 0x0, 0x0);
        gbc.writeMem(0x4c81, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xbe64);
        EXPECT(gbc.pc(), 0x4c83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0163
        gbc.setState(0x1e48, 0xcb56, 0xe350, 0xe22e, 0x88f3, 0xedc9, 0x1, 0x0);
        gbc.writeMem(0x1e48, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xcb56);
        EXPECT(gbc.pc(), 0x1e4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0164
        gbc.setState(0xdb80, 0xc687, 0x6130, 0xef35, 0xcb6e, 0x6db1, 0x1, 0x0);
        gbc.writeMem(0xdb80, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xc687);
        EXPECT(gbc.pc(), 0xdb82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb80), 0xcb);
        EXPECT(gbc.readMem(0xdb81), 0xa0);
        // CB A0 0165
        gbc.setState(0x6a50, 0x56c9, 0x3350, 0x13ae, 0xef21, 0x35e1, 0x1, 0x0);
        gbc.writeMem(0x6a50, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x56c9);
        EXPECT(gbc.pc(), 0x6a52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0166
        gbc.setState(0x5559, 0x5e14, 0x84a0, 0x9240, 0x98c3, 0x3855, 0x1, 0x1);
        gbc.writeMem(0x5559, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5e14);
        EXPECT(gbc.pc(), 0x555b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0167
        gbc.setState(0xaf9a, 0xd961, 0x6bc0, 0x1556, 0x7cb4, 0xe277, 0x0, 0x1);
        gbc.writeMem(0xaf9a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd961);
        EXPECT(gbc.pc(), 0xaf9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf9a), 0xcb);
        EXPECT(gbc.readMem(0xaf9b), 0xa0);
        // CB A0 0168
        gbc.setState(0xe056, 0x76d9, 0xcb50, 0x3fe9, 0xd83, 0xc294, 0x0, 0x1);
        gbc.writeMem(0xe056, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x76d9);
        EXPECT(gbc.pc(), 0xe058);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe056), 0xcb);
        EXPECT(gbc.readMem(0xe057), 0xa0);
        // CB A0 0169
        gbc.setState(0x879e, 0xe591, 0xdac0, 0x266, 0xd385, 0xec9a, 0x1, 0x0);
        gbc.writeMem(0x879e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe591);
        EXPECT(gbc.pc(), 0x87a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x879e), 0xcb);
        EXPECT(gbc.readMem(0x879f), 0xa0);
        // CB A0 016A
        gbc.setState(0x73b2, 0x4b83, 0x2ac0, 0x390b, 0x1b4e, 0xbcbb, 0x0, 0x0);
        gbc.writeMem(0x73b2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x4b83);
        EXPECT(gbc.pc(), 0x73b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 016B
        gbc.setState(0x5566, 0xfc1b, 0x8ca0, 0x1729, 0x950f, 0xed73, 0x0, 0x1);
        gbc.writeMem(0x5566, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xfc1b);
        EXPECT(gbc.pc(), 0x5568);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 016C
        gbc.setState(0x2983, 0x22f, 0xc730, 0xdc78, 0x80c0, 0xbbc4, 0x1, 0x0);
        gbc.writeMem(0x2983, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x22f);
        EXPECT(gbc.pc(), 0x2985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 016D
        gbc.setState(0x9f57, 0x7489, 0x8410, 0xd9b5, 0xb393, 0x2baf, 0x0, 0x1);
        gbc.writeMem(0x9f57, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7489);
        EXPECT(gbc.pc(), 0x9f59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f57), 0xcb);
        EXPECT(gbc.readMem(0x9f58), 0xa0);
        // CB A0 016E
        gbc.setState(0x5b74, 0x5322, 0x2430, 0xf4a1, 0x614b, 0x8d65, 0x1, 0x1);
        gbc.writeMem(0x5b74, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x5322);
        EXPECT(gbc.pc(), 0x5b76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 016F
        gbc.setState(0xb65e, 0x2b98, 0xafa0, 0x3b64, 0xa4e5, 0x9b9d, 0x1, 0x1);
        gbc.writeMem(0xb65e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x2b98);
        EXPECT(gbc.pc(), 0xb660);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb65e), 0xcb);
        EXPECT(gbc.readMem(0xb65f), 0xa0);
        // CB A0 0170
        gbc.setState(0xb236, 0xbe1a, 0xc290, 0x1c6e, 0x1703, 0x4dec, 0x1, 0x1);
        gbc.writeMem(0xb236, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xbe1a);
        EXPECT(gbc.pc(), 0xb238);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb236), 0xcb);
        EXPECT(gbc.readMem(0xb237), 0xa0);
        // CB A0 0171
        gbc.setState(0x3665, 0xc930, 0x9030, 0x7ba3, 0xc011, 0xa981, 0x1, 0x1);
        gbc.writeMem(0x3665, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xc930);
        EXPECT(gbc.pc(), 0x3667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0172
        gbc.setState(0x5952, 0xdaca, 0x9de0, 0xad70, 0xd17b, 0xf472, 0x0, 0x1);
        gbc.writeMem(0x5952, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xdaca);
        EXPECT(gbc.pc(), 0x5954);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0173
        gbc.setState(0xa20c, 0xbd29, 0xe140, 0x3d51, 0x233, 0x2c9a, 0x0, 0x0);
        gbc.writeMem(0xa20c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xbd29);
        EXPECT(gbc.pc(), 0xa20e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa20c), 0xcb);
        EXPECT(gbc.readMem(0xa20d), 0xa0);
        // CB A0 0174
        gbc.setState(0x8fe5, 0xd4df, 0x7640, 0xab7d, 0xa9e6, 0xfbd5, 0x0, 0x0);
        gbc.writeMem(0x8fe5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xd4df);
        EXPECT(gbc.pc(), 0x8fe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fe5), 0xcb);
        EXPECT(gbc.readMem(0x8fe6), 0xa0);
        // CB A0 0175
        gbc.setState(0xb00a, 0xdef6, 0xd7f0, 0x364e, 0x29dc, 0x6eeb, 0x1, 0x1);
        gbc.writeMem(0xb00a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xdef6);
        EXPECT(gbc.pc(), 0xb00c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb00a), 0xcb);
        EXPECT(gbc.readMem(0xb00b), 0xa0);
        // CB A0 0176
        gbc.setState(0xd255, 0x6eed, 0x9a70, 0x5cae, 0xc616, 0x149a, 0x1, 0x1);
        gbc.writeMem(0xd255, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6eed);
        EXPECT(gbc.pc(), 0xd257);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd255), 0xcb);
        EXPECT(gbc.readMem(0xd256), 0xa0);
        // CB A0 0178
        gbc.setState(0x322c, 0xa3e4, 0xd3c0, 0xb1cf, 0x5201, 0x7fd3, 0x1, 0x1);
        gbc.writeMem(0x322c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xa3e4);
        EXPECT(gbc.pc(), 0x322e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0179
        gbc.setState(0x6492, 0x84fd, 0x43a0, 0xb281, 0xdff3, 0xcc6e, 0x0, 0x1);
        gbc.writeMem(0x6492, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x84fd);
        EXPECT(gbc.pc(), 0x6494);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 017A
        gbc.setState(0xc8c6, 0x4e2, 0x4b0, 0x5e6, 0xd793, 0x5a92, 0x1, 0x0);
        gbc.writeMem(0xc8c6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x4e2);
        EXPECT(gbc.pc(), 0xc8c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8c6), 0xcb);
        EXPECT(gbc.readMem(0xc8c7), 0xa0);
        // CB A0 017B
        gbc.setState(0x22f3, 0x6a2c, 0x7dd0, 0x3a57, 0x50c6, 0xa644, 0x0, 0x0);
        gbc.writeMem(0x22f3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6a2c);
        EXPECT(gbc.pc(), 0x22f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 017C
        gbc.setState(0x1618, 0xab7b, 0x3a60, 0x44e4, 0x3a04, 0x3fef, 0x0, 0x0);
        gbc.writeMem(0x1618, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xab7b);
        EXPECT(gbc.pc(), 0x161a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 017D
        gbc.setState(0x7a26, 0x32b, 0x6fe0, 0x9648, 0xa6a1, 0xa64b, 0x0, 0x0);
        gbc.writeMem(0x7a26, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x32b);
        EXPECT(gbc.pc(), 0x7a28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 017F
        gbc.setState(0x8b8f, 0x24cb, 0x1590, 0xbcdc, 0x648b, 0xc531, 0x1, 0x1);
        gbc.writeMem(0x8b8f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x24cb);
        EXPECT(gbc.pc(), 0x8b91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b8f), 0xcb);
        EXPECT(gbc.readMem(0x8b90), 0xa0);
        // CB A0 0180
        gbc.setState(0x4715, 0x3034, 0xf9e0, 0xb85, 0x406c, 0xa21d, 0x1, 0x1);
        gbc.writeMem(0x4715, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3034);
        EXPECT(gbc.pc(), 0x4717);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0182
        gbc.setState(0x1ddf, 0xfea7, 0x3020, 0xe511, 0xd0f0, 0x9c76, 0x1, 0x0);
        gbc.writeMem(0x1ddf, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xfea7);
        EXPECT(gbc.pc(), 0x1de1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0183
        gbc.setState(0x1452, 0xa148, 0x53a0, 0x7cab, 0x6940, 0x6265, 0x0, 0x0);
        gbc.writeMem(0x1452, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa148);
        EXPECT(gbc.pc(), 0x1454);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0184
        gbc.setState(0x749f, 0xaf48, 0xf420, 0x1adf, 0x2d00, 0x4a4, 0x1, 0x1);
        gbc.writeMem(0x749f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xaf48);
        EXPECT(gbc.pc(), 0x74a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0185
        gbc.setState(0x5dd8, 0x8c7d, 0xe790, 0xc98d, 0xea2d, 0x53f5, 0x1, 0x1);
        gbc.writeMem(0x5dd8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x8c7d);
        EXPECT(gbc.pc(), 0x5dda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0186
        gbc.setState(0xe9, 0x29da, 0xe060, 0x94da, 0x9b53, 0x5592, 0x1, 0x1);
        gbc.writeMem(0xe9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x29da);
        EXPECT(gbc.pc(), 0xeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0187
        gbc.setState(0x7c85, 0x5b1, 0x1fb0, 0xbe38, 0xd223, 0xd85b, 0x1, 0x0);
        gbc.writeMem(0x7c85, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x5b1);
        EXPECT(gbc.pc(), 0x7c87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0188
        gbc.setState(0x95e3, 0xbd3, 0x7d40, 0x8271, 0xf804, 0x9158, 0x1, 0x0);
        gbc.writeMem(0x95e3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xbd3);
        EXPECT(gbc.pc(), 0x95e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95e3), 0xcb);
        EXPECT(gbc.readMem(0x95e4), 0xa0);
        // CB A0 0189
        gbc.setState(0xc5dc, 0x7b10, 0xd640, 0x54d7, 0x1cbc, 0x2032, 0x0, 0x1);
        gbc.writeMem(0xc5dc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7b10);
        EXPECT(gbc.pc(), 0xc5de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5dc), 0xcb);
        EXPECT(gbc.readMem(0xc5dd), 0xa0);
        // CB A0 018B
        gbc.setState(0x52f0, 0xbe1b, 0x2430, 0x78d0, 0x32c8, 0x63ad, 0x1, 0x1);
        gbc.writeMem(0x52f0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xbe1b);
        EXPECT(gbc.pc(), 0x52f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 018C
        gbc.setState(0x5372, 0xe3c7, 0x3a70, 0xaae0, 0x1c9e, 0xcf05, 0x0, 0x0);
        gbc.writeMem(0x5372, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xe3c7);
        EXPECT(gbc.pc(), 0x5374);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 018D
        gbc.setState(0xe1c1, 0x28c5, 0x1c80, 0xb330, 0xd6a7, 0x2575, 0x1, 0x1);
        gbc.writeMem(0xe1c1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x28c5);
        EXPECT(gbc.pc(), 0xe1c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1c1), 0xcb);
        EXPECT(gbc.readMem(0xe1c2), 0xa0);
        // CB A0 018E
        gbc.setState(0xcc5e, 0x8ce7, 0x35a0, 0xcd91, 0x2b5f, 0x9eca, 0x1, 0x1);
        gbc.writeMem(0xcc5e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8ce7);
        EXPECT(gbc.pc(), 0xcc60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc5e), 0xcb);
        EXPECT(gbc.readMem(0xcc5f), 0xa0);
        // CB A0 018F
        gbc.setState(0x83ad, 0xd5c, 0xa530, 0xfd4c, 0x9729, 0xf2c3, 0x0, 0x0);
        gbc.writeMem(0x83ad, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd5c);
        EXPECT(gbc.pc(), 0x83af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ad), 0xcb);
        EXPECT(gbc.readMem(0x83ae), 0xa0);
        // CB A0 0190
        gbc.setState(0x3bc6, 0x2092, 0x7540, 0x7fd, 0x8c0, 0x1cfb, 0x0, 0x0);
        gbc.writeMem(0x3bc6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2092);
        EXPECT(gbc.pc(), 0x3bc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0191
        gbc.setState(0xb3fd, 0x7b1a, 0xa0c0, 0x7edc, 0x1065, 0xe212, 0x0, 0x0);
        gbc.writeMem(0xb3fd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7b1a);
        EXPECT(gbc.pc(), 0xb3ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3fd), 0xcb);
        EXPECT(gbc.readMem(0xb3fe), 0xa0);
        // CB A0 0192
        gbc.setState(0xcfde, 0x4070, 0x48c0, 0x4c48, 0xa2ec, 0x34a6, 0x0, 0x0);
        gbc.writeMem(0xcfde, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4070);
        EXPECT(gbc.pc(), 0xcfe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfde), 0xcb);
        EXPECT(gbc.readMem(0xcfdf), 0xa0);
        // CB A0 0193
        gbc.setState(0xec0d, 0x7d7f, 0x7340, 0x5afd, 0x3146, 0xc437, 0x0, 0x0);
        gbc.writeMem(0xec0d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7d7f);
        EXPECT(gbc.pc(), 0xec0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec0d), 0xcb);
        EXPECT(gbc.readMem(0xec0e), 0xa0);
        // CB A0 0194
        gbc.setState(0x51ed, 0x22b9, 0x3a50, 0xbcfe, 0xba22, 0xb86d, 0x1, 0x1);
        gbc.writeMem(0x51ed, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x22b9);
        EXPECT(gbc.pc(), 0x51ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0195
        gbc.setState(0x7b81, 0xe5ca, 0x2750, 0xbeb2, 0x46fc, 0xaed8, 0x1, 0x1);
        gbc.writeMem(0x7b81, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe5ca);
        EXPECT(gbc.pc(), 0x7b83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0196
        gbc.setState(0x9774, 0x53f1, 0x66e0, 0xe925, 0x83, 0x6c81, 0x0, 0x1);
        gbc.writeMem(0x9774, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x53f1);
        EXPECT(gbc.pc(), 0x9776);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9774), 0xcb);
        EXPECT(gbc.readMem(0x9775), 0xa0);
        // CB A0 0197
        gbc.setState(0xd87e, 0xc08f, 0x6a90, 0x2a80, 0x8a33, 0xa6c6, 0x0, 0x0);
        gbc.writeMem(0xd87e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc08f);
        EXPECT(gbc.pc(), 0xd880);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd87e), 0xcb);
        EXPECT(gbc.readMem(0xd87f), 0xa0);
        // CB A0 0198
        gbc.setState(0x6ec7, 0x4d42, 0x20, 0xfeb, 0x42b9, 0xe80e, 0x1, 0x1);
        gbc.writeMem(0x6ec7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x4d42);
        EXPECT(gbc.pc(), 0x6ec9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0199
        gbc.setState(0xd9f2, 0xe7cd, 0xc660, 0x4ae0, 0xb004, 0xeb63, 0x1, 0x0);
        gbc.writeMem(0xd9f2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xe7cd);
        EXPECT(gbc.pc(), 0xd9f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9f2), 0xcb);
        EXPECT(gbc.readMem(0xd9f3), 0xa0);
        // CB A0 019A
        gbc.setState(0x6e91, 0xd4f2, 0x7d70, 0x97d4, 0xc119, 0x4b10, 0x0, 0x1);
        gbc.writeMem(0x6e91, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd4f2);
        EXPECT(gbc.pc(), 0x6e93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 019B
        gbc.setState(0x6b6d, 0x9b5e, 0x7a50, 0xa028, 0xed6e, 0x9e, 0x1, 0x1);
        gbc.writeMem(0x6b6d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9b5e);
        EXPECT(gbc.pc(), 0x6b6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 019C
        gbc.setState(0xeafc, 0xe564, 0x8cd0, 0xef0d, 0x21a2, 0xda3b, 0x1, 0x1);
        gbc.writeMem(0xeafc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe564);
        EXPECT(gbc.pc(), 0xeafe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeafc), 0xcb);
        EXPECT(gbc.readMem(0xeafd), 0xa0);
        // CB A0 019D
        gbc.setState(0xc3f3, 0x9ced, 0x6af0, 0xcd6b, 0x19bf, 0x1d72, 0x0, 0x0);
        gbc.writeMem(0xc3f3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9ced);
        EXPECT(gbc.pc(), 0xc3f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3f3), 0xcb);
        EXPECT(gbc.readMem(0xc3f4), 0xa0);
        // CB A0 019E
        gbc.setState(0xbf45, 0x441b, 0xea60, 0xa612, 0xc94e, 0x548a, 0x1, 0x1);
        gbc.writeMem(0xbf45, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x441b);
        EXPECT(gbc.pc(), 0xbf47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf45), 0xcb);
        EXPECT(gbc.readMem(0xbf46), 0xa0);
        // CB A0 019F
        gbc.setState(0x9b71, 0x35dd, 0xe760, 0xf32b, 0xf93f, 0x59e0, 0x0, 0x0);
        gbc.writeMem(0x9b71, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x35dd);
        EXPECT(gbc.pc(), 0x9b73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b71), 0xcb);
        EXPECT(gbc.readMem(0x9b72), 0xa0);
        // CB A0 01A0
        gbc.setState(0xbd2e, 0x49f3, 0x6bb0, 0x360, 0x8d61, 0xf6f4, 0x1, 0x0);
        gbc.writeMem(0xbd2e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x49f3);
        EXPECT(gbc.pc(), 0xbd30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd2e), 0xcb);
        EXPECT(gbc.readMem(0xbd2f), 0xa0);
        // CB A0 01A1
        gbc.setState(0xd638, 0x1b49, 0x1ec0, 0x3eb0, 0x231b, 0x4d59, 0x0, 0x0);
        gbc.writeMem(0xd638, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1b49);
        EXPECT(gbc.pc(), 0xd63a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd638), 0xcb);
        EXPECT(gbc.readMem(0xd639), 0xa0);
        // CB A0 01A3
        gbc.setState(0x6a38, 0x7e10, 0x2500, 0xe4fc, 0x94c6, 0x5f99, 0x0, 0x1);
        gbc.writeMem(0x6a38, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x7e10);
        EXPECT(gbc.pc(), 0x6a3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01A4
        gbc.setState(0x149c, 0x990f, 0x6ae0, 0x49ab, 0x97cb, 0xabee, 0x1, 0x1);
        gbc.writeMem(0x149c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x990f);
        EXPECT(gbc.pc(), 0x149e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01A5
        gbc.setState(0x1a75, 0x3f6f, 0xe640, 0x7b2b, 0x9eb8, 0xf7b0, 0x0, 0x0);
        gbc.writeMem(0x1a75, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x3f6f);
        EXPECT(gbc.pc(), 0x1a77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01A6
        gbc.setState(0xbcbc, 0xdbae, 0xbb40, 0x390, 0x30f1, 0xba47, 0x1, 0x0);
        gbc.writeMem(0xbcbc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xdbae);
        EXPECT(gbc.pc(), 0xbcbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcbc), 0xcb);
        EXPECT(gbc.readMem(0xbcbd), 0xa0);
        // CB A0 01A7
        gbc.setState(0xe8aa, 0x74bd, 0xa7b0, 0x7d34, 0xce27, 0xb872, 0x0, 0x0);
        gbc.writeMem(0xe8aa, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x74bd);
        EXPECT(gbc.pc(), 0xe8ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8aa), 0xcb);
        EXPECT(gbc.readMem(0xe8ab), 0xa0);
        // CB A0 01A8
        gbc.setState(0xef6f, 0xb199, 0x2d10, 0x55c6, 0x359f, 0x3caf, 0x0, 0x0);
        gbc.writeMem(0xef6f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xb199);
        EXPECT(gbc.pc(), 0xef71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef6f), 0xcb);
        EXPECT(gbc.readMem(0xef70), 0xa0);
        // CB A0 01A9
        gbc.setState(0x57c5, 0x3cd6, 0x8fc0, 0xfbe9, 0x69bd, 0x9cb8, 0x1, 0x0);
        gbc.writeMem(0x57c5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x3cd6);
        EXPECT(gbc.pc(), 0x57c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01AA
        gbc.setState(0x2794, 0x25d8, 0x8f40, 0x4aeb, 0x44e7, 0x928, 0x1, 0x0);
        gbc.writeMem(0x2794, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x25d8);
        EXPECT(gbc.pc(), 0x2796);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01AB
        gbc.setState(0x3f9, 0x5d08, 0x9140, 0x240a, 0x426b, 0x1c09, 0x0, 0x1);
        gbc.writeMem(0x3f9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5d08);
        EXPECT(gbc.pc(), 0x3fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01AC
        gbc.setState(0x588b, 0x801f, 0x5550, 0x3734, 0x2f86, 0xfeb2, 0x1, 0x0);
        gbc.writeMem(0x588b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x801f);
        EXPECT(gbc.pc(), 0x588d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01AD
        gbc.setState(0x9ddf, 0xc052, 0x3bd0, 0xc5c1, 0x4e18, 0x6995, 0x0, 0x1);
        gbc.writeMem(0x9ddf, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc052);
        EXPECT(gbc.pc(), 0x9de1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ddf), 0xcb);
        EXPECT(gbc.readMem(0x9de0), 0xa0);
        // CB A0 01AE
        gbc.setState(0x6992, 0xc314, 0x4950, 0xc659, 0x2753, 0x2035, 0x0, 0x0);
        gbc.writeMem(0x6992, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc314);
        EXPECT(gbc.pc(), 0x6994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01AF
        gbc.setState(0x3488, 0xdf68, 0x63d0, 0x9c9a, 0x74a5, 0xe888, 0x1, 0x1);
        gbc.writeMem(0x3488, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xdf68);
        EXPECT(gbc.pc(), 0x348a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01B1
        gbc.setState(0x2daf, 0x571f, 0xbff0, 0xc3e0, 0x528e, 0xd093, 0x0, 0x1);
        gbc.writeMem(0x2daf, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x571f);
        EXPECT(gbc.pc(), 0x2db1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01B2
        gbc.setState(0xc2d, 0x57bb, 0xfa10, 0x14e0, 0x847d, 0x14bf, 0x0, 0x1);
        gbc.writeMem(0xc2d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x57bb);
        EXPECT(gbc.pc(), 0xc2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01B3
        gbc.setState(0x305f, 0xf394, 0xadc0, 0x8b0b, 0x5ba8, 0xf8d3, 0x1, 0x1);
        gbc.writeMem(0x305f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf394);
        EXPECT(gbc.pc(), 0x3061);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01B4
        gbc.setState(0xb408, 0x22c2, 0x9b80, 0x1832, 0x96c2, 0x5dc8, 0x1, 0x1);
        gbc.writeMem(0xb408, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x22c2);
        EXPECT(gbc.pc(), 0xb40a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb408), 0xcb);
        EXPECT(gbc.readMem(0xb409), 0xa0);
        // CB A0 01B5
        gbc.setState(0x5d5d, 0x317a, 0x8b60, 0xb43, 0x287e, 0xeb9f, 0x0, 0x0);
        gbc.writeMem(0x5d5d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x317a);
        EXPECT(gbc.pc(), 0x5d5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01B6
        gbc.setState(0x4427, 0x11f7, 0x6380, 0x7806, 0x1aa9, 0xfe, 0x0, 0x0);
        gbc.writeMem(0x4427, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x11f7);
        EXPECT(gbc.pc(), 0x4429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01B7
        gbc.setState(0x171c, 0x8169, 0xbf90, 0x8ee4, 0x658e, 0x9b1c, 0x1, 0x1);
        gbc.writeMem(0x171c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x8169);
        EXPECT(gbc.pc(), 0x171e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01B8
        gbc.setState(0x45f4, 0x7a03, 0x3210, 0x8a57, 0x32c2, 0x79ac, 0x1, 0x1);
        gbc.writeMem(0x45f4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7a03);
        EXPECT(gbc.pc(), 0x45f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01B9
        gbc.setState(0x9ce3, 0xb01e, 0x65d0, 0x70f7, 0x141f, 0x4537, 0x0, 0x1);
        gbc.writeMem(0x9ce3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xb01e);
        EXPECT(gbc.pc(), 0x9ce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ce3), 0xcb);
        EXPECT(gbc.readMem(0x9ce4), 0xa0);
        // CB A0 01BA
        gbc.setState(0x4fb2, 0xd0d1, 0x2fe0, 0x2335, 0x704f, 0x88a0, 0x1, 0x1);
        gbc.writeMem(0x4fb2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd0d1);
        EXPECT(gbc.pc(), 0x4fb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01BB
        gbc.setState(0xed83, 0xab80, 0xd8f0, 0x1357, 0x5aef, 0x58ff, 0x0, 0x0);
        gbc.writeMem(0xed83, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xab80);
        EXPECT(gbc.pc(), 0xed85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed83), 0xcb);
        EXPECT(gbc.readMem(0xed84), 0xa0);
        // CB A0 01BC
        gbc.setState(0xa285, 0xbf76, 0x4590, 0xb571, 0xf3b0, 0x172a, 0x1, 0x1);
        gbc.writeMem(0xa285, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xbf76);
        EXPECT(gbc.pc(), 0xa287);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa285), 0xcb);
        EXPECT(gbc.readMem(0xa286), 0xa0);
        // CB A0 01BD
        gbc.setState(0xb4e7, 0xeae6, 0x5820, 0xa92b, 0xb3, 0xfa78, 0x1, 0x0);
        gbc.writeMem(0xb4e7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xeae6);
        EXPECT(gbc.pc(), 0xb4e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4e7), 0xcb);
        EXPECT(gbc.readMem(0xb4e8), 0xa0);
        // CB A0 01BE
        gbc.setState(0x5b1b, 0x3b18, 0x9e90, 0xbc8f, 0x71d3, 0x4b78, 0x1, 0x1);
        gbc.writeMem(0x5b1b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x3b18);
        EXPECT(gbc.pc(), 0x5b1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01BF
        gbc.setState(0xfa6, 0x7a78, 0xbfe0, 0x8ddc, 0x4edc, 0xd91c, 0x1, 0x0);
        gbc.writeMem(0xfa6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7a78);
        EXPECT(gbc.pc(), 0xfa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01C0
        gbc.setState(0xedab, 0xd582, 0xe220, 0x7981, 0x760f, 0xf07e, 0x0, 0x1);
        gbc.writeMem(0xedab, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd582);
        EXPECT(gbc.pc(), 0xedad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedab), 0xcb);
        EXPECT(gbc.readMem(0xedac), 0xa0);
        // CB A0 01C1
        gbc.setState(0xc304, 0xf940, 0x4c0, 0x583d, 0xb4e0, 0x5632, 0x0, 0x1);
        gbc.writeMem(0xc304, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf940);
        EXPECT(gbc.pc(), 0xc306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc304), 0xcb);
        EXPECT(gbc.readMem(0xc305), 0xa0);
        // CB A0 01C2
        gbc.setState(0x7106, 0x5934, 0xf060, 0x27f9, 0x7db5, 0xc31c, 0x1, 0x1);
        gbc.writeMem(0x7106, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5934);
        EXPECT(gbc.pc(), 0x7108);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01C3
        gbc.setState(0xb391, 0xf757, 0xb4f0, 0xf7a1, 0xdb3a, 0x55aa, 0x1, 0x0);
        gbc.writeMem(0xb391, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf757);
        EXPECT(gbc.pc(), 0xb393);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb391), 0xcb);
        EXPECT(gbc.readMem(0xb392), 0xa0);
        // CB A0 01C4
        gbc.setState(0xe77a, 0x9786, 0xa1e0, 0xf1e9, 0xf9df, 0x541c, 0x1, 0x1);
        gbc.writeMem(0xe77a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9786);
        EXPECT(gbc.pc(), 0xe77c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe77a), 0xcb);
        EXPECT(gbc.readMem(0xe77b), 0xa0);
        // CB A0 01C5
        gbc.setState(0xabaf, 0xfe32, 0xd3f0, 0x5156, 0xb277, 0x9864, 0x1, 0x1);
        gbc.writeMem(0xabaf, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xfe32);
        EXPECT(gbc.pc(), 0xabb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabaf), 0xcb);
        EXPECT(gbc.readMem(0xabb0), 0xa0);
        // CB A0 01C6
        gbc.setState(0x7dbc, 0x2fc7, 0xaaf0, 0x8709, 0x5a0e, 0x3dc, 0x1, 0x1);
        gbc.writeMem(0x7dbc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x2fc7);
        EXPECT(gbc.pc(), 0x7dbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01C7
        gbc.setState(0x1f2f, 0x96d5, 0xb1b0, 0x2791, 0xea23, 0x6a08, 0x0, 0x0);
        gbc.writeMem(0x1f2f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x96d5);
        EXPECT(gbc.pc(), 0x1f31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01C8
        gbc.setState(0x7b3a, 0xbcfd, 0x3910, 0xece2, 0xe210, 0x1e5e, 0x1, 0x0);
        gbc.writeMem(0x7b3a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xbcfd);
        EXPECT(gbc.pc(), 0x7b3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01C9
        gbc.setState(0xb3d2, 0x9929, 0xdcb0, 0x8ad3, 0x3a2f, 0xe471, 0x0, 0x1);
        gbc.writeMem(0xb3d2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x9929);
        EXPECT(gbc.pc(), 0xb3d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3d2), 0xcb);
        EXPECT(gbc.readMem(0xb3d3), 0xa0);
        // CB A0 01CA
        gbc.setState(0x5982, 0xac34, 0x1930, 0xb91a, 0xe9d0, 0x44c8, 0x0, 0x0);
        gbc.writeMem(0x5982, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xac34);
        EXPECT(gbc.pc(), 0x5984);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01CB
        gbc.setState(0x2ea8, 0x66bb, 0x52c0, 0xa3e3, 0xf484, 0xab8d, 0x1, 0x0);
        gbc.writeMem(0x2ea8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x66bb);
        EXPECT(gbc.pc(), 0x2eaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01CC
        gbc.setState(0xd27a, 0x43c1, 0x8620, 0x936d, 0x8118, 0x4baa, 0x0, 0x1);
        gbc.writeMem(0xd27a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x43c1);
        EXPECT(gbc.pc(), 0xd27c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd27a), 0xcb);
        EXPECT(gbc.readMem(0xd27b), 0xa0);
        // CB A0 01CE
        gbc.setState(0x788c, 0x74a1, 0xcde0, 0xbd99, 0x5593, 0x415, 0x1, 0x0);
        gbc.writeMem(0x788c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x74a1);
        EXPECT(gbc.pc(), 0x788e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01CF
        gbc.setState(0x61dd, 0xa37b, 0x7b0, 0xa745, 0xe73f, 0xc69f, 0x1, 0x0);
        gbc.writeMem(0x61dd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa37b);
        EXPECT(gbc.pc(), 0x61df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01D0
        gbc.setState(0x8bd, 0x5ffb, 0x2160, 0xdfb2, 0x8c39, 0x2200, 0x1, 0x0);
        gbc.writeMem(0x8bd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5ffb);
        EXPECT(gbc.pc(), 0x8bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01D1
        gbc.setState(0x12dc, 0x736b, 0x5f40, 0x620d, 0xb93f, 0xee20, 0x0, 0x1);
        gbc.writeMem(0x12dc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x736b);
        EXPECT(gbc.pc(), 0x12de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01D3
        gbc.setState(0xc361, 0x70f4, 0xe670, 0x48fe, 0xfca, 0xd351, 0x1, 0x1);
        gbc.writeMem(0xc361, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x70f4);
        EXPECT(gbc.pc(), 0xc363);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc361), 0xcb);
        EXPECT(gbc.readMem(0xc362), 0xa0);
        // CB A0 01D4
        gbc.setState(0xcf1, 0x2631, 0x4630, 0x630f, 0x2c38, 0x1454, 0x0, 0x0);
        gbc.writeMem(0xcf1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x2631);
        EXPECT(gbc.pc(), 0xcf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01D5
        gbc.setState(0xea2, 0xbd50, 0x97f0, 0xe5a0, 0xec8d, 0xeadc, 0x0, 0x0);
        gbc.writeMem(0xea2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xbd50);
        EXPECT(gbc.pc(), 0xea4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01D6
        gbc.setState(0xcaeb, 0xb9fc, 0xbe50, 0x1c28, 0xea8, 0x9656, 0x1, 0x1);
        gbc.writeMem(0xcaeb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb9fc);
        EXPECT(gbc.pc(), 0xcaed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaeb), 0xcb);
        EXPECT(gbc.readMem(0xcaec), 0xa0);
        // CB A0 01D8
        gbc.setState(0x30db, 0xe1cc, 0x3d90, 0xffed, 0x943e, 0x5502, 0x1, 0x0);
        gbc.writeMem(0x30db, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe1cc);
        EXPECT(gbc.pc(), 0x30dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01D9
        gbc.setState(0x11f0, 0xe14e, 0xb7f0, 0x8d5e, 0x4aa8, 0x4cd9, 0x0, 0x1);
        gbc.writeMem(0x11f0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe14e);
        EXPECT(gbc.pc(), 0x11f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01DA
        gbc.setState(0x75c9, 0x3478, 0xcf60, 0x9454, 0x64b1, 0x869b, 0x0, 0x0);
        gbc.writeMem(0x75c9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x3478);
        EXPECT(gbc.pc(), 0x75cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01DC
        gbc.setState(0x4945, 0x3e33, 0x7590, 0xc1f6, 0x6c06, 0x5ee0, 0x1, 0x1);
        gbc.writeMem(0x4945, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3e33);
        EXPECT(gbc.pc(), 0x4947);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01DD
        gbc.setState(0x815b, 0xa561, 0x7490, 0xa868, 0xddbe, 0xe19e, 0x0, 0x1);
        gbc.writeMem(0x815b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa561);
        EXPECT(gbc.pc(), 0x815d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x815b), 0xcb);
        EXPECT(gbc.readMem(0x815c), 0xa0);
        // CB A0 01DE
        gbc.setState(0x3baa, 0xf1d, 0x4880, 0x45bf, 0x1d51, 0x777c, 0x0, 0x0);
        gbc.writeMem(0x3baa, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf1d);
        EXPECT(gbc.pc(), 0x3bac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01DF
        gbc.setState(0x5cef, 0x1bc6, 0x2810, 0x4a84, 0x1d87, 0x9fd9, 0x1, 0x0);
        gbc.writeMem(0x5cef, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1bc6);
        EXPECT(gbc.pc(), 0x5cf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01E0
        gbc.setState(0x7324, 0x5366, 0x540, 0x7e12, 0x17dc, 0x1690, 0x0, 0x0);
        gbc.writeMem(0x7324, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5366);
        EXPECT(gbc.pc(), 0x7326);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01E1
        gbc.setState(0xe391, 0x2aac, 0xc990, 0xdad3, 0x5794, 0xdc7f, 0x0, 0x0);
        gbc.writeMem(0xe391, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2aac);
        EXPECT(gbc.pc(), 0xe393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe391), 0xcb);
        EXPECT(gbc.readMem(0xe392), 0xa0);
        // CB A0 01E3
        gbc.setState(0xd49c, 0x9b27, 0x2210, 0x9181, 0xa5fa, 0x241, 0x1, 0x1);
        gbc.writeMem(0xd49c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9b27);
        EXPECT(gbc.pc(), 0xd49e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd49c), 0xcb);
        EXPECT(gbc.readMem(0xd49d), 0xa0);
        // CB A0 01E4
        gbc.setState(0x2079, 0xdc9b, 0xd090, 0x9a7, 0x60ab, 0x8c8e, 0x0, 0x1);
        gbc.writeMem(0x2079, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xdc9b);
        EXPECT(gbc.pc(), 0x207b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01E5
        gbc.setState(0x4d35, 0xb593, 0x5b70, 0x492, 0xd41e, 0xc0a2, 0x0, 0x0);
        gbc.writeMem(0x4d35, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb593);
        EXPECT(gbc.pc(), 0x4d37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01E6
        gbc.setState(0x15ba, 0x94ca, 0xf670, 0xa950, 0x4626, 0x86dc, 0x1, 0x1);
        gbc.writeMem(0x15ba, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x94ca);
        EXPECT(gbc.pc(), 0x15bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01E7
        gbc.setState(0x4f73, 0xcb5e, 0x43a0, 0x4245, 0x541, 0x2dff, 0x0, 0x1);
        gbc.writeMem(0x4f73, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xcb5e);
        EXPECT(gbc.pc(), 0x4f75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01E8
        gbc.setState(0x3e5b, 0xb31c, 0xacb0, 0x1680, 0xb1bb, 0xf1ec, 0x0, 0x1);
        gbc.writeMem(0x3e5b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb31c);
        EXPECT(gbc.pc(), 0x3e5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01E9
        gbc.setState(0x5487, 0xe3af, 0xceb0, 0xac31, 0xf848, 0x28e9, 0x0, 0x1);
        gbc.writeMem(0x5487, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe3af);
        EXPECT(gbc.pc(), 0x5489);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01EA
        gbc.setState(0xb709, 0xc52a, 0x3100, 0xfbf5, 0x8eb0, 0xe7bd, 0x1, 0x0);
        gbc.writeMem(0xb709, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc52a);
        EXPECT(gbc.pc(), 0xb70b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb709), 0xcb);
        EXPECT(gbc.readMem(0xb70a), 0xa0);
        // CB A0 01EB
        gbc.setState(0x4a45, 0x89cb, 0x3c90, 0x165d, 0xf22c, 0x495c, 0x1, 0x1);
        gbc.writeMem(0x4a45, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x89cb);
        EXPECT(gbc.pc(), 0x4a47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01EC
        gbc.setState(0xb380, 0xf9ad, 0xd750, 0xeba, 0xca7a, 0xb083, 0x0, 0x0);
        gbc.writeMem(0xb380, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xf9ad);
        EXPECT(gbc.pc(), 0xb382);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb380), 0xcb);
        EXPECT(gbc.readMem(0xb381), 0xa0);
        // CB A0 01ED
        gbc.setState(0x2ef9, 0x168c, 0x5160, 0xfb5e, 0x1655, 0xe04f, 0x1, 0x1);
        gbc.writeMem(0x2ef9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x168c);
        EXPECT(gbc.pc(), 0x2efb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01EE
        gbc.setState(0x924d, 0xa488, 0x3b0, 0x13a1, 0x702a, 0xfa0f, 0x1, 0x1);
        gbc.writeMem(0x924d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xa488);
        EXPECT(gbc.pc(), 0x924f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x924d), 0xcb);
        EXPECT(gbc.readMem(0x924e), 0xa0);
        // CB A0 01EF
        gbc.setState(0xcf3e, 0x12af, 0xbc20, 0x54eb, 0x9a9f, 0xe6b3, 0x0, 0x0);
        gbc.writeMem(0xcf3e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x12af);
        EXPECT(gbc.pc(), 0xcf40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf3e), 0xcb);
        EXPECT(gbc.readMem(0xcf3f), 0xa0);
        // CB A0 01F0
        gbc.setState(0x97c, 0x7bef, 0xa90, 0x540a, 0xcaa6, 0xba84, 0x0, 0x1);
        gbc.writeMem(0x97c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7bef);
        EXPECT(gbc.pc(), 0x97e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01F1
        gbc.setState(0x73f1, 0xd1d3, 0xe8e0, 0xcb76, 0x10ab, 0xb9ba, 0x0, 0x0);
        gbc.writeMem(0x73f1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd1d3);
        EXPECT(gbc.pc(), 0x73f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01F2
        gbc.setState(0xc90c, 0x937a, 0x5750, 0xc59, 0xaed2, 0x6b68, 0x1, 0x0);
        gbc.writeMem(0xc90c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x937a);
        EXPECT(gbc.pc(), 0xc90e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc90c), 0xcb);
        EXPECT(gbc.readMem(0xc90d), 0xa0);
        // CB A0 01F3
        gbc.setState(0x3e7c, 0xd877, 0x7640, 0x7bb2, 0xc107, 0xb162, 0x1, 0x1);
        gbc.writeMem(0x3e7c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd877);
        EXPECT(gbc.pc(), 0x3e7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01F4
        gbc.setState(0x94c4, 0x4020, 0x9920, 0x76c, 0x4e7e, 0x694f, 0x0, 0x1);
        gbc.writeMem(0x94c4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4020);
        EXPECT(gbc.pc(), 0x94c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94c4), 0xcb);
        EXPECT(gbc.readMem(0x94c5), 0xa0);
        // CB A0 01F5
        gbc.setState(0x2ad4, 0x8928, 0x5630, 0x7eb9, 0x43d4, 0x8dc0, 0x1, 0x0);
        gbc.writeMem(0x2ad4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8928);
        EXPECT(gbc.pc(), 0x2ad6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01F6
        gbc.setState(0x4d89, 0xf8c1, 0x7d90, 0xdc21, 0xc9cd, 0xf688, 0x0, 0x0);
        gbc.writeMem(0x4d89, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf8c1);
        EXPECT(gbc.pc(), 0x4d8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01F7
        gbc.setState(0x1c69, 0x1ee2, 0x9420, 0x9533, 0xafd7, 0xadc3, 0x0, 0x0);
        gbc.writeMem(0x1c69, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1ee2);
        EXPECT(gbc.pc(), 0x1c6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01F8
        gbc.setState(0x47f, 0xa2c, 0x2d30, 0xf63e, 0xea75, 0xfe83, 0x0, 0x1);
        gbc.writeMem(0x47f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xa2c);
        EXPECT(gbc.pc(), 0x481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01F9
        gbc.setState(0xa77, 0x5c04, 0x5170, 0xe1e2, 0x4f8f, 0x9d93, 0x0, 0x0);
        gbc.writeMem(0xa77, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5c04);
        EXPECT(gbc.pc(), 0xa79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01FA
        gbc.setState(0xab34, 0x64e2, 0xd8a0, 0x552c, 0x95a0, 0xd410, 0x0, 0x1);
        gbc.writeMem(0xab34, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x64e2);
        EXPECT(gbc.pc(), 0xab36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab34), 0xcb);
        EXPECT(gbc.readMem(0xab35), 0xa0);
        // CB A0 01FB
        gbc.setState(0xe493, 0x9fd7, 0x2650, 0xabe8, 0x57b1, 0xb82, 0x1, 0x1);
        gbc.writeMem(0xe493, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9fd7);
        EXPECT(gbc.pc(), 0xe495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe493), 0xcb);
        EXPECT(gbc.readMem(0xe494), 0xa0);
        // CB A0 01FC
        gbc.setState(0x2b7f, 0x97de, 0x3c0, 0x83d3, 0xcd17, 0xd4b, 0x0, 0x0);
        gbc.writeMem(0x2b7f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x97de);
        EXPECT(gbc.pc(), 0x2b81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 01FD
        gbc.setState(0xcdf7, 0xa4cd, 0x7b60, 0xe3f0, 0xda, 0x1c9d, 0x0, 0x0);
        gbc.writeMem(0xcdf7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa4cd);
        EXPECT(gbc.pc(), 0xcdf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf7), 0xcb);
        EXPECT(gbc.readMem(0xcdf8), 0xa0);
        // CB A0 01FE
        gbc.setState(0x603a, 0xde87, 0x2fd0, 0xe796, 0x3a8a, 0x3cfd, 0x1, 0x1);
        gbc.writeMem(0x603a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xde87);
        EXPECT(gbc.pc(), 0x603c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 01FF
        gbc.setState(0x8f39, 0x8309, 0x4350, 0xbe22, 0xbf5e, 0x3393, 0x0, 0x1);
        gbc.writeMem(0x8f39, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8309);
        EXPECT(gbc.pc(), 0x8f3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f39), 0xcb);
        EXPECT(gbc.readMem(0x8f3a), 0xa0);
        // CB A0 0200
        gbc.setState(0xa049, 0x6b19, 0x8540, 0xf072, 0x6746, 0x2cee, 0x1, 0x1);
        gbc.writeMem(0xa049, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x6b19);
        EXPECT(gbc.pc(), 0xa04b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa049), 0xcb);
        EXPECT(gbc.readMem(0xa04a), 0xa0);
        // CB A0 0201
        gbc.setState(0xbe26, 0x5a15, 0x9050, 0xa13a, 0x22da, 0xbef6, 0x0, 0x0);
        gbc.writeMem(0xbe26, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x5a15);
        EXPECT(gbc.pc(), 0xbe28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe26), 0xcb);
        EXPECT(gbc.readMem(0xbe27), 0xa0);
        // CB A0 0202
        gbc.setState(0x598e, 0x8268, 0x74d0, 0x6031, 0x991f, 0x13d9, 0x0, 0x0);
        gbc.writeMem(0x598e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x8268);
        EXPECT(gbc.pc(), 0x5990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0203
        gbc.setState(0x149b, 0x64dd, 0xe4c0, 0x96e0, 0xd340, 0x1f69, 0x0, 0x1);
        gbc.writeMem(0x149b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x64dd);
        EXPECT(gbc.pc(), 0x149d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0204
        gbc.setState(0x96fe, 0xc819, 0x4710, 0x2d52, 0x6933, 0xfe01, 0x0, 0x1);
        gbc.writeMem(0x96fe, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc819);
        EXPECT(gbc.pc(), 0x9700);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96fe), 0xcb);
        EXPECT(gbc.readMem(0x96ff), 0xa0);
        // CB A0 0205
        gbc.setState(0xdf92, 0x985f, 0xbaf0, 0xc87b, 0x487d, 0x38fa, 0x0, 0x1);
        gbc.writeMem(0xdf92, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x985f);
        EXPECT(gbc.pc(), 0xdf94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf92), 0xcb);
        EXPECT(gbc.readMem(0xdf93), 0xa0);
        // CB A0 0206
        gbc.setState(0xd7c0, 0x83ec, 0x8180, 0x70ef, 0x3554, 0x9651, 0x1, 0x0);
        gbc.writeMem(0xd7c0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x83ec);
        EXPECT(gbc.pc(), 0xd7c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7c0), 0xcb);
        EXPECT(gbc.readMem(0xd7c1), 0xa0);
        // CB A0 0207
        gbc.setState(0x9fd7, 0xaf8c, 0x1450, 0x1a1a, 0xf6c8, 0x97c4, 0x1, 0x1);
        gbc.writeMem(0x9fd7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xaf8c);
        EXPECT(gbc.pc(), 0x9fd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fd7), 0xcb);
        EXPECT(gbc.readMem(0x9fd8), 0xa0);
        // CB A0 0209
        gbc.setState(0xed74, 0x332d, 0xc00, 0xd671, 0xd3a6, 0xd444, 0x0, 0x0);
        gbc.writeMem(0xed74, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x332d);
        EXPECT(gbc.pc(), 0xed76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed74), 0xcb);
        EXPECT(gbc.readMem(0xed75), 0xa0);
        // CB A0 020A
        gbc.setState(0x9e68, 0x63e4, 0x3270, 0x7b93, 0xaf6b, 0xe078, 0x1, 0x0);
        gbc.writeMem(0x9e68, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x63e4);
        EXPECT(gbc.pc(), 0x9e6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e68), 0xcb);
        EXPECT(gbc.readMem(0x9e69), 0xa0);
        // CB A0 020B
        gbc.setState(0x4971, 0xf58d, 0x9260, 0x7b9e, 0x581b, 0x860f, 0x0, 0x0);
        gbc.writeMem(0x4971, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf58d);
        EXPECT(gbc.pc(), 0x4973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 020C
        gbc.setState(0xe2e1, 0xa902, 0x3300, 0x9cb8, 0x4fb3, 0x1083, 0x0, 0x0);
        gbc.writeMem(0xe2e1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xa902);
        EXPECT(gbc.pc(), 0xe2e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2e1), 0xcb);
        EXPECT(gbc.readMem(0xe2e2), 0xa0);
        // CB A0 020D
        gbc.setState(0x7d14, 0xd336, 0xa010, 0x7d71, 0x59f9, 0x6a5f, 0x0, 0x1);
        gbc.writeMem(0x7d14, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd336);
        EXPECT(gbc.pc(), 0x7d16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 020E
        gbc.setState(0x72a, 0x6584, 0x6970, 0x516e, 0xf012, 0xa0b9, 0x1, 0x1);
        gbc.writeMem(0x72a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6584);
        EXPECT(gbc.pc(), 0x72c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 020F
        gbc.setState(0xc19b, 0xe01f, 0xf300, 0xa6d5, 0xa735, 0x732b, 0x1, 0x0);
        gbc.writeMem(0xc19b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe01f);
        EXPECT(gbc.pc(), 0xc19d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc19b), 0xcb);
        EXPECT(gbc.readMem(0xc19c), 0xa0);
        // CB A0 0210
        gbc.setState(0x21ac, 0xd901, 0x5ca0, 0xc6e1, 0x28ba, 0xfa33, 0x0, 0x1);
        gbc.writeMem(0x21ac, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd901);
        EXPECT(gbc.pc(), 0x21ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0211
        gbc.setState(0x1401, 0x4595, 0xd20, 0xbc67, 0x181f, 0x7b10, 0x1, 0x1);
        gbc.writeMem(0x1401, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4595);
        EXPECT(gbc.pc(), 0x1403);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0212
        gbc.setState(0xbfe5, 0x6fd2, 0xa030, 0xef32, 0x597c, 0xce63, 0x1, 0x1);
        gbc.writeMem(0xbfe5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6fd2);
        EXPECT(gbc.pc(), 0xbfe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfe5), 0xcb);
        EXPECT(gbc.readMem(0xbfe6), 0xa0);
        // CB A0 0213
        gbc.setState(0xcc2f, 0xc263, 0x7d40, 0xf9b6, 0x5d9e, 0x504c, 0x0, 0x0);
        gbc.writeMem(0xcc2f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc263);
        EXPECT(gbc.pc(), 0xcc31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc2f), 0xcb);
        EXPECT(gbc.readMem(0xcc30), 0xa0);
        // CB A0 0214
        gbc.setState(0xe7b0, 0x4775, 0x4280, 0xe218, 0xceb2, 0xb72f, 0x0, 0x0);
        gbc.writeMem(0xe7b0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4775);
        EXPECT(gbc.pc(), 0xe7b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7b0), 0xcb);
        EXPECT(gbc.readMem(0xe7b1), 0xa0);
        // CB A0 0215
        gbc.setState(0xb8ff, 0x2da0, 0x63d0, 0x804b, 0xd86e, 0xc207, 0x1, 0x0);
        gbc.writeMem(0xb8ff, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2da0);
        EXPECT(gbc.pc(), 0xb901);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8ff), 0xcb);
        EXPECT(gbc.readMem(0xb900), 0xa0);
        // CB A0 0216
        gbc.setState(0x37c4, 0xb0b3, 0x5240, 0x1361, 0xfb41, 0x2faf, 0x1, 0x1);
        gbc.writeMem(0x37c4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xb0b3);
        EXPECT(gbc.pc(), 0x37c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0217
        gbc.setState(0xd316, 0xd011, 0xa750, 0xf0b4, 0xd2c6, 0x8375, 0x1, 0x1);
        gbc.writeMem(0xd316, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd011);
        EXPECT(gbc.pc(), 0xd318);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd316), 0xcb);
        EXPECT(gbc.readMem(0xd317), 0xa0);
        // CB A0 0218
        gbc.setState(0x516c, 0xf9c6, 0x76e0, 0xf68e, 0x6d76, 0x8e93, 0x1, 0x1);
        gbc.writeMem(0x516c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf9c6);
        EXPECT(gbc.pc(), 0x516e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0219
        gbc.setState(0xadfe, 0xf26c, 0xed0, 0xa3b8, 0xc68e, 0xc407, 0x1, 0x1);
        gbc.writeMem(0xadfe, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf26c);
        EXPECT(gbc.pc(), 0xae00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadfe), 0xcb);
        EXPECT(gbc.readMem(0xadff), 0xa0);
        // CB A0 021A
        gbc.setState(0xed9c, 0x31f, 0xbf40, 0x4513, 0x5a5, 0x6cce, 0x0, 0x0);
        gbc.writeMem(0xed9c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x31f);
        EXPECT(gbc.pc(), 0xed9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed9c), 0xcb);
        EXPECT(gbc.readMem(0xed9d), 0xa0);
        // CB A0 021B
        gbc.setState(0x64ce, 0xf304, 0xb650, 0x99ee, 0x3a9e, 0x223c, 0x1, 0x1);
        gbc.writeMem(0x64ce, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf304);
        EXPECT(gbc.pc(), 0x64d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 021C
        gbc.setState(0x6b9b, 0x843d, 0xab20, 0x3c64, 0x1a71, 0xbdbc, 0x0, 0x1);
        gbc.writeMem(0x6b9b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x843d);
        EXPECT(gbc.pc(), 0x6b9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 021D
        gbc.setState(0x1c01, 0xc8f4, 0x3c40, 0x2ffe, 0x9251, 0xc896, 0x0, 0x1);
        gbc.writeMem(0x1c01, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc8f4);
        EXPECT(gbc.pc(), 0x1c03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 021E
        gbc.setState(0xa64b, 0xd0c2, 0x6210, 0xd388, 0xf8be, 0x9865, 0x1, 0x1);
        gbc.writeMem(0xa64b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xd0c2);
        EXPECT(gbc.pc(), 0xa64d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa64b), 0xcb);
        EXPECT(gbc.readMem(0xa64c), 0xa0);
        // CB A0 021F
        gbc.setState(0x2057, 0x9cec, 0x8060, 0x6df3, 0x8f78, 0x4223, 0x1, 0x0);
        gbc.writeMem(0x2057, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x9cec);
        EXPECT(gbc.pc(), 0x2059);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0220
        gbc.setState(0x6d9, 0xdd49, 0xe710, 0xc499, 0xdf5c, 0x6fce, 0x1, 0x1);
        gbc.writeMem(0x6d9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xdd49);
        EXPECT(gbc.pc(), 0x6db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0221
        gbc.setState(0x1bc9, 0x55b3, 0xdab0, 0xbac, 0x366c, 0x9222, 0x1, 0x1);
        gbc.writeMem(0x1bc9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x55b3);
        EXPECT(gbc.pc(), 0x1bcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0222
        gbc.setState(0x7367, 0x3756, 0x2860, 0xb2a, 0xa09d, 0x700a, 0x0, 0x0);
        gbc.writeMem(0x7367, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3756);
        EXPECT(gbc.pc(), 0x7369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0223
        gbc.setState(0x5550, 0x130d, 0x3a20, 0x35b4, 0x23d3, 0xda5f, 0x0, 0x1);
        gbc.writeMem(0x5550, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x130d);
        EXPECT(gbc.pc(), 0x5552);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0224
        gbc.setState(0xa47d, 0x3042, 0x3c80, 0x33a, 0xa707, 0xe772, 0x0, 0x1);
        gbc.writeMem(0xa47d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3042);
        EXPECT(gbc.pc(), 0xa47f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa47d), 0xcb);
        EXPECT(gbc.readMem(0xa47e), 0xa0);
        // CB A0 0226
        gbc.setState(0x8a5c, 0x3fc6, 0x9640, 0xc244, 0xd386, 0x4003, 0x1, 0x0);
        gbc.writeMem(0x8a5c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x3fc6);
        EXPECT(gbc.pc(), 0x8a5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a5c), 0xcb);
        EXPECT(gbc.readMem(0x8a5d), 0xa0);
        // CB A0 0227
        gbc.setState(0xd66b, 0xf215, 0xa440, 0x8249, 0x1b2d, 0x44ad, 0x1, 0x0);
        gbc.writeMem(0xd66b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf215);
        EXPECT(gbc.pc(), 0xd66d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd66b), 0xcb);
        EXPECT(gbc.readMem(0xd66c), 0xa0);
        // CB A0 0228
        gbc.setState(0x2ccb, 0x81c0, 0xa3a0, 0x78bc, 0x30a5, 0x9ec, 0x0, 0x1);
        gbc.writeMem(0x2ccb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x81c0);
        EXPECT(gbc.pc(), 0x2ccd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0229
        gbc.setState(0x8fbe, 0x41f6, 0xa5a0, 0x9445, 0x53e3, 0x7988, 0x0, 0x0);
        gbc.writeMem(0x8fbe, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x41f6);
        EXPECT(gbc.pc(), 0x8fc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fbe), 0xcb);
        EXPECT(gbc.readMem(0x8fbf), 0xa0);
        // CB A0 022A
        gbc.setState(0x5c0e, 0x237, 0x2c40, 0xb378, 0x49b6, 0x97c3, 0x0, 0x1);
        gbc.writeMem(0x5c0e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x237);
        EXPECT(gbc.pc(), 0x5c10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 022B
        gbc.setState(0x26c6, 0xe41b, 0x1020, 0x55fc, 0x9f7f, 0xb1e1, 0x1, 0x0);
        gbc.writeMem(0x26c6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe41b);
        EXPECT(gbc.pc(), 0x26c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 022E
        gbc.setState(0xdf56, 0xf13d, 0x640, 0x99a3, 0x5921, 0x6d30, 0x0, 0x0);
        gbc.writeMem(0xdf56, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf13d);
        EXPECT(gbc.pc(), 0xdf58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf56), 0xcb);
        EXPECT(gbc.readMem(0xdf57), 0xa0);
        // CB A0 022F
        gbc.setState(0xe01b, 0xa620, 0xbb80, 0x5982, 0x312c, 0xccdd, 0x1, 0x1);
        gbc.writeMem(0xe01b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa620);
        EXPECT(gbc.pc(), 0xe01d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe01b), 0xcb);
        EXPECT(gbc.readMem(0xe01c), 0xa0);
        // CB A0 0230
        gbc.setState(0xce32, 0x5cf4, 0x79e0, 0xcfbd, 0x888b, 0x3c26, 0x1, 0x1);
        gbc.writeMem(0xce32, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5cf4);
        EXPECT(gbc.pc(), 0xce34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce32), 0xcb);
        EXPECT(gbc.readMem(0xce33), 0xa0);
        // CB A0 0231
        gbc.setState(0x60a0, 0xca01, 0x5530, 0x537c, 0x205b, 0x16cd, 0x1, 0x0);
        gbc.writeMem(0x60a0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xca01);
        EXPECT(gbc.pc(), 0x60a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0232
        gbc.setState(0x5036, 0x9235, 0x5a60, 0x58da, 0x7bd4, 0x1e34, 0x0, 0x1);
        gbc.writeMem(0x5036, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9235);
        EXPECT(gbc.pc(), 0x5038);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0233
        gbc.setState(0x1070, 0x55b7, 0x93e0, 0x6ed2, 0x83a2, 0xd1d9, 0x1, 0x0);
        gbc.writeMem(0x1070, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x55b7);
        EXPECT(gbc.pc(), 0x1072);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0234
        gbc.setState(0xed7c, 0x9c56, 0x8310, 0xf08b, 0x3334, 0x34b, 0x1, 0x0);
        gbc.writeMem(0xed7c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9c56);
        EXPECT(gbc.pc(), 0xed7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed7c), 0xcb);
        EXPECT(gbc.readMem(0xed7d), 0xa0);
        // CB A0 0235
        gbc.setState(0x8e43, 0x9db0, 0xa590, 0x9fe7, 0x2c22, 0x24ca, 0x0, 0x1);
        gbc.writeMem(0x8e43, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9db0);
        EXPECT(gbc.pc(), 0x8e45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e43), 0xcb);
        EXPECT(gbc.readMem(0x8e44), 0xa0);
        // CB A0 0237
        gbc.setState(0x475f, 0x9ae4, 0xa70, 0x8806, 0xe0ef, 0xa9b8, 0x0, 0x1);
        gbc.writeMem(0x475f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x9ae4);
        EXPECT(gbc.pc(), 0x4761);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0238
        gbc.setState(0x2494, 0x34ae, 0xddc0, 0xd363, 0x81e3, 0xc8dd, 0x1, 0x0);
        gbc.writeMem(0x2494, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x34ae);
        EXPECT(gbc.pc(), 0x2496);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0239
        gbc.setState(0x678b, 0xd9e6, 0x61a0, 0x9bc7, 0xe260, 0x4055, 0x1, 0x0);
        gbc.writeMem(0x678b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd9e6);
        EXPECT(gbc.pc(), 0x678d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 023A
        gbc.setState(0x204d, 0xbbe4, 0x8310, 0x80d, 0xe12e, 0xbbb8, 0x1, 0x0);
        gbc.writeMem(0x204d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xbbe4);
        EXPECT(gbc.pc(), 0x204f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 023B
        gbc.setState(0x67ba, 0x2aa5, 0xcd90, 0x223d, 0x4048, 0xfc7f, 0x1, 0x1);
        gbc.writeMem(0x67ba, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2aa5);
        EXPECT(gbc.pc(), 0x67bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 023C
        gbc.setState(0x1769, 0x2d0d, 0x4f30, 0x21d, 0x8f4b, 0xfb9e, 0x0, 0x0);
        gbc.writeMem(0x1769, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2d0d);
        EXPECT(gbc.pc(), 0x176b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 023D
        gbc.setState(0x521f, 0xf58e, 0xf1e0, 0xe9cb, 0x7dc6, 0xfced, 0x0, 0x1);
        gbc.writeMem(0x521f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf58e);
        EXPECT(gbc.pc(), 0x5221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 023E
        gbc.setState(0x8c38, 0x127f, 0x9780, 0x8125, 0xa99, 0x3456, 0x1, 0x1);
        gbc.writeMem(0x8c38, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x127f);
        EXPECT(gbc.pc(), 0x8c3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c38), 0xcb);
        EXPECT(gbc.readMem(0x8c39), 0xa0);
        // CB A0 023F
        gbc.setState(0x1ee5, 0x192b, 0x1900, 0xf25f, 0xa15c, 0x893d, 0x1, 0x0);
        gbc.writeMem(0x1ee5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x192b);
        EXPECT(gbc.pc(), 0x1ee7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0240
        gbc.setState(0x407d, 0xcf1d, 0xd8d0, 0xafe7, 0xdc40, 0x3710, 0x0, 0x0);
        gbc.writeMem(0x407d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xcf1d);
        EXPECT(gbc.pc(), 0x407f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0241
        gbc.setState(0xdca, 0x5814, 0x2730, 0x3d9b, 0x891a, 0x95a7, 0x1, 0x0);
        gbc.writeMem(0xdca, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x5814);
        EXPECT(gbc.pc(), 0xdcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0242
        gbc.setState(0x153a, 0xf6f7, 0x9b40, 0xb687, 0x39a5, 0x4ab3, 0x0, 0x1);
        gbc.writeMem(0x153a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf6f7);
        EXPECT(gbc.pc(), 0x153c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0243
        gbc.setState(0xe1f0, 0xf70c, 0x23d0, 0x9e28, 0x3c06, 0xcfe7, 0x0, 0x0);
        gbc.writeMem(0xe1f0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf70c);
        EXPECT(gbc.pc(), 0xe1f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1f0), 0xcb);
        EXPECT(gbc.readMem(0xe1f1), 0xa0);
        // CB A0 0244
        gbc.setState(0x6c78, 0xb365, 0xd4d0, 0xfe49, 0xc2ac, 0x44d0, 0x0, 0x0);
        gbc.writeMem(0x6c78, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xb365);
        EXPECT(gbc.pc(), 0x6c7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0245
        gbc.setState(0xbd2e, 0x3916, 0x4b0, 0xfe4, 0x44df, 0x9ca9, 0x0, 0x0);
        gbc.writeMem(0xbd2e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3916);
        EXPECT(gbc.pc(), 0xbd30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd2e), 0xcb);
        EXPECT(gbc.readMem(0xbd2f), 0xa0);
        // CB A0 0246
        gbc.setState(0x7f1e, 0xab3f, 0xaa90, 0xc62f, 0xd64e, 0xdc7d, 0x1, 0x1);
        gbc.writeMem(0x7f1e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xab3f);
        EXPECT(gbc.pc(), 0x7f20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0248
        gbc.setState(0x4012, 0x5260, 0xd760, 0x3f6c, 0xa769, 0xff22, 0x0, 0x0);
        gbc.writeMem(0x4012, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5260);
        EXPECT(gbc.pc(), 0x4014);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0249
        gbc.setState(0xa985, 0x70ff, 0xaf40, 0xb173, 0x6c69, 0x5c63, 0x1, 0x0);
        gbc.writeMem(0xa985, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x70ff);
        EXPECT(gbc.pc(), 0xa987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa985), 0xcb);
        EXPECT(gbc.readMem(0xa986), 0xa0);
        // CB A0 024A
        gbc.setState(0x4f2, 0xc95a, 0x30b0, 0xdf1b, 0x4584, 0x57ae, 0x1, 0x1);
        gbc.writeMem(0x4f2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc95a);
        EXPECT(gbc.pc(), 0x4f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 024B
        gbc.setState(0x412d, 0xf470, 0x9150, 0xd45e, 0x7b07, 0x2b65, 0x0, 0x0);
        gbc.writeMem(0x412d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xf470);
        EXPECT(gbc.pc(), 0x412f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 024C
        gbc.setState(0x80be, 0xe2a9, 0x5e20, 0xf335, 0x1bd1, 0xb305, 0x1, 0x0);
        gbc.writeMem(0x80be, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xe2a9);
        EXPECT(gbc.pc(), 0x80c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80be), 0xcb);
        EXPECT(gbc.readMem(0x80bf), 0xa0);
        // CB A0 024D
        gbc.setState(0xc3c1, 0xb155, 0x2440, 0xded4, 0x5b3d, 0x6589, 0x0, 0x1);
        gbc.writeMem(0xc3c1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb155);
        EXPECT(gbc.pc(), 0xc3c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3c1), 0xcb);
        EXPECT(gbc.readMem(0xc3c2), 0xa0);
        // CB A0 024E
        gbc.setState(0x9b6f, 0x895f, 0xce80, 0xcda1, 0xa222, 0xfbda, 0x0, 0x0);
        gbc.writeMem(0x9b6f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x895f);
        EXPECT(gbc.pc(), 0x9b71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b6f), 0xcb);
        EXPECT(gbc.readMem(0x9b70), 0xa0);
        // CB A0 024F
        gbc.setState(0x6325, 0x4bb8, 0x6750, 0x7b91, 0x88ec, 0xdad7, 0x1, 0x0);
        gbc.writeMem(0x6325, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x4bb8);
        EXPECT(gbc.pc(), 0x6327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0250
        gbc.setState(0x7df0, 0xfe4c, 0x5c60, 0x10c5, 0xbd17, 0x6d34, 0x0, 0x1);
        gbc.writeMem(0x7df0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xfe4c);
        EXPECT(gbc.pc(), 0x7df2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0251
        gbc.setState(0x73d7, 0x4761, 0x8460, 0x9938, 0xaf9d, 0x145b, 0x1, 0x1);
        gbc.writeMem(0x73d7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4761);
        EXPECT(gbc.pc(), 0x73d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0252
        gbc.setState(0x233f, 0x39a5, 0xbb40, 0x7f6e, 0x52cf, 0x3f94, 0x0, 0x0);
        gbc.writeMem(0x233f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x39a5);
        EXPECT(gbc.pc(), 0x2341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0253
        gbc.setState(0x44c1, 0x3830, 0xd200, 0x64, 0xe453, 0xd83a, 0x0, 0x1);
        gbc.writeMem(0x44c1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3830);
        EXPECT(gbc.pc(), 0x44c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0254
        gbc.setState(0x8094, 0xae71, 0x11a0, 0xddb1, 0xa288, 0xb751, 0x1, 0x1);
        gbc.writeMem(0x8094, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xae71);
        EXPECT(gbc.pc(), 0x8096);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8094), 0xcb);
        EXPECT(gbc.readMem(0x8095), 0xa0);
        // CB A0 0255
        gbc.setState(0x8316, 0x59d8, 0x98b0, 0x8ed0, 0xcd6e, 0x6b50, 0x0, 0x0);
        gbc.writeMem(0x8316, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x59d8);
        EXPECT(gbc.pc(), 0x8318);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8316), 0xcb);
        EXPECT(gbc.readMem(0x8317), 0xa0);
        // CB A0 0256
        gbc.setState(0x300c, 0x6da4, 0x2fc0, 0xcd07, 0xc0f7, 0xdd4, 0x1, 0x1);
        gbc.writeMem(0x300c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x6da4);
        EXPECT(gbc.pc(), 0x300e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0257
        gbc.setState(0x896, 0x51e6, 0xaa90, 0xf31b, 0x4e24, 0xd928, 0x0, 0x1);
        gbc.writeMem(0x896, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x51e6);
        EXPECT(gbc.pc(), 0x898);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0258
        gbc.setState(0x4b3a, 0x743f, 0xfbf0, 0xe9a7, 0xd026, 0x247b, 0x0, 0x1);
        gbc.writeMem(0x4b3a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x743f);
        EXPECT(gbc.pc(), 0x4b3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0259
        gbc.setState(0xabb9, 0xf85d, 0xe760, 0x112b, 0x867f, 0xcc89, 0x1, 0x1);
        gbc.writeMem(0xabb9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf85d);
        EXPECT(gbc.pc(), 0xabbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb9), 0xcb);
        EXPECT(gbc.readMem(0xabba), 0xa0);
        // CB A0 025A
        gbc.setState(0x8c54, 0x42f1, 0xa90, 0xcc70, 0x5b07, 0xd7d7, 0x1, 0x1);
        gbc.writeMem(0x8c54, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x42f1);
        EXPECT(gbc.pc(), 0x8c56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c54), 0xcb);
        EXPECT(gbc.readMem(0x8c55), 0xa0);
        // CB A0 025B
        gbc.setState(0x3df4, 0x859a, 0x5760, 0x811f, 0xda2d, 0xf889, 0x0, 0x0);
        gbc.writeMem(0x3df4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x859a);
        EXPECT(gbc.pc(), 0x3df6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 025C
        gbc.setState(0xe740, 0xe23a, 0xfc80, 0xabbe, 0xcd5f, 0xbf78, 0x0, 0x1);
        gbc.writeMem(0xe740, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xe23a);
        EXPECT(gbc.pc(), 0xe742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe740), 0xcb);
        EXPECT(gbc.readMem(0xe741), 0xa0);
        // CB A0 025D
        gbc.setState(0xe63c, 0x71de, 0x4100, 0x38a6, 0xea70, 0xec2c, 0x1, 0x0);
        gbc.writeMem(0xe63c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x71de);
        EXPECT(gbc.pc(), 0xe63e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe63c), 0xcb);
        EXPECT(gbc.readMem(0xe63d), 0xa0);
        // CB A0 025E
        gbc.setState(0xe40c, 0x3dfb, 0xda10, 0x6332, 0xe5a3, 0xf0cd, 0x0, 0x1);
        gbc.writeMem(0xe40c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x3dfb);
        EXPECT(gbc.pc(), 0xe40e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe40c), 0xcb);
        EXPECT(gbc.readMem(0xe40d), 0xa0);
        // CB A0 025F
        gbc.setState(0x3851, 0x3138, 0xba00, 0x8e71, 0xb6ff, 0x180e, 0x0, 0x1);
        gbc.writeMem(0x3851, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3138);
        EXPECT(gbc.pc(), 0x3853);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0260
        gbc.setState(0xa502, 0x6772, 0x9120, 0x6d62, 0xe7a7, 0x80f8, 0x1, 0x0);
        gbc.writeMem(0xa502, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x6772);
        EXPECT(gbc.pc(), 0xa504);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa502), 0xcb);
        EXPECT(gbc.readMem(0xa503), 0xa0);
        // CB A0 0261
        gbc.setState(0x1662, 0x3e58, 0x9420, 0xd36f, 0x4d38, 0xc68b, 0x1, 0x0);
        gbc.writeMem(0x1662, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3e58);
        EXPECT(gbc.pc(), 0x1664);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0262
        gbc.setState(0x19d, 0x830b, 0x3480, 0x2cba, 0xc582, 0x762f, 0x1, 0x0);
        gbc.writeMem(0x19d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x830b);
        EXPECT(gbc.pc(), 0x19f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0263
        gbc.setState(0x6ef8, 0x939a, 0xd010, 0x9e87, 0x63c, 0xe2a3, 0x1, 0x0);
        gbc.writeMem(0x6ef8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x939a);
        EXPECT(gbc.pc(), 0x6efa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0264
        gbc.setState(0x7aa2, 0xac9b, 0x4d70, 0xf3a1, 0x277e, 0x339d, 0x1, 0x0);
        gbc.writeMem(0x7aa2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xac9b);
        EXPECT(gbc.pc(), 0x7aa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0265
        gbc.setState(0xded6, 0xf2b4, 0x9ab0, 0x1741, 0x1c77, 0xa2f1, 0x1, 0x0);
        gbc.writeMem(0xded6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf2b4);
        EXPECT(gbc.pc(), 0xded8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xded6), 0xcb);
        EXPECT(gbc.readMem(0xded7), 0xa0);
        // CB A0 0266
        gbc.setState(0x6899, 0x358d, 0x90a0, 0x30c0, 0xb679, 0xce0c, 0x1, 0x0);
        gbc.writeMem(0x6899, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x358d);
        EXPECT(gbc.pc(), 0x689b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0267
        gbc.setState(0x2dae, 0xe48a, 0x9a80, 0x6de5, 0x1d6d, 0x83ac, 0x0, 0x1);
        gbc.writeMem(0x2dae, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe48a);
        EXPECT(gbc.pc(), 0x2db0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0268
        gbc.setState(0x102c, 0x4d78, 0x5a60, 0xec6f, 0xf596, 0x4661, 0x1, 0x0);
        gbc.writeMem(0x102c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x4d78);
        EXPECT(gbc.pc(), 0x102e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0269
        gbc.setState(0x5687, 0x708, 0x8580, 0xa0c8, 0x204c, 0x1b2d, 0x0, 0x0);
        gbc.writeMem(0x5687, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x708);
        EXPECT(gbc.pc(), 0x5689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 026A
        gbc.setState(0x676, 0xc3ca, 0xdc10, 0x719, 0x88f3, 0x8102, 0x0, 0x1);
        gbc.writeMem(0x676, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc3ca);
        EXPECT(gbc.pc(), 0x678);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 026B
        gbc.setState(0x9f6c, 0xf51f, 0x1c80, 0x9c7d, 0xbd22, 0xee4c, 0x1, 0x1);
        gbc.writeMem(0x9f6c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf51f);
        EXPECT(gbc.pc(), 0x9f6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f6c), 0xcb);
        EXPECT(gbc.readMem(0x9f6d), 0xa0);
        // CB A0 026C
        gbc.setState(0x938e, 0x6259, 0x2fa0, 0xdfcf, 0x93b5, 0xfb76, 0x1, 0x1);
        gbc.writeMem(0x938e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6259);
        EXPECT(gbc.pc(), 0x9390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x938e), 0xcb);
        EXPECT(gbc.readMem(0x938f), 0xa0);
        // CB A0 026D
        gbc.setState(0x8723, 0x975, 0x80b0, 0xb07b, 0x5adc, 0x71b0, 0x0, 0x1);
        gbc.writeMem(0x8723, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x975);
        EXPECT(gbc.pc(), 0x8725);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8723), 0xcb);
        EXPECT(gbc.readMem(0x8724), 0xa0);
        // CB A0 026E
        gbc.setState(0xe5b9, 0xd32d, 0x9f80, 0x5a95, 0x1e51, 0x3589, 0x1, 0x0);
        gbc.writeMem(0xe5b9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xd32d);
        EXPECT(gbc.pc(), 0xe5bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5b9), 0xcb);
        EXPECT(gbc.readMem(0xe5ba), 0xa0);
        // CB A0 026F
        gbc.setState(0x86b6, 0x410a, 0xbaf0, 0x14ed, 0x5afa, 0xca91, 0x0, 0x1);
        gbc.writeMem(0x86b6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x410a);
        EXPECT(gbc.pc(), 0x86b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86b6), 0xcb);
        EXPECT(gbc.readMem(0x86b7), 0xa0);
        // CB A0 0270
        gbc.setState(0x7bdc, 0xbadb, 0xd5f0, 0xb7d3, 0xda7, 0x381c, 0x0, 0x0);
        gbc.writeMem(0x7bdc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xbadb);
        EXPECT(gbc.pc(), 0x7bde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0271
        gbc.setState(0x31ed, 0x85e, 0xc130, 0x694c, 0x9bc8, 0x3921, 0x1, 0x1);
        gbc.writeMem(0x31ed, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x85e);
        EXPECT(gbc.pc(), 0x31ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0272
        gbc.setState(0x6204, 0x1c8e, 0x4fe0, 0x61a0, 0xc03f, 0x2646, 0x1, 0x0);
        gbc.writeMem(0x6204, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1c8e);
        EXPECT(gbc.pc(), 0x6206);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0273
        gbc.setState(0xe98, 0xe1df, 0x5da0, 0x9ed3, 0x1607, 0xf5af, 0x1, 0x1);
        gbc.writeMem(0xe98, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xe1df);
        EXPECT(gbc.pc(), 0xe9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0274
        gbc.setState(0x1d31, 0xdebb, 0xb330, 0x2641, 0x988c, 0x573e, 0x1, 0x0);
        gbc.writeMem(0x1d31, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xdebb);
        EXPECT(gbc.pc(), 0x1d33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0275
        gbc.setState(0x4815, 0xc70e, 0xf430, 0x4abe, 0x276, 0x6393, 0x1, 0x0);
        gbc.writeMem(0x4815, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xc70e);
        EXPECT(gbc.pc(), 0x4817);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0276
        gbc.setState(0x3563, 0xff01, 0xc7b0, 0xdf77, 0xc26, 0x8451, 0x0, 0x0);
        gbc.writeMem(0x3563, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xff01);
        EXPECT(gbc.pc(), 0x3565);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0277
        gbc.setState(0x5eec, 0xabdd, 0xeee0, 0x74e, 0xaf4e, 0x93d3, 0x1, 0x0);
        gbc.writeMem(0x5eec, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xabdd);
        EXPECT(gbc.pc(), 0x5eee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0278
        gbc.setState(0xca80, 0x85ef, 0x4880, 0x705c, 0x7d71, 0x67c6, 0x1, 0x1);
        gbc.writeMem(0xca80, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x85ef);
        EXPECT(gbc.pc(), 0xca82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca80), 0xcb);
        EXPECT(gbc.readMem(0xca81), 0xa0);
        // CB A0 0279
        gbc.setState(0x34fd, 0x176e, 0x58f0, 0xba2c, 0x278d, 0x9136, 0x1, 0x0);
        gbc.writeMem(0x34fd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x176e);
        EXPECT(gbc.pc(), 0x34ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 027D
        gbc.setState(0xf53, 0x2c7b, 0x4f30, 0xb4a, 0x3d86, 0xcaf, 0x1, 0x0);
        gbc.writeMem(0xf53, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2c7b);
        EXPECT(gbc.pc(), 0xf55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 027E
        gbc.setState(0x5bc, 0x60f9, 0x8980, 0xca47, 0x7ef7, 0x74e0, 0x1, 0x1);
        gbc.writeMem(0x5bc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x60f9);
        EXPECT(gbc.pc(), 0x5be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 027F
        gbc.setState(0xc5b9, 0xefc4, 0x7fa0, 0xdccd, 0x5367, 0x381e, 0x1, 0x1);
        gbc.writeMem(0xc5b9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xefc4);
        EXPECT(gbc.pc(), 0xc5bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5b9), 0xcb);
        EXPECT(gbc.readMem(0xc5ba), 0xa0);
        // CB A0 0280
        gbc.setState(0x312, 0x99f1, 0x4f80, 0x632e, 0x3d57, 0x3243, 0x0, 0x0);
        gbc.writeMem(0x312, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x99f1);
        EXPECT(gbc.pc(), 0x314);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0281
        gbc.setState(0xe93a, 0x14b3, 0x9e60, 0x6687, 0xd65a, 0xfc31, 0x0, 0x1);
        gbc.writeMem(0xe93a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x14b3);
        EXPECT(gbc.pc(), 0xe93c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe93a), 0xcb);
        EXPECT(gbc.readMem(0xe93b), 0xa0);
        // CB A0 0282
        gbc.setState(0x6164, 0x90d4, 0x59d0, 0xa445, 0xe012, 0x89b8, 0x0, 0x1);
        gbc.writeMem(0x6164, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x90d4);
        EXPECT(gbc.pc(), 0x6166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0283
        gbc.setState(0xbd9f, 0x2b7c, 0x6f0, 0x3480, 0x50e4, 0xc79d, 0x0, 0x0);
        gbc.writeMem(0xbd9f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x2b7c);
        EXPECT(gbc.pc(), 0xbda1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd9f), 0xcb);
        EXPECT(gbc.readMem(0xbda0), 0xa0);
        // CB A0 0284
        gbc.setState(0x50e8, 0xb1e8, 0x1d40, 0xb20e, 0x29cf, 0xa43c, 0x0, 0x0);
        gbc.writeMem(0x50e8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb1e8);
        EXPECT(gbc.pc(), 0x50ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0285
        gbc.setState(0x285c, 0xbd0d, 0x830, 0xd0ae, 0xcfdf, 0x54ec, 0x1, 0x1);
        gbc.writeMem(0x285c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xbd0d);
        EXPECT(gbc.pc(), 0x285e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0286
        gbc.setState(0xba30, 0x4288, 0x8190, 0xe3ed, 0xe8f6, 0xd15e, 0x0, 0x1);
        gbc.writeMem(0xba30, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4288);
        EXPECT(gbc.pc(), 0xba32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba30), 0xcb);
        EXPECT(gbc.readMem(0xba31), 0xa0);
        // CB A0 0287
        gbc.setState(0x4fcb, 0xc8d6, 0x6a00, 0x573, 0xc82e, 0x6212, 0x1, 0x1);
        gbc.writeMem(0x4fcb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc8d6);
        EXPECT(gbc.pc(), 0x4fcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0288
        gbc.setState(0x95c7, 0x564d, 0x2f70, 0x2f02, 0x32da, 0x695c, 0x1, 0x1);
        gbc.writeMem(0x95c7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x564d);
        EXPECT(gbc.pc(), 0x95c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95c7), 0xcb);
        EXPECT(gbc.readMem(0x95c8), 0xa0);
        // CB A0 0289
        gbc.setState(0x3a80, 0x160, 0xc530, 0x2841, 0x8b9, 0x8403, 0x0, 0x1);
        gbc.writeMem(0x3a80, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x160);
        EXPECT(gbc.pc(), 0x3a82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 028A
        gbc.setState(0x171d, 0xd241, 0x9ee0, 0xcf8b, 0x5f16, 0x665, 0x0, 0x0);
        gbc.writeMem(0x171d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xd241);
        EXPECT(gbc.pc(), 0x171f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 028B
        gbc.setState(0xd896, 0xa96d, 0xbe70, 0xb866, 0xa607, 0x5883, 0x0, 0x0);
        gbc.writeMem(0xd896, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xa96d);
        EXPECT(gbc.pc(), 0xd898);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd896), 0xcb);
        EXPECT(gbc.readMem(0xd897), 0xa0);
        // CB A0 028C
        gbc.setState(0xe5b4, 0x2a0e, 0xc830, 0xe86, 0xaa96, 0x956d, 0x0, 0x1);
        gbc.writeMem(0xe5b4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2a0e);
        EXPECT(gbc.pc(), 0xe5b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5b4), 0xcb);
        EXPECT(gbc.readMem(0xe5b5), 0xa0);
        // CB A0 028D
        gbc.setState(0xb563, 0x48e7, 0x6e30, 0x706, 0xc792, 0xc3d0, 0x1, 0x0);
        gbc.writeMem(0xb563, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x48e7);
        EXPECT(gbc.pc(), 0xb565);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb563), 0xcb);
        EXPECT(gbc.readMem(0xb564), 0xa0);
        // CB A0 028E
        gbc.setState(0x3d81, 0x1390, 0x5940, 0x9333, 0xc1c3, 0x65cc, 0x1, 0x1);
        gbc.writeMem(0x3d81, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1390);
        EXPECT(gbc.pc(), 0x3d83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 028F
        gbc.setState(0xe82c, 0xeb60, 0xd410, 0xe39, 0xb75f, 0x95d2, 0x1, 0x1);
        gbc.writeMem(0xe82c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xeb60);
        EXPECT(gbc.pc(), 0xe82e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe82c), 0xcb);
        EXPECT(gbc.readMem(0xe82d), 0xa0);
        // CB A0 0290
        gbc.setState(0x371b, 0xd8b2, 0xf080, 0x7f85, 0xb415, 0x59e1, 0x1, 0x0);
        gbc.writeMem(0x371b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd8b2);
        EXPECT(gbc.pc(), 0x371d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0291
        gbc.setState(0xef8d, 0x96f4, 0x4730, 0x1c8f, 0x9cdd, 0xe34b, 0x0, 0x1);
        gbc.writeMem(0xef8d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x96f4);
        EXPECT(gbc.pc(), 0xef8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef8d), 0xcb);
        EXPECT(gbc.readMem(0xef8e), 0xa0);
        // CB A0 0292
        gbc.setState(0xc735, 0xa049, 0xc2c0, 0xdc02, 0xb827, 0x1dc7, 0x1, 0x0);
        gbc.writeMem(0xc735, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa049);
        EXPECT(gbc.pc(), 0xc737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc735), 0xcb);
        EXPECT(gbc.readMem(0xc736), 0xa0);
        // CB A0 0293
        gbc.setState(0x93cb, 0xcded, 0x9c10, 0xb257, 0xeb2d, 0x3a84, 0x1, 0x0);
        gbc.writeMem(0x93cb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xcded);
        EXPECT(gbc.pc(), 0x93cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93cb), 0xcb);
        EXPECT(gbc.readMem(0x93cc), 0xa0);
        // CB A0 0294
        gbc.setState(0x4b47, 0xc9fc, 0x3e80, 0xc8a7, 0xaff5, 0xd756, 0x0, 0x0);
        gbc.writeMem(0x4b47, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xc9fc);
        EXPECT(gbc.pc(), 0x4b49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0295
        gbc.setState(0x9f9c, 0x94aa, 0x2d0, 0x4cd7, 0x84d0, 0x6b57, 0x0, 0x1);
        gbc.writeMem(0x9f9c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x94aa);
        EXPECT(gbc.pc(), 0x9f9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f9c), 0xcb);
        EXPECT(gbc.readMem(0x9f9d), 0xa0);
        // CB A0 0296
        gbc.setState(0xd9eb, 0x922, 0xc990, 0xb516, 0x27ff, 0xd89e, 0x0, 0x0);
        gbc.writeMem(0xd9eb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x922);
        EXPECT(gbc.pc(), 0xd9ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9eb), 0xcb);
        EXPECT(gbc.readMem(0xd9ec), 0xa0);
        // CB A0 0297
        gbc.setState(0xc7bb, 0xbd51, 0x3eb0, 0x6f77, 0x405f, 0x52c4, 0x0, 0x0);
        gbc.writeMem(0xc7bb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xbd51);
        EXPECT(gbc.pc(), 0xc7bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7bb), 0xcb);
        EXPECT(gbc.readMem(0xc7bc), 0xa0);
        // CB A0 0298
        gbc.setState(0x86f7, 0x17a5, 0xef10, 0x41ed, 0xa3e8, 0x8a66, 0x1, 0x1);
        gbc.writeMem(0x86f7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x17a5);
        EXPECT(gbc.pc(), 0x86f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86f7), 0xcb);
        EXPECT(gbc.readMem(0x86f8), 0xa0);
        // CB A0 0299
        gbc.setState(0x1dcb, 0xa2c0, 0x9f00, 0x700, 0x3ef4, 0x4c24, 0x1, 0x1);
        gbc.writeMem(0x1dcb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa2c0);
        EXPECT(gbc.pc(), 0x1dcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 029B
        gbc.setState(0xb6b9, 0x3030, 0x4360, 0x1862, 0x3ebd, 0x2b5f, 0x0, 0x1);
        gbc.writeMem(0xb6b9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3030);
        EXPECT(gbc.pc(), 0xb6bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6b9), 0xcb);
        EXPECT(gbc.readMem(0xb6ba), 0xa0);
        // CB A0 029C
        gbc.setState(0x7227, 0x60b4, 0xf190, 0x905b, 0x227d, 0xae3d, 0x1, 0x1);
        gbc.writeMem(0x7227, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x60b4);
        EXPECT(gbc.pc(), 0x7229);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 029D
        gbc.setState(0x12b0, 0x2c78, 0x2040, 0x4d97, 0x5be, 0xa985, 0x1, 0x1);
        gbc.writeMem(0x12b0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2c78);
        EXPECT(gbc.pc(), 0x12b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 029E
        gbc.setState(0xe95, 0x2d0, 0xaf30, 0xfe4d, 0xa225, 0xf5ee, 0x1, 0x0);
        gbc.writeMem(0xe95, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2d0);
        EXPECT(gbc.pc(), 0xe97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 029F
        gbc.setState(0x3ae4, 0x5ba3, 0x6640, 0x1ead, 0x8f62, 0x538d, 0x1, 0x0);
        gbc.writeMem(0x3ae4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5ba3);
        EXPECT(gbc.pc(), 0x3ae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02A0
        gbc.setState(0xe328, 0xf0ed, 0xb870, 0x1b6b, 0xcb91, 0x1e20, 0x1, 0x0);
        gbc.writeMem(0xe328, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf0ed);
        EXPECT(gbc.pc(), 0xe32a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe328), 0xcb);
        EXPECT(gbc.readMem(0xe329), 0xa0);
        // CB A0 02A1
        gbc.setState(0xd73f, 0x8705, 0x4780, 0x14e6, 0xcadf, 0x1348, 0x1, 0x1);
        gbc.writeMem(0xd73f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8705);
        EXPECT(gbc.pc(), 0xd741);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd73f), 0xcb);
        EXPECT(gbc.readMem(0xd740), 0xa0);
        // CB A0 02A2
        gbc.setState(0x62a9, 0xfe58, 0x38a0, 0x13aa, 0x680b, 0x1857, 0x0, 0x1);
        gbc.writeMem(0x62a9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xfe58);
        EXPECT(gbc.pc(), 0x62ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02A3
        gbc.setState(0x9b38, 0xbd50, 0xe8b0, 0x9127, 0x6b63, 0x4ee8, 0x0, 0x1);
        gbc.writeMem(0x9b38, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xbd50);
        EXPECT(gbc.pc(), 0x9b3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b38), 0xcb);
        EXPECT(gbc.readMem(0x9b39), 0xa0);
        // CB A0 02A4
        gbc.setState(0xd27b, 0x5822, 0xab70, 0x2f75, 0x4ae3, 0x77ed, 0x1, 0x1);
        gbc.writeMem(0xd27b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5822);
        EXPECT(gbc.pc(), 0xd27d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd27b), 0xcb);
        EXPECT(gbc.readMem(0xd27c), 0xa0);
        // CB A0 02A5
        gbc.setState(0xdd66, 0x6647, 0x8e30, 0x40a9, 0x29f7, 0xf858, 0x0, 0x1);
        gbc.writeMem(0xdd66, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6647);
        EXPECT(gbc.pc(), 0xdd68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd66), 0xcb);
        EXPECT(gbc.readMem(0xdd67), 0xa0);
        // CB A0 02A6
        gbc.setState(0x2d82, 0xf227, 0x6eb0, 0x8ed6, 0xe0f1, 0x9bd6, 0x1, 0x0);
        gbc.writeMem(0x2d82, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xf227);
        EXPECT(gbc.pc(), 0x2d84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02A7
        gbc.setState(0xa654, 0x1375, 0x3060, 0x950a, 0x1844, 0x3307, 0x0, 0x1);
        gbc.writeMem(0xa654, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1375);
        EXPECT(gbc.pc(), 0xa656);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa654), 0xcb);
        EXPECT(gbc.readMem(0xa655), 0xa0);
        // CB A0 02A8
        gbc.setState(0x3357, 0x64a6, 0x8220, 0x7419, 0xe225, 0x3cca, 0x1, 0x0);
        gbc.writeMem(0x3357, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x64a6);
        EXPECT(gbc.pc(), 0x3359);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02A9
        gbc.setState(0xa4c, 0xadb5, 0x850, 0x1170, 0x433, 0x9955, 0x0, 0x1);
        gbc.writeMem(0xa4c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xadb5);
        EXPECT(gbc.pc(), 0xa4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02AA
        gbc.setState(0xa871, 0xf345, 0x18f0, 0x9d2, 0x6724, 0x7ef8, 0x1, 0x0);
        gbc.writeMem(0xa871, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf345);
        EXPECT(gbc.pc(), 0xa873);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa871), 0xcb);
        EXPECT(gbc.readMem(0xa872), 0xa0);
        // CB A0 02AB
        gbc.setState(0xefc6, 0x82b0, 0x5e50, 0x8c5b, 0x5d32, 0xf0d8, 0x0, 0x0);
        gbc.writeMem(0xefc6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x82b0);
        EXPECT(gbc.pc(), 0xefc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefc6), 0xcb);
        EXPECT(gbc.readMem(0xefc7), 0xa0);
        // CB A0 02AD
        gbc.setState(0x2afb, 0x15f9, 0x1320, 0xab1e, 0xaa59, 0x70c5, 0x0, 0x1);
        gbc.writeMem(0x2afb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x15f9);
        EXPECT(gbc.pc(), 0x2afd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02AE
        gbc.setState(0xae23, 0x893c, 0x61b0, 0xacc3, 0xefd4, 0xcd20, 0x0, 0x1);
        gbc.writeMem(0xae23, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x893c);
        EXPECT(gbc.pc(), 0xae25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae23), 0xcb);
        EXPECT(gbc.readMem(0xae24), 0xa0);
        // CB A0 02AF
        gbc.setState(0xb495, 0xb9b9, 0xb310, 0xe479, 0xbb63, 0xd134, 0x0, 0x1);
        gbc.writeMem(0xb495, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb9b9);
        EXPECT(gbc.pc(), 0xb497);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb495), 0xcb);
        EXPECT(gbc.readMem(0xb496), 0xa0);
        // CB A0 02B0
        gbc.setState(0xd551, 0xcb4a, 0x1e70, 0xbb1b, 0x651, 0x2657, 0x1, 0x1);
        gbc.writeMem(0xd551, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xcb4a);
        EXPECT(gbc.pc(), 0xd553);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd551), 0xcb);
        EXPECT(gbc.readMem(0xd552), 0xa0);
        // CB A0 02B1
        gbc.setState(0x6bc9, 0xfa37, 0xd5f0, 0xf2a9, 0x18ab, 0xfbc4, 0x1, 0x0);
        gbc.writeMem(0x6bc9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xfa37);
        EXPECT(gbc.pc(), 0x6bcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02B2
        gbc.setState(0xe8b7, 0xfbdc, 0x6190, 0x57e4, 0xf6e9, 0xebf4, 0x1, 0x1);
        gbc.writeMem(0xe8b7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xfbdc);
        EXPECT(gbc.pc(), 0xe8b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8b7), 0xcb);
        EXPECT(gbc.readMem(0xe8b8), 0xa0);
        // CB A0 02B3
        gbc.setState(0xe573, 0x689b, 0xfc90, 0xf482, 0xd55b, 0xe008, 0x1, 0x0);
        gbc.writeMem(0xe573, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x689b);
        EXPECT(gbc.pc(), 0xe575);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe573), 0xcb);
        EXPECT(gbc.readMem(0xe574), 0xa0);
        // CB A0 02B4
        gbc.setState(0x1d25, 0x4c56, 0x52b0, 0xf40d, 0xdebb, 0x74d, 0x1, 0x1);
        gbc.writeMem(0x1d25, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x4c56);
        EXPECT(gbc.pc(), 0x1d27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02B5
        gbc.setState(0x52e9, 0x2d99, 0x6d60, 0x7546, 0xcb0, 0x1c62, 0x1, 0x1);
        gbc.writeMem(0x52e9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2d99);
        EXPECT(gbc.pc(), 0x52eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02B6
        gbc.setState(0xd605, 0xac22, 0xd390, 0x1b07, 0x1ea7, 0x9065, 0x0, 0x1);
        gbc.writeMem(0xd605, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xac22);
        EXPECT(gbc.pc(), 0xd607);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd605), 0xcb);
        EXPECT(gbc.readMem(0xd606), 0xa0);
        // CB A0 02B7
        gbc.setState(0x4ae7, 0x70f, 0x5210, 0x5ee9, 0x401, 0xeeb0, 0x0, 0x0);
        gbc.writeMem(0x4ae7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x70f);
        EXPECT(gbc.pc(), 0x4ae9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02B8
        gbc.setState(0x636d, 0x313f, 0x68f0, 0x805b, 0x456d, 0xa93b, 0x0, 0x1);
        gbc.writeMem(0x636d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x313f);
        EXPECT(gbc.pc(), 0x636f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02B9
        gbc.setState(0xd932, 0xa4fd, 0xbc50, 0x278a, 0xd1d, 0xd725, 0x0, 0x1);
        gbc.writeMem(0xd932, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa4fd);
        EXPECT(gbc.pc(), 0xd934);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd932), 0xcb);
        EXPECT(gbc.readMem(0xd933), 0xa0);
        // CB A0 02BA
        gbc.setState(0x9a42, 0x4e4b, 0xd010, 0x8b5e, 0x9084, 0x8cbe, 0x1, 0x0);
        gbc.writeMem(0x9a42, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4e4b);
        EXPECT(gbc.pc(), 0x9a44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a42), 0xcb);
        EXPECT(gbc.readMem(0x9a43), 0xa0);
        // CB A0 02BB
        gbc.setState(0xc5a3, 0x1d2c, 0x75a0, 0x28fd, 0x792e, 0xf771, 0x0, 0x0);
        gbc.writeMem(0xc5a3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x1d2c);
        EXPECT(gbc.pc(), 0xc5a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5a3), 0xcb);
        EXPECT(gbc.readMem(0xc5a4), 0xa0);
        // CB A0 02BC
        gbc.setState(0x4f6b, 0x1f, 0x2130, 0xe9ef, 0x3598, 0xe304, 0x0, 0x0);
        gbc.writeMem(0x4f6b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1f);
        EXPECT(gbc.pc(), 0x4f6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02BD
        gbc.setState(0x3e97, 0xf15f, 0x3780, 0x5ff0, 0xa21e, 0x99f6, 0x1, 0x1);
        gbc.writeMem(0x3e97, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xf15f);
        EXPECT(gbc.pc(), 0x3e99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02BE
        gbc.setState(0x7a8f, 0x4a7e, 0xf1c0, 0xbc37, 0x16a6, 0x4b3d, 0x0, 0x0);
        gbc.writeMem(0x7a8f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4a7e);
        EXPECT(gbc.pc(), 0x7a91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02C0
        gbc.setState(0x9bd6, 0x6bb6, 0xccc0, 0x9178, 0xa2b4, 0xdba3, 0x1, 0x0);
        gbc.writeMem(0x9bd6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6bb6);
        EXPECT(gbc.pc(), 0x9bd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bd6), 0xcb);
        EXPECT(gbc.readMem(0x9bd7), 0xa0);
        // CB A0 02C1
        gbc.setState(0xe8b5, 0xccf6, 0x1f10, 0xa21e, 0xe542, 0xb3f7, 0x1, 0x1);
        gbc.writeMem(0xe8b5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xccf6);
        EXPECT(gbc.pc(), 0xe8b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8b5), 0xcb);
        EXPECT(gbc.readMem(0xe8b6), 0xa0);
        // CB A0 02C2
        gbc.setState(0x44f5, 0x70f5, 0xf790, 0x8ff9, 0x9fc8, 0x516b, 0x0, 0x1);
        gbc.writeMem(0x44f5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x70f5);
        EXPECT(gbc.pc(), 0x44f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02C3
        gbc.setState(0x8b73, 0xf1bd, 0xb6d0, 0x4ce2, 0x2acb, 0x6b58, 0x1, 0x1);
        gbc.writeMem(0x8b73, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xf1bd);
        EXPECT(gbc.pc(), 0x8b75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b73), 0xcb);
        EXPECT(gbc.readMem(0x8b74), 0xa0);
        // CB A0 02C4
        gbc.setState(0x5054, 0xa591, 0x1f10, 0x5307, 0x8bbc, 0x588f, 0x0, 0x0);
        gbc.writeMem(0x5054, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa591);
        EXPECT(gbc.pc(), 0x5056);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02C5
        gbc.setState(0xb3e6, 0xe637, 0x7570, 0xf6d1, 0xbe91, 0xf96f, 0x1, 0x0);
        gbc.writeMem(0xb3e6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xe637);
        EXPECT(gbc.pc(), 0xb3e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3e6), 0xcb);
        EXPECT(gbc.readMem(0xb3e7), 0xa0);
        // CB A0 02C7
        gbc.setState(0x5577, 0x8b4b, 0xf710, 0x958b, 0x687b, 0x91c8, 0x0, 0x1);
        gbc.writeMem(0x5577, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8b4b);
        EXPECT(gbc.pc(), 0x5579);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02C8
        gbc.setState(0x4318, 0xd4e6, 0xf2f0, 0x9b41, 0x4fb8, 0xb182, 0x0, 0x0);
        gbc.writeMem(0x4318, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd4e6);
        EXPECT(gbc.pc(), 0x431a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02CA
        gbc.setState(0xe857, 0xc5cf, 0x56f0, 0x8bed, 0x9d3, 0x8f6f, 0x1, 0x1);
        gbc.writeMem(0xe857, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc5cf);
        EXPECT(gbc.pc(), 0xe859);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe857), 0xcb);
        EXPECT(gbc.readMem(0xe858), 0xa0);
        // CB A0 02CB
        gbc.setState(0x465c, 0x122d, 0x6990, 0x28cb, 0x63bf, 0xe4d0, 0x1, 0x1);
        gbc.writeMem(0x465c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x122d);
        EXPECT(gbc.pc(), 0x465e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02CC
        gbc.setState(0x9f67, 0x42e1, 0xbfc0, 0x1c8e, 0xfa65, 0xdd7c, 0x0, 0x0);
        gbc.writeMem(0x9f67, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x42e1);
        EXPECT(gbc.pc(), 0x9f69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f67), 0xcb);
        EXPECT(gbc.readMem(0x9f68), 0xa0);
        // CB A0 02CE
        gbc.setState(0x15fc, 0x5a7e, 0xdf00, 0xbdf2, 0xee00, 0x6888, 0x1, 0x0);
        gbc.writeMem(0x15fc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5a7e);
        EXPECT(gbc.pc(), 0x15fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02D0
        gbc.setState(0xaf74, 0x59eb, 0x3820, 0xba49, 0xbe88, 0xe3c1, 0x0, 0x1);
        gbc.writeMem(0xaf74, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x59eb);
        EXPECT(gbc.pc(), 0xaf76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf74), 0xcb);
        EXPECT(gbc.readMem(0xaf75), 0xa0);
        // CB A0 02D1
        gbc.setState(0x83eb, 0x35ff, 0xd210, 0x4c1f, 0x8584, 0xc08d, 0x1, 0x1);
        gbc.writeMem(0x83eb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x35ff);
        EXPECT(gbc.pc(), 0x83ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83eb), 0xcb);
        EXPECT(gbc.readMem(0x83ec), 0xa0);
        // CB A0 02D2
        gbc.setState(0x9756, 0x80d6, 0xb580, 0x1c84, 0xcdf3, 0xc016, 0x0, 0x0);
        gbc.writeMem(0x9756, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x80d6);
        EXPECT(gbc.pc(), 0x9758);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9756), 0xcb);
        EXPECT(gbc.readMem(0x9757), 0xa0);
        // CB A0 02D5
        gbc.setState(0x24f1, 0xcb70, 0x5520, 0x2408, 0x2d14, 0x7d38, 0x1, 0x1);
        gbc.writeMem(0x24f1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xcb70);
        EXPECT(gbc.pc(), 0x24f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02D6
        gbc.setState(0x6fdb, 0x1498, 0x7250, 0x69cf, 0x6a2d, 0x9e39, 0x1, 0x0);
        gbc.writeMem(0x6fdb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x1498);
        EXPECT(gbc.pc(), 0x6fdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02D7
        gbc.setState(0x6eac, 0x3f28, 0xf3c0, 0xe6b4, 0xd29f, 0xb0e, 0x1, 0x0);
        gbc.writeMem(0x6eac, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3f28);
        EXPECT(gbc.pc(), 0x6eae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02D8
        gbc.setState(0xa751, 0x739b, 0xca80, 0x3a52, 0x7e94, 0x8a6e, 0x1, 0x1);
        gbc.writeMem(0xa751, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x739b);
        EXPECT(gbc.pc(), 0xa753);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa751), 0xcb);
        EXPECT(gbc.readMem(0xa752), 0xa0);
        // CB A0 02D9
        gbc.setState(0x8938, 0x26fe, 0xd6b0, 0xbbd2, 0xc2c8, 0x1ee3, 0x0, 0x0);
        gbc.writeMem(0x8938, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x26fe);
        EXPECT(gbc.pc(), 0x893a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8938), 0xcb);
        EXPECT(gbc.readMem(0x8939), 0xa0);
        // CB A0 02DA
        gbc.setState(0x5fcb, 0x8170, 0xa6e0, 0xd7f4, 0x3646, 0x4edb, 0x1, 0x0);
        gbc.writeMem(0x5fcb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x8170);
        EXPECT(gbc.pc(), 0x5fcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02DC
        gbc.setState(0xd32, 0xdb79, 0xc630, 0xf3a8, 0x1881, 0xc2b6, 0x0, 0x1);
        gbc.writeMem(0xd32, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xdb79);
        EXPECT(gbc.pc(), 0xd34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02DE
        gbc.setState(0x5679, 0xd034, 0xae70, 0x2340, 0x21d9, 0xa7b5, 0x0, 0x1);
        gbc.writeMem(0x5679, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xd034);
        EXPECT(gbc.pc(), 0x567b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02E0
        gbc.setState(0x4ea, 0xba20, 0x6ff0, 0xe1c1, 0xf483, 0x5e6e, 0x1, 0x0);
        gbc.writeMem(0x4ea, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xba20);
        EXPECT(gbc.pc(), 0x4ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02E1
        gbc.setState(0x70f0, 0xdedf, 0x6280, 0x5730, 0x1cd8, 0xc2e9, 0x0, 0x0);
        gbc.writeMem(0x70f0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xdedf);
        EXPECT(gbc.pc(), 0x70f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02E2
        gbc.setState(0xe0af, 0x427f, 0x7520, 0x968d, 0x1f66, 0x3291, 0x0, 0x1);
        gbc.writeMem(0xe0af, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x427f);
        EXPECT(gbc.pc(), 0xe0b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0af), 0xcb);
        EXPECT(gbc.readMem(0xe0b0), 0xa0);
        // CB A0 02E3
        gbc.setState(0xb217, 0x4cc0, 0x9960, 0x153f, 0xe646, 0x61db, 0x1, 0x0);
        gbc.writeMem(0xb217, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4cc0);
        EXPECT(gbc.pc(), 0xb219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb217), 0xcb);
        EXPECT(gbc.readMem(0xb218), 0xa0);
        // CB A0 02E4
        gbc.setState(0xff0, 0x7f4f, 0xe9a0, 0xeb4d, 0xb2fb, 0xd291, 0x0, 0x0);
        gbc.writeMem(0xff0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7f4f);
        EXPECT(gbc.pc(), 0xff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02E5
        gbc.setState(0x14d3, 0xdcb0, 0xf240, 0x66b6, 0x1cf5, 0x7f15, 0x0, 0x0);
        gbc.writeMem(0x14d3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xdcb0);
        EXPECT(gbc.pc(), 0x14d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02E6
        gbc.setState(0x5653, 0x17c2, 0xd510, 0xa3d4, 0x2f38, 0xa046, 0x1, 0x0);
        gbc.writeMem(0x5653, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x17c2);
        EXPECT(gbc.pc(), 0x5655);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02E7
        gbc.setState(0x451d, 0xe42f, 0xbeb0, 0x20a4, 0x8477, 0xe31b, 0x0, 0x0);
        gbc.writeMem(0x451d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe42f);
        EXPECT(gbc.pc(), 0x451f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02E8
        gbc.setState(0x66b2, 0x2e02, 0x98a0, 0xae85, 0xf5a3, 0x35c4, 0x1, 0x0);
        gbc.writeMem(0x66b2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x2e02);
        EXPECT(gbc.pc(), 0x66b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02E9
        gbc.setState(0x1db1, 0xcd06, 0x4d10, 0xa872, 0x46d5, 0xdec6, 0x0, 0x0);
        gbc.writeMem(0x1db1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xcd06);
        EXPECT(gbc.pc(), 0x1db3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02EA
        gbc.setState(0x705b, 0x8913, 0x7c90, 0xb22d, 0x733e, 0x4197, 0x0, 0x0);
        gbc.writeMem(0x705b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8913);
        EXPECT(gbc.pc(), 0x705d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02EB
        gbc.setState(0x905d, 0x3e15, 0xe9e0, 0xb64c, 0xbb14, 0xd02e, 0x0, 0x1);
        gbc.writeMem(0x905d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3e15);
        EXPECT(gbc.pc(), 0x905f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x905d), 0xcb);
        EXPECT(gbc.readMem(0x905e), 0xa0);
        // CB A0 02EC
        gbc.setState(0x73e5, 0xe5f2, 0xd1f0, 0xa2bd, 0x9367, 0x22db, 0x1, 0x1);
        gbc.writeMem(0x73e5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xe5f2);
        EXPECT(gbc.pc(), 0x73e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02ED
        gbc.setState(0x7ec5, 0x9203, 0x3a80, 0x9dde, 0xe61d, 0xeab1, 0x0, 0x0);
        gbc.writeMem(0x7ec5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9203);
        EXPECT(gbc.pc(), 0x7ec7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02EE
        gbc.setState(0x9160, 0x3952, 0xaa0, 0xb41b, 0xf6f5, 0xa10e, 0x1, 0x0);
        gbc.writeMem(0x9160, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3952);
        EXPECT(gbc.pc(), 0x9162);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9160), 0xcb);
        EXPECT(gbc.readMem(0x9161), 0xa0);
        // CB A0 02EF
        gbc.setState(0xcb2, 0xa030, 0x6cc0, 0x9022, 0x3132, 0x13fc, 0x1, 0x1);
        gbc.writeMem(0xcb2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xa030);
        EXPECT(gbc.pc(), 0xcb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02F0
        gbc.setState(0xe87, 0x5b30, 0x2d20, 0x6171, 0xbffd, 0x10bb, 0x0, 0x1);
        gbc.writeMem(0xe87, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5b30);
        EXPECT(gbc.pc(), 0xe89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02F1
        gbc.setState(0x1800, 0xe14e, 0x28e0, 0x474d, 0x87b2, 0xc131, 0x0, 0x1);
        gbc.writeMem(0x1800, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe14e);
        EXPECT(gbc.pc(), 0x1802);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02F2
        gbc.setState(0x978c, 0xe7c9, 0x9920, 0xaa13, 0xb5ee, 0x55c5, 0x1, 0x1);
        gbc.writeMem(0x978c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe7c9);
        EXPECT(gbc.pc(), 0x978e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x978c), 0xcb);
        EXPECT(gbc.readMem(0x978d), 0xa0);
        // CB A0 02F3
        gbc.setState(0x4dd6, 0x4fc9, 0x5170, 0x8cdc, 0xf289, 0xe0c, 0x0, 0x1);
        gbc.writeMem(0x4dd6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4fc9);
        EXPECT(gbc.pc(), 0x4dd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02F4
        gbc.setState(0x2ec4, 0xe163, 0x47c0, 0xd2e3, 0x5ef7, 0x8a39, 0x0, 0x0);
        gbc.writeMem(0x2ec4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe163);
        EXPECT(gbc.pc(), 0x2ec6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02F5
        gbc.setState(0xd803, 0x8fd5, 0x2c60, 0x536, 0xefb3, 0xcbaf, 0x1, 0x0);
        gbc.writeMem(0xd803, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8fd5);
        EXPECT(gbc.pc(), 0xd805);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd803), 0xcb);
        EXPECT(gbc.readMem(0xd804), 0xa0);
        // CB A0 02F6
        gbc.setState(0x8207, 0x69f5, 0x7760, 0x34b4, 0xbfb3, 0x6a38, 0x0, 0x0);
        gbc.writeMem(0x8207, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x69f5);
        EXPECT(gbc.pc(), 0x8209);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8207), 0xcb);
        EXPECT(gbc.readMem(0x8208), 0xa0);
        // CB A0 02F7
        gbc.setState(0x8d6a, 0x903f, 0x8970, 0x9ad6, 0x76fa, 0xd425, 0x0, 0x1);
        gbc.writeMem(0x8d6a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x903f);
        EXPECT(gbc.pc(), 0x8d6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d6a), 0xcb);
        EXPECT(gbc.readMem(0x8d6b), 0xa0);
        // CB A0 02F8
        gbc.setState(0xd2b, 0x6ae4, 0xaa20, 0x5d9b, 0x3e2a, 0x828d, 0x0, 0x1);
        gbc.writeMem(0xd2b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6ae4);
        EXPECT(gbc.pc(), 0xd2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02F9
        gbc.setState(0xb96, 0x9d93, 0x1e50, 0xa48f, 0x93fc, 0xfc59, 0x1, 0x0);
        gbc.writeMem(0xb96, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9d93);
        EXPECT(gbc.pc(), 0xb98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02FA
        gbc.setState(0x499b, 0x2187, 0x11f0, 0x1f2d, 0x89e2, 0xe4c9, 0x0, 0x1);
        gbc.writeMem(0x499b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x2187);
        EXPECT(gbc.pc(), 0x499d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 02FB
        gbc.setState(0x3d6, 0x63f3, 0xe3c0, 0x2247, 0x72ee, 0xb28d, 0x0, 0x1);
        gbc.writeMem(0x3d6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x63f3);
        EXPECT(gbc.pc(), 0x3d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02FC
        gbc.setState(0xc2e5, 0x2003, 0xa200, 0x65bf, 0xdc8a, 0x6424, 0x0, 0x1);
        gbc.writeMem(0xc2e5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x2003);
        EXPECT(gbc.pc(), 0xc2e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2e5), 0xcb);
        EXPECT(gbc.readMem(0xc2e6), 0xa0);
        // CB A0 02FD
        gbc.setState(0x1819, 0xf722, 0x40c0, 0xb746, 0xaf52, 0xbecf, 0x1, 0x0);
        gbc.writeMem(0x1819, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf722);
        EXPECT(gbc.pc(), 0x181b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02FE
        gbc.setState(0x34a4, 0x78eb, 0x5640, 0x3872, 0x9494, 0xeb11, 0x0, 0x0);
        gbc.writeMem(0x34a4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x78eb);
        EXPECT(gbc.pc(), 0x34a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 02FF
        gbc.setState(0xd251, 0x366e, 0x2950, 0xb2c7, 0xcd77, 0xfebb, 0x0, 0x0);
        gbc.writeMem(0xd251, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x366e);
        EXPECT(gbc.pc(), 0xd253);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd251), 0xcb);
        EXPECT(gbc.readMem(0xd252), 0xa0);
        // CB A0 0300
        gbc.setState(0xd9a1, 0xf253, 0x2af0, 0xdf5b, 0xfca0, 0xb25f, 0x0, 0x1);
        gbc.writeMem(0xd9a1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf253);
        EXPECT(gbc.pc(), 0xd9a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9a1), 0xcb);
        EXPECT(gbc.readMem(0xd9a2), 0xa0);
        // CB A0 0301
        gbc.setState(0xede0, 0x9e11, 0x9240, 0x6948, 0x52b3, 0xc9dc, 0x0, 0x1);
        gbc.writeMem(0xede0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9e11);
        EXPECT(gbc.pc(), 0xede2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xede0), 0xcb);
        EXPECT(gbc.readMem(0xede1), 0xa0);
        // CB A0 0302
        gbc.setState(0xc797, 0x30d7, 0x2830, 0x7ac, 0xf33c, 0xe43, 0x0, 0x1);
        gbc.writeMem(0xc797, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x30d7);
        EXPECT(gbc.pc(), 0xc799);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc797), 0xcb);
        EXPECT(gbc.readMem(0xc798), 0xa0);
        // CB A0 0303
        gbc.setState(0x7bd1, 0x7c98, 0x1a20, 0x39af, 0xc11, 0x673b, 0x0, 0x0);
        gbc.writeMem(0x7bd1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7c98);
        EXPECT(gbc.pc(), 0x7bd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0304
        gbc.setState(0xb32b, 0xec65, 0x2270, 0x5241, 0x33ac, 0xce00, 0x0, 0x1);
        gbc.writeMem(0xb32b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xec65);
        EXPECT(gbc.pc(), 0xb32d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb32b), 0xcb);
        EXPECT(gbc.readMem(0xb32c), 0xa0);
        // CB A0 0305
        gbc.setState(0x2b5f, 0x2cb9, 0xf150, 0x862c, 0x7cb1, 0x7cb0, 0x1, 0x0);
        gbc.writeMem(0x2b5f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2cb9);
        EXPECT(gbc.pc(), 0x2b61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0306
        gbc.setState(0x3858, 0x8855, 0xf650, 0x2ea9, 0x4bae, 0xcf45, 0x1, 0x1);
        gbc.writeMem(0x3858, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x8855);
        EXPECT(gbc.pc(), 0x385a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0307
        gbc.setState(0xebed, 0x9708, 0xe9d0, 0x8c23, 0xbc46, 0xd0c3, 0x0, 0x1);
        gbc.writeMem(0xebed, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x9708);
        EXPECT(gbc.pc(), 0xebef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebed), 0xcb);
        EXPECT(gbc.readMem(0xebee), 0xa0);
        // CB A0 0308
        gbc.setState(0xefb7, 0x318e, 0x5f10, 0xf7c5, 0xb54, 0xbaa1, 0x1, 0x1);
        gbc.writeMem(0xefb7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x318e);
        EXPECT(gbc.pc(), 0xefb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefb7), 0xcb);
        EXPECT(gbc.readMem(0xefb8), 0xa0);
        // CB A0 0309
        gbc.setState(0xc280, 0xb5b3, 0x20, 0x5207, 0x5989, 0x1498, 0x1, 0x0);
        gbc.writeMem(0xc280, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb5b3);
        EXPECT(gbc.pc(), 0xc282);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc280), 0xcb);
        EXPECT(gbc.readMem(0xc281), 0xa0);
        // CB A0 030A
        gbc.setState(0x81c9, 0xa398, 0x89f0, 0x90d0, 0x87cd, 0xcebe, 0x0, 0x1);
        gbc.writeMem(0x81c9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xa398);
        EXPECT(gbc.pc(), 0x81cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81c9), 0xcb);
        EXPECT(gbc.readMem(0x81ca), 0xa0);
        // CB A0 030B
        gbc.setState(0x92d5, 0xfb5d, 0x6d60, 0x8af, 0xbad8, 0xf833, 0x1, 0x1);
        gbc.writeMem(0x92d5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xfb5d);
        EXPECT(gbc.pc(), 0x92d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92d5), 0xcb);
        EXPECT(gbc.readMem(0x92d6), 0xa0);
        // CB A0 030C
        gbc.setState(0x65a9, 0x5925, 0xd50, 0xa575, 0xff68, 0xe03a, 0x1, 0x0);
        gbc.writeMem(0x65a9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5925);
        EXPECT(gbc.pc(), 0x65ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 030D
        gbc.setState(0xe2c7, 0xd684, 0x9e90, 0x61ee, 0x45e3, 0x9dd7, 0x1, 0x0);
        gbc.writeMem(0xe2c7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd684);
        EXPECT(gbc.pc(), 0xe2c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2c7), 0xcb);
        EXPECT(gbc.readMem(0xe2c8), 0xa0);
        // CB A0 030E
        gbc.setState(0x287e, 0x62c3, 0x8580, 0xc848, 0x44db, 0xe649, 0x1, 0x0);
        gbc.writeMem(0x287e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x62c3);
        EXPECT(gbc.pc(), 0x2880);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 030F
        gbc.setState(0xbb62, 0xb9c4, 0x8c60, 0xa8b7, 0xa4f2, 0xe419, 0x1, 0x0);
        gbc.writeMem(0xbb62, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb9c4);
        EXPECT(gbc.pc(), 0xbb64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb62), 0xcb);
        EXPECT(gbc.readMem(0xbb63), 0xa0);
        // CB A0 0310
        gbc.setState(0xa7cd, 0xb24, 0xbc90, 0xd27f, 0xa994, 0x90f3, 0x1, 0x1);
        gbc.writeMem(0xa7cd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xb24);
        EXPECT(gbc.pc(), 0xa7cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7cd), 0xcb);
        EXPECT(gbc.readMem(0xa7ce), 0xa0);
        // CB A0 0311
        gbc.setState(0x9cbc, 0x1630, 0x670, 0x3730, 0x6c34, 0xcb0f, 0x1, 0x0);
        gbc.writeMem(0x9cbc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1630);
        EXPECT(gbc.pc(), 0x9cbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cbc), 0xcb);
        EXPECT(gbc.readMem(0x9cbd), 0xa0);
        // CB A0 0312
        gbc.setState(0x8bd8, 0xc5f2, 0xdff0, 0x9ac9, 0xef36, 0x3f1a, 0x0, 0x0);
        gbc.writeMem(0x8bd8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc5f2);
        EXPECT(gbc.pc(), 0x8bda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bd8), 0xcb);
        EXPECT(gbc.readMem(0x8bd9), 0xa0);
        // CB A0 0313
        gbc.setState(0x29d3, 0xe59e, 0x8f10, 0x6f3a, 0xa671, 0x5b83, 0x0, 0x0);
        gbc.writeMem(0x29d3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe59e);
        EXPECT(gbc.pc(), 0x29d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0314
        gbc.setState(0x5624, 0xc52b, 0xcab0, 0xb03d, 0x437, 0xf026, 0x1, 0x1);
        gbc.writeMem(0x5624, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc52b);
        EXPECT(gbc.pc(), 0x5626);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0315
        gbc.setState(0xc68, 0xa810, 0x1a70, 0xd765, 0xe94c, 0x6de6, 0x0, 0x1);
        gbc.writeMem(0xc68, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa810);
        EXPECT(gbc.pc(), 0xc6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0316
        gbc.setState(0x2126, 0x8fd7, 0x3d0, 0x84da, 0xff35, 0x7e46, 0x1, 0x0);
        gbc.writeMem(0x2126, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8fd7);
        EXPECT(gbc.pc(), 0x2128);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0317
        gbc.setState(0x3721, 0x656e, 0xd1e0, 0x592e, 0x79ef, 0xe524, 0x0, 0x1);
        gbc.writeMem(0x3721, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x656e);
        EXPECT(gbc.pc(), 0x3723);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0318
        gbc.setState(0xef6f, 0x7230, 0x6770, 0x91e4, 0x99ed, 0x7a9a, 0x1, 0x1);
        gbc.writeMem(0xef6f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7230);
        EXPECT(gbc.pc(), 0xef71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef6f), 0xcb);
        EXPECT(gbc.readMem(0xef70), 0xa0);
        // CB A0 0319
        gbc.setState(0xe2d4, 0xb5bd, 0x8460, 0x1ace, 0x49c2, 0x8d3f, 0x0, 0x0);
        gbc.writeMem(0xe2d4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb5bd);
        EXPECT(gbc.pc(), 0xe2d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2d4), 0xcb);
        EXPECT(gbc.readMem(0xe2d5), 0xa0);
        // CB A0 031A
        gbc.setState(0x866f, 0x6ac, 0xaba0, 0x8f58, 0x44b2, 0x83c4, 0x1, 0x0);
        gbc.writeMem(0x866f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6ac);
        EXPECT(gbc.pc(), 0x8671);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x866f), 0xcb);
        EXPECT(gbc.readMem(0x8670), 0xa0);
        // CB A0 031B
        gbc.setState(0xb1de, 0x7834, 0xf990, 0xb684, 0x1dd7, 0x331, 0x1, 0x1);
        gbc.writeMem(0xb1de, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x7834);
        EXPECT(gbc.pc(), 0xb1e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1de), 0xcb);
        EXPECT(gbc.readMem(0xb1df), 0xa0);
        // CB A0 031C
        gbc.setState(0x3c0b, 0x122a, 0xdb50, 0xea25, 0xe71d, 0x1cec, 0x0, 0x1);
        gbc.writeMem(0x3c0b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x122a);
        EXPECT(gbc.pc(), 0x3c0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 031D
        gbc.setState(0xd5ab, 0x2841, 0x8e50, 0x7dea, 0xfb3c, 0xd9d9, 0x0, 0x1);
        gbc.writeMem(0xd5ab, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2841);
        EXPECT(gbc.pc(), 0xd5ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ab), 0xcb);
        EXPECT(gbc.readMem(0xd5ac), 0xa0);
        // CB A0 031E
        gbc.setState(0xeb13, 0x275f, 0x6440, 0x81f6, 0xf3b2, 0x856f, 0x1, 0x0);
        gbc.writeMem(0xeb13, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x275f);
        EXPECT(gbc.pc(), 0xeb15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb13), 0xcb);
        EXPECT(gbc.readMem(0xeb14), 0xa0);
        // CB A0 031F
        gbc.setState(0xdfb0, 0x4671, 0xeee0, 0x15e1, 0x9643, 0x5a33, 0x0, 0x0);
        gbc.writeMem(0xdfb0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4671);
        EXPECT(gbc.pc(), 0xdfb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfb0), 0xcb);
        EXPECT(gbc.readMem(0xdfb1), 0xa0);
        // CB A0 0320
        gbc.setState(0x9fc, 0xa689, 0x1d50, 0xaf7c, 0x4e29, 0xc1db, 0x1, 0x1);
        gbc.writeMem(0x9fc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa689);
        EXPECT(gbc.pc(), 0x9fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0321
        gbc.setState(0x32dd, 0x5bbf, 0xbc10, 0x7fe1, 0x98ee, 0x9611, 0x1, 0x0);
        gbc.writeMem(0x32dd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5bbf);
        EXPECT(gbc.pc(), 0x32df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0322
        gbc.setState(0x7d6d, 0xb5, 0xfb90, 0x8210, 0x44fc, 0x2c10, 0x1, 0x0);
        gbc.writeMem(0x7d6d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb5);
        EXPECT(gbc.pc(), 0x7d6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0323
        gbc.setState(0x8554, 0xf5c4, 0xd7d0, 0x8342, 0xf489, 0xd988, 0x1, 0x0);
        gbc.writeMem(0x8554, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf5c4);
        EXPECT(gbc.pc(), 0x8556);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8554), 0xcb);
        EXPECT(gbc.readMem(0x8555), 0xa0);
        // CB A0 0324
        gbc.setState(0x7779, 0x6d61, 0xb990, 0x504, 0x6044, 0xd2a2, 0x1, 0x1);
        gbc.writeMem(0x7779, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x6d61);
        EXPECT(gbc.pc(), 0x777b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0325
        gbc.setState(0xc63f, 0xcd1c, 0x1a00, 0xe16c, 0xcc31, 0xd670, 0x0, 0x0);
        gbc.writeMem(0xc63f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xcd1c);
        EXPECT(gbc.pc(), 0xc641);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc63f), 0xcb);
        EXPECT(gbc.readMem(0xc640), 0xa0);
        // CB A0 0327
        gbc.setState(0x7862, 0x2012, 0x16b0, 0xd503, 0x6c45, 0x148c, 0x1, 0x1);
        gbc.writeMem(0x7862, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x2012);
        EXPECT(gbc.pc(), 0x7864);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0328
        gbc.setState(0x1ad6, 0xc439, 0xf550, 0x1850, 0xcc78, 0x9e03, 0x1, 0x1);
        gbc.writeMem(0x1ad6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xc439);
        EXPECT(gbc.pc(), 0x1ad8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0329
        gbc.setState(0x248d, 0xf843, 0x1530, 0xf4f1, 0xdf4c, 0xfe9e, 0x0, 0x1);
        gbc.writeMem(0x248d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xf843);
        EXPECT(gbc.pc(), 0x248f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 032A
        gbc.setState(0x9f97, 0x939f, 0x8e50, 0x2263, 0xa612, 0x188b, 0x0, 0x0);
        gbc.writeMem(0x9f97, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x939f);
        EXPECT(gbc.pc(), 0x9f99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f97), 0xcb);
        EXPECT(gbc.readMem(0x9f98), 0xa0);
        // CB A0 032B
        gbc.setState(0x27f7, 0x551, 0xa970, 0x200e, 0xfc08, 0x3677, 0x1, 0x1);
        gbc.writeMem(0x27f7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x551);
        EXPECT(gbc.pc(), 0x27f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 032C
        gbc.setState(0x6c25, 0xfead, 0xe520, 0xa339, 0x103a, 0xfb81, 0x1, 0x0);
        gbc.writeMem(0x6c25, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xfead);
        EXPECT(gbc.pc(), 0x6c27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 032D
        gbc.setState(0xab92, 0x2063, 0x790, 0xdcae, 0xfa78, 0xfa7f, 0x0, 0x0);
        gbc.writeMem(0xab92, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2063);
        EXPECT(gbc.pc(), 0xab94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab92), 0xcb);
        EXPECT(gbc.readMem(0xab93), 0xa0);
        // CB A0 032E
        gbc.setState(0x561e, 0xb963, 0x50, 0x827, 0x86b7, 0x2a2f, 0x0, 0x1);
        gbc.writeMem(0x561e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xb963);
        EXPECT(gbc.pc(), 0x5620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 032F
        gbc.setState(0x8e7a, 0x8921, 0x5f30, 0x2900, 0xd21f, 0x2854, 0x0, 0x0);
        gbc.writeMem(0x8e7a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8921);
        EXPECT(gbc.pc(), 0x8e7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e7a), 0xcb);
        EXPECT(gbc.readMem(0x8e7b), 0xa0);
        // CB A0 0330
        gbc.setState(0x2ecd, 0xd744, 0x1420, 0x386b, 0xdd0e, 0xb183, 0x0, 0x0);
        gbc.writeMem(0x2ecd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd744);
        EXPECT(gbc.pc(), 0x2ecf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0331
        gbc.setState(0x4534, 0x3483, 0xa4d0, 0x3a78, 0x239, 0x9168, 0x0, 0x1);
        gbc.writeMem(0x4534, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3483);
        EXPECT(gbc.pc(), 0x4536);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0332
        gbc.setState(0xb4a2, 0xb198, 0x2cf0, 0xcf1d, 0xfadf, 0x34b8, 0x0, 0x0);
        gbc.writeMem(0xb4a2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb198);
        EXPECT(gbc.pc(), 0xb4a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4a2), 0xcb);
        EXPECT(gbc.readMem(0xb4a3), 0xa0);
        // CB A0 0333
        gbc.setState(0x74d, 0xd4e4, 0xa810, 0x6ec, 0x63d8, 0xd532, 0x1, 0x1);
        gbc.writeMem(0x74d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xd4e4);
        EXPECT(gbc.pc(), 0x74f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0334
        gbc.setState(0x391d, 0x8bda, 0x3e10, 0x57b2, 0xcc57, 0x3362, 0x1, 0x0);
        gbc.writeMem(0x391d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x8bda);
        EXPECT(gbc.pc(), 0x391f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0335
        gbc.setState(0xa28d, 0x4f6d, 0x5440, 0x910d, 0xfd4, 0x139, 0x1, 0x1);
        gbc.writeMem(0xa28d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x4f6d);
        EXPECT(gbc.pc(), 0xa28f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa28d), 0xcb);
        EXPECT(gbc.readMem(0xa28e), 0xa0);
        // CB A0 0336
        gbc.setState(0xe2bf, 0x165a, 0x8480, 0xc573, 0x4f95, 0x2b1a, 0x0, 0x0);
        gbc.writeMem(0xe2bf, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x165a);
        EXPECT(gbc.pc(), 0xe2c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2bf), 0xcb);
        EXPECT(gbc.readMem(0xe2c0), 0xa0);
        // CB A0 0337
        gbc.setState(0x87e8, 0x12d7, 0xc960, 0xc26c, 0x85fe, 0x41e3, 0x1, 0x1);
        gbc.writeMem(0x87e8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x12d7);
        EXPECT(gbc.pc(), 0x87ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87e8), 0xcb);
        EXPECT(gbc.readMem(0x87e9), 0xa0);
        // CB A0 0338
        gbc.setState(0x1cfb, 0xb542, 0xce90, 0x1c11, 0xc601, 0xa8b7, 0x1, 0x1);
        gbc.writeMem(0x1cfb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xb542);
        EXPECT(gbc.pc(), 0x1cfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0339
        gbc.setState(0xef17, 0x634d, 0x1b20, 0xd6cc, 0xd6c4, 0x5d7, 0x1, 0x1);
        gbc.writeMem(0xef17, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x634d);
        EXPECT(gbc.pc(), 0xef19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef17), 0xcb);
        EXPECT(gbc.readMem(0xef18), 0xa0);
        // CB A0 033A
        gbc.setState(0xd484, 0xa4e6, 0x3d10, 0x1f14, 0x4aae, 0xc11d, 0x1, 0x0);
        gbc.writeMem(0xd484, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xa4e6);
        EXPECT(gbc.pc(), 0xd486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd484), 0xcb);
        EXPECT(gbc.readMem(0xd485), 0xa0);
        // CB A0 033B
        gbc.setState(0x19d4, 0x889, 0x27d0, 0xe208, 0x8511, 0x2733, 0x1, 0x1);
        gbc.writeMem(0x19d4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x889);
        EXPECT(gbc.pc(), 0x19d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 033C
        gbc.setState(0xe9af, 0x4e79, 0xe600, 0xf721, 0xbaac, 0x93e0, 0x1, 0x0);
        gbc.writeMem(0xe9af, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x4e79);
        EXPECT(gbc.pc(), 0xe9b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9af), 0xcb);
        EXPECT(gbc.readMem(0xe9b0), 0xa0);
        // CB A0 033D
        gbc.setState(0x7758, 0x8efa, 0xa730, 0xd92a, 0xacc1, 0x10b5, 0x0, 0x1);
        gbc.writeMem(0x7758, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8efa);
        EXPECT(gbc.pc(), 0x775a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 033E
        gbc.setState(0x20df, 0x998c, 0xa190, 0xe6e2, 0x6fcd, 0xe5eb, 0x0, 0x0);
        gbc.writeMem(0x20df, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x998c);
        EXPECT(gbc.pc(), 0x20e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 033F
        gbc.setState(0xbf4f, 0x10a6, 0x8f0, 0xe572, 0x19bd, 0x767d, 0x1, 0x0);
        gbc.writeMem(0xbf4f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x10a6);
        EXPECT(gbc.pc(), 0xbf51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf4f), 0xcb);
        EXPECT(gbc.readMem(0xbf50), 0xa0);
        // CB A0 0340
        gbc.setState(0xcf8a, 0x7667, 0x9df0, 0xef77, 0x1477, 0xe76e, 0x0, 0x1);
        gbc.writeMem(0xcf8a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x7667);
        EXPECT(gbc.pc(), 0xcf8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf8a), 0xcb);
        EXPECT(gbc.readMem(0xcf8b), 0xa0);
        // CB A0 0341
        gbc.setState(0x1331, 0xb940, 0x41f0, 0xd956, 0x19b2, 0x1764, 0x0, 0x0);
        gbc.writeMem(0x1331, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xb940);
        EXPECT(gbc.pc(), 0x1333);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0342
        gbc.setState(0xaba2, 0x3472, 0x41e0, 0x6d52, 0xc26e, 0xe9ea, 0x1, 0x0);
        gbc.writeMem(0xaba2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3472);
        EXPECT(gbc.pc(), 0xaba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaba2), 0xcb);
        EXPECT(gbc.readMem(0xaba3), 0xa0);
        // CB A0 0343
        gbc.setState(0xd8af, 0x291b, 0x6320, 0xcd03, 0xdce0, 0xb48f, 0x1, 0x0);
        gbc.writeMem(0xd8af, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x291b);
        EXPECT(gbc.pc(), 0xd8b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8af), 0xcb);
        EXPECT(gbc.readMem(0xd8b0), 0xa0);
        // CB A0 0344
        gbc.setState(0x5308, 0x3f2b, 0x70, 0xd549, 0xe4dc, 0x397f, 0x0, 0x0);
        gbc.writeMem(0x5308, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x3f2b);
        EXPECT(gbc.pc(), 0x530a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0345
        gbc.setState(0x42fc, 0x4b76, 0x7610, 0xadd2, 0x2937, 0x6676, 0x0, 0x1);
        gbc.writeMem(0x42fc, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x4b76);
        EXPECT(gbc.pc(), 0x42fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0346
        gbc.setState(0x978a, 0x862b, 0x2f0, 0xd5bd, 0x4240, 0x41c0, 0x1, 0x0);
        gbc.writeMem(0x978a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x862b);
        EXPECT(gbc.pc(), 0x978c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x978a), 0xcb);
        EXPECT(gbc.readMem(0x978b), 0xa0);
        // CB A0 0347
        gbc.setState(0xc59, 0xcb1a, 0x9f00, 0x2ad2, 0x4bb3, 0x1ecf, 0x1, 0x1);
        gbc.writeMem(0xc59, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xcb1a);
        EXPECT(gbc.pc(), 0xc5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0348
        gbc.setState(0x1cc8, 0xd2d9, 0xe170, 0x29de, 0xed62, 0x8887, 0x0, 0x0);
        gbc.writeMem(0x1cc8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd2d9);
        EXPECT(gbc.pc(), 0x1cca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0349
        gbc.setState(0x4504, 0x869f, 0x9d60, 0x2acf, 0xc871, 0x38a3, 0x1, 0x1);
        gbc.writeMem(0x4504, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x869f);
        EXPECT(gbc.pc(), 0x4506);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 034A
        gbc.setState(0x241a, 0x131, 0x45a0, 0x5d1a, 0x2dd3, 0xea06, 0x0, 0x1);
        gbc.writeMem(0x241a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x131);
        EXPECT(gbc.pc(), 0x241c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 034B
        gbc.setState(0x27e3, 0xcc82, 0x98a0, 0x5ae8, 0x7f86, 0xa8bc, 0x1, 0x1);
        gbc.writeMem(0x27e3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xcc82);
        EXPECT(gbc.pc(), 0x27e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 034C
        gbc.setState(0xc597, 0xfb43, 0x56f0, 0x7adf, 0x7f88, 0x3329, 0x0, 0x0);
        gbc.writeMem(0xc597, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xfb43);
        EXPECT(gbc.pc(), 0xc599);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc597), 0xcb);
        EXPECT(gbc.readMem(0xc598), 0xa0);
        // CB A0 034D
        gbc.setState(0x6a8f, 0x22fe, 0x89f0, 0xe023, 0x2a8b, 0xb2a4, 0x0, 0x0);
        gbc.writeMem(0x6a8f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x22fe);
        EXPECT(gbc.pc(), 0x6a91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 034E
        gbc.setState(0x6218, 0x9e21, 0xab10, 0x40f3, 0x8491, 0x85da, 0x1, 0x1);
        gbc.writeMem(0x6218, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9e21);
        EXPECT(gbc.pc(), 0x621a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 034F
        gbc.setState(0xbdc7, 0x4228, 0x43c0, 0xa03c, 0x8fcb, 0x2558, 0x0, 0x1);
        gbc.writeMem(0xbdc7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4228);
        EXPECT(gbc.pc(), 0xbdc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdc7), 0xcb);
        EXPECT(gbc.readMem(0xbdc8), 0xa0);
        // CB A0 0350
        gbc.setState(0x54d, 0x14c9, 0x7970, 0xb3f4, 0x550, 0xc0f8, 0x0, 0x0);
        gbc.writeMem(0x54d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x14c9);
        EXPECT(gbc.pc(), 0x54f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0351
        gbc.setState(0x7208, 0xbfd1, 0x6610, 0x2a8a, 0x3ec2, 0x960a, 0x0, 0x0);
        gbc.writeMem(0x7208, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xbfd1);
        EXPECT(gbc.pc(), 0x720a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0353
        gbc.setState(0x5b3e, 0x7f03, 0x84b0, 0xa67d, 0x6b1d, 0xc108, 0x0, 0x1);
        gbc.writeMem(0x5b3e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x7f03);
        EXPECT(gbc.pc(), 0x5b40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0354
        gbc.setState(0xce0f, 0x1d8c, 0x6e30, 0x3518, 0xe062, 0x116d, 0x0, 0x1);
        gbc.writeMem(0xce0f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x1d8c);
        EXPECT(gbc.pc(), 0xce11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce0f), 0xcb);
        EXPECT(gbc.readMem(0xce10), 0xa0);
        // CB A0 0356
        gbc.setState(0x5bc3, 0x3628, 0x10d0, 0xdc72, 0x152c, 0x5c00, 0x1, 0x1);
        gbc.writeMem(0x5bc3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3628);
        EXPECT(gbc.pc(), 0x5bc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0357
        gbc.setState(0x9bc9, 0x6b6e, 0x300, 0x4706, 0x61f0, 0x4cba, 0x1, 0x1);
        gbc.writeMem(0x9bc9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x6b6e);
        EXPECT(gbc.pc(), 0x9bcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bc9), 0xcb);
        EXPECT(gbc.readMem(0x9bca), 0xa0);
        // CB A0 0358
        gbc.setState(0x8228, 0xc328, 0xc1f0, 0x3bff, 0xc4de, 0xf245, 0x0, 0x0);
        gbc.writeMem(0x8228, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xc328);
        EXPECT(gbc.pc(), 0x822a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8228), 0xcb);
        EXPECT(gbc.readMem(0x8229), 0xa0);
        // CB A0 0359
        gbc.setState(0xddef, 0x8968, 0xd000, 0x4089, 0x662e, 0xf6be, 0x1, 0x0);
        gbc.writeMem(0xddef, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8968);
        EXPECT(gbc.pc(), 0xddf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddef), 0xcb);
        EXPECT(gbc.readMem(0xddf0), 0xa0);
        // CB A0 035A
        gbc.setState(0x8630, 0x327a, 0x5cf0, 0x3002, 0xb5ee, 0xc192, 0x0, 0x0);
        gbc.writeMem(0x8630, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x327a);
        EXPECT(gbc.pc(), 0x8632);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8630), 0xcb);
        EXPECT(gbc.readMem(0x8631), 0xa0);
        // CB A0 035C
        gbc.setState(0xdee8, 0xed67, 0xf740, 0xa0f7, 0x7f42, 0x34c2, 0x1, 0x1);
        gbc.writeMem(0xdee8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xed67);
        EXPECT(gbc.pc(), 0xdeea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdee8), 0xcb);
        EXPECT(gbc.readMem(0xdee9), 0xa0);
        // CB A0 035E
        gbc.setState(0xe938, 0x93d7, 0xcd30, 0x3b99, 0xe1d2, 0x7ad, 0x0, 0x1);
        gbc.writeMem(0xe938, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x93d7);
        EXPECT(gbc.pc(), 0xe93a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe938), 0xcb);
        EXPECT(gbc.readMem(0xe939), 0xa0);
        // CB A0 035F
        gbc.setState(0xe2e0, 0x763f, 0x6180, 0xe28, 0x9cbe, 0xdd62, 0x0, 0x1);
        gbc.writeMem(0xe2e0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x763f);
        EXPECT(gbc.pc(), 0xe2e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2e0), 0xcb);
        EXPECT(gbc.readMem(0xe2e1), 0xa0);
        // CB A0 0360
        gbc.setState(0xc29c, 0x2208, 0xa3f0, 0x8e6b, 0x642b, 0xfcdd, 0x1, 0x1);
        gbc.writeMem(0xc29c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x2208);
        EXPECT(gbc.pc(), 0xc29e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc29c), 0xcb);
        EXPECT(gbc.readMem(0xc29d), 0xa0);
        // CB A0 0361
        gbc.setState(0x74a8, 0x9e45, 0x4920, 0x54d6, 0xf3da, 0x3bc, 0x1, 0x0);
        gbc.writeMem(0x74a8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9e45);
        EXPECT(gbc.pc(), 0x74aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0363
        gbc.setState(0x192a, 0x578b, 0x3250, 0x5afc, 0xf904, 0x429e, 0x0, 0x0);
        gbc.writeMem(0x192a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x578b);
        EXPECT(gbc.pc(), 0x192c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0364
        gbc.setState(0x4bd0, 0xc2cc, 0x8730, 0x487a, 0xf2ba, 0x5bbd, 0x0, 0x0);
        gbc.writeMem(0x4bd0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc2cc);
        EXPECT(gbc.pc(), 0x4bd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0365
        gbc.setState(0xd4f4, 0x808d, 0xec50, 0x8ca9, 0x4a0f, 0x42b, 0x0, 0x0);
        gbc.writeMem(0xd4f4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x808d);
        EXPECT(gbc.pc(), 0xd4f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4f4), 0xcb);
        EXPECT(gbc.readMem(0xd4f5), 0xa0);
        // CB A0 0366
        gbc.setState(0x7feb, 0x4c57, 0x75b0, 0x4ddd, 0x1372, 0xb60f, 0x1, 0x1);
        gbc.writeMem(0x7feb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x4c57);
        EXPECT(gbc.pc(), 0x7fed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0367
        gbc.setState(0x133e, 0x6367, 0x81a0, 0x947f, 0x226b, 0x44e0, 0x0, 0x0);
        gbc.writeMem(0x133e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6367);
        EXPECT(gbc.pc(), 0x1340);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0368
        gbc.setState(0x1cb5, 0x138e, 0xc410, 0x1746, 0x1bc2, 0x264d, 0x1, 0x1);
        gbc.writeMem(0x1cb5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x138e);
        EXPECT(gbc.pc(), 0x1cb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0369
        gbc.setState(0x4bd, 0xd28b, 0x1de0, 0x3f0b, 0xc22a, 0x66ce, 0x1, 0x0);
        gbc.writeMem(0x4bd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xd28b);
        EXPECT(gbc.pc(), 0x4bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 036A
        gbc.setState(0x2a2d, 0xbc87, 0x69d0, 0x829f, 0xea6, 0x2f9c, 0x1, 0x0);
        gbc.writeMem(0x2a2d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xbc87);
        EXPECT(gbc.pc(), 0x2a2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 036B
        gbc.setState(0x82b7, 0x843d, 0x4cd0, 0x2917, 0xe79b, 0xfe9b, 0x1, 0x1);
        gbc.writeMem(0x82b7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x843d);
        EXPECT(gbc.pc(), 0x82b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82b7), 0xcb);
        EXPECT(gbc.readMem(0x82b8), 0xa0);
        // CB A0 036C
        gbc.setState(0x1540, 0x8ff7, 0x50d0, 0xbe76, 0x2c5e, 0xf083, 0x1, 0x1);
        gbc.writeMem(0x1540, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8ff7);
        EXPECT(gbc.pc(), 0x1542);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 036D
        gbc.setState(0x7888, 0xa61d, 0xdad0, 0xc80a, 0xfb25, 0x8d70, 0x0, 0x0);
        gbc.writeMem(0x7888, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa61d);
        EXPECT(gbc.pc(), 0x788a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 036F
        gbc.setState(0xec14, 0xdaac, 0x5da0, 0x5029, 0x5204, 0xcf60, 0x1, 0x1);
        gbc.writeMem(0xec14, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xdaac);
        EXPECT(gbc.pc(), 0xec16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec14), 0xcb);
        EXPECT(gbc.readMem(0xec15), 0xa0);
        // CB A0 0370
        gbc.setState(0x45cb, 0x830a, 0x51e0, 0xea62, 0xac7a, 0xeeba, 0x1, 0x0);
        gbc.writeMem(0x45cb, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x830a);
        EXPECT(gbc.pc(), 0x45cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0371
        gbc.setState(0xdf6b, 0x66e4, 0x69c0, 0x3e60, 0xe163, 0xbe62, 0x0, 0x0);
        gbc.writeMem(0xdf6b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x66e4);
        EXPECT(gbc.pc(), 0xdf6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf6b), 0xcb);
        EXPECT(gbc.readMem(0xdf6c), 0xa0);
        // CB A0 0372
        gbc.setState(0x32fa, 0xfdd, 0x4f10, 0x16e6, 0x10d1, 0x59f6, 0x1, 0x1);
        gbc.writeMem(0x32fa, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xfdd);
        EXPECT(gbc.pc(), 0x32fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0373
        gbc.setState(0xc21f, 0x3764, 0xca90, 0xeb89, 0x8365, 0x53c9, 0x0, 0x0);
        gbc.writeMem(0xc21f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3764);
        EXPECT(gbc.pc(), 0xc221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc21f), 0xcb);
        EXPECT(gbc.readMem(0xc220), 0xa0);
        // CB A0 0374
        gbc.setState(0x43d5, 0x16b, 0xd1d0, 0xc909, 0x8f6d, 0x8d5, 0x1, 0x0);
        gbc.writeMem(0x43d5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x16b);
        EXPECT(gbc.pc(), 0x43d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0375
        gbc.setState(0xdc0d, 0xd8f0, 0x7a0, 0xb934, 0x3307, 0x6701, 0x0, 0x1);
        gbc.writeMem(0xdc0d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd8f0);
        EXPECT(gbc.pc(), 0xdc0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc0d), 0xcb);
        EXPECT(gbc.readMem(0xdc0e), 0xa0);
        // CB A0 0376
        gbc.setState(0x516d, 0xf654, 0x9640, 0xd972, 0x90dc, 0x22bd, 0x0, 0x0);
        gbc.writeMem(0x516d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf654);
        EXPECT(gbc.pc(), 0x516f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0377
        gbc.setState(0x93df, 0xaa1d, 0xa640, 0xcf25, 0xfca7, 0x4a7a, 0x0, 0x1);
        gbc.writeMem(0x93df, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xaa1d);
        EXPECT(gbc.pc(), 0x93e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93df), 0xcb);
        EXPECT(gbc.readMem(0x93e0), 0xa0);
        // CB A0 0378
        gbc.setState(0xdf95, 0x8a31, 0xc5b0, 0xc6a8, 0xc3bf, 0xa3ee, 0x0, 0x0);
        gbc.writeMem(0xdf95, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x8a31);
        EXPECT(gbc.pc(), 0xdf97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf95), 0xcb);
        EXPECT(gbc.readMem(0xdf96), 0xa0);
        // CB A0 0379
        gbc.setState(0x42a8, 0xb5e0, 0x4970, 0x7160, 0x2dc9, 0xee8c, 0x1, 0x0);
        gbc.writeMem(0x42a8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xb5e0);
        EXPECT(gbc.pc(), 0x42aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 037A
        gbc.setState(0xe873, 0x413d, 0x3340, 0x684e, 0xe47b, 0x988, 0x0, 0x1);
        gbc.writeMem(0xe873, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x413d);
        EXPECT(gbc.pc(), 0xe875);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe873), 0xcb);
        EXPECT(gbc.readMem(0xe874), 0xa0);
        // CB A0 037B
        gbc.setState(0x154c, 0xb063, 0xf830, 0x9c6f, 0x4b13, 0x73e, 0x1, 0x1);
        gbc.writeMem(0x154c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb063);
        EXPECT(gbc.pc(), 0x154e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 037C
        gbc.setState(0x196e, 0xe9a7, 0xf630, 0xd55, 0xe696, 0xbd0e, 0x0, 0x0);
        gbc.writeMem(0x196e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe9a7);
        EXPECT(gbc.pc(), 0x1970);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 037D
        gbc.setState(0x4dad, 0x6366, 0x52f0, 0xb2b5, 0xce4f, 0xfd13, 0x1, 0x1);
        gbc.writeMem(0x4dad, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6366);
        EXPECT(gbc.pc(), 0x4daf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 037E
        gbc.setState(0x4410, 0x1d22, 0xd6a0, 0x216d, 0xd562, 0xb7d, 0x1, 0x0);
        gbc.writeMem(0x4410, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x1d22);
        EXPECT(gbc.pc(), 0x4412);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 037F
        gbc.setState(0x963e, 0x6d6e, 0xce50, 0xff36, 0xaff5, 0x443, 0x1, 0x0);
        gbc.writeMem(0x963e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x6d6e);
        EXPECT(gbc.pc(), 0x9640);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x963e), 0xcb);
        EXPECT(gbc.readMem(0x963f), 0xa0);
        // CB A0 0380
        gbc.setState(0x7984, 0x4b43, 0xe340, 0x81f4, 0x57e7, 0xfdb7, 0x0, 0x0);
        gbc.writeMem(0x7984, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x4b43);
        EXPECT(gbc.pc(), 0x7986);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0381
        gbc.setState(0x9979, 0x83bb, 0x4bc0, 0x5b1b, 0x9451, 0x42ec, 0x0, 0x0);
        gbc.writeMem(0x9979, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x83bb);
        EXPECT(gbc.pc(), 0x997b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9979), 0xcb);
        EXPECT(gbc.readMem(0x997a), 0xa0);
        // CB A0 0382
        gbc.setState(0x84a5, 0x1db9, 0xb80, 0xd436, 0xf0ad, 0x3509, 0x0, 0x0);
        gbc.writeMem(0x84a5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x1db9);
        EXPECT(gbc.pc(), 0x84a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84a5), 0xcb);
        EXPECT(gbc.readMem(0x84a6), 0xa0);
        // CB A0 0383
        gbc.setState(0x53, 0x9588, 0xe940, 0x954f, 0x52f6, 0x5922, 0x1, 0x0);
        gbc.writeMem(0x53, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x9588);
        EXPECT(gbc.pc(), 0x55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0384
        gbc.setState(0xe2ac, 0xbd3e, 0x2520, 0xfc65, 0xecdb, 0xb4f1, 0x1, 0x0);
        gbc.writeMem(0xe2ac, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xbd3e);
        EXPECT(gbc.pc(), 0xe2ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2ac), 0xcb);
        EXPECT(gbc.readMem(0xe2ad), 0xa0);
        // CB A0 0385
        gbc.setState(0x3e04, 0x9364, 0x86b0, 0xb72c, 0xb3aa, 0xcb1, 0x0, 0x0);
        gbc.writeMem(0x3e04, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9364);
        EXPECT(gbc.pc(), 0x3e06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0386
        gbc.setState(0xb05c, 0x8fd9, 0xadf0, 0x9bb2, 0xc71, 0xc862, 0x0, 0x1);
        gbc.writeMem(0xb05c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x8fd9);
        EXPECT(gbc.pc(), 0xb05e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb05c), 0xcb);
        EXPECT(gbc.readMem(0xb05d), 0xa0);
        // CB A0 0387
        gbc.setState(0x185, 0x1f48, 0xc720, 0x61ae, 0x3aed, 0xe662, 0x1, 0x1);
        gbc.writeMem(0x185, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1f48);
        EXPECT(gbc.pc(), 0x187);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0388
        gbc.setState(0x772, 0xbb6c, 0xe30, 0xb075, 0x4a7c, 0xbcda, 0x0, 0x0);
        gbc.writeMem(0x772, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xbb6c);
        EXPECT(gbc.pc(), 0x774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0389
        gbc.setState(0x9382, 0x5334, 0xe090, 0xb02a, 0xdcb2, 0x9d5b, 0x1, 0x1);
        gbc.writeMem(0x9382, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x5334);
        EXPECT(gbc.pc(), 0x9384);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9382), 0xcb);
        EXPECT(gbc.readMem(0x9383), 0xa0);
        // CB A0 038A
        gbc.setState(0xd30, 0x4c39, 0xcfc0, 0x6082, 0xd7c2, 0x3b91, 0x0, 0x0);
        gbc.writeMem(0xd30, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x4c39);
        EXPECT(gbc.pc(), 0xd32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 038B
        gbc.setState(0xb114, 0xdc95, 0x8d70, 0x6829, 0xd7f7, 0x5937, 0x0, 0x0);
        gbc.writeMem(0xb114, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xdc95);
        EXPECT(gbc.pc(), 0xb116);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb114), 0xcb);
        EXPECT(gbc.readMem(0xb115), 0xa0);
        // CB A0 038C
        gbc.setState(0xa171, 0xdcd8, 0x4cf0, 0x4035, 0xfc89, 0x12ae, 0x0, 0x1);
        gbc.writeMem(0xa171, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xdcd8);
        EXPECT(gbc.pc(), 0xa173);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa171), 0xcb);
        EXPECT(gbc.readMem(0xa172), 0xa0);
        // CB A0 038D
        gbc.setState(0x6e41, 0x5384, 0x2370, 0x1d16, 0xc1b8, 0x56fe, 0x0, 0x1);
        gbc.writeMem(0x6e41, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x5384);
        EXPECT(gbc.pc(), 0x6e43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 038E
        gbc.setState(0xe3f1, 0x87b1, 0x9b80, 0x78c5, 0x3a98, 0x23b4, 0x1, 0x1);
        gbc.writeMem(0xe3f1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x87b1);
        EXPECT(gbc.pc(), 0xe3f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3f1), 0xcb);
        EXPECT(gbc.readMem(0xe3f2), 0xa0);
        // CB A0 038F
        gbc.setState(0x36c0, 0x267a, 0x95e0, 0x9820, 0x8640, 0x3083, 0x0, 0x1);
        gbc.writeMem(0x36c0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x267a);
        EXPECT(gbc.pc(), 0x36c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0390
        gbc.setState(0xe711, 0xe2d6, 0xe230, 0x6422, 0x2fdc, 0xe38c, 0x0, 0x0);
        gbc.writeMem(0xe711, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xe2d6);
        EXPECT(gbc.pc(), 0xe713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe711), 0xcb);
        EXPECT(gbc.readMem(0xe712), 0xa0);
        // CB A0 0391
        gbc.setState(0xa685, 0x48d2, 0xa250, 0xb009, 0x8fa2, 0xa3a5, 0x0, 0x1);
        gbc.writeMem(0xa685, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x48d2);
        EXPECT(gbc.pc(), 0xa687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa685), 0xcb);
        EXPECT(gbc.readMem(0xa686), 0xa0);
        // CB A0 0393
        gbc.setState(0x1fcf, 0x18e, 0xee30, 0x3454, 0x832b, 0x30be, 0x0, 0x0);
        gbc.writeMem(0x1fcf, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x18e);
        EXPECT(gbc.pc(), 0x1fd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0394
        gbc.setState(0x3a0d, 0x7a81, 0xf3f0, 0x1a7d, 0xf039, 0x8319, 0x1, 0x1);
        gbc.writeMem(0x3a0d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x7a81);
        EXPECT(gbc.pc(), 0x3a0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0395
        gbc.setState(0xdd48, 0xb435, 0x1c70, 0x763f, 0x21d3, 0x2aee, 0x1, 0x1);
        gbc.writeMem(0xdd48, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xb435);
        EXPECT(gbc.pc(), 0xdd4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd48), 0xcb);
        EXPECT(gbc.readMem(0xdd49), 0xa0);
        // CB A0 0396
        gbc.setState(0xa498, 0x29f4, 0x38a0, 0x825c, 0x4231, 0x76a7, 0x0, 0x0);
        gbc.writeMem(0xa498, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x29f4);
        EXPECT(gbc.pc(), 0xa49a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa498), 0xcb);
        EXPECT(gbc.readMem(0xa499), 0xa0);
        // CB A0 0397
        gbc.setState(0x5696, 0x5b0, 0x3cd0, 0x196f, 0xbb29, 0xf015, 0x0, 0x1);
        gbc.writeMem(0x5696, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5b0);
        EXPECT(gbc.pc(), 0x5698);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 0398
        gbc.setState(0x6846, 0xf8a, 0xbb40, 0xd22b, 0x4137, 0x6dd9, 0x1, 0x0);
        gbc.writeMem(0x6846, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf8a);
        EXPECT(gbc.pc(), 0x6848);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 0399
        gbc.setState(0xe7da, 0xd0e6, 0x3af0, 0xcb1b, 0x72f8, 0xfa20, 0x1, 0x0);
        gbc.writeMem(0xe7da, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd0e6);
        EXPECT(gbc.pc(), 0xe7dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7da), 0xcb);
        EXPECT(gbc.readMem(0xe7db), 0xa0);
        // CB A0 039A
        gbc.setState(0x6b, 0x360c, 0xa690, 0x3fd0, 0x1c4, 0x7fc6, 0x0, 0x1);
        gbc.writeMem(0x6b, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x360c);
        EXPECT(gbc.pc(), 0x6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 039B
        gbc.setState(0x8004, 0xbacf, 0x99f0, 0xad69, 0x882c, 0x5e29, 0x1, 0x1);
        gbc.writeMem(0x8004, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xbacf);
        EXPECT(gbc.pc(), 0x8006);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8004), 0xcb);
        EXPECT(gbc.readMem(0x8005), 0xa0);
        // CB A0 039C
        gbc.setState(0x5d28, 0xaf2c, 0xa150, 0xe906, 0xca3d, 0x540e, 0x0, 0x1);
        gbc.writeMem(0x5d28, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xaf2c);
        EXPECT(gbc.pc(), 0x5d2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 039D
        gbc.setState(0x744c, 0x2677, 0xb440, 0x5881, 0xd2e, 0x4929, 0x1, 0x1);
        gbc.writeMem(0x744c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2677);
        EXPECT(gbc.pc(), 0x744e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 039E
        gbc.setState(0x69d2, 0x1116, 0xf090, 0xf3a5, 0x34f2, 0x71f1, 0x0, 0x1);
        gbc.writeMem(0x69d2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1116);
        EXPECT(gbc.pc(), 0x69d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 039F
        gbc.setState(0x6c05, 0x51d9, 0x8d80, 0xdab8, 0xb832, 0xf336, 0x0, 0x0);
        gbc.writeMem(0x6c05, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x51d9);
        EXPECT(gbc.pc(), 0x6c07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 03A0
        gbc.setState(0xa72a, 0xbbbc, 0x2c50, 0x3a22, 0xeb86, 0xefcd, 0x0, 0x1);
        gbc.writeMem(0xa72a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xbbbc);
        EXPECT(gbc.pc(), 0xa72c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa72a), 0xcb);
        EXPECT(gbc.readMem(0xa72b), 0xa0);
        // CB A0 03A1
        gbc.setState(0x5ff6, 0xdd26, 0x100, 0x11fd, 0x4d89, 0x3149, 0x0, 0x1);
        gbc.writeMem(0x5ff6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xdd26);
        EXPECT(gbc.pc(), 0x5ff8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 03A2
        gbc.setState(0x58a5, 0x5c3b, 0x95a0, 0x4f95, 0xfe8, 0x2b01, 0x0, 0x0);
        gbc.writeMem(0x58a5, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5c3b);
        EXPECT(gbc.pc(), 0x58a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 03A3
        gbc.setState(0xcfad, 0xa432, 0xbbc0, 0xa22b, 0x378a, 0x96c7, 0x1, 0x1);
        gbc.writeMem(0xcfad, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa432);
        EXPECT(gbc.pc(), 0xcfaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfad), 0xcb);
        EXPECT(gbc.readMem(0xcfae), 0xa0);
        // CB A0 03A4
        gbc.setState(0x8e9a, 0x2255, 0x47b0, 0x9c3e, 0x42ed, 0x5a70, 0x0, 0x0);
        gbc.writeMem(0x8e9a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2255);
        EXPECT(gbc.pc(), 0x8e9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e9a), 0xcb);
        EXPECT(gbc.readMem(0x8e9b), 0xa0);
        // CB A0 03A5
        gbc.setState(0x2849, 0xc26, 0x55d0, 0xcf9f, 0xbef8, 0x1d40, 0x0, 0x0);
        gbc.writeMem(0x2849, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc26);
        EXPECT(gbc.pc(), 0x284b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 03A6
        gbc.setState(0xe8d7, 0xb46a, 0x2950, 0xed9c, 0x6223, 0xa364, 0x1, 0x0);
        gbc.writeMem(0xe8d7, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xb46a);
        EXPECT(gbc.pc(), 0xe8d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8d7), 0xcb);
        EXPECT(gbc.readMem(0xe8d8), 0xa0);
        // CB A0 03A7
        gbc.setState(0xc894, 0x24f8, 0x81b0, 0x35a2, 0x99ab, 0x187c, 0x1, 0x1);
        gbc.writeMem(0xc894, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x24f8);
        EXPECT(gbc.pc(), 0xc896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc894), 0xcb);
        EXPECT(gbc.readMem(0xc895), 0xa0);
        // CB A0 03A8
        gbc.setState(0x6761, 0x974a, 0xcf70, 0xc638, 0x1bc5, 0x5451, 0x0, 0x1);
        gbc.writeMem(0x6761, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x974a);
        EXPECT(gbc.pc(), 0x6763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 03A9
        gbc.setState(0x3f7d, 0xd76b, 0x1130, 0xa0a5, 0x24cd, 0x2ded, 0x1, 0x1);
        gbc.writeMem(0x3f7d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd76b);
        EXPECT(gbc.pc(), 0x3f7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 03AA
        gbc.setState(0x54d8, 0x7ec3, 0xfca0, 0x8b36, 0xbc90, 0xb93d, 0x0, 0x1);
        gbc.writeMem(0x54d8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x7ec3);
        EXPECT(gbc.pc(), 0x54da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 03AB
        gbc.setState(0x9116, 0xb15b, 0x6b30, 0xcf62, 0x7b3d, 0xf0a8, 0x1, 0x1);
        gbc.writeMem(0x9116, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb15b);
        EXPECT(gbc.pc(), 0x9118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9116), 0xcb);
        EXPECT(gbc.readMem(0x9117), 0xa0);
        // CB A0 03AC
        gbc.setState(0xc526, 0x32cf, 0x930, 0xa342, 0xb543, 0xb147, 0x1, 0x0);
        gbc.writeMem(0xc526, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x32cf);
        EXPECT(gbc.pc(), 0xc528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc526), 0xcb);
        EXPECT(gbc.readMem(0xc527), 0xa0);
        // CB A0 03AD
        gbc.setState(0xbb36, 0xd9ac, 0xbe90, 0x1e33, 0x41fb, 0xca51, 0x1, 0x0);
        gbc.writeMem(0xbb36, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd9ac);
        EXPECT(gbc.pc(), 0xbb38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb36), 0xcb);
        EXPECT(gbc.readMem(0xbb37), 0xa0);
        // CB A0 03AE
        gbc.setState(0xabf3, 0xcb3c, 0x1a00, 0x368b, 0xd7ac, 0x84ca, 0x0, 0x0);
        gbc.writeMem(0xabf3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xcb3c);
        EXPECT(gbc.pc(), 0xabf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabf3), 0xcb);
        EXPECT(gbc.readMem(0xabf4), 0xa0);
        // CB A0 03AF
        gbc.setState(0x9686, 0x8f61, 0x59e0, 0xa0e4, 0x3e5a, 0x31f0, 0x1, 0x1);
        gbc.writeMem(0x9686, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8f61);
        EXPECT(gbc.pc(), 0x9688);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9686), 0xcb);
        EXPECT(gbc.readMem(0x9687), 0xa0);
        // CB A0 03B0
        gbc.setState(0x274f, 0x3fca, 0xd040, 0xfd66, 0xad08, 0x41e6, 0x1, 0x0);
        gbc.writeMem(0x274f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3fca);
        EXPECT(gbc.pc(), 0x2751);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 03B1
        gbc.setState(0xa1f0, 0x5250, 0xb180, 0x5193, 0x6139, 0xc734, 0x0, 0x1);
        gbc.writeMem(0xa1f0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x5250);
        EXPECT(gbc.pc(), 0xa1f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1f0), 0xcb);
        EXPECT(gbc.readMem(0xa1f1), 0xa0);
        // CB A0 03B2
        gbc.setState(0x5448, 0x4047, 0xe40, 0x7646, 0xd8e0, 0xc9ab, 0x0, 0x1);
        gbc.writeMem(0x5448, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4047);
        EXPECT(gbc.pc(), 0x544a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 03B5
        gbc.setState(0xc8f2, 0x1cde, 0x9b0, 0x918, 0xf9cb, 0xef6, 0x1, 0x1);
        gbc.writeMem(0xc8f2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x1cde);
        EXPECT(gbc.pc(), 0xc8f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8f2), 0xcb);
        EXPECT(gbc.readMem(0xc8f3), 0xa0);
        // CB A0 03B6
        gbc.setState(0x2525, 0x1a60, 0x8830, 0x3541, 0x66be, 0x6281, 0x0, 0x1);
        gbc.writeMem(0x2525, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1a60);
        EXPECT(gbc.pc(), 0x2527);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 03B7
        gbc.setState(0x3129, 0x5d8d, 0xa2f0, 0x21f, 0xbf79, 0x925e, 0x1, 0x1);
        gbc.writeMem(0x3129, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5d8d);
        EXPECT(gbc.pc(), 0x312b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 03B8
        gbc.setState(0x2a68, 0x34b8, 0xa690, 0xf9a9, 0x2869, 0xedc, 0x0, 0x1);
        gbc.writeMem(0x2a68, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x34b8);
        EXPECT(gbc.pc(), 0x2a6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 03B9
        gbc.setState(0x3cf9, 0xa9e2, 0xc910, 0x3a2b, 0x344e, 0x1ce7, 0x0, 0x0);
        gbc.writeMem(0x3cf9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa9e2);
        EXPECT(gbc.pc(), 0x3cfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 03BA
        gbc.setState(0x9466, 0x5df, 0xd220, 0x559, 0x6019, 0x4832, 0x0, 0x0);
        gbc.writeMem(0x9466, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5df);
        EXPECT(gbc.pc(), 0x9468);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9466), 0xcb);
        EXPECT(gbc.readMem(0x9467), 0xa0);
        // CB A0 03BB
        gbc.setState(0x5196, 0xbb44, 0x53d0, 0xd6ab, 0xc83a, 0x9a22, 0x0, 0x1);
        gbc.writeMem(0x5196, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xbb44);
        EXPECT(gbc.pc(), 0x5198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 03BC
        gbc.setState(0x8418, 0x3951, 0x7c70, 0x227f, 0xcbb5, 0x3c66, 0x1, 0x0);
        gbc.writeMem(0x8418, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3951);
        EXPECT(gbc.pc(), 0x841a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8418), 0xcb);
        EXPECT(gbc.readMem(0x8419), 0xa0);
        // CB A0 03BD
        gbc.setState(0xa800, 0x28bf, 0x1ac0, 0xa419, 0xeef4, 0xce2c, 0x0, 0x1);
        gbc.writeMem(0xa800, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x28bf);
        EXPECT(gbc.pc(), 0xa802);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa800), 0xcb);
        EXPECT(gbc.readMem(0xa801), 0xa0);
        // CB A0 03BE
        gbc.setState(0x5788, 0x313d, 0x8720, 0x44f5, 0xd495, 0x5417, 0x1, 0x1);
        gbc.writeMem(0x5788, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x313d);
        EXPECT(gbc.pc(), 0x578a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 03BF
        gbc.setState(0xccd3, 0x64c1, 0x42d0, 0xad6d, 0xb785, 0x8ed5, 0x0, 0x0);
        gbc.writeMem(0xccd3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x64c1);
        EXPECT(gbc.pc(), 0xccd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccd3), 0xcb);
        EXPECT(gbc.readMem(0xccd4), 0xa0);
        // CB A0 03C0
        gbc.setState(0x275a, 0x548c, 0xb4b0, 0xe0a4, 0xa93b, 0x9d6e, 0x0, 0x1);
        gbc.writeMem(0x275a, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x548c);
        EXPECT(gbc.pc(), 0x275c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 03C1
        gbc.setState(0x2799, 0x7316, 0xb790, 0x7d2e, 0x551a, 0xb3dc, 0x1, 0x1);
        gbc.writeMem(0x2799, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7316);
        EXPECT(gbc.pc(), 0x279b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 03C2
        gbc.setState(0x2123, 0xdc53, 0xa040, 0x2014, 0xdfcb, 0x64a4, 0x1, 0x0);
        gbc.writeMem(0x2123, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xdc53);
        EXPECT(gbc.pc(), 0x2125);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 03C3
        gbc.setState(0x3567, 0x75cc, 0x4cb0, 0x1650, 0x8321, 0x89e8, 0x1, 0x0);
        gbc.writeMem(0x3567, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x75cc);
        EXPECT(gbc.pc(), 0x3569);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 03C4
        gbc.setState(0x5848, 0xef92, 0x4050, 0xc21b, 0x578c, 0x176b, 0x1, 0x0);
        gbc.writeMem(0x5848, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xef92);
        EXPECT(gbc.pc(), 0x584a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 03C5
        gbc.setState(0xc9a8, 0x4744, 0x5a00, 0xe4f1, 0x3d78, 0x5fa, 0x1, 0x0);
        gbc.writeMem(0xc9a8, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4744);
        EXPECT(gbc.pc(), 0xc9aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9a8), 0xcb);
        EXPECT(gbc.readMem(0xc9a9), 0xa0);
        // CB A0 03C7
        gbc.setState(0x21d4, 0xb6e1, 0xcfc0, 0x27e6, 0xc72, 0xcc7, 0x1, 0x0);
        gbc.writeMem(0x21d4, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb6e1);
        EXPECT(gbc.pc(), 0x21d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 03C8
        gbc.setState(0xa888, 0xdbe6, 0xcba0, 0x8697, 0x2be0, 0x53c7, 0x1, 0x1);
        gbc.writeMem(0xa888, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xdbe6);
        EXPECT(gbc.pc(), 0xa88a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa888), 0xcb);
        EXPECT(gbc.readMem(0xa889), 0xa0);
        // CB A0 03C9
        gbc.setState(0x26f9, 0x3a9d, 0x1600, 0xfbfc, 0x81ba, 0x4b37, 0x0, 0x1);
        gbc.writeMem(0x26f9, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x3a9d);
        EXPECT(gbc.pc(), 0x26fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 03CA
        gbc.setState(0x5f8c, 0x48ae, 0x22b0, 0x7594, 0xf0ce, 0xf555, 0x1, 0x1);
        gbc.writeMem(0x5f8c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x48ae);
        EXPECT(gbc.pc(), 0x5f8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 03CB
        gbc.setState(0xecf2, 0xf486, 0x970, 0x5386, 0x8a32, 0xa679, 0x0, 0x0);
        gbc.writeMem(0xecf2, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf486);
        EXPECT(gbc.pc(), 0xecf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecf2), 0xcb);
        EXPECT(gbc.readMem(0xecf3), 0xa0);
        // CB A0 03CC
        gbc.setState(0x8723, 0x67ce, 0xdbb0, 0x597, 0x252f, 0x7179, 0x1, 0x0);
        gbc.writeMem(0x8723, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x67ce);
        EXPECT(gbc.pc(), 0x8725);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8723), 0xcb);
        EXPECT(gbc.readMem(0x8724), 0xa0);
        // CB A0 03CD
        gbc.setState(0x7f29, 0x389a, 0x9d80, 0xb118, 0xc3a5, 0xe76f, 0x0, 0x1);
        gbc.writeMem(0x7f29, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x389a);
        EXPECT(gbc.pc(), 0x7f2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 03CE
        gbc.setState(0x34a1, 0x3d9e, 0x87a0, 0x7e3f, 0xaf12, 0xc01, 0x0, 0x0);
        gbc.writeMem(0x34a1, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x3d9e);
        EXPECT(gbc.pc(), 0x34a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 03CF
        gbc.setState(0x5617, 0x5780, 0xe20, 0x4a49, 0x77a7, 0xee90, 0x0, 0x1);
        gbc.writeMem(0x5617, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5780);
        EXPECT(gbc.pc(), 0x5619);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 03D0
        gbc.setState(0xac3e, 0xcb8e, 0x7740, 0x9455, 0xa8a6, 0x913, 0x1, 0x1);
        gbc.writeMem(0xac3e, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xcb8e);
        EXPECT(gbc.pc(), 0xac40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac3e), 0xcb);
        EXPECT(gbc.readMem(0xac3f), 0xa0);
        // CB A0 03D1
        gbc.setState(0xd3fd, 0x55b1, 0x78f0, 0x9636, 0xfc0a, 0x6cea, 0x1, 0x1);
        gbc.writeMem(0xd3fd, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x55b1);
        EXPECT(gbc.pc(), 0xd3ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3fd), 0xcb);
        EXPECT(gbc.readMem(0xd3fe), 0xa0);
        // CB A0 03D2
        gbc.setState(0x6ad0, 0xc1a0, 0xc610, 0xc23c, 0x200d, 0xf2aa, 0x1, 0x1);
        gbc.writeMem(0x6ad0, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc1a0);
        EXPECT(gbc.pc(), 0x6ad2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 03D3
        gbc.setState(0x4525, 0xa9aa, 0x5750, 0xdf36, 0xfc00, 0x230e, 0x1, 0x0);
        gbc.writeMem(0x4525, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xa9aa);
        EXPECT(gbc.pc(), 0x4527);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 03D4
        gbc.setState(0x4916, 0x19d0, 0x810, 0x3a17, 0x8ead, 0xddfd, 0x1, 0x1);
        gbc.writeMem(0x4916, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x19d0);
        EXPECT(gbc.pc(), 0x4918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 03D5
        gbc.setState(0x1f7c, 0x8096, 0x350, 0xaa0b, 0xf513, 0xf305, 0x0, 0x0);
        gbc.writeMem(0x1f7c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8096);
        EXPECT(gbc.pc(), 0x1f7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 03D6
        gbc.setState(0xbad6, 0xf75c, 0xbaf0, 0x6ad4, 0x7d19, 0x216a, 0x0, 0x1);
        gbc.writeMem(0xbad6, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xf75c);
        EXPECT(gbc.pc(), 0xbad8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad6), 0xcb);
        EXPECT(gbc.readMem(0xbad7), 0xa0);
        // CB A0 03D7
        gbc.setState(0x7a1f, 0xf046, 0xe8d0, 0x38e8, 0xaf78, 0xc1b8, 0x0, 0x1);
        gbc.writeMem(0x7a1f, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf046);
        EXPECT(gbc.pc(), 0x7a21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 03D8
        gbc.setState(0x3946, 0x690a, 0x1460, 0x98e8, 0xa5c, 0x5c5b, 0x1, 0x1);
        gbc.writeMem(0x3946, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x690a);
        EXPECT(gbc.pc(), 0x3948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 03D9
        gbc.setState(0x9d72, 0x58d2, 0xec20, 0xc39, 0x5dd3, 0xfcdc, 0x1, 0x1);
        gbc.writeMem(0x9d72, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x58d2);
        EXPECT(gbc.pc(), 0x9d74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d72), 0xcb);
        EXPECT(gbc.readMem(0x9d73), 0xa0);
        // CB A0 03DA
        gbc.setState(0xbc1d, 0x14b4, 0xf0a0, 0xa668, 0x4d5e, 0x9eb8, 0x1, 0x0);
        gbc.writeMem(0xbc1d, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x14b4);
        EXPECT(gbc.pc(), 0xbc1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc1d), 0xcb);
        EXPECT(gbc.readMem(0xbc1e), 0xa0);
        // CB A0 03DB
        gbc.setState(0x9b74, 0xf407, 0xff00, 0xec49, 0x1236, 0x3b68, 0x1, 0x0);
        gbc.writeMem(0x9b74, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf407);
        EXPECT(gbc.pc(), 0x9b76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b74), 0xcb);
        EXPECT(gbc.readMem(0x9b75), 0xa0);
        // CB A0 03DC
        gbc.setState(0xebaa, 0x521, 0xc040, 0x8347, 0xfa16, 0x2737, 0x0, 0x0);
        gbc.writeMem(0xebaa, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x521);
        EXPECT(gbc.pc(), 0xebac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebaa), 0xcb);
        EXPECT(gbc.readMem(0xebab), 0xa0);
        // CB A0 03DD
        gbc.setState(0x9c0c, 0x924c, 0x94d0, 0x2fa6, 0x40b1, 0xb848, 0x0, 0x0);
        gbc.writeMem(0x9c0c, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x924c);
        EXPECT(gbc.pc(), 0x9c0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c0c), 0xcb);
        EXPECT(gbc.readMem(0x9c0d), 0xa0);
        // CB A0 03DE
        gbc.setState(0x2983, 0xc7ff, 0xc970, 0x859b, 0xc7bd, 0x753d, 0x0, 0x0);
        gbc.writeMem(0x2983, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc7ff);
        EXPECT(gbc.pc(), 0x2985);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB A0 03DF
        gbc.setState(0x5437, 0xbb87, 0x5dd0, 0xb0c1, 0xa87e, 0x17d5, 0x1, 0x1);
        gbc.writeMem(0x5437, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xbb87);
        EXPECT(gbc.pc(), 0x5439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 03E1
        gbc.setState(0xefac, 0xd81b, 0xad20, 0xb888, 0x2d12, 0x7d03, 0x1, 0x0);
        gbc.writeMem(0xefac, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd81b);
        EXPECT(gbc.pc(), 0xefae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefac), 0xcb);
        EXPECT(gbc.readMem(0xefad), 0xa0);
        // CB A0 03E2
        gbc.setState(0x912, 0xcb05, 0x9510, 0xc71f, 0x5771, 0xc8cf, 0x0, 0x1);
        gbc.writeMem(0x912, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xcb05);
        EXPECT(gbc.pc(), 0x914);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB A0 03E3
        gbc.setState(0x20fa, 0xa910, 0x37c0, 0x23f4, 0x90ef, 0xc920, 0x1, 0x0);
        gbc.writeMem(0x20fa, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa910);
        EXPECT(gbc.pc(), 0x20fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB A0 03E4
        gbc.setState(0x3131, 0xc99b, 0xc420, 0x4c01, 0x37bd, 0x83e7, 0x1, 0x1);
        gbc.writeMem(0x3131, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc99b);
        EXPECT(gbc.pc(), 0x3133);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB A0 03E5
        gbc.setState(0x8f78, 0xb4fe, 0x1850, 0xfbf9, 0x7aae, 0xd4f9, 0x0, 0x0);
        gbc.writeMem(0x8f78, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb4fe);
        EXPECT(gbc.pc(), 0x8f7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f78), 0xcb);
        EXPECT(gbc.readMem(0x8f79), 0xa0);
        // CB A0 03E6
        gbc.setState(0x9778, 0x5792, 0x1500, 0x564c, 0x93b5, 0x8cd8, 0x1, 0x0);
        gbc.writeMem(0x9778, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5792);
        EXPECT(gbc.pc(), 0x977a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9778), 0xcb);
        EXPECT(gbc.readMem(0x9779), 0xa0);
        // CB A0 03E7
        gbc.setState(0x62d3, 0xf0c4, 0xc320, 0x3d58, 0x4a27, 0x5202, 0x1, 0x0);
        gbc.writeMem(0x62d3, { 0xcb, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xf0c4);
        EXPECT(gbc.pc(), 0x62d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
}
#endif
