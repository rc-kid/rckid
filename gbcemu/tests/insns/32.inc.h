    TEST(gbcemu, opcode_32) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 32 0000
        gbc.setState(0xace0, 0x7a15, 0x97c0, 0x38ee, 0x578f, 0x98fe, 0x1, 0x0);
        gbc.writeMem(0x98fe, { 0x0 });
        gbc.writeMem(0xace0, { 0x32 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7a15, gbc.sp());
        EXPECT(0xace1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x98fe));
        EXPECT(0x32, gbc.readMem(0xace0));
        // 32 0003
        gbc.setState(0x5bef, 0x945f, 0x3480, 0xb918, 0x6c49, 0x9f16, 0x0, 0x1);
        gbc.writeMem(0x5bef, { 0x32 });
        gbc.writeMem(0x9f16, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x945f, gbc.sp());
        EXPECT(0x5bf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x9f16));
        // 32 0005
        gbc.setState(0x3305, 0xa044, 0x7a10, 0x9fe7, 0x2327, 0xa0fd, 0x1, 0x0);
        gbc.writeMem(0x3305, { 0x32 });
        gbc.writeMem(0xa0fd, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa044, gbc.sp());
        EXPECT(0x3306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa0fd));
        // 32 0008
        gbc.setState(0x8072, 0xc269, 0xe6d0, 0x7103, 0xcc27, 0xdd75, 0x0, 0x0);
        gbc.writeMem(0x8072, { 0x32 });
        gbc.writeMem(0xdd75, { 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc269, gbc.sp());
        EXPECT(0x8073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8072));
        EXPECT(0xe6, gbc.readMem(0xdd75));
        // 32 0009
        gbc.setState(0x1618, 0x538d, 0xb350, 0x2976, 0x1e27, 0xb3f5, 0x0, 0x1);
        gbc.writeMem(0x1618, { 0x32 });
        gbc.writeMem(0xb3f5, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x538d, gbc.sp());
        EXPECT(0x1619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb3f5));
        // 32 000B
        gbc.setState(0x2a10, 0x4905, 0x8d0, 0xcf9d, 0xe037, 0x87f8, 0x0, 0x0);
        gbc.writeMem(0x2a10, { 0x32 });
        gbc.writeMem(0x87f8, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4905, gbc.sp());
        EXPECT(0x2a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x87f8));
        // 32 000C
        gbc.setState(0x914e, 0x6731, 0x4fa0, 0xbbae, 0x41b9, 0x90f9, 0x1, 0x1);
        gbc.writeMem(0x90f9, { 0x0 });
        gbc.writeMem(0x914e, { 0x32 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6731, gbc.sp());
        EXPECT(0x914f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x90f9));
        EXPECT(0x32, gbc.readMem(0x914e));
        // 32 000D
        gbc.setState(0x510d, 0x247f, 0x4360, 0xf336, 0x105f, 0xbd64, 0x1, 0x0);
        gbc.writeMem(0x510d, { 0x32 });
        gbc.writeMem(0xbd64, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x247f, gbc.sp());
        EXPECT(0x510e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xbd64));
        // 32 000F
        gbc.setState(0x7c41, 0x155a, 0xa230, 0x7d19, 0x2e9c, 0xfc26, 0x0, 0x1);
        gbc.writeMem(0x7c41, { 0x32 });
        gbc.writeMem(0xfc26, { 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x155a, gbc.sp());
        EXPECT(0x7c42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xfc26));
        // 32 0010
        gbc.setState(0x28d6, 0xdbd4, 0x22d0, 0xf04e, 0x2db5, 0xc6e9, 0x0, 0x1);
        gbc.writeMem(0x28d6, { 0x32 });
        gbc.writeMem(0xc6e9, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdbd4, gbc.sp());
        EXPECT(0x28d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xc6e9));
        // 32 0011
        gbc.setState(0x9e29, 0x2ddc, 0x2950, 0x340e, 0x8b99, 0xc41c, 0x0, 0x1);
        gbc.writeMem(0x9e29, { 0x32 });
        gbc.writeMem(0xc41c, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2ddc, gbc.sp());
        EXPECT(0x9e2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9e29));
        EXPECT(0x29, gbc.readMem(0xc41c));
        // 32 0013
        gbc.setState(0x67cd, 0xfb60, 0xb5e0, 0xb7fd, 0x559c, 0x9e9f, 0x0, 0x0);
        gbc.writeMem(0x67cd, { 0x32 });
        gbc.writeMem(0x9e9f, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xfb60, gbc.sp());
        EXPECT(0x67ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9e9f));
        // 32 0018
        gbc.setState(0x36cd, 0xf652, 0x9ec0, 0x94a2, 0x9c5c, 0xd05b, 0x0, 0x1);
        gbc.writeMem(0x36cd, { 0x32 });
        gbc.writeMem(0xd05b, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf652, gbc.sp());
        EXPECT(0x36ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd05b));
        // 32 001A
        gbc.setState(0x8cfa, 0xde9d, 0x3180, 0xf900, 0xf8dc, 0x80a1, 0x0, 0x1);
        gbc.writeMem(0x80a1, { 0x0 });
        gbc.writeMem(0x8cfa, { 0x32 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xde9d, gbc.sp());
        EXPECT(0x8cfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x80a1));
        EXPECT(0x32, gbc.readMem(0x8cfa));
        // 32 001D
        gbc.setState(0x1394, 0xb43a, 0xeff0, 0xe055, 0xe8ed, 0xfab1, 0x1, 0x1);
        gbc.writeMem(0x1394, { 0x32 });
        gbc.writeMem(0xfab1, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb43a, gbc.sp());
        EXPECT(0x1395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xfab1));
        // 32 001E
        gbc.setState(0x6e02, 0xd113, 0xc390, 0x13d4, 0xeaba, 0xee3a, 0x1, 0x0);
        gbc.writeMem(0x6e02, { 0x32 });
        gbc.writeMem(0xee3a, { 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd113, gbc.sp());
        EXPECT(0x6e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xee3a));
        // 32 001F
        gbc.setState(0x4b17, 0x22ff, 0xef90, 0x9a5d, 0xc76b, 0xbae3, 0x1, 0x1);
        gbc.writeMem(0x4b17, { 0x32 });
        gbc.writeMem(0xbae3, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x22ff, gbc.sp());
        EXPECT(0x4b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xbae3));
        // 32 0021
        gbc.setState(0x9955, 0x68ec, 0x6ff0, 0x8d68, 0x4d99, 0xe5d7, 0x1, 0x0);
        gbc.writeMem(0x9955, { 0x32 });
        gbc.writeMem(0xe5d7, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x68ec, gbc.sp());
        EXPECT(0x9956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9955));
        EXPECT(0x6f, gbc.readMem(0xe5d7));
        // 32 0024
        gbc.setState(0xbd61, 0x3a1d, 0x7ef0, 0xea08, 0xbada, 0x86da, 0x0, 0x0);
        gbc.writeMem(0x86da, { 0x0 });
        gbc.writeMem(0xbd61, { 0x32 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3a1d, gbc.sp());
        EXPECT(0xbd62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x86da));
        EXPECT(0x32, gbc.readMem(0xbd61));
        // 32 0025
        gbc.setState(0x9316, 0xd1a8, 0x8f50, 0x8e1e, 0x38c4, 0xe0dc, 0x0, 0x1);
        gbc.writeMem(0x9316, { 0x32 });
        gbc.writeMem(0xe0dc, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd1a8, gbc.sp());
        EXPECT(0x9317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9316));
        EXPECT(0x8f, gbc.readMem(0xe0dc));
        // 32 0026
        gbc.setState(0x5b4e, 0x5e5, 0xfc40, 0xc15f, 0xca0a, 0xb403, 0x1, 0x0);
        gbc.writeMem(0x5b4e, { 0x32 });
        gbc.writeMem(0xb403, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5e5, gbc.sp());
        EXPECT(0x5b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xb403));
        // 32 0028
        gbc.setState(0xe751, 0x2cb4, 0xe710, 0xf09c, 0xc206, 0xb8f6, 0x1, 0x0);
        gbc.writeMem(0xb8f6, { 0x0 });
        gbc.writeMem(0xe751, { 0x32 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2cb4, gbc.sp());
        EXPECT(0xe752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xb8f6));
        EXPECT(0x32, gbc.readMem(0xe751));
        // 32 002A
        gbc.setState(0x4eaa, 0x8fe0, 0xc760, 0x6e8b, 0x7a2, 0xc179, 0x0, 0x1);
        gbc.writeMem(0x4eaa, { 0x32 });
        gbc.writeMem(0xc179, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8fe0, gbc.sp());
        EXPECT(0x4eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xc179));
        // 32 002B
        gbc.setState(0xf0b, 0x350d, 0xe8a0, 0xba74, 0x1a9d, 0xedf8, 0x1, 0x0);
        gbc.writeMem(0xf0b, { 0x32 });
        gbc.writeMem(0xedf8, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x350d, gbc.sp());
        EXPECT(0xf0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xedf8));
        // 32 002E
        gbc.setState(0xa7d2, 0xa1e3, 0x38c0, 0x8dbe, 0xba3c, 0xf3a6, 0x1, 0x1);
        gbc.writeMem(0xa7d2, { 0x32 });
        gbc.writeMem(0xf3a6, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa1e3, gbc.sp());
        EXPECT(0xa7d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xa7d2));
        EXPECT(0x38, gbc.readMem(0xf3a6));
        // 32 0031
        gbc.setState(0xd5c9, 0x7232, 0x2b90, 0xc143, 0xa8ca, 0xc6e6, 0x0, 0x0);
        gbc.writeMem(0xc6e6, { 0x0 });
        gbc.writeMem(0xd5c9, { 0x32 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7232, gbc.sp());
        EXPECT(0xd5ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc6e6));
        EXPECT(0x32, gbc.readMem(0xd5c9));
        // 32 0032
        gbc.setState(0xec43, 0xbe45, 0xc820, 0x79a9, 0x27f7, 0xfdda, 0x0, 0x0);
        gbc.writeMem(0xec43, { 0x32 });
        gbc.writeMem(0xfdda, { 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbe45, gbc.sp());
        EXPECT(0xec44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xec43));
        EXPECT(0xc8, gbc.readMem(0xfdda));
        // 32 0033
        gbc.setState(0x48bb, 0x8587, 0x9d30, 0x3c22, 0x969c, 0xf05b, 0x1, 0x0);
        gbc.writeMem(0x48bb, { 0x32 });
        gbc.writeMem(0xf05b, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8587, gbc.sp());
        EXPECT(0x48bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xf05b));
        // 32 0034
        gbc.setState(0xb25e, 0x7bcc, 0x7740, 0x8b36, 0x4e36, 0xfdf5, 0x1, 0x0);
        gbc.writeMem(0xb25e, { 0x32 });
        gbc.writeMem(0xfdf5, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7bcc, gbc.sp());
        EXPECT(0xb25f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xb25e));
        EXPECT(0x77, gbc.readMem(0xfdf5));
        // 32 0037
        gbc.setState(0xea4a, 0x26ff, 0x4240, 0x5d5f, 0x2707, 0xddb6, 0x0, 0x0);
        gbc.writeMem(0xddb6, { 0x0 });
        gbc.writeMem(0xea4a, { 0x32 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x26ff, gbc.sp());
        EXPECT(0xea4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xddb6));
        EXPECT(0x32, gbc.readMem(0xea4a));
        // 32 0038
        gbc.setState(0xe3c6, 0x62c0, 0xaf60, 0xdabd, 0x9918, 0xc37a, 0x1, 0x1);
        gbc.writeMem(0xc37a, { 0x0 });
        gbc.writeMem(0xe3c6, { 0x32 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x62c0, gbc.sp());
        EXPECT(0xe3c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xc37a));
        EXPECT(0x32, gbc.readMem(0xe3c6));
        // 32 003A
        gbc.setState(0xc070, 0x7cf9, 0x32f0, 0x5063, 0x6a3a, 0xf1f3, 0x0, 0x1);
        gbc.writeMem(0xc070, { 0x32 });
        gbc.writeMem(0xf1f3, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7cf9, gbc.sp());
        EXPECT(0xc071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xc070));
        EXPECT(0x32, gbc.readMem(0xf1f3));
        // 32 003B
        gbc.setState(0x250, 0xb930, 0x3410, 0x7875, 0xa187, 0xcc65, 0x0, 0x1);
        gbc.writeMem(0x250, { 0x32 });
        gbc.writeMem(0xcc65, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb930, gbc.sp());
        EXPECT(0x251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xcc65));
        // 32 0040
        gbc.setState(0xde8e, 0x90b9, 0xb2e0, 0xc12e, 0xc864, 0x8eda, 0x1, 0x0);
        gbc.writeMem(0x8eda, { 0x0 });
        gbc.writeMem(0xde8e, { 0x32 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x90b9, gbc.sp());
        EXPECT(0xde8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x8eda));
        EXPECT(0x32, gbc.readMem(0xde8e));
        // 32 0041
        gbc.setState(0x7741, 0x886f, 0xdf40, 0x252c, 0xec8e, 0x9a9d, 0x0, 0x0);
        gbc.writeMem(0x7741, { 0x32 });
        gbc.writeMem(0x9a9d, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x886f, gbc.sp());
        EXPECT(0x7742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x9a9d));
        // 32 0042
        gbc.setState(0x7ee4, 0x7a83, 0x18a0, 0xd6cb, 0xcaa3, 0x9a65, 0x0, 0x0);
        gbc.writeMem(0x7ee4, { 0x32 });
        gbc.writeMem(0x9a65, { 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7a83, gbc.sp());
        EXPECT(0x7ee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x9a65));
        // 32 0043
        gbc.setState(0xc01b, 0x48bf, 0x3080, 0xc6ff, 0x2564, 0xfe39, 0x1, 0x1);
        gbc.writeMem(0xc01b, { 0x32 });
        gbc.writeMem(0xfe39, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x48bf, gbc.sp());
        EXPECT(0xc01c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xc01b));
        EXPECT(0x30, gbc.readMem(0xfe39));
        // 32 0044
        gbc.setState(0x1ee2, 0xe51a, 0x3e70, 0x5777, 0x5830, 0xaa3a, 0x1, 0x1);
        gbc.writeMem(0x1ee2, { 0x32 });
        gbc.writeMem(0xaa3a, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe51a, gbc.sp());
        EXPECT(0x1ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xaa3a));
        // 32 0046
        gbc.setState(0x2634, 0xff98, 0xc40, 0xcb43, 0x3c9b, 0x8926, 0x1, 0x0);
        gbc.writeMem(0x2634, { 0x32 });
        gbc.writeMem(0x8926, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xff98, gbc.sp());
        EXPECT(0x2635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8926));
        // 32 0048
        gbc.setState(0xca0d, 0x1597, 0x9330, 0xc74e, 0xe70b, 0xeba5, 0x0, 0x1);
        gbc.writeMem(0xca0d, { 0x32 });
        gbc.writeMem(0xeba5, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1597, gbc.sp());
        EXPECT(0xca0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xca0d));
        EXPECT(0x93, gbc.readMem(0xeba5));
        // 32 004A
        gbc.setState(0xdd0f, 0x32f6, 0x8100, 0xfaea, 0x5c5, 0xd186, 0x0, 0x0);
        gbc.writeMem(0xd186, { 0x0 });
        gbc.writeMem(0xdd0f, { 0x32 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x32f6, gbc.sp());
        EXPECT(0xdd10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd186));
        EXPECT(0x32, gbc.readMem(0xdd0f));
        // 32 004B
        gbc.setState(0x8fea, 0xd28e, 0xf130, 0xd18b, 0x7a8a, 0x8d12, 0x0, 0x0);
        gbc.writeMem(0x8d12, { 0x0 });
        gbc.writeMem(0x8fea, { 0x32 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd28e, gbc.sp());
        EXPECT(0x8feb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8d12));
        EXPECT(0x32, gbc.readMem(0x8fea));
        // 32 004D
        gbc.setState(0xcc00, 0x5d89, 0x56b0, 0x9cce, 0xea7c, 0xc927, 0x0, 0x0);
        gbc.writeMem(0xc927, { 0x0 });
        gbc.writeMem(0xcc00, { 0x32 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5d89, gbc.sp());
        EXPECT(0xcc01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xc927));
        EXPECT(0x32, gbc.readMem(0xcc00));
        // 32 004F
        gbc.setState(0xdeda, 0x6a55, 0x4950, 0xcecb, 0x263a, 0x92b2, 0x0, 0x0);
        gbc.writeMem(0x92b2, { 0x0 });
        gbc.writeMem(0xdeda, { 0x32 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6a55, gbc.sp());
        EXPECT(0xdedb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x92b2));
        EXPECT(0x32, gbc.readMem(0xdeda));
        // 32 0050
        gbc.setState(0x5e65, 0xd314, 0x6350, 0x8a3a, 0x19d0, 0xd036, 0x0, 0x0);
        gbc.writeMem(0x5e65, { 0x32 });
        gbc.writeMem(0xd036, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd314, gbc.sp());
        EXPECT(0x5e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xd036));
        // 32 0051
        gbc.setState(0xafa, 0x81ab, 0xdf50, 0xbe8e, 0x6ca3, 0x9460, 0x0, 0x0);
        gbc.writeMem(0xafa, { 0x32 });
        gbc.writeMem(0x9460, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x81ab, gbc.sp());
        EXPECT(0xafb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x9460));
        // 32 0052
        gbc.setState(0x9731, 0xab7f, 0xf8d0, 0x9007, 0x143f, 0x9bbb, 0x0, 0x1);
        gbc.writeMem(0x9731, { 0x32 });
        gbc.writeMem(0x9bbb, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xab7f, gbc.sp());
        EXPECT(0x9732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9731));
        EXPECT(0xf8, gbc.readMem(0x9bbb));
        // 32 0055
        gbc.setState(0x6b5f, 0xa5cb, 0x3eb0, 0x46a9, 0xffa0, 0xb1f0, 0x0, 0x1);
        gbc.writeMem(0x6b5f, { 0x32 });
        gbc.writeMem(0xb1f0, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa5cb, gbc.sp());
        EXPECT(0x6b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb1f0));
        // 32 0058
        gbc.setState(0xad44, 0x51ba, 0x6760, 0x7f08, 0x833f, 0x98c1, 0x1, 0x1);
        gbc.writeMem(0x98c1, { 0x0 });
        gbc.writeMem(0xad44, { 0x32 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x51ba, gbc.sp());
        EXPECT(0xad45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x98c1));
        EXPECT(0x32, gbc.readMem(0xad44));
        // 32 005A
        gbc.setState(0xbbb7, 0x3998, 0xce80, 0xa871, 0x46f9, 0xdf4b, 0x1, 0x0);
        gbc.writeMem(0xbbb7, { 0x32 });
        gbc.writeMem(0xdf4b, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3998, gbc.sp());
        EXPECT(0xbbb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xbbb7));
        EXPECT(0xce, gbc.readMem(0xdf4b));
        // 32 005B
        gbc.setState(0xd2a1, 0x801f, 0x7f50, 0xa6d7, 0x10b4, 0xfe20, 0x1, 0x1);
        gbc.writeMem(0xd2a1, { 0x32 });
        gbc.writeMem(0xfe20, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x801f, gbc.sp());
        EXPECT(0xd2a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xd2a1));
        EXPECT(0x7f, gbc.readMem(0xfe20));
        // 32 005D
        gbc.setState(0x50fb, 0xb0ec, 0x9a60, 0x13c5, 0x572f, 0xb003, 0x0, 0x1);
        gbc.writeMem(0x50fb, { 0x32 });
        gbc.writeMem(0xb003, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb0ec, gbc.sp());
        EXPECT(0x50fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb003));
        // 32 005E
        gbc.setState(0x28aa, 0x969a, 0x37b0, 0xb237, 0x1eb4, 0xf9a0, 0x1, 0x0);
        gbc.writeMem(0x28aa, { 0x32 });
        gbc.writeMem(0xf9a0, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x969a, gbc.sp());
        EXPECT(0x28ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xf9a0));
        // 32 0060
        gbc.setState(0xd8c3, 0x2010, 0xb810, 0xc832, 0x4515, 0xcf9d, 0x0, 0x1);
        gbc.writeMem(0xcf9d, { 0x0 });
        gbc.writeMem(0xd8c3, { 0x32 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2010, gbc.sp());
        EXPECT(0xd8c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xcf9d));
        EXPECT(0x32, gbc.readMem(0xd8c3));
        // 32 0062
        gbc.setState(0x5ae3, 0xfb12, 0x6320, 0x4cff, 0x4f90, 0xf1ab, 0x1, 0x0);
        gbc.writeMem(0x5ae3, { 0x32 });
        gbc.writeMem(0xf1ab, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfb12, gbc.sp());
        EXPECT(0x5ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xf1ab));
        // 32 0069
        gbc.setState(0x7b3d, 0x764e, 0x60, 0xebe3, 0xeef9, 0x360c, 0x1, 0x0);
        gbc.writeMem(0x360c, { 0x0 });
        gbc.writeMem(0x7b3d, { 0x32 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x764e, gbc.sp());
        EXPECT(0x7b3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 32 006B
        gbc.setState(0xa557, 0xd4be, 0xd170, 0x2ef7, 0xe215, 0x9bad, 0x1, 0x0);
        gbc.writeMem(0x9bad, { 0x0 });
        gbc.writeMem(0xa557, { 0x32 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd4be, gbc.sp());
        EXPECT(0xa558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0x9bad));
        EXPECT(0x32, gbc.readMem(0xa557));
        // 32 006E
        gbc.setState(0x9858, 0x2573, 0x4060, 0x8475, 0xf42e, 0xaa9f, 0x1, 0x0);
        gbc.writeMem(0x9858, { 0x32 });
        gbc.writeMem(0xaa9f, { 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2573, gbc.sp());
        EXPECT(0x9859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9858));
        EXPECT(0x40, gbc.readMem(0xaa9f));
        // 32 0071
        gbc.setState(0xe2bf, 0x18ee, 0x9790, 0xe3c3, 0x6807, 0xc0ef, 0x1, 0x0);
        gbc.writeMem(0xc0ef, { 0x0 });
        gbc.writeMem(0xe2bf, { 0x32 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x18ee, gbc.sp());
        EXPECT(0xe2c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc0ef));
        EXPECT(0x32, gbc.readMem(0xe2bf));
        // 32 0072
        gbc.setState(0xbe8a, 0xc251, 0xc830, 0xe49b, 0x4f82, 0xc802, 0x0, 0x1);
        gbc.writeMem(0xbe8a, { 0x32 });
        gbc.writeMem(0xc802, { 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc251, gbc.sp());
        EXPECT(0xbe8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xbe8a));
        EXPECT(0xc8, gbc.readMem(0xc802));
        // 32 0073
        gbc.setState(0x996b, 0xcca9, 0x240, 0x1e43, 0x9388, 0x8fea, 0x0, 0x1);
        gbc.writeMem(0x8fea, { 0x0 });
        gbc.writeMem(0x996b, { 0x32 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcca9, gbc.sp());
        EXPECT(0x996c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x8fea));
        EXPECT(0x32, gbc.readMem(0x996b));
        // 32 0078
        gbc.setState(0x43eb, 0x7a33, 0xcf60, 0xc116, 0xc241, 0xf9df, 0x0, 0x0);
        gbc.writeMem(0x43eb, { 0x32 });
        gbc.writeMem(0xf9df, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7a33, gbc.sp());
        EXPECT(0x43ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xf9df));
        // 32 007B
        gbc.setState(0x3424, 0x7721, 0xbbf0, 0x8842, 0x2c, 0xcc80, 0x0, 0x0);
        gbc.writeMem(0x3424, { 0x32 });
        gbc.writeMem(0xcc80, { 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7721, gbc.sp());
        EXPECT(0x3425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xcc80));
        // 32 007C
        gbc.setState(0x9d39, 0x354f, 0x1340, 0xa47d, 0xdf57, 0xad80, 0x1, 0x1);
        gbc.writeMem(0x9d39, { 0x32 });
        gbc.writeMem(0xad80, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x354f, gbc.sp());
        EXPECT(0x9d3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9d39));
        EXPECT(0x13, gbc.readMem(0xad80));
        // 32 007F
        gbc.setState(0x6f3f, 0xe065, 0xe0a0, 0x32df, 0x3164, 0x9057, 0x0, 0x1);
        gbc.writeMem(0x6f3f, { 0x32 });
        gbc.writeMem(0x9057, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe065, gbc.sp());
        EXPECT(0x6f40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9057));
        // 32 0081
        gbc.setState(0x9d21, 0xc514, 0x9d40, 0x175d, 0xfad8, 0x86d7, 0x1, 0x0);
        gbc.writeMem(0x86d7, { 0x0 });
        gbc.writeMem(0x9d21, { 0x32 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc514, gbc.sp());
        EXPECT(0x9d22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x86d7));
        EXPECT(0x32, gbc.readMem(0x9d21));
        // 32 0082
        gbc.setState(0x8239, 0x6df0, 0xde00, 0xf9fd, 0xe15f, 0xf7c9, 0x0, 0x1);
        gbc.writeMem(0x8239, { 0x32 });
        gbc.writeMem(0xf7c9, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6df0, gbc.sp());
        EXPECT(0x823a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8239));
        EXPECT(0xde, gbc.readMem(0xf7c9));
        // 32 0083
        gbc.setState(0x7904, 0x38c7, 0x9730, 0xf228, 0x638d, 0x9ae2, 0x1, 0x0);
        gbc.writeMem(0x7904, { 0x32 });
        gbc.writeMem(0x9ae2, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x38c7, gbc.sp());
        EXPECT(0x7905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9ae2));
        // 32 0085
        gbc.setState(0x365, 0xae0, 0x2f50, 0xd556, 0x3c96, 0xc66a, 0x1, 0x0);
        gbc.writeMem(0x365, { 0x32 });
        gbc.writeMem(0xc66a, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xae0, gbc.sp());
        EXPECT(0x366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc66a));
        // 32 0086
        gbc.setState(0xd33d, 0x763d, 0x4c90, 0x1fcd, 0x74eb, 0x9a3e, 0x0, 0x1);
        gbc.writeMem(0x9a3e, { 0x0 });
        gbc.writeMem(0xd33d, { 0x32 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x763d, gbc.sp());
        EXPECT(0xd33e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9a3e));
        EXPECT(0x32, gbc.readMem(0xd33d));
        // 32 0088
        gbc.setState(0x22bb, 0x5a1b, 0x2e00, 0xdb7, 0x649f, 0xa720, 0x0, 0x1);
        gbc.writeMem(0x22bb, { 0x32 });
        gbc.writeMem(0xa720, { 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5a1b, gbc.sp());
        EXPECT(0x22bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa720));
        // 32 008A
        gbc.setState(0x3f98, 0x6bd, 0x1b00, 0xd6d4, 0x7345, 0x9715, 0x0, 0x0);
        gbc.writeMem(0x3f98, { 0x32 });
        gbc.writeMem(0x9715, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6bd, gbc.sp());
        EXPECT(0x3f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x9715));
        // 32 008B
        gbc.setState(0x7701, 0xebae, 0x8610, 0x40a6, 0xb4c9, 0xbbd7, 0x0, 0x0);
        gbc.writeMem(0x7701, { 0x32 });
        gbc.writeMem(0xbbd7, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xebae, gbc.sp());
        EXPECT(0x7702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xbbd7));
        // 32 008C
        gbc.setState(0x44cf, 0x2430, 0x21e0, 0x6f89, 0x5461, 0xd7d7, 0x0, 0x1);
        gbc.writeMem(0x44cf, { 0x32 });
        gbc.writeMem(0xd7d7, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2430, gbc.sp());
        EXPECT(0x44d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd7d7));
        // 32 008D
        gbc.setState(0x546d, 0x107, 0xd620, 0xeacc, 0x463d, 0xbdf9, 0x1, 0x0);
        gbc.writeMem(0x546d, { 0x32 });
        gbc.writeMem(0xbdf9, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x107, gbc.sp());
        EXPECT(0x546e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xbdf9));
        // 32 0091
        gbc.setState(0x5f7d, 0x7a55, 0x4f40, 0x9ecd, 0x964a, 0xcbd1, 0x1, 0x1);
        gbc.writeMem(0x5f7d, { 0x32 });
        gbc.writeMem(0xcbd1, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7a55, gbc.sp());
        EXPECT(0x5f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xcbd1));
        // 32 0092
        gbc.setState(0xbeb9, 0xf300, 0xd1b0, 0x3507, 0x5ea2, 0xddba, 0x0, 0x1);
        gbc.writeMem(0xbeb9, { 0x32 });
        gbc.writeMem(0xddba, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf300, gbc.sp());
        EXPECT(0xbeba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xbeb9));
        EXPECT(0xd1, gbc.readMem(0xddba));
        // 32 0094
        gbc.setState(0x6804, 0x5bd3, 0x8980, 0xf145, 0x620e, 0xacc3, 0x0, 0x0);
        gbc.writeMem(0x6804, { 0x32 });
        gbc.writeMem(0xacc3, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5bd3, gbc.sp());
        EXPECT(0x6805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xacc3));
        // 32 0095
        gbc.setState(0x1db5, 0xb587, 0x9330, 0xda8c, 0xb773, 0xe246, 0x1, 0x0);
        gbc.writeMem(0x1db5, { 0x32 });
        gbc.writeMem(0xe246, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb587, gbc.sp());
        EXPECT(0x1db6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe246));
        // 32 0097
        gbc.setState(0x54c8, 0x39eb, 0xb250, 0x292d, 0xa56a, 0xce3e, 0x0, 0x1);
        gbc.writeMem(0x54c8, { 0x32 });
        gbc.writeMem(0xce3e, { 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x39eb, gbc.sp());
        EXPECT(0x54c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xce3e));
        // 32 0098
        gbc.setState(0xac8c, 0xefdf, 0x23d0, 0xa7a6, 0x1ac7, 0xb88e, 0x0, 0x0);
        gbc.writeMem(0xac8c, { 0x32 });
        gbc.writeMem(0xb88e, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xefdf, gbc.sp());
        EXPECT(0xac8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xac8c));
        EXPECT(0x23, gbc.readMem(0xb88e));
        // 32 0099
        gbc.setState(0x3a64, 0x2cf8, 0x8c00, 0x6a38, 0x22d7, 0xd003, 0x0, 0x1);
        gbc.writeMem(0x3a64, { 0x32 });
        gbc.writeMem(0xd003, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2cf8, gbc.sp());
        EXPECT(0x3a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd003));
        // 32 009A
        gbc.setState(0xb5a6, 0xa8a8, 0x4db0, 0xf7c0, 0xcc8c, 0xc6c1, 0x0, 0x1);
        gbc.writeMem(0xb5a6, { 0x32 });
        gbc.writeMem(0xc6c1, { 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa8a8, gbc.sp());
        EXPECT(0xb5a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xb5a6));
        EXPECT(0x4d, gbc.readMem(0xc6c1));
        // 32 009B
        gbc.setState(0x21f9, 0xbc7, 0x5540, 0xae17, 0x7241, 0xf00b, 0x0, 0x0);
        gbc.writeMem(0x21f9, { 0x32 });
        gbc.writeMem(0xf00b, { 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbc7, gbc.sp());
        EXPECT(0x21fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xf00b));
        // 32 009C
        gbc.setState(0xb655, 0x9a93, 0xe880, 0xbd3, 0xfa51, 0xf265, 0x0, 0x0);
        gbc.writeMem(0xb655, { 0x32 });
        gbc.writeMem(0xf265, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9a93, gbc.sp());
        EXPECT(0xb656, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xb655));
        EXPECT(0xe8, gbc.readMem(0xf265));
        // 32 009D
        gbc.setState(0xee74, 0xe8f0, 0xbec0, 0x705b, 0x5cd6, 0x9434, 0x1, 0x1);
        gbc.writeMem(0x9434, { 0x0 });
        gbc.writeMem(0xee74, { 0x32 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe8f0, gbc.sp());
        EXPECT(0xee75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x9434));
        EXPECT(0x32, gbc.readMem(0xee74));
        // 32 009E
        gbc.setState(0x4fe8, 0x4112, 0x9cf0, 0xa610, 0xf42c, 0xa750, 0x1, 0x0);
        gbc.writeMem(0x4fe8, { 0x32 });
        gbc.writeMem(0xa750, { 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4112, gbc.sp());
        EXPECT(0x4fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa750));
        // 32 00A0
        gbc.setState(0x92b1, 0x3899, 0x4d90, 0xcfde, 0xa317, 0xf0bb, 0x0, 0x1);
        gbc.writeMem(0x92b1, { 0x32 });
        gbc.writeMem(0xf0bb, { 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3899, gbc.sp());
        EXPECT(0x92b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x92b1));
        EXPECT(0x4d, gbc.readMem(0xf0bb));
        // 32 00A1
        gbc.setState(0x3abe, 0x8377, 0x82b0, 0x292c, 0xf875, 0xfc00, 0x0, 0x1);
        gbc.writeMem(0x3abe, { 0x32 });
        gbc.writeMem(0xfc00, { 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8377, gbc.sp());
        EXPECT(0x3abf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xfc00));
        // 32 00A2
        gbc.setState(0x5a2e, 0x81ac, 0x58d0, 0x959c, 0x4809, 0x92f2, 0x1, 0x0);
        gbc.writeMem(0x5a2e, { 0x32 });
        gbc.writeMem(0x92f2, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x81ac, gbc.sp());
        EXPECT(0x5a2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x92f2));
        // 32 00A6
        gbc.setState(0xcf21, 0x4af, 0x25f0, 0x9feb, 0xf4f8, 0xaf1a, 0x0, 0x1);
        gbc.writeMem(0xaf1a, { 0x0 });
        gbc.writeMem(0xcf21, { 0x32 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4af, gbc.sp());
        EXPECT(0xcf22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xaf1a));
        EXPECT(0x32, gbc.readMem(0xcf21));
        // 32 00A7
        gbc.setState(0x9753, 0x2b6c, 0xef80, 0x5fac, 0x29c3, 0xdeaf, 0x1, 0x1);
        gbc.writeMem(0x9753, { 0x32 });
        gbc.writeMem(0xdeaf, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2b6c, gbc.sp());
        EXPECT(0x9754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9753));
        EXPECT(0xef, gbc.readMem(0xdeaf));
        // 32 00A8
        gbc.setState(0x7b34, 0x4483, 0xfce0, 0xd589, 0xe511, 0x9da7, 0x1, 0x0);
        gbc.writeMem(0x7b34, { 0x32 });
        gbc.writeMem(0x9da7, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4483, gbc.sp());
        EXPECT(0x7b35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0x9da7));
        // 32 00AD
        gbc.setState(0xbb64, 0x7deb, 0x820, 0xd6ef, 0xe4be, 0xa644, 0x0, 0x1);
        gbc.writeMem(0xa644, { 0x0 });
        gbc.writeMem(0xbb64, { 0x32 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7deb, gbc.sp());
        EXPECT(0xbb65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xa644));
        EXPECT(0x32, gbc.readMem(0xbb64));
        // 32 00AF
        gbc.setState(0x22d3, 0x5181, 0x8500, 0x59ef, 0x3f8b, 0xb027, 0x1, 0x0);
        gbc.writeMem(0x22d3, { 0x32 });
        gbc.writeMem(0xb027, { 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5181, gbc.sp());
        EXPECT(0x22d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb027));
        // 32 00B1
        gbc.setState(0x7cc3, 0xf150, 0xee10, 0x2732, 0xa65b, 0xe411, 0x0, 0x0);
        gbc.writeMem(0x7cc3, { 0x32 });
        gbc.writeMem(0xe411, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf150, gbc.sp());
        EXPECT(0x7cc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xe411));
        // 32 00B5
        gbc.setState(0xd900, 0x49fb, 0xd0f0, 0xb47b, 0x6ae, 0xf04b, 0x1, 0x0);
        gbc.writeMem(0xd900, { 0x32 });
        gbc.writeMem(0xf04b, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x49fb, gbc.sp());
        EXPECT(0xd901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xd900));
        EXPECT(0xd0, gbc.readMem(0xf04b));
        // 32 00B6
        gbc.setState(0x4945, 0x391f, 0x4750, 0xf1ff, 0xfed5, 0x8d6e, 0x0, 0x0);
        gbc.writeMem(0x4945, { 0x32 });
        gbc.writeMem(0x8d6e, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x391f, gbc.sp());
        EXPECT(0x4946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8d6e));
        // 32 00B7
        gbc.setState(0xba78, 0xad0f, 0x9230, 0xf6f0, 0xd499, 0xea4a, 0x1, 0x1);
        gbc.writeMem(0xba78, { 0x32 });
        gbc.writeMem(0xea4a, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xad0f, gbc.sp());
        EXPECT(0xba79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xba78));
        EXPECT(0x92, gbc.readMem(0xea4a));
        // 32 00B9
        gbc.setState(0x1c4d, 0x5a29, 0xf6f0, 0x9ea1, 0x5607, 0xbbd9, 0x1, 0x1);
        gbc.writeMem(0x1c4d, { 0x32 });
        gbc.writeMem(0xbbd9, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5a29, gbc.sp());
        EXPECT(0x1c4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xbbd9));
        // 32 00BB
        gbc.setState(0x6ce3, 0xa6ad, 0x9910, 0x5ba4, 0xecf1, 0xc639, 0x0, 0x1);
        gbc.writeMem(0x6ce3, { 0x32 });
        gbc.writeMem(0xc639, { 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa6ad, gbc.sp());
        EXPECT(0x6ce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc639));
        // 32 00BE
        gbc.setState(0x7cd, 0x9d98, 0x5630, 0x9f11, 0x6e8, 0xfaaf, 0x1, 0x0);
        gbc.writeMem(0x7cd, { 0x32 });
        gbc.writeMem(0xfaaf, { 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9d98, gbc.sp());
        EXPECT(0x7ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xfaaf));
        // 32 00C4
        gbc.setState(0x8634, 0xbf4a, 0x69a0, 0xd924, 0x1488, 0x82d5, 0x0, 0x1);
        gbc.writeMem(0x82d5, { 0x0 });
        gbc.writeMem(0x8634, { 0x32 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbf4a, gbc.sp());
        EXPECT(0x8635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x82d5));
        EXPECT(0x32, gbc.readMem(0x8634));
        // 32 00C7
        gbc.setState(0xed11, 0xeabf, 0xc0d0, 0x60ef, 0xb529, 0xfd46, 0x0, 0x0);
        gbc.writeMem(0xed11, { 0x32 });
        gbc.writeMem(0xfd46, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xeabf, gbc.sp());
        EXPECT(0xed12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xed11));
        EXPECT(0xc0, gbc.readMem(0xfd46));
        // 32 00C8
        gbc.setState(0x9e21, 0x2b4f, 0xd6f0, 0xb04b, 0x9d6, 0xabb9, 0x1, 0x0);
        gbc.writeMem(0x9e21, { 0x32 });
        gbc.writeMem(0xabb9, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2b4f, gbc.sp());
        EXPECT(0x9e22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9e21));
        EXPECT(0xd6, gbc.readMem(0xabb9));
        // 32 00CC
        gbc.setState(0x1243, 0xc23, 0xaf60, 0x7108, 0x2799, 0xffd4, 0x0, 0x0);
        gbc.writeMem(0x1243, { 0x32 });
        gbc.writeMem(0xffd4, { 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc23, gbc.sp());
        EXPECT(0x1244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xffd4));
        // 32 00CD
        gbc.setState(0x31a7, 0xb2cd, 0x8f90, 0xbb95, 0xb233, 0xc6ef, 0x0, 0x0);
        gbc.writeMem(0x31a7, { 0x32 });
        gbc.writeMem(0xc6ef, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb2cd, gbc.sp());
        EXPECT(0x31a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc6ef));
        // 32 00CF
        gbc.setState(0xa13c, 0xc90e, 0xfa20, 0x7468, 0x5643, 0xd3b3, 0x0, 0x1);
        gbc.writeMem(0xa13c, { 0x32 });
        gbc.writeMem(0xd3b3, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc90e, gbc.sp());
        EXPECT(0xa13d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xa13c));
        EXPECT(0xfa, gbc.readMem(0xd3b3));
        // 32 00D0
        gbc.setState(0x96f8, 0xb334, 0x74e0, 0x60fb, 0x635c, 0xd135, 0x0, 0x0);
        gbc.writeMem(0x96f8, { 0x32 });
        gbc.writeMem(0xd135, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb334, gbc.sp());
        EXPECT(0x96f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x96f8));
        EXPECT(0x74, gbc.readMem(0xd135));
        // 32 00D1
        gbc.setState(0x1489, 0x70e0, 0x3170, 0x5175, 0xaea7, 0x922c, 0x0, 0x0);
        gbc.writeMem(0x1489, { 0x32 });
        gbc.writeMem(0x922c, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x70e0, gbc.sp());
        EXPECT(0x148a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x922c));
        // 32 00D3
        gbc.setState(0x9806, 0x9b4, 0xb900, 0xdcb5, 0xebee, 0xad86, 0x0, 0x0);
        gbc.writeMem(0x9806, { 0x32 });
        gbc.writeMem(0xad86, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9b4, gbc.sp());
        EXPECT(0x9807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9806));
        EXPECT(0xb9, gbc.readMem(0xad86));
        // 32 00D6
        gbc.setState(0x8933, 0xf82e, 0x6790, 0x6a6c, 0x83e0, 0xfd88, 0x1, 0x0);
        gbc.writeMem(0x8933, { 0x32 });
        gbc.writeMem(0xfd88, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf82e, gbc.sp());
        EXPECT(0x8934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8933));
        EXPECT(0x67, gbc.readMem(0xfd88));
        // 32 00D9
        gbc.setState(0x1ff5, 0x6749, 0x7f10, 0x28d3, 0x6051, 0xa42e, 0x0, 0x0);
        gbc.writeMem(0x1ff5, { 0x32 });
        gbc.writeMem(0xa42e, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6749, gbc.sp());
        EXPECT(0x1ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xa42e));
        // 32 00DA
        gbc.setState(0x2c21, 0xbf20, 0x1ae0, 0x2b88, 0x60, 0xefa4, 0x0, 0x0);
        gbc.writeMem(0x2c21, { 0x32 });
        gbc.writeMem(0xefa4, { 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbf20, gbc.sp());
        EXPECT(0x2c22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xefa4));
        // 32 00DD
        gbc.setState(0xaa95, 0x1bdd, 0x2940, 0x16ed, 0x88f0, 0xf0dc, 0x1, 0x0);
        gbc.writeMem(0xaa95, { 0x32 });
        gbc.writeMem(0xf0dc, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1bdd, gbc.sp());
        EXPECT(0xaa96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xaa95));
        EXPECT(0x29, gbc.readMem(0xf0dc));
        // 32 00DE
        gbc.setState(0xb1d6, 0x50d5, 0xad40, 0xa282, 0x3ee4, 0xa4ec, 0x1, 0x1);
        gbc.writeMem(0xa4ec, { 0x0 });
        gbc.writeMem(0xb1d6, { 0x32 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x50d5, gbc.sp());
        EXPECT(0xb1d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xa4ec));
        EXPECT(0x32, gbc.readMem(0xb1d6));
        // 32 00E1
        gbc.setState(0xd48c, 0x737a, 0xc840, 0x573b, 0xa0c, 0xd54a, 0x1, 0x1);
        gbc.writeMem(0xd48c, { 0x32 });
        gbc.writeMem(0xd54a, { 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x737a, gbc.sp());
        EXPECT(0xd48d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xd48c));
        EXPECT(0xc8, gbc.readMem(0xd54a));
        // 32 00E2
        gbc.setState(0xd721, 0x8a30, 0x9990, 0x2611, 0x68b7, 0xbe03, 0x1, 0x0);
        gbc.writeMem(0xbe03, { 0x0 });
        gbc.writeMem(0xd721, { 0x32 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8a30, gbc.sp());
        EXPECT(0xd722, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xbe03));
        EXPECT(0x32, gbc.readMem(0xd721));
        // 32 00E3
        gbc.setState(0x6896, 0x70c7, 0x500, 0x94f1, 0x3668, 0xdfde, 0x1, 0x0);
        gbc.writeMem(0x6896, { 0x32 });
        gbc.writeMem(0xdfde, { 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x70c7, gbc.sp());
        EXPECT(0x6897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xdfde));
        // 32 00E4
        gbc.setState(0xd6be, 0x2ed4, 0x1250, 0x5ec3, 0x5bac, 0xf637, 0x1, 0x0);
        gbc.writeMem(0xd6be, { 0x32 });
        gbc.writeMem(0xf637, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2ed4, gbc.sp());
        EXPECT(0xd6bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xd6be));
        EXPECT(0x12, gbc.readMem(0xf637));
        // 32 00E7
        gbc.setState(0x91f9, 0x273d, 0xfa50, 0x98e9, 0xad24, 0xdae6, 0x0, 0x0);
        gbc.writeMem(0x91f9, { 0x32 });
        gbc.writeMem(0xdae6, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x273d, gbc.sp());
        EXPECT(0x91fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x91f9));
        EXPECT(0xfa, gbc.readMem(0xdae6));
        // 32 00EB
        gbc.setState(0x16b5, 0xc588, 0x4da0, 0xf23e, 0x278e, 0xc837, 0x0, 0x0);
        gbc.writeMem(0x16b5, { 0x32 });
        gbc.writeMem(0xc837, { 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc588, gbc.sp());
        EXPECT(0x16b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc837));
        // 32 00ED
        gbc.setState(0x23cc, 0x8798, 0xf130, 0x143, 0x66b9, 0x9302, 0x0, 0x1);
        gbc.writeMem(0x23cc, { 0x32 });
        gbc.writeMem(0x9302, { 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8798, gbc.sp());
        EXPECT(0x23cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x9302));
        // 32 00F5
        gbc.setState(0x1e79, 0x7ca1, 0x5760, 0xc628, 0xb1eb, 0x8b7e, 0x0, 0x0);
        gbc.writeMem(0x1e79, { 0x32 });
        gbc.writeMem(0x8b7e, { 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7ca1, gbc.sp());
        EXPECT(0x1e7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8b7e));
        // 32 00F6
        gbc.setState(0x614d, 0x6700, 0x8dc0, 0x6d00, 0x82b4, 0xe0d4, 0x0, 0x1);
        gbc.writeMem(0x614d, { 0x32 });
        gbc.writeMem(0xe0d4, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6700, gbc.sp());
        EXPECT(0x614e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe0d4));
        // 32 00F7
        gbc.setState(0x1c2e, 0xc9e0, 0xa110, 0x2f66, 0x805f, 0xcbe6, 0x1, 0x0);
        gbc.writeMem(0x1c2e, { 0x32 });
        gbc.writeMem(0xcbe6, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc9e0, gbc.sp());
        EXPECT(0x1c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xcbe6));
        // 32 00F9
        gbc.setState(0x294d, 0x73be, 0x2a90, 0x5a8d, 0xf50e, 0xe2a0, 0x0, 0x1);
        gbc.writeMem(0x294d, { 0x32 });
        gbc.writeMem(0xe2a0, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x73be, gbc.sp());
        EXPECT(0x294e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xe2a0));
        // 32 00FA
        gbc.setState(0xcc50, 0xebee, 0x83b0, 0xb9a9, 0x1489, 0xf385, 0x0, 0x1);
        gbc.writeMem(0xcc50, { 0x32 });
        gbc.writeMem(0xf385, { 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xebee, gbc.sp());
        EXPECT(0xcc51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xcc50));
        EXPECT(0x83, gbc.readMem(0xf385));
        // 32 00FB
        gbc.setState(0xa1ee, 0x7f5c, 0x60c0, 0x1969, 0x55df, 0xf5f6, 0x1, 0x0);
        gbc.writeMem(0xa1ee, { 0x32 });
        gbc.writeMem(0xf5f6, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7f5c, gbc.sp());
        EXPECT(0xa1ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xa1ee));
        EXPECT(0x60, gbc.readMem(0xf5f6));
        // 32 00FE
        gbc.setState(0x5505, 0xaa2d, 0xb460, 0xc3df, 0x5e40, 0x952f, 0x0, 0x0);
        gbc.writeMem(0x5505, { 0x32 });
        gbc.writeMem(0x952f, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xaa2d, gbc.sp());
        EXPECT(0x5506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x952f));
        // 32 0100
        gbc.setState(0x800d, 0x8ac8, 0x3b30, 0x552e, 0x19d6, 0xa3e0, 0x0, 0x1);
        gbc.writeMem(0x800d, { 0x32 });
        gbc.writeMem(0xa3e0, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8ac8, gbc.sp());
        EXPECT(0x800e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x800d));
        EXPECT(0x3b, gbc.readMem(0xa3e0));
        // 32 0101
        gbc.setState(0x61da, 0xf549, 0x5800, 0x1308, 0xd47f, 0xd093, 0x0, 0x0);
        gbc.writeMem(0x61da, { 0x32 });
        gbc.writeMem(0xd093, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf549, gbc.sp());
        EXPECT(0x61db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xd093));
        // 32 0102
        gbc.setState(0x3934, 0x318, 0x6eb0, 0x6500, 0x3657, 0xe6cd, 0x0, 0x1);
        gbc.writeMem(0x3934, { 0x32 });
        gbc.writeMem(0xe6cd, { 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x318, gbc.sp());
        EXPECT(0x3935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe6cd));
        // 32 0105
        gbc.setState(0xd197, 0x6775, 0xee30, 0xfe20, 0xa12c, 0xfaad, 0x1, 0x0);
        gbc.writeMem(0xd197, { 0x32 });
        gbc.writeMem(0xfaad, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6775, gbc.sp());
        EXPECT(0xd198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xd197));
        EXPECT(0xee, gbc.readMem(0xfaad));
        // 32 0107
        gbc.setState(0x4bfa, 0xe856, 0xa20, 0xe7f1, 0xf092, 0xbded, 0x1, 0x0);
        gbc.writeMem(0x4bfa, { 0x32 });
        gbc.writeMem(0xbded, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe856, gbc.sp());
        EXPECT(0x4bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xbded));
        // 32 0108
        gbc.setState(0xb523, 0x2e3d, 0x43d0, 0x89df, 0x8da, 0x8a36, 0x1, 0x0);
        gbc.writeMem(0x8a36, { 0x0 });
        gbc.writeMem(0xb523, { 0x32 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2e3d, gbc.sp());
        EXPECT(0xb524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8a36));
        EXPECT(0x32, gbc.readMem(0xb523));
        // 32 010E
        gbc.setState(0x2d52, 0x426b, 0xec00, 0xd2f2, 0x95b3, 0xc484, 0x1, 0x1);
        gbc.writeMem(0x2d52, { 0x32 });
        gbc.writeMem(0xc484, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x426b, gbc.sp());
        EXPECT(0x2d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xc484));
        // 32 0112
        gbc.setState(0x6070, 0xaa56, 0x2440, 0x2b29, 0x66b2, 0xb341, 0x0, 0x1);
        gbc.writeMem(0x6070, { 0x32 });
        gbc.writeMem(0xb341, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xaa56, gbc.sp());
        EXPECT(0x6071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xb341));
        // 32 0114
        gbc.setState(0x3c2c, 0xf334, 0x6e30, 0xbeab, 0xd724, 0xae41, 0x0, 0x1);
        gbc.writeMem(0x3c2c, { 0x32 });
        gbc.writeMem(0xae41, { 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf334, gbc.sp());
        EXPECT(0x3c2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xae41));
        // 32 0116
        gbc.setState(0x6f02, 0x412a, 0xd800, 0xa19e, 0xeaaf, 0xd354, 0x0, 0x0);
        gbc.writeMem(0x6f02, { 0x32 });
        gbc.writeMem(0xd354, { 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x412a, gbc.sp());
        EXPECT(0x6f03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xd354));
        // 32 0117
        gbc.setState(0x5400, 0x7b7b, 0x2280, 0x9c2, 0x965c, 0xc0df, 0x1, 0x1);
        gbc.writeMem(0x5400, { 0x32 });
        gbc.writeMem(0xc0df, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7b7b, gbc.sp());
        EXPECT(0x5401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xc0df));
        // 32 011A
        gbc.setState(0xa748, 0xfd6d, 0x50f0, 0x8b95, 0xdab, 0xa078, 0x0, 0x1);
        gbc.writeMem(0xa078, { 0x0 });
        gbc.writeMem(0xa748, { 0x32 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xfd6d, gbc.sp());
        EXPECT(0xa749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa078));
        EXPECT(0x32, gbc.readMem(0xa748));
        // 32 011B
        gbc.setState(0x7d77, 0xf245, 0x9a60, 0x17e, 0x1cae, 0x8aae, 0x1, 0x1);
        gbc.writeMem(0x7d77, { 0x32 });
        gbc.writeMem(0x8aae, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf245, gbc.sp());
        EXPECT(0x7d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8aae));
        // 32 011D
        gbc.setState(0x4a97, 0x3eb7, 0xc90, 0x66a1, 0x9597, 0xe532, 0x1, 0x1);
        gbc.writeMem(0x4a97, { 0x32 });
        gbc.writeMem(0xe532, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3eb7, gbc.sp());
        EXPECT(0x4a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe532));
        // 32 011E
        gbc.setState(0xaa5d, 0xc5af, 0xfe40, 0xe29e, 0x50e2, 0xe7bc, 0x0, 0x0);
        gbc.writeMem(0xaa5d, { 0x32 });
        gbc.writeMem(0xe7bc, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc5af, gbc.sp());
        EXPECT(0xaa5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xaa5d));
        EXPECT(0xfe, gbc.readMem(0xe7bc));
        // 32 0122
        gbc.setState(0xe2bd, 0x57cb, 0xf520, 0xd94a, 0x3d03, 0xdfb9, 0x1, 0x1);
        gbc.writeMem(0xdfb9, { 0x0 });
        gbc.writeMem(0xe2bd, { 0x32 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x57cb, gbc.sp());
        EXPECT(0xe2be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xdfb9));
        EXPECT(0x32, gbc.readMem(0xe2bd));
        // 32 0123
        gbc.setState(0xa851, 0x8848, 0xbba0, 0xf595, 0xbf62, 0xa4c3, 0x0, 0x1);
        gbc.writeMem(0xa4c3, { 0x0 });
        gbc.writeMem(0xa851, { 0x32 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8848, gbc.sp());
        EXPECT(0xa852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa4c3));
        EXPECT(0x32, gbc.readMem(0xa851));
        // 32 0124
        gbc.setState(0x518e, 0x1578, 0x8be0, 0x3a5d, 0x13e9, 0xedd2, 0x0, 0x0);
        gbc.writeMem(0x518e, { 0x32 });
        gbc.writeMem(0xedd2, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1578, gbc.sp());
        EXPECT(0x518f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xedd2));
        // 32 0128
        gbc.setState(0xca4f, 0x4e55, 0xdbe0, 0x42ac, 0xab1c, 0x9e63, 0x1, 0x0);
        gbc.writeMem(0x9e63, { 0x0 });
        gbc.writeMem(0xca4f, { 0x32 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4e55, gbc.sp());
        EXPECT(0xca50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x9e63));
        EXPECT(0x32, gbc.readMem(0xca4f));
        // 32 0129
        gbc.setState(0x71ad, 0x50fc, 0x5560, 0x7761, 0x8531, 0x9204, 0x0, 0x1);
        gbc.writeMem(0x71ad, { 0x32 });
        gbc.writeMem(0x9204, { 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x50fc, gbc.sp());
        EXPECT(0x71ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9204));
        // 32 012A
        gbc.setState(0x7ceb, 0xd652, 0x69e0, 0x64c5, 0xf571, 0xf60c, 0x0, 0x0);
        gbc.writeMem(0x7ceb, { 0x32 });
        gbc.writeMem(0xf60c, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd652, gbc.sp());
        EXPECT(0x7cec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xf60c));
        // 32 012C
        gbc.setState(0x2434, 0x951b, 0x9270, 0xa650, 0x7bc2, 0xba7e, 0x0, 0x0);
        gbc.writeMem(0x2434, { 0x32 });
        gbc.writeMem(0xba7e, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x951b, gbc.sp());
        EXPECT(0x2435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xba7e));
        // 32 012D
        gbc.setState(0xabbe, 0x218b, 0xdf20, 0x9c8, 0x60f6, 0x8f8a, 0x0, 0x1);
        gbc.writeMem(0x8f8a, { 0x0 });
        gbc.writeMem(0xabbe, { 0x32 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x218b, gbc.sp());
        EXPECT(0xabbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x8f8a));
        EXPECT(0x32, gbc.readMem(0xabbe));
        // 32 0130
        gbc.setState(0x8918, 0xdce, 0x2b00, 0x31e1, 0x5d40, 0xac99, 0x0, 0x0);
        gbc.writeMem(0x8918, { 0x32 });
        gbc.writeMem(0xac99, { 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xdce, gbc.sp());
        EXPECT(0x8919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8918));
        EXPECT(0x2b, gbc.readMem(0xac99));
        // 32 0131
        gbc.setState(0x3c9a, 0x4c15, 0x6ad0, 0xd04e, 0x304a, 0xf518, 0x1, 0x1);
        gbc.writeMem(0x3c9a, { 0x32 });
        gbc.writeMem(0xf518, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4c15, gbc.sp());
        EXPECT(0x3c9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xf518));
        // 32 0132
        gbc.setState(0x9492, 0x8efa, 0x5b10, 0xf0d9, 0x4b3a, 0x9968, 0x0, 0x0);
        gbc.writeMem(0x9492, { 0x32 });
        gbc.writeMem(0x9968, { 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8efa, gbc.sp());
        EXPECT(0x9493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9492));
        EXPECT(0x5b, gbc.readMem(0x9968));
        // 32 0133
        gbc.setState(0xd152, 0xb9af, 0x2040, 0xccc5, 0x3f30, 0x9c0e, 0x1, 0x1);
        gbc.writeMem(0x9c0e, { 0x0 });
        gbc.writeMem(0xd152, { 0x32 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb9af, gbc.sp());
        EXPECT(0xd153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9c0e));
        EXPECT(0x32, gbc.readMem(0xd152));
        // 32 0135
        gbc.setState(0x9f5b, 0x8534, 0xc480, 0x9f2, 0x630e, 0xae1b, 0x1, 0x0);
        gbc.writeMem(0x9f5b, { 0x32 });
        gbc.writeMem(0xae1b, { 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8534, gbc.sp());
        EXPECT(0x9f5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9f5b));
        EXPECT(0xc4, gbc.readMem(0xae1b));
        // 32 0136
        gbc.setState(0xd920, 0xbd6b, 0xc0c0, 0x9f9f, 0x92e9, 0x9001, 0x1, 0x1);
        gbc.writeMem(0x9001, { 0x0 });
        gbc.writeMem(0xd920, { 0x32 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbd6b, gbc.sp());
        EXPECT(0xd921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x9001));
        EXPECT(0x32, gbc.readMem(0xd920));
        // 32 0137
        gbc.setState(0x8c72, 0x4dc3, 0x9220, 0x57b9, 0x7fa4, 0xde39, 0x1, 0x1);
        gbc.writeMem(0x8c72, { 0x32 });
        gbc.writeMem(0xde39, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4dc3, gbc.sp());
        EXPECT(0x8c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8c72));
        EXPECT(0x92, gbc.readMem(0xde39));
        // 32 0138
        gbc.setState(0xe794, 0xbb32, 0xc900, 0x9d05, 0x9e90, 0x93b9, 0x0, 0x1);
        gbc.writeMem(0x93b9, { 0x0 });
        gbc.writeMem(0xe794, { 0x32 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbb32, gbc.sp());
        EXPECT(0xe795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x93b9));
        EXPECT(0x32, gbc.readMem(0xe794));
        // 32 0139
        gbc.setState(0xc921, 0x2432, 0xf420, 0xe51b, 0x549e, 0xcf6d, 0x0, 0x0);
        gbc.writeMem(0xc921, { 0x32 });
        gbc.writeMem(0xcf6d, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2432, gbc.sp());
        EXPECT(0xc922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xc921));
        EXPECT(0xf4, gbc.readMem(0xcf6d));
        // 32 013B
        gbc.setState(0x36e, 0x5043, 0xe540, 0xf558, 0xbec8, 0xd6ce, 0x1, 0x0);
        gbc.writeMem(0x36e, { 0x32 });
        gbc.writeMem(0xd6ce, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5043, gbc.sp());
        EXPECT(0x36f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xd6ce));
        // 32 013C
        gbc.setState(0x192, 0xc8d1, 0xe000, 0xf61d, 0x5bfc, 0x8594, 0x1, 0x0);
        gbc.writeMem(0x192, { 0x32 });
        gbc.writeMem(0x8594, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc8d1, gbc.sp());
        EXPECT(0x193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x8594));
        // 32 0140
        gbc.setState(0x13f2, 0xda11, 0x9e80, 0xfd0, 0xf95c, 0xbba0, 0x1, 0x0);
        gbc.writeMem(0x13f2, { 0x32 });
        gbc.writeMem(0xbba0, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xda11, gbc.sp());
        EXPECT(0x13f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xbba0));
        // 32 0142
        gbc.setState(0x314b, 0x7571, 0x4270, 0x22de, 0xd6a3, 0xc2d9, 0x0, 0x0);
        gbc.writeMem(0x314b, { 0x32 });
        gbc.writeMem(0xc2d9, { 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7571, gbc.sp());
        EXPECT(0x314c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc2d9));
        // 32 0143
        gbc.setState(0xa27d, 0x9e04, 0xb160, 0xdd00, 0x8cef, 0xa0f2, 0x1, 0x0);
        gbc.writeMem(0xa0f2, { 0x0 });
        gbc.writeMem(0xa27d, { 0x32 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9e04, gbc.sp());
        EXPECT(0xa27e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xa0f2));
        EXPECT(0x32, gbc.readMem(0xa27d));
        // 32 0144
        gbc.setState(0x6578, 0x87a9, 0xcad0, 0x9b0c, 0x8285, 0xb023, 0x1, 0x0);
        gbc.writeMem(0x6578, { 0x32 });
        gbc.writeMem(0xb023, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x87a9, gbc.sp());
        EXPECT(0x6579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xb023));
        // 32 0149
        gbc.setState(0xc665, 0x792c, 0xeb0, 0x72cb, 0x8973, 0xb21b, 0x1, 0x1);
        gbc.writeMem(0xb21b, { 0x0 });
        gbc.writeMem(0xc665, { 0x32 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x792c, gbc.sp());
        EXPECT(0xc666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb21b));
        EXPECT(0x32, gbc.readMem(0xc665));
        // 32 014B
        gbc.setState(0x9f1a, 0xd3e6, 0x3f90, 0x599a, 0x60c4, 0xb460, 0x1, 0x1);
        gbc.writeMem(0x9f1a, { 0x32 });
        gbc.writeMem(0xb460, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd3e6, gbc.sp());
        EXPECT(0x9f1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9f1a));
        EXPECT(0x3f, gbc.readMem(0xb460));
        // 32 014C
        gbc.setState(0x5e86, 0x5304, 0x9540, 0x2de5, 0x1185, 0xb743, 0x1, 0x0);
        gbc.writeMem(0x5e86, { 0x32 });
        gbc.writeMem(0xb743, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5304, gbc.sp());
        EXPECT(0x5e87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb743));
        // 32 014F
        gbc.setState(0x1dfb, 0x2e03, 0xf9b0, 0xf71b, 0x5257, 0x91f3, 0x0, 0x0);
        gbc.writeMem(0x1dfb, { 0x32 });
        gbc.writeMem(0x91f3, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2e03, gbc.sp());
        EXPECT(0x1dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0x91f3));
        // 32 0150
        gbc.setState(0x8db7, 0x1f3e, 0x5c60, 0x63bf, 0x8de1, 0xa134, 0x1, 0x1);
        gbc.writeMem(0x8db7, { 0x32 });
        gbc.writeMem(0xa134, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1f3e, gbc.sp());
        EXPECT(0x8db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8db7));
        EXPECT(0x5c, gbc.readMem(0xa134));
        // 32 0151
        gbc.setState(0xd9b6, 0x88a6, 0x3bb0, 0x601e, 0x97e3, 0xe0b0, 0x1, 0x1);
        gbc.writeMem(0xd9b6, { 0x32 });
        gbc.writeMem(0xe0b0, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x88a6, gbc.sp());
        EXPECT(0xd9b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xd9b6));
        EXPECT(0x3b, gbc.readMem(0xe0b0));
        // 32 0153
        gbc.setState(0xd5a2, 0x1dc2, 0xf9d0, 0xdafc, 0x3289, 0xeab8, 0x0, 0x0);
        gbc.writeMem(0xd5a2, { 0x32 });
        gbc.writeMem(0xeab8, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1dc2, gbc.sp());
        EXPECT(0xd5a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xd5a2));
        EXPECT(0xf9, gbc.readMem(0xeab8));
        // 32 0155
        gbc.setState(0x282e, 0x800b, 0xd6e0, 0x1a59, 0xddcf, 0xd1a4, 0x1, 0x1);
        gbc.writeMem(0x282e, { 0x32 });
        gbc.writeMem(0xd1a4, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x800b, gbc.sp());
        EXPECT(0x282f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd1a4));
        // 32 0156
        gbc.setState(0x8a96, 0xe5cf, 0x9930, 0xa47, 0xc968, 0xf166, 0x1, 0x0);
        gbc.writeMem(0x8a96, { 0x32 });
        gbc.writeMem(0xf166, { 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe5cf, gbc.sp());
        EXPECT(0x8a97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8a96));
        EXPECT(0x99, gbc.readMem(0xf166));
        // 32 0158
        gbc.setState(0xc5d9, 0x5ab3, 0xa850, 0xffec, 0x5f01, 0x801d, 0x1, 0x1);
        gbc.writeMem(0x801d, { 0x0 });
        gbc.writeMem(0xc5d9, { 0x32 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5ab3, gbc.sp());
        EXPECT(0xc5da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0x801d));
        EXPECT(0x32, gbc.readMem(0xc5d9));
        // 32 0159
        gbc.setState(0x130, 0xf868, 0xa030, 0x3cd3, 0x9ba8, 0xd542, 0x0, 0x0);
        gbc.writeMem(0x130, { 0x32 });
        gbc.writeMem(0xd542, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf868, gbc.sp());
        EXPECT(0x131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd542));
        // 32 015B
        gbc.setState(0x6923, 0xe194, 0x1bb0, 0xcef6, 0x436a, 0xccf5, 0x1, 0x1);
        gbc.writeMem(0x6923, { 0x32 });
        gbc.writeMem(0xccf5, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe194, gbc.sp());
        EXPECT(0x6924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xccf5));
        // 32 0161
        gbc.setState(0x4dba, 0x5527, 0x90, 0x6d77, 0xf27, 0x92e2, 0x1, 0x1);
        gbc.writeMem(0x4dba, { 0x32 });
        gbc.writeMem(0x92e2, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5527, gbc.sp());
        EXPECT(0x4dbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x92e2));
        // 32 0162
        gbc.setState(0x14a0, 0xb8a7, 0xacd0, 0x28b9, 0xdca5, 0xc894, 0x1, 0x1);
        gbc.writeMem(0x14a0, { 0x32 });
        gbc.writeMem(0xc894, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb8a7, gbc.sp());
        EXPECT(0x14a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc894));
        // 32 0163
        gbc.setState(0x44a7, 0xa9f9, 0x93d0, 0x817f, 0x66ce, 0x8663, 0x0, 0x0);
        gbc.writeMem(0x44a7, { 0x32 });
        gbc.writeMem(0x8663, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa9f9, gbc.sp());
        EXPECT(0x44a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8663));
        // 32 0165
        gbc.setState(0xaa3d, 0xfa0e, 0x5190, 0x90ef, 0x36f1, 0xdad8, 0x0, 0x0);
        gbc.writeMem(0xaa3d, { 0x32 });
        gbc.writeMem(0xdad8, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfa0e, gbc.sp());
        EXPECT(0xaa3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xaa3d));
        EXPECT(0x51, gbc.readMem(0xdad8));
        // 32 0167
        gbc.setState(0x7cd6, 0x3278, 0x3310, 0x5a19, 0x5fc, 0x846b, 0x0, 0x1);
        gbc.writeMem(0x7cd6, { 0x32 });
        gbc.writeMem(0x846b, { 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3278, gbc.sp());
        EXPECT(0x7cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x846b));
        // 32 016B
        gbc.setState(0xcdd7, 0xf143, 0xd900, 0x11a4, 0xf9fa, 0x8235, 0x0, 0x1);
        gbc.writeMem(0x8235, { 0x0 });
        gbc.writeMem(0xcdd7, { 0x32 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf143, gbc.sp());
        EXPECT(0xcdd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8235));
        EXPECT(0x32, gbc.readMem(0xcdd7));
        // 32 0170
        gbc.setState(0x31fb, 0x976e, 0x1930, 0x8f36, 0xe521, 0xbf5a, 0x1, 0x1);
        gbc.writeMem(0x31fb, { 0x32 });
        gbc.writeMem(0xbf5a, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x976e, gbc.sp());
        EXPECT(0x31fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xbf5a));
        // 32 0171
        gbc.setState(0x55de, 0x2928, 0x9b40, 0x17a4, 0x9f0a, 0x8744, 0x1, 0x0);
        gbc.writeMem(0x55de, { 0x32 });
        gbc.writeMem(0x8744, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2928, gbc.sp());
        EXPECT(0x55df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8744));
        // 32 0172
        gbc.setState(0x57df, 0x6cea, 0x7870, 0x3ba3, 0x9513, 0xe593, 0x1, 0x0);
        gbc.writeMem(0x57df, { 0x32 });
        gbc.writeMem(0xe593, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6cea, gbc.sp());
        EXPECT(0x57e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe593));
        // 32 0174
        gbc.setState(0x1ea4, 0x2e6c, 0x3770, 0x47b5, 0x86e2, 0xe98b, 0x0, 0x1);
        gbc.writeMem(0x1ea4, { 0x32 });
        gbc.writeMem(0xe98b, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2e6c, gbc.sp());
        EXPECT(0x1ea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe98b));
        // 32 0175
        gbc.setState(0x45dc, 0xbea4, 0xa6f0, 0x6694, 0x16cf, 0xb104, 0x1, 0x0);
        gbc.writeMem(0x45dc, { 0x32 });
        gbc.writeMem(0xb104, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbea4, gbc.sp());
        EXPECT(0x45dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb104));
        // 32 0177
        gbc.setState(0xdd, 0xf09f, 0xb820, 0x8f54, 0x989d, 0xc874, 0x0, 0x1);
        gbc.writeMem(0xdd, { 0x32 });
        gbc.writeMem(0xc874, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf09f, gbc.sp());
        EXPECT(0xde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xc874));
        // 32 017C
        gbc.setState(0xe62f, 0xdaee, 0xb110, 0x9895, 0x46fe, 0xef7e, 0x1, 0x0);
        gbc.writeMem(0xe62f, { 0x32 });
        gbc.writeMem(0xef7e, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xdaee, gbc.sp());
        EXPECT(0xe630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xe62f));
        EXPECT(0xb1, gbc.readMem(0xef7e));
        // 32 017D
        gbc.setState(0x3017, 0x60e7, 0x74f0, 0x4e39, 0x12d6, 0xf425, 0x0, 0x0);
        gbc.writeMem(0x3017, { 0x32 });
        gbc.writeMem(0xf425, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x60e7, gbc.sp());
        EXPECT(0x3018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xf425));
        // 32 017E
        gbc.setState(0x9e5f, 0xf70f, 0x4780, 0xfecb, 0x7ad, 0xe030, 0x0, 0x0);
        gbc.writeMem(0x9e5f, { 0x32 });
        gbc.writeMem(0xe030, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf70f, gbc.sp());
        EXPECT(0x9e60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9e5f));
        EXPECT(0x47, gbc.readMem(0xe030));
        // 32 017F
        gbc.setState(0x63fa, 0xb410, 0x6860, 0xd395, 0x999c, 0xe048, 0x1, 0x1);
        gbc.writeMem(0x63fa, { 0x32 });
        gbc.writeMem(0xe048, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb410, gbc.sp());
        EXPECT(0x63fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xe048));
        // 32 0182
        gbc.setState(0xac88, 0xe610, 0xc3b0, 0xb845, 0x75f8, 0xff2b, 0x0, 0x0);
        gbc.writeMem(0xac88, { 0x32 });
        gbc.writeMem(0xff2b, { 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe610, gbc.sp());
        EXPECT(0xac89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xac88));
        EXPECT(0xc3, gbc.readMem(0xff2b));
        // 32 018C
        gbc.setState(0x2fd, 0xd229, 0xc270, 0x2a06, 0x75c3, 0x9a3c, 0x1, 0x0);
        gbc.writeMem(0x2fd, { 0x32 });
        gbc.writeMem(0x9a3c, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd229, gbc.sp());
        EXPECT(0x2fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9a3c));
        // 32 018F
        gbc.setState(0x58db, 0x8d65, 0xba00, 0x5abf, 0xc9fc, 0xfbd0, 0x0, 0x0);
        gbc.writeMem(0x58db, { 0x32 });
        gbc.writeMem(0xfbd0, { 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8d65, gbc.sp());
        EXPECT(0x58dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xfbd0));
        // 32 0191
        gbc.setState(0xe037, 0xe41, 0x76c0, 0x57a9, 0x9811, 0xd199, 0x0, 0x0);
        gbc.writeMem(0xd199, { 0x0 });
        gbc.writeMem(0xe037, { 0x32 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe41, gbc.sp());
        EXPECT(0xe038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xd199));
        EXPECT(0x32, gbc.readMem(0xe037));
        // 32 0192
        gbc.setState(0x8556, 0x1c57, 0xb00, 0x33a3, 0x2cd, 0xec78, 0x0, 0x0);
        gbc.writeMem(0x8556, { 0x32 });
        gbc.writeMem(0xec78, { 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1c57, gbc.sp());
        EXPECT(0x8557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8556));
        EXPECT(0xb, gbc.readMem(0xec78));
        // 32 0193
        gbc.setState(0xc6f5, 0xe508, 0xd540, 0x478, 0x9b36, 0xcbf4, 0x1, 0x0);
        gbc.writeMem(0xc6f5, { 0x32 });
        gbc.writeMem(0xcbf4, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe508, gbc.sp());
        EXPECT(0xc6f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xc6f5));
        EXPECT(0xd5, gbc.readMem(0xcbf4));
        // 32 0197
        gbc.setState(0x2b9c, 0x2f08, 0x2ca0, 0x7b29, 0xea7b, 0xd5f6, 0x0, 0x1);
        gbc.writeMem(0x2b9c, { 0x32 });
        gbc.writeMem(0xd5f6, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2f08, gbc.sp());
        EXPECT(0x2b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd5f6));
        // 32 0198
        gbc.setState(0xc4bb, 0x4c31, 0x1420, 0x8d78, 0x2258, 0xaf11, 0x0, 0x0);
        gbc.writeMem(0xaf11, { 0x0 });
        gbc.writeMem(0xc4bb, { 0x32 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4c31, gbc.sp());
        EXPECT(0xc4bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xaf11));
        EXPECT(0x32, gbc.readMem(0xc4bb));
        // 32 0199
        gbc.setState(0x903d, 0x75d5, 0x1de0, 0xd586, 0x5a1d, 0xb26f, 0x0, 0x1);
        gbc.writeMem(0x903d, { 0x32 });
        gbc.writeMem(0xb26f, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x75d5, gbc.sp());
        EXPECT(0x903e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x903d));
        EXPECT(0x1d, gbc.readMem(0xb26f));
        // 32 019A
        gbc.setState(0x157f, 0x831e, 0x70, 0x5b4c, 0x388b, 0xec35, 0x1, 0x0);
        gbc.writeMem(0x157f, { 0x32 });
        gbc.writeMem(0xec35, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x831e, gbc.sp());
        EXPECT(0x1580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xec35));
        // 32 019D
        gbc.setState(0x658e, 0xcadd, 0x50a0, 0xc7a9, 0x41f8, 0xe3fb, 0x0, 0x1);
        gbc.writeMem(0x658e, { 0x32 });
        gbc.writeMem(0xe3fb, { 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xcadd, gbc.sp());
        EXPECT(0x658f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe3fb));
        // 32 01A0
        gbc.setState(0x82dd, 0xb9c0, 0x51c0, 0x6eb5, 0x4c72, 0xfa75, 0x1, 0x1);
        gbc.writeMem(0x82dd, { 0x32 });
        gbc.writeMem(0xfa75, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb9c0, gbc.sp());
        EXPECT(0x82de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x82dd));
        EXPECT(0x51, gbc.readMem(0xfa75));
        // 32 01A1
        gbc.setState(0x561d, 0x7969, 0x71b0, 0x36ed, 0xf474, 0xc95b, 0x0, 0x0);
        gbc.writeMem(0x561d, { 0x32 });
        gbc.writeMem(0xc95b, { 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7969, gbc.sp());
        EXPECT(0x561e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xc95b));
        // 32 01A5
        gbc.setState(0x60df, 0x769d, 0x7790, 0x8b87, 0x8431, 0x9299, 0x0, 0x1);
        gbc.writeMem(0x60df, { 0x32 });
        gbc.writeMem(0x9299, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x769d, gbc.sp());
        EXPECT(0x60e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x9299));
        // 32 01A6
        gbc.setState(0x4ccb, 0x3ce4, 0xddb0, 0x53c, 0xff24, 0xd441, 0x1, 0x0);
        gbc.writeMem(0x4ccb, { 0x32 });
        gbc.writeMem(0xd441, { 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3ce4, gbc.sp());
        EXPECT(0x4ccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xd441));
        // 32 01A7
        gbc.setState(0x2266, 0xbaa4, 0xabb0, 0x61af, 0x1c6e, 0xaf08, 0x0, 0x0);
        gbc.writeMem(0x2266, { 0x32 });
        gbc.writeMem(0xaf08, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbaa4, gbc.sp());
        EXPECT(0x2267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xaf08));
        // 32 01A9
        gbc.setState(0x6afa, 0xf793, 0x7300, 0x1f20, 0x76e6, 0x8d6b, 0x1, 0x1);
        gbc.writeMem(0x6afa, { 0x32 });
        gbc.writeMem(0x8d6b, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf793, gbc.sp());
        EXPECT(0x6afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x8d6b));
        // 32 01AA
        gbc.setState(0x5e59, 0x7f09, 0x81f0, 0x65f1, 0x86f4, 0xd21e, 0x0, 0x0);
        gbc.writeMem(0x5e59, { 0x32 });
        gbc.writeMem(0xd21e, { 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7f09, gbc.sp());
        EXPECT(0x5e5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd21e));
        // 32 01AC
        gbc.setState(0x36d8, 0xd854, 0x7f60, 0x58ad, 0xecd2, 0x900d, 0x1, 0x0);
        gbc.writeMem(0x36d8, { 0x32 });
        gbc.writeMem(0x900d, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd854, gbc.sp());
        EXPECT(0x36d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x900d));
        // 32 01AD
        gbc.setState(0xbcc2, 0x62f3, 0x6d20, 0x13d7, 0xf521, 0x857c, 0x0, 0x1);
        gbc.writeMem(0x857c, { 0x0 });
        gbc.writeMem(0xbcc2, { 0x32 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x62f3, gbc.sp());
        EXPECT(0xbcc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x857c));
        EXPECT(0x32, gbc.readMem(0xbcc2));
        // 32 01AE
        gbc.setState(0xb083, 0xa928, 0xe6c0, 0x259a, 0x4941, 0x8020, 0x0, 0x1);
        gbc.writeMem(0x8020, { 0x0 });
        gbc.writeMem(0xb083, { 0x32 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa928, gbc.sp());
        EXPECT(0xb084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8020));
        EXPECT(0x32, gbc.readMem(0xb083));
        // 32 01B2
        gbc.setState(0x1d65, 0x1037, 0x4e50, 0xbb8c, 0xa645, 0xf263, 0x1, 0x0);
        gbc.writeMem(0x1d65, { 0x32 });
        gbc.writeMem(0xf263, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1037, gbc.sp());
        EXPECT(0x1d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xf263));
        // 32 01B3
        gbc.setState(0xac20, 0x6b35, 0x6110, 0x5377, 0x6dbe, 0xae9e, 0x0, 0x1);
        gbc.writeMem(0xac20, { 0x32 });
        gbc.writeMem(0xae9e, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6b35, gbc.sp());
        EXPECT(0xac21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xac20));
        EXPECT(0x61, gbc.readMem(0xae9e));
        // 32 01B9
        gbc.setState(0xd568, 0x105a, 0xc080, 0xb73a, 0x5c8e, 0xc43a, 0x1, 0x1);
        gbc.writeMem(0xc43a, { 0x0 });
        gbc.writeMem(0xd568, { 0x32 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x105a, gbc.sp());
        EXPECT(0xd569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xc43a));
        EXPECT(0x32, gbc.readMem(0xd568));
        // 32 01BD
        gbc.setState(0x18c0, 0xf58d, 0x5df0, 0x73e9, 0x8f79, 0x979d, 0x1, 0x1);
        gbc.writeMem(0x18c0, { 0x32 });
        gbc.writeMem(0x979d, { 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf58d, gbc.sp());
        EXPECT(0x18c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x979d));
        // 32 01C0
        gbc.setState(0x6815, 0xe5d, 0xb580, 0x8457, 0x78ff, 0xe07f, 0x0, 0x0);
        gbc.writeMem(0x6815, { 0x32 });
        gbc.writeMem(0xe07f, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe5d, gbc.sp());
        EXPECT(0x6816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe07f));
        // 32 01C1
        gbc.setState(0x196b, 0xc27, 0x7950, 0xc215, 0x691d, 0xa393, 0x1, 0x1);
        gbc.writeMem(0x196b, { 0x32 });
        gbc.writeMem(0xa393, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc27, gbc.sp());
        EXPECT(0x196c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xa393));
        // 32 01C2
        gbc.setState(0x2d4c, 0x71de, 0xd400, 0x405, 0x987d, 0xe118, 0x0, 0x0);
        gbc.writeMem(0x2d4c, { 0x32 });
        gbc.writeMem(0xe118, { 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x71de, gbc.sp());
        EXPECT(0x2d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe118));
        // 32 01C4
        gbc.setState(0xb1a2, 0x990d, 0x89c0, 0xc4d1, 0xd2c1, 0xc934, 0x0, 0x1);
        gbc.writeMem(0xb1a2, { 0x32 });
        gbc.writeMem(0xc934, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x990d, gbc.sp());
        EXPECT(0xb1a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xb1a2));
        EXPECT(0x89, gbc.readMem(0xc934));
        // 32 01C5
        gbc.setState(0x920, 0x4492, 0xf8d0, 0xd00d, 0xb6e6, 0xef07, 0x0, 0x1);
        gbc.writeMem(0x920, { 0x32 });
        gbc.writeMem(0xef07, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4492, gbc.sp());
        EXPECT(0x921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xef07));
        // 32 01C8
        gbc.setState(0xdfa1, 0xe21e, 0x4a20, 0xc896, 0xc313, 0xeb8d, 0x0, 0x1);
        gbc.writeMem(0xdfa1, { 0x32 });
        gbc.writeMem(0xeb8d, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe21e, gbc.sp());
        EXPECT(0xdfa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xdfa1));
        EXPECT(0x4a, gbc.readMem(0xeb8d));
        // 32 01CA
        gbc.setState(0xd8e4, 0xcb31, 0x6f70, 0xb92b, 0x7771, 0xa218, 0x1, 0x1);
        gbc.writeMem(0xa218, { 0x0 });
        gbc.writeMem(0xd8e4, { 0x32 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xcb31, gbc.sp());
        EXPECT(0xd8e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xa218));
        EXPECT(0x32, gbc.readMem(0xd8e4));
        // 32 01CB
        gbc.setState(0xa40a, 0x9ed, 0x44d0, 0xd48f, 0x7d4b, 0x8b3b, 0x0, 0x1);
        gbc.writeMem(0x8b3b, { 0x0 });
        gbc.writeMem(0xa40a, { 0x32 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9ed, gbc.sp());
        EXPECT(0xa40b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8b3b));
        EXPECT(0x32, gbc.readMem(0xa40a));
        // 32 01CC
        gbc.setState(0x65b4, 0x1e8c, 0xaee0, 0x71bb, 0xa6b1, 0xb920, 0x0, 0x0);
        gbc.writeMem(0x65b4, { 0x32 });
        gbc.writeMem(0xb920, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1e8c, gbc.sp());
        EXPECT(0x65b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xb920));
        // 32 01CD
        gbc.setState(0x99a2, 0xb228, 0xe2a0, 0xa437, 0x2834, 0x95c5, 0x1, 0x0);
        gbc.writeMem(0x95c5, { 0x0 });
        gbc.writeMem(0x99a2, { 0x32 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb228, gbc.sp());
        EXPECT(0x99a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x95c5));
        EXPECT(0x32, gbc.readMem(0x99a2));
        // 32 01CE
        gbc.setState(0x4d37, 0x8798, 0x7870, 0x6213, 0x76d5, 0xda51, 0x1, 0x0);
        gbc.writeMem(0x4d37, { 0x32 });
        gbc.writeMem(0xda51, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8798, gbc.sp());
        EXPECT(0x4d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xda51));
        // 32 01CF
        gbc.setState(0xb37b, 0x2ccf, 0xb740, 0x5ca6, 0xf4c6, 0xd4f6, 0x1, 0x0);
        gbc.writeMem(0xb37b, { 0x32 });
        gbc.writeMem(0xd4f6, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2ccf, gbc.sp());
        EXPECT(0xb37c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xb37b));
        EXPECT(0xb7, gbc.readMem(0xd4f6));
        // 32 01D0
        gbc.setState(0xd3e7, 0x6819, 0xf20, 0x4e63, 0xaebf, 0x9601, 0x1, 0x0);
        gbc.writeMem(0x9601, { 0x0 });
        gbc.writeMem(0xd3e7, { 0x32 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6819, gbc.sp());
        EXPECT(0xd3e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0x9601));
        EXPECT(0x32, gbc.readMem(0xd3e7));
        // 32 01D1
        gbc.setState(0x4b88, 0xee85, 0x8e10, 0x13ff, 0xc5c1, 0x8e4f, 0x0, 0x0);
        gbc.writeMem(0x4b88, { 0x32 });
        gbc.writeMem(0x8e4f, { 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xee85, gbc.sp());
        EXPECT(0x4b89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x8e4f));
        // 32 01D2
        gbc.setState(0xdc0b, 0x67d8, 0x1140, 0x19dc, 0x361e, 0x8ee0, 0x0, 0x0);
        gbc.writeMem(0x8ee0, { 0x0 });
        gbc.writeMem(0xdc0b, { 0x32 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x67d8, gbc.sp());
        EXPECT(0xdc0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x8ee0));
        EXPECT(0x32, gbc.readMem(0xdc0b));
        // 32 01D3
        gbc.setState(0x8e31, 0xfecd, 0x5360, 0x739b, 0x8369, 0x918a, 0x0, 0x1);
        gbc.writeMem(0x8e31, { 0x32 });
        gbc.writeMem(0x918a, { 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xfecd, gbc.sp());
        EXPECT(0x8e32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8e31));
        EXPECT(0x53, gbc.readMem(0x918a));
        // 32 01D4
        gbc.setState(0x5761, 0xf7b3, 0x8990, 0x2f54, 0x4abd, 0xeddd, 0x0, 0x1);
        gbc.writeMem(0x5761, { 0x32 });
        gbc.writeMem(0xeddd, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf7b3, gbc.sp());
        EXPECT(0x5762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xeddd));
        // 32 01D9
        gbc.setState(0xcd0b, 0xd4c2, 0x2c50, 0x4383, 0xa2f5, 0xa565, 0x1, 0x1);
        gbc.writeMem(0xa565, { 0x0 });
        gbc.writeMem(0xcd0b, { 0x32 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd4c2, gbc.sp());
        EXPECT(0xcd0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa565));
        EXPECT(0x32, gbc.readMem(0xcd0b));
        // 32 01DA
        gbc.setState(0xbeec, 0xeb81, 0xe110, 0x5e3, 0xb349, 0xe2da, 0x0, 0x1);
        gbc.writeMem(0xbeec, { 0x32 });
        gbc.writeMem(0xe2da, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xeb81, gbc.sp());
        EXPECT(0xbeed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xbeec));
        EXPECT(0xe1, gbc.readMem(0xe2da));
        // 32 01DE
        gbc.setState(0x43b2, 0xcc3d, 0x6e90, 0x3912, 0x3c3c, 0xbd33, 0x1, 0x1);
        gbc.writeMem(0x43b2, { 0x32 });
        gbc.writeMem(0xbd33, { 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xcc3d, gbc.sp());
        EXPECT(0x43b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xbd33));
        // 32 01DF
        gbc.setState(0xbfe6, 0x93ba, 0x1520, 0x4e6b, 0xc1d5, 0xb1b5, 0x1, 0x1);
        gbc.writeMem(0xb1b5, { 0x0 });
        gbc.writeMem(0xbfe6, { 0x32 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x93ba, gbc.sp());
        EXPECT(0xbfe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb1b5));
        EXPECT(0x32, gbc.readMem(0xbfe6));
        // 32 01E1
        gbc.setState(0x25cf, 0xcfed, 0xc3c0, 0xfe27, 0xcb5b, 0xd379, 0x0, 0x1);
        gbc.writeMem(0x25cf, { 0x32 });
        gbc.writeMem(0xd379, { 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcfed, gbc.sp());
        EXPECT(0x25d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xd379));
        // 32 01E3
        gbc.setState(0x5e8, 0x860b, 0x5e30, 0x81e6, 0x7923, 0xb609, 0x0, 0x1);
        gbc.writeMem(0x5e8, { 0x32 });
        gbc.writeMem(0xb609, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x860b, gbc.sp());
        EXPECT(0x5e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb609));
        // 32 01E4
        gbc.setState(0x3cda, 0x599e, 0x520, 0x2519, 0xa738, 0xf32d, 0x1, 0x1);
        gbc.writeMem(0x3cda, { 0x32 });
        gbc.writeMem(0xf32d, { 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x599e, gbc.sp());
        EXPECT(0x3cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xf32d));
        // 32 01E5
        gbc.setState(0x24a6, 0xe67e, 0x3440, 0x97ef, 0x7228, 0x995b, 0x1, 0x1);
        gbc.writeMem(0x24a6, { 0x32 });
        gbc.writeMem(0x995b, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe67e, gbc.sp());
        EXPECT(0x24a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x995b));
        // 32 01E6
        gbc.setState(0xb5d2, 0x598f, 0x6d50, 0x3f63, 0xe0c6, 0xfa79, 0x1, 0x0);
        gbc.writeMem(0xb5d2, { 0x32 });
        gbc.writeMem(0xfa79, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x598f, gbc.sp());
        EXPECT(0xb5d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xb5d2));
        EXPECT(0x6d, gbc.readMem(0xfa79));
        // 32 01EA
        gbc.setState(0x2992, 0xbb7a, 0xe9f0, 0x182, 0x7604, 0xd368, 0x0, 0x1);
        gbc.writeMem(0x2992, { 0x32 });
        gbc.writeMem(0xd368, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbb7a, gbc.sp());
        EXPECT(0x2993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd368));
        // 32 01EC
        gbc.setState(0x49c4, 0x37d6, 0xaec0, 0xde34, 0xf7c4, 0xe5d9, 0x0, 0x0);
        gbc.writeMem(0x49c4, { 0x32 });
        gbc.writeMem(0xe5d9, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x37d6, gbc.sp());
        EXPECT(0x49c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xe5d9));
        // 32 01F4
        gbc.setState(0x6177, 0x3013, 0xb550, 0xb931, 0xd913, 0xc446, 0x1, 0x1);
        gbc.writeMem(0x6177, { 0x32 });
        gbc.writeMem(0xc446, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3013, gbc.sp());
        EXPECT(0x6178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc446));
        // 32 01F6
        gbc.setState(0x73e0, 0x329f, 0xe140, 0x65ac, 0x9be2, 0x976b, 0x1, 0x1);
        gbc.writeMem(0x73e0, { 0x32 });
        gbc.writeMem(0x976b, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x329f, gbc.sp());
        EXPECT(0x73e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x976b));
        // 32 01F9
        gbc.setState(0xd8af, 0xd108, 0xe730, 0xa35e, 0xa9e7, 0x96c4, 0x0, 0x0);
        gbc.writeMem(0x96c4, { 0x0 });
        gbc.writeMem(0xd8af, { 0x32 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd108, gbc.sp());
        EXPECT(0xd8b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x96c4));
        EXPECT(0x32, gbc.readMem(0xd8af));
        // 32 01FA
        gbc.setState(0xaf38, 0xca36, 0x6a20, 0x7fcc, 0x7650, 0xe687, 0x0, 0x0);
        gbc.writeMem(0xaf38, { 0x32 });
        gbc.writeMem(0xe687, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xca36, gbc.sp());
        EXPECT(0xaf39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xaf38));
        EXPECT(0x6a, gbc.readMem(0xe687));
        // 32 01FF
        gbc.setState(0x4cf8, 0x34e6, 0xe1d0, 0xe8f, 0x7521, 0xa490, 0x1, 0x1);
        gbc.writeMem(0x4cf8, { 0x32 });
        gbc.writeMem(0xa490, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x34e6, gbc.sp());
        EXPECT(0x4cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xa490));
        // 32 0200
        gbc.setState(0x9073, 0x9989, 0x560, 0x5d0f, 0x827f, 0xc6ec, 0x0, 0x0);
        gbc.writeMem(0x9073, { 0x32 });
        gbc.writeMem(0xc6ec, { 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9989, gbc.sp());
        EXPECT(0x9074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9073));
        EXPECT(0x5, gbc.readMem(0xc6ec));
        // 32 0201
        gbc.setState(0xdd98, 0xb21e, 0xb0, 0xfb8e, 0xf13e, 0x4098, 0x1, 0x1);
        gbc.writeMem(0x4098, { 0x0 });
        gbc.writeMem(0xdd98, { 0x32 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb21e, gbc.sp());
        EXPECT(0xdd99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xdd98));
        // 32 0202
        gbc.setState(0xb99c, 0x34a3, 0xb010, 0xd0b4, 0x51a2, 0xffd5, 0x1, 0x0);
        gbc.writeMem(0xb99c, { 0x32 });
        gbc.writeMem(0xffd5, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x34a3, gbc.sp());
        EXPECT(0xb99d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xb99c));
        EXPECT(0xb0, gbc.readMem(0xffd5));
        // 32 0203
        gbc.setState(0x518, 0xe375, 0x1120, 0xcf1a, 0x8bbf, 0xda62, 0x0, 0x1);
        gbc.writeMem(0x518, { 0x32 });
        gbc.writeMem(0xda62, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe375, gbc.sp());
        EXPECT(0x519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xda62));
        // 32 0205
        gbc.setState(0x2b31, 0x6736, 0xc3d0, 0x4f13, 0x8383, 0xfaeb, 0x0, 0x1);
        gbc.writeMem(0x2b31, { 0x32 });
        gbc.writeMem(0xfaeb, { 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6736, gbc.sp());
        EXPECT(0x2b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xfaeb));
        // 32 0208
        gbc.setState(0xc20e, 0x4059, 0x25b0, 0xc449, 0xb077, 0xbff9, 0x0, 0x1);
        gbc.writeMem(0xbff9, { 0x0 });
        gbc.writeMem(0xc20e, { 0x32 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4059, gbc.sp());
        EXPECT(0xc20f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xbff9));
        EXPECT(0x32, gbc.readMem(0xc20e));
        // 32 0209
        gbc.setState(0x2361, 0xbae9, 0x4cc0, 0x92d4, 0xda82, 0xa832, 0x1, 0x0);
        gbc.writeMem(0x2361, { 0x32 });
        gbc.writeMem(0xa832, { 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbae9, gbc.sp());
        EXPECT(0x2362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xa832));
        // 32 020A
        gbc.setState(0x2a53, 0x1436, 0x3530, 0x45d3, 0xb74f, 0xc2b7, 0x0, 0x0);
        gbc.writeMem(0x2a53, { 0x32 });
        gbc.writeMem(0xc2b7, { 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1436, gbc.sp());
        EXPECT(0x2a54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xc2b7));
        // 32 020F
        gbc.setState(0x201d, 0xb2, 0x6a90, 0x6510, 0xf45, 0x9685, 0x0, 0x0);
        gbc.writeMem(0x201d, { 0x32 });
        gbc.writeMem(0x9685, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb2, gbc.sp());
        EXPECT(0x201e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9685));
        // 32 0212
        gbc.setState(0x83bd, 0x55c5, 0xe0, 0xb642, 0xaa81, 0xbbc0, 0x1, 0x1);
        gbc.writeMem(0x83bd, { 0x32 });
        gbc.writeMem(0xbbc0, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x55c5, gbc.sp());
        EXPECT(0x83be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x83bd));
        EXPECT(0x0, gbc.readMem(0xbbc0));
        // 32 0213
        gbc.setState(0x1f50, 0xd8df, 0xe00, 0x5029, 0xd058, 0xe5a6, 0x1, 0x0);
        gbc.writeMem(0x1f50, { 0x32 });
        gbc.writeMem(0xe5a6, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd8df, gbc.sp());
        EXPECT(0x1f51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe5a6));
        // 32 0214
        gbc.setState(0xc3bf, 0xbfb4, 0x1f50, 0x915e, 0xc5e5, 0xc69d, 0x0, 0x0);
        gbc.writeMem(0xc3bf, { 0x32 });
        gbc.writeMem(0xc69d, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbfb4, gbc.sp());
        EXPECT(0xc3c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xc3bf));
        EXPECT(0x1f, gbc.readMem(0xc69d));
        // 32 0215
        gbc.setState(0xcb9d, 0x35e2, 0xf810, 0x5234, 0x34d, 0x8833, 0x0, 0x0);
        gbc.writeMem(0x8833, { 0x0 });
        gbc.writeMem(0xcb9d, { 0x32 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x35e2, gbc.sp());
        EXPECT(0xcb9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8833));
        EXPECT(0x32, gbc.readMem(0xcb9d));
        // 32 0216
        gbc.setState(0x44d, 0xfead, 0x4a30, 0xe64a, 0x4980, 0xf144, 0x1, 0x1);
        gbc.writeMem(0x44d, { 0x32 });
        gbc.writeMem(0xf144, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xfead, gbc.sp());
        EXPECT(0x44e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xf144));
        // 32 0217
        gbc.setState(0x7dd1, 0x14ca, 0x6360, 0xe594, 0x99d1, 0x801c, 0x0, 0x1);
        gbc.writeMem(0x7dd1, { 0x32 });
        gbc.writeMem(0x801c, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x14ca, gbc.sp());
        EXPECT(0x7dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x801c));
        // 32 021A
        gbc.setState(0x962b, 0xf399, 0x9070, 0x5948, 0x129c, 0x977a, 0x0, 0x1);
        gbc.writeMem(0x962b, { 0x32 });
        gbc.writeMem(0x977a, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf399, gbc.sp());
        EXPECT(0x962c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x962b));
        EXPECT(0x90, gbc.readMem(0x977a));
        // 32 021D
        gbc.setState(0xa56d, 0x697c, 0x5be0, 0x4481, 0xaa31, 0x832d, 0x0, 0x0);
        gbc.writeMem(0x832d, { 0x0 });
        gbc.writeMem(0xa56d, { 0x32 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x697c, gbc.sp());
        EXPECT(0xa56e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x832d));
        EXPECT(0x32, gbc.readMem(0xa56d));
        // 32 021E
        gbc.setState(0x332a, 0x41e6, 0x7190, 0x5095, 0x52ee, 0xd51a, 0x1, 0x0);
        gbc.writeMem(0x332a, { 0x32 });
        gbc.writeMem(0xd51a, { 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x41e6, gbc.sp());
        EXPECT(0x332b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xd51a));
        // 32 0220
        gbc.setState(0xac35, 0x365c, 0x6050, 0x6d6b, 0x7b8, 0xe6c6, 0x1, 0x1);
        gbc.writeMem(0xac35, { 0x32 });
        gbc.writeMem(0xe6c6, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x365c, gbc.sp());
        EXPECT(0xac36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xac35));
        EXPECT(0x60, gbc.readMem(0xe6c6));
        // 32 0221
        gbc.setState(0x11ec, 0xbbf2, 0xc360, 0xcb2f, 0xb0ac, 0x9ad0, 0x1, 0x1);
        gbc.writeMem(0x11ec, { 0x32 });
        gbc.writeMem(0x9ad0, { 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbbf2, gbc.sp());
        EXPECT(0x11ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9ad0));
        // 32 0223
        gbc.setState(0xc84c, 0xcf9f, 0xae30, 0xe720, 0xea0b, 0xe1ee, 0x0, 0x1);
        gbc.writeMem(0xc84c, { 0x32 });
        gbc.writeMem(0xe1ee, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcf9f, gbc.sp());
        EXPECT(0xc84d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xc84c));
        EXPECT(0xae, gbc.readMem(0xe1ee));
        // 32 0226
        gbc.setState(0xc7a2, 0xf8c0, 0x9f00, 0x575b, 0xa5b3, 0xa84a, 0x0, 0x0);
        gbc.writeMem(0xa84a, { 0x0 });
        gbc.writeMem(0xc7a2, { 0x32 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf8c0, gbc.sp());
        EXPECT(0xc7a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa84a));
        EXPECT(0x32, gbc.readMem(0xc7a2));
        // 32 0227
        gbc.setState(0xd9c3, 0xc9be, 0x2640, 0xd108, 0xbc2c, 0xc0be, 0x1, 0x0);
        gbc.writeMem(0xc0be, { 0x0 });
        gbc.writeMem(0xd9c3, { 0x32 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc9be, gbc.sp());
        EXPECT(0xd9c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc0be));
        EXPECT(0x32, gbc.readMem(0xd9c3));
        // 32 0228
        gbc.setState(0xaa54, 0xabfa, 0x4b00, 0x6eed, 0x1c6c, 0xb5ec, 0x1, 0x0);
        gbc.writeMem(0xaa54, { 0x32 });
        gbc.writeMem(0xb5ec, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xabfa, gbc.sp());
        EXPECT(0xaa55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xaa54));
        EXPECT(0x4b, gbc.readMem(0xb5ec));
        // 32 0229
        gbc.setState(0x92c5, 0xfffb, 0x4a90, 0xc4fd, 0xe4e2, 0xf5dd, 0x1, 0x0);
        gbc.writeMem(0x92c5, { 0x32 });
        gbc.writeMem(0xf5dd, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfffb, gbc.sp());
        EXPECT(0x92c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x92c5));
        EXPECT(0x4a, gbc.readMem(0xf5dd));
        // 32 022B
        gbc.setState(0x81d3, 0xa01b, 0x3440, 0xafe7, 0xacef, 0xec24, 0x1, 0x1);
        gbc.writeMem(0x81d3, { 0x32 });
        gbc.writeMem(0xec24, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa01b, gbc.sp());
        EXPECT(0x81d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x81d3));
        EXPECT(0x34, gbc.readMem(0xec24));
        // 32 022C
        gbc.setState(0x7462, 0x99e, 0xca60, 0x2fe1, 0x5331, 0xe1e7, 0x0, 0x0);
        gbc.writeMem(0x7462, { 0x32 });
        gbc.writeMem(0xe1e7, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x99e, gbc.sp());
        EXPECT(0x7463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xe1e7));
        // 32 0231
        gbc.setState(0x358, 0x28d6, 0x1210, 0xf164, 0x3190, 0xa9e8, 0x1, 0x1);
        gbc.writeMem(0x358, { 0x32 });
        gbc.writeMem(0xa9e8, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x28d6, gbc.sp());
        EXPECT(0x359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xa9e8));
        // 32 0234
        gbc.setState(0x3d76, 0xcddc, 0x88f0, 0x8bd4, 0x9d9, 0x8dd7, 0x0, 0x1);
        gbc.writeMem(0x3d76, { 0x32 });
        gbc.writeMem(0x8dd7, { 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xcddc, gbc.sp());
        EXPECT(0x3d77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8dd7));
        // 32 0236
        gbc.setState(0x83e9, 0x25b5, 0x6350, 0x11de, 0xbec6, 0xbdeb, 0x1, 0x0);
        gbc.writeMem(0x83e9, { 0x32 });
        gbc.writeMem(0xbdeb, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x25b5, gbc.sp());
        EXPECT(0x83ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x83e9));
        EXPECT(0x63, gbc.readMem(0xbdeb));
        // 32 0238
        gbc.setState(0xccad, 0x917, 0x3b90, 0x3864, 0xc207, 0xca02, 0x0, 0x0);
        gbc.writeMem(0xca02, { 0x0 });
        gbc.writeMem(0xccad, { 0x32 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x917, gbc.sp());
        EXPECT(0xccae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xca02));
        EXPECT(0x32, gbc.readMem(0xccad));
        // 32 0239
        gbc.setState(0x32e5, 0x2e5e, 0xab40, 0xe436, 0x3cf1, 0xc4f7, 0x0, 0x1);
        gbc.writeMem(0x32e5, { 0x32 });
        gbc.writeMem(0xc4f7, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2e5e, gbc.sp());
        EXPECT(0x32e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xc4f7));
        // 32 023A
        gbc.setState(0x70ff, 0x2312, 0x1950, 0x815c, 0xbc72, 0x89d0, 0x0, 0x0);
        gbc.writeMem(0x70ff, { 0x32 });
        gbc.writeMem(0x89d0, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2312, gbc.sp());
        EXPECT(0x7100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x89d0));
        // 32 023B
        gbc.setState(0xad59, 0x790, 0x1550, 0xd483, 0x5074, 0xf6fe, 0x1, 0x0);
        gbc.writeMem(0xad59, { 0x32 });
        gbc.writeMem(0xf6fe, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x790, gbc.sp());
        EXPECT(0xad5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xad59));
        EXPECT(0x15, gbc.readMem(0xf6fe));
        // 32 023E
        gbc.setState(0x1387, 0x19b8, 0xa920, 0xc547, 0x54d, 0x9795, 0x1, 0x1);
        gbc.writeMem(0x1387, { 0x32 });
        gbc.writeMem(0x9795, { 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x19b8, gbc.sp());
        EXPECT(0x1388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x9795));
        // 32 0241
        gbc.setState(0x47ef, 0x4401, 0x2140, 0xa383, 0xd344, 0xc716, 0x0, 0x1);
        gbc.writeMem(0x47ef, { 0x32 });
        gbc.writeMem(0xc716, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4401, gbc.sp());
        EXPECT(0x47f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc716));
        // 32 0243
        gbc.setState(0x7e8d, 0xecec, 0x750, 0x72fd, 0xb1f3, 0x8b52, 0x0, 0x0);
        gbc.writeMem(0x7e8d, { 0x32 });
        gbc.writeMem(0x8b52, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xecec, gbc.sp());
        EXPECT(0x7e8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8b52));
        // 32 0244
        gbc.setState(0x6662, 0xb7d5, 0xa9d0, 0x220c, 0x94bb, 0x8d2a, 0x0, 0x0);
        gbc.writeMem(0x6662, { 0x32 });
        gbc.writeMem(0x8d2a, { 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb7d5, gbc.sp());
        EXPECT(0x6663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x8d2a));
        // 32 0247
        gbc.setState(0xdddf, 0x3d52, 0x6120, 0x3359, 0x36c4, 0xc1d8, 0x0, 0x1);
        gbc.writeMem(0xc1d8, { 0x0 });
        gbc.writeMem(0xdddf, { 0x32 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3d52, gbc.sp());
        EXPECT(0xdde0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc1d8));
        EXPECT(0x32, gbc.readMem(0xdddf));
        // 32 0248
        gbc.setState(0x904, 0x22ba, 0x4960, 0x4a98, 0x44a7, 0xefc4, 0x1, 0x0);
        gbc.writeMem(0x904, { 0x32 });
        gbc.writeMem(0xefc4, { 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x22ba, gbc.sp());
        EXPECT(0x905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xefc4));
        // 32 024A
        gbc.setState(0x5b73, 0x8cb4, 0xeb80, 0x2794, 0xe4fe, 0xc895, 0x0, 0x0);
        gbc.writeMem(0x5b73, { 0x32 });
        gbc.writeMem(0xc895, { 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8cb4, gbc.sp());
        EXPECT(0x5b74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xc895));
        // 32 024B
        gbc.setState(0x1cf5, 0x46f3, 0x5d0, 0xd08b, 0x2d3d, 0xbdb0, 0x0, 0x0);
        gbc.writeMem(0x1cf5, { 0x32 });
        gbc.writeMem(0xbdb0, { 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x46f3, gbc.sp());
        EXPECT(0x1cf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xbdb0));
        // 32 024D
        gbc.setState(0x8d1d, 0xe370, 0xad0, 0x127c, 0xb8aa, 0xbe2f, 0x0, 0x0);
        gbc.writeMem(0x8d1d, { 0x32 });
        gbc.writeMem(0xbe2f, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe370, gbc.sp());
        EXPECT(0x8d1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8d1d));
        EXPECT(0xa, gbc.readMem(0xbe2f));
        // 32 024E
        gbc.setState(0x8904, 0x3a9b, 0xaa60, 0x5cf3, 0xd0a8, 0x83b1, 0x0, 0x0);
        gbc.writeMem(0x83b1, { 0x0 });
        gbc.writeMem(0x8904, { 0x32 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3a9b, gbc.sp());
        EXPECT(0x8905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x83b1));
        EXPECT(0x32, gbc.readMem(0x8904));
        // 32 024F
        gbc.setState(0x8c35, 0x2884, 0xb0f0, 0x94a8, 0x6f2c, 0xf2bf, 0x0, 0x0);
        gbc.writeMem(0x8c35, { 0x32 });
        gbc.writeMem(0xf2bf, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2884, gbc.sp());
        EXPECT(0x8c36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8c35));
        EXPECT(0xb0, gbc.readMem(0xf2bf));
        // 32 0254
        gbc.setState(0xcbe0, 0x2f3a, 0xb050, 0xfc41, 0xbb98, 0x8455, 0x1, 0x0);
        gbc.writeMem(0x8455, { 0x0 });
        gbc.writeMem(0xcbe0, { 0x32 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2f3a, gbc.sp());
        EXPECT(0xcbe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8455));
        EXPECT(0x32, gbc.readMem(0xcbe0));
        // 32 0255
        gbc.setState(0xc73a, 0x9ce3, 0x1890, 0x56fb, 0x2c56, 0x8059, 0x0, 0x1);
        gbc.writeMem(0x8059, { 0x0 });
        gbc.writeMem(0xc73a, { 0x32 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9ce3, gbc.sp());
        EXPECT(0xc73b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x8059));
        EXPECT(0x32, gbc.readMem(0xc73a));
        // 32 0256
        gbc.setState(0x9a2c, 0xa982, 0x6d10, 0x697e, 0x9070, 0xd2aa, 0x1, 0x0);
        gbc.writeMem(0x9a2c, { 0x32 });
        gbc.writeMem(0xd2aa, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa982, gbc.sp());
        EXPECT(0x9a2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9a2c));
        EXPECT(0x6d, gbc.readMem(0xd2aa));
        // 32 0257
        gbc.setState(0x3a0a, 0xff40, 0x4b50, 0x510a, 0x8d37, 0x866d, 0x1, 0x0);
        gbc.writeMem(0x3a0a, { 0x32 });
        gbc.writeMem(0x866d, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xff40, gbc.sp());
        EXPECT(0x3a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x866d));
        // 32 0258
        gbc.setState(0xd52, 0xe081, 0xa5d0, 0x7b1a, 0xd7d0, 0x8277, 0x1, 0x0);
        gbc.writeMem(0xd52, { 0x32 });
        gbc.writeMem(0x8277, { 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe081, gbc.sp());
        EXPECT(0xd53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x8277));
        // 32 0259
        gbc.setState(0x9cb4, 0x18e5, 0xa0c0, 0x1f77, 0xbd51, 0xe10d, 0x0, 0x1);
        gbc.writeMem(0x9cb4, { 0x32 });
        gbc.writeMem(0xe10d, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x18e5, gbc.sp());
        EXPECT(0x9cb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9cb4));
        EXPECT(0xa0, gbc.readMem(0xe10d));
        // 32 025C
        gbc.setState(0x2796, 0xe909, 0xc7c0, 0xfe2c, 0x7a12, 0x811b, 0x1, 0x0);
        gbc.writeMem(0x2796, { 0x32 });
        gbc.writeMem(0x811b, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe909, gbc.sp());
        EXPECT(0x2797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x811b));
        // 32 025D
        gbc.setState(0x3365, 0xac18, 0xf8a0, 0xb763, 0xc01c, 0xa633, 0x0, 0x0);
        gbc.writeMem(0x3365, { 0x32 });
        gbc.writeMem(0xa633, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xac18, gbc.sp());
        EXPECT(0x3366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa633));
        // 32 025E
        gbc.setState(0xc70b, 0xe656, 0x3c70, 0x1655, 0x6968, 0xb77b, 0x0, 0x1);
        gbc.writeMem(0xb77b, { 0x0 });
        gbc.writeMem(0xc70b, { 0x32 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe656, gbc.sp());
        EXPECT(0xc70c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb77b));
        EXPECT(0x32, gbc.readMem(0xc70b));
        // 32 025F
        gbc.setState(0x3e2e, 0xcd9, 0xace0, 0x6cd4, 0x8a2b, 0x8926, 0x1, 0x0);
        gbc.writeMem(0x3e2e, { 0x32 });
        gbc.writeMem(0x8926, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xcd9, gbc.sp());
        EXPECT(0x3e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8926));
        // 32 0260
        gbc.setState(0xeb2f, 0x213d, 0x9340, 0x2ebf, 0x9f37, 0xd385, 0x0, 0x0);
        gbc.writeMem(0xd385, { 0x0 });
        gbc.writeMem(0xeb2f, { 0x32 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x213d, gbc.sp());
        EXPECT(0xeb30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xd385));
        EXPECT(0x32, gbc.readMem(0xeb2f));
        // 32 0265
        gbc.setState(0xa1d2, 0x2583, 0x7af0, 0x45a1, 0xf466, 0x935c, 0x1, 0x0);
        gbc.writeMem(0x935c, { 0x0 });
        gbc.writeMem(0xa1d2, { 0x32 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2583, gbc.sp());
        EXPECT(0xa1d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x935c));
        EXPECT(0x32, gbc.readMem(0xa1d2));
        // 32 0267
        gbc.setState(0x8ec0, 0x2408, 0xe220, 0xa27c, 0x21e9, 0xbb71, 0x1, 0x0);
        gbc.writeMem(0x8ec0, { 0x32 });
        gbc.writeMem(0xbb71, { 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2408, gbc.sp());
        EXPECT(0x8ec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8ec0));
        EXPECT(0xe2, gbc.readMem(0xbb71));
        // 32 0268
        gbc.setState(0xcd76, 0x37c2, 0xeaa0, 0xd3af, 0x47c8, 0xfd8d, 0x1, 0x1);
        gbc.writeMem(0xcd76, { 0x32 });
        gbc.writeMem(0xfd8d, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x37c2, gbc.sp());
        EXPECT(0xcd77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xcd76));
        EXPECT(0xea, gbc.readMem(0xfd8d));
        // 32 0269
        gbc.setState(0x835d, 0x8e74, 0xac0, 0x6451, 0x8f39, 0xae3f, 0x0, 0x0);
        gbc.writeMem(0x835d, { 0x32 });
        gbc.writeMem(0xae3f, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8e74, gbc.sp());
        EXPECT(0x835e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x835d));
        EXPECT(0xa, gbc.readMem(0xae3f));
        // 32 026B
        gbc.setState(0x4bac, 0x3935, 0xaae0, 0x1745, 0xef7c, 0xa6f5, 0x0, 0x1);
        gbc.writeMem(0x4bac, { 0x32 });
        gbc.writeMem(0xa6f5, { 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3935, gbc.sp());
        EXPECT(0x4bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa6f5));
        // 32 026C
        gbc.setState(0xdcde, 0x356a, 0x93b0, 0xfb71, 0xaefc, 0xc1e4, 0x1, 0x1);
        gbc.writeMem(0xc1e4, { 0x0 });
        gbc.writeMem(0xdcde, { 0x32 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x356a, gbc.sp());
        EXPECT(0xdcdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xc1e4));
        EXPECT(0x32, gbc.readMem(0xdcde));
        // 32 026D
        gbc.setState(0x518e, 0xb4e3, 0x3740, 0xa321, 0x6d70, 0xb031, 0x0, 0x1);
        gbc.writeMem(0x518e, { 0x32 });
        gbc.writeMem(0xb031, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb4e3, gbc.sp());
        EXPECT(0x518f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb031));
        // 32 026F
        gbc.setState(0xe16, 0x6747, 0xe310, 0x8785, 0x8e30, 0xe45f, 0x0, 0x0);
        gbc.writeMem(0xe16, { 0x32 });
        gbc.writeMem(0xe45f, { 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6747, gbc.sp());
        EXPECT(0xe17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xe45f));
        // 32 0270
        gbc.setState(0x6e4a, 0x3417, 0x3a0, 0xcfcc, 0x3409, 0x8558, 0x1, 0x0);
        gbc.writeMem(0x6e4a, { 0x32 });
        gbc.writeMem(0x8558, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3417, gbc.sp());
        EXPECT(0x6e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8558));
        // 32 0271
        gbc.setState(0x9d2e, 0x4108, 0x4e60, 0x94af, 0x96b3, 0xbcaf, 0x1, 0x1);
        gbc.writeMem(0x9d2e, { 0x32 });
        gbc.writeMem(0xbcaf, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4108, gbc.sp());
        EXPECT(0x9d2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9d2e));
        EXPECT(0x4e, gbc.readMem(0xbcaf));
        // 32 0272
        gbc.setState(0x1fbd, 0xdb, 0xd160, 0x305d, 0xc5f2, 0xcd00, 0x1, 0x0);
        gbc.writeMem(0x1fbd, { 0x32 });
        gbc.writeMem(0xcd00, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xdb, gbc.sp());
        EXPECT(0x1fbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xcd00));
        // 32 0273
        gbc.setState(0x4bc4, 0xab6f, 0x4a60, 0xa15f, 0x527b, 0xb1d9, 0x0, 0x0);
        gbc.writeMem(0x4bc4, { 0x32 });
        gbc.writeMem(0xb1d9, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xab6f, gbc.sp());
        EXPECT(0x4bc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xb1d9));
        // 32 0276
        gbc.setState(0xd83a, 0x7b39, 0xb940, 0xfe51, 0x1cae, 0xb32e, 0x0, 0x1);
        gbc.writeMem(0xb32e, { 0x0 });
        gbc.writeMem(0xd83a, { 0x32 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7b39, gbc.sp());
        EXPECT(0xd83b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb32e));
        EXPECT(0x32, gbc.readMem(0xd83a));
        // 32 0277
        gbc.setState(0xbe37, 0x10db, 0x9250, 0x969c, 0x9c1b, 0x925d, 0x1, 0x1);
        gbc.writeMem(0x925d, { 0x0 });
        gbc.writeMem(0xbe37, { 0x32 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x10db, gbc.sp());
        EXPECT(0xbe38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x925d));
        EXPECT(0x32, gbc.readMem(0xbe37));
        // 32 0278
        gbc.setState(0x4fba, 0x9c4, 0xba30, 0x7442, 0x4310, 0xeed4, 0x0, 0x0);
        gbc.writeMem(0x4fba, { 0x32 });
        gbc.writeMem(0xeed4, { 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9c4, gbc.sp());
        EXPECT(0x4fbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xeed4));
        // 32 027A
        gbc.setState(0x246d, 0x3127, 0x22f0, 0xc452, 0xb3de, 0xfc68, 0x1, 0x1);
        gbc.writeMem(0x246d, { 0x32 });
        gbc.writeMem(0xfc68, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3127, gbc.sp());
        EXPECT(0x246e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xfc68));
        // 32 027E
        gbc.setState(0x4a2c, 0x9154, 0x9df0, 0x772f, 0x8a5b, 0xf216, 0x0, 0x1);
        gbc.writeMem(0x4a2c, { 0x32 });
        gbc.writeMem(0xf216, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9154, gbc.sp());
        EXPECT(0x4a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xf216));
        // 32 027F
        gbc.setState(0xd8c, 0x2ff, 0xb140, 0xb838, 0xb5de, 0x9730, 0x1, 0x0);
        gbc.writeMem(0xd8c, { 0x32 });
        gbc.writeMem(0x9730, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2ff, gbc.sp());
        EXPECT(0xd8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x9730));
        // 32 0280
        gbc.setState(0xc9f7, 0x27ec, 0x41d0, 0xb33d, 0x37e3, 0xb5ac, 0x0, 0x1);
        gbc.writeMem(0xb5ac, { 0x0 });
        gbc.writeMem(0xc9f7, { 0x32 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x27ec, gbc.sp());
        EXPECT(0xc9f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xb5ac));
        EXPECT(0x32, gbc.readMem(0xc9f7));
        // 32 0281
        gbc.setState(0xe994, 0x187a, 0x2fb0, 0xf4ba, 0x31fc, 0x8100, 0x0, 0x1);
        gbc.writeMem(0x8100, { 0x0 });
        gbc.writeMem(0xe994, { 0x32 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x187a, gbc.sp());
        EXPECT(0xe995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8100));
        EXPECT(0x32, gbc.readMem(0xe994));
        // 32 0282
        gbc.setState(0xe16a, 0x68aa, 0xd830, 0xa7c5, 0x6e34, 0xc0ad, 0x1, 0x0);
        gbc.writeMem(0xc0ad, { 0x0 });
        gbc.writeMem(0xe16a, { 0x32 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x68aa, gbc.sp());
        EXPECT(0xe16b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xc0ad));
        EXPECT(0x32, gbc.readMem(0xe16a));
        // 32 0283
        gbc.setState(0x9b1, 0x5bbf, 0x3ad0, 0x8808, 0x3ca9, 0x8d89, 0x1, 0x0);
        gbc.writeMem(0x9b1, { 0x32 });
        gbc.writeMem(0x8d89, { 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5bbf, gbc.sp());
        EXPECT(0x9b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x8d89));
        // 32 0286
        gbc.setState(0x3952, 0xbb85, 0x6830, 0x69f4, 0x12e1, 0x8492, 0x0, 0x1);
        gbc.writeMem(0x3952, { 0x32 });
        gbc.writeMem(0x8492, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbb85, gbc.sp());
        EXPECT(0x3953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8492));
        // 32 0288
        gbc.setState(0xb033, 0x75ac, 0xd670, 0xbcc, 0xc31, 0xd3cf, 0x1, 0x0);
        gbc.writeMem(0xb033, { 0x32 });
        gbc.writeMem(0xd3cf, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x75ac, gbc.sp());
        EXPECT(0xb034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xb033));
        EXPECT(0xd6, gbc.readMem(0xd3cf));
        // 32 0289
        gbc.setState(0x3cab, 0xc94c, 0xe510, 0xe08a, 0xfa64, 0xaee6, 0x0, 0x0);
        gbc.writeMem(0x3cab, { 0x32 });
        gbc.writeMem(0xaee6, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc94c, gbc.sp());
        EXPECT(0x3cac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xaee6));
        // 32 028A
        gbc.setState(0x14ae, 0x19b0, 0xfe10, 0x21bf, 0xdead, 0x865b, 0x0, 0x1);
        gbc.writeMem(0x14ae, { 0x32 });
        gbc.writeMem(0x865b, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x19b0, gbc.sp());
        EXPECT(0x14af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x865b));
        // 32 028B
        gbc.setState(0xc30, 0xcc37, 0x2ff0, 0x2bc4, 0xb327, 0x9b38, 0x0, 0x1);
        gbc.writeMem(0xc30, { 0x32 });
        gbc.writeMem(0x9b38, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcc37, gbc.sp());
        EXPECT(0xc31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9b38));
        // 32 028C
        gbc.setState(0x2e81, 0xd1d8, 0x5da0, 0xac6c, 0x54cd, 0xfddd, 0x0, 0x0);
        gbc.writeMem(0x2e81, { 0x32 });
        gbc.writeMem(0xfddd, { 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd1d8, gbc.sp());
        EXPECT(0x2e82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xfddd));
        // 32 028F
        gbc.setState(0x1e2f, 0x8db0, 0x9e60, 0xe420, 0x6cd1, 0x988c, 0x1, 0x1);
        gbc.writeMem(0x1e2f, { 0x32 });
        gbc.writeMem(0x988c, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8db0, gbc.sp());
        EXPECT(0x1e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x988c));
        // 32 0290
        gbc.setState(0x7ede, 0x5182, 0x9390, 0xdf24, 0x9c3b, 0xa3f7, 0x0, 0x1);
        gbc.writeMem(0x7ede, { 0x32 });
        gbc.writeMem(0xa3f7, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5182, gbc.sp());
        EXPECT(0x7edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa3f7));
        // 32 0292
        gbc.setState(0xd305, 0xcdca, 0x3f50, 0xc2, 0x5bd7, 0x8f08, 0x1, 0x0);
        gbc.writeMem(0x8f08, { 0x0 });
        gbc.writeMem(0xd305, { 0x32 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xcdca, gbc.sp());
        EXPECT(0xd306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8f08));
        EXPECT(0x32, gbc.readMem(0xd305));
        // 32 0294
        gbc.setState(0x3d94, 0x247a, 0xd4d0, 0x9de8, 0x9b33, 0xdd9f, 0x1, 0x0);
        gbc.writeMem(0x3d94, { 0x32 });
        gbc.writeMem(0xdd9f, { 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x247a, gbc.sp());
        EXPECT(0x3d95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xdd9f));
        // 32 0295
        gbc.setState(0x81d, 0x283a, 0x48b0, 0x4aed, 0xc76f, 0xfe4d, 0x0, 0x0);
        gbc.writeMem(0x81d, { 0x32 });
        gbc.writeMem(0xfe4d, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x283a, gbc.sp());
        EXPECT(0x81e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xfe4d));
        // 32 0297
        gbc.setState(0xc001, 0x3a64, 0x3220, 0xe58a, 0x357d, 0x9faa, 0x0, 0x1);
        gbc.writeMem(0x9faa, { 0x0 });
        gbc.writeMem(0xc001, { 0x32 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3a64, gbc.sp());
        EXPECT(0xc002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9faa));
        EXPECT(0x32, gbc.readMem(0xc001));
        // 32 0299
        gbc.setState(0x564e, 0xd4e4, 0x5f90, 0xd483, 0xc8a1, 0x90f4, 0x1, 0x1);
        gbc.writeMem(0x564e, { 0x32 });
        gbc.writeMem(0x90f4, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd4e4, gbc.sp());
        EXPECT(0x564f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x90f4));
        // 32 029A
        gbc.setState(0x8b0f, 0x31e4, 0x42a0, 0xa3f, 0x83eb, 0xf96f, 0x0, 0x0);
        gbc.writeMem(0x8b0f, { 0x32 });
        gbc.writeMem(0xf96f, { 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x31e4, gbc.sp());
        EXPECT(0x8b10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8b0f));
        EXPECT(0x42, gbc.readMem(0xf96f));
        // 32 029B
        gbc.setState(0x8fd1, 0xa5ea, 0x39b0, 0x7bd1, 0x6543, 0xa2c9, 0x1, 0x1);
        gbc.writeMem(0x8fd1, { 0x32 });
        gbc.writeMem(0xa2c9, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa5ea, gbc.sp());
        EXPECT(0x8fd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8fd1));
        EXPECT(0x39, gbc.readMem(0xa2c9));
        // 32 029C
        gbc.setState(0x4aeb, 0xf7c0, 0x6cd0, 0x20d9, 0xa472, 0x82b7, 0x0, 0x0);
        gbc.writeMem(0x4aeb, { 0x32 });
        gbc.writeMem(0x82b7, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf7c0, gbc.sp());
        EXPECT(0x4aec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x82b7));
        // 32 02A1
        gbc.setState(0x2258, 0xcc4b, 0x96b0, 0x7f80, 0xbcf6, 0xba89, 0x1, 0x0);
        gbc.writeMem(0x2258, { 0x32 });
        gbc.writeMem(0xba89, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xcc4b, gbc.sp());
        EXPECT(0x2259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xba89));
        // 32 02A2
        gbc.setState(0xeb31, 0x2096, 0x2010, 0x7280, 0xce3a, 0xfea0, 0x1, 0x1);
        gbc.writeMem(0xeb31, { 0x32 });
        gbc.writeMem(0xfea0, { 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2096, gbc.sp());
        EXPECT(0xeb32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xeb31));
        EXPECT(0x20, gbc.readMem(0xfea0));
        // 32 02A4
        gbc.setState(0xa3c4, 0xc08f, 0xf6b0, 0x7c1b, 0x92ea, 0xde9e, 0x1, 0x0);
        gbc.writeMem(0xa3c4, { 0x32 });
        gbc.writeMem(0xde9e, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc08f, gbc.sp());
        EXPECT(0xa3c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xa3c4));
        EXPECT(0xf6, gbc.readMem(0xde9e));
        // 32 02A5
        gbc.setState(0x4252, 0xd021, 0xf4b0, 0xf46c, 0x2d10, 0x9100, 0x1, 0x1);
        gbc.writeMem(0x4252, { 0x32 });
        gbc.writeMem(0x9100, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd021, gbc.sp());
        EXPECT(0x4253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x9100));
        // 32 02A7
        gbc.setState(0xbe8b, 0xb3f9, 0x4b90, 0xe2b9, 0x466e, 0xa5c7, 0x1, 0x1);
        gbc.writeMem(0xa5c7, { 0x0 });
        gbc.writeMem(0xbe8b, { 0x32 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb3f9, gbc.sp());
        EXPECT(0xbe8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa5c7));
        EXPECT(0x32, gbc.readMem(0xbe8b));
        // 32 02A8
        gbc.setState(0xe003, 0x43f6, 0xfe80, 0x437f, 0x32f1, 0xc218, 0x1, 0x1);
        gbc.writeMem(0xc218, { 0x0 });
        gbc.writeMem(0xe003, { 0x32 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x43f6, gbc.sp());
        EXPECT(0xe004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc218));
        EXPECT(0x32, gbc.readMem(0xe003));
        // 32 02A9
        gbc.setState(0xba5b, 0x452e, 0x5160, 0x2f9f, 0xad91, 0xd914, 0x0, 0x1);
        gbc.writeMem(0xba5b, { 0x32 });
        gbc.writeMem(0xd914, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x452e, gbc.sp());
        EXPECT(0xba5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xba5b));
        EXPECT(0x51, gbc.readMem(0xd914));
        // 32 02AA
        gbc.setState(0x16ff, 0x3db4, 0xf4e0, 0x6d8a, 0xeaab, 0x936d, 0x0, 0x0);
        gbc.writeMem(0x16ff, { 0x32 });
        gbc.writeMem(0x936d, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3db4, gbc.sp());
        EXPECT(0x1700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x936d));
        // 32 02AE
        gbc.setState(0x3da, 0x8048, 0xb310, 0x3197, 0x5ebe, 0x8a35, 0x1, 0x1);
        gbc.writeMem(0x3da, { 0x32 });
        gbc.writeMem(0x8a35, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8048, gbc.sp());
        EXPECT(0x3db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8a35));
        // 32 02B1
        gbc.setState(0xa899, 0xb24, 0xa8c0, 0xff49, 0x9fc4, 0xf4c1, 0x0, 0x1);
        gbc.writeMem(0xa899, { 0x32 });
        gbc.writeMem(0xf4c1, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb24, gbc.sp());
        EXPECT(0xa89a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xa899));
        EXPECT(0xa8, gbc.readMem(0xf4c1));
        // 32 02B5
        gbc.setState(0x5e35, 0x6271, 0xe320, 0x5c83, 0xca97, 0xb85b, 0x0, 0x1);
        gbc.writeMem(0x5e35, { 0x32 });
        gbc.writeMem(0xb85b, { 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6271, gbc.sp());
        EXPECT(0x5e36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xb85b));
        // 32 02B7
        gbc.setState(0x5f61, 0x2223, 0x2a60, 0xa5ca, 0x153d, 0xbc5d, 0x1, 0x0);
        gbc.writeMem(0x5f61, { 0x32 });
        gbc.writeMem(0xbc5d, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2223, gbc.sp());
        EXPECT(0x5f62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xbc5d));
        // 32 02B8
        gbc.setState(0x528b, 0xd2b5, 0xc760, 0xfefe, 0xea92, 0xa71a, 0x1, 0x1);
        gbc.writeMem(0x528b, { 0x32 });
        gbc.writeMem(0xa71a, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd2b5, gbc.sp());
        EXPECT(0x528c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xa71a));
        // 32 02B9
        gbc.setState(0xd706, 0x6957, 0x76c0, 0x5fdf, 0xb79, 0xfac8, 0x0, 0x1);
        gbc.writeMem(0xd706, { 0x32 });
        gbc.writeMem(0xfac8, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6957, gbc.sp());
        EXPECT(0xd707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xd706));
        EXPECT(0x76, gbc.readMem(0xfac8));
        // 32 02BF
        gbc.setState(0xe166, 0x3f56, 0xdfd0, 0xf577, 0x444a, 0xab15, 0x0, 0x1);
        gbc.writeMem(0xab15, { 0x0 });
        gbc.writeMem(0xe166, { 0x32 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3f56, gbc.sp());
        EXPECT(0xe167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xab15));
        EXPECT(0x32, gbc.readMem(0xe166));
        // 32 02C1
        gbc.setState(0x2ac7, 0xad55, 0x7010, 0x3868, 0x9fcc, 0xb73a, 0x1, 0x1);
        gbc.writeMem(0x2ac7, { 0x32 });
        gbc.writeMem(0xb73a, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xad55, gbc.sp());
        EXPECT(0x2ac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xb73a));
        // 32 02C3
        gbc.setState(0x1ed5, 0xa66b, 0x4280, 0x2c82, 0x1dc7, 0x9052, 0x1, 0x0);
        gbc.writeMem(0x1ed5, { 0x32 });
        gbc.writeMem(0x9052, { 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa66b, gbc.sp());
        EXPECT(0x1ed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9052));
        // 32 02C4
        gbc.setState(0x513f, 0xe9f6, 0x1f70, 0x92e7, 0x8bfe, 0xb288, 0x1, 0x0);
        gbc.writeMem(0x513f, { 0x32 });
        gbc.writeMem(0xb288, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe9f6, gbc.sp());
        EXPECT(0x5140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xb288));
        // 32 02C8
        gbc.setState(0x4b49, 0x656e, 0x8fd0, 0x743a, 0xdad, 0x9a0b, 0x1, 0x1);
        gbc.writeMem(0x4b49, { 0x32 });
        gbc.writeMem(0x9a0b, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x656e, gbc.sp());
        EXPECT(0x4b4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9a0b));
        // 32 02CB
        gbc.setState(0x5519, 0x6638, 0xf9d0, 0x9fe7, 0x9517, 0xb5a8, 0x1, 0x1);
        gbc.writeMem(0x5519, { 0x32 });
        gbc.writeMem(0xb5a8, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6638, gbc.sp());
        EXPECT(0x551a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xb5a8));
        // 32 02CC
        gbc.setState(0xac59, 0xc6c, 0x5190, 0xd62a, 0xfe44, 0xbf6e, 0x1, 0x1);
        gbc.writeMem(0xac59, { 0x32 });
        gbc.writeMem(0xbf6e, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc6c, gbc.sp());
        EXPECT(0xac5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xac59));
        EXPECT(0x51, gbc.readMem(0xbf6e));
        // 32 02CF
        gbc.setState(0x7d83, 0x7531, 0x30b0, 0x15c9, 0xa289, 0xa6c0, 0x1, 0x0);
        gbc.writeMem(0x7d83, { 0x32 });
        gbc.writeMem(0xa6c0, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7531, gbc.sp());
        EXPECT(0x7d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xa6c0));
        // 32 02D0
        gbc.setState(0xb300, 0xbba5, 0x5200, 0x87a8, 0x217d, 0xea5b, 0x1, 0x0);
        gbc.writeMem(0xb300, { 0x32 });
        gbc.writeMem(0xea5b, { 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbba5, gbc.sp());
        EXPECT(0xb301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xb300));
        EXPECT(0x52, gbc.readMem(0xea5b));
        // 32 02D3
        gbc.setState(0x50cf, 0xc25e, 0x21f0, 0x5144, 0x7cef, 0xd738, 0x0, 0x1);
        gbc.writeMem(0x50cf, { 0x32 });
        gbc.writeMem(0xd738, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc25e, gbc.sp());
        EXPECT(0x50d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd738));
        // 32 02D9
        gbc.setState(0xd7eb, 0xf8ca, 0xf900, 0x76ef, 0x1322, 0xf862, 0x0, 0x0);
        gbc.writeMem(0xd7eb, { 0x32 });
        gbc.writeMem(0xf862, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf8ca, gbc.sp());
        EXPECT(0xd7ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xd7eb));
        EXPECT(0xf9, gbc.readMem(0xf862));
        // 32 02DB
        gbc.setState(0xc27e, 0xd5de, 0xe0f0, 0xcac9, 0x60bd, 0xb4d2, 0x0, 0x0);
        gbc.writeMem(0xb4d2, { 0x0 });
        gbc.writeMem(0xc27e, { 0x32 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd5de, gbc.sp());
        EXPECT(0xc27f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb4d2));
        EXPECT(0x32, gbc.readMem(0xc27e));
        // 32 02DC
        gbc.setState(0xa8b8, 0x655c, 0xbc10, 0x3965, 0x2010, 0xe978, 0x1, 0x1);
        gbc.writeMem(0xa8b8, { 0x32 });
        gbc.writeMem(0xe978, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x655c, gbc.sp());
        EXPECT(0xa8b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xa8b8));
        EXPECT(0xbc, gbc.readMem(0xe978));
        // 32 02DD
        gbc.setState(0x97a8, 0x14f4, 0x3f50, 0xaa94, 0x8c3, 0xae98, 0x0, 0x1);
        gbc.writeMem(0x97a8, { 0x32 });
        gbc.writeMem(0xae98, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x14f4, gbc.sp());
        EXPECT(0x97a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x97a8));
        EXPECT(0x3f, gbc.readMem(0xae98));
        // 32 02DE
        gbc.setState(0xcc71, 0x3d3d, 0x4f90, 0x3940, 0x3f36, 0xc683, 0x0, 0x1);
        gbc.writeMem(0xc683, { 0x0 });
        gbc.writeMem(0xcc71, { 0x32 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3d3d, gbc.sp());
        EXPECT(0xcc72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xc683));
        EXPECT(0x32, gbc.readMem(0xcc71));
        // 32 02DF
        gbc.setState(0x7637, 0xc671, 0x8ed0, 0x22c5, 0x6024, 0x9f4f, 0x0, 0x0);
        gbc.writeMem(0x7637, { 0x32 });
        gbc.writeMem(0x9f4f, { 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc671, gbc.sp());
        EXPECT(0x7638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x9f4f));
        // 32 02E5
        gbc.setState(0xe4fe, 0x74, 0xe310, 0x1573, 0x441a, 0xbd73, 0x0, 0x1);
        gbc.writeMem(0xbd73, { 0x0 });
        gbc.writeMem(0xe4fe, { 0x32 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x74, gbc.sp());
        EXPECT(0xe4ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xbd73));
        EXPECT(0x32, gbc.readMem(0xe4fe));
        // 32 02E8
        gbc.setState(0xedf4, 0x4c0, 0x820, 0x6bdd, 0x5576, 0xde48, 0x1, 0x0);
        gbc.writeMem(0xde48, { 0x0 });
        gbc.writeMem(0xedf4, { 0x32 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4c0, gbc.sp());
        EXPECT(0xedf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xde48));
        EXPECT(0x32, gbc.readMem(0xedf4));
        // 32 02E9
        gbc.setState(0x82fa, 0xb462, 0x2580, 0xba74, 0x264, 0xb8e5, 0x1, 0x1);
        gbc.writeMem(0x82fa, { 0x32 });
        gbc.writeMem(0xb8e5, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb462, gbc.sp());
        EXPECT(0x82fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x82fa));
        EXPECT(0x25, gbc.readMem(0xb8e5));
        // 32 02EA
        gbc.setState(0x6f70, 0xf610, 0xee50, 0x32f5, 0xe6bd, 0xe752, 0x1, 0x1);
        gbc.writeMem(0x6f70, { 0x32 });
        gbc.writeMem(0xe752, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf610, gbc.sp());
        EXPECT(0x6f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xe752));
        // 32 02EE
        gbc.setState(0x3877, 0xd9a2, 0xb540, 0x4741, 0x349, 0x8867, 0x1, 0x0);
        gbc.writeMem(0x3877, { 0x32 });
        gbc.writeMem(0x8867, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd9a2, gbc.sp());
        EXPECT(0x3878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x8867));
        // 32 02EF
        gbc.setState(0x3ee6, 0xedb0, 0x8190, 0x3ba7, 0x7545, 0xd902, 0x0, 0x1);
        gbc.writeMem(0x3ee6, { 0x32 });
        gbc.writeMem(0xd902, { 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xedb0, gbc.sp());
        EXPECT(0x3ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd902));
        // 32 02F2
        gbc.setState(0x157b, 0x4c19, 0x56f0, 0x40b6, 0x25fc, 0xe4a8, 0x1, 0x1);
        gbc.writeMem(0x157b, { 0x32 });
        gbc.writeMem(0xe4a8, { 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4c19, gbc.sp());
        EXPECT(0x157c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xe4a8));
        // 32 02F4
        gbc.setState(0xc2f2, 0xdb02, 0x5890, 0x813b, 0x2d1d, 0xbe01, 0x0, 0x1);
        gbc.writeMem(0xbe01, { 0x0 });
        gbc.writeMem(0xc2f2, { 0x32 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdb02, gbc.sp());
        EXPECT(0xc2f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbe01));
        EXPECT(0x32, gbc.readMem(0xc2f2));
        // 32 02F5
        gbc.setState(0x3245, 0xc66b, 0xcf90, 0x2480, 0xf093, 0xf29d, 0x1, 0x0);
        gbc.writeMem(0x3245, { 0x32 });
        gbc.writeMem(0xf29d, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc66b, gbc.sp());
        EXPECT(0x3246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xf29d));
        // 32 02FA
        gbc.setState(0x1954, 0x1488, 0xfce0, 0x1230, 0xba37, 0x8ba0, 0x1, 0x1);
        gbc.writeMem(0x1954, { 0x32 });
        gbc.writeMem(0x8ba0, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1488, gbc.sp());
        EXPECT(0x1955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0x8ba0));
        // 32 0301
        gbc.setState(0x45e9, 0xca4f, 0xfa60, 0x3b53, 0xa111, 0xf2af, 0x0, 0x0);
        gbc.writeMem(0x45e9, { 0x32 });
        gbc.writeMem(0xf2af, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xca4f, gbc.sp());
        EXPECT(0x45ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xf2af));
        // 32 0303
        gbc.setState(0xcadb, 0x8763, 0x8bf0, 0x6dc, 0x20ca, 0xf811, 0x0, 0x1);
        gbc.writeMem(0xcadb, { 0x32 });
        gbc.writeMem(0xf811, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8763, gbc.sp());
        EXPECT(0xcadc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xcadb));
        EXPECT(0x8b, gbc.readMem(0xf811));
        // 32 0304
        gbc.setState(0xeb64, 0x2dc, 0xeca0, 0xb702, 0xddbe, 0x9599, 0x0, 0x1);
        gbc.writeMem(0x9599, { 0x0 });
        gbc.writeMem(0xeb64, { 0x32 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2dc, gbc.sp());
        EXPECT(0xeb65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x9599));
        EXPECT(0x32, gbc.readMem(0xeb64));
        // 32 0306
        gbc.setState(0x92cc, 0x4d0c, 0x9ee0, 0xefd2, 0x942, 0x97b4, 0x1, 0x0);
        gbc.writeMem(0x92cc, { 0x32 });
        gbc.writeMem(0x97b4, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4d0c, gbc.sp());
        EXPECT(0x92cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x92cc));
        EXPECT(0x9e, gbc.readMem(0x97b4));
        // 32 0308
        gbc.setState(0xa6f0, 0x141a, 0x6810, 0xe657, 0xfb57, 0xdc42, 0x0, 0x1);
        gbc.writeMem(0xa6f0, { 0x32 });
        gbc.writeMem(0xdc42, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x141a, gbc.sp());
        EXPECT(0xa6f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xa6f0));
        EXPECT(0x68, gbc.readMem(0xdc42));
        // 32 030A
        gbc.setState(0x9910, 0xe513, 0x12c0, 0x68e4, 0x616a, 0xfd64, 0x1, 0x0);
        gbc.writeMem(0x9910, { 0x32 });
        gbc.writeMem(0xfd64, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe513, gbc.sp());
        EXPECT(0x9911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9910));
        EXPECT(0x12, gbc.readMem(0xfd64));
        // 32 030D
        gbc.setState(0xc9fb, 0xe0d6, 0x3f20, 0x58ce, 0x10fa, 0x931d, 0x0, 0x0);
        gbc.writeMem(0x931d, { 0x0 });
        gbc.writeMem(0xc9fb, { 0x32 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe0d6, gbc.sp());
        EXPECT(0xc9fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x931d));
        EXPECT(0x32, gbc.readMem(0xc9fb));
        // 32 030F
        gbc.setState(0x4721, 0xa659, 0x4990, 0xf675, 0x5fc5, 0x95ae, 0x0, 0x0);
        gbc.writeMem(0x4721, { 0x32 });
        gbc.writeMem(0x95ae, { 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa659, gbc.sp());
        EXPECT(0x4722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x95ae));
        // 32 0312
        gbc.setState(0xa1fd, 0x160, 0x24e0, 0xf282, 0x4275, 0x80f2, 0x0, 0x1);
        gbc.writeMem(0x80f2, { 0x0 });
        gbc.writeMem(0xa1fd, { 0x32 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x160, gbc.sp());
        EXPECT(0xa1fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x80f2));
        EXPECT(0x32, gbc.readMem(0xa1fd));
        // 32 0314
        gbc.setState(0x2c07, 0x3227, 0x4000, 0xa3c6, 0x7f66, 0xc8d5, 0x0, 0x0);
        gbc.writeMem(0x2c07, { 0x32 });
        gbc.writeMem(0xc8d5, { 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3227, gbc.sp());
        EXPECT(0x2c08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xc8d5));
        // 32 0316
        gbc.setState(0xd230, 0xaa7b, 0x820, 0xf80f, 0xf9a4, 0xaaeb, 0x0, 0x0);
        gbc.writeMem(0xaaeb, { 0x0 });
        gbc.writeMem(0xd230, { 0x32 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xaa7b, gbc.sp());
        EXPECT(0xd231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xaaeb));
        EXPECT(0x32, gbc.readMem(0xd230));
        // 32 0317
        gbc.setState(0x268a, 0x941, 0xbd90, 0xd682, 0x2f29, 0x984a, 0x1, 0x0);
        gbc.writeMem(0x268a, { 0x32 });
        gbc.writeMem(0x984a, { 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x941, gbc.sp());
        EXPECT(0x268b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x984a));
        // 32 0319
        gbc.setState(0x7c53, 0xda0c, 0x81c0, 0x99b4, 0x234b, 0xb5a9, 0x0, 0x0);
        gbc.writeMem(0x7c53, { 0x32 });
        gbc.writeMem(0xb5a9, { 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xda0c, gbc.sp());
        EXPECT(0x7c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb5a9));
        // 32 031A
        gbc.setState(0x7b25, 0x8c50, 0x1840, 0xd4e5, 0x90ab, 0xfde5, 0x0, 0x1);
        gbc.writeMem(0x7b25, { 0x32 });
        gbc.writeMem(0xfde5, { 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8c50, gbc.sp());
        EXPECT(0x7b26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xfde5));
        // 32 031B
        gbc.setState(0xa5ae, 0x7a1c, 0x6840, 0x92e0, 0xbd79, 0xc260, 0x1, 0x1);
        gbc.writeMem(0xa5ae, { 0x32 });
        gbc.writeMem(0xc260, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7a1c, gbc.sp());
        EXPECT(0xa5af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xa5ae));
        EXPECT(0x68, gbc.readMem(0xc260));
        // 32 031C
        gbc.setState(0x236b, 0x49ab, 0xe970, 0x795a, 0x2665, 0xf037, 0x0, 0x0);
        gbc.writeMem(0x236b, { 0x32 });
        gbc.writeMem(0xf037, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x49ab, gbc.sp());
        EXPECT(0x236c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xf037));
        // 32 0320
        gbc.setState(0xeb7c, 0xed34, 0xb060, 0x6b9, 0xaeb9, 0xd8da, 0x0, 0x1);
        gbc.writeMem(0xd8da, { 0x0 });
        gbc.writeMem(0xeb7c, { 0x32 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xed34, gbc.sp());
        EXPECT(0xeb7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd8da));
        EXPECT(0x32, gbc.readMem(0xeb7c));
        // 32 0323
        gbc.setState(0x90b7, 0x2232, 0x3fa0, 0xdcae, 0x3fe, 0xc44d, 0x0, 0x0);
        gbc.writeMem(0x90b7, { 0x32 });
        gbc.writeMem(0xc44d, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2232, gbc.sp());
        EXPECT(0x90b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x90b7));
        EXPECT(0x3f, gbc.readMem(0xc44d));
        // 32 0324
        gbc.setState(0xa7b8, 0x24f5, 0x7120, 0x317, 0x4d51, 0xef94, 0x0, 0x1);
        gbc.writeMem(0xa7b8, { 0x32 });
        gbc.writeMem(0xef94, { 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x24f5, gbc.sp());
        EXPECT(0xa7b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xa7b8));
        EXPECT(0x71, gbc.readMem(0xef94));
        // 32 0327
        gbc.setState(0x1d95, 0xf1db, 0xb0, 0x17b8, 0x9a76, 0x6a55, 0x0, 0x1);
        gbc.writeMem(0x1d95, { 0x32 });
        gbc.writeMem(0x6a55, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf1db, gbc.sp());
        EXPECT(0x1d96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 32 0329
        gbc.setState(0x229d, 0xbb2b, 0x5ea0, 0x17e5, 0x4d04, 0xa827, 0x1, 0x0);
        gbc.writeMem(0x229d, { 0x32 });
        gbc.writeMem(0xa827, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbb2b, gbc.sp());
        EXPECT(0x229e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa827));
        // 32 032B
        gbc.setState(0xd7dc, 0x1b34, 0x560, 0xfd38, 0xea0a, 0xc5b7, 0x0, 0x0);
        gbc.writeMem(0xc5b7, { 0x0 });
        gbc.writeMem(0xd7dc, { 0x32 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1b34, gbc.sp());
        EXPECT(0xd7dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc5b7));
        EXPECT(0x32, gbc.readMem(0xd7dc));
        // 32 032D
        gbc.setState(0x3ce6, 0xff59, 0x1640, 0xa834, 0x30ae, 0xf2dc, 0x0, 0x1);
        gbc.writeMem(0x3ce6, { 0x32 });
        gbc.writeMem(0xf2dc, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xff59, gbc.sp());
        EXPECT(0x3ce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xf2dc));
        // 32 032E
        gbc.setState(0x97cc, 0xf80b, 0xf920, 0xdff3, 0x138f, 0xcb26, 0x0, 0x1);
        gbc.writeMem(0x97cc, { 0x32 });
        gbc.writeMem(0xcb26, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf80b, gbc.sp());
        EXPECT(0x97cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x97cc));
        EXPECT(0xf9, gbc.readMem(0xcb26));
        // 32 0331
        gbc.setState(0x1f62, 0x8804, 0xa560, 0x61ce, 0x41cc, 0xe110, 0x1, 0x1);
        gbc.writeMem(0x1f62, { 0x32 });
        gbc.writeMem(0xe110, { 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8804, gbc.sp());
        EXPECT(0x1f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xe110));
        // 32 0335
        gbc.setState(0x596f, 0x48e7, 0x7260, 0xefe6, 0xc698, 0xd1aa, 0x1, 0x1);
        gbc.writeMem(0x596f, { 0x32 });
        gbc.writeMem(0xd1aa, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x48e7, gbc.sp());
        EXPECT(0x5970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xd1aa));
        // 32 0338
        gbc.setState(0x4d59, 0x6e28, 0x720, 0x6d23, 0xdeda, 0xbd92, 0x1, 0x0);
        gbc.writeMem(0x4d59, { 0x32 });
        gbc.writeMem(0xbd92, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6e28, gbc.sp());
        EXPECT(0x4d5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbd92));
        // 32 033A
        gbc.setState(0x6f4e, 0x5861, 0xc5b0, 0xe788, 0x4a44, 0xc0f6, 0x1, 0x1);
        gbc.writeMem(0x6f4e, { 0x32 });
        gbc.writeMem(0xc0f6, { 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5861, gbc.sp());
        EXPECT(0x6f4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xc0f6));
        // 32 033C
        gbc.setState(0xebe2, 0xae5, 0xaa50, 0x9c1f, 0x898, 0xc29b, 0x1, 0x1);
        gbc.writeMem(0xc29b, { 0x0 });
        gbc.writeMem(0xebe2, { 0x32 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xae5, gbc.sp());
        EXPECT(0xebe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xc29b));
        EXPECT(0x32, gbc.readMem(0xebe2));
        // 32 033D
        gbc.setState(0x2510, 0xb73b, 0x9820, 0x734c, 0xddc5, 0xf065, 0x0, 0x1);
        gbc.writeMem(0x2510, { 0x32 });
        gbc.writeMem(0xf065, { 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb73b, gbc.sp());
        EXPECT(0x2511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xf065));
        // 32 033F
        gbc.setState(0x430d, 0xa7a4, 0x2070, 0xe9c9, 0x975c, 0x8eb1, 0x0, 0x0);
        gbc.writeMem(0x430d, { 0x32 });
        gbc.writeMem(0x8eb1, { 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa7a4, gbc.sp());
        EXPECT(0x430e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8eb1));
        // 32 0341
        gbc.setState(0x3f8d, 0xae59, 0x1320, 0xebc3, 0x47fe, 0x9b3a, 0x1, 0x1);
        gbc.writeMem(0x3f8d, { 0x32 });
        gbc.writeMem(0x9b3a, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xae59, gbc.sp());
        EXPECT(0x3f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9b3a));
        // 32 0344
        gbc.setState(0xef0f, 0xd48c, 0x1d80, 0xca4b, 0xc6be, 0xe416, 0x1, 0x0);
        gbc.writeMem(0xe416, { 0x0 });
        gbc.writeMem(0xef0f, { 0x32 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd48c, gbc.sp());
        EXPECT(0xef10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xe416));
        EXPECT(0x32, gbc.readMem(0xef0f));
        // 32 0346
        gbc.setState(0x2436, 0xe58c, 0x2b90, 0x1c66, 0x10bc, 0xf4bd, 0x0, 0x1);
        gbc.writeMem(0x2436, { 0x32 });
        gbc.writeMem(0xf4bd, { 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe58c, gbc.sp());
        EXPECT(0x2437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xf4bd));
        // 32 0347
        gbc.setState(0x40dc, 0x434a, 0x9430, 0x169e, 0x4833, 0xcc97, 0x1, 0x0);
        gbc.writeMem(0x40dc, { 0x32 });
        gbc.writeMem(0xcc97, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x434a, gbc.sp());
        EXPECT(0x40dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xcc97));
        // 32 0348
        gbc.setState(0x5025, 0x2a72, 0xdcc0, 0xec65, 0x2709, 0x99a0, 0x0, 0x1);
        gbc.writeMem(0x5025, { 0x32 });
        gbc.writeMem(0x99a0, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2a72, gbc.sp());
        EXPECT(0x5026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x99a0));
        // 32 0349
        gbc.setState(0x8f6c, 0x7394, 0xce00, 0xc641, 0x626f, 0xe66b, 0x1, 0x1);
        gbc.writeMem(0x8f6c, { 0x32 });
        gbc.writeMem(0xe66b, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7394, gbc.sp());
        EXPECT(0x8f6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8f6c));
        EXPECT(0xce, gbc.readMem(0xe66b));
        // 32 034A
        gbc.setState(0x6bba, 0xb781, 0xa610, 0xf979, 0xc6b1, 0x9aa7, 0x0, 0x0);
        gbc.writeMem(0x6bba, { 0x32 });
        gbc.writeMem(0x9aa7, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb781, gbc.sp());
        EXPECT(0x6bbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x9aa7));
        // 32 034B
        gbc.setState(0x4997, 0x3b40, 0x55d0, 0xff41, 0xdc21, 0xc6ae, 0x0, 0x1);
        gbc.writeMem(0x4997, { 0x32 });
        gbc.writeMem(0xc6ae, { 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3b40, gbc.sp());
        EXPECT(0x4998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc6ae));
        // 32 034F
        gbc.setState(0xdb2c, 0x2241, 0x7320, 0x8a32, 0xcf1e, 0x87b8, 0x0, 0x0);
        gbc.writeMem(0x87b8, { 0x0 });
        gbc.writeMem(0xdb2c, { 0x32 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2241, gbc.sp());
        EXPECT(0xdb2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x87b8));
        EXPECT(0x32, gbc.readMem(0xdb2c));
        // 32 0350
        gbc.setState(0x722c, 0x6ea1, 0x3b00, 0xd5eb, 0x8491, 0xad8f, 0x1, 0x0);
        gbc.writeMem(0x722c, { 0x32 });
        gbc.writeMem(0xad8f, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6ea1, gbc.sp());
        EXPECT(0x722d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xad8f));
        // 32 0351
        gbc.setState(0xb4a1, 0x1131, 0x980, 0x7719, 0x260d, 0xf1e3, 0x0, 0x0);
        gbc.writeMem(0xb4a1, { 0x32 });
        gbc.writeMem(0xf1e3, { 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1131, gbc.sp());
        EXPECT(0xb4a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xb4a1));
        EXPECT(0x9, gbc.readMem(0xf1e3));
        // 32 0354
        gbc.setState(0x8969, 0xf85a, 0xaae0, 0x7903, 0xa327, 0xf532, 0x1, 0x0);
        gbc.writeMem(0x8969, { 0x32 });
        gbc.writeMem(0xf532, { 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf85a, gbc.sp());
        EXPECT(0x896a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8969));
        EXPECT(0xaa, gbc.readMem(0xf532));
        // 32 0355
        gbc.setState(0xb166, 0xb3d5, 0x9720, 0x362b, 0x2eb6, 0xd13b, 0x0, 0x0);
        gbc.writeMem(0xb166, { 0x32 });
        gbc.writeMem(0xd13b, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb3d5, gbc.sp());
        EXPECT(0xb167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xb166));
        EXPECT(0x97, gbc.readMem(0xd13b));
        // 32 0356
        gbc.setState(0xa687, 0x3cab, 0x87c0, 0x6839, 0xa0af, 0xa565, 0x0, 0x1);
        gbc.writeMem(0xa565, { 0x0 });
        gbc.writeMem(0xa687, { 0x32 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3cab, gbc.sp());
        EXPECT(0xa688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa565));
        EXPECT(0x32, gbc.readMem(0xa687));
        // 32 0357
        gbc.setState(0xe2e2, 0x6606, 0xace0, 0x28ab, 0x1f58, 0x9864, 0x0, 0x0);
        gbc.writeMem(0x9864, { 0x0 });
        gbc.writeMem(0xe2e2, { 0x32 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6606, gbc.sp());
        EXPECT(0xe2e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9864));
        EXPECT(0x32, gbc.readMem(0xe2e2));
        // 32 0359
        gbc.setState(0x6e0f, 0x31b, 0x6090, 0xfc09, 0xa2d4, 0xa0ad, 0x0, 0x0);
        gbc.writeMem(0x6e0f, { 0x32 });
        gbc.writeMem(0xa0ad, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x31b, gbc.sp());
        EXPECT(0x6e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xa0ad));
        // 32 035B
        gbc.setState(0x67c7, 0x6aa, 0x2590, 0xb2bc, 0x64a5, 0x9e70, 0x1, 0x0);
        gbc.writeMem(0x67c7, { 0x32 });
        gbc.writeMem(0x9e70, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6aa, gbc.sp());
        EXPECT(0x67c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9e70));
        // 32 035C
        gbc.setState(0xd08d, 0x40f8, 0xbcb0, 0x6b2a, 0x9022, 0xcfa0, 0x0, 0x1);
        gbc.writeMem(0xcfa0, { 0x0 });
        gbc.writeMem(0xd08d, { 0x32 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x40f8, gbc.sp());
        EXPECT(0xd08e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcfa0));
        EXPECT(0x32, gbc.readMem(0xd08d));
        // 32 035D
        gbc.setState(0x5156, 0xc1e6, 0xe3f0, 0x1faa, 0x3ac2, 0x881a, 0x1, 0x0);
        gbc.writeMem(0x5156, { 0x32 });
        gbc.writeMem(0x881a, { 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc1e6, gbc.sp());
        EXPECT(0x5157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x881a));
        // 32 035E
        gbc.setState(0xe21d, 0xfe01, 0x4310, 0xcece, 0x84d3, 0xc49b, 0x0, 0x1);
        gbc.writeMem(0xc49b, { 0x0 });
        gbc.writeMem(0xe21d, { 0x32 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xfe01, gbc.sp());
        EXPECT(0xe21e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc49b));
        EXPECT(0x32, gbc.readMem(0xe21d));
        // 32 0360
        gbc.setState(0x3056, 0xe20, 0xe060, 0x8dcf, 0x4d26, 0x9a73, 0x1, 0x0);
        gbc.writeMem(0x3056, { 0x32 });
        gbc.writeMem(0x9a73, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe20, gbc.sp());
        EXPECT(0x3057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x9a73));
        // 32 0362
        gbc.setState(0x2541, 0xa840, 0xbe60, 0x123b, 0xdb40, 0xd669, 0x1, 0x1);
        gbc.writeMem(0x2541, { 0x32 });
        gbc.writeMem(0xd669, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa840, gbc.sp());
        EXPECT(0x2542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xd669));
        // 32 0363
        gbc.setState(0xc6b0, 0xdcec, 0xa690, 0x6f25, 0x282c, 0xdca0, 0x0, 0x0);
        gbc.writeMem(0xc6b0, { 0x32 });
        gbc.writeMem(0xdca0, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xdcec, gbc.sp());
        EXPECT(0xc6b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xc6b0));
        EXPECT(0xa6, gbc.readMem(0xdca0));
        // 32 0367
        gbc.setState(0x934, 0x87c3, 0x8580, 0x1aae, 0xca9f, 0xdfbe, 0x0, 0x0);
        gbc.writeMem(0x934, { 0x32 });
        gbc.writeMem(0xdfbe, { 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x87c3, gbc.sp());
        EXPECT(0x935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xdfbe));
        // 32 036C
        gbc.setState(0xe77, 0xc95a, 0x79a0, 0x80d9, 0x3efe, 0xd528, 0x1, 0x0);
        gbc.writeMem(0xe77, { 0x32 });
        gbc.writeMem(0xd528, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc95a, gbc.sp());
        EXPECT(0xe78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd528));
        // 32 036E
        gbc.setState(0x4263, 0xf021, 0x7b70, 0x1fd7, 0xdbb5, 0xd1e4, 0x0, 0x1);
        gbc.writeMem(0x4263, { 0x32 });
        gbc.writeMem(0xd1e4, { 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf021, gbc.sp());
        EXPECT(0x4264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd1e4));
        // 32 0370
        gbc.setState(0x251f, 0xa933, 0x8d0, 0x7728, 0x5e1a, 0xcc23, 0x0, 0x1);
        gbc.writeMem(0x251f, { 0x32 });
        gbc.writeMem(0xcc23, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa933, gbc.sp());
        EXPECT(0x2520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xcc23));
        // 32 0371
        gbc.setState(0xb07b, 0xf49, 0x7a0, 0x6912, 0xf7ab, 0xb5d8, 0x0, 0x0);
        gbc.writeMem(0xb07b, { 0x32 });
        gbc.writeMem(0xb5d8, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf49, gbc.sp());
        EXPECT(0xb07c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xb07b));
        EXPECT(0x7, gbc.readMem(0xb5d8));
        // 32 0372
        gbc.setState(0x7b2c, 0x4ab5, 0xfa00, 0x3fda, 0x18f4, 0xbecb, 0x0, 0x0);
        gbc.writeMem(0x7b2c, { 0x32 });
        gbc.writeMem(0xbecb, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4ab5, gbc.sp());
        EXPECT(0x7b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xbecb));
        // 32 0375
        gbc.setState(0x5a68, 0xac57, 0x2f90, 0xcff9, 0x13c9, 0x8571, 0x1, 0x1);
        gbc.writeMem(0x5a68, { 0x32 });
        gbc.writeMem(0x8571, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xac57, gbc.sp());
        EXPECT(0x5a69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8571));
        // 32 0378
        gbc.setState(0x5d4b, 0x98d3, 0x9f30, 0x2fdb, 0x4841, 0xdc87, 0x1, 0x1);
        gbc.writeMem(0x5d4b, { 0x32 });
        gbc.writeMem(0xdc87, { 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x98d3, gbc.sp());
        EXPECT(0x5d4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xdc87));
        // 32 037C
        gbc.setState(0x11a3, 0xd276, 0x8390, 0xae2c, 0x97f4, 0xe560, 0x1, 0x1);
        gbc.writeMem(0x11a3, { 0x32 });
        gbc.writeMem(0xe560, { 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd276, gbc.sp());
        EXPECT(0x11a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xe560));
        // 32 037F
        gbc.setState(0xc992, 0xe8df, 0xdf50, 0xb276, 0x358e, 0xb305, 0x0, 0x0);
        gbc.writeMem(0xb305, { 0x0 });
        gbc.writeMem(0xc992, { 0x32 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe8df, gbc.sp());
        EXPECT(0xc993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xb305));
        EXPECT(0x32, gbc.readMem(0xc992));
        // 32 0381
        gbc.setState(0xd4bc, 0xf539, 0xf560, 0xff68, 0x813d, 0x99ea, 0x0, 0x1);
        gbc.writeMem(0x99ea, { 0x0 });
        gbc.writeMem(0xd4bc, { 0x32 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf539, gbc.sp());
        EXPECT(0xd4bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x99ea));
        EXPECT(0x32, gbc.readMem(0xd4bc));
        // 32 0384
        gbc.setState(0xe14, 0x1fa1, 0xc6f0, 0x6caf, 0x996b, 0xb750, 0x1, 0x0);
        gbc.writeMem(0xe14, { 0x32 });
        gbc.writeMem(0xb750, { 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1fa1, gbc.sp());
        EXPECT(0xe15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb750));
        // 32 0385
        gbc.setState(0xc173, 0x566b, 0xbe40, 0xcbdb, 0xdbcc, 0xc767, 0x1, 0x0);
        gbc.writeMem(0xc173, { 0x32 });
        gbc.writeMem(0xc767, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x566b, gbc.sp());
        EXPECT(0xc174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xc173));
        EXPECT(0xbe, gbc.readMem(0xc767));
        // 32 0386
        gbc.setState(0xc943, 0x7fa6, 0x4790, 0x2e9c, 0xcde6, 0xb894, 0x1, 0x1);
        gbc.writeMem(0xb894, { 0x0 });
        gbc.writeMem(0xc943, { 0x32 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7fa6, gbc.sp());
        EXPECT(0xc944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb894));
        EXPECT(0x32, gbc.readMem(0xc943));
        // 32 0388
        gbc.setState(0x3ede, 0xda7f, 0x8440, 0x7fc, 0x7de7, 0x8afb, 0x1, 0x1);
        gbc.writeMem(0x3ede, { 0x32 });
        gbc.writeMem(0x8afb, { 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xda7f, gbc.sp());
        EXPECT(0x3edf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x8afb));
        // 32 038D
        gbc.setState(0xbb2f, 0x8ee0, 0xf40, 0x9151, 0xf23b, 0xf43e, 0x1, 0x0);
        gbc.writeMem(0xbb2f, { 0x32 });
        gbc.writeMem(0xf43e, { 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8ee0, gbc.sp());
        EXPECT(0xbb30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xbb2f));
        EXPECT(0xf, gbc.readMem(0xf43e));
        // 32 038E
        gbc.setState(0x9ad9, 0xaaa0, 0xb0b0, 0x9688, 0xf491, 0xcf26, 0x0, 0x0);
        gbc.writeMem(0x9ad9, { 0x32 });
        gbc.writeMem(0xcf26, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xaaa0, gbc.sp());
        EXPECT(0x9ada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9ad9));
        EXPECT(0xb0, gbc.readMem(0xcf26));
        // 32 0390
        gbc.setState(0x8f55, 0xecfe, 0x8a10, 0xc033, 0x320c, 0x9a36, 0x1, 0x1);
        gbc.writeMem(0x8f55, { 0x32 });
        gbc.writeMem(0x9a36, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xecfe, gbc.sp());
        EXPECT(0x8f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8f55));
        EXPECT(0x8a, gbc.readMem(0x9a36));
        // 32 0393
        gbc.setState(0x2802, 0xc683, 0x7bf0, 0x91b6, 0xcf66, 0xedc3, 0x0, 0x1);
        gbc.writeMem(0x2802, { 0x32 });
        gbc.writeMem(0xedc3, { 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc683, gbc.sp());
        EXPECT(0x2803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xedc3));
        // 32 0394
        gbc.setState(0xd9b, 0xad57, 0xcf20, 0x9ee1, 0x9277, 0xa076, 0x1, 0x1);
        gbc.writeMem(0xd9b, { 0x32 });
        gbc.writeMem(0xa076, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xad57, gbc.sp());
        EXPECT(0xd9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xa076));
        // 32 0395
        gbc.setState(0x55a5, 0xdb0e, 0x84b0, 0xd5a3, 0xe2a3, 0x9095, 0x1, 0x0);
        gbc.writeMem(0x55a5, { 0x32 });
        gbc.writeMem(0x9095, { 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xdb0e, gbc.sp());
        EXPECT(0x55a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x9095));
        // 32 0396
        gbc.setState(0x6e74, 0x11a4, 0x64c0, 0x7c52, 0x26e6, 0xf5c3, 0x0, 0x1);
        gbc.writeMem(0x6e74, { 0x32 });
        gbc.writeMem(0xf5c3, { 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x11a4, gbc.sp());
        EXPECT(0x6e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xf5c3));
        // 32 0397
        gbc.setState(0xc26, 0x8b83, 0xa350, 0x4ea1, 0x16af, 0x9cf2, 0x0, 0x1);
        gbc.writeMem(0xc26, { 0x32 });
        gbc.writeMem(0x9cf2, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8b83, gbc.sp());
        EXPECT(0xc27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x9cf2));
        // 32 039A
        gbc.setState(0xede8, 0xe266, 0x9f70, 0x134, 0x7101, 0xb5dd, 0x0, 0x0);
        gbc.writeMem(0xb5dd, { 0x0 });
        gbc.writeMem(0xede8, { 0x32 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe266, gbc.sp());
        EXPECT(0xede9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb5dd));
        EXPECT(0x32, gbc.readMem(0xede8));
        // 32 039E
        gbc.setState(0x1be7, 0x4621, 0x5460, 0x4931, 0x53a7, 0xf4d2, 0x0, 0x0);
        gbc.writeMem(0x1be7, { 0x32 });
        gbc.writeMem(0xf4d2, { 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4621, gbc.sp());
        EXPECT(0x1be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xf4d2));
        // 32 039F
        gbc.setState(0x4faa, 0x95f4, 0xdce0, 0x95b3, 0xe178, 0xeb5a, 0x1, 0x1);
        gbc.writeMem(0x4faa, { 0x32 });
        gbc.writeMem(0xeb5a, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x95f4, gbc.sp());
        EXPECT(0x4fab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xeb5a));
        // 32 03A1
        gbc.setState(0xc8da, 0x7601, 0xf2c0, 0xb7c4, 0x2f95, 0xd0ac, 0x1, 0x1);
        gbc.writeMem(0xc8da, { 0x32 });
        gbc.writeMem(0xd0ac, { 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7601, gbc.sp());
        EXPECT(0xc8db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xc8da));
        EXPECT(0xf2, gbc.readMem(0xd0ac));
        // 32 03A2
        gbc.setState(0xbddf, 0xcffe, 0x8600, 0xac9f, 0xa31d, 0xc046, 0x0, 0x0);
        gbc.writeMem(0xbddf, { 0x32 });
        gbc.writeMem(0xc046, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcffe, gbc.sp());
        EXPECT(0xbde0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xbddf));
        EXPECT(0x86, gbc.readMem(0xc046));
        // 32 03A3
        gbc.setState(0x530f, 0x4285, 0xcd10, 0x8701, 0xd4ac, 0xb878, 0x0, 0x1);
        gbc.writeMem(0x530f, { 0x32 });
        gbc.writeMem(0xb878, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4285, gbc.sp());
        EXPECT(0x5310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xb878));
        // 32 03A6
        gbc.setState(0x25d6, 0x93e6, 0x1b10, 0x932d, 0xc7c9, 0xe749, 0x1, 0x1);
        gbc.writeMem(0x25d6, { 0x32 });
        gbc.writeMem(0xe749, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x93e6, gbc.sp());
        EXPECT(0x25d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xe749));
        // 32 03A7
        gbc.setState(0xd38c, 0xd897, 0xc230, 0xc7f, 0xf9b5, 0xf23c, 0x1, 0x0);
        gbc.writeMem(0xd38c, { 0x32 });
        gbc.writeMem(0xf23c, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd897, gbc.sp());
        EXPECT(0xd38d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xd38c));
        EXPECT(0xc2, gbc.readMem(0xf23c));
        // 32 03A9
        gbc.setState(0xb7d8, 0x9f28, 0x3330, 0x7999, 0xfe07, 0xb00d, 0x1, 0x1);
        gbc.writeMem(0xb00d, { 0x0 });
        gbc.writeMem(0xb7d8, { 0x32 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9f28, gbc.sp());
        EXPECT(0xb7d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb00d));
        EXPECT(0x32, gbc.readMem(0xb7d8));
        // 32 03AB
        gbc.setState(0xdd99, 0xd541, 0xdd20, 0x4e38, 0x5e61, 0xc27a, 0x0, 0x0);
        gbc.writeMem(0xc27a, { 0x0 });
        gbc.writeMem(0xdd99, { 0x32 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd541, gbc.sp());
        EXPECT(0xdd9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xc27a));
        EXPECT(0x32, gbc.readMem(0xdd99));
        // 32 03AD
        gbc.setState(0x99f4, 0x61ec, 0x1d20, 0x515d, 0x44ea, 0xf9ca, 0x1, 0x1);
        gbc.writeMem(0x99f4, { 0x32 });
        gbc.writeMem(0xf9ca, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x61ec, gbc.sp());
        EXPECT(0x99f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x99f4));
        EXPECT(0x1d, gbc.readMem(0xf9ca));
        // 32 03AF
        gbc.setState(0x8ed0, 0x954, 0xd7c0, 0xaf20, 0x9ad, 0x932e, 0x1, 0x0);
        gbc.writeMem(0x8ed0, { 0x32 });
        gbc.writeMem(0x932e, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x954, gbc.sp());
        EXPECT(0x8ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8ed0));
        EXPECT(0xd7, gbc.readMem(0x932e));
        // 32 03B2
        gbc.setState(0x319d, 0x5c61, 0x31f0, 0xb407, 0x9ca, 0xa5ff, 0x1, 0x0);
        gbc.writeMem(0x319d, { 0x32 });
        gbc.writeMem(0xa5ff, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5c61, gbc.sp());
        EXPECT(0x319e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa5ff));
        // 32 03B4
        gbc.setState(0x617a, 0xdf17, 0xc9e0, 0xb8a8, 0x1521, 0xf8a0, 0x1, 0x1);
        gbc.writeMem(0x617a, { 0x32 });
        gbc.writeMem(0xf8a0, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xdf17, gbc.sp());
        EXPECT(0x617b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xf8a0));
        // 32 03B6
        gbc.setState(0x7fe3, 0xa049, 0x2e80, 0xdb4f, 0x70ca, 0xfbe4, 0x0, 0x1);
        gbc.writeMem(0x7fe3, { 0x32 });
        gbc.writeMem(0xfbe4, { 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa049, gbc.sp());
        EXPECT(0x7fe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xfbe4));
        // 32 03B7
        gbc.setState(0xa3f9, 0xc2e1, 0xa0d0, 0x2bef, 0x631f, 0xdaf1, 0x0, 0x0);
        gbc.writeMem(0xa3f9, { 0x32 });
        gbc.writeMem(0xdaf1, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc2e1, gbc.sp());
        EXPECT(0xa3fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xa3f9));
        EXPECT(0xa0, gbc.readMem(0xdaf1));
        // 32 03B8
        gbc.setState(0xc02b, 0x8639, 0x85c0, 0xc299, 0xd62f, 0xb842, 0x0, 0x0);
        gbc.writeMem(0xb842, { 0x0 });
        gbc.writeMem(0xc02b, { 0x32 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8639, gbc.sp());
        EXPECT(0xc02c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb842));
        EXPECT(0x32, gbc.readMem(0xc02b));
        // 32 03B9
        gbc.setState(0xadb3, 0x7805, 0x7410, 0x71ff, 0x98e9, 0x9d1a, 0x1, 0x1);
        gbc.writeMem(0x9d1a, { 0x0 });
        gbc.writeMem(0xadb3, { 0x32 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7805, gbc.sp());
        EXPECT(0xadb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9d1a));
        EXPECT(0x32, gbc.readMem(0xadb3));
        // 32 03BB
        gbc.setState(0x9ed2, 0x486, 0x9340, 0xa4a0, 0xce2f, 0x905d, 0x0, 0x1);
        gbc.writeMem(0x905d, { 0x0 });
        gbc.writeMem(0x9ed2, { 0x32 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x486, gbc.sp());
        EXPECT(0x9ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x905d));
        EXPECT(0x32, gbc.readMem(0x9ed2));
        // 32 03BD
        gbc.setState(0xec99, 0x641f, 0x39e0, 0x4e0, 0xd48f, 0xe7d4, 0x1, 0x0);
        gbc.writeMem(0xe7d4, { 0x0 });
        gbc.writeMem(0xec99, { 0x32 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x641f, gbc.sp());
        EXPECT(0xec9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xe7d4));
        EXPECT(0x32, gbc.readMem(0xec99));
        // 32 03BE
        gbc.setState(0x7d95, 0xf9d8, 0x68f0, 0xba3b, 0x64b5, 0xbd96, 0x1, 0x0);
        gbc.writeMem(0x7d95, { 0x32 });
        gbc.writeMem(0xbd96, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf9d8, gbc.sp());
        EXPECT(0x7d96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xbd96));
        // 32 03BF
        gbc.setState(0x2ed2, 0xb344, 0x6210, 0x7671, 0x9b9a, 0xe6bc, 0x0, 0x0);
        gbc.writeMem(0x2ed2, { 0x32 });
        gbc.writeMem(0xe6bc, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb344, gbc.sp());
        EXPECT(0x2ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xe6bc));
        // 32 03C1
        gbc.setState(0x57b4, 0x2c56, 0x7ac0, 0x4d3d, 0xd36d, 0xc63c, 0x1, 0x1);
        gbc.writeMem(0x57b4, { 0x32 });
        gbc.writeMem(0xc63c, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2c56, gbc.sp());
        EXPECT(0x57b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc63c));
        // 32 03C3
        gbc.setState(0xabf8, 0x2f47, 0x6a60, 0x22b7, 0x52ff, 0x9a58, 0x0, 0x1);
        gbc.writeMem(0x9a58, { 0x0 });
        gbc.writeMem(0xabf8, { 0x32 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2f47, gbc.sp());
        EXPECT(0xabf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9a58));
        EXPECT(0x32, gbc.readMem(0xabf8));
        // 32 03C5
        gbc.setState(0x8b05, 0x4e11, 0x34d0, 0xf423, 0x1c1, 0xac33, 0x1, 0x1);
        gbc.writeMem(0x8b05, { 0x32 });
        gbc.writeMem(0xac33, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4e11, gbc.sp());
        EXPECT(0x8b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8b05));
        EXPECT(0x34, gbc.readMem(0xac33));
        // 32 03C8
        gbc.setState(0x170b, 0x8ea6, 0x9a50, 0xb145, 0x564f, 0x88f6, 0x0, 0x0);
        gbc.writeMem(0x170b, { 0x32 });
        gbc.writeMem(0x88f6, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8ea6, gbc.sp());
        EXPECT(0x170c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x88f6));
        // 32 03C9
        gbc.setState(0x36e2, 0x4397, 0xb130, 0xd10, 0xfb70, 0xf589, 0x0, 0x1);
        gbc.writeMem(0x36e2, { 0x32 });
        gbc.writeMem(0xf589, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4397, gbc.sp());
        EXPECT(0x36e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xf589));
        // 32 03CC
        gbc.setState(0xb97a, 0x6930, 0xceb0, 0x9bcb, 0xe214, 0x9d79, 0x1, 0x1);
        gbc.writeMem(0x9d79, { 0x0 });
        gbc.writeMem(0xb97a, { 0x32 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6930, gbc.sp());
        EXPECT(0xb97b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0x9d79));
        EXPECT(0x32, gbc.readMem(0xb97a));
        // 32 03D0
        gbc.setState(0x1cf, 0x2494, 0x5190, 0x152e, 0x2ff1, 0xaf28, 0x1, 0x1);
        gbc.writeMem(0x1cf, { 0x32 });
        gbc.writeMem(0xaf28, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2494, gbc.sp());
        EXPECT(0x1d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xaf28));
        // 32 03D2
        gbc.setState(0x57d, 0x4d5, 0x5cc0, 0x993b, 0x987e, 0xd9bb, 0x1, 0x0);
        gbc.writeMem(0x57d, { 0x32 });
        gbc.writeMem(0xd9bb, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4d5, gbc.sp());
        EXPECT(0x57e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xd9bb));
        // 32 03D4
        gbc.setState(0x61d2, 0xb094, 0xb3a0, 0x533f, 0xd9cd, 0xeb07, 0x0, 0x0);
        gbc.writeMem(0x61d2, { 0x32 });
        gbc.writeMem(0xeb07, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb094, gbc.sp());
        EXPECT(0x61d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xeb07));
        // 32 03D9
        gbc.setState(0xdd31, 0x4dc9, 0x6a50, 0x622e, 0x8347, 0xd85c, 0x1, 0x1);
        gbc.writeMem(0xd85c, { 0x0 });
        gbc.writeMem(0xdd31, { 0x32 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4dc9, gbc.sp());
        EXPECT(0xdd32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd85c));
        EXPECT(0x32, gbc.readMem(0xdd31));
        // 32 03DF
        gbc.setState(0x9ffa, 0xbf93, 0x5a0, 0xee02, 0x362, 0x83d9, 0x0, 0x0);
        gbc.writeMem(0x83d9, { 0x0 });
        gbc.writeMem(0x9ffa, { 0x32 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbf93, gbc.sp());
        EXPECT(0x9ffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x83d9));
        EXPECT(0x32, gbc.readMem(0x9ffa));
        // 32 03E0
        gbc.setState(0x9eb2, 0xa72a, 0xd570, 0xebbd, 0x3b73, 0xbc5d, 0x0, 0x1);
        gbc.writeMem(0x9eb2, { 0x32 });
        gbc.writeMem(0xbc5d, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa72a, gbc.sp());
        EXPECT(0x9eb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9eb2));
        EXPECT(0xd5, gbc.readMem(0xbc5d));
        // 32 03E1
        gbc.setState(0x39e8, 0xf534, 0x6ab0, 0x45dc, 0xc27f, 0xb5c7, 0x1, 0x0);
        gbc.writeMem(0x39e8, { 0x32 });
        gbc.writeMem(0xb5c7, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf534, gbc.sp());
        EXPECT(0x39e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb5c7));
        // 32 03E3
        gbc.setState(0x3f9f, 0x4c25, 0x9cc0, 0x9278, 0xaae0, 0xb234, 0x1, 0x1);
        gbc.writeMem(0x3f9f, { 0x32 });
        gbc.writeMem(0xb234, { 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4c25, gbc.sp());
        EXPECT(0x3fa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb234));
        // 32 03E5
        gbc.setState(0xd771, 0xc55, 0x4ac0, 0xe3d7, 0x3c73, 0x822c, 0x1, 0x1);
        gbc.writeMem(0x822c, { 0x0 });
        gbc.writeMem(0xd771, { 0x32 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc55, gbc.sp());
        EXPECT(0xd772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x822c));
        EXPECT(0x32, gbc.readMem(0xd771));
    }
