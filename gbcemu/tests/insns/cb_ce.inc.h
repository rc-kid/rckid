    TEST(gbcemu, opcode_cb_ce) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB CE 0001
        gbc.setState(0x961e, 0x8992, 0x9a90, 0xf6ff, 0x65b3, 0x9b8f, 0x1, 0x0);
        gbc.writeMem(0x961e, { 0xcb, 0xce });
        gbc.writeMem(0x9b8f, { 0x8a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8992, gbc.sp());
        EXPECT(0x9620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x961e));
        EXPECT(0xce, gbc.readMem(0x961f));
        EXPECT(0x8a, gbc.readMem(0x9b8f));
        // CB CE 0004
        gbc.setState(0x82ac, 0x50f0, 0x430, 0xd577, 0x9cc5, 0xde78, 0x1, 0x1);
        gbc.writeMem(0x82ac, { 0xcb, 0xce });
        gbc.writeMem(0xde78, { 0x27 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x50f0, gbc.sp());
        EXPECT(0x82ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ac));
        EXPECT(0xce, gbc.readMem(0x82ad));
        EXPECT(0x27, gbc.readMem(0xde78));
        // CB CE 0006
        gbc.setState(0x6563, 0xe38f, 0x18b0, 0x115d, 0x73df, 0xdd48, 0x0, 0x1);
        gbc.writeMem(0x6563, { 0xcb, 0xce });
        gbc.writeMem(0xdd48, { 0x9c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe38f, gbc.sp());
        EXPECT(0x6565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xdd48));
        // CB CE 0008
        gbc.setState(0x3e3b, 0x9d13, 0xfae0, 0x70a, 0x60df, 0xd6c3, 0x1, 0x1);
        gbc.writeMem(0x3e3b, { 0xcb, 0xce });
        gbc.writeMem(0xd6c3, { 0x85 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9d13, gbc.sp());
        EXPECT(0x3e3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd6c3));
        // CB CE 0009
        gbc.setState(0x259f, 0xf15d, 0x40, 0x90f5, 0x5833, 0x5a36, 0x0, 0x1);
        gbc.writeMem(0x259f, { 0xcb, 0xce });
        gbc.writeMem(0x5a36, { 0x7b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf15d, gbc.sp());
        EXPECT(0x25a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 000A
        gbc.setState(0xef5c, 0x4459, 0xc2a0, 0x5e2c, 0x990e, 0xc119, 0x1, 0x1);
        gbc.writeMem(0xc119, { 0xc1 });
        gbc.writeMem(0xef5c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4459, gbc.sp());
        EXPECT(0xef5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc119));
        EXPECT(0xcb, gbc.readMem(0xef5c));
        EXPECT(0xce, gbc.readMem(0xef5d));
        // CB CE 000C
        gbc.setState(0x98d6, 0x3267, 0x4d60, 0xb82a, 0xdbc, 0xdb96, 0x0, 0x0);
        gbc.writeMem(0x98d6, { 0xcb, 0xce });
        gbc.writeMem(0xdb96, { 0xa0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3267, gbc.sp());
        EXPECT(0x98d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d6));
        EXPECT(0xce, gbc.readMem(0x98d7));
        EXPECT(0xa2, gbc.readMem(0xdb96));
        // CB CE 000D
        gbc.setState(0xc14f, 0xff3e, 0x3e20, 0x15a4, 0x98d2, 0x89f0, 0x1, 0x0);
        gbc.writeMem(0x89f0, { 0x38 });
        gbc.writeMem(0xc14f, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xff3e, gbc.sp());
        EXPECT(0xc151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x89f0));
        EXPECT(0xcb, gbc.readMem(0xc14f));
        EXPECT(0xce, gbc.readMem(0xc150));
        // CB CE 000E
        gbc.setState(0x31a9, 0x3324, 0xb520, 0x638b, 0x7bb5, 0xe145, 0x1, 0x1);
        gbc.writeMem(0x31a9, { 0xcb, 0xce });
        gbc.writeMem(0xe145, { 0xda });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3324, gbc.sp());
        EXPECT(0x31ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe145));
        // CB CE 000F
        gbc.setState(0xc3e3, 0x9ef1, 0x8b60, 0x39f0, 0x3a3b, 0xa25c, 0x0, 0x1);
        gbc.writeMem(0xa25c, { 0xcf });
        gbc.writeMem(0xc3e3, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9ef1, gbc.sp());
        EXPECT(0xc3e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xa25c));
        EXPECT(0xcb, gbc.readMem(0xc3e3));
        EXPECT(0xce, gbc.readMem(0xc3e4));
        // CB CE 0010
        gbc.setState(0x3ac3, 0x2e5e, 0x4f90, 0x574f, 0xef9, 0xd343, 0x1, 0x1);
        gbc.writeMem(0x3ac3, { 0xcb, 0xce });
        gbc.writeMem(0xd343, { 0x5e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2e5e, gbc.sp());
        EXPECT(0x3ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd343));
        // CB CE 0012
        gbc.setState(0x73bc, 0xf129, 0x1550, 0x24b9, 0x6907, 0x28be, 0x1, 0x1);
        gbc.writeMem(0x28be, { 0xf7 });
        gbc.writeMem(0x73bc, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf129, gbc.sp());
        EXPECT(0x73be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 0014
        gbc.setState(0x157b, 0xda84, 0x6900, 0xf571, 0x1e8f, 0x97cb, 0x1, 0x1);
        gbc.writeMem(0x157b, { 0xcb, 0xce });
        gbc.writeMem(0x97cb, { 0x75 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xda84, gbc.sp());
        EXPECT(0x157d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x97cb));
        // CB CE 0015
        gbc.setState(0xb975, 0x82e4, 0x7c70, 0xfd2c, 0x9441, 0x3f6a, 0x1, 0x0);
        gbc.writeMem(0x3f6a, { 0xf6 });
        gbc.writeMem(0xb975, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x82e4, gbc.sp());
        EXPECT(0xb977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb975));
        EXPECT(0xce, gbc.readMem(0xb976));
        // CB CE 0016
        gbc.setState(0x8727, 0xca69, 0x3b10, 0x6656, 0xae7, 0xf1a0, 0x0, 0x1);
        gbc.writeMem(0x8727, { 0xcb, 0xce });
        gbc.writeMem(0xf1a0, { 0x33 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xca69, gbc.sp());
        EXPECT(0x8729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8727));
        EXPECT(0xce, gbc.readMem(0x8728));
        EXPECT(0x33, gbc.readMem(0xf1a0));
        // CB CE 0017
        gbc.setState(0x9ce9, 0x5db, 0x49f0, 0x1881, 0x6802, 0x7521, 0x0, 0x1);
        gbc.writeMem(0x7521, { 0x72 });
        gbc.writeMem(0x9ce9, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5db, gbc.sp());
        EXPECT(0x9ceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ce9));
        EXPECT(0xce, gbc.readMem(0x9cea));
        // CB CE 001B
        gbc.setState(0xb9fa, 0x7e4a, 0xb7e0, 0xccf1, 0xf9c1, 0xfd02, 0x0, 0x1);
        gbc.writeMem(0xb9fa, { 0xcb, 0xce });
        gbc.writeMem(0xfd02, { 0xfe });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7e4a, gbc.sp());
        EXPECT(0xb9fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9fa));
        EXPECT(0xce, gbc.readMem(0xb9fb));
        EXPECT(0xfe, gbc.readMem(0xfd02));
        // CB CE 001D
        gbc.setState(0x57aa, 0xa857, 0xe250, 0x2026, 0xa627, 0xcde3, 0x1, 0x1);
        gbc.writeMem(0x57aa, { 0xcb, 0xce });
        gbc.writeMem(0xcde3, { 0x3b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa857, gbc.sp());
        EXPECT(0x57ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xcde3));
        // CB CE 001F
        gbc.setState(0x30a5, 0xcd6a, 0x5b0, 0x30e0, 0x64ad, 0x96b5, 0x1, 0x1);
        gbc.writeMem(0x30a5, { 0xcb, 0xce });
        gbc.writeMem(0x96b5, { 0x34 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xcd6a, gbc.sp());
        EXPECT(0x30a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x96b5));
        // CB CE 0020
        gbc.setState(0x9c70, 0x180c, 0x36c0, 0x52e6, 0x2a44, 0x2ee4, 0x0, 0x0);
        gbc.writeMem(0x2ee4, { 0xce });
        gbc.writeMem(0x9c70, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x180c, gbc.sp());
        EXPECT(0x9c72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c70));
        EXPECT(0xce, gbc.readMem(0x9c71));
        // CB CE 0021
        gbc.setState(0x27ef, 0xc88, 0xb7d0, 0xfbda, 0x589f, 0xa504, 0x1, 0x0);
        gbc.writeMem(0x27ef, { 0xcb, 0xce });
        gbc.writeMem(0xa504, { 0xda });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc88, gbc.sp());
        EXPECT(0x27f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa504));
        // CB CE 0022
        gbc.setState(0x4693, 0xc786, 0xdd60, 0xe90, 0x510, 0xec44, 0x0, 0x1);
        gbc.writeMem(0x4693, { 0xcb, 0xce });
        gbc.writeMem(0xec44, { 0x82 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc786, gbc.sp());
        EXPECT(0x4695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xec44));
        // CB CE 0024
        gbc.setState(0xba61, 0x6c03, 0xa8f0, 0x63e4, 0x1caa, 0x40ed, 0x1, 0x1);
        gbc.writeMem(0x40ed, { 0xba });
        gbc.writeMem(0xba61, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6c03, gbc.sp());
        EXPECT(0xba63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba61));
        EXPECT(0xce, gbc.readMem(0xba62));
        // CB CE 0025
        gbc.setState(0xb355, 0x48f8, 0x1310, 0xf603, 0x8c10, 0x6565, 0x0, 0x0);
        gbc.writeMem(0x6565, { 0x5b });
        gbc.writeMem(0xb355, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x48f8, gbc.sp());
        EXPECT(0xb357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb355));
        EXPECT(0xce, gbc.readMem(0xb356));
        // CB CE 0026
        gbc.setState(0x576e, 0x7eaf, 0xe060, 0x76ba, 0x3422, 0xbc55, 0x0, 0x1);
        gbc.writeMem(0x576e, { 0xcb, 0xce });
        gbc.writeMem(0xbc55, { 0xec });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7eaf, gbc.sp());
        EXPECT(0x5770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xbc55));
        // CB CE 0027
        gbc.setState(0xa09a, 0x9cb5, 0x2fb0, 0x19b0, 0x5851, 0x58dd, 0x1, 0x0);
        gbc.writeMem(0x58dd, { 0x3a });
        gbc.writeMem(0xa09a, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9cb5, gbc.sp());
        EXPECT(0xa09c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa09a));
        EXPECT(0xce, gbc.readMem(0xa09b));
        // CB CE 0029
        gbc.setState(0xaced, 0x6a53, 0x28f0, 0x42ca, 0xc8bf, 0x5f97, 0x0, 0x1);
        gbc.writeMem(0x5f97, { 0x6a });
        gbc.writeMem(0xaced, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6a53, gbc.sp());
        EXPECT(0xacef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaced));
        EXPECT(0xce, gbc.readMem(0xacee));
        // CB CE 002A
        gbc.setState(0xd072, 0xfdda, 0x8300, 0x4992, 0x9a98, 0x8ab6, 0x0, 0x1);
        gbc.writeMem(0x8ab6, { 0xc8 });
        gbc.writeMem(0xd072, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xfdda, gbc.sp());
        EXPECT(0xd074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x8ab6));
        EXPECT(0xcb, gbc.readMem(0xd072));
        EXPECT(0xce, gbc.readMem(0xd073));
        // CB CE 002C
        gbc.setState(0x4dd4, 0xba19, 0x1340, 0x555, 0x98eb, 0x9fe6, 0x1, 0x0);
        gbc.writeMem(0x4dd4, { 0xcb, 0xce });
        gbc.writeMem(0x9fe6, { 0x74 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xba19, gbc.sp());
        EXPECT(0x4dd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x9fe6));
        // CB CE 002E
        gbc.setState(0xd371, 0x4f81, 0x610, 0xf4b7, 0xa593, 0xe05a, 0x1, 0x0);
        gbc.writeMem(0xd371, { 0xcb, 0xce });
        gbc.writeMem(0xe05a, { 0x3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4f81, gbc.sp());
        EXPECT(0xd373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd371));
        EXPECT(0xce, gbc.readMem(0xd372));
        EXPECT(0x3, gbc.readMem(0xe05a));
        // CB CE 002F
        gbc.setState(0x56a1, 0x6b1c, 0xcc10, 0xcf19, 0x2420, 0xd941, 0x0, 0x1);
        gbc.writeMem(0x56a1, { 0xcb, 0xce });
        gbc.writeMem(0xd941, { 0xb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6b1c, gbc.sp());
        EXPECT(0x56a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd941));
        // CB CE 0030
        gbc.setState(0x12d6, 0x6060, 0x2c60, 0x2393, 0xad48, 0x9ca0, 0x1, 0x0);
        gbc.writeMem(0x12d6, { 0xcb, 0xce });
        gbc.writeMem(0x9ca0, { 0x3b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6060, gbc.sp());
        EXPECT(0x12d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9ca0));
        // CB CE 0031
        gbc.setState(0x346, 0x2ef3, 0x67e0, 0xaf41, 0x2066, 0x3070, 0x1, 0x0);
        gbc.writeMem(0x346, { 0xcb, 0xce });
        gbc.writeMem(0x3070, { 0xd2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2ef3, gbc.sp());
        EXPECT(0x348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 0033
        gbc.setState(0x8c9b, 0xf9b0, 0x6eb0, 0xaed5, 0xad43, 0xa516, 0x0, 0x1);
        gbc.writeMem(0x8c9b, { 0xcb, 0xce });
        gbc.writeMem(0xa516, { 0x46 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf9b0, gbc.sp());
        EXPECT(0x8c9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c9b));
        EXPECT(0xce, gbc.readMem(0x8c9c));
        EXPECT(0x46, gbc.readMem(0xa516));
        // CB CE 0034
        gbc.setState(0xe440, 0xfe46, 0x8310, 0xed5d, 0xa60a, 0x4d5e, 0x0, 0x0);
        gbc.writeMem(0x4d5e, { 0x8f });
        gbc.writeMem(0xe440, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xfe46, gbc.sp());
        EXPECT(0xe442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe440));
        EXPECT(0xce, gbc.readMem(0xe441));
        // CB CE 0036
        gbc.setState(0x7bac, 0xe0a1, 0xefe0, 0xa2d7, 0x1482, 0x9ab3, 0x0, 0x1);
        gbc.writeMem(0x7bac, { 0xcb, 0xce });
        gbc.writeMem(0x9ab3, { 0xc3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe0a1, gbc.sp());
        EXPECT(0x7bae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9ab3));
        // CB CE 0037
        gbc.setState(0x6997, 0x5f46, 0x5410, 0x1121, 0x1d8b, 0x6e76, 0x1, 0x1);
        gbc.writeMem(0x6997, { 0xcb, 0xce });
        gbc.writeMem(0x6e76, { 0xab });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5f46, gbc.sp());
        EXPECT(0x6999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 0038
        gbc.setState(0xd48e, 0x364f, 0xeee0, 0xcfd3, 0x228c, 0xc3e4, 0x1, 0x0);
        gbc.writeMem(0xc3e4, { 0xbb });
        gbc.writeMem(0xd48e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x364f, gbc.sp());
        EXPECT(0xd490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc3e4));
        EXPECT(0xcb, gbc.readMem(0xd48e));
        EXPECT(0xce, gbc.readMem(0xd48f));
        // CB CE 0039
        gbc.setState(0xdd3a, 0xea8d, 0xf210, 0x4edb, 0xa036, 0xf55c, 0x1, 0x1);
        gbc.writeMem(0xdd3a, { 0xcb, 0xce });
        gbc.writeMem(0xf55c, { 0x89 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xea8d, gbc.sp());
        EXPECT(0xdd3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd3a));
        EXPECT(0xce, gbc.readMem(0xdd3b));
        EXPECT(0x8b, gbc.readMem(0xf55c));
        // CB CE 003A
        gbc.setState(0xeceb, 0x4079, 0x8f70, 0x145, 0xe4c8, 0xff7b, 0x1, 0x0);
        gbc.writeMem(0xeceb, { 0xcb, 0xce });
        gbc.writeMem(0xff7b, { 0x6 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4079, gbc.sp());
        EXPECT(0xeced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeceb));
        EXPECT(0xce, gbc.readMem(0xecec));
        EXPECT(0x6, gbc.readMem(0xff7b));
        // CB CE 003B
        gbc.setState(0x3dab, 0xe438, 0xffc0, 0xb928, 0xd248, 0x3088, 0x1, 0x1);
        gbc.writeMem(0x3088, { 0x47 });
        gbc.writeMem(0x3dab, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe438, gbc.sp());
        EXPECT(0x3dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 003C
        gbc.setState(0x267f, 0x8a88, 0xc5f0, 0xcec9, 0xd0ba, 0x9669, 0x1, 0x1);
        gbc.writeMem(0x267f, { 0xcb, 0xce });
        gbc.writeMem(0x9669, { 0x4c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8a88, gbc.sp());
        EXPECT(0x2681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9669));
        // CB CE 003D
        gbc.setState(0xca5b, 0xa1f0, 0x1cc0, 0x8ddb, 0x8665, 0x6510, 0x0, 0x0);
        gbc.writeMem(0x6510, { 0x3 });
        gbc.writeMem(0xca5b, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa1f0, gbc.sp());
        EXPECT(0xca5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca5b));
        EXPECT(0xce, gbc.readMem(0xca5c));
        // CB CE 003E
        gbc.setState(0x813c, 0x5458, 0x14a0, 0xc88d, 0x1013, 0xeaf5, 0x0, 0x0);
        gbc.writeMem(0x813c, { 0xcb, 0xce });
        gbc.writeMem(0xeaf5, { 0xb8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5458, gbc.sp());
        EXPECT(0x813e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x813c));
        EXPECT(0xce, gbc.readMem(0x813d));
        EXPECT(0xba, gbc.readMem(0xeaf5));
        // CB CE 003F
        gbc.setState(0x6a3e, 0x12c1, 0x1c30, 0x87a3, 0x835b, 0x81e0, 0x0, 0x1);
        gbc.writeMem(0x6a3e, { 0xcb, 0xce });
        gbc.writeMem(0x81e0, { 0xe3 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x12c1, gbc.sp());
        EXPECT(0x6a40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x81e0));
        // CB CE 0040
        gbc.setState(0x7dbe, 0x6f2e, 0xeaf0, 0x1301, 0x4fb1, 0xbcdc, 0x0, 0x0);
        gbc.writeMem(0x7dbe, { 0xcb, 0xce });
        gbc.writeMem(0xbcdc, { 0x63 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6f2e, gbc.sp());
        EXPECT(0x7dc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xbcdc));
        // CB CE 0041
        gbc.setState(0xe472, 0xcd29, 0x9610, 0x9c5e, 0xbb1, 0x8fc6, 0x0, 0x1);
        gbc.writeMem(0x8fc6, { 0x3b });
        gbc.writeMem(0xe472, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xcd29, gbc.sp());
        EXPECT(0xe474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8fc6));
        EXPECT(0xcb, gbc.readMem(0xe472));
        EXPECT(0xce, gbc.readMem(0xe473));
        // CB CE 0043
        gbc.setState(0xcf0d, 0x54b3, 0x8220, 0x36e3, 0x6b41, 0x8084, 0x1, 0x1);
        gbc.writeMem(0x8084, { 0xe });
        gbc.writeMem(0xcf0d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x54b3, gbc.sp());
        EXPECT(0xcf0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8084));
        EXPECT(0xcb, gbc.readMem(0xcf0d));
        EXPECT(0xce, gbc.readMem(0xcf0e));
        // CB CE 004A
        gbc.setState(0x3038, 0x31d8, 0xa8e0, 0x9602, 0x83b0, 0x92a8, 0x0, 0x0);
        gbc.writeMem(0x3038, { 0xcb, 0xce });
        gbc.writeMem(0x92a8, { 0x25 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x31d8, gbc.sp());
        EXPECT(0x303a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x92a8));
        // CB CE 004B
        gbc.setState(0xc43c, 0xb7a, 0xa770, 0x762a, 0xa480, 0x3b40, 0x0, 0x1);
        gbc.writeMem(0x3b40, { 0x5a });
        gbc.writeMem(0xc43c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb7a, gbc.sp());
        EXPECT(0xc43e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc43c));
        EXPECT(0xce, gbc.readMem(0xc43d));
        // CB CE 004C
        gbc.setState(0x37ef, 0x2711, 0x29c0, 0x9aff, 0x1792, 0x9355, 0x1, 0x0);
        gbc.writeMem(0x37ef, { 0xcb, 0xce });
        gbc.writeMem(0x9355, { 0x6 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2711, gbc.sp());
        EXPECT(0x37f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9355));
        // CB CE 004D
        gbc.setState(0xb85a, 0xc0e8, 0x1f00, 0x7acc, 0x6635, 0xae82, 0x1, 0x0);
        gbc.writeMem(0xae82, { 0x35 });
        gbc.writeMem(0xb85a, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc0e8, gbc.sp());
        EXPECT(0xb85c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xae82));
        EXPECT(0xcb, gbc.readMem(0xb85a));
        EXPECT(0xce, gbc.readMem(0xb85b));
        // CB CE 004F
        gbc.setState(0xb5a9, 0x317, 0xec20, 0xb11c, 0xe1ae, 0xaf94, 0x0, 0x0);
        gbc.writeMem(0xaf94, { 0x84 });
        gbc.writeMem(0xb5a9, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x317, gbc.sp());
        EXPECT(0xb5ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xaf94));
        EXPECT(0xcb, gbc.readMem(0xb5a9));
        EXPECT(0xce, gbc.readMem(0xb5aa));
        // CB CE 0050
        gbc.setState(0x2c3b, 0xfca4, 0x2db0, 0x338, 0xc74e, 0x6646, 0x0, 0x0);
        gbc.writeMem(0x2c3b, { 0xcb, 0xce });
        gbc.writeMem(0x6646, { 0x8a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xfca4, gbc.sp());
        EXPECT(0x2c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 0051
        gbc.setState(0x246f, 0x1835, 0xee0, 0x207f, 0xca42, 0x8ebc, 0x0, 0x0);
        gbc.writeMem(0x246f, { 0xcb, 0xce });
        gbc.writeMem(0x8ebc, { 0x5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1835, gbc.sp());
        EXPECT(0x2471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8ebc));
        // CB CE 0052
        gbc.setState(0xd0f0, 0xeca4, 0x1960, 0x7e37, 0xfd29, 0x5d8a, 0x0, 0x1);
        gbc.writeMem(0x5d8a, { 0xef });
        gbc.writeMem(0xd0f0, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xeca4, gbc.sp());
        EXPECT(0xd0f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0f0));
        EXPECT(0xce, gbc.readMem(0xd0f1));
        // CB CE 0054
        gbc.setState(0x6ac9, 0x4044, 0xcc90, 0x3deb, 0xee08, 0xc62e, 0x0, 0x0);
        gbc.writeMem(0x6ac9, { 0xcb, 0xce });
        gbc.writeMem(0xc62e, { 0xce });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4044, gbc.sp());
        EXPECT(0x6acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xc62e));
        // CB CE 0055
        gbc.setState(0xd21a, 0xb3e0, 0xce30, 0xe2c1, 0x9edf, 0xda06, 0x0, 0x0);
        gbc.writeMem(0xd21a, { 0xcb, 0xce });
        gbc.writeMem(0xda06, { 0x36 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb3e0, gbc.sp());
        EXPECT(0xd21c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd21a));
        EXPECT(0xce, gbc.readMem(0xd21b));
        EXPECT(0x36, gbc.readMem(0xda06));
        // CB CE 0056
        gbc.setState(0x7980, 0x68c5, 0xe6b0, 0x13db, 0xaade, 0x9ca4, 0x1, 0x0);
        gbc.writeMem(0x7980, { 0xcb, 0xce });
        gbc.writeMem(0x9ca4, { 0x54 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x68c5, gbc.sp());
        EXPECT(0x7982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9ca4));
        // CB CE 0058
        gbc.setState(0x24fc, 0xe21f, 0x74e0, 0xabef, 0xfe69, 0xb780, 0x0, 0x0);
        gbc.writeMem(0x24fc, { 0xcb, 0xce });
        gbc.writeMem(0xb780, { 0x93 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe21f, gbc.sp());
        EXPECT(0x24fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb780));
        // CB CE 005A
        gbc.setState(0x3900, 0xb601, 0x8420, 0xbf1e, 0xba1d, 0x7670, 0x0, 0x0);
        gbc.writeMem(0x3900, { 0xcb, 0xce });
        gbc.writeMem(0x7670, { 0x6b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb601, gbc.sp());
        EXPECT(0x3902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 005C
        gbc.setState(0x4bef, 0xe675, 0x76c0, 0x1dd7, 0x3a25, 0xfc53, 0x1, 0x0);
        gbc.writeMem(0x4bef, { 0xcb, 0xce });
        gbc.writeMem(0xfc53, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe675, gbc.sp());
        EXPECT(0x4bf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xfc53));
        // CB CE 005D
        gbc.setState(0x2fcd, 0x138b, 0x9c60, 0xa78, 0x69b1, 0x3024, 0x1, 0x0);
        gbc.writeMem(0x2fcd, { 0xcb, 0xce });
        gbc.writeMem(0x3024, { 0x63 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x138b, gbc.sp());
        EXPECT(0x2fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 005E
        gbc.setState(0xd574, 0xe89f, 0x6f80, 0xb09, 0x8525, 0xb537, 0x0, 0x1);
        gbc.writeMem(0xb537, { 0xbb });
        gbc.writeMem(0xd574, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe89f, gbc.sp());
        EXPECT(0xd576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb537));
        EXPECT(0xcb, gbc.readMem(0xd574));
        EXPECT(0xce, gbc.readMem(0xd575));
        // CB CE 0061
        gbc.setState(0x5765, 0x9b3b, 0xa440, 0x561c, 0x1bb8, 0xdeda, 0x0, 0x0);
        gbc.writeMem(0x5765, { 0xcb, 0xce });
        gbc.writeMem(0xdeda, { 0x43 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9b3b, gbc.sp());
        EXPECT(0x5767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xdeda));
        // CB CE 0062
        gbc.setState(0x494c, 0x9fd6, 0x2350, 0xc04d, 0x559b, 0x9888, 0x0, 0x0);
        gbc.writeMem(0x494c, { 0xcb, 0xce });
        gbc.writeMem(0x9888, { 0xc1 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9fd6, gbc.sp());
        EXPECT(0x494e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9888));
        // CB CE 0063
        gbc.setState(0x8571, 0x61ab, 0xd1f0, 0x2504, 0xe1d9, 0x462d, 0x0, 0x0);
        gbc.writeMem(0x462d, { 0x6b });
        gbc.writeMem(0x8571, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x61ab, gbc.sp());
        EXPECT(0x8573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8571));
        EXPECT(0xce, gbc.readMem(0x8572));
        // CB CE 0064
        gbc.setState(0x1b10, 0x2d48, 0x4f0, 0x9f35, 0xee82, 0xfb1a, 0x1, 0x1);
        gbc.writeMem(0x1b10, { 0xcb, 0xce });
        gbc.writeMem(0xfb1a, { 0x2d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2d48, gbc.sp());
        EXPECT(0x1b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xfb1a));
        // CB CE 0065
        gbc.setState(0xe038, 0x619e, 0xdd70, 0x303e, 0x61d3, 0xd6ec, 0x1, 0x0);
        gbc.writeMem(0xd6ec, { 0xb7 });
        gbc.writeMem(0xe038, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x619e, gbc.sp());
        EXPECT(0xe03a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd6ec));
        EXPECT(0xcb, gbc.readMem(0xe038));
        EXPECT(0xce, gbc.readMem(0xe039));
        // CB CE 0067
        gbc.setState(0x6372, 0xdf4f, 0x4a90, 0xcb24, 0x8678, 0x3d57, 0x1, 0x0);
        gbc.writeMem(0x3d57, { 0xef });
        gbc.writeMem(0x6372, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xdf4f, gbc.sp());
        EXPECT(0x6374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 0068
        gbc.setState(0x5f05, 0x39ba, 0x35b0, 0x7932, 0x6b14, 0xea40, 0x1, 0x0);
        gbc.writeMem(0x5f05, { 0xcb, 0xce });
        gbc.writeMem(0xea40, { 0x9e });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x39ba, gbc.sp());
        EXPECT(0x5f07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xea40));
        // CB CE 0069
        gbc.setState(0xc571, 0x5732, 0x9ee0, 0xb9e3, 0xbca5, 0x6203, 0x0, 0x1);
        gbc.writeMem(0x6203, { 0x92 });
        gbc.writeMem(0xc571, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5732, gbc.sp());
        EXPECT(0xc573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc571));
        EXPECT(0xce, gbc.readMem(0xc572));
        // CB CE 006A
        gbc.setState(0x2081, 0xac65, 0x8c40, 0xd3a7, 0x9012, 0x8cd1, 0x0, 0x1);
        gbc.writeMem(0x2081, { 0xcb, 0xce });
        gbc.writeMem(0x8cd1, { 0xbe });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xac65, gbc.sp());
        EXPECT(0x2083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x8cd1));
        // CB CE 006B
        gbc.setState(0x610b, 0x7fae, 0x1ce0, 0xa3d2, 0x339c, 0x83c6, 0x0, 0x1);
        gbc.writeMem(0x610b, { 0xcb, 0xce });
        gbc.writeMem(0x83c6, { 0x20 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7fae, gbc.sp());
        EXPECT(0x610d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x83c6));
        // CB CE 006C
        gbc.setState(0x9a6b, 0x83c7, 0xfb10, 0x2d5e, 0xfdd2, 0x8e90, 0x1, 0x0);
        gbc.writeMem(0x8e90, { 0xa2 });
        gbc.writeMem(0x9a6b, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x83c7, gbc.sp());
        EXPECT(0x9a6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8e90));
        EXPECT(0xcb, gbc.readMem(0x9a6b));
        EXPECT(0xce, gbc.readMem(0x9a6c));
        // CB CE 006D
        gbc.setState(0x98ad, 0x60cb, 0xbfd0, 0x8005, 0x1f77, 0x59db, 0x0, 0x0);
        gbc.writeMem(0x59db, { 0xf3 });
        gbc.writeMem(0x98ad, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x60cb, gbc.sp());
        EXPECT(0x98af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ad));
        EXPECT(0xce, gbc.readMem(0x98ae));
        // CB CE 006F
        gbc.setState(0x13bf, 0xe33e, 0x39b0, 0x2de7, 0xdb64, 0xdc9c, 0x1, 0x0);
        gbc.writeMem(0x13bf, { 0xcb, 0xce });
        gbc.writeMem(0xdc9c, { 0xc4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe33e, gbc.sp());
        EXPECT(0x13c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xdc9c));
        // CB CE 0070
        gbc.setState(0xe792, 0xaaa3, 0x89a0, 0xe944, 0x40d6, 0xdffb, 0x0, 0x1);
        gbc.writeMem(0xdffb, { 0x50 });
        gbc.writeMem(0xe792, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xaaa3, gbc.sp());
        EXPECT(0xe794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xdffb));
        EXPECT(0xcb, gbc.readMem(0xe792));
        EXPECT(0xce, gbc.readMem(0xe793));
        // CB CE 0071
        gbc.setState(0x46e9, 0x94a, 0x73f0, 0x7d91, 0x88fe, 0xeec0, 0x1, 0x1);
        gbc.writeMem(0x46e9, { 0xcb, 0xce });
        gbc.writeMem(0xeec0, { 0x20 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x94a, gbc.sp());
        EXPECT(0x46eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xeec0));
        // CB CE 0073
        gbc.setState(0x843a, 0x1266, 0x30f0, 0xdb15, 0xc23c, 0xc990, 0x0, 0x1);
        gbc.writeMem(0x843a, { 0xcb, 0xce });
        gbc.writeMem(0xc990, { 0x2b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1266, gbc.sp());
        EXPECT(0x843c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x843a));
        EXPECT(0xce, gbc.readMem(0x843b));
        EXPECT(0x2b, gbc.readMem(0xc990));
        // CB CE 0075
        gbc.setState(0x8a31, 0xf95c, 0x9920, 0x1f91, 0xdc48, 0xd0ff, 0x1, 0x1);
        gbc.writeMem(0x8a31, { 0xcb, 0xce });
        gbc.writeMem(0xd0ff, { 0x9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf95c, gbc.sp());
        EXPECT(0x8a33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a31));
        EXPECT(0xce, gbc.readMem(0x8a32));
        EXPECT(0xb, gbc.readMem(0xd0ff));
        // CB CE 007A
        gbc.setState(0x2486, 0x91fe, 0x39a0, 0xd201, 0xb48a, 0xb614, 0x0, 0x0);
        gbc.writeMem(0x2486, { 0xcb, 0xce });
        gbc.writeMem(0xb614, { 0x4d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x91fe, gbc.sp());
        EXPECT(0x2488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xb614));
        // CB CE 007C
        gbc.setState(0x1ce1, 0x3e9e, 0xea0, 0x408a, 0x5c3a, 0x1b91, 0x1, 0x0);
        gbc.writeMem(0x1b91, { 0x57 });
        gbc.writeMem(0x1ce1, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3e9e, gbc.sp());
        EXPECT(0x1ce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 007D
        gbc.setState(0xd0a6, 0x2b70, 0x2780, 0xcea, 0x8e96, 0x8e14, 0x1, 0x1);
        gbc.writeMem(0x8e14, { 0xfb });
        gbc.writeMem(0xd0a6, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2b70, gbc.sp());
        EXPECT(0xd0a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0x8e14));
        EXPECT(0xcb, gbc.readMem(0xd0a6));
        EXPECT(0xce, gbc.readMem(0xd0a7));
        // CB CE 007F
        gbc.setState(0x5ac, 0x402, 0x7d70, 0x4697, 0x9769, 0xcfbb, 0x1, 0x1);
        gbc.writeMem(0x5ac, { 0xcb, 0xce });
        gbc.writeMem(0xcfbb, { 0x8b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x402, gbc.sp());
        EXPECT(0x5ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xcfbb));
        // CB CE 0080
        gbc.setState(0xab25, 0x59ab, 0x4620, 0x9bf0, 0xf0ae, 0xe00d, 0x0, 0x1);
        gbc.writeMem(0xab25, { 0xcb, 0xce });
        gbc.writeMem(0xe00d, { 0xb9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x59ab, gbc.sp());
        EXPECT(0xab27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab25));
        EXPECT(0xce, gbc.readMem(0xab26));
        EXPECT(0xbb, gbc.readMem(0xe00d));
        // CB CE 0081
        gbc.setState(0x3bed, 0x9a89, 0x33e0, 0x20d0, 0x1da4, 0x8a95, 0x0, 0x1);
        gbc.writeMem(0x3bed, { 0xcb, 0xce });
        gbc.writeMem(0x8a95, { 0x2e });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9a89, gbc.sp());
        EXPECT(0x3bef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8a95));
        // CB CE 0082
        gbc.setState(0x186b, 0x4e52, 0x9ca0, 0x36fa, 0x4b8f, 0xf8ec, 0x0, 0x0);
        gbc.writeMem(0x186b, { 0xcb, 0xce });
        gbc.writeMem(0xf8ec, { 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4e52, gbc.sp());
        EXPECT(0x186d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xf8ec));
        // CB CE 0083
        gbc.setState(0x498e, 0xe28, 0xf2d0, 0xeb4e, 0xba41, 0x147a, 0x0, 0x0);
        gbc.writeMem(0x147a, { 0x5f });
        gbc.writeMem(0x498e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe28, gbc.sp());
        EXPECT(0x4990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 0084
        gbc.setState(0x984, 0xc459, 0xa3c0, 0x3f7, 0x5640, 0xac43, 0x1, 0x1);
        gbc.writeMem(0x984, { 0xcb, 0xce });
        gbc.writeMem(0xac43, { 0xaa });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc459, gbc.sp());
        EXPECT(0x986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xac43));
        // CB CE 0085
        gbc.setState(0x247f, 0xd81d, 0x7a80, 0xee3d, 0x73f1, 0x93c9, 0x0, 0x0);
        gbc.writeMem(0x247f, { 0xcb, 0xce });
        gbc.writeMem(0x93c9, { 0xbf });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd81d, gbc.sp());
        EXPECT(0x2481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x93c9));
        // CB CE 0086
        gbc.setState(0xe315, 0x58b1, 0x5bf0, 0xa2fa, 0x6ab, 0x69c3, 0x1, 0x1);
        gbc.writeMem(0x69c3, { 0xa7 });
        gbc.writeMem(0xe315, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x58b1, gbc.sp());
        EXPECT(0xe317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe315));
        EXPECT(0xce, gbc.readMem(0xe316));
        // CB CE 0087
        gbc.setState(0x9a98, 0xa967, 0x9d60, 0x71e6, 0xf065, 0x54f1, 0x0, 0x0);
        gbc.writeMem(0x54f1, { 0x3a });
        gbc.writeMem(0x9a98, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa967, gbc.sp());
        EXPECT(0x9a9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a98));
        EXPECT(0xce, gbc.readMem(0x9a99));
        // CB CE 0089
        gbc.setState(0x6884, 0xdfe5, 0x9ef0, 0xc75f, 0xd7fb, 0xbfb4, 0x1, 0x0);
        gbc.writeMem(0x6884, { 0xcb, 0xce });
        gbc.writeMem(0xbfb4, { 0x94 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdfe5, gbc.sp());
        EXPECT(0x6886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xbfb4));
        // CB CE 008A
        gbc.setState(0x90c2, 0x3f2, 0x5920, 0xa6a0, 0x4393, 0xaadc, 0x1, 0x1);
        gbc.writeMem(0x90c2, { 0xcb, 0xce });
        gbc.writeMem(0xaadc, { 0xbc });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3f2, gbc.sp());
        EXPECT(0x90c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90c2));
        EXPECT(0xce, gbc.readMem(0x90c3));
        EXPECT(0xbe, gbc.readMem(0xaadc));
        // CB CE 008C
        gbc.setState(0x79e3, 0xecc5, 0x9b0, 0xa007, 0x3684, 0xe9a, 0x1, 0x0);
        gbc.writeMem(0xe9a, { 0x2b });
        gbc.writeMem(0x79e3, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xecc5, gbc.sp());
        EXPECT(0x79e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 008D
        gbc.setState(0x7123, 0x9616, 0x1210, 0x22c2, 0x54db, 0xf264, 0x0, 0x1);
        gbc.writeMem(0x7123, { 0xcb, 0xce });
        gbc.writeMem(0xf264, { 0x7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9616, gbc.sp());
        EXPECT(0x7125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xf264));
        // CB CE 008E
        gbc.setState(0x98f7, 0xbd18, 0xfd10, 0xb33f, 0xa962, 0xd631, 0x1, 0x1);
        gbc.writeMem(0x98f7, { 0xcb, 0xce });
        gbc.writeMem(0xd631, { 0x5d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbd18, gbc.sp());
        EXPECT(0x98f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f7));
        EXPECT(0xce, gbc.readMem(0x98f8));
        EXPECT(0x5f, gbc.readMem(0xd631));
        // CB CE 0090
        gbc.setState(0xae2d, 0x672, 0x7660, 0xf60a, 0x7081, 0xa957, 0x0, 0x0);
        gbc.writeMem(0xa957, { 0x72 });
        gbc.writeMem(0xae2d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x672, gbc.sp());
        EXPECT(0xae2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa957));
        EXPECT(0xcb, gbc.readMem(0xae2d));
        EXPECT(0xce, gbc.readMem(0xae2e));
        // CB CE 0091
        gbc.setState(0x8eca, 0xf167, 0x6320, 0xd16f, 0x1365, 0x6929, 0x1, 0x1);
        gbc.writeMem(0x6929, { 0x6 });
        gbc.writeMem(0x8eca, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf167, gbc.sp());
        EXPECT(0x8ecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eca));
        EXPECT(0xce, gbc.readMem(0x8ecb));
        // CB CE 0092
        gbc.setState(0xa2d1, 0xea60, 0xf420, 0x12f4, 0xe96a, 0xfa49, 0x1, 0x1);
        gbc.writeMem(0xa2d1, { 0xcb, 0xce });
        gbc.writeMem(0xfa49, { 0xaf });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xea60, gbc.sp());
        EXPECT(0xa2d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d1));
        EXPECT(0xce, gbc.readMem(0xa2d2));
        EXPECT(0xaf, gbc.readMem(0xfa49));
        // CB CE 0094
        gbc.setState(0xeb87, 0xa714, 0xeea0, 0x9937, 0xd2df, 0xcee7, 0x0, 0x0);
        gbc.writeMem(0xcee7, { 0xb2 });
        gbc.writeMem(0xeb87, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa714, gbc.sp());
        EXPECT(0xeb89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xcee7));
        EXPECT(0xcb, gbc.readMem(0xeb87));
        EXPECT(0xce, gbc.readMem(0xeb88));
        // CB CE 0098
        gbc.setState(0xee6c, 0x6dc7, 0x9b90, 0xe292, 0xc723, 0x2d47, 0x0, 0x1);
        gbc.writeMem(0x2d47, { 0xcb });
        gbc.writeMem(0xee6c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6dc7, gbc.sp());
        EXPECT(0xee6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee6c));
        EXPECT(0xce, gbc.readMem(0xee6d));
        // CB CE 0099
        gbc.setState(0x29f5, 0x10ae, 0x2a90, 0x8705, 0xcfb9, 0x1d91, 0x0, 0x1);
        gbc.writeMem(0x1d91, { 0xa6 });
        gbc.writeMem(0x29f5, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x10ae, gbc.sp());
        EXPECT(0x29f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 009A
        gbc.setState(0x886, 0x2ffc, 0xe530, 0x9eb4, 0x19b8, 0x1cbd, 0x0, 0x0);
        gbc.writeMem(0x886, { 0xcb, 0xce });
        gbc.writeMem(0x1cbd, { 0xc6 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2ffc, gbc.sp());
        EXPECT(0x888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 009C
        gbc.setState(0x24ba, 0x6d6c, 0x62d0, 0x4aef, 0xe5d6, 0x332b, 0x1, 0x0);
        gbc.writeMem(0x24ba, { 0xcb, 0xce });
        gbc.writeMem(0x332b, { 0x6b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6d6c, gbc.sp());
        EXPECT(0x24bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 009D
        gbc.setState(0x239b, 0xf1b, 0x45a0, 0x7ec6, 0x8a2f, 0xfc9f, 0x1, 0x1);
        gbc.writeMem(0x239b, { 0xcb, 0xce });
        gbc.writeMem(0xfc9f, { 0xe4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf1b, gbc.sp());
        EXPECT(0x239d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xfc9f));
        // CB CE 009F
        gbc.setState(0x7896, 0xba31, 0x2b60, 0xe533, 0xf051, 0x864c, 0x0, 0x1);
        gbc.writeMem(0x7896, { 0xcb, 0xce });
        gbc.writeMem(0x864c, { 0xea });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xba31, gbc.sp());
        EXPECT(0x7898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x864c));
        // CB CE 00A0
        gbc.setState(0x6128, 0x81, 0x5960, 0xf0a1, 0xab06, 0x9e3, 0x1, 0x1);
        gbc.writeMem(0x9e3, { 0xf7 });
        gbc.writeMem(0x6128, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x81, gbc.sp());
        EXPECT(0x612a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 00A1
        gbc.setState(0x256c, 0x6386, 0xbff0, 0x6a89, 0xd054, 0x82fa, 0x1, 0x0);
        gbc.writeMem(0x256c, { 0xcb, 0xce });
        gbc.writeMem(0x82fa, { 0x3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6386, gbc.sp());
        EXPECT(0x256e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x82fa));
        // CB CE 00A2
        gbc.setState(0xd8b6, 0x4f87, 0xd4e0, 0xff3f, 0x16a2, 0x5a8e, 0x1, 0x0);
        gbc.writeMem(0x5a8e, { 0x9f });
        gbc.writeMem(0xd8b6, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4f87, gbc.sp());
        EXPECT(0xd8b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b6));
        EXPECT(0xce, gbc.readMem(0xd8b7));
        // CB CE 00A3
        gbc.setState(0xc86e, 0x4fc8, 0x1fd0, 0x6486, 0xeeb8, 0x9672, 0x1, 0x0);
        gbc.writeMem(0x9672, { 0x75 });
        gbc.writeMem(0xc86e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4fc8, gbc.sp());
        EXPECT(0xc870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x9672));
        EXPECT(0xcb, gbc.readMem(0xc86e));
        EXPECT(0xce, gbc.readMem(0xc86f));
        // CB CE 00A4
        gbc.setState(0xb231, 0xeb53, 0xa9c0, 0x3f32, 0xaf9f, 0xe308, 0x1, 0x1);
        gbc.writeMem(0xb231, { 0xcb, 0xce });
        gbc.writeMem(0xe308, { 0x8c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xeb53, gbc.sp());
        EXPECT(0xb233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb231));
        EXPECT(0xce, gbc.readMem(0xb232));
        EXPECT(0x8e, gbc.readMem(0xe308));
        // CB CE 00A6
        gbc.setState(0x9cdc, 0x6174, 0x6120, 0x7cea, 0xd549, 0xba5, 0x1, 0x1);
        gbc.writeMem(0xba5, { 0x5b });
        gbc.writeMem(0x9cdc, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6174, gbc.sp());
        EXPECT(0x9cde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cdc));
        EXPECT(0xce, gbc.readMem(0x9cdd));
        // CB CE 00A7
        gbc.setState(0x183d, 0xc4d5, 0xe2c0, 0x77d8, 0x41c2, 0xc35c, 0x1, 0x1);
        gbc.writeMem(0x183d, { 0xcb, 0xce });
        gbc.writeMem(0xc35c, { 0x3a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc4d5, gbc.sp());
        EXPECT(0x183f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xc35c));
        // CB CE 00A8
        gbc.setState(0x25ed, 0xfa79, 0x1370, 0x8b37, 0x50ce, 0xf52c, 0x0, 0x0);
        gbc.writeMem(0x25ed, { 0xcb, 0xce });
        gbc.writeMem(0xf52c, { 0x17 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfa79, gbc.sp());
        EXPECT(0x25ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xf52c));
        // CB CE 00A9
        gbc.setState(0xd665, 0x4a39, 0xe890, 0x391c, 0x484b, 0x9837, 0x1, 0x1);
        gbc.writeMem(0x9837, { 0x56 });
        gbc.writeMem(0xd665, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4a39, gbc.sp());
        EXPECT(0xd667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9837));
        EXPECT(0xcb, gbc.readMem(0xd665));
        EXPECT(0xce, gbc.readMem(0xd666));
        // CB CE 00AB
        gbc.setState(0x8fdd, 0xc8f4, 0x4090, 0x3a34, 0x5cae, 0xbe71, 0x1, 0x1);
        gbc.writeMem(0x8fdd, { 0xcb, 0xce });
        gbc.writeMem(0xbe71, { 0x2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc8f4, gbc.sp());
        EXPECT(0x8fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fdd));
        EXPECT(0xce, gbc.readMem(0x8fde));
        EXPECT(0x2, gbc.readMem(0xbe71));
        // CB CE 00AC
        gbc.setState(0x3d21, 0x7f6e, 0x9b20, 0x85d0, 0xb3dc, 0x9995, 0x0, 0x1);
        gbc.writeMem(0x3d21, { 0xcb, 0xce });
        gbc.writeMem(0x9995, { 0xc6 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7f6e, gbc.sp());
        EXPECT(0x3d23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9995));
        // CB CE 00AF
        gbc.setState(0x4247, 0xba60, 0x5d80, 0xdcd3, 0x9191, 0x3fa5, 0x1, 0x1);
        gbc.writeMem(0x3fa5, { 0xb6 });
        gbc.writeMem(0x4247, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xba60, gbc.sp());
        EXPECT(0x4249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 00B1
        gbc.setState(0x3094, 0x9bbf, 0x9200, 0x3b19, 0x1867, 0xe8cc, 0x0, 0x0);
        gbc.writeMem(0x3094, { 0xcb, 0xce });
        gbc.writeMem(0xe8cc, { 0x30 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9bbf, gbc.sp());
        EXPECT(0x3096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xe8cc));
        // CB CE 00B3
        gbc.setState(0x1d05, 0xa833, 0x71a0, 0x96e6, 0x48fc, 0xd88c, 0x0, 0x0);
        gbc.writeMem(0x1d05, { 0xcb, 0xce });
        gbc.writeMem(0xd88c, { 0x8f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa833, gbc.sp());
        EXPECT(0x1d07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd88c));
        // CB CE 00B4
        gbc.setState(0xdb82, 0xe813, 0x8d80, 0xfdf0, 0xa771, 0x37f6, 0x0, 0x0);
        gbc.writeMem(0x37f6, { 0xce });
        gbc.writeMem(0xdb82, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe813, gbc.sp());
        EXPECT(0xdb84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb82));
        EXPECT(0xce, gbc.readMem(0xdb83));
        // CB CE 00B5
        gbc.setState(0xa3f3, 0xdc9a, 0x18c0, 0x8dff, 0xe554, 0x898, 0x0, 0x1);
        gbc.writeMem(0x898, { 0xb7 });
        gbc.writeMem(0xa3f3, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xdc9a, gbc.sp());
        EXPECT(0xa3f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f3));
        EXPECT(0xce, gbc.readMem(0xa3f4));
        // CB CE 00B6
        gbc.setState(0x2a87, 0x4085, 0x6fc0, 0x6c42, 0x1a7a, 0x82d, 0x0, 0x1);
        gbc.writeMem(0x82d, { 0x4a });
        gbc.writeMem(0x2a87, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4085, gbc.sp());
        EXPECT(0x2a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 00B7
        gbc.setState(0x58ab, 0x9927, 0xa940, 0xf97f, 0x5eb5, 0x938a, 0x1, 0x1);
        gbc.writeMem(0x58ab, { 0xcb, 0xce });
        gbc.writeMem(0x938a, { 0xf7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9927, gbc.sp());
        EXPECT(0x58ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x938a));
        // CB CE 00B9
        gbc.setState(0x212d, 0x2a04, 0xc160, 0x50c5, 0xa0ca, 0x4a41, 0x1, 0x1);
        gbc.writeMem(0x212d, { 0xcb, 0xce });
        gbc.writeMem(0x4a41, { 0x3a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2a04, gbc.sp());
        EXPECT(0x212f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 00BA
        gbc.setState(0xea6, 0xd921, 0xbb20, 0x7fdc, 0x7571, 0x9619, 0x1, 0x0);
        gbc.writeMem(0xea6, { 0xcb, 0xce });
        gbc.writeMem(0x9619, { 0x23 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd921, gbc.sp());
        EXPECT(0xea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x9619));
        // CB CE 00BB
        gbc.setState(0x4e7, 0x39ad, 0x58b0, 0xd44a, 0x1aed, 0xc0b7, 0x1, 0x1);
        gbc.writeMem(0x4e7, { 0xcb, 0xce });
        gbc.writeMem(0xc0b7, { 0x20 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x39ad, gbc.sp());
        EXPECT(0x4e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xc0b7));
        // CB CE 00BC
        gbc.setState(0x94a8, 0xb6ac, 0x8f90, 0xb572, 0x13ca, 0x432e, 0x0, 0x0);
        gbc.writeMem(0x432e, { 0x77 });
        gbc.writeMem(0x94a8, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb6ac, gbc.sp());
        EXPECT(0x94aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94a8));
        EXPECT(0xce, gbc.readMem(0x94a9));
        // CB CE 00BD
        gbc.setState(0xe359, 0x1167, 0x47e0, 0x8f66, 0x46fc, 0x3c80, 0x0, 0x1);
        gbc.writeMem(0x3c80, { 0x7e });
        gbc.writeMem(0xe359, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1167, gbc.sp());
        EXPECT(0xe35b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe359));
        EXPECT(0xce, gbc.readMem(0xe35a));
        // CB CE 00BE
        gbc.setState(0xbd5d, 0x1250, 0x7230, 0x2d4, 0x6cd8, 0x25ee, 0x0, 0x1);
        gbc.writeMem(0x25ee, { 0x32 });
        gbc.writeMem(0xbd5d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1250, gbc.sp());
        EXPECT(0xbd5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd5d));
        EXPECT(0xce, gbc.readMem(0xbd5e));
        // CB CE 00BF
        gbc.setState(0x9e21, 0xa732, 0x79c0, 0x7b0c, 0x866f, 0x8679, 0x1, 0x0);
        gbc.writeMem(0x8679, { 0x21 });
        gbc.writeMem(0x9e21, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa732, gbc.sp());
        EXPECT(0x9e23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x8679));
        EXPECT(0xcb, gbc.readMem(0x9e21));
        EXPECT(0xce, gbc.readMem(0x9e22));
        // CB CE 00C0
        gbc.setState(0x2ed1, 0xc092, 0x46a0, 0x6fb, 0x75e5, 0x5496, 0x1, 0x1);
        gbc.writeMem(0x2ed1, { 0xcb, 0xce });
        gbc.writeMem(0x5496, { 0x26 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc092, gbc.sp());
        EXPECT(0x2ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 00C1
        gbc.setState(0x124a, 0x85b0, 0xf030, 0xf63e, 0x3993, 0x7136, 0x1, 0x0);
        gbc.writeMem(0x124a, { 0xcb, 0xce });
        gbc.writeMem(0x7136, { 0x2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x85b0, gbc.sp());
        EXPECT(0x124c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 00C2
        gbc.setState(0x4561, 0x30ba, 0x3960, 0xa152, 0x5615, 0xecc0, 0x1, 0x0);
        gbc.writeMem(0x4561, { 0xcb, 0xce });
        gbc.writeMem(0xecc0, { 0xe9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x30ba, gbc.sp());
        EXPECT(0x4563, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xecc0));
        // CB CE 00C3
        gbc.setState(0x4f63, 0x6ed3, 0x4c70, 0x4d84, 0x95d5, 0xc3a5, 0x1, 0x1);
        gbc.writeMem(0x4f63, { 0xcb, 0xce });
        gbc.writeMem(0xc3a5, { 0xf6 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6ed3, gbc.sp());
        EXPECT(0x4f65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xc3a5));
        // CB CE 00C4
        gbc.setState(0x6ec3, 0xbc9a, 0x4cb0, 0x9d71, 0x699c, 0xb7fc, 0x0, 0x1);
        gbc.writeMem(0x6ec3, { 0xcb, 0xce });
        gbc.writeMem(0xb7fc, { 0x62 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbc9a, gbc.sp());
        EXPECT(0x6ec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xb7fc));
        // CB CE 00C5
        gbc.setState(0xd269, 0x734a, 0xe8d0, 0x6dd, 0xa77, 0xb810, 0x1, 0x1);
        gbc.writeMem(0xb810, { 0x73 });
        gbc.writeMem(0xd269, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x734a, gbc.sp());
        EXPECT(0xd26b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xb810));
        EXPECT(0xcb, gbc.readMem(0xd269));
        EXPECT(0xce, gbc.readMem(0xd26a));
        // CB CE 00C6
        gbc.setState(0x97a0, 0x5e30, 0x67a0, 0xc938, 0xac7d, 0x97c6, 0x0, 0x1);
        gbc.writeMem(0x97a0, { 0xcb, 0xce });
        gbc.writeMem(0x97c6, { 0x28 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5e30, gbc.sp());
        EXPECT(0x97a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97a0));
        EXPECT(0xce, gbc.readMem(0x97a1));
        EXPECT(0x2a, gbc.readMem(0x97c6));
        // CB CE 00C7
        gbc.setState(0x3281, 0xffde, 0xfd60, 0xb3ce, 0xb192, 0x8934, 0x1, 0x1);
        gbc.writeMem(0x3281, { 0xcb, 0xce });
        gbc.writeMem(0x8934, { 0x86 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xffde, gbc.sp());
        EXPECT(0x3283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8934));
        // CB CE 00C8
        gbc.setState(0xef2d, 0x9094, 0x5df0, 0x3bf4, 0xaa28, 0x875a, 0x1, 0x1);
        gbc.writeMem(0x875a, { 0xbf });
        gbc.writeMem(0xef2d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9094, gbc.sp());
        EXPECT(0xef2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x875a));
        EXPECT(0xcb, gbc.readMem(0xef2d));
        EXPECT(0xce, gbc.readMem(0xef2e));
        // CB CE 00C9
        gbc.setState(0x6529, 0xc086, 0x8b50, 0xfe52, 0xc369, 0xa6bc, 0x1, 0x1);
        gbc.writeMem(0x6529, { 0xcb, 0xce });
        gbc.writeMem(0xa6bc, { 0x6c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc086, gbc.sp());
        EXPECT(0x652b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa6bc));
        // CB CE 00CA
        gbc.setState(0x363, 0xa2f1, 0x5180, 0xc0d4, 0xc229, 0xf8a3, 0x0, 0x1);
        gbc.writeMem(0x363, { 0xcb, 0xce });
        gbc.writeMem(0xf8a3, { 0x85 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa2f1, gbc.sp());
        EXPECT(0x365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xf8a3));
        // CB CE 00CB
        gbc.setState(0x1af5, 0xac6f, 0x7f10, 0x515c, 0xb123, 0xfc0f, 0x0, 0x1);
        gbc.writeMem(0x1af5, { 0xcb, 0xce });
        gbc.writeMem(0xfc0f, { 0x34 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xac6f, gbc.sp());
        EXPECT(0x1af7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xfc0f));
        // CB CE 00CC
        gbc.setState(0xc33d, 0xbfb8, 0xa7e0, 0xf027, 0xb5e1, 0xd8e8, 0x1, 0x0);
        gbc.writeMem(0xc33d, { 0xcb, 0xce });
        gbc.writeMem(0xd8e8, { 0x8a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbfb8, gbc.sp());
        EXPECT(0xc33f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc33d));
        EXPECT(0xce, gbc.readMem(0xc33e));
        EXPECT(0x8a, gbc.readMem(0xd8e8));
        // CB CE 00CE
        gbc.setState(0x490f, 0x918a, 0x8ca0, 0x904e, 0x4b09, 0x5cfe, 0x1, 0x1);
        gbc.writeMem(0x490f, { 0xcb, 0xce });
        gbc.writeMem(0x5cfe, { 0x3f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x918a, gbc.sp());
        EXPECT(0x4911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 00CF
        gbc.setState(0x2b89, 0x65ed, 0x2410, 0x5400, 0xe790, 0xad5f, 0x1, 0x1);
        gbc.writeMem(0x2b89, { 0xcb, 0xce });
        gbc.writeMem(0xad5f, { 0x85 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x65ed, gbc.sp());
        EXPECT(0x2b8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xad5f));
        // CB CE 00D0
        gbc.setState(0x1a48, 0xc8a9, 0x1a90, 0x5ec2, 0x5927, 0xe963, 0x1, 0x1);
        gbc.writeMem(0x1a48, { 0xcb, 0xce });
        gbc.writeMem(0xe963, { 0xa });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc8a9, gbc.sp());
        EXPECT(0x1a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe963));
        // CB CE 00D1
        gbc.setState(0x7e81, 0x80a8, 0x2e50, 0x4a12, 0x478c, 0x6143, 0x1, 0x0);
        gbc.writeMem(0x6143, { 0x4b });
        gbc.writeMem(0x7e81, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x80a8, gbc.sp());
        EXPECT(0x7e83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 00D2
        gbc.setState(0x9ef4, 0xf58, 0x5730, 0x2827, 0xcd47, 0x3f94, 0x0, 0x0);
        gbc.writeMem(0x3f94, { 0xd6 });
        gbc.writeMem(0x9ef4, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf58, gbc.sp());
        EXPECT(0x9ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ef4));
        EXPECT(0xce, gbc.readMem(0x9ef5));
        // CB CE 00D3
        gbc.setState(0xda99, 0x1287, 0x8360, 0xa63, 0x251b, 0x29d2, 0x1, 0x0);
        gbc.writeMem(0x29d2, { 0x66 });
        gbc.writeMem(0xda99, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1287, gbc.sp());
        EXPECT(0xda9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda99));
        EXPECT(0xce, gbc.readMem(0xda9a));
        // CB CE 00D4
        gbc.setState(0x3b3f, 0x73a7, 0x96d0, 0xbc7e, 0x3d18, 0x2c82, 0x1, 0x0);
        gbc.writeMem(0x2c82, { 0xc2 });
        gbc.writeMem(0x3b3f, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x73a7, gbc.sp());
        EXPECT(0x3b41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 00D5
        gbc.setState(0xda49, 0x2b6f, 0x850, 0x1a6a, 0x619d, 0xc3ce, 0x0, 0x1);
        gbc.writeMem(0xc3ce, { 0xa0 });
        gbc.writeMem(0xda49, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2b6f, gbc.sp());
        EXPECT(0xda4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc3ce));
        EXPECT(0xcb, gbc.readMem(0xda49));
        EXPECT(0xce, gbc.readMem(0xda4a));
        // CB CE 00D6
        gbc.setState(0xa28c, 0xe798, 0x7be0, 0x5187, 0xa3, 0x7421, 0x1, 0x1);
        gbc.writeMem(0x7421, { 0x36 });
        gbc.writeMem(0xa28c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe798, gbc.sp());
        EXPECT(0xa28e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa28c));
        EXPECT(0xce, gbc.readMem(0xa28d));
        // CB CE 00D7
        gbc.setState(0xa59f, 0xb8d0, 0xa6d0, 0x3c6, 0xb341, 0x9e22, 0x0, 0x0);
        gbc.writeMem(0x9e22, { 0x96 });
        gbc.writeMem(0xa59f, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb8d0, gbc.sp());
        EXPECT(0xa5a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x9e22));
        EXPECT(0xcb, gbc.readMem(0xa59f));
        EXPECT(0xce, gbc.readMem(0xa5a0));
        // CB CE 00D8
        gbc.setState(0x3a6e, 0xb25f, 0x83f0, 0x9015, 0xc380, 0xfa5b, 0x0, 0x0);
        gbc.writeMem(0x3a6e, { 0xcb, 0xce });
        gbc.writeMem(0xfa5b, { 0x7a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb25f, gbc.sp());
        EXPECT(0x3a70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xfa5b));
        // CB CE 00DA
        gbc.setState(0xbff, 0xaa98, 0x8760, 0x4d3, 0x8334, 0x52a1, 0x1, 0x1);
        gbc.writeMem(0xbff, { 0xcb, 0xce });
        gbc.writeMem(0x52a1, { 0x1a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xaa98, gbc.sp());
        EXPECT(0xc01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 00DB
        gbc.setState(0xc8c8, 0xdf26, 0x6b10, 0x6246, 0x8c31, 0xd9e1, 0x1, 0x0);
        gbc.writeMem(0xc8c8, { 0xcb, 0xce });
        gbc.writeMem(0xd9e1, { 0x5c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xdf26, gbc.sp());
        EXPECT(0xc8ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8c8));
        EXPECT(0xce, gbc.readMem(0xc8c9));
        EXPECT(0x5e, gbc.readMem(0xd9e1));
        // CB CE 00DC
        gbc.setState(0xaa3f, 0xf2e1, 0x98d0, 0x9291, 0x28f2, 0xd501, 0x1, 0x1);
        gbc.writeMem(0xaa3f, { 0xcb, 0xce });
        gbc.writeMem(0xd501, { 0x8a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf2e1, gbc.sp());
        EXPECT(0xaa41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa3f));
        EXPECT(0xce, gbc.readMem(0xaa40));
        EXPECT(0x8a, gbc.readMem(0xd501));
        // CB CE 00DD
        gbc.setState(0x9ef3, 0xf156, 0x6290, 0xad11, 0x7733, 0x635c, 0x1, 0x1);
        gbc.writeMem(0x635c, { 0xba });
        gbc.writeMem(0x9ef3, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf156, gbc.sp());
        EXPECT(0x9ef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ef3));
        EXPECT(0xce, gbc.readMem(0x9ef4));
        // CB CE 00DE
        gbc.setState(0xe5a6, 0x9f31, 0x5d90, 0x1e3f, 0x9a4d, 0xbd39, 0x1, 0x1);
        gbc.writeMem(0xbd39, { 0x5d });
        gbc.writeMem(0xe5a6, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9f31, gbc.sp());
        EXPECT(0xe5a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xbd39));
        EXPECT(0xcb, gbc.readMem(0xe5a6));
        EXPECT(0xce, gbc.readMem(0xe5a7));
        // CB CE 00DF
        gbc.setState(0xb2b, 0x7123, 0xb190, 0x2ea8, 0x88f8, 0x52d7, 0x0, 0x0);
        gbc.writeMem(0xb2b, { 0xcb, 0xce });
        gbc.writeMem(0x52d7, { 0x7f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7123, gbc.sp());
        EXPECT(0xb2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 00E0
        gbc.setState(0x9b3, 0x48c6, 0xf7f0, 0x45b7, 0x21df, 0x80bd, 0x1, 0x1);
        gbc.writeMem(0x9b3, { 0xcb, 0xce });
        gbc.writeMem(0x80bd, { 0x37 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x48c6, gbc.sp());
        EXPECT(0x9b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x80bd));
        // CB CE 00E1
        gbc.setState(0xbd26, 0x786d, 0xc270, 0xc1db, 0x700d, 0xaf1, 0x1, 0x0);
        gbc.writeMem(0xaf1, { 0x87 });
        gbc.writeMem(0xbd26, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x786d, gbc.sp());
        EXPECT(0xbd28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd26));
        EXPECT(0xce, gbc.readMem(0xbd27));
        // CB CE 00E2
        gbc.setState(0x27c5, 0x2bc, 0x3260, 0x3d30, 0xdf84, 0xb75e, 0x1, 0x1);
        gbc.writeMem(0x27c5, { 0xcb, 0xce });
        gbc.writeMem(0xb75e, { 0xf1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2bc, gbc.sp());
        EXPECT(0x27c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xb75e));
        // CB CE 00E3
        gbc.setState(0x4ce7, 0x34d8, 0xc870, 0x3b3f, 0xa6c2, 0xd4f0, 0x1, 0x0);
        gbc.writeMem(0x4ce7, { 0xcb, 0xce });
        gbc.writeMem(0xd4f0, { 0x78 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x34d8, gbc.sp());
        EXPECT(0x4ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd4f0));
        // CB CE 00E4
        gbc.setState(0x767a, 0xaa3e, 0x9df0, 0x17f6, 0x6199, 0xaf03, 0x0, 0x0);
        gbc.writeMem(0x767a, { 0xcb, 0xce });
        gbc.writeMem(0xaf03, { 0x58 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xaa3e, gbc.sp());
        EXPECT(0x767c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xaf03));
        // CB CE 00E5
        gbc.setState(0xcf94, 0xed84, 0xed20, 0x156f, 0xd007, 0xd677, 0x0, 0x1);
        gbc.writeMem(0xcf94, { 0xcb, 0xce });
        gbc.writeMem(0xd677, { 0xf4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xed84, gbc.sp());
        EXPECT(0xcf96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf94));
        EXPECT(0xce, gbc.readMem(0xcf95));
        EXPECT(0xf6, gbc.readMem(0xd677));
        // CB CE 00E6
        gbc.setState(0x1939, 0xaf30, 0xc340, 0xfbc2, 0x1c1a, 0x9261, 0x0, 0x1);
        gbc.writeMem(0x1939, { 0xcb, 0xce });
        gbc.writeMem(0x9261, { 0xb3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xaf30, gbc.sp());
        EXPECT(0x193b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9261));
        // CB CE 00E7
        gbc.setState(0x35ee, 0x7e25, 0x5870, 0x3f0d, 0x3daf, 0xe27a, 0x1, 0x1);
        gbc.writeMem(0x35ee, { 0xcb, 0xce });
        gbc.writeMem(0xe27a, { 0x6b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7e25, gbc.sp());
        EXPECT(0x35f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xe27a));
        // CB CE 00E9
        gbc.setState(0x6274, 0x4b0, 0xd900, 0xb976, 0x59bf, 0xd69f, 0x0, 0x1);
        gbc.writeMem(0x6274, { 0xcb, 0xce });
        gbc.writeMem(0xd69f, { 0xba });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4b0, gbc.sp());
        EXPECT(0x6276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xd69f));
        // CB CE 00EC
        gbc.setState(0xfd5, 0x5562, 0x6d0, 0x205d, 0xeb6b, 0x811c, 0x0, 0x1);
        gbc.writeMem(0xfd5, { 0xcb, 0xce });
        gbc.writeMem(0x811c, { 0xe2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5562, gbc.sp());
        EXPECT(0xfd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x811c));
        // CB CE 00ED
        gbc.setState(0x7b9d, 0x83ad, 0xa500, 0x66d0, 0xece3, 0xbfa, 0x1, 0x1);
        gbc.writeMem(0xbfa, { 0xcb });
        gbc.writeMem(0x7b9d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x83ad, gbc.sp());
        EXPECT(0x7b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 00EF
        gbc.setState(0xea87, 0xd3ce, 0xeb40, 0x246d, 0x80ad, 0x351d, 0x1, 0x0);
        gbc.writeMem(0x351d, { 0xe });
        gbc.writeMem(0xea87, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd3ce, gbc.sp());
        EXPECT(0xea89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea87));
        EXPECT(0xce, gbc.readMem(0xea88));
        // CB CE 00F0
        gbc.setState(0x47bb, 0xfa3, 0xaae0, 0xa128, 0xbe4d, 0x74d1, 0x1, 0x1);
        gbc.writeMem(0x47bb, { 0xcb, 0xce });
        gbc.writeMem(0x74d1, { 0x4e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xfa3, gbc.sp());
        EXPECT(0x47bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 00F1
        gbc.setState(0x25dd, 0xdd21, 0x16e0, 0x1f30, 0x4345, 0xfcad, 0x0, 0x1);
        gbc.writeMem(0x25dd, { 0xcb, 0xce });
        gbc.writeMem(0xfcad, { 0x45 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xdd21, gbc.sp());
        EXPECT(0x25df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xfcad));
        // CB CE 00F2
        gbc.setState(0x15a, 0xde3, 0xce50, 0x94a, 0x96a0, 0xe482, 0x1, 0x1);
        gbc.writeMem(0x15a, { 0xcb, 0xce });
        gbc.writeMem(0xe482, { 0x2d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xde3, gbc.sp());
        EXPECT(0x15c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe482));
        // CB CE 00F3
        gbc.setState(0x1950, 0xbb1a, 0x3f40, 0x61ce, 0xf4fb, 0x9139, 0x1, 0x1);
        gbc.writeMem(0x1950, { 0xcb, 0xce });
        gbc.writeMem(0x9139, { 0x21 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbb1a, gbc.sp());
        EXPECT(0x1952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x9139));
        // CB CE 00F5
        gbc.setState(0x6de, 0x65cf, 0x5070, 0x2615, 0xc17a, 0x4772, 0x0, 0x0);
        gbc.writeMem(0x6de, { 0xcb, 0xce });
        gbc.writeMem(0x4772, { 0x9e });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x65cf, gbc.sp());
        EXPECT(0x6e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 00F6
        gbc.setState(0x7fbb, 0x307, 0x66b0, 0x5c79, 0x1677, 0x9a00, 0x1, 0x0);
        gbc.writeMem(0x7fbb, { 0xcb, 0xce });
        gbc.writeMem(0x9a00, { 0x8a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x307, gbc.sp());
        EXPECT(0x7fbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9a00));
        // CB CE 00F7
        gbc.setState(0x43cc, 0xe440, 0x47b0, 0xbd45, 0x26e8, 0x4f3f, 0x1, 0x1);
        gbc.writeMem(0x43cc, { 0xcb, 0xce });
        gbc.writeMem(0x4f3f, { 0x46 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe440, gbc.sp());
        EXPECT(0x43ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 00F9
        gbc.setState(0x8fec, 0xfca5, 0x8dc0, 0x1a3, 0x3d97, 0xd26f, 0x1, 0x0);
        gbc.writeMem(0x8fec, { 0xcb, 0xce });
        gbc.writeMem(0xd26f, { 0xed });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xfca5, gbc.sp());
        EXPECT(0x8fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fec));
        EXPECT(0xce, gbc.readMem(0x8fed));
        EXPECT(0xef, gbc.readMem(0xd26f));
        // CB CE 00FB
        gbc.setState(0x377d, 0x34ba, 0x80d0, 0x52ef, 0xc79e, 0x2c4b, 0x1, 0x0);
        gbc.writeMem(0x2c4b, { 0x8f });
        gbc.writeMem(0x377d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x34ba, gbc.sp());
        EXPECT(0x377f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 00FD
        gbc.setState(0xc578, 0x9eaf, 0x8300, 0xbcad, 0xaf26, 0xc4e0, 0x1, 0x0);
        gbc.writeMem(0xc4e0, { 0x3c });
        gbc.writeMem(0xc578, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9eaf, gbc.sp());
        EXPECT(0xc57a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc4e0));
        EXPECT(0xcb, gbc.readMem(0xc578));
        EXPECT(0xce, gbc.readMem(0xc579));
        // CB CE 00FF
        gbc.setState(0xa022, 0x9f25, 0xe420, 0x54e3, 0x10e1, 0x11e6, 0x0, 0x1);
        gbc.writeMem(0x11e6, { 0x3b });
        gbc.writeMem(0xa022, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9f25, gbc.sp());
        EXPECT(0xa024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa022));
        EXPECT(0xce, gbc.readMem(0xa023));
        // CB CE 0100
        gbc.setState(0x2bb4, 0x6349, 0x5cc0, 0x2d9f, 0xe7f1, 0x5f93, 0x1, 0x1);
        gbc.writeMem(0x2bb4, { 0xcb, 0xce });
        gbc.writeMem(0x5f93, { 0x3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6349, gbc.sp());
        EXPECT(0x2bb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 0102
        gbc.setState(0x6c64, 0x26bf, 0xba0, 0x871a, 0xd1b6, 0x868c, 0x1, 0x0);
        gbc.writeMem(0x6c64, { 0xcb, 0xce });
        gbc.writeMem(0x868c, { 0xde });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x26bf, gbc.sp());
        EXPECT(0x6c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x868c));
        // CB CE 0103
        gbc.setState(0xb099, 0x28a0, 0x1e80, 0xd1a5, 0x94ca, 0xa553, 0x0, 0x1);
        gbc.writeMem(0xa553, { 0xcd });
        gbc.writeMem(0xb099, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x28a0, gbc.sp());
        EXPECT(0xb09b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xa553));
        EXPECT(0xcb, gbc.readMem(0xb099));
        EXPECT(0xce, gbc.readMem(0xb09a));
        // CB CE 0106
        gbc.setState(0x2f07, 0x1c97, 0x49a0, 0xd242, 0xd0a, 0x2f5e, 0x1, 0x1);
        gbc.writeMem(0x2f07, { 0xcb, 0xce });
        gbc.writeMem(0x2f5e, { 0xaf });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1c97, gbc.sp());
        EXPECT(0x2f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 0107
        gbc.setState(0xcb1b, 0x2ea0, 0xf910, 0xb223, 0xa282, 0x53a, 0x1, 0x0);
        gbc.writeMem(0x53a, { 0x2a });
        gbc.writeMem(0xcb1b, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2ea0, gbc.sp());
        EXPECT(0xcb1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb1b));
        EXPECT(0xce, gbc.readMem(0xcb1c));
        // CB CE 0108
        gbc.setState(0x2ad1, 0x2449, 0x35d0, 0xdb5, 0x4f87, 0x430b, 0x1, 0x1);
        gbc.writeMem(0x2ad1, { 0xcb, 0xce });
        gbc.writeMem(0x430b, { 0xa7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2449, gbc.sp());
        EXPECT(0x2ad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 0109
        gbc.setState(0x7b28, 0x56ff, 0xcd00, 0x35d9, 0x8d58, 0x94de, 0x1, 0x0);
        gbc.writeMem(0x7b28, { 0xcb, 0xce });
        gbc.writeMem(0x94de, { 0xb1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x56ff, gbc.sp());
        EXPECT(0x7b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x94de));
        // CB CE 010B
        gbc.setState(0xec2e, 0x2a76, 0xaa00, 0x9555, 0xd633, 0xc470, 0x0, 0x0);
        gbc.writeMem(0xc470, { 0x5b });
        gbc.writeMem(0xec2e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2a76, gbc.sp());
        EXPECT(0xec30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc470));
        EXPECT(0xcb, gbc.readMem(0xec2e));
        EXPECT(0xce, gbc.readMem(0xec2f));
        // CB CE 010D
        gbc.setState(0xc5ec, 0x4bd4, 0x9f60, 0x79d8, 0xc044, 0x1034, 0x0, 0x1);
        gbc.writeMem(0x1034, { 0x67 });
        gbc.writeMem(0xc5ec, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4bd4, gbc.sp());
        EXPECT(0xc5ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ec));
        EXPECT(0xce, gbc.readMem(0xc5ed));
        // CB CE 010E
        gbc.setState(0x55c2, 0xd7d3, 0x2820, 0xad6d, 0xec10, 0x3a37, 0x1, 0x0);
        gbc.writeMem(0x3a37, { 0x1a });
        gbc.writeMem(0x55c2, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd7d3, gbc.sp());
        EXPECT(0x55c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 0110
        gbc.setState(0x5125, 0x9a27, 0xde10, 0xd5a1, 0x915b, 0xc6ab, 0x1, 0x0);
        gbc.writeMem(0x5125, { 0xcb, 0xce });
        gbc.writeMem(0xc6ab, { 0xd2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9a27, gbc.sp());
        EXPECT(0x5127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xc6ab));
        // CB CE 0111
        gbc.setState(0x25ac, 0x650b, 0x62e0, 0x1e7a, 0x9410, 0x7e6d, 0x0, 0x0);
        gbc.writeMem(0x25ac, { 0xcb, 0xce });
        gbc.writeMem(0x7e6d, { 0xbb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x650b, gbc.sp());
        EXPECT(0x25ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 0113
        gbc.setState(0x22e9, 0x8df6, 0xbec0, 0x2e9f, 0xdeae, 0xa85e, 0x1, 0x1);
        gbc.writeMem(0x22e9, { 0xcb, 0xce });
        gbc.writeMem(0xa85e, { 0x3c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8df6, gbc.sp());
        EXPECT(0x22eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa85e));
        // CB CE 0114
        gbc.setState(0x29bd, 0x503b, 0x97d0, 0x71a0, 0xeb4e, 0x4693, 0x0, 0x0);
        gbc.writeMem(0x29bd, { 0xcb, 0xce });
        gbc.writeMem(0x4693, { 0x9b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x503b, gbc.sp());
        EXPECT(0x29bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 0117
        gbc.setState(0x473a, 0xb92b, 0x33a0, 0xd4b4, 0xc66a, 0xea2e, 0x0, 0x1);
        gbc.writeMem(0x473a, { 0xcb, 0xce });
        gbc.writeMem(0xea2e, { 0x40 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb92b, gbc.sp());
        EXPECT(0x473c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xea2e));
        // CB CE 011A
        gbc.setState(0x4f59, 0x8092, 0xce30, 0xbdb8, 0x2a66, 0x98c0, 0x1, 0x0);
        gbc.writeMem(0x4f59, { 0xcb, 0xce });
        gbc.writeMem(0x98c0, { 0x47 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8092, gbc.sp());
        EXPECT(0x4f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x98c0));
        // CB CE 011D
        gbc.setState(0x33c1, 0x112a, 0x3280, 0x684f, 0xd5c7, 0x1fc8, 0x0, 0x1);
        gbc.writeMem(0x1fc8, { 0xdf });
        gbc.writeMem(0x33c1, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x112a, gbc.sp());
        EXPECT(0x33c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 011F
        gbc.setState(0x60ac, 0xf409, 0x5790, 0x356e, 0x9366, 0x873b, 0x0, 0x0);
        gbc.writeMem(0x60ac, { 0xcb, 0xce });
        gbc.writeMem(0x873b, { 0x95 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf409, gbc.sp());
        EXPECT(0x60ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x873b));
        // CB CE 0120
        gbc.setState(0x8816, 0x9509, 0xfe70, 0xdedf, 0x8e95, 0x9dd3, 0x0, 0x0);
        gbc.writeMem(0x8816, { 0xcb, 0xce });
        gbc.writeMem(0x9dd3, { 0x1 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9509, gbc.sp());
        EXPECT(0x8818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8816));
        EXPECT(0xce, gbc.readMem(0x8817));
        EXPECT(0x3, gbc.readMem(0x9dd3));
        // CB CE 0121
        gbc.setState(0xc8f0, 0x3e19, 0xaaa0, 0x50cb, 0x9c5d, 0x85c9, 0x1, 0x1);
        gbc.writeMem(0x85c9, { 0x57 });
        gbc.writeMem(0xc8f0, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3e19, gbc.sp());
        EXPECT(0xc8f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x85c9));
        EXPECT(0xcb, gbc.readMem(0xc8f0));
        EXPECT(0xce, gbc.readMem(0xc8f1));
        // CB CE 0123
        gbc.setState(0xd5bc, 0xe4d3, 0x41f0, 0x80e5, 0xe6df, 0xeee8, 0x0, 0x1);
        gbc.writeMem(0xd5bc, { 0xcb, 0xce });
        gbc.writeMem(0xeee8, { 0xab });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe4d3, gbc.sp());
        EXPECT(0xd5be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5bc));
        EXPECT(0xce, gbc.readMem(0xd5bd));
        EXPECT(0xab, gbc.readMem(0xeee8));
        // CB CE 0124
        gbc.setState(0x7b4c, 0xe9d9, 0xd030, 0xf764, 0xe507, 0xd54f, 0x0, 0x1);
        gbc.writeMem(0x7b4c, { 0xcb, 0xce });
        gbc.writeMem(0xd54f, { 0xb8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe9d9, gbc.sp());
        EXPECT(0x7b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xd54f));
        // CB CE 0126
        gbc.setState(0x46b, 0x8f32, 0x3ac0, 0x6543, 0x61ad, 0xbbfb, 0x0, 0x0);
        gbc.writeMem(0x46b, { 0xcb, 0xce });
        gbc.writeMem(0xbbfb, { 0x97 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8f32, gbc.sp());
        EXPECT(0x46d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xbbfb));
        // CB CE 0127
        gbc.setState(0x3bcc, 0xf7af, 0x3720, 0x77eb, 0x35e4, 0x47cd, 0x0, 0x0);
        gbc.writeMem(0x3bcc, { 0xcb, 0xce });
        gbc.writeMem(0x47cd, { 0xa2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf7af, gbc.sp());
        EXPECT(0x3bce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 012B
        gbc.setState(0xe4ab, 0xcbc0, 0xf2c0, 0x92f6, 0xd29, 0x822c, 0x0, 0x0);
        gbc.writeMem(0x822c, { 0xfd });
        gbc.writeMem(0xe4ab, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcbc0, gbc.sp());
        EXPECT(0xe4ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x822c));
        EXPECT(0xcb, gbc.readMem(0xe4ab));
        EXPECT(0xce, gbc.readMem(0xe4ac));
        // CB CE 012C
        gbc.setState(0x4065, 0xb299, 0x29e0, 0xc67b, 0xae51, 0xedfe, 0x0, 0x0);
        gbc.writeMem(0x4065, { 0xcb, 0xce });
        gbc.writeMem(0xedfe, { 0x1e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb299, gbc.sp());
        EXPECT(0x4067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xedfe));
        // CB CE 012D
        gbc.setState(0x9381, 0x26c, 0x1760, 0xe879, 0x1c68, 0xacc3, 0x1, 0x1);
        gbc.writeMem(0x9381, { 0xcb, 0xce });
        gbc.writeMem(0xacc3, { 0x7f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x26c, gbc.sp());
        EXPECT(0x9383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9381));
        EXPECT(0xce, gbc.readMem(0x9382));
        EXPECT(0x7f, gbc.readMem(0xacc3));
        // CB CE 012E
        gbc.setState(0xbab6, 0x5cc6, 0xb750, 0xcb1b, 0x47bb, 0x888a, 0x1, 0x1);
        gbc.writeMem(0x888a, { 0x5d });
        gbc.writeMem(0xbab6, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5cc6, gbc.sp());
        EXPECT(0xbab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x888a));
        EXPECT(0xcb, gbc.readMem(0xbab6));
        EXPECT(0xce, gbc.readMem(0xbab7));
        // CB CE 012F
        gbc.setState(0x3bc9, 0xbfaa, 0x4e30, 0xfea0, 0x4b3c, 0x5d23, 0x1, 0x0);
        gbc.writeMem(0x3bc9, { 0xcb, 0xce });
        gbc.writeMem(0x5d23, { 0x6 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xbfaa, gbc.sp());
        EXPECT(0x3bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 0130
        gbc.setState(0x5127, 0xd531, 0x600, 0x3ba5, 0x36b2, 0xf4bf, 0x1, 0x0);
        gbc.writeMem(0x5127, { 0xcb, 0xce });
        gbc.writeMem(0xf4bf, { 0xd6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd531, gbc.sp());
        EXPECT(0x5129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xf4bf));
        // CB CE 0131
        gbc.setState(0xee77, 0xa108, 0x3410, 0x2860, 0xed36, 0x7e55, 0x1, 0x0);
        gbc.writeMem(0x7e55, { 0x2b });
        gbc.writeMem(0xee77, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa108, gbc.sp());
        EXPECT(0xee79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee77));
        EXPECT(0xce, gbc.readMem(0xee78));
        // CB CE 0133
        gbc.setState(0xc18d, 0x9642, 0xbf90, 0xb0db, 0x9b34, 0xa4d1, 0x1, 0x0);
        gbc.writeMem(0xa4d1, { 0xbc });
        gbc.writeMem(0xc18d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9642, gbc.sp());
        EXPECT(0xc18f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xa4d1));
        EXPECT(0xcb, gbc.readMem(0xc18d));
        EXPECT(0xce, gbc.readMem(0xc18e));
        // CB CE 0134
        gbc.setState(0x2fe4, 0x8aa8, 0x4ed0, 0xf23b, 0x9c03, 0x9cb7, 0x1, 0x0);
        gbc.writeMem(0x2fe4, { 0xcb, 0xce });
        gbc.writeMem(0x9cb7, { 0x3d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8aa8, gbc.sp());
        EXPECT(0x2fe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9cb7));
        // CB CE 0135
        gbc.setState(0xd624, 0xedc9, 0x9300, 0x6c9d, 0x66c, 0x9ee3, 0x0, 0x0);
        gbc.writeMem(0x9ee3, { 0x5c });
        gbc.writeMem(0xd624, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xedc9, gbc.sp());
        EXPECT(0xd626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9ee3));
        EXPECT(0xcb, gbc.readMem(0xd624));
        EXPECT(0xce, gbc.readMem(0xd625));
        // CB CE 0136
        gbc.setState(0x8176, 0xaefd, 0x90b0, 0x11fd, 0xb1f0, 0x23bc, 0x0, 0x0);
        gbc.writeMem(0x23bc, { 0x3e });
        gbc.writeMem(0x8176, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xaefd, gbc.sp());
        EXPECT(0x8178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8176));
        EXPECT(0xce, gbc.readMem(0x8177));
        // CB CE 0138
        gbc.setState(0x4520, 0x2fa0, 0x1e50, 0xe3cf, 0xa34b, 0x70ed, 0x0, 0x1);
        gbc.writeMem(0x4520, { 0xcb, 0xce });
        gbc.writeMem(0x70ed, { 0x3e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2fa0, gbc.sp());
        EXPECT(0x4522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 0139
        gbc.setState(0x25dc, 0xabd3, 0x50d0, 0x4d7e, 0x8b3, 0x9c18, 0x0, 0x0);
        gbc.writeMem(0x25dc, { 0xcb, 0xce });
        gbc.writeMem(0x9c18, { 0x16 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xabd3, gbc.sp());
        EXPECT(0x25de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9c18));
        // CB CE 013A
        gbc.setState(0xc9b8, 0xe043, 0x3280, 0x3444, 0x7830, 0xd9f7, 0x0, 0x1);
        gbc.writeMem(0xc9b8, { 0xcb, 0xce });
        gbc.writeMem(0xd9f7, { 0x92 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe043, gbc.sp());
        EXPECT(0xc9ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9b8));
        EXPECT(0xce, gbc.readMem(0xc9b9));
        EXPECT(0x92, gbc.readMem(0xd9f7));
        // CB CE 013B
        gbc.setState(0xd8db, 0x5e44, 0xb0f0, 0xe364, 0xc972, 0x6866, 0x1, 0x1);
        gbc.writeMem(0x6866, { 0x4e });
        gbc.writeMem(0xd8db, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5e44, gbc.sp());
        EXPECT(0xd8dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8db));
        EXPECT(0xce, gbc.readMem(0xd8dc));
        // CB CE 013D
        gbc.setState(0x22a0, 0xc845, 0x3520, 0xc8c, 0x3bcc, 0x2a1a, 0x1, 0x1);
        gbc.writeMem(0x22a0, { 0xcb, 0xce });
        gbc.writeMem(0x2a1a, { 0x46 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc845, gbc.sp());
        EXPECT(0x22a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 013E
        gbc.setState(0xc0b2, 0xf2ad, 0xcfb0, 0xa12d, 0xb6d9, 0xc0b2, 0x1, 0x1);
        gbc.writeMem(0xc0b2, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf2ad, gbc.sp());
        EXPECT(0xc0b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0b2));
        EXPECT(0xce, gbc.readMem(0xc0b3));
        // CB CE 013F
        gbc.setState(0xa598, 0xf97b, 0x9c70, 0xb14b, 0xaf12, 0x1c86, 0x1, 0x0);
        gbc.writeMem(0x1c86, { 0x62 });
        gbc.writeMem(0xa598, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf97b, gbc.sp());
        EXPECT(0xa59a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa598));
        EXPECT(0xce, gbc.readMem(0xa599));
        // CB CE 0140
        gbc.setState(0x39b7, 0x8aa0, 0x6140, 0x85aa, 0xcc1d, 0x9120, 0x1, 0x0);
        gbc.writeMem(0x39b7, { 0xcb, 0xce });
        gbc.writeMem(0x9120, { 0x29 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8aa0, gbc.sp());
        EXPECT(0x39b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x9120));
        // CB CE 0141
        gbc.setState(0x244d, 0x28d5, 0xb40, 0xf398, 0xe1b7, 0x9f7b, 0x0, 0x1);
        gbc.writeMem(0x244d, { 0xcb, 0xce });
        gbc.writeMem(0x9f7b, { 0xc9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x28d5, gbc.sp());
        EXPECT(0x244f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f7b));
        // CB CE 0142
        gbc.setState(0x968c, 0xe7d1, 0x3ee0, 0x4be3, 0x7a24, 0xad1b, 0x0, 0x1);
        gbc.writeMem(0x968c, { 0xcb, 0xce });
        gbc.writeMem(0xad1b, { 0xf0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe7d1, gbc.sp());
        EXPECT(0x968e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x968c));
        EXPECT(0xce, gbc.readMem(0x968d));
        EXPECT(0xf2, gbc.readMem(0xad1b));
        // CB CE 0143
        gbc.setState(0x982b, 0x7be3, 0x4c60, 0x4552, 0xf704, 0xc654, 0x1, 0x1);
        gbc.writeMem(0x982b, { 0xcb, 0xce });
        gbc.writeMem(0xc654, { 0x5a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7be3, gbc.sp());
        EXPECT(0x982d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x982b));
        EXPECT(0xce, gbc.readMem(0x982c));
        EXPECT(0x5a, gbc.readMem(0xc654));
        // CB CE 0144
        gbc.setState(0xc424, 0x3831, 0x5b0, 0x1104, 0xe1fe, 0x9ebb, 0x1, 0x1);
        gbc.writeMem(0x9ebb, { 0xc6 });
        gbc.writeMem(0xc424, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3831, gbc.sp());
        EXPECT(0xc426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9ebb));
        EXPECT(0xcb, gbc.readMem(0xc424));
        EXPECT(0xce, gbc.readMem(0xc425));
        // CB CE 0145
        gbc.setState(0x512b, 0xba65, 0xf100, 0xb3af, 0xe2e1, 0x9ac8, 0x0, 0x0);
        gbc.writeMem(0x512b, { 0xcb, 0xce });
        gbc.writeMem(0x9ac8, { 0x7b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xba65, gbc.sp());
        EXPECT(0x512d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9ac8));
        // CB CE 0146
        gbc.setState(0xdb92, 0xe0bd, 0xbe0, 0x434c, 0xc3be, 0x6d53, 0x1, 0x0);
        gbc.writeMem(0x6d53, { 0xaa });
        gbc.writeMem(0xdb92, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe0bd, gbc.sp());
        EXPECT(0xdb94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb92));
        EXPECT(0xce, gbc.readMem(0xdb93));
        // CB CE 0147
        gbc.setState(0x6e54, 0x4fa, 0x3680, 0xe134, 0xdd87, 0xce32, 0x1, 0x1);
        gbc.writeMem(0x6e54, { 0xcb, 0xce });
        gbc.writeMem(0xce32, { 0xbf });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4fa, gbc.sp());
        EXPECT(0x6e56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xce32));
        // CB CE 0148
        gbc.setState(0x7dbf, 0x1be, 0x5560, 0xea2c, 0x1d5c, 0x2389, 0x0, 0x1);
        gbc.writeMem(0x2389, { 0xa2 });
        gbc.writeMem(0x7dbf, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1be, gbc.sp());
        EXPECT(0x7dc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 0149
        gbc.setState(0xc4d3, 0xb1c6, 0xf510, 0xd161, 0x21f7, 0x47a6, 0x0, 0x0);
        gbc.writeMem(0x47a6, { 0x86 });
        gbc.writeMem(0xc4d3, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb1c6, gbc.sp());
        EXPECT(0xc4d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d3));
        EXPECT(0xce, gbc.readMem(0xc4d4));
        // CB CE 014A
        gbc.setState(0x3b0f, 0x4744, 0x6d40, 0xe0f8, 0xb3a1, 0x327f, 0x0, 0x1);
        gbc.writeMem(0x327f, { 0x1b });
        gbc.writeMem(0x3b0f, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4744, gbc.sp());
        EXPECT(0x3b11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 014B
        gbc.setState(0x7c28, 0x4b0a, 0xc740, 0xc334, 0x9aac, 0xd6d, 0x0, 0x0);
        gbc.writeMem(0xd6d, { 0xe7 });
        gbc.writeMem(0x7c28, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4b0a, gbc.sp());
        EXPECT(0x7c2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 014D
        gbc.setState(0x737e, 0x1385, 0x3850, 0x4905, 0x9449, 0xdf0d, 0x1, 0x1);
        gbc.writeMem(0x737e, { 0xcb, 0xce });
        gbc.writeMem(0xdf0d, { 0xc3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1385, gbc.sp());
        EXPECT(0x7380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdf0d));
        // CB CE 0150
        gbc.setState(0xda88, 0x6b11, 0x3040, 0xb05f, 0x5ddd, 0xa587, 0x0, 0x1);
        gbc.writeMem(0xa587, { 0x43 });
        gbc.writeMem(0xda88, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6b11, gbc.sp());
        EXPECT(0xda8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa587));
        EXPECT(0xcb, gbc.readMem(0xda88));
        EXPECT(0xce, gbc.readMem(0xda89));
        // CB CE 0151
        gbc.setState(0x38c5, 0x6ade, 0x55a0, 0xb40c, 0xa3c2, 0x7f8c, 0x1, 0x0);
        gbc.writeMem(0x38c5, { 0xcb, 0xce });
        gbc.writeMem(0x7f8c, { 0xfb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6ade, gbc.sp());
        EXPECT(0x38c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 0157
        gbc.setState(0x6fe9, 0x212c, 0x8340, 0x59cd, 0x29c3, 0x3e0a, 0x1, 0x1);
        gbc.writeMem(0x3e0a, { 0xd7 });
        gbc.writeMem(0x6fe9, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x212c, gbc.sp());
        EXPECT(0x6feb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 0158
        gbc.setState(0xd609, 0x3cc2, 0x6230, 0x1307, 0x19be, 0x9d5f, 0x1, 0x1);
        gbc.writeMem(0x9d5f, { 0x1f });
        gbc.writeMem(0xd609, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3cc2, gbc.sp());
        EXPECT(0xd60b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x9d5f));
        EXPECT(0xcb, gbc.readMem(0xd609));
        EXPECT(0xce, gbc.readMem(0xd60a));
        // CB CE 0159
        gbc.setState(0x882d, 0x13aa, 0x8b00, 0x5c5e, 0xd4c4, 0x55da, 0x1, 0x0);
        gbc.writeMem(0x55da, { 0xb2 });
        gbc.writeMem(0x882d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x13aa, gbc.sp());
        EXPECT(0x882f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x882d));
        EXPECT(0xce, gbc.readMem(0x882e));
        // CB CE 015A
        gbc.setState(0x40dd, 0x4d9, 0xc1b0, 0x8f66, 0xd8cb, 0xf2af, 0x0, 0x1);
        gbc.writeMem(0x40dd, { 0xcb, 0xce });
        gbc.writeMem(0xf2af, { 0xfe });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4d9, gbc.sp());
        EXPECT(0x40df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xf2af));
        // CB CE 015B
        gbc.setState(0x879c, 0x516b, 0xf500, 0x9792, 0x18f7, 0x861d, 0x0, 0x0);
        gbc.writeMem(0x861d, { 0x1d });
        gbc.writeMem(0x879c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x516b, gbc.sp());
        EXPECT(0x879e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x861d));
        EXPECT(0xcb, gbc.readMem(0x879c));
        EXPECT(0xce, gbc.readMem(0x879d));
        // CB CE 015C
        gbc.setState(0x80c5, 0x4c63, 0x50f0, 0x2b60, 0xcd50, 0xb158, 0x0, 0x1);
        gbc.writeMem(0x80c5, { 0xcb, 0xce });
        gbc.writeMem(0xb158, { 0x3a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4c63, gbc.sp());
        EXPECT(0x80c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80c5));
        EXPECT(0xce, gbc.readMem(0x80c6));
        EXPECT(0x3a, gbc.readMem(0xb158));
        // CB CE 015E
        gbc.setState(0x2e7e, 0x7ce3, 0xdf50, 0xa309, 0x3400, 0x27f, 0x0, 0x1);
        gbc.writeMem(0x27f, { 0x22 });
        gbc.writeMem(0x2e7e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7ce3, gbc.sp());
        EXPECT(0x2e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 015F
        gbc.setState(0xc417, 0xb689, 0x1b70, 0x22e4, 0x4da8, 0x89a3, 0x0, 0x0);
        gbc.writeMem(0x89a3, { 0x8 });
        gbc.writeMem(0xc417, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb689, gbc.sp());
        EXPECT(0xc419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x89a3));
        EXPECT(0xcb, gbc.readMem(0xc417));
        EXPECT(0xce, gbc.readMem(0xc418));
        // CB CE 0160
        gbc.setState(0xb60a, 0x11a7, 0xfc30, 0xbcc6, 0x1fce, 0xd134, 0x1, 0x0);
        gbc.writeMem(0xb60a, { 0xcb, 0xce });
        gbc.writeMem(0xd134, { 0x7c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x11a7, gbc.sp());
        EXPECT(0xb60c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb60a));
        EXPECT(0xce, gbc.readMem(0xb60b));
        EXPECT(0x7e, gbc.readMem(0xd134));
        // CB CE 0161
        gbc.setState(0x99a5, 0xd75e, 0xb3e0, 0x7579, 0xc1a1, 0xbaa9, 0x0, 0x0);
        gbc.writeMem(0x99a5, { 0xcb, 0xce });
        gbc.writeMem(0xbaa9, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd75e, gbc.sp());
        EXPECT(0x99a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99a5));
        EXPECT(0xce, gbc.readMem(0x99a6));
        EXPECT(0x2, gbc.readMem(0xbaa9));
        // CB CE 0162
        gbc.setState(0xc99c, 0xa57a, 0x8730, 0x1025, 0xbecc, 0xb48d, 0x0, 0x0);
        gbc.writeMem(0xb48d, { 0xb8 });
        gbc.writeMem(0xc99c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa57a, gbc.sp());
        EXPECT(0xc99e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xb48d));
        EXPECT(0xcb, gbc.readMem(0xc99c));
        EXPECT(0xce, gbc.readMem(0xc99d));
        // CB CE 0163
        gbc.setState(0x4667, 0xcc1, 0x6ca0, 0x6f41, 0x6661, 0xbc69, 0x0, 0x0);
        gbc.writeMem(0x4667, { 0xcb, 0xce });
        gbc.writeMem(0xbc69, { 0x5b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xcc1, gbc.sp());
        EXPECT(0x4669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xbc69));
        // CB CE 0164
        gbc.setState(0xac9b, 0x4ccf, 0x5390, 0x3f7e, 0x486a, 0xcd55, 0x0, 0x1);
        gbc.writeMem(0xac9b, { 0xcb, 0xce });
        gbc.writeMem(0xcd55, { 0x5d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4ccf, gbc.sp());
        EXPECT(0xac9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac9b));
        EXPECT(0xce, gbc.readMem(0xac9c));
        EXPECT(0x5f, gbc.readMem(0xcd55));
        // CB CE 0165
        gbc.setState(0xd455, 0xa3d8, 0xa80, 0x4b84, 0x5b14, 0x7c0, 0x0, 0x0);
        gbc.writeMem(0x7c0, { 0xf3 });
        gbc.writeMem(0xd455, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa3d8, gbc.sp());
        EXPECT(0xd457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd455));
        EXPECT(0xce, gbc.readMem(0xd456));
        // CB CE 0166
        gbc.setState(0x3589, 0xf0ae, 0xbd70, 0xe8f6, 0x9cc5, 0xf211, 0x0, 0x0);
        gbc.writeMem(0x3589, { 0xcb, 0xce });
        gbc.writeMem(0xf211, { 0xd3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf0ae, gbc.sp());
        EXPECT(0x358b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xf211));
        // CB CE 0167
        gbc.setState(0x3299, 0xc1a2, 0x9390, 0xd88a, 0x3736, 0xc36d, 0x0, 0x0);
        gbc.writeMem(0x3299, { 0xcb, 0xce });
        gbc.writeMem(0xc36d, { 0xf });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc1a2, gbc.sp());
        EXPECT(0x329b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xc36d));
        // CB CE 0168
        gbc.setState(0xab81, 0xa354, 0x2d20, 0xa99a, 0x684a, 0xde96, 0x1, 0x1);
        gbc.writeMem(0xab81, { 0xcb, 0xce });
        gbc.writeMem(0xde96, { 0xb6 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa354, gbc.sp());
        EXPECT(0xab83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab81));
        EXPECT(0xce, gbc.readMem(0xab82));
        EXPECT(0xb6, gbc.readMem(0xde96));
        // CB CE 0169
        gbc.setState(0xafb1, 0x3a9c, 0xf7b0, 0x329a, 0xb4d3, 0x3ef7, 0x1, 0x0);
        gbc.writeMem(0x3ef7, { 0x62 });
        gbc.writeMem(0xafb1, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3a9c, gbc.sp());
        EXPECT(0xafb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb1));
        EXPECT(0xce, gbc.readMem(0xafb2));
        // CB CE 016A
        gbc.setState(0x76b, 0x6c27, 0x3350, 0x475a, 0xb780, 0xb8f1, 0x0, 0x1);
        gbc.writeMem(0x76b, { 0xcb, 0xce });
        gbc.writeMem(0xb8f1, { 0xf1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6c27, gbc.sp());
        EXPECT(0x76d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xb8f1));
        // CB CE 016B
        gbc.setState(0x96db, 0x4bb4, 0x9a40, 0xe8d6, 0x7aff, 0x3ddc, 0x0, 0x1);
        gbc.writeMem(0x3ddc, { 0x37 });
        gbc.writeMem(0x96db, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4bb4, gbc.sp());
        EXPECT(0x96dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96db));
        EXPECT(0xce, gbc.readMem(0x96dc));
        // CB CE 016C
        gbc.setState(0x82ae, 0xcd37, 0x1420, 0x4003, 0xa370, 0xb39b, 0x1, 0x0);
        gbc.writeMem(0x82ae, { 0xcb, 0xce });
        gbc.writeMem(0xb39b, { 0x4c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcd37, gbc.sp());
        EXPECT(0x82b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ae));
        EXPECT(0xce, gbc.readMem(0x82af));
        EXPECT(0x4e, gbc.readMem(0xb39b));
        // CB CE 016D
        gbc.setState(0x490f, 0x56d2, 0xc960, 0xba8a, 0xc48, 0xbe9b, 0x1, 0x0);
        gbc.writeMem(0x490f, { 0xcb, 0xce });
        gbc.writeMem(0xbe9b, { 0xa7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x56d2, gbc.sp());
        EXPECT(0x4911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbe9b));
        // CB CE 016E
        gbc.setState(0xde9a, 0xf688, 0x6440, 0x2ee9, 0x59ba, 0x1b13, 0x1, 0x0);
        gbc.writeMem(0x1b13, { 0xdf });
        gbc.writeMem(0xde9a, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf688, gbc.sp());
        EXPECT(0xde9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde9a));
        EXPECT(0xce, gbc.readMem(0xde9b));
        // CB CE 016F
        gbc.setState(0x14f0, 0xc683, 0x7040, 0xb106, 0xeeb2, 0xf501, 0x1, 0x0);
        gbc.writeMem(0x14f0, { 0xcb, 0xce });
        gbc.writeMem(0xf501, { 0xc9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc683, gbc.sp());
        EXPECT(0x14f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xf501));
        // CB CE 0170
        gbc.setState(0x9901, 0xe453, 0x6bb0, 0x4529, 0xca28, 0x6cc0, 0x0, 0x1);
        gbc.writeMem(0x6cc0, { 0x2f });
        gbc.writeMem(0x9901, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe453, gbc.sp());
        EXPECT(0x9903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9901));
        EXPECT(0xce, gbc.readMem(0x9902));
        // CB CE 0172
        gbc.setState(0xd657, 0xdbed, 0x8260, 0x6f3b, 0xb177, 0xfa1a, 0x0, 0x0);
        gbc.writeMem(0xd657, { 0xcb, 0xce });
        gbc.writeMem(0xfa1a, { 0xcd });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdbed, gbc.sp());
        EXPECT(0xd659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd657));
        EXPECT(0xce, gbc.readMem(0xd658));
        EXPECT(0xcf, gbc.readMem(0xfa1a));
        // CB CE 0174
        gbc.setState(0x449d, 0x6458, 0x27c0, 0xfd7d, 0xbdcd, 0x12da, 0x1, 0x0);
        gbc.writeMem(0x12da, { 0x53 });
        gbc.writeMem(0x449d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6458, gbc.sp());
        EXPECT(0x449f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 0175
        gbc.setState(0x640c, 0x6b90, 0xd4f0, 0x4f53, 0xed85, 0xaa13, 0x1, 0x0);
        gbc.writeMem(0x640c, { 0xcb, 0xce });
        gbc.writeMem(0xaa13, { 0xc1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6b90, gbc.sp());
        EXPECT(0x640e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xaa13));
        // CB CE 0176
        gbc.setState(0x73fc, 0x3cd8, 0x4370, 0xee36, 0xbf15, 0xec62, 0x1, 0x1);
        gbc.writeMem(0x73fc, { 0xcb, 0xce });
        gbc.writeMem(0xec62, { 0x2a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3cd8, gbc.sp());
        EXPECT(0x73fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xec62));
        // CB CE 0177
        gbc.setState(0xe58a, 0x9924, 0xef00, 0x5381, 0xfdb0, 0xb7c1, 0x0, 0x1);
        gbc.writeMem(0xb7c1, { 0xd0 });
        gbc.writeMem(0xe58a, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9924, gbc.sp());
        EXPECT(0xe58c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xb7c1));
        EXPECT(0xcb, gbc.readMem(0xe58a));
        EXPECT(0xce, gbc.readMem(0xe58b));
        // CB CE 0179
        gbc.setState(0x9030, 0x9e51, 0xb200, 0xeb50, 0x2885, 0xfe67, 0x1, 0x1);
        gbc.writeMem(0x9030, { 0xcb, 0xce });
        gbc.writeMem(0xfe67, { 0x3f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9e51, gbc.sp());
        EXPECT(0x9032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9030));
        EXPECT(0xce, gbc.readMem(0x9031));
        EXPECT(0x3f, gbc.readMem(0xfe67));
        // CB CE 017A
        gbc.setState(0x7d, 0x536c, 0x9240, 0x79b3, 0x7823, 0x2db6, 0x1, 0x0);
        gbc.writeMem(0x7d, { 0xcb, 0xce });
        gbc.writeMem(0x2db6, { 0xcb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x536c, gbc.sp());
        EXPECT(0x7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 017B
        gbc.setState(0x13b9, 0xadb2, 0x9ea0, 0xd9cd, 0x2fe2, 0xa0a8, 0x1, 0x1);
        gbc.writeMem(0x13b9, { 0xcb, 0xce });
        gbc.writeMem(0xa0a8, { 0x52 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xadb2, gbc.sp());
        EXPECT(0x13bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa0a8));
        // CB CE 017E
        gbc.setState(0x37ed, 0xc881, 0x16f0, 0xd830, 0x935f, 0x2713, 0x1, 0x1);
        gbc.writeMem(0x2713, { 0xd3 });
        gbc.writeMem(0x37ed, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc881, gbc.sp());
        EXPECT(0x37ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 017F
        gbc.setState(0x3e2d, 0x2f07, 0xda50, 0xf3f6, 0xb53a, 0xed6c, 0x1, 0x1);
        gbc.writeMem(0x3e2d, { 0xcb, 0xce });
        gbc.writeMem(0xed6c, { 0x1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2f07, gbc.sp());
        EXPECT(0x3e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xed6c));
        // CB CE 0181
        gbc.setState(0xa646, 0xde38, 0x830, 0x35a2, 0x3ab7, 0xe0df, 0x0, 0x1);
        gbc.writeMem(0xa646, { 0xcb, 0xce });
        gbc.writeMem(0xe0df, { 0x4f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xde38, gbc.sp());
        EXPECT(0xa648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa646));
        EXPECT(0xce, gbc.readMem(0xa647));
        EXPECT(0x4f, gbc.readMem(0xe0df));
        // CB CE 0184
        gbc.setState(0x6139, 0x4fe2, 0x74f0, 0x9a5d, 0x3a3, 0x85ba, 0x1, 0x0);
        gbc.writeMem(0x6139, { 0xcb, 0xce });
        gbc.writeMem(0x85ba, { 0xe1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4fe2, gbc.sp());
        EXPECT(0x613b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x85ba));
        // CB CE 0186
        gbc.setState(0xdba2, 0x69ca, 0xe980, 0x940, 0xf28c, 0xff47, 0x1, 0x0);
        gbc.writeMem(0xdba2, { 0xcb, 0xce });
        gbc.writeMem(0xff47, { 0x98 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x69ca, gbc.sp());
        EXPECT(0xdba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdba2));
        EXPECT(0xce, gbc.readMem(0xdba3));
        EXPECT(0x9a, gbc.readMem(0xff47));
        // CB CE 0187
        gbc.setState(0x75b, 0xb771, 0x2140, 0x85b3, 0x8818, 0x8e9d, 0x1, 0x1);
        gbc.writeMem(0x75b, { 0xcb, 0xce });
        gbc.writeMem(0x8e9d, { 0xd8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb771, gbc.sp());
        EXPECT(0x75d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8e9d));
        // CB CE 0188
        gbc.setState(0xe1ef, 0x482c, 0xc1f0, 0x2098, 0xfc0f, 0x9775, 0x0, 0x0);
        gbc.writeMem(0x9775, { 0xee });
        gbc.writeMem(0xe1ef, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x482c, gbc.sp());
        EXPECT(0xe1f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x9775));
        EXPECT(0xcb, gbc.readMem(0xe1ef));
        EXPECT(0xce, gbc.readMem(0xe1f0));
        // CB CE 0189
        gbc.setState(0x9fde, 0x1323, 0x2670, 0xa93a, 0x6148, 0xcdf8, 0x0, 0x0);
        gbc.writeMem(0x9fde, { 0xcb, 0xce });
        gbc.writeMem(0xcdf8, { 0x2d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1323, gbc.sp());
        EXPECT(0x9fe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fde));
        EXPECT(0xce, gbc.readMem(0x9fdf));
        EXPECT(0x2f, gbc.readMem(0xcdf8));
        // CB CE 018A
        gbc.setState(0xc1f2, 0xbf10, 0x53b0, 0x12ce, 0xff8a, 0x4601, 0x1, 0x1);
        gbc.writeMem(0x4601, { 0xd3 });
        gbc.writeMem(0xc1f2, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbf10, gbc.sp());
        EXPECT(0xc1f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1f2));
        EXPECT(0xce, gbc.readMem(0xc1f3));
        // CB CE 018B
        gbc.setState(0xc5bc, 0x65fa, 0x82d0, 0xa014, 0x678d, 0xc665, 0x0, 0x0);
        gbc.writeMem(0xc5bc, { 0xcb, 0xce });
        gbc.writeMem(0xc665, { 0x7b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x65fa, gbc.sp());
        EXPECT(0xc5be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5bc));
        EXPECT(0xce, gbc.readMem(0xc5bd));
        EXPECT(0x7b, gbc.readMem(0xc665));
        // CB CE 018C
        gbc.setState(0xc1c5, 0x47f2, 0xa2e0, 0xad09, 0x7dee, 0xe152, 0x0, 0x1);
        gbc.writeMem(0xc1c5, { 0xcb, 0xce });
        gbc.writeMem(0xe152, { 0xcc });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x47f2, gbc.sp());
        EXPECT(0xc1c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c5));
        EXPECT(0xce, gbc.readMem(0xc1c6));
        EXPECT(0xce, gbc.readMem(0xe152));
        // CB CE 018D
        gbc.setState(0xb80f, 0x4a45, 0xc130, 0xaf02, 0xcee7, 0xfe9c, 0x0, 0x1);
        gbc.writeMem(0xb80f, { 0xcb, 0xce });
        gbc.writeMem(0xfe9c, { 0x92 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4a45, gbc.sp());
        EXPECT(0xb811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb80f));
        EXPECT(0xce, gbc.readMem(0xb810));
        EXPECT(0x92, gbc.readMem(0xfe9c));
        // CB CE 018E
        gbc.setState(0xb879, 0x4995, 0xdac0, 0x7b17, 0xaba6, 0x936b, 0x1, 0x1);
        gbc.writeMem(0x936b, { 0xfd });
        gbc.writeMem(0xb879, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4995, gbc.sp());
        EXPECT(0xb87b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x936b));
        EXPECT(0xcb, gbc.readMem(0xb879));
        EXPECT(0xce, gbc.readMem(0xb87a));
        // CB CE 0190
        gbc.setState(0x1b90, 0xfb29, 0x5830, 0x534f, 0x3be0, 0xc0de, 0x1, 0x1);
        gbc.writeMem(0x1b90, { 0xcb, 0xce });
        gbc.writeMem(0xc0de, { 0x3 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xfb29, gbc.sp());
        EXPECT(0x1b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xc0de));
        // CB CE 0191
        gbc.setState(0x3cc7, 0xc670, 0x3d70, 0x2207, 0x8a98, 0xeee6, 0x0, 0x1);
        gbc.writeMem(0x3cc7, { 0xcb, 0xce });
        gbc.writeMem(0xeee6, { 0x2f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc670, gbc.sp());
        EXPECT(0x3cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xeee6));
        // CB CE 0192
        gbc.setState(0x44c6, 0xd181, 0xfa10, 0x3f58, 0xa29c, 0xa5c3, 0x0, 0x0);
        gbc.writeMem(0x44c6, { 0xcb, 0xce });
        gbc.writeMem(0xa5c3, { 0x3d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd181, gbc.sp());
        EXPECT(0x44c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa5c3));
        // CB CE 0193
        gbc.setState(0xe48a, 0x109e, 0x2d30, 0x2a76, 0x5a94, 0x3117, 0x1, 0x1);
        gbc.writeMem(0x3117, { 0xe7 });
        gbc.writeMem(0xe48a, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x109e, gbc.sp());
        EXPECT(0xe48c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe48a));
        EXPECT(0xce, gbc.readMem(0xe48b));
        // CB CE 0194
        gbc.setState(0xeba7, 0xe2b4, 0x73c0, 0xcbc2, 0x6902, 0xe287, 0x0, 0x1);
        gbc.writeMem(0xe287, { 0x1 });
        gbc.writeMem(0xeba7, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe2b4, gbc.sp());
        EXPECT(0xeba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xe287));
        EXPECT(0xcb, gbc.readMem(0xeba7));
        EXPECT(0xce, gbc.readMem(0xeba8));
        // CB CE 0195
        gbc.setState(0x8e7f, 0x2d97, 0xc090, 0xcf55, 0x9a5d, 0x10c8, 0x1, 0x1);
        gbc.writeMem(0x10c8, { 0xae });
        gbc.writeMem(0x8e7f, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2d97, gbc.sp());
        EXPECT(0x8e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e7f));
        EXPECT(0xce, gbc.readMem(0x8e80));
        // CB CE 0196
        gbc.setState(0x5ca6, 0x74fe, 0xda10, 0x114f, 0xf9c9, 0x8607, 0x0, 0x1);
        gbc.writeMem(0x5ca6, { 0xcb, 0xce });
        gbc.writeMem(0x8607, { 0x31 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x74fe, gbc.sp());
        EXPECT(0x5ca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8607));
        // CB CE 0197
        gbc.setState(0x90f7, 0xffac, 0xec30, 0x6261, 0xeb84, 0x5ffb, 0x0, 0x0);
        gbc.writeMem(0x5ffb, { 0x57 });
        gbc.writeMem(0x90f7, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xffac, gbc.sp());
        EXPECT(0x90f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f7));
        EXPECT(0xce, gbc.readMem(0x90f8));
        // CB CE 0198
        gbc.setState(0xdb9e, 0x8565, 0x4720, 0xcb2a, 0xe13c, 0x92a5, 0x1, 0x1);
        gbc.writeMem(0x92a5, { 0x27 });
        gbc.writeMem(0xdb9e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8565, gbc.sp());
        EXPECT(0xdba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x92a5));
        EXPECT(0xcb, gbc.readMem(0xdb9e));
        EXPECT(0xce, gbc.readMem(0xdb9f));
        // CB CE 0199
        gbc.setState(0x7f9c, 0x33e9, 0xce0, 0xb566, 0x5ecd, 0x5ca7, 0x1, 0x0);
        gbc.writeMem(0x5ca7, { 0x46 });
        gbc.writeMem(0x7f9c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x33e9, gbc.sp());
        EXPECT(0x7f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 019A
        gbc.setState(0x4963, 0x9abf, 0x71f0, 0x6801, 0x2619, 0xcda2, 0x0, 0x1);
        gbc.writeMem(0x4963, { 0xcb, 0xce });
        gbc.writeMem(0xcda2, { 0xf0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9abf, gbc.sp());
        EXPECT(0x4965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xcda2));
        // CB CE 019B
        gbc.setState(0xa7ef, 0x6399, 0xe8a0, 0x60ec, 0xf074, 0x63e8, 0x0, 0x1);
        gbc.writeMem(0x63e8, { 0x17 });
        gbc.writeMem(0xa7ef, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6399, gbc.sp());
        EXPECT(0xa7f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ef));
        EXPECT(0xce, gbc.readMem(0xa7f0));
        // CB CE 019C
        gbc.setState(0xa675, 0xdcf6, 0x3d80, 0xde6, 0xbe3b, 0x7943, 0x1, 0x1);
        gbc.writeMem(0x7943, { 0x12 });
        gbc.writeMem(0xa675, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xdcf6, gbc.sp());
        EXPECT(0xa677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa675));
        EXPECT(0xce, gbc.readMem(0xa676));
        // CB CE 019F
        gbc.setState(0x3879, 0xc43a, 0x1940, 0xd9d9, 0xda7b, 0xd58d, 0x1, 0x0);
        gbc.writeMem(0x3879, { 0xcb, 0xce });
        gbc.writeMem(0xd58d, { 0xf6 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc43a, gbc.sp());
        EXPECT(0x387b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xd58d));
        // CB CE 01A0
        gbc.setState(0xd9f2, 0x1048, 0x1be0, 0xbfd4, 0xb611, 0x9b5e, 0x0, 0x1);
        gbc.writeMem(0x9b5e, { 0xbb });
        gbc.writeMem(0xd9f2, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1048, gbc.sp());
        EXPECT(0xd9f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9b5e));
        EXPECT(0xcb, gbc.readMem(0xd9f2));
        EXPECT(0xce, gbc.readMem(0xd9f3));
        // CB CE 01A1
        gbc.setState(0xbaed, 0xd74b, 0x6830, 0xb286, 0x5f9e, 0xd10e, 0x0, 0x0);
        gbc.writeMem(0xbaed, { 0xcb, 0xce });
        gbc.writeMem(0xd10e, { 0xda });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd74b, gbc.sp());
        EXPECT(0xbaef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaed));
        EXPECT(0xce, gbc.readMem(0xbaee));
        EXPECT(0xda, gbc.readMem(0xd10e));
        // CB CE 01A2
        gbc.setState(0x97bd, 0x8602, 0x8450, 0x6414, 0xd818, 0x542b, 0x1, 0x0);
        gbc.writeMem(0x542b, { 0xa });
        gbc.writeMem(0x97bd, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8602, gbc.sp());
        EXPECT(0x97bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97bd));
        EXPECT(0xce, gbc.readMem(0x97be));
        // CB CE 01A5
        gbc.setState(0x8610, 0xb1dc, 0x4360, 0xc065, 0xe0d1, 0xb353, 0x0, 0x1);
        gbc.writeMem(0x8610, { 0xcb, 0xce });
        gbc.writeMem(0xb353, { 0xb0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb1dc, gbc.sp());
        EXPECT(0x8612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8610));
        EXPECT(0xce, gbc.readMem(0x8611));
        EXPECT(0xb2, gbc.readMem(0xb353));
        // CB CE 01A7
        gbc.setState(0xcd5a, 0x7c6a, 0x5780, 0x9188, 0x36b3, 0xbeef, 0x1, 0x0);
        gbc.writeMem(0xbeef, { 0x7c });
        gbc.writeMem(0xcd5a, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7c6a, gbc.sp());
        EXPECT(0xcd5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbeef));
        EXPECT(0xcb, gbc.readMem(0xcd5a));
        EXPECT(0xce, gbc.readMem(0xcd5b));
        // CB CE 01A8
        gbc.setState(0x54e9, 0xfab8, 0x5810, 0xb9, 0x67bf, 0xf851, 0x1, 0x1);
        gbc.writeMem(0x54e9, { 0xcb, 0xce });
        gbc.writeMem(0xf851, { 0xc4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfab8, gbc.sp());
        EXPECT(0x54eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xf851));
        // CB CE 01A9
        gbc.setState(0x54f3, 0x458d, 0xc530, 0x671c, 0xb762, 0xe73d, 0x0, 0x1);
        gbc.writeMem(0x54f3, { 0xcb, 0xce });
        gbc.writeMem(0xe73d, { 0x36 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x458d, gbc.sp());
        EXPECT(0x54f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xe73d));
        // CB CE 01AB
        gbc.setState(0x747f, 0xbd28, 0x2bc0, 0x8df7, 0x17bd, 0x3a8b, 0x1, 0x0);
        gbc.writeMem(0x3a8b, { 0x3b });
        gbc.writeMem(0x747f, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbd28, gbc.sp());
        EXPECT(0x7481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 01AC
        gbc.setState(0xaf43, 0xdc46, 0xd6b0, 0x2ea0, 0x2695, 0xedc3, 0x1, 0x1);
        gbc.writeMem(0xaf43, { 0xcb, 0xce });
        gbc.writeMem(0xedc3, { 0xa4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdc46, gbc.sp());
        EXPECT(0xaf45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf43));
        EXPECT(0xce, gbc.readMem(0xaf44));
        EXPECT(0xa6, gbc.readMem(0xedc3));
        // CB CE 01AD
        gbc.setState(0xb49e, 0x8aa4, 0x5880, 0x57bc, 0xe8ca, 0xcbdc, 0x0, 0x1);
        gbc.writeMem(0xb49e, { 0xcb, 0xce });
        gbc.writeMem(0xcbdc, { 0x69 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8aa4, gbc.sp());
        EXPECT(0xb4a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb49e));
        EXPECT(0xce, gbc.readMem(0xb49f));
        EXPECT(0x6b, gbc.readMem(0xcbdc));
        // CB CE 01AE
        gbc.setState(0x6284, 0xa32c, 0x7610, 0x3a7, 0xf61, 0x9a7, 0x0, 0x0);
        gbc.writeMem(0x9a7, { 0xce });
        gbc.writeMem(0x6284, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa32c, gbc.sp());
        EXPECT(0x6286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 01AF
        gbc.setState(0x91da, 0x1422, 0x43b0, 0x2899, 0xca02, 0xa8dd, 0x1, 0x0);
        gbc.writeMem(0x91da, { 0xcb, 0xce });
        gbc.writeMem(0xa8dd, { 0x4a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1422, gbc.sp());
        EXPECT(0x91dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91da));
        EXPECT(0xce, gbc.readMem(0x91db));
        EXPECT(0x4a, gbc.readMem(0xa8dd));
        // CB CE 01B0
        gbc.setState(0x49c8, 0x34ae, 0x9470, 0xa557, 0x4172, 0xb606, 0x0, 0x0);
        gbc.writeMem(0x49c8, { 0xcb, 0xce });
        gbc.writeMem(0xb606, { 0x9d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x34ae, gbc.sp());
        EXPECT(0x49ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xb606));
        // CB CE 01B1
        gbc.setState(0xa85b, 0x9051, 0x14b0, 0xc7a1, 0xb723, 0x798f, 0x1, 0x0);
        gbc.writeMem(0x798f, { 0xeb });
        gbc.writeMem(0xa85b, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9051, gbc.sp());
        EXPECT(0xa85d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa85b));
        EXPECT(0xce, gbc.readMem(0xa85c));
        // CB CE 01B4
        gbc.setState(0x9299, 0x1598, 0x3400, 0x9534, 0x6455, 0xd9fe, 0x0, 0x1);
        gbc.writeMem(0x9299, { 0xcb, 0xce });
        gbc.writeMem(0xd9fe, { 0x8e });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1598, gbc.sp());
        EXPECT(0x929b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9299));
        EXPECT(0xce, gbc.readMem(0x929a));
        EXPECT(0x8e, gbc.readMem(0xd9fe));
        // CB CE 01B5
        gbc.setState(0x2493, 0x400a, 0xdc00, 0x147b, 0x3f5e, 0x3d2, 0x0, 0x0);
        gbc.writeMem(0x3d2, { 0x4a });
        gbc.writeMem(0x2493, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x400a, gbc.sp());
        EXPECT(0x2495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 01B6
        gbc.setState(0x6262, 0xc709, 0x5330, 0xda6a, 0x531c, 0x5230, 0x0, 0x1);
        gbc.writeMem(0x5230, { 0x77 });
        gbc.writeMem(0x6262, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc709, gbc.sp());
        EXPECT(0x6264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 01B7
        gbc.setState(0xdefd, 0x8e6f, 0xc600, 0x2612, 0x3109, 0x8241, 0x0, 0x0);
        gbc.writeMem(0x8241, { 0x7a });
        gbc.writeMem(0xdefd, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8e6f, gbc.sp());
        EXPECT(0xdeff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8241));
        EXPECT(0xcb, gbc.readMem(0xdefd));
        EXPECT(0xce, gbc.readMem(0xdefe));
        // CB CE 01B8
        gbc.setState(0xe9d6, 0x2d71, 0xc60, 0x313a, 0xffa6, 0xd89b, 0x0, 0x0);
        gbc.writeMem(0xd89b, { 0x66 });
        gbc.writeMem(0xe9d6, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2d71, gbc.sp());
        EXPECT(0xe9d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd89b));
        EXPECT(0xcb, gbc.readMem(0xe9d6));
        EXPECT(0xce, gbc.readMem(0xe9d7));
        // CB CE 01B9
        gbc.setState(0xece3, 0x9cad, 0x66a0, 0x4af0, 0xcacb, 0xfc0a, 0x0, 0x1);
        gbc.writeMem(0xece3, { 0xcb, 0xce });
        gbc.writeMem(0xfc0a, { 0x2f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9cad, gbc.sp());
        EXPECT(0xece5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xece3));
        EXPECT(0xce, gbc.readMem(0xece4));
        EXPECT(0x2f, gbc.readMem(0xfc0a));
        // CB CE 01BA
        gbc.setState(0x515b, 0x24a4, 0x8480, 0xe92f, 0x9a51, 0x5190, 0x1, 0x1);
        gbc.writeMem(0x515b, { 0xcb, 0xce });
        gbc.writeMem(0x5190, { 0xf6 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x24a4, gbc.sp());
        EXPECT(0x515d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 01BB
        gbc.setState(0xee0e, 0x84e8, 0x9620, 0x2e51, 0x4fbf, 0xdece, 0x0, 0x1);
        gbc.writeMem(0xdece, { 0x13 });
        gbc.writeMem(0xee0e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x84e8, gbc.sp());
        EXPECT(0xee10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xdece));
        EXPECT(0xcb, gbc.readMem(0xee0e));
        EXPECT(0xce, gbc.readMem(0xee0f));
        // CB CE 01BC
        gbc.setState(0xc296, 0xa08d, 0x2630, 0x802f, 0xcf1d, 0xf04b, 0x1, 0x1);
        gbc.writeMem(0xc296, { 0xcb, 0xce });
        gbc.writeMem(0xf04b, { 0x98 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa08d, gbc.sp());
        EXPECT(0xc298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc296));
        EXPECT(0xce, gbc.readMem(0xc297));
        EXPECT(0x9a, gbc.readMem(0xf04b));
        // CB CE 01BD
        gbc.setState(0x4f99, 0x1c4c, 0xbf50, 0x85af, 0xc453, 0xc8f1, 0x1, 0x1);
        gbc.writeMem(0x4f99, { 0xcb, 0xce });
        gbc.writeMem(0xc8f1, { 0xa0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1c4c, gbc.sp());
        EXPECT(0x4f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc8f1));
        // CB CE 01C0
        gbc.setState(0x218b, 0xd9dc, 0x350, 0xb545, 0x245b, 0xde25, 0x1, 0x1);
        gbc.writeMem(0x218b, { 0xcb, 0xce });
        gbc.writeMem(0xde25, { 0xe1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd9dc, gbc.sp());
        EXPECT(0x218d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xde25));
        // CB CE 01C1
        gbc.setState(0x56f3, 0x8751, 0xdaa0, 0xbe2f, 0xaeaf, 0x6860, 0x1, 0x1);
        gbc.writeMem(0x56f3, { 0xcb, 0xce });
        gbc.writeMem(0x6860, { 0x83 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8751, gbc.sp());
        EXPECT(0x56f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 01C2
        gbc.setState(0xa672, 0x3369, 0x4d70, 0xfb91, 0x2c29, 0xcd1, 0x1, 0x0);
        gbc.writeMem(0xcd1, { 0xb });
        gbc.writeMem(0xa672, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3369, gbc.sp());
        EXPECT(0xa674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa672));
        EXPECT(0xce, gbc.readMem(0xa673));
        // CB CE 01C3
        gbc.setState(0x542e, 0x45b0, 0x4be0, 0x9b2c, 0x3e23, 0xbff6, 0x0, 0x0);
        gbc.writeMem(0x542e, { 0xcb, 0xce });
        gbc.writeMem(0xbff6, { 0x62 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x45b0, gbc.sp());
        EXPECT(0x5430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xbff6));
        // CB CE 01C4
        gbc.setState(0x918c, 0xb195, 0x7680, 0xadb7, 0x55b7, 0xf112, 0x1, 0x1);
        gbc.writeMem(0x918c, { 0xcb, 0xce });
        gbc.writeMem(0xf112, { 0x1e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb195, gbc.sp());
        EXPECT(0x918e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x918c));
        EXPECT(0xce, gbc.readMem(0x918d));
        EXPECT(0x1e, gbc.readMem(0xf112));
        // CB CE 01C5
        gbc.setState(0x5ee1, 0x8372, 0x18a0, 0x6ed6, 0x6594, 0x76f9, 0x0, 0x1);
        gbc.writeMem(0x5ee1, { 0xcb, 0xce });
        gbc.writeMem(0x76f9, { 0x43 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8372, gbc.sp());
        EXPECT(0x5ee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 01C6
        gbc.setState(0xcd6c, 0x2c37, 0x4450, 0x6b97, 0xb419, 0xb500, 0x0, 0x0);
        gbc.writeMem(0xb500, { 0x9 });
        gbc.writeMem(0xcd6c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2c37, gbc.sp());
        EXPECT(0xcd6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb500));
        EXPECT(0xcb, gbc.readMem(0xcd6c));
        EXPECT(0xce, gbc.readMem(0xcd6d));
        // CB CE 01C8
        gbc.setState(0xd20, 0x945f, 0xd370, 0xeb31, 0xc7eb, 0x71f, 0x1, 0x0);
        gbc.writeMem(0x71f, { 0x8a });
        gbc.writeMem(0xd20, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x945f, gbc.sp());
        EXPECT(0xd22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 01CA
        gbc.setState(0x790b, 0xaca3, 0x6cf0, 0x837b, 0x87d2, 0xfe8c, 0x0, 0x0);
        gbc.writeMem(0x790b, { 0xcb, 0xce });
        gbc.writeMem(0xfe8c, { 0x8f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xaca3, gbc.sp());
        EXPECT(0x790d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xfe8c));
        // CB CE 01CB
        gbc.setState(0x2474, 0x5165, 0x67c0, 0xbe74, 0x5408, 0x89f3, 0x1, 0x1);
        gbc.writeMem(0x2474, { 0xcb, 0xce });
        gbc.writeMem(0x89f3, { 0x59 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5165, gbc.sp());
        EXPECT(0x2476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x89f3));
        // CB CE 01CD
        gbc.setState(0x2b64, 0xeeb2, 0x8f80, 0x55d, 0xe197, 0xc23a, 0x0, 0x0);
        gbc.writeMem(0x2b64, { 0xcb, 0xce });
        gbc.writeMem(0xc23a, { 0x74 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xeeb2, gbc.sp());
        EXPECT(0x2b66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xc23a));
        // CB CE 01CE
        gbc.setState(0x826e, 0xd59e, 0x17e0, 0xfaf0, 0x12c0, 0xa043, 0x1, 0x0);
        gbc.writeMem(0x826e, { 0xcb, 0xce });
        gbc.writeMem(0xa043, { 0xad });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd59e, gbc.sp());
        EXPECT(0x8270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x826e));
        EXPECT(0xce, gbc.readMem(0x826f));
        EXPECT(0xaf, gbc.readMem(0xa043));
        // CB CE 01CF
        gbc.setState(0x1804, 0xaea1, 0xaf50, 0xb969, 0xa1ec, 0xeea8, 0x0, 0x0);
        gbc.writeMem(0x1804, { 0xcb, 0xce });
        gbc.writeMem(0xeea8, { 0x35 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xaea1, gbc.sp());
        EXPECT(0x1806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xeea8));
        // CB CE 01D0
        gbc.setState(0xd41c, 0x4d7f, 0xff10, 0xd78, 0x7296, 0xb709, 0x0, 0x1);
        gbc.writeMem(0xb709, { 0xf7 });
        gbc.writeMem(0xd41c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4d7f, gbc.sp());
        EXPECT(0xd41e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xb709));
        EXPECT(0xcb, gbc.readMem(0xd41c));
        EXPECT(0xce, gbc.readMem(0xd41d));
        // CB CE 01D1
        gbc.setState(0xa563, 0x88d1, 0xbf30, 0x1568, 0xe56f, 0xb881, 0x0, 0x0);
        gbc.writeMem(0xa563, { 0xcb, 0xce });
        gbc.writeMem(0xb881, { 0x1c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x88d1, gbc.sp());
        EXPECT(0xa565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa563));
        EXPECT(0xce, gbc.readMem(0xa564));
        EXPECT(0x1e, gbc.readMem(0xb881));
        // CB CE 01D2
        gbc.setState(0x8b57, 0x238b, 0xbdb0, 0x8adf, 0x9ead, 0xc0c7, 0x0, 0x1);
        gbc.writeMem(0x8b57, { 0xcb, 0xce });
        gbc.writeMem(0xc0c7, { 0xec });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x238b, gbc.sp());
        EXPECT(0x8b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b57));
        EXPECT(0xce, gbc.readMem(0x8b58));
        EXPECT(0xee, gbc.readMem(0xc0c7));
        // CB CE 01D4
        gbc.setState(0xbc97, 0xd1d6, 0x4920, 0xccf9, 0x6a1f, 0x1f0, 0x0, 0x0);
        gbc.writeMem(0x1f0, { 0x7f });
        gbc.writeMem(0xbc97, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd1d6, gbc.sp());
        EXPECT(0xbc99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc97));
        EXPECT(0xce, gbc.readMem(0xbc98));
        // CB CE 01D5
        gbc.setState(0xe344, 0xf803, 0x9750, 0x59b8, 0x71a2, 0xee48, 0x0, 0x1);
        gbc.writeMem(0xe344, { 0xcb, 0xce });
        gbc.writeMem(0xee48, { 0x41 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf803, gbc.sp());
        EXPECT(0xe346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe344));
        EXPECT(0xce, gbc.readMem(0xe345));
        EXPECT(0x43, gbc.readMem(0xee48));
        // CB CE 01D7
        gbc.setState(0x7c57, 0x953e, 0xc740, 0x10b9, 0xb698, 0xe170, 0x1, 0x0);
        gbc.writeMem(0x7c57, { 0xcb, 0xce });
        gbc.writeMem(0xe170, { 0x50 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x953e, gbc.sp());
        EXPECT(0x7c59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xe170));
        // CB CE 01D8
        gbc.setState(0x929f, 0x7846, 0xc5d0, 0x6447, 0x6a91, 0xac87, 0x1, 0x0);
        gbc.writeMem(0x929f, { 0xcb, 0xce });
        gbc.writeMem(0xac87, { 0x4c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7846, gbc.sp());
        EXPECT(0x92a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x929f));
        EXPECT(0xce, gbc.readMem(0x92a0));
        EXPECT(0x4e, gbc.readMem(0xac87));
        // CB CE 01D9
        gbc.setState(0x62fe, 0xa1b2, 0x40b0, 0x14cf, 0xf828, 0x3497, 0x0, 0x0);
        gbc.writeMem(0x3497, { 0x5b });
        gbc.writeMem(0x62fe, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa1b2, gbc.sp());
        EXPECT(0x6300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 01DB
        gbc.setState(0xa7d2, 0xe4b5, 0xae00, 0x1ba5, 0x911e, 0x98e9, 0x1, 0x0);
        gbc.writeMem(0x98e9, { 0xe });
        gbc.writeMem(0xa7d2, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe4b5, gbc.sp());
        EXPECT(0xa7d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x98e9));
        EXPECT(0xcb, gbc.readMem(0xa7d2));
        EXPECT(0xce, gbc.readMem(0xa7d3));
        // CB CE 01DC
        gbc.setState(0xd731, 0x11b2, 0x16e0, 0xb826, 0x78fc, 0xcb96, 0x0, 0x1);
        gbc.writeMem(0xcb96, { 0xc5 });
        gbc.writeMem(0xd731, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x11b2, gbc.sp());
        EXPECT(0xd733, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xcb96));
        EXPECT(0xcb, gbc.readMem(0xd731));
        EXPECT(0xce, gbc.readMem(0xd732));
        // CB CE 01DE
        gbc.setState(0xa3fb, 0xc748, 0xb7f0, 0xfab0, 0xc8d6, 0xe841, 0x0, 0x0);
        gbc.writeMem(0xa3fb, { 0xcb, 0xce });
        gbc.writeMem(0xe841, { 0x93 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc748, gbc.sp());
        EXPECT(0xa3fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3fb));
        EXPECT(0xce, gbc.readMem(0xa3fc));
        EXPECT(0x93, gbc.readMem(0xe841));
        // CB CE 01DF
        gbc.setState(0x4a5e, 0x5fa8, 0xd500, 0x2564, 0x8d84, 0xc91e, 0x1, 0x0);
        gbc.writeMem(0x4a5e, { 0xcb, 0xce });
        gbc.writeMem(0xc91e, { 0xdd });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5fa8, gbc.sp());
        EXPECT(0x4a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xc91e));
        // CB CE 01E0
        gbc.setState(0xb371, 0x9c77, 0x39f0, 0x4b98, 0x77a6, 0x3758, 0x0, 0x1);
        gbc.writeMem(0x3758, { 0x53 });
        gbc.writeMem(0xb371, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9c77, gbc.sp());
        EXPECT(0xb373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb371));
        EXPECT(0xce, gbc.readMem(0xb372));
        // CB CE 01E1
        gbc.setState(0xd1f0, 0x3cc5, 0xb760, 0xa84b, 0xa6ea, 0xb6e8, 0x0, 0x0);
        gbc.writeMem(0xb6e8, { 0xe5 });
        gbc.writeMem(0xd1f0, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3cc5, gbc.sp());
        EXPECT(0xd1f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xb6e8));
        EXPECT(0xcb, gbc.readMem(0xd1f0));
        EXPECT(0xce, gbc.readMem(0xd1f1));
        // CB CE 01E2
        gbc.setState(0xddbe, 0x572a, 0x83e0, 0x7b0f, 0x510f, 0xf22a, 0x0, 0x1);
        gbc.writeMem(0xddbe, { 0xcb, 0xce });
        gbc.writeMem(0xf22a, { 0x16 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x572a, gbc.sp());
        EXPECT(0xddc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddbe));
        EXPECT(0xce, gbc.readMem(0xddbf));
        EXPECT(0x16, gbc.readMem(0xf22a));
        // CB CE 01E3
        gbc.setState(0xeb25, 0xf6e5, 0x9050, 0xe82f, 0x3671, 0xd326, 0x0, 0x1);
        gbc.writeMem(0xd326, { 0xad });
        gbc.writeMem(0xeb25, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf6e5, gbc.sp());
        EXPECT(0xeb27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xd326));
        EXPECT(0xcb, gbc.readMem(0xeb25));
        EXPECT(0xce, gbc.readMem(0xeb26));
        // CB CE 01E4
        gbc.setState(0x54ab, 0xd3fd, 0xcae0, 0x6dc4, 0xaf86, 0x8f9, 0x1, 0x1);
        gbc.writeMem(0x8f9, { 0xef });
        gbc.writeMem(0x54ab, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd3fd, gbc.sp());
        EXPECT(0x54ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 01E5
        gbc.setState(0x6ff4, 0xc51c, 0x62a0, 0x7079, 0x366b, 0xede7, 0x0, 0x1);
        gbc.writeMem(0x6ff4, { 0xcb, 0xce });
        gbc.writeMem(0xede7, { 0x7d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc51c, gbc.sp());
        EXPECT(0x6ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xede7));
        // CB CE 01E6
        gbc.setState(0x638d, 0x3ab3, 0x1d90, 0x4c17, 0x2113, 0xb0ec, 0x0, 0x1);
        gbc.writeMem(0x638d, { 0xcb, 0xce });
        gbc.writeMem(0xb0ec, { 0x1c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3ab3, gbc.sp());
        EXPECT(0x638f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xb0ec));
        // CB CE 01E7
        gbc.setState(0xa38f, 0x59ab, 0x9440, 0xde83, 0x53ba, 0x8b61, 0x0, 0x1);
        gbc.writeMem(0x8b61, { 0x88 });
        gbc.writeMem(0xa38f, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x59ab, gbc.sp());
        EXPECT(0xa391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8b61));
        EXPECT(0xcb, gbc.readMem(0xa38f));
        EXPECT(0xce, gbc.readMem(0xa390));
        // CB CE 01E8
        gbc.setState(0xb38, 0x2b22, 0xf570, 0xa74b, 0x3d63, 0xd2ae, 0x0, 0x1);
        gbc.writeMem(0xb38, { 0xcb, 0xce });
        gbc.writeMem(0xd2ae, { 0xcf });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2b22, gbc.sp());
        EXPECT(0xb3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xd2ae));
        // CB CE 01E9
        gbc.setState(0x74fe, 0x86fe, 0xe7f0, 0xcd1d, 0x9b96, 0x5b9f, 0x1, 0x1);
        gbc.writeMem(0x5b9f, { 0xd2 });
        gbc.writeMem(0x74fe, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x86fe, gbc.sp());
        EXPECT(0x7500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 01EA
        gbc.setState(0x3d1, 0xc968, 0xf0f0, 0x49c6, 0x2a21, 0x693c, 0x0, 0x0);
        gbc.writeMem(0x3d1, { 0xcb, 0xce });
        gbc.writeMem(0x693c, { 0x7f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc968, gbc.sp());
        EXPECT(0x3d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 01EB
        gbc.setState(0xbcb8, 0x90c2, 0x6a70, 0xd3aa, 0xf8a3, 0x3cdf, 0x0, 0x1);
        gbc.writeMem(0x3cdf, { 0x87 });
        gbc.writeMem(0xbcb8, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x90c2, gbc.sp());
        EXPECT(0xbcba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb8));
        EXPECT(0xce, gbc.readMem(0xbcb9));
        // CB CE 01EC
        gbc.setState(0x883c, 0x1dcb, 0xda60, 0xb8cd, 0x3342, 0x8727, 0x1, 0x0);
        gbc.writeMem(0x8727, { 0x11 });
        gbc.writeMem(0x883c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1dcb, gbc.sp());
        EXPECT(0x883e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x8727));
        EXPECT(0xcb, gbc.readMem(0x883c));
        EXPECT(0xce, gbc.readMem(0x883d));
        // CB CE 01ED
        gbc.setState(0x5d67, 0x46fc, 0x2ce0, 0xaaca, 0x94d5, 0xc9a3, 0x1, 0x1);
        gbc.writeMem(0x5d67, { 0xcb, 0xce });
        gbc.writeMem(0xc9a3, { 0x35 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x46fc, gbc.sp());
        EXPECT(0x5d69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc9a3));
        // CB CE 01EE
        gbc.setState(0x8c57, 0x650d, 0xf420, 0xfa4a, 0xd341, 0x4105, 0x0, 0x1);
        gbc.writeMem(0x4105, { 0xcb });
        gbc.writeMem(0x8c57, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x650d, gbc.sp());
        EXPECT(0x8c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c57));
        EXPECT(0xce, gbc.readMem(0x8c58));
        // CB CE 01EF
        gbc.setState(0xc328, 0x74e1, 0x9e40, 0xc1ae, 0x1fbc, 0x8e64, 0x0, 0x0);
        gbc.writeMem(0x8e64, { 0x12 });
        gbc.writeMem(0xc328, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x74e1, gbc.sp());
        EXPECT(0xc32a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x8e64));
        EXPECT(0xcb, gbc.readMem(0xc328));
        EXPECT(0xce, gbc.readMem(0xc329));
        // CB CE 01F0
        gbc.setState(0x8d71, 0x9e66, 0xd640, 0x557c, 0x2322, 0xf731, 0x1, 0x0);
        gbc.writeMem(0x8d71, { 0xcb, 0xce });
        gbc.writeMem(0xf731, { 0xb3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9e66, gbc.sp());
        EXPECT(0x8d73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d71));
        EXPECT(0xce, gbc.readMem(0x8d72));
        EXPECT(0xb3, gbc.readMem(0xf731));
        // CB CE 01F1
        gbc.setState(0xa472, 0xb84a, 0xe670, 0xe414, 0xaabf, 0x2da1, 0x1, 0x0);
        gbc.writeMem(0x2da1, { 0xba });
        gbc.writeMem(0xa472, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb84a, gbc.sp());
        EXPECT(0xa474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa472));
        EXPECT(0xce, gbc.readMem(0xa473));
        // CB CE 01F2
        gbc.setState(0x4acb, 0x5ae, 0x9a70, 0xe5, 0x6572, 0x79f3, 0x1, 0x0);
        gbc.writeMem(0x4acb, { 0xcb, 0xce });
        gbc.writeMem(0x79f3, { 0x6f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5ae, gbc.sp());
        EXPECT(0x4acd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 01F4
        gbc.setState(0x4272, 0xa911, 0x8940, 0xc6f8, 0xbdd2, 0xdea1, 0x0, 0x0);
        gbc.writeMem(0x4272, { 0xcb, 0xce });
        gbc.writeMem(0xdea1, { 0x82 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa911, gbc.sp());
        EXPECT(0x4274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xdea1));
        // CB CE 01F5
        gbc.setState(0xb482, 0xf29d, 0x2190, 0xfbc4, 0x186, 0x9623, 0x1, 0x1);
        gbc.writeMem(0x9623, { 0x78 });
        gbc.writeMem(0xb482, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf29d, gbc.sp());
        EXPECT(0xb484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9623));
        EXPECT(0xcb, gbc.readMem(0xb482));
        EXPECT(0xce, gbc.readMem(0xb483));
        // CB CE 01F6
        gbc.setState(0xddb3, 0xeb51, 0xeb90, 0x18c1, 0x44d7, 0x238c, 0x1, 0x0);
        gbc.writeMem(0x238c, { 0xff });
        gbc.writeMem(0xddb3, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xeb51, gbc.sp());
        EXPECT(0xddb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddb3));
        EXPECT(0xce, gbc.readMem(0xddb4));
        // CB CE 01F8
        gbc.setState(0x300d, 0x66f3, 0xd470, 0x5634, 0x3668, 0x2c71, 0x0, 0x1);
        gbc.writeMem(0x2c71, { 0x1f });
        gbc.writeMem(0x300d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x66f3, gbc.sp());
        EXPECT(0x300f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 01F9
        gbc.setState(0xa658, 0xcc4e, 0xa2f0, 0x9870, 0xc5bc, 0xbfb7, 0x0, 0x1);
        gbc.writeMem(0xa658, { 0xcb, 0xce });
        gbc.writeMem(0xbfb7, { 0xf8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xcc4e, gbc.sp());
        EXPECT(0xa65a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa658));
        EXPECT(0xce, gbc.readMem(0xa659));
        EXPECT(0xfa, gbc.readMem(0xbfb7));
        // CB CE 01FB
        gbc.setState(0x18ce, 0x3249, 0x59f0, 0xaaca, 0x3913, 0xc5d9, 0x0, 0x1);
        gbc.writeMem(0x18ce, { 0xcb, 0xce });
        gbc.writeMem(0xc5d9, { 0xd3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3249, gbc.sp());
        EXPECT(0x18d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xc5d9));
        // CB CE 01FD
        gbc.setState(0x4151, 0x44e5, 0x570, 0xd24a, 0xc329, 0x6cd0, 0x1, 0x0);
        gbc.writeMem(0x4151, { 0xcb, 0xce });
        gbc.writeMem(0x6cd0, { 0xc7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x44e5, gbc.sp());
        EXPECT(0x4153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 01FE
        gbc.setState(0x3213, 0xaf84, 0xf840, 0x893d, 0xd794, 0x3e47, 0x1, 0x1);
        gbc.writeMem(0x3213, { 0xcb, 0xce });
        gbc.writeMem(0x3e47, { 0x1f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xaf84, gbc.sp());
        EXPECT(0x3215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 01FF
        gbc.setState(0x96fe, 0xa56, 0xf5f0, 0x37db, 0x203b, 0x781f, 0x1, 0x1);
        gbc.writeMem(0x781f, { 0x42 });
        gbc.writeMem(0x96fe, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa56, gbc.sp());
        EXPECT(0x9700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96fe));
        EXPECT(0xce, gbc.readMem(0x96ff));
        // CB CE 0201
        gbc.setState(0xf87, 0xe63b, 0x9990, 0x797f, 0x923f, 0xd669, 0x1, 0x0);
        gbc.writeMem(0xf87, { 0xcb, 0xce });
        gbc.writeMem(0xd669, { 0x62 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe63b, gbc.sp());
        EXPECT(0xf89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xd669));
        // CB CE 0202
        gbc.setState(0xc665, 0xa8a2, 0x4ec0, 0x1648, 0xf6d9, 0xb9c1, 0x0, 0x0);
        gbc.writeMem(0xb9c1, { 0xf9 });
        gbc.writeMem(0xc665, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa8a2, gbc.sp());
        EXPECT(0xc667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xb9c1));
        EXPECT(0xcb, gbc.readMem(0xc665));
        EXPECT(0xce, gbc.readMem(0xc666));
        // CB CE 0203
        gbc.setState(0x1f7e, 0x4a20, 0x7860, 0xdb76, 0x5821, 0xb82f, 0x0, 0x1);
        gbc.writeMem(0x1f7e, { 0xcb, 0xce });
        gbc.writeMem(0xb82f, { 0x2d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4a20, gbc.sp());
        EXPECT(0x1f80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb82f));
        // CB CE 0204
        gbc.setState(0x4871, 0x4448, 0x2c40, 0xc7bc, 0x2164, 0x4cc3, 0x0, 0x1);
        gbc.writeMem(0x4871, { 0xcb, 0xce });
        gbc.writeMem(0x4cc3, { 0x6 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4448, gbc.sp());
        EXPECT(0x4873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 0206
        gbc.setState(0xca5a, 0x6f30, 0xb5a0, 0x1269, 0x1966, 0x8521, 0x1, 0x1);
        gbc.writeMem(0x8521, { 0x41 });
        gbc.writeMem(0xca5a, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6f30, gbc.sp());
        EXPECT(0xca5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8521));
        EXPECT(0xcb, gbc.readMem(0xca5a));
        EXPECT(0xce, gbc.readMem(0xca5b));
        // CB CE 0207
        gbc.setState(0xbcee, 0xc3d0, 0x8680, 0x16df, 0x80b8, 0xf198, 0x1, 0x1);
        gbc.writeMem(0xbcee, { 0xcb, 0xce });
        gbc.writeMem(0xf198, { 0xb9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc3d0, gbc.sp());
        EXPECT(0xbcf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcee));
        EXPECT(0xce, gbc.readMem(0xbcef));
        EXPECT(0xbb, gbc.readMem(0xf198));
        // CB CE 0209
        gbc.setState(0x511f, 0x7cdc, 0x590, 0xeefa, 0xa4f2, 0xfda3, 0x0, 0x1);
        gbc.writeMem(0x511f, { 0xcb, 0xce });
        gbc.writeMem(0xfda3, { 0x79 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7cdc, gbc.sp());
        EXPECT(0x5121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xfda3));
        // CB CE 020A
        gbc.setState(0x2869, 0x50ac, 0x8f60, 0x2d98, 0x3732, 0x7adf, 0x1, 0x1);
        gbc.writeMem(0x2869, { 0xcb, 0xce });
        gbc.writeMem(0x7adf, { 0xb6 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x50ac, gbc.sp());
        EXPECT(0x286b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 020B
        gbc.setState(0x4d77, 0x47e5, 0xe2c0, 0x4c0f, 0x3f10, 0xe1bd, 0x1, 0x1);
        gbc.writeMem(0x4d77, { 0xcb, 0xce });
        gbc.writeMem(0xe1bd, { 0x83 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x47e5, gbc.sp());
        EXPECT(0x4d79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xe1bd));
        // CB CE 020D
        gbc.setState(0x9b1c, 0x6584, 0x2870, 0x9bb1, 0x33cd, 0x6b18, 0x0, 0x1);
        gbc.writeMem(0x6b18, { 0x82 });
        gbc.writeMem(0x9b1c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6584, gbc.sp());
        EXPECT(0x9b1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b1c));
        EXPECT(0xce, gbc.readMem(0x9b1d));
        // CB CE 0210
        gbc.setState(0x8c1b, 0x6cd8, 0xa540, 0xf236, 0x4ab1, 0xdf16, 0x1, 0x0);
        gbc.writeMem(0x8c1b, { 0xcb, 0xce });
        gbc.writeMem(0xdf16, { 0x6c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6cd8, gbc.sp());
        EXPECT(0x8c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c1b));
        EXPECT(0xce, gbc.readMem(0x8c1c));
        EXPECT(0x6e, gbc.readMem(0xdf16));
        // CB CE 0212
        gbc.setState(0xe314, 0x1eb7, 0xbe90, 0x375f, 0x54d1, 0xd6ff, 0x0, 0x0);
        gbc.writeMem(0xd6ff, { 0xd0 });
        gbc.writeMem(0xe314, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1eb7, gbc.sp());
        EXPECT(0xe316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xd6ff));
        EXPECT(0xcb, gbc.readMem(0xe314));
        EXPECT(0xce, gbc.readMem(0xe315));
        // CB CE 0213
        gbc.setState(0x9325, 0x2518, 0xd7e0, 0x3d73, 0xb6ca, 0x37e2, 0x0, 0x0);
        gbc.writeMem(0x37e2, { 0x8e });
        gbc.writeMem(0x9325, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2518, gbc.sp());
        EXPECT(0x9327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9325));
        EXPECT(0xce, gbc.readMem(0x9326));
        // CB CE 0214
        gbc.setState(0xcacc, 0x8ca9, 0x55f0, 0xeee7, 0xe251, 0x178c, 0x0, 0x1);
        gbc.writeMem(0x178c, { 0x83 });
        gbc.writeMem(0xcacc, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8ca9, gbc.sp());
        EXPECT(0xcace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcacc));
        EXPECT(0xce, gbc.readMem(0xcacd));
        // CB CE 0215
        gbc.setState(0x685c, 0xcaa4, 0x4d00, 0x355, 0x1bba, 0x14f0, 0x0, 0x0);
        gbc.writeMem(0x14f0, { 0x33 });
        gbc.writeMem(0x685c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xcaa4, gbc.sp());
        EXPECT(0x685e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 0216
        gbc.setState(0x8076, 0x11cc, 0x3770, 0x7982, 0x450, 0xc0f6, 0x0, 0x1);
        gbc.writeMem(0x8076, { 0xcb, 0xce });
        gbc.writeMem(0xc0f6, { 0xc1 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x11cc, gbc.sp());
        EXPECT(0x8078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8076));
        EXPECT(0xce, gbc.readMem(0x8077));
        EXPECT(0xc3, gbc.readMem(0xc0f6));
        // CB CE 0217
        gbc.setState(0xebee, 0xb723, 0x5840, 0x394c, 0xceeb, 0x50ac, 0x0, 0x1);
        gbc.writeMem(0x50ac, { 0x4a });
        gbc.writeMem(0xebee, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb723, gbc.sp());
        EXPECT(0xebf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebee));
        EXPECT(0xce, gbc.readMem(0xebef));
        // CB CE 021A
        gbc.setState(0x5ac6, 0x6242, 0xd30, 0xbb39, 0xdbff, 0xc9a, 0x1, 0x1);
        gbc.writeMem(0xc9a, { 0x3 });
        gbc.writeMem(0x5ac6, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6242, gbc.sp());
        EXPECT(0x5ac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 021B
        gbc.setState(0xdfa0, 0x5585, 0xb050, 0x85cc, 0xa0de, 0x9bb9, 0x1, 0x1);
        gbc.writeMem(0x9bb9, { 0xba });
        gbc.writeMem(0xdfa0, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5585, gbc.sp());
        EXPECT(0xdfa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x9bb9));
        EXPECT(0xcb, gbc.readMem(0xdfa0));
        EXPECT(0xce, gbc.readMem(0xdfa1));
        // CB CE 021C
        gbc.setState(0xc823, 0x47fb, 0x8250, 0xe559, 0x3f8b, 0xbf36, 0x0, 0x1);
        gbc.writeMem(0xbf36, { 0x1 });
        gbc.writeMem(0xc823, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x47fb, gbc.sp());
        EXPECT(0xc825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xbf36));
        EXPECT(0xcb, gbc.readMem(0xc823));
        EXPECT(0xce, gbc.readMem(0xc824));
        // CB CE 021E
        gbc.setState(0xc2d1, 0xef38, 0x2890, 0xc76d, 0x9af0, 0x9897, 0x0, 0x0);
        gbc.writeMem(0x9897, { 0xea });
        gbc.writeMem(0xc2d1, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xef38, gbc.sp());
        EXPECT(0xc2d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x9897));
        EXPECT(0xcb, gbc.readMem(0xc2d1));
        EXPECT(0xce, gbc.readMem(0xc2d2));
        // CB CE 021F
        gbc.setState(0xe718, 0x2011, 0x4d40, 0xeda6, 0x9292, 0xc0e6, 0x0, 0x1);
        gbc.writeMem(0xc0e6, { 0x2f });
        gbc.writeMem(0xe718, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2011, gbc.sp());
        EXPECT(0xe71a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc0e6));
        EXPECT(0xcb, gbc.readMem(0xe718));
        EXPECT(0xce, gbc.readMem(0xe719));
        // CB CE 0220
        gbc.setState(0x177e, 0xfc6b, 0x320, 0x393c, 0x62b5, 0x96e5, 0x1, 0x1);
        gbc.writeMem(0x177e, { 0xcb, 0xce });
        gbc.writeMem(0x96e5, { 0x56 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xfc6b, gbc.sp());
        EXPECT(0x1780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x96e5));
        // CB CE 0222
        gbc.setState(0x8ed0, 0x5c3b, 0x9010, 0x66de, 0xc0b1, 0xcee5, 0x0, 0x1);
        gbc.writeMem(0x8ed0, { 0xcb, 0xce });
        gbc.writeMem(0xcee5, { 0xb1 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5c3b, gbc.sp());
        EXPECT(0x8ed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed0));
        EXPECT(0xce, gbc.readMem(0x8ed1));
        EXPECT(0xb3, gbc.readMem(0xcee5));
        // CB CE 0224
        gbc.setState(0xcc64, 0xd56d, 0xa3e0, 0xd660, 0x3994, 0x66a3, 0x0, 0x0);
        gbc.writeMem(0x66a3, { 0xc7 });
        gbc.writeMem(0xcc64, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd56d, gbc.sp());
        EXPECT(0xcc66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc64));
        EXPECT(0xce, gbc.readMem(0xcc65));
        // CB CE 0225
        gbc.setState(0xdce2, 0x76f8, 0x7b30, 0x1790, 0xd3c, 0xa2f3, 0x1, 0x1);
        gbc.writeMem(0xa2f3, { 0xeb });
        gbc.writeMem(0xdce2, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x76f8, gbc.sp());
        EXPECT(0xdce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xa2f3));
        EXPECT(0xcb, gbc.readMem(0xdce2));
        EXPECT(0xce, gbc.readMem(0xdce3));
        // CB CE 0227
        gbc.setState(0x28bc, 0x1f7c, 0x8220, 0x6c09, 0x52c, 0xa820, 0x1, 0x0);
        gbc.writeMem(0x28bc, { 0xcb, 0xce });
        gbc.writeMem(0xa820, { 0x8 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1f7c, gbc.sp());
        EXPECT(0x28be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xa820));
        // CB CE 0228
        gbc.setState(0x5e6b, 0xb295, 0x97b0, 0x2a66, 0x7e77, 0x8e44, 0x1, 0x1);
        gbc.writeMem(0x5e6b, { 0xcb, 0xce });
        gbc.writeMem(0x8e44, { 0xdf });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb295, gbc.sp());
        EXPECT(0x5e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x8e44));
        // CB CE 0229
        gbc.setState(0x3981, 0xb10b, 0xf380, 0x920d, 0xafea, 0x40c, 0x0, 0x1);
        gbc.writeMem(0x40c, { 0xf });
        gbc.writeMem(0x3981, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb10b, gbc.sp());
        EXPECT(0x3983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 022A
        gbc.setState(0xed18, 0xd29f, 0x1f70, 0x9656, 0xf45e, 0xd614, 0x0, 0x0);
        gbc.writeMem(0xd614, { 0x7e });
        gbc.writeMem(0xed18, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd29f, gbc.sp());
        EXPECT(0xed1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd614));
        EXPECT(0xcb, gbc.readMem(0xed18));
        EXPECT(0xce, gbc.readMem(0xed19));
        // CB CE 022C
        gbc.setState(0x31b9, 0x63a, 0xd5e0, 0x6e98, 0x644d, 0xacf0, 0x1, 0x0);
        gbc.writeMem(0x31b9, { 0xcb, 0xce });
        gbc.writeMem(0xacf0, { 0xd5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x63a, gbc.sp());
        EXPECT(0x31bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xacf0));
        // CB CE 022D
        gbc.setState(0x74cd, 0xb177, 0x7a20, 0x5bc3, 0x7a6a, 0xa895, 0x0, 0x0);
        gbc.writeMem(0x74cd, { 0xcb, 0xce });
        gbc.writeMem(0xa895, { 0x52 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb177, gbc.sp());
        EXPECT(0x74cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa895));
        // CB CE 022E
        gbc.setState(0x533f, 0x6899, 0x3ba0, 0x5ca2, 0x845b, 0xbced, 0x1, 0x0);
        gbc.writeMem(0x533f, { 0xcb, 0xce });
        gbc.writeMem(0xbced, { 0xbb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6899, gbc.sp());
        EXPECT(0x5341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbced));
        // CB CE 022F
        gbc.setState(0x1acf, 0x8869, 0xcf70, 0x5fb9, 0x2b17, 0xf152, 0x0, 0x0);
        gbc.writeMem(0x1acf, { 0xcb, 0xce });
        gbc.writeMem(0xf152, { 0xc5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8869, gbc.sp());
        EXPECT(0x1ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xf152));
        // CB CE 0230
        gbc.setState(0xa016, 0x6070, 0x7260, 0x4885, 0x7300, 0x8af5, 0x1, 0x0);
        gbc.writeMem(0x8af5, { 0xf7 });
        gbc.writeMem(0xa016, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6070, gbc.sp());
        EXPECT(0xa018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8af5));
        EXPECT(0xcb, gbc.readMem(0xa016));
        EXPECT(0xce, gbc.readMem(0xa017));
        // CB CE 0231
        gbc.setState(0x6e8d, 0x1b1e, 0xdd40, 0xf476, 0x4a3f, 0x20e1, 0x1, 0x0);
        gbc.writeMem(0x20e1, { 0xba });
        gbc.writeMem(0x6e8d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1b1e, gbc.sp());
        EXPECT(0x6e8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 0232
        gbc.setState(0x7e28, 0xcb16, 0x5460, 0x99c8, 0x6ca7, 0xa126, 0x1, 0x1);
        gbc.writeMem(0x7e28, { 0xcb, 0xce });
        gbc.writeMem(0xa126, { 0x70 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcb16, gbc.sp());
        EXPECT(0x7e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa126));
        // CB CE 0234
        gbc.setState(0xaf54, 0xbffb, 0xa7c0, 0x7c9, 0x18af, 0xc964, 0x0, 0x0);
        gbc.writeMem(0xaf54, { 0xcb, 0xce });
        gbc.writeMem(0xc964, { 0x15 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xbffb, gbc.sp());
        EXPECT(0xaf56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf54));
        EXPECT(0xce, gbc.readMem(0xaf55));
        EXPECT(0x17, gbc.readMem(0xc964));
        // CB CE 0236
        gbc.setState(0xab4, 0x9af0, 0x8d20, 0x5a5f, 0x7f5e, 0xd6e0, 0x1, 0x1);
        gbc.writeMem(0xab4, { 0xcb, 0xce });
        gbc.writeMem(0xd6e0, { 0x60 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9af0, gbc.sp());
        EXPECT(0xab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xd6e0));
        // CB CE 0237
        gbc.setState(0xe893, 0x6e68, 0x3e60, 0x3e52, 0x48ae, 0xd8a8, 0x1, 0x1);
        gbc.writeMem(0xd8a8, { 0xa3 });
        gbc.writeMem(0xe893, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6e68, gbc.sp());
        EXPECT(0xe895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd8a8));
        EXPECT(0xcb, gbc.readMem(0xe893));
        EXPECT(0xce, gbc.readMem(0xe894));
        // CB CE 023A
        gbc.setState(0x1876, 0xddf1, 0x9aa0, 0xfaeb, 0x3265, 0xfae3, 0x0, 0x1);
        gbc.writeMem(0x1876, { 0xcb, 0xce });
        gbc.writeMem(0xfae3, { 0x3d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xddf1, gbc.sp());
        EXPECT(0x1878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xfae3));
        // CB CE 023C
        gbc.setState(0x9a61, 0x2f95, 0x2fa0, 0x53b3, 0xe8ff, 0x2776, 0x0, 0x1);
        gbc.writeMem(0x2776, { 0x67 });
        gbc.writeMem(0x9a61, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2f95, gbc.sp());
        EXPECT(0x9a63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a61));
        EXPECT(0xce, gbc.readMem(0x9a62));
        // CB CE 023D
        gbc.setState(0x2441, 0x92f6, 0x1a10, 0xf90e, 0x7b78, 0x1e9, 0x0, 0x1);
        gbc.writeMem(0x1e9, { 0xdf });
        gbc.writeMem(0x2441, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x92f6, gbc.sp());
        EXPECT(0x2443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 023F
        gbc.setState(0xea81, 0x51f2, 0x9360, 0xc850, 0x1cef, 0xa85b, 0x1, 0x0);
        gbc.writeMem(0xa85b, { 0x45 });
        gbc.writeMem(0xea81, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x51f2, gbc.sp());
        EXPECT(0xea83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa85b));
        EXPECT(0xcb, gbc.readMem(0xea81));
        EXPECT(0xce, gbc.readMem(0xea82));
        // CB CE 0240
        gbc.setState(0x7b9, 0x9588, 0xc8e0, 0x14f8, 0x96ea, 0xbff6, 0x0, 0x1);
        gbc.writeMem(0x7b9, { 0xcb, 0xce });
        gbc.writeMem(0xbff6, { 0x62 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9588, gbc.sp());
        EXPECT(0x7bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xbff6));
        // CB CE 0241
        gbc.setState(0x7cdd, 0x8016, 0x5770, 0x565a, 0x6573, 0xb1ba, 0x0, 0x1);
        gbc.writeMem(0x7cdd, { 0xcb, 0xce });
        gbc.writeMem(0xb1ba, { 0xaf });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8016, gbc.sp());
        EXPECT(0x7cdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xb1ba));
        // CB CE 0243
        gbc.setState(0x5fd4, 0x4350, 0x5d00, 0x9c8f, 0xf7ae, 0xec29, 0x0, 0x0);
        gbc.writeMem(0x5fd4, { 0xcb, 0xce });
        gbc.writeMem(0xec29, { 0x66 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4350, gbc.sp());
        EXPECT(0x5fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xec29));
        // CB CE 0245
        gbc.setState(0x9110, 0xeb9, 0xb470, 0xcc41, 0xf00a, 0xf477, 0x0, 0x1);
        gbc.writeMem(0x9110, { 0xcb, 0xce });
        gbc.writeMem(0xf477, { 0x9e });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xeb9, gbc.sp());
        EXPECT(0x9112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9110));
        EXPECT(0xce, gbc.readMem(0x9111));
        EXPECT(0x9e, gbc.readMem(0xf477));
        // CB CE 0246
        gbc.setState(0x71ec, 0x8485, 0x1e0, 0xc97d, 0x62c, 0xb395, 0x0, 0x1);
        gbc.writeMem(0x71ec, { 0xcb, 0xce });
        gbc.writeMem(0xb395, { 0x7d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8485, gbc.sp());
        EXPECT(0x71ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xb395));
        // CB CE 0247
        gbc.setState(0xccd1, 0xd506, 0x5180, 0x5b00, 0x5fa3, 0xb9b7, 0x1, 0x1);
        gbc.writeMem(0xb9b7, { 0xa1 });
        gbc.writeMem(0xccd1, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd506, gbc.sp());
        EXPECT(0xccd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xb9b7));
        EXPECT(0xcb, gbc.readMem(0xccd1));
        EXPECT(0xce, gbc.readMem(0xccd2));
        // CB CE 0248
        gbc.setState(0x1858, 0x36b4, 0xdbe0, 0xe0e1, 0xcf4a, 0x606c, 0x0, 0x0);
        gbc.writeMem(0x1858, { 0xcb, 0xce });
        gbc.writeMem(0x606c, { 0x1e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x36b4, gbc.sp());
        EXPECT(0x185a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 0249
        gbc.setState(0x1894, 0xbb29, 0xef40, 0xe500, 0x184b, 0x8405, 0x0, 0x0);
        gbc.writeMem(0x1894, { 0xcb, 0xce });
        gbc.writeMem(0x8405, { 0x88 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbb29, gbc.sp());
        EXPECT(0x1896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8405));
        // CB CE 024A
        gbc.setState(0x7c8e, 0xacbe, 0x3f80, 0xd5a7, 0xc276, 0x9363, 0x0, 0x1);
        gbc.writeMem(0x7c8e, { 0xcb, 0xce });
        gbc.writeMem(0x9363, { 0xab });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xacbe, gbc.sp());
        EXPECT(0x7c90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x9363));
        // CB CE 024D
        gbc.setState(0x1cf2, 0xd288, 0x9b00, 0xeeb1, 0x8145, 0xa9e0, 0x0, 0x0);
        gbc.writeMem(0x1cf2, { 0xcb, 0xce });
        gbc.writeMem(0xa9e0, { 0xab });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd288, gbc.sp());
        EXPECT(0x1cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xa9e0));
        // CB CE 024E
        gbc.setState(0x7068, 0x518f, 0xb30, 0x7720, 0x2d22, 0x9342, 0x1, 0x1);
        gbc.writeMem(0x7068, { 0xcb, 0xce });
        gbc.writeMem(0x9342, { 0xaf });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x518f, gbc.sp());
        EXPECT(0x706a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x9342));
        // CB CE 0250
        gbc.setState(0x8ffe, 0xbf4f, 0xb530, 0x7082, 0x5adc, 0xe966, 0x1, 0x1);
        gbc.writeMem(0x8ffe, { 0xcb, 0xce });
        gbc.writeMem(0xe966, { 0xe9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbf4f, gbc.sp());
        EXPECT(0x9000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ffe));
        EXPECT(0xce, gbc.readMem(0x8fff));
        EXPECT(0xeb, gbc.readMem(0xe966));
        // CB CE 0251
        gbc.setState(0x675d, 0x384c, 0x1e40, 0xe60c, 0x3234, 0x968e, 0x0, 0x0);
        gbc.writeMem(0x675d, { 0xcb, 0xce });
        gbc.writeMem(0x968e, { 0x62 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x384c, gbc.sp());
        EXPECT(0x675f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0x968e));
        // CB CE 0252
        gbc.setState(0x5759, 0xebd7, 0x1ef0, 0x721d, 0xccf7, 0x3cc6, 0x0, 0x0);
        gbc.writeMem(0x3cc6, { 0x67 });
        gbc.writeMem(0x5759, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xebd7, gbc.sp());
        EXPECT(0x575b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 0255
        gbc.setState(0x7071, 0xb3a2, 0x56e0, 0x683c, 0x8449, 0xb558, 0x0, 0x1);
        gbc.writeMem(0x7071, { 0xcb, 0xce });
        gbc.writeMem(0xb558, { 0xde });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb3a2, gbc.sp());
        EXPECT(0x7073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xb558));
        // CB CE 0256
        gbc.setState(0x4ae, 0xf2fa, 0x35d0, 0xbb72, 0x2a1c, 0xfaf8, 0x1, 0x0);
        gbc.writeMem(0x4ae, { 0xcb, 0xce });
        gbc.writeMem(0xfaf8, { 0x37 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf2fa, gbc.sp());
        EXPECT(0x4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xfaf8));
        // CB CE 0258
        gbc.setState(0xd0b1, 0x2bed, 0x2410, 0xcadc, 0x5078, 0xf1d8, 0x0, 0x1);
        gbc.writeMem(0xd0b1, { 0xcb, 0xce });
        gbc.writeMem(0xf1d8, { 0xa5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2bed, gbc.sp());
        EXPECT(0xd0b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0b1));
        EXPECT(0xce, gbc.readMem(0xd0b2));
        EXPECT(0xa7, gbc.readMem(0xf1d8));
        // CB CE 025A
        gbc.setState(0x5f80, 0xa754, 0x4620, 0x484e, 0xc8e1, 0xe406, 0x0, 0x1);
        gbc.writeMem(0x5f80, { 0xcb, 0xce });
        gbc.writeMem(0xe406, { 0xf8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa754, gbc.sp());
        EXPECT(0x5f82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xe406));
        // CB CE 025D
        gbc.setState(0xf6d, 0xf969, 0x5e50, 0x895, 0xa41d, 0x9002, 0x0, 0x0);
        gbc.writeMem(0xf6d, { 0xcb, 0xce });
        gbc.writeMem(0x9002, { 0xd2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf969, gbc.sp());
        EXPECT(0xf6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x9002));
        // CB CE 025F
        gbc.setState(0x2735, 0x40b5, 0x6d70, 0x3903, 0xe685, 0x9b7f, 0x1, 0x0);
        gbc.writeMem(0x2735, { 0xcb, 0xce });
        gbc.writeMem(0x9b7f, { 0xec });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x40b5, gbc.sp());
        EXPECT(0x2737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x9b7f));
        // CB CE 0261
        gbc.setState(0xb51e, 0xab82, 0x4cf0, 0xca51, 0xdfd1, 0xdc45, 0x1, 0x0);
        gbc.writeMem(0xb51e, { 0xcb, 0xce });
        gbc.writeMem(0xdc45, { 0x35 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xab82, gbc.sp());
        EXPECT(0xb520, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb51e));
        EXPECT(0xce, gbc.readMem(0xb51f));
        EXPECT(0x37, gbc.readMem(0xdc45));
        // CB CE 0262
        gbc.setState(0x8e49, 0x9911, 0x1760, 0x178d, 0xa4a2, 0x1c85, 0x1, 0x1);
        gbc.writeMem(0x1c85, { 0xcb });
        gbc.writeMem(0x8e49, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9911, gbc.sp());
        EXPECT(0x8e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e49));
        EXPECT(0xce, gbc.readMem(0x8e4a));
        // CB CE 0264
        gbc.setState(0xcfe6, 0xf673, 0x64d0, 0x2da8, 0xdf23, 0xd304, 0x0, 0x1);
        gbc.writeMem(0xcfe6, { 0xcb, 0xce });
        gbc.writeMem(0xd304, { 0x97 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf673, gbc.sp());
        EXPECT(0xcfe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfe6));
        EXPECT(0xce, gbc.readMem(0xcfe7));
        EXPECT(0x97, gbc.readMem(0xd304));
        // CB CE 0265
        gbc.setState(0x13a5, 0x8416, 0x7b20, 0xa3bc, 0x32b1, 0x910f, 0x0, 0x0);
        gbc.writeMem(0x13a5, { 0xcb, 0xce });
        gbc.writeMem(0x910f, { 0x99 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8416, gbc.sp());
        EXPECT(0x13a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x910f));
        // CB CE 0266
        gbc.setState(0xc526, 0x50f3, 0x1970, 0x486, 0xfa94, 0xb957, 0x1, 0x0);
        gbc.writeMem(0xb957, { 0x96 });
        gbc.writeMem(0xc526, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x50f3, gbc.sp());
        EXPECT(0xc528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xb957));
        EXPECT(0xcb, gbc.readMem(0xc526));
        EXPECT(0xce, gbc.readMem(0xc527));
        // CB CE 0267
        gbc.setState(0x1cd0, 0xeca4, 0xedf0, 0xa4c7, 0x9cbf, 0xe0a8, 0x1, 0x1);
        gbc.writeMem(0x1cd0, { 0xcb, 0xce });
        gbc.writeMem(0xe0a8, { 0xe9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xeca4, gbc.sp());
        EXPECT(0x1cd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xe0a8));
        // CB CE 0268
        gbc.setState(0x9948, 0x8e71, 0x1c80, 0x4ed9, 0xfdac, 0x9251, 0x0, 0x0);
        gbc.writeMem(0x9251, { 0x3f });
        gbc.writeMem(0x9948, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8e71, gbc.sp());
        EXPECT(0x994a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9251));
        EXPECT(0xcb, gbc.readMem(0x9948));
        EXPECT(0xce, gbc.readMem(0x9949));
        // CB CE 0269
        gbc.setState(0x69a1, 0x80dc, 0xd0d0, 0x9a53, 0xb5f2, 0xb71f, 0x1, 0x0);
        gbc.writeMem(0x69a1, { 0xcb, 0xce });
        gbc.writeMem(0xb71f, { 0xaf });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x80dc, gbc.sp());
        EXPECT(0x69a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xb71f));
        // CB CE 026A
        gbc.setState(0x1f87, 0x1744, 0xaff0, 0x8182, 0x7faf, 0x74db, 0x0, 0x1);
        gbc.writeMem(0x1f87, { 0xcb, 0xce });
        gbc.writeMem(0x74db, { 0x3f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1744, gbc.sp());
        EXPECT(0x1f89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 026B
        gbc.setState(0x5c70, 0x1cf, 0xce10, 0x8154, 0x9ad7, 0x843f, 0x0, 0x1);
        gbc.writeMem(0x5c70, { 0xcb, 0xce });
        gbc.writeMem(0x843f, { 0x53 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1cf, gbc.sp());
        EXPECT(0x5c72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x843f));
        // CB CE 026D
        gbc.setState(0x9260, 0x394, 0xdae0, 0x8308, 0x1fbf, 0x3be8, 0x1, 0x1);
        gbc.writeMem(0x3be8, { 0x2b });
        gbc.writeMem(0x9260, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x394, gbc.sp());
        EXPECT(0x9262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9260));
        EXPECT(0xce, gbc.readMem(0x9261));
        // CB CE 026F
        gbc.setState(0x4041, 0xdc4c, 0x62d0, 0xadd8, 0x2d94, 0x98a4, 0x1, 0x0);
        gbc.writeMem(0x4041, { 0xcb, 0xce });
        gbc.writeMem(0x98a4, { 0x59 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdc4c, gbc.sp());
        EXPECT(0x4043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x98a4));
        // CB CE 0270
        gbc.setState(0x6ab5, 0xbc0d, 0x80d0, 0x3c4b, 0x3950, 0x551d, 0x0, 0x1);
        gbc.writeMem(0x551d, { 0xbf });
        gbc.writeMem(0x6ab5, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xbc0d, gbc.sp());
        EXPECT(0x6ab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 0271
        gbc.setState(0xe446, 0xe3f5, 0xd570, 0xf14b, 0x1d22, 0xf570, 0x0, 0x1);
        gbc.writeMem(0xe446, { 0xcb, 0xce });
        gbc.writeMem(0xf570, { 0xde });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe3f5, gbc.sp());
        EXPECT(0xe448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe446));
        EXPECT(0xce, gbc.readMem(0xe447));
        EXPECT(0xde, gbc.readMem(0xf570));
        // CB CE 0272
        gbc.setState(0x32e0, 0x1f93, 0x57f0, 0x94f0, 0x6710, 0x84f4, 0x1, 0x1);
        gbc.writeMem(0x32e0, { 0xcb, 0xce });
        gbc.writeMem(0x84f4, { 0x1d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1f93, gbc.sp());
        EXPECT(0x32e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x84f4));
        // CB CE 0273
        gbc.setState(0xd532, 0xfab1, 0x1570, 0x47a5, 0x33d0, 0xfd81, 0x1, 0x1);
        gbc.writeMem(0xd532, { 0xcb, 0xce });
        gbc.writeMem(0xfd81, { 0xdf });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfab1, gbc.sp());
        EXPECT(0xd534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd532));
        EXPECT(0xce, gbc.readMem(0xd533));
        EXPECT(0xdf, gbc.readMem(0xfd81));
        // CB CE 0274
        gbc.setState(0x88d3, 0x9b5d, 0xab80, 0x9d32, 0x5a07, 0x9c84, 0x0, 0x0);
        gbc.writeMem(0x88d3, { 0xcb, 0xce });
        gbc.writeMem(0x9c84, { 0x16 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9b5d, gbc.sp());
        EXPECT(0x88d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88d3));
        EXPECT(0xce, gbc.readMem(0x88d4));
        EXPECT(0x16, gbc.readMem(0x9c84));
        // CB CE 0278
        gbc.setState(0x88, 0xb5e0, 0x5e70, 0xc7e, 0x3c5d, 0x199f, 0x0, 0x1);
        gbc.writeMem(0x88, { 0xcb, 0xce });
        gbc.writeMem(0x199f, { 0x3e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb5e0, gbc.sp());
        EXPECT(0x8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 0279
        gbc.setState(0x24a, 0xce16, 0xa9c0, 0xff36, 0x226, 0xfc8c, 0x1, 0x0);
        gbc.writeMem(0x24a, { 0xcb, 0xce });
        gbc.writeMem(0xfc8c, { 0xb6 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xce16, gbc.sp());
        EXPECT(0x24c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xfc8c));
        // CB CE 027A
        gbc.setState(0xb11, 0xc8d8, 0x3820, 0x25d2, 0x4246, 0xb24b, 0x0, 0x1);
        gbc.writeMem(0xb11, { 0xcb, 0xce });
        gbc.writeMem(0xb24b, { 0x94 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc8d8, gbc.sp());
        EXPECT(0xb13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xb24b));
        // CB CE 027C
        gbc.setState(0x9bf0, 0x5159, 0x57b0, 0x438f, 0x9cca, 0x9707, 0x0, 0x1);
        gbc.writeMem(0x9707, { 0xe7 });
        gbc.writeMem(0x9bf0, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5159, gbc.sp());
        EXPECT(0x9bf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x9707));
        EXPECT(0xcb, gbc.readMem(0x9bf0));
        EXPECT(0xce, gbc.readMem(0x9bf1));
        // CB CE 027E
        gbc.setState(0x9c39, 0x624b, 0x4110, 0xe393, 0x275a, 0xa5d8, 0x0, 0x1);
        gbc.writeMem(0x9c39, { 0xcb, 0xce });
        gbc.writeMem(0xa5d8, { 0x55 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x624b, gbc.sp());
        EXPECT(0x9c3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c39));
        EXPECT(0xce, gbc.readMem(0x9c3a));
        EXPECT(0x57, gbc.readMem(0xa5d8));
        // CB CE 027F
        gbc.setState(0xe890, 0x117a, 0x60f0, 0x842a, 0x3bb2, 0xc45e, 0x0, 0x0);
        gbc.writeMem(0xc45e, { 0xb2 });
        gbc.writeMem(0xe890, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x117a, gbc.sp());
        EXPECT(0xe892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xc45e));
        EXPECT(0xcb, gbc.readMem(0xe890));
        EXPECT(0xce, gbc.readMem(0xe891));
        // CB CE 0281
        gbc.setState(0xa188, 0xfb2f, 0xeb40, 0xb1d4, 0x69c4, 0xe607, 0x0, 0x1);
        gbc.writeMem(0xa188, { 0xcb, 0xce });
        gbc.writeMem(0xe607, { 0xfb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xfb2f, gbc.sp());
        EXPECT(0xa18a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa188));
        EXPECT(0xce, gbc.readMem(0xa189));
        EXPECT(0xfb, gbc.readMem(0xe607));
        // CB CE 0282
        gbc.setState(0xd85d, 0x4edf, 0x7950, 0xf94b, 0x7f92, 0x283, 0x0, 0x0);
        gbc.writeMem(0x283, { 0x4a });
        gbc.writeMem(0xd85d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4edf, gbc.sp());
        EXPECT(0xd85f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd85d));
        EXPECT(0xce, gbc.readMem(0xd85e));
        // CB CE 0284
        gbc.setState(0xb6a5, 0x6de4, 0x2510, 0x652a, 0x2f7b, 0xc95, 0x1, 0x1);
        gbc.writeMem(0xc95, { 0x3b });
        gbc.writeMem(0xb6a5, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6de4, gbc.sp());
        EXPECT(0xb6a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6a5));
        EXPECT(0xce, gbc.readMem(0xb6a6));
        // CB CE 0285
        gbc.setState(0x5e7d, 0x9f58, 0xaf0, 0x38a4, 0xf776, 0x32fb, 0x0, 0x1);
        gbc.writeMem(0x32fb, { 0x77 });
        gbc.writeMem(0x5e7d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9f58, gbc.sp());
        EXPECT(0x5e7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 0286
        gbc.setState(0x4a44, 0xb4ea, 0x6e30, 0x5124, 0xd1b2, 0xf33f, 0x0, 0x1);
        gbc.writeMem(0x4a44, { 0xcb, 0xce });
        gbc.writeMem(0xf33f, { 0x22 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb4ea, gbc.sp());
        EXPECT(0x4a46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xf33f));
        // CB CE 0287
        gbc.setState(0x831c, 0x92e3, 0xe910, 0x23d7, 0xa597, 0xe155, 0x0, 0x1);
        gbc.writeMem(0x831c, { 0xcb, 0xce });
        gbc.writeMem(0xe155, { 0xe2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x92e3, gbc.sp());
        EXPECT(0x831e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x831c));
        EXPECT(0xce, gbc.readMem(0x831d));
        EXPECT(0xe2, gbc.readMem(0xe155));
        // CB CE 0289
        gbc.setState(0x4c00, 0xd644, 0x4e00, 0x44bd, 0x2965, 0xcc17, 0x0, 0x0);
        gbc.writeMem(0x4c00, { 0xcb, 0xce });
        gbc.writeMem(0xcc17, { 0x4f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd644, gbc.sp());
        EXPECT(0x4c02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xcc17));
        // CB CE 028A
        gbc.setState(0x754b, 0x9337, 0x86a0, 0x562b, 0x7252, 0xf848, 0x1, 0x1);
        gbc.writeMem(0x754b, { 0xcb, 0xce });
        gbc.writeMem(0xf848, { 0x42 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9337, gbc.sp());
        EXPECT(0x754d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xf848));
        // CB CE 028B
        gbc.setState(0xc205, 0xc3bc, 0xe720, 0x9534, 0xfe23, 0xe4fa, 0x0, 0x1);
        gbc.writeMem(0xc205, { 0xcb, 0xce });
        gbc.writeMem(0xe4fa, { 0xdc });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc3bc, gbc.sp());
        EXPECT(0xc207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc205));
        EXPECT(0xce, gbc.readMem(0xc206));
        EXPECT(0xde, gbc.readMem(0xe4fa));
        // CB CE 028C
        gbc.setState(0x59fd, 0x1c0d, 0x56b0, 0xf90, 0xef59, 0xffd5, 0x0, 0x0);
        gbc.writeMem(0x59fd, { 0xcb, 0xce });
        gbc.writeMem(0xffd5, { 0xc });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1c0d, gbc.sp());
        EXPECT(0x59ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xffd5));
        // CB CE 028D
        gbc.setState(0x3dc8, 0x14f6, 0x5fe0, 0x89fa, 0x4dbb, 0x5fb3, 0x0, 0x1);
        gbc.writeMem(0x3dc8, { 0xcb, 0xce });
        gbc.writeMem(0x5fb3, { 0xfb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x14f6, gbc.sp());
        EXPECT(0x3dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 028E
        gbc.setState(0x3529, 0xee5f, 0x6450, 0xf38d, 0x3e3a, 0xc22d, 0x1, 0x1);
        gbc.writeMem(0x3529, { 0xcb, 0xce });
        gbc.writeMem(0xc22d, { 0xd6 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xee5f, gbc.sp());
        EXPECT(0x352b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc22d));
        // CB CE 028F
        gbc.setState(0xab63, 0x6f1e, 0xfab0, 0x4477, 0x5952, 0x84c3, 0x0, 0x0);
        gbc.writeMem(0x84c3, { 0xc7 });
        gbc.writeMem(0xab63, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6f1e, gbc.sp());
        EXPECT(0xab65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x84c3));
        EXPECT(0xcb, gbc.readMem(0xab63));
        EXPECT(0xce, gbc.readMem(0xab64));
        // CB CE 0291
        gbc.setState(0xc570, 0xa9f1, 0xc260, 0x5f52, 0xd97a, 0xa68d, 0x0, 0x1);
        gbc.writeMem(0xa68d, { 0x41 });
        gbc.writeMem(0xc570, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa9f1, gbc.sp());
        EXPECT(0xc572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa68d));
        EXPECT(0xcb, gbc.readMem(0xc570));
        EXPECT(0xce, gbc.readMem(0xc571));
        // CB CE 0293
        gbc.setState(0xe210, 0x1ac, 0xae00, 0x123e, 0x2f88, 0x9ad7, 0x1, 0x0);
        gbc.writeMem(0x9ad7, { 0x13 });
        gbc.writeMem(0xe210, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1ac, gbc.sp());
        EXPECT(0xe212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9ad7));
        EXPECT(0xcb, gbc.readMem(0xe210));
        EXPECT(0xce, gbc.readMem(0xe211));
        // CB CE 0295
        gbc.setState(0x93b0, 0xd364, 0x5480, 0x5af7, 0xf032, 0x685c, 0x0, 0x1);
        gbc.writeMem(0x685c, { 0x3a });
        gbc.writeMem(0x93b0, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd364, gbc.sp());
        EXPECT(0x93b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93b0));
        EXPECT(0xce, gbc.readMem(0x93b1));
        // CB CE 0296
        gbc.setState(0x5b3, 0xeb90, 0x9640, 0xf6b0, 0xf8bf, 0x22b4, 0x0, 0x0);
        gbc.writeMem(0x5b3, { 0xcb, 0xce });
        gbc.writeMem(0x22b4, { 0xfb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xeb90, gbc.sp());
        EXPECT(0x5b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 0299
        gbc.setState(0x8221, 0x3ecf, 0xda60, 0xa028, 0x33b1, 0xb17b, 0x1, 0x0);
        gbc.writeMem(0x8221, { 0xcb, 0xce });
        gbc.writeMem(0xb17b, { 0xd7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3ecf, gbc.sp());
        EXPECT(0x8223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8221));
        EXPECT(0xce, gbc.readMem(0x8222));
        EXPECT(0xd7, gbc.readMem(0xb17b));
        // CB CE 029A
        gbc.setState(0x2d23, 0xa783, 0xaed0, 0x870d, 0xc5f8, 0x1379, 0x0, 0x0);
        gbc.writeMem(0x1379, { 0x27 });
        gbc.writeMem(0x2d23, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa783, gbc.sp());
        EXPECT(0x2d25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 029C
        gbc.setState(0x344a, 0xa669, 0x92c0, 0xc2a9, 0xc61, 0x8ab6, 0x1, 0x1);
        gbc.writeMem(0x344a, { 0xcb, 0xce });
        gbc.writeMem(0x8ab6, { 0xc8 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa669, gbc.sp());
        EXPECT(0x344c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x8ab6));
        // CB CE 029D
        gbc.setState(0x9b9a, 0x473c, 0x1130, 0xf277, 0xf7f6, 0x9325, 0x0, 0x0);
        gbc.writeMem(0x9325, { 0x6c });
        gbc.writeMem(0x9b9a, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x473c, gbc.sp());
        EXPECT(0x9b9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9325));
        EXPECT(0xcb, gbc.readMem(0x9b9a));
        EXPECT(0xce, gbc.readMem(0x9b9b));
        // CB CE 029E
        gbc.setState(0x2239, 0xf328, 0xda60, 0x299c, 0xd264, 0x9d2a, 0x0, 0x0);
        gbc.writeMem(0x2239, { 0xcb, 0xce });
        gbc.writeMem(0x9d2a, { 0x9f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf328, gbc.sp());
        EXPECT(0x223b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9d2a));
        // CB CE 029F
        gbc.setState(0x3ba9, 0x3c43, 0x53e0, 0xa735, 0x9102, 0xfe36, 0x1, 0x0);
        gbc.writeMem(0x3ba9, { 0xcb, 0xce });
        gbc.writeMem(0xfe36, { 0xa6 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3c43, gbc.sp());
        EXPECT(0x3bab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xfe36));
        // CB CE 02A2
        gbc.setState(0x69d2, 0x6112, 0x1030, 0x7792, 0x2209, 0x9992, 0x0, 0x1);
        gbc.writeMem(0x69d2, { 0xcb, 0xce });
        gbc.writeMem(0x9992, { 0xc6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6112, gbc.sp());
        EXPECT(0x69d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9992));
        // CB CE 02A3
        gbc.setState(0x2769, 0xcd31, 0x8880, 0x13f8, 0x68ea, 0xcc4b, 0x0, 0x0);
        gbc.writeMem(0x2769, { 0xcb, 0xce });
        gbc.writeMem(0xcc4b, { 0x19 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xcd31, gbc.sp());
        EXPECT(0x276b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xcc4b));
        // CB CE 02A4
        gbc.setState(0xd309, 0x1827, 0xea30, 0x8844, 0xa38, 0x6702, 0x0, 0x0);
        gbc.writeMem(0x6702, { 0x57 });
        gbc.writeMem(0xd309, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1827, gbc.sp());
        EXPECT(0xd30b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd309));
        EXPECT(0xce, gbc.readMem(0xd30a));
        // CB CE 02A5
        gbc.setState(0x507c, 0xb0f7, 0xb0b0, 0xc23d, 0xa996, 0x61bc, 0x0, 0x1);
        gbc.writeMem(0x507c, { 0xcb, 0xce });
        gbc.writeMem(0x61bc, { 0xa3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb0f7, gbc.sp());
        EXPECT(0x507e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 02A6
        gbc.setState(0x7fdf, 0xa8c7, 0x45f0, 0x9e16, 0x5a86, 0xe489, 0x1, 0x1);
        gbc.writeMem(0x7fdf, { 0xcb, 0xce });
        gbc.writeMem(0xe489, { 0x92 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa8c7, gbc.sp());
        EXPECT(0x7fe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe489));
        // CB CE 02A8
        gbc.setState(0x697, 0x8ce2, 0xb430, 0x2e67, 0x5637, 0x498, 0x1, 0x0);
        gbc.writeMem(0x498, { 0x6b });
        gbc.writeMem(0x697, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8ce2, gbc.sp());
        EXPECT(0x699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 02AA
        gbc.setState(0x7449, 0xd482, 0x8110, 0xdd02, 0x206a, 0x85b, 0x1, 0x0);
        gbc.writeMem(0x85b, { 0xa6 });
        gbc.writeMem(0x7449, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd482, gbc.sp());
        EXPECT(0x744b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 02AB
        gbc.setState(0x39e9, 0xff95, 0xe740, 0x9ab0, 0xb4e, 0x7f2a, 0x1, 0x1);
        gbc.writeMem(0x39e9, { 0xcb, 0xce });
        gbc.writeMem(0x7f2a, { 0xaa });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xff95, gbc.sp());
        EXPECT(0x39eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 02AC
        gbc.setState(0x9508, 0x9343, 0xa4b0, 0xc885, 0xd28f, 0xc90e, 0x0, 0x1);
        gbc.writeMem(0x9508, { 0xcb, 0xce });
        gbc.writeMem(0xc90e, { 0x13 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9343, gbc.sp());
        EXPECT(0x950a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9508));
        EXPECT(0xce, gbc.readMem(0x9509));
        EXPECT(0x13, gbc.readMem(0xc90e));
        // CB CE 02AD
        gbc.setState(0xaedd, 0xba12, 0x6ee0, 0x1102, 0x1699, 0xd65c, 0x1, 0x1);
        gbc.writeMem(0xaedd, { 0xcb, 0xce });
        gbc.writeMem(0xd65c, { 0xe6 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xba12, gbc.sp());
        EXPECT(0xaedf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaedd));
        EXPECT(0xce, gbc.readMem(0xaede));
        EXPECT(0xe6, gbc.readMem(0xd65c));
        // CB CE 02AE
        gbc.setState(0xfcc, 0x338a, 0xb730, 0x5dc, 0xeda2, 0xc97b, 0x0, 0x1);
        gbc.writeMem(0xfcc, { 0xcb, 0xce });
        gbc.writeMem(0xc97b, { 0x62 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x338a, gbc.sp());
        EXPECT(0xfce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xc97b));
        // CB CE 02B0
        gbc.setState(0xb104, 0x527c, 0x5bb0, 0x4f73, 0x7b31, 0xd96b, 0x1, 0x0);
        gbc.writeMem(0xb104, { 0xcb, 0xce });
        gbc.writeMem(0xd96b, { 0x5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x527c, gbc.sp());
        EXPECT(0xb106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb104));
        EXPECT(0xce, gbc.readMem(0xb105));
        EXPECT(0x7, gbc.readMem(0xd96b));
        // CB CE 02B2
        gbc.setState(0x9312, 0xdbba, 0xfed0, 0x1527, 0xdeca, 0xff62, 0x1, 0x1);
        gbc.writeMem(0x9312, { 0xcb, 0xce });
        gbc.writeMem(0xff62, { 0x1a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xdbba, gbc.sp());
        EXPECT(0x9314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9312));
        EXPECT(0xce, gbc.readMem(0x9313));
        EXPECT(0x1a, gbc.readMem(0xff62));
        // CB CE 02B3
        gbc.setState(0x7eb8, 0x4192, 0xe430, 0xb668, 0xc273, 0x65ca, 0x1, 0x0);
        gbc.writeMem(0x65ca, { 0x27 });
        gbc.writeMem(0x7eb8, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4192, gbc.sp());
        EXPECT(0x7eba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 02B4
        gbc.setState(0x5ce, 0xbc63, 0x7aa0, 0xe96e, 0x430f, 0x5796, 0x0, 0x0);
        gbc.writeMem(0x5ce, { 0xcb, 0xce });
        gbc.writeMem(0x5796, { 0xcf });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbc63, gbc.sp());
        EXPECT(0x5d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 02B5
        gbc.setState(0x67fa, 0x1859, 0xcd70, 0x2d3c, 0xcc9a, 0x4402, 0x0, 0x0);
        gbc.writeMem(0x4402, { 0xd6 });
        gbc.writeMem(0x67fa, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1859, gbc.sp());
        EXPECT(0x67fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 02B6
        gbc.setState(0x2b35, 0x6b37, 0x7f10, 0x35fd, 0xd8ce, 0x883c, 0x1, 0x0);
        gbc.writeMem(0x2b35, { 0xcb, 0xce });
        gbc.writeMem(0x883c, { 0x96 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6b37, gbc.sp());
        EXPECT(0x2b37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x883c));
        // CB CE 02B8
        gbc.setState(0xdaa1, 0x66c1, 0x7ba0, 0xf163, 0xbab8, 0x1ad3, 0x1, 0x1);
        gbc.writeMem(0x1ad3, { 0xb6 });
        gbc.writeMem(0xdaa1, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x66c1, gbc.sp());
        EXPECT(0xdaa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaa1));
        EXPECT(0xce, gbc.readMem(0xdaa2));
        // CB CE 02B9
        gbc.setState(0x660e, 0xc95, 0xf070, 0x48e9, 0x6fa8, 0xb373, 0x0, 0x0);
        gbc.writeMem(0x660e, { 0xcb, 0xce });
        gbc.writeMem(0xb373, { 0xf2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc95, gbc.sp());
        EXPECT(0x6610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xb373));
        // CB CE 02BA
        gbc.setState(0xa381, 0xd510, 0xb470, 0x37e2, 0xbb9c, 0x7d43, 0x0, 0x1);
        gbc.writeMem(0x7d43, { 0xf3 });
        gbc.writeMem(0xa381, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd510, gbc.sp());
        EXPECT(0xa383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa381));
        EXPECT(0xce, gbc.readMem(0xa382));
        // CB CE 02BB
        gbc.setState(0x2846, 0x2998, 0x2430, 0xe0be, 0xd6f0, 0xe4e4, 0x0, 0x1);
        gbc.writeMem(0x2846, { 0xcb, 0xce });
        gbc.writeMem(0xe4e4, { 0x8 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2998, gbc.sp());
        EXPECT(0x2848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xe4e4));
        // CB CE 02BC
        gbc.setState(0x5143, 0x5d82, 0xa8a0, 0x123b, 0xafb4, 0x8034, 0x0, 0x1);
        gbc.writeMem(0x5143, { 0xcb, 0xce });
        gbc.writeMem(0x8034, { 0x44 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5d82, gbc.sp());
        EXPECT(0x5145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x8034));
        // CB CE 02BD
        gbc.setState(0x8a6b, 0x7b81, 0xa6a0, 0x44c7, 0xa40c, 0x6415, 0x1, 0x1);
        gbc.writeMem(0x6415, { 0xcf });
        gbc.writeMem(0x8a6b, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7b81, gbc.sp());
        EXPECT(0x8a6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a6b));
        EXPECT(0xce, gbc.readMem(0x8a6c));
        // CB CE 02BE
        gbc.setState(0x9ca3, 0x6ec4, 0x6650, 0x8499, 0x59b6, 0xca6c, 0x1, 0x1);
        gbc.writeMem(0x9ca3, { 0xcb, 0xce });
        gbc.writeMem(0xca6c, { 0x7d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6ec4, gbc.sp());
        EXPECT(0x9ca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ca3));
        EXPECT(0xce, gbc.readMem(0x9ca4));
        EXPECT(0x7f, gbc.readMem(0xca6c));
        // CB CE 02BF
        gbc.setState(0xeed2, 0x9826, 0x8bf0, 0xb3d9, 0xf3aa, 0x1536, 0x1, 0x0);
        gbc.writeMem(0x1536, { 0x6a });
        gbc.writeMem(0xeed2, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9826, gbc.sp());
        EXPECT(0xeed4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeed2));
        EXPECT(0xce, gbc.readMem(0xeed3));
        // CB CE 02C1
        gbc.setState(0x15e7, 0xaac1, 0xb700, 0x388, 0x33b, 0x98b1, 0x1, 0x1);
        gbc.writeMem(0x15e7, { 0xcb, 0xce });
        gbc.writeMem(0x98b1, { 0x83 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xaac1, gbc.sp());
        EXPECT(0x15e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x98b1));
        // CB CE 02C2
        gbc.setState(0xc05b, 0x5492, 0x3960, 0xe36a, 0xd5ab, 0xc119, 0x0, 0x0);
        gbc.writeMem(0xc05b, { 0xcb, 0xce });
        gbc.writeMem(0xc119, { 0xc1 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5492, gbc.sp());
        EXPECT(0xc05d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc05b));
        EXPECT(0xce, gbc.readMem(0xc05c));
        EXPECT(0xc3, gbc.readMem(0xc119));
        // CB CE 02C3
        gbc.setState(0xadb9, 0x8224, 0xeef0, 0x8e78, 0xd28e, 0xde20, 0x0, 0x0);
        gbc.writeMem(0xadb9, { 0xcb, 0xce });
        gbc.writeMem(0xde20, { 0xa6 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8224, gbc.sp());
        EXPECT(0xadbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadb9));
        EXPECT(0xce, gbc.readMem(0xadba));
        EXPECT(0xa6, gbc.readMem(0xde20));
        // CB CE 02C5
        gbc.setState(0x8b76, 0x21da, 0xb230, 0xb8e4, 0xdaf6, 0x4c18, 0x1, 0x0);
        gbc.writeMem(0x4c18, { 0xea });
        gbc.writeMem(0x8b76, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x21da, gbc.sp());
        EXPECT(0x8b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b76));
        EXPECT(0xce, gbc.readMem(0x8b77));
        // CB CE 02C6
        gbc.setState(0x22ff, 0x81a4, 0x3630, 0xaab, 0x1f19, 0x4f15, 0x1, 0x1);
        gbc.writeMem(0x22ff, { 0xcb, 0xce });
        gbc.writeMem(0x4f15, { 0x43 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x81a4, gbc.sp());
        EXPECT(0x2301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 02C7
        gbc.setState(0x395d, 0x5f60, 0xe560, 0x3cee, 0xfdf8, 0xca2f, 0x1, 0x1);
        gbc.writeMem(0x395d, { 0xcb, 0xce });
        gbc.writeMem(0xca2f, { 0x8a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5f60, gbc.sp());
        EXPECT(0x395f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xca2f));
        // CB CE 02C8
        gbc.setState(0xd8d3, 0xbb7b, 0x5fa0, 0xce3f, 0xe245, 0xf659, 0x0, 0x1);
        gbc.writeMem(0xd8d3, { 0xcb, 0xce });
        gbc.writeMem(0xf659, { 0x5e });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbb7b, gbc.sp());
        EXPECT(0xd8d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8d3));
        EXPECT(0xce, gbc.readMem(0xd8d4));
        EXPECT(0x5e, gbc.readMem(0xf659));
        // CB CE 02C9
        gbc.setState(0xdb7b, 0x8b6b, 0xd410, 0x68ad, 0xe29f, 0xed9c, 0x1, 0x0);
        gbc.writeMem(0xdb7b, { 0xcb, 0xce });
        gbc.writeMem(0xed9c, { 0xa2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8b6b, gbc.sp());
        EXPECT(0xdb7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb7b));
        EXPECT(0xce, gbc.readMem(0xdb7c));
        EXPECT(0xa2, gbc.readMem(0xed9c));
        // CB CE 02CA
        gbc.setState(0x49e1, 0x7e4b, 0x3540, 0xe715, 0x18ca, 0x7fd4, 0x1, 0x1);
        gbc.writeMem(0x49e1, { 0xcb, 0xce });
        gbc.writeMem(0x7fd4, { 0xca });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7e4b, gbc.sp());
        EXPECT(0x49e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 02CB
        gbc.setState(0x45f4, 0xfaa5, 0x24f0, 0x26ae, 0xd97c, 0xc455, 0x1, 0x1);
        gbc.writeMem(0x45f4, { 0xcb, 0xce });
        gbc.writeMem(0xc455, { 0x68 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xfaa5, gbc.sp());
        EXPECT(0x45f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xc455));
        // CB CE 02CE
        gbc.setState(0x379b, 0x1cbe, 0x3f90, 0x4763, 0x1679, 0xfd7f, 0x0, 0x1);
        gbc.writeMem(0x379b, { 0xcb, 0xce });
        gbc.writeMem(0xfd7f, { 0x10 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1cbe, gbc.sp());
        EXPECT(0x379d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xfd7f));
        // CB CE 02CF
        gbc.setState(0x5c7a, 0x52ba, 0x6f50, 0x5913, 0xd4bc, 0xfee3, 0x0, 0x1);
        gbc.writeMem(0x5c7a, { 0xcb, 0xce });
        gbc.writeMem(0xfee3, { 0xe2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x52ba, gbc.sp());
        EXPECT(0x5c7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xfee3));
        // CB CE 02D0
        gbc.setState(0x828a, 0xda91, 0x3640, 0x93c6, 0xe05b, 0xf9e2, 0x1, 0x1);
        gbc.writeMem(0x828a, { 0xcb, 0xce });
        gbc.writeMem(0xf9e2, { 0xf2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xda91, gbc.sp());
        EXPECT(0x828c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x828a));
        EXPECT(0xce, gbc.readMem(0x828b));
        EXPECT(0xf2, gbc.readMem(0xf9e2));
        // CB CE 02D1
        gbc.setState(0x6a6, 0x2109, 0x3430, 0x8d94, 0xc1b0, 0x8b7a, 0x1, 0x0);
        gbc.writeMem(0x6a6, { 0xcb, 0xce });
        gbc.writeMem(0x8b7a, { 0x66 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2109, gbc.sp());
        EXPECT(0x6a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8b7a));
        // CB CE 02D2
        gbc.setState(0xc4a8, 0xb9a2, 0x300, 0xaf6b, 0xf3d0, 0xe1de, 0x1, 0x0);
        gbc.writeMem(0xc4a8, { 0xcb, 0xce });
        gbc.writeMem(0xe1de, { 0x46 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb9a2, gbc.sp());
        EXPECT(0xc4aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4a8));
        EXPECT(0xce, gbc.readMem(0xc4a9));
        EXPECT(0x46, gbc.readMem(0xe1de));
        // CB CE 02D4
        gbc.setState(0x8dbf, 0x1a57, 0x1a80, 0x6f95, 0x4b1e, 0x1e74, 0x1, 0x0);
        gbc.writeMem(0x1e74, { 0x8b });
        gbc.writeMem(0x8dbf, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1a57, gbc.sp());
        EXPECT(0x8dc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dbf));
        EXPECT(0xce, gbc.readMem(0x8dc0));
        // CB CE 02D5
        gbc.setState(0xb7d2, 0x309f, 0xd500, 0x1a33, 0x4cc8, 0x8715, 0x0, 0x1);
        gbc.writeMem(0x8715, { 0x60 });
        gbc.writeMem(0xb7d2, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x309f, gbc.sp());
        EXPECT(0xb7d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0x8715));
        EXPECT(0xcb, gbc.readMem(0xb7d2));
        EXPECT(0xce, gbc.readMem(0xb7d3));
        // CB CE 02D7
        gbc.setState(0xc2ee, 0x3caa, 0xdc80, 0xad0e, 0xc64d, 0x99ba, 0x0, 0x0);
        gbc.writeMem(0x99ba, { 0xf0 });
        gbc.writeMem(0xc2ee, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3caa, gbc.sp());
        EXPECT(0xc2f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x99ba));
        EXPECT(0xcb, gbc.readMem(0xc2ee));
        EXPECT(0xce, gbc.readMem(0xc2ef));
        // CB CE 02D9
        gbc.setState(0x8fd2, 0x7696, 0x4640, 0xf4fa, 0x2f47, 0xaf45, 0x1, 0x1);
        gbc.writeMem(0x8fd2, { 0xcb, 0xce });
        gbc.writeMem(0xaf45, { 0xdf });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7696, gbc.sp());
        EXPECT(0x8fd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fd2));
        EXPECT(0xce, gbc.readMem(0x8fd3));
        EXPECT(0xdf, gbc.readMem(0xaf45));
        // CB CE 02DA
        gbc.setState(0x6dbe, 0x2c28, 0x4770, 0xaf51, 0xebee, 0x9bbf, 0x1, 0x0);
        gbc.writeMem(0x6dbe, { 0xcb, 0xce });
        gbc.writeMem(0x9bbf, { 0x34 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2c28, gbc.sp());
        EXPECT(0x6dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x9bbf));
        // CB CE 02DB
        gbc.setState(0x5544, 0x78c9, 0xb510, 0x8a08, 0xe1a3, 0x519e, 0x1, 0x0);
        gbc.writeMem(0x519e, { 0x23 });
        gbc.writeMem(0x5544, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x78c9, gbc.sp());
        EXPECT(0x5546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 02DC
        gbc.setState(0xcbb2, 0x9bef, 0xdb50, 0x5b96, 0xc095, 0x2b30, 0x1, 0x0);
        gbc.writeMem(0x2b30, { 0x7b });
        gbc.writeMem(0xcbb2, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9bef, gbc.sp());
        EXPECT(0xcbb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb2));
        EXPECT(0xce, gbc.readMem(0xcbb3));
        // CB CE 02DD
        gbc.setState(0xa644, 0x6883, 0xb270, 0x26da, 0xc4a7, 0xf29c, 0x0, 0x0);
        gbc.writeMem(0xa644, { 0xcb, 0xce });
        gbc.writeMem(0xf29c, { 0x79 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6883, gbc.sp());
        EXPECT(0xa646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa644));
        EXPECT(0xce, gbc.readMem(0xa645));
        EXPECT(0x7b, gbc.readMem(0xf29c));
        // CB CE 02DE
        gbc.setState(0x726, 0xaac5, 0xd5b0, 0x116d, 0x582b, 0xf4d2, 0x0, 0x0);
        gbc.writeMem(0x726, { 0xcb, 0xce });
        gbc.writeMem(0xf4d2, { 0xe7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xaac5, gbc.sp());
        EXPECT(0x728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xf4d2));
        // CB CE 02DF
        gbc.setState(0x22a5, 0xf3c4, 0x89f0, 0xc0b0, 0xc3d4, 0xe9da, 0x0, 0x0);
        gbc.writeMem(0x22a5, { 0xcb, 0xce });
        gbc.writeMem(0xe9da, { 0xb7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf3c4, gbc.sp());
        EXPECT(0x22a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe9da));
        // CB CE 02E0
        gbc.setState(0x14af, 0x8f11, 0xcd0, 0xede4, 0x63cc, 0xb59, 0x1, 0x0);
        gbc.writeMem(0xb59, { 0x3 });
        gbc.writeMem(0x14af, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8f11, gbc.sp());
        EXPECT(0x14b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 02E2
        gbc.setState(0xea21, 0x3f6a, 0x8640, 0x7933, 0x4350, 0xbcb7, 0x1, 0x1);
        gbc.writeMem(0xbcb7, { 0x6a });
        gbc.writeMem(0xea21, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3f6a, gbc.sp());
        EXPECT(0xea23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xbcb7));
        EXPECT(0xcb, gbc.readMem(0xea21));
        EXPECT(0xce, gbc.readMem(0xea22));
        // CB CE 02E3
        gbc.setState(0x55d1, 0xb97b, 0x9a30, 0x1120, 0xab8e, 0x430b, 0x1, 0x1);
        gbc.writeMem(0x430b, { 0xa7 });
        gbc.writeMem(0x55d1, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb97b, gbc.sp());
        EXPECT(0x55d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 02E4
        gbc.setState(0xc493, 0x930a, 0x8c90, 0xdb8e, 0xed93, 0x8729, 0x0, 0x0);
        gbc.writeMem(0x8729, { 0x45 });
        gbc.writeMem(0xc493, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x930a, gbc.sp());
        EXPECT(0xc495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8729));
        EXPECT(0xcb, gbc.readMem(0xc493));
        EXPECT(0xce, gbc.readMem(0xc494));
        // CB CE 02E5
        gbc.setState(0xd8ad, 0x65ff, 0x9700, 0x830c, 0x4570, 0xb5b3, 0x0, 0x0);
        gbc.writeMem(0xb5b3, { 0x3d });
        gbc.writeMem(0xd8ad, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x65ff, gbc.sp());
        EXPECT(0xd8af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb5b3));
        EXPECT(0xcb, gbc.readMem(0xd8ad));
        EXPECT(0xce, gbc.readMem(0xd8ae));
        // CB CE 02E8
        gbc.setState(0xa202, 0xe354, 0xdcc0, 0xfc5d, 0x8a2b, 0xc821, 0x1, 0x1);
        gbc.writeMem(0xa202, { 0xcb, 0xce });
        gbc.writeMem(0xc821, { 0xf4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe354, gbc.sp());
        EXPECT(0xa204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa202));
        EXPECT(0xce, gbc.readMem(0xa203));
        EXPECT(0xf6, gbc.readMem(0xc821));
        // CB CE 02E9
        gbc.setState(0x4cff, 0x5c93, 0x2910, 0x9a85, 0xb4ca, 0xe388, 0x1, 0x1);
        gbc.writeMem(0x4cff, { 0xcb, 0xce });
        gbc.writeMem(0xe388, { 0x49 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5c93, gbc.sp());
        EXPECT(0x4d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe388));
        // CB CE 02EA
        gbc.setState(0xe8dd, 0x94b6, 0x4e00, 0x2b6b, 0x32e1, 0xd67d, 0x1, 0x1);
        gbc.writeMem(0xd67d, { 0x61 });
        gbc.writeMem(0xe8dd, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x94b6, gbc.sp());
        EXPECT(0xe8df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xd67d));
        EXPECT(0xcb, gbc.readMem(0xe8dd));
        EXPECT(0xce, gbc.readMem(0xe8de));
        // CB CE 02EB
        gbc.setState(0x1692, 0xd2a4, 0x1f40, 0x4b3c, 0x34cd, 0x9a5e, 0x0, 0x1);
        gbc.writeMem(0x1692, { 0xcb, 0xce });
        gbc.writeMem(0x9a5e, { 0x9f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd2a4, gbc.sp());
        EXPECT(0x1694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9a5e));
        // CB CE 02EE
        gbc.setState(0xc041, 0x3170, 0x6d20, 0x9ead, 0x23c4, 0x38cf, 0x1, 0x1);
        gbc.writeMem(0x38cf, { 0xe6 });
        gbc.writeMem(0xc041, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3170, gbc.sp());
        EXPECT(0xc043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc041));
        EXPECT(0xce, gbc.readMem(0xc042));
        // CB CE 02EF
        gbc.setState(0x7257, 0x5aae, 0x7230, 0x2b7f, 0x39b6, 0x8edc, 0x0, 0x1);
        gbc.writeMem(0x7257, { 0xcb, 0xce });
        gbc.writeMem(0x8edc, { 0xd1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5aae, gbc.sp());
        EXPECT(0x7259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0x8edc));
        // CB CE 02F1
        gbc.setState(0xb899, 0xaced, 0x7390, 0x59d4, 0x8292, 0xa290, 0x0, 0x1);
        gbc.writeMem(0xa290, { 0xf6 });
        gbc.writeMem(0xb899, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xaced, gbc.sp());
        EXPECT(0xb89b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xa290));
        EXPECT(0xcb, gbc.readMem(0xb899));
        EXPECT(0xce, gbc.readMem(0xb89a));
        // CB CE 02F2
        gbc.setState(0x1375, 0x534a, 0x78a0, 0xe094, 0x5293, 0xa5b2, 0x0, 0x0);
        gbc.writeMem(0x1375, { 0xcb, 0xce });
        gbc.writeMem(0xa5b2, { 0xce });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x534a, gbc.sp());
        EXPECT(0x1377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xa5b2));
        // CB CE 02F3
        gbc.setState(0x9a1e, 0x2fce, 0x3ce0, 0x2231, 0x8960, 0xd8a3, 0x0, 0x1);
        gbc.writeMem(0x9a1e, { 0xcb, 0xce });
        gbc.writeMem(0xd8a3, { 0xc7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2fce, gbc.sp());
        EXPECT(0x9a20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a1e));
        EXPECT(0xce, gbc.readMem(0x9a1f));
        EXPECT(0xc7, gbc.readMem(0xd8a3));
        // CB CE 02F6
        gbc.setState(0xaa7c, 0x2ae7, 0xd710, 0xb8d4, 0x226d, 0x8e85, 0x1, 0x0);
        gbc.writeMem(0x8e85, { 0x9 });
        gbc.writeMem(0xaa7c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2ae7, gbc.sp());
        EXPECT(0xaa7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8e85));
        EXPECT(0xcb, gbc.readMem(0xaa7c));
        EXPECT(0xce, gbc.readMem(0xaa7d));
        // CB CE 02F8
        gbc.setState(0x8c63, 0x1604, 0x8a80, 0xb1b, 0xfe95, 0x67cf, 0x1, 0x0);
        gbc.writeMem(0x67cf, { 0x1e });
        gbc.writeMem(0x8c63, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1604, gbc.sp());
        EXPECT(0x8c65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c63));
        EXPECT(0xce, gbc.readMem(0x8c64));
        // CB CE 02F9
        gbc.setState(0x5cd7, 0x44ee, 0x6ca0, 0x567f, 0xd5dd, 0xd137, 0x1, 0x0);
        gbc.writeMem(0x5cd7, { 0xcb, 0xce });
        gbc.writeMem(0xd137, { 0xc9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x44ee, gbc.sp());
        EXPECT(0x5cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd137));
        // CB CE 02FB
        gbc.setState(0x40c3, 0xd7c8, 0xb0d0, 0x3591, 0x1cb4, 0xbcd0, 0x0, 0x0);
        gbc.writeMem(0x40c3, { 0xcb, 0xce });
        gbc.writeMem(0xbcd0, { 0x15 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd7c8, gbc.sp());
        EXPECT(0x40c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xbcd0));
        // CB CE 02FC
        gbc.setState(0xcbd, 0xc849, 0x820, 0x8acf, 0xb6d2, 0x9b81, 0x1, 0x1);
        gbc.writeMem(0xcbd, { 0xcb, 0xce });
        gbc.writeMem(0x9b81, { 0x96 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc849, gbc.sp());
        EXPECT(0xcbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x9b81));
        // CB CE 02FF
        gbc.setState(0xd7bf, 0xcf43, 0xcc10, 0x9d22, 0x6b45, 0xae82, 0x0, 0x1);
        gbc.writeMem(0xae82, { 0x35 });
        gbc.writeMem(0xd7bf, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcf43, gbc.sp());
        EXPECT(0xd7c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xae82));
        EXPECT(0xcb, gbc.readMem(0xd7bf));
        EXPECT(0xce, gbc.readMem(0xd7c0));
        // CB CE 0300
        gbc.setState(0x4618, 0xe91f, 0xcd70, 0xc150, 0x27c6, 0x653b, 0x1, 0x1);
        gbc.writeMem(0x4618, { 0xcb, 0xce });
        gbc.writeMem(0x653b, { 0x12 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe91f, gbc.sp());
        EXPECT(0x461a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 0301
        gbc.setState(0xb394, 0x8b91, 0x1330, 0x90a7, 0xbe34, 0xfb5a, 0x1, 0x0);
        gbc.writeMem(0xb394, { 0xcb, 0xce });
        gbc.writeMem(0xfb5a, { 0x3e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8b91, gbc.sp());
        EXPECT(0xb396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb394));
        EXPECT(0xce, gbc.readMem(0xb395));
        EXPECT(0x3e, gbc.readMem(0xfb5a));
        // CB CE 0302
        gbc.setState(0x30c1, 0xbf38, 0xe100, 0x3b60, 0x5e46, 0xe186, 0x1, 0x1);
        gbc.writeMem(0x30c1, { 0xcb, 0xce });
        gbc.writeMem(0xe186, { 0xfd });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbf38, gbc.sp());
        EXPECT(0x30c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xe186));
        // CB CE 0303
        gbc.setState(0x1da9, 0xaf29, 0xeb00, 0xf607, 0x555b, 0x553, 0x1, 0x1);
        gbc.writeMem(0x553, { 0xfb });
        gbc.writeMem(0x1da9, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xaf29, gbc.sp());
        EXPECT(0x1dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 0304
        gbc.setState(0x2528, 0x98a9, 0xfc80, 0x3f39, 0x5118, 0x80e8, 0x0, 0x0);
        gbc.writeMem(0x2528, { 0xcb, 0xce });
        gbc.writeMem(0x80e8, { 0x47 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x98a9, gbc.sp());
        EXPECT(0x252a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x80e8));
        // CB CE 0305
        gbc.setState(0x367a, 0x991c, 0x87a0, 0xd551, 0x2654, 0x3359, 0x0, 0x0);
        gbc.writeMem(0x3359, { 0xfb });
        gbc.writeMem(0x367a, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x991c, gbc.sp());
        EXPECT(0x367c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 0306
        gbc.setState(0x1d8c, 0x5298, 0x5140, 0xa647, 0x5ee2, 0x2b50, 0x0, 0x1);
        gbc.writeMem(0x1d8c, { 0xcb, 0xce });
        gbc.writeMem(0x2b50, { 0x6b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5298, gbc.sp());
        EXPECT(0x1d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 0307
        gbc.setState(0xb96b, 0xa561, 0xca20, 0x3868, 0xce4a, 0xc51f, 0x0, 0x0);
        gbc.writeMem(0xb96b, { 0xcb, 0xce });
        gbc.writeMem(0xc51f, { 0x47 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa561, gbc.sp());
        EXPECT(0xb96d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb96b));
        EXPECT(0xce, gbc.readMem(0xb96c));
        EXPECT(0x47, gbc.readMem(0xc51f));
        // CB CE 0309
        gbc.setState(0xece3, 0xf6f5, 0xf6c0, 0xe9b2, 0xbfa2, 0xb78a, 0x1, 0x1);
        gbc.writeMem(0xb78a, { 0x20 });
        gbc.writeMem(0xece3, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf6f5, gbc.sp());
        EXPECT(0xece5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xb78a));
        EXPECT(0xcb, gbc.readMem(0xece3));
        EXPECT(0xce, gbc.readMem(0xece4));
        // CB CE 030A
        gbc.setState(0x512d, 0xdbd3, 0xc670, 0xf7d1, 0x161c, 0x246d, 0x1, 0x0);
        gbc.writeMem(0x246d, { 0xab });
        gbc.writeMem(0x512d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xdbd3, gbc.sp());
        EXPECT(0x512f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 030B
        gbc.setState(0x9f9c, 0x4280, 0x5fc0, 0xae4, 0x41e2, 0x649a, 0x1, 0x1);
        gbc.writeMem(0x649a, { 0x66 });
        gbc.writeMem(0x9f9c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4280, gbc.sp());
        EXPECT(0x9f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f9c));
        EXPECT(0xce, gbc.readMem(0x9f9d));
        // CB CE 030C
        gbc.setState(0x7863, 0x98ed, 0x8ca0, 0xaac7, 0xf617, 0x5ecf, 0x1, 0x1);
        gbc.writeMem(0x5ecf, { 0x7 });
        gbc.writeMem(0x7863, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x98ed, gbc.sp());
        EXPECT(0x7865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 030E
        gbc.setState(0x1c0c, 0x438e, 0x6260, 0x264d, 0x604e, 0x37af, 0x1, 0x1);
        gbc.writeMem(0x1c0c, { 0xcb, 0xce });
        gbc.writeMem(0x37af, { 0xab });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x438e, gbc.sp());
        EXPECT(0x1c0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 030F
        gbc.setState(0x9e34, 0x14c9, 0xea30, 0x5bba, 0xdaa, 0x91d7, 0x0, 0x1);
        gbc.writeMem(0x91d7, { 0xc5 });
        gbc.writeMem(0x9e34, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x14c9, gbc.sp());
        EXPECT(0x9e36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x91d7));
        EXPECT(0xcb, gbc.readMem(0x9e34));
        EXPECT(0xce, gbc.readMem(0x9e35));
        // CB CE 0310
        gbc.setState(0x3d14, 0xe52, 0x14f0, 0x9584, 0xbdae, 0xe257, 0x1, 0x0);
        gbc.writeMem(0x3d14, { 0xcb, 0xce });
        gbc.writeMem(0xe257, { 0x7f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe52, gbc.sp());
        EXPECT(0x3d16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xe257));
        // CB CE 0314
        gbc.setState(0xa10c, 0xbf9f, 0x5b40, 0x378b, 0x2b04, 0xdd1f, 0x0, 0x0);
        gbc.writeMem(0xa10c, { 0xcb, 0xce });
        gbc.writeMem(0xdd1f, { 0x5d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbf9f, gbc.sp());
        EXPECT(0xa10e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa10c));
        EXPECT(0xce, gbc.readMem(0xa10d));
        EXPECT(0x5f, gbc.readMem(0xdd1f));
        // CB CE 0315
        gbc.setState(0x3637, 0x5cad, 0x8340, 0xe90b, 0xb510, 0x9c32, 0x0, 0x0);
        gbc.writeMem(0x3637, { 0xcb, 0xce });
        gbc.writeMem(0x9c32, { 0x18 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5cad, gbc.sp());
        EXPECT(0x3639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9c32));
        // CB CE 0316
        gbc.setState(0xed92, 0xf7c, 0x7e60, 0x8026, 0x67e7, 0x9666, 0x1, 0x1);
        gbc.writeMem(0x9666, { 0x5b });
        gbc.writeMem(0xed92, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf7c, gbc.sp());
        EXPECT(0xed94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x9666));
        EXPECT(0xcb, gbc.readMem(0xed92));
        EXPECT(0xce, gbc.readMem(0xed93));
        // CB CE 0317
        gbc.setState(0x7fdb, 0x896f, 0xf110, 0xda14, 0x2753, 0xc469, 0x1, 0x0);
        gbc.writeMem(0x7fdb, { 0xcb, 0xce });
        gbc.writeMem(0xc469, { 0xfa });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x896f, gbc.sp());
        EXPECT(0x7fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xc469));
        // CB CE 031B
        gbc.setState(0x2587, 0x87ff, 0x7e80, 0xaba9, 0x9bd7, 0xa504, 0x0, 0x0);
        gbc.writeMem(0x2587, { 0xcb, 0xce });
        gbc.writeMem(0xa504, { 0xda });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x87ff, gbc.sp());
        EXPECT(0x2589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa504));
        // CB CE 031F
        gbc.setState(0x67d3, 0x4da, 0x56c0, 0x3a7d, 0xf9ac, 0xbd7c, 0x0, 0x1);
        gbc.writeMem(0x67d3, { 0xcb, 0xce });
        gbc.writeMem(0xbd7c, { 0x11 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4da, gbc.sp());
        EXPECT(0x67d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xbd7c));
        // CB CE 0320
        gbc.setState(0x906e, 0x60da, 0x6880, 0xa75a, 0x76c7, 0xd00, 0x0, 0x0);
        gbc.writeMem(0xd00, { 0x8e });
        gbc.writeMem(0x906e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x60da, gbc.sp());
        EXPECT(0x9070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x906e));
        EXPECT(0xce, gbc.readMem(0x906f));
        // CB CE 0321
        gbc.setState(0x86cb, 0xca2d, 0x4450, 0x3eef, 0x7bed, 0x44b, 0x1, 0x1);
        gbc.writeMem(0x44b, { 0x2a });
        gbc.writeMem(0x86cb, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xca2d, gbc.sp());
        EXPECT(0x86cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86cb));
        EXPECT(0xce, gbc.readMem(0x86cc));
        // CB CE 0322
        gbc.setState(0x647d, 0x6181, 0x55a0, 0x8615, 0xb22c, 0x9d6f, 0x1, 0x1);
        gbc.writeMem(0x647d, { 0xcb, 0xce });
        gbc.writeMem(0x9d6f, { 0x95 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6181, gbc.sp());
        EXPECT(0x647f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9d6f));
        // CB CE 0323
        gbc.setState(0x98cd, 0x8925, 0xb4f0, 0x4f69, 0x34de, 0xafdb, 0x1, 0x0);
        gbc.writeMem(0x98cd, { 0xcb, 0xce });
        gbc.writeMem(0xafdb, { 0x52 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8925, gbc.sp());
        EXPECT(0x98cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98cd));
        EXPECT(0xce, gbc.readMem(0x98ce));
        EXPECT(0x52, gbc.readMem(0xafdb));
        // CB CE 0325
        gbc.setState(0x8728, 0x9405, 0xc5f0, 0x66d4, 0x726d, 0xdbf5, 0x1, 0x1);
        gbc.writeMem(0x8728, { 0xcb, 0xce });
        gbc.writeMem(0xdbf5, { 0x50 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9405, gbc.sp());
        EXPECT(0x872a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8728));
        EXPECT(0xce, gbc.readMem(0x8729));
        EXPECT(0x52, gbc.readMem(0xdbf5));
        // CB CE 0329
        gbc.setState(0x50f3, 0x6872, 0x75d0, 0x43ac, 0xb7fa, 0x6bb4, 0x1, 0x0);
        gbc.writeMem(0x50f3, { 0xcb, 0xce });
        gbc.writeMem(0x6bb4, { 0x3b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6872, gbc.sp());
        EXPECT(0x50f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 032B
        gbc.setState(0xac5f, 0xf8ab, 0x11a0, 0xcfc8, 0x84a4, 0xc040, 0x0, 0x0);
        gbc.writeMem(0xac5f, { 0xcb, 0xce });
        gbc.writeMem(0xc040, { 0xb9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf8ab, gbc.sp());
        EXPECT(0xac61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac5f));
        EXPECT(0xce, gbc.readMem(0xac60));
        EXPECT(0xbb, gbc.readMem(0xc040));
        // CB CE 032C
        gbc.setState(0x9fec, 0xf17f, 0xec60, 0xcac, 0x7cf, 0xaf16, 0x1, 0x0);
        gbc.writeMem(0x9fec, { 0xcb, 0xce });
        gbc.writeMem(0xaf16, { 0x72 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf17f, gbc.sp());
        EXPECT(0x9fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fec));
        EXPECT(0xce, gbc.readMem(0x9fed));
        EXPECT(0x72, gbc.readMem(0xaf16));
        // CB CE 032F
        gbc.setState(0x3a23, 0xf09f, 0x110, 0x4e56, 0x61c9, 0xc800, 0x0, 0x1);
        gbc.writeMem(0x3a23, { 0xcb, 0xce });
        gbc.writeMem(0xc800, { 0x8e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf09f, gbc.sp());
        EXPECT(0x3a25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xc800));
        // CB CE 0330
        gbc.setState(0x9df2, 0x5c3b, 0x2740, 0x246d, 0xf065, 0xf700, 0x1, 0x0);
        gbc.writeMem(0x9df2, { 0xcb, 0xce });
        gbc.writeMem(0xf700, { 0x61 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5c3b, gbc.sp());
        EXPECT(0x9df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9df2));
        EXPECT(0xce, gbc.readMem(0x9df3));
        EXPECT(0x63, gbc.readMem(0xf700));
        // CB CE 0331
        gbc.setState(0x22ba, 0x3684, 0x5ee0, 0xc24b, 0xdbee, 0xe618, 0x0, 0x0);
        gbc.writeMem(0x22ba, { 0xcb, 0xce });
        gbc.writeMem(0xe618, { 0x4a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3684, gbc.sp());
        EXPECT(0x22bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xe618));
        // CB CE 0332
        gbc.setState(0x7a7b, 0x6434, 0x9540, 0x46d7, 0xd565, 0xfe60, 0x0, 0x1);
        gbc.writeMem(0x7a7b, { 0xcb, 0xce });
        gbc.writeMem(0xfe60, { 0xfb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6434, gbc.sp());
        EXPECT(0x7a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xfe60));
        // CB CE 0334
        gbc.setState(0x4d3e, 0x77e1, 0x1920, 0xbafe, 0x94f5, 0x2724, 0x1, 0x0);
        gbc.writeMem(0x2724, { 0x87 });
        gbc.writeMem(0x4d3e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x77e1, gbc.sp());
        EXPECT(0x4d40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 0335
        gbc.setState(0xc6ae, 0x9306, 0x5680, 0x1305, 0xcbdd, 0xf305, 0x1, 0x0);
        gbc.writeMem(0xc6ae, { 0xcb, 0xce });
        gbc.writeMem(0xf305, { 0x6f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9306, gbc.sp());
        EXPECT(0xc6b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ae));
        EXPECT(0xce, gbc.readMem(0xc6af));
        EXPECT(0x6f, gbc.readMem(0xf305));
        // CB CE 0338
        gbc.setState(0x69fa, 0x182, 0xd970, 0xdce5, 0xb2fc, 0xe53a, 0x1, 0x1);
        gbc.writeMem(0x69fa, { 0xcb, 0xce });
        gbc.writeMem(0xe53a, { 0x25 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x182, gbc.sp());
        EXPECT(0x69fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xe53a));
        // CB CE 0339
        gbc.setState(0x6011, 0x40fe, 0xbd80, 0xa825, 0x6138, 0x882f, 0x0, 0x0);
        gbc.writeMem(0x6011, { 0xcb, 0xce });
        gbc.writeMem(0x882f, { 0x37 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x40fe, gbc.sp());
        EXPECT(0x6013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x882f));
        // CB CE 033B
        gbc.setState(0x74ed, 0x2dcc, 0x6b90, 0x73ef, 0xacf3, 0xa477, 0x1, 0x0);
        gbc.writeMem(0x74ed, { 0xcb, 0xce });
        gbc.writeMem(0xa477, { 0xdc });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2dcc, gbc.sp());
        EXPECT(0x74ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xa477));
        // CB CE 033C
        gbc.setState(0xe3e3, 0x74a1, 0xc3d0, 0xb610, 0xcc9f, 0xf5c7, 0x0, 0x1);
        gbc.writeMem(0xe3e3, { 0xcb, 0xce });
        gbc.writeMem(0xf5c7, { 0xce });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x74a1, gbc.sp());
        EXPECT(0xe3e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3e3));
        EXPECT(0xce, gbc.readMem(0xe3e4));
        EXPECT(0xce, gbc.readMem(0xf5c7));
        // CB CE 033D
        gbc.setState(0x31a8, 0x2b1b, 0x5c0, 0xd5f4, 0xc152, 0xf8e4, 0x0, 0x1);
        gbc.writeMem(0x31a8, { 0xcb, 0xce });
        gbc.writeMem(0xf8e4, { 0xa6 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2b1b, gbc.sp());
        EXPECT(0x31aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xf8e4));
        // CB CE 033E
        gbc.setState(0x986d, 0x5fee, 0xdd0, 0x524d, 0xfc76, 0xcd0c, 0x0, 0x1);
        gbc.writeMem(0x986d, { 0xcb, 0xce });
        gbc.writeMem(0xcd0c, { 0xed });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5fee, gbc.sp());
        EXPECT(0x986f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x986d));
        EXPECT(0xce, gbc.readMem(0x986e));
        EXPECT(0xef, gbc.readMem(0xcd0c));
        // CB CE 033F
        gbc.setState(0xd112, 0xeab9, 0xdce0, 0x96eb, 0x2b2, 0x4ae3, 0x0, 0x1);
        gbc.writeMem(0x4ae3, { 0x6e });
        gbc.writeMem(0xd112, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xeab9, gbc.sp());
        EXPECT(0xd114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd112));
        EXPECT(0xce, gbc.readMem(0xd113));
        // CB CE 0340
        gbc.setState(0x5e1f, 0xa037, 0x9010, 0x8bf4, 0x538d, 0xfab1, 0x1, 0x0);
        gbc.writeMem(0x5e1f, { 0xcb, 0xce });
        gbc.writeMem(0xfab1, { 0xc5 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa037, gbc.sp());
        EXPECT(0x5e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xfab1));
        // CB CE 0341
        gbc.setState(0xcc04, 0xa4f3, 0x8b60, 0x5a3d, 0xea23, 0xded2, 0x0, 0x1);
        gbc.writeMem(0xcc04, { 0xcb, 0xce });
        gbc.writeMem(0xded2, { 0xc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa4f3, gbc.sp());
        EXPECT(0xcc06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc04));
        EXPECT(0xce, gbc.readMem(0xcc05));
        EXPECT(0xe, gbc.readMem(0xded2));
        // CB CE 0342
        gbc.setState(0x6835, 0xa41b, 0x8900, 0xfa11, 0x70d1, 0x4f5d, 0x1, 0x0);
        gbc.writeMem(0x4f5d, { 0x4b });
        gbc.writeMem(0x6835, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa41b, gbc.sp());
        EXPECT(0x6837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 0345
        gbc.setState(0xaff0, 0xb337, 0xa2d0, 0xbbf2, 0xfad9, 0xb64c, 0x0, 0x1);
        gbc.writeMem(0xaff0, { 0xcb, 0xce });
        gbc.writeMem(0xb64c, { 0x13 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb337, gbc.sp());
        EXPECT(0xaff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff0));
        EXPECT(0xce, gbc.readMem(0xaff1));
        EXPECT(0x13, gbc.readMem(0xb64c));
        // CB CE 0346
        gbc.setState(0x8e, 0x120d, 0x680, 0xcb50, 0x2b04, 0xddde, 0x1, 0x1);
        gbc.writeMem(0x8e, { 0xcb, 0xce });
        gbc.writeMem(0xddde, { 0xce });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x120d, gbc.sp());
        EXPECT(0x90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xddde));
        // CB CE 0347
        gbc.setState(0x761a, 0xda43, 0x3120, 0x7393, 0x3b92, 0xcbdb, 0x1, 0x0);
        gbc.writeMem(0x761a, { 0xcb, 0xce });
        gbc.writeMem(0xcbdb, { 0x9d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xda43, gbc.sp());
        EXPECT(0x761c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcbdb));
        // CB CE 0349
        gbc.setState(0x801a, 0x4693, 0xf1c0, 0xccc0, 0xa67a, 0xc8b8, 0x1, 0x0);
        gbc.writeMem(0x801a, { 0xcb, 0xce });
        gbc.writeMem(0xc8b8, { 0x98 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4693, gbc.sp());
        EXPECT(0x801c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x801a));
        EXPECT(0xce, gbc.readMem(0x801b));
        EXPECT(0x9a, gbc.readMem(0xc8b8));
        // CB CE 034A
        gbc.setState(0x255d, 0x91f6, 0x8940, 0x5655, 0x66, 0xe163, 0x1, 0x0);
        gbc.writeMem(0x255d, { 0xcb, 0xce });
        gbc.writeMem(0xe163, { 0x21 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x91f6, gbc.sp());
        EXPECT(0x255f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xe163));
        // CB CE 034B
        gbc.setState(0xd721, 0xa326, 0xcf70, 0xf02b, 0xb2d, 0x4c37, 0x1, 0x1);
        gbc.writeMem(0x4c37, { 0xb6 });
        gbc.writeMem(0xd721, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa326, gbc.sp());
        EXPECT(0xd723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd721));
        EXPECT(0xce, gbc.readMem(0xd722));
        // CB CE 034C
        gbc.setState(0x7015, 0x386e, 0x3ef0, 0xb7c9, 0x28a8, 0x77ac, 0x0, 0x1);
        gbc.writeMem(0x7015, { 0xcb, 0xce });
        gbc.writeMem(0x77ac, { 0x92 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x386e, gbc.sp());
        EXPECT(0x7017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 0350
        gbc.setState(0xed92, 0x995e, 0x4b0, 0xe4b3, 0xb885, 0x1a7b, 0x0, 0x1);
        gbc.writeMem(0x1a7b, { 0x5e });
        gbc.writeMem(0xed92, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x995e, gbc.sp());
        EXPECT(0xed94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed92));
        EXPECT(0xce, gbc.readMem(0xed93));
        // CB CE 0353
        gbc.setState(0x47e9, 0xaaca, 0x48a0, 0x2047, 0x50bd, 0x41e7, 0x0, 0x1);
        gbc.writeMem(0x41e7, { 0xa6 });
        gbc.writeMem(0x47e9, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xaaca, gbc.sp());
        EXPECT(0x47eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 0357
        gbc.setState(0xed92, 0x2dbc, 0x7180, 0x524b, 0x7f23, 0x82c6, 0x1, 0x1);
        gbc.writeMem(0x82c6, { 0x84 });
        gbc.writeMem(0xed92, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2dbc, gbc.sp());
        EXPECT(0xed94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x82c6));
        EXPECT(0xcb, gbc.readMem(0xed92));
        EXPECT(0xce, gbc.readMem(0xed93));
        // CB CE 0358
        gbc.setState(0x11b1, 0xc53, 0x1710, 0xe92, 0x980a, 0xeb19, 0x1, 0x0);
        gbc.writeMem(0x11b1, { 0xcb, 0xce });
        gbc.writeMem(0xeb19, { 0xb4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc53, gbc.sp());
        EXPECT(0x11b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xeb19));
        // CB CE 0359
        gbc.setState(0x9594, 0x7134, 0x9ad0, 0x1caf, 0x2521, 0x8a99, 0x1, 0x1);
        gbc.writeMem(0x8a99, { 0xf7 });
        gbc.writeMem(0x9594, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7134, gbc.sp());
        EXPECT(0x9596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8a99));
        EXPECT(0xcb, gbc.readMem(0x9594));
        EXPECT(0xce, gbc.readMem(0x9595));
        // CB CE 035A
        gbc.setState(0x7a47, 0xad9d, 0x99d0, 0x3664, 0x7f8c, 0xdd22, 0x1, 0x0);
        gbc.writeMem(0x7a47, { 0xcb, 0xce });
        gbc.writeMem(0xdd22, { 0x4f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xad9d, gbc.sp());
        EXPECT(0x7a49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xdd22));
        // CB CE 035C
        gbc.setState(0x9fff, 0xb9d8, 0xbec0, 0xe46, 0x1e8f, 0xa32e, 0x1, 0x1);
        gbc.writeMem(0x9fff, { 0xcb, 0xce });
        gbc.writeMem(0xa32e, { 0xc6 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb9d8, gbc.sp());
        EXPECT(0xa001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fff));
        EXPECT(0xce, gbc.readMem(0xa000));
        EXPECT(0xc6, gbc.readMem(0xa32e));
        // CB CE 035E
        gbc.setState(0x3d74, 0x783, 0x2e00, 0xfcc6, 0x49a8, 0x3f2a, 0x0, 0x1);
        gbc.writeMem(0x3d74, { 0xcb, 0xce });
        gbc.writeMem(0x3f2a, { 0x56 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x783, gbc.sp());
        EXPECT(0x3d76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 035F
        gbc.setState(0x565, 0x7701, 0x8370, 0x1268, 0xb863, 0xb14d, 0x1, 0x0);
        gbc.writeMem(0x565, { 0xcb, 0xce });
        gbc.writeMem(0xb14d, { 0x9c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7701, gbc.sp());
        EXPECT(0x567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb14d));
        // CB CE 0360
        gbc.setState(0xde61, 0x7d2c, 0xccb0, 0xe446, 0x45c9, 0x196b, 0x1, 0x1);
        gbc.writeMem(0x196b, { 0x4f });
        gbc.writeMem(0xde61, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7d2c, gbc.sp());
        EXPECT(0xde63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde61));
        EXPECT(0xce, gbc.readMem(0xde62));
        // CB CE 0361
        gbc.setState(0xac5e, 0x8752, 0x2100, 0xc61e, 0xbe76, 0xb5f7, 0x1, 0x1);
        gbc.writeMem(0xac5e, { 0xcb, 0xce });
        gbc.writeMem(0xb5f7, { 0xd2 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8752, gbc.sp());
        EXPECT(0xac60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac5e));
        EXPECT(0xce, gbc.readMem(0xac5f));
        EXPECT(0xd2, gbc.readMem(0xb5f7));
        // CB CE 0362
        gbc.setState(0xa806, 0x8a8f, 0xc4d0, 0x5f35, 0xc831, 0x9fec, 0x1, 0x1);
        gbc.writeMem(0x9fec, { 0x68 });
        gbc.writeMem(0xa806, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8a8f, gbc.sp());
        EXPECT(0xa808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9fec));
        EXPECT(0xcb, gbc.readMem(0xa806));
        EXPECT(0xce, gbc.readMem(0xa807));
        // CB CE 0363
        gbc.setState(0xef4e, 0x69b6, 0x96a0, 0x79f5, 0xfdde, 0xb8bd, 0x0, 0x0);
        gbc.writeMem(0xb8bd, { 0x38 });
        gbc.writeMem(0xef4e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x69b6, gbc.sp());
        EXPECT(0xef50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xb8bd));
        EXPECT(0xcb, gbc.readMem(0xef4e));
        EXPECT(0xce, gbc.readMem(0xef4f));
        // CB CE 0364
        gbc.setState(0xa2d4, 0xd6e5, 0x4c20, 0xa091, 0x53c6, 0xa2e3, 0x1, 0x1);
        gbc.writeMem(0xa2d4, { 0xcb, 0xce });
        gbc.writeMem(0xa2e3, { 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd6e5, gbc.sp());
        EXPECT(0xa2d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d4));
        EXPECT(0xce, gbc.readMem(0xa2d5));
        EXPECT(0x2, gbc.readMem(0xa2e3));
        // CB CE 0365
        gbc.setState(0x6c92, 0x8027, 0xc160, 0xfd27, 0xf842, 0xf418, 0x0, 0x0);
        gbc.writeMem(0x6c92, { 0xcb, 0xce });
        gbc.writeMem(0xf418, { 0xde });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8027, gbc.sp());
        EXPECT(0x6c94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xf418));
        // CB CE 0368
        gbc.setState(0xeeb, 0xb87e, 0x8c0, 0x14dd, 0xddbd, 0x6e19, 0x1, 0x0);
        gbc.writeMem(0xeeb, { 0xcb, 0xce });
        gbc.writeMem(0x6e19, { 0x1e });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb87e, gbc.sp());
        EXPECT(0xeed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 0369
        gbc.setState(0xbd6b, 0xfc26, 0x7c0, 0xa07c, 0x223d, 0xe4ce, 0x0, 0x0);
        gbc.writeMem(0xbd6b, { 0xcb, 0xce });
        gbc.writeMem(0xe4ce, { 0x52 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xfc26, gbc.sp());
        EXPECT(0xbd6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd6b));
        EXPECT(0xce, gbc.readMem(0xbd6c));
        EXPECT(0x52, gbc.readMem(0xe4ce));
        // CB CE 036A
        gbc.setState(0x2199, 0xfcc8, 0x4310, 0xb770, 0xaa9c, 0xa3cb, 0x1, 0x0);
        gbc.writeMem(0x2199, { 0xcb, 0xce });
        gbc.writeMem(0xa3cb, { 0x6b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xfcc8, gbc.sp());
        EXPECT(0x219b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xa3cb));
        // CB CE 036B
        gbc.setState(0xa124, 0x6cbd, 0xa620, 0xc094, 0x70e2, 0xd657, 0x1, 0x0);
        gbc.writeMem(0xa124, { 0xcb, 0xce });
        gbc.writeMem(0xd657, { 0x96 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6cbd, gbc.sp());
        EXPECT(0xa126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa124));
        EXPECT(0xce, gbc.readMem(0xa125));
        EXPECT(0x96, gbc.readMem(0xd657));
        // CB CE 036C
        gbc.setState(0xc086, 0x88bf, 0x73b0, 0xd8ff, 0xe97d, 0xbb55, 0x1, 0x1);
        gbc.writeMem(0xbb55, { 0x2d });
        gbc.writeMem(0xc086, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x88bf, gbc.sp());
        EXPECT(0xc088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xbb55));
        EXPECT(0xcb, gbc.readMem(0xc086));
        EXPECT(0xce, gbc.readMem(0xc087));
        // CB CE 036D
        gbc.setState(0xd872, 0xd459, 0x11b0, 0xff20, 0x3435, 0x89fd, 0x0, 0x0);
        gbc.writeMem(0x89fd, { 0x8d });
        gbc.writeMem(0xd872, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd459, gbc.sp());
        EXPECT(0xd874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x89fd));
        EXPECT(0xcb, gbc.readMem(0xd872));
        EXPECT(0xce, gbc.readMem(0xd873));
        // CB CE 036E
        gbc.setState(0x3681, 0x933e, 0x4700, 0x1c9, 0xd0d7, 0xd055, 0x0, 0x1);
        gbc.writeMem(0x3681, { 0xcb, 0xce });
        gbc.writeMem(0xd055, { 0x95 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x933e, gbc.sp());
        EXPECT(0x3683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd055));
        // CB CE 036F
        gbc.setState(0x7ffb, 0x469c, 0xbcc0, 0x4522, 0xd3d0, 0xedef, 0x0, 0x0);
        gbc.writeMem(0x7ffb, { 0xcb, 0xce });
        gbc.writeMem(0xedef, { 0x3a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x469c, gbc.sp());
        EXPECT(0x7ffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xedef));
        // CB CE 0370
        gbc.setState(0xebd2, 0xa1a4, 0xd020, 0xe4, 0x45f7, 0x75ab, 0x1, 0x0);
        gbc.writeMem(0x75ab, { 0xce });
        gbc.writeMem(0xebd2, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa1a4, gbc.sp());
        EXPECT(0xebd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebd2));
        EXPECT(0xce, gbc.readMem(0xebd3));
        // CB CE 0371
        gbc.setState(0xdb26, 0xee74, 0x1a30, 0xd35c, 0xeaae, 0xd918, 0x1, 0x1);
        gbc.writeMem(0xd918, { 0x5e });
        gbc.writeMem(0xdb26, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xee74, gbc.sp());
        EXPECT(0xdb28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd918));
        EXPECT(0xcb, gbc.readMem(0xdb26));
        EXPECT(0xce, gbc.readMem(0xdb27));
        // CB CE 0372
        gbc.setState(0x92ba, 0xfe53, 0x9750, 0x2dc4, 0x2598, 0xde1, 0x0, 0x0);
        gbc.writeMem(0xde1, { 0x2 });
        gbc.writeMem(0x92ba, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xfe53, gbc.sp());
        EXPECT(0x92bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ba));
        EXPECT(0xce, gbc.readMem(0x92bb));
        // CB CE 0375
        gbc.setState(0x72f5, 0xfd30, 0x6fb0, 0x57d0, 0xb116, 0xf245, 0x0, 0x0);
        gbc.writeMem(0x72f5, { 0xcb, 0xce });
        gbc.writeMem(0xf245, { 0xc2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfd30, gbc.sp());
        EXPECT(0x72f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xf245));
        // CB CE 0378
        gbc.setState(0x2a9e, 0xa16d, 0x91e0, 0xb085, 0x51fc, 0x1e53, 0x1, 0x0);
        gbc.writeMem(0x1e53, { 0xda });
        gbc.writeMem(0x2a9e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa16d, gbc.sp());
        EXPECT(0x2aa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 0379
        gbc.setState(0x5b01, 0xd5e5, 0x4350, 0x8908, 0x319f, 0xc4ce, 0x0, 0x0);
        gbc.writeMem(0x5b01, { 0xcb, 0xce });
        gbc.writeMem(0xc4ce, { 0xed });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd5e5, gbc.sp());
        EXPECT(0x5b03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xc4ce));
        // CB CE 037B
        gbc.setState(0x185, 0xeda5, 0x5d0, 0xa824, 0xc0a2, 0xa5d3, 0x0, 0x1);
        gbc.writeMem(0x185, { 0xcb, 0xce });
        gbc.writeMem(0xa5d3, { 0xd8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xeda5, gbc.sp());
        EXPECT(0x187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa5d3));
        // CB CE 037C
        gbc.setState(0x48d5, 0x926d, 0x7a30, 0x9be6, 0x21eb, 0x6179, 0x0, 0x0);
        gbc.writeMem(0x48d5, { 0xcb, 0xce });
        gbc.writeMem(0x6179, { 0x23 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x926d, gbc.sp());
        EXPECT(0x48d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 037E
        gbc.setState(0x3ddf, 0x216, 0xaad0, 0xb3bd, 0x906e, 0xc8c1, 0x0, 0x1);
        gbc.writeMem(0x3ddf, { 0xcb, 0xce });
        gbc.writeMem(0xc8c1, { 0x50 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x216, gbc.sp());
        EXPECT(0x3de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc8c1));
        // CB CE 037F
        gbc.setState(0x8493, 0xec41, 0x35b0, 0x4b03, 0xaf76, 0xa892, 0x1, 0x0);
        gbc.writeMem(0x8493, { 0xcb, 0xce });
        gbc.writeMem(0xa892, { 0x5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xec41, gbc.sp());
        EXPECT(0x8495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8493));
        EXPECT(0xce, gbc.readMem(0x8494));
        EXPECT(0x7, gbc.readMem(0xa892));
        // CB CE 0380
        gbc.setState(0x6ffc, 0xbf5e, 0xe270, 0xd0cd, 0x589b, 0x4c5e, 0x0, 0x1);
        gbc.writeMem(0x4c5e, { 0xff });
        gbc.writeMem(0x6ffc, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbf5e, gbc.sp());
        EXPECT(0x6ffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 0381
        gbc.setState(0x34b4, 0xed7, 0xf680, 0xee91, 0x719, 0xd2d4, 0x1, 0x1);
        gbc.writeMem(0x34b4, { 0xcb, 0xce });
        gbc.writeMem(0xd2d4, { 0xdf });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xed7, gbc.sp());
        EXPECT(0x34b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xd2d4));
        // CB CE 0382
        gbc.setState(0x6d6c, 0x1a6f, 0x3ca0, 0x8311, 0x54a6, 0xe5a1, 0x0, 0x1);
        gbc.writeMem(0x6d6c, { 0xcb, 0xce });
        gbc.writeMem(0xe5a1, { 0x78 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1a6f, gbc.sp());
        EXPECT(0x6d6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe5a1));
        // CB CE 0383
        gbc.setState(0x5129, 0x7af6, 0x7e90, 0x1f60, 0xcf1e, 0xdee4, 0x0, 0x1);
        gbc.writeMem(0x5129, { 0xcb, 0xce });
        gbc.writeMem(0xdee4, { 0x43 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7af6, gbc.sp());
        EXPECT(0x512b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xdee4));
        // CB CE 0384
        gbc.setState(0xc558, 0xecb3, 0xaeb0, 0x774f, 0x675d, 0xde72, 0x0, 0x0);
        gbc.writeMem(0xc558, { 0xcb, 0xce });
        gbc.writeMem(0xde72, { 0xc1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xecb3, gbc.sp());
        EXPECT(0xc55a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc558));
        EXPECT(0xce, gbc.readMem(0xc559));
        EXPECT(0xc3, gbc.readMem(0xde72));
        // CB CE 0385
        gbc.setState(0xa92e, 0x3595, 0xc7b0, 0x6395, 0xcd1f, 0xb599, 0x0, 0x0);
        gbc.writeMem(0xa92e, { 0xcb, 0xce });
        gbc.writeMem(0xb599, { 0xa1 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3595, gbc.sp());
        EXPECT(0xa930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa92e));
        EXPECT(0xce, gbc.readMem(0xa92f));
        EXPECT(0xa3, gbc.readMem(0xb599));
        // CB CE 0386
        gbc.setState(0x7fac, 0x5759, 0xbcd0, 0xf61c, 0xae18, 0x9bb5, 0x0, 0x1);
        gbc.writeMem(0x7fac, { 0xcb, 0xce });
        gbc.writeMem(0x9bb5, { 0x8f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5759, gbc.sp());
        EXPECT(0x7fae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9bb5));
        // CB CE 0387
        gbc.setState(0x69bb, 0xfa7c, 0xc8f0, 0xbc5, 0x32b, 0xcc7f, 0x1, 0x0);
        gbc.writeMem(0x69bb, { 0xcb, 0xce });
        gbc.writeMem(0xcc7f, { 0x18 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xfa7c, gbc.sp());
        EXPECT(0x69bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xcc7f));
        // CB CE 0388
        gbc.setState(0x8c2, 0xde20, 0x6590, 0x2d03, 0x428e, 0x469f, 0x1, 0x0);
        gbc.writeMem(0x8c2, { 0xcb, 0xce });
        gbc.writeMem(0x469f, { 0x7b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xde20, gbc.sp());
        EXPECT(0x8c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 0389
        gbc.setState(0x4e22, 0xa21b, 0x6590, 0x2884, 0xa12b, 0xd30e, 0x1, 0x0);
        gbc.writeMem(0x4e22, { 0xcb, 0xce });
        gbc.writeMem(0xd30e, { 0x9e });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa21b, gbc.sp());
        EXPECT(0x4e24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd30e));
        // CB CE 038A
        gbc.setState(0x6d70, 0x7371, 0x9bb0, 0x4475, 0x95e5, 0x89c9, 0x0, 0x0);
        gbc.writeMem(0x6d70, { 0xcb, 0xce });
        gbc.writeMem(0x89c9, { 0x48 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7371, gbc.sp());
        EXPECT(0x6d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x89c9));
        // CB CE 038B
        gbc.setState(0xb2ed, 0x7e59, 0x85b0, 0xb430, 0x1e08, 0x59e5, 0x1, 0x1);
        gbc.writeMem(0x59e5, { 0x4e });
        gbc.writeMem(0xb2ed, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7e59, gbc.sp());
        EXPECT(0xb2ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ed));
        EXPECT(0xce, gbc.readMem(0xb2ee));
        // CB CE 038C
        gbc.setState(0x5ba9, 0x77a8, 0x3820, 0x535, 0xd5cd, 0xae1b, 0x0, 0x1);
        gbc.writeMem(0x5ba9, { 0xcb, 0xce });
        gbc.writeMem(0xae1b, { 0xaa });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x77a8, gbc.sp());
        EXPECT(0x5bab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xae1b));
        // CB CE 038D
        gbc.setState(0xa822, 0x5fb5, 0x1000, 0x6108, 0xb4f5, 0xfb62, 0x0, 0x0);
        gbc.writeMem(0xa822, { 0xcb, 0xce });
        gbc.writeMem(0xfb62, { 0xa7 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5fb5, gbc.sp());
        EXPECT(0xa824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa822));
        EXPECT(0xce, gbc.readMem(0xa823));
        EXPECT(0xa7, gbc.readMem(0xfb62));
        // CB CE 038F
        gbc.setState(0x77a5, 0x1d26, 0x75c0, 0x4479, 0x1bde, 0x4dd0, 0x1, 0x0);
        gbc.writeMem(0x4dd0, { 0xde });
        gbc.writeMem(0x77a5, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1d26, gbc.sp());
        EXPECT(0x77a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 0391
        gbc.setState(0x5edd, 0xf13a, 0xbcd0, 0xd1f3, 0x30c8, 0xc0e6, 0x1, 0x0);
        gbc.writeMem(0x5edd, { 0xcb, 0xce });
        gbc.writeMem(0xc0e6, { 0x2f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf13a, gbc.sp());
        EXPECT(0x5edf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc0e6));
        // CB CE 0392
        gbc.setState(0x3ca7, 0x40f0, 0x2960, 0x8bb8, 0x77d1, 0xa406, 0x1, 0x1);
        gbc.writeMem(0x3ca7, { 0xcb, 0xce });
        gbc.writeMem(0xa406, { 0xf8 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x40f0, gbc.sp());
        EXPECT(0x3ca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xa406));
        // CB CE 0394
        gbc.setState(0x2cd2, 0x17ce, 0xd5f0, 0x4795, 0xd73f, 0xdaf5, 0x1, 0x0);
        gbc.writeMem(0x2cd2, { 0xcb, 0xce });
        gbc.writeMem(0xdaf5, { 0xe2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x17ce, gbc.sp());
        EXPECT(0x2cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xdaf5));
        // CB CE 0395
        gbc.setState(0x9515, 0x458b, 0x73c0, 0xe8dd, 0x3992, 0x5124, 0x1, 0x0);
        gbc.writeMem(0x5124, { 0xcf });
        gbc.writeMem(0x9515, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x458b, gbc.sp());
        EXPECT(0x9517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9515));
        EXPECT(0xce, gbc.readMem(0x9516));
        // CB CE 0398
        gbc.setState(0xeb9c, 0x5e5e, 0xf9b0, 0x1225, 0x1654, 0x2f61, 0x0, 0x1);
        gbc.writeMem(0x2f61, { 0xe3 });
        gbc.writeMem(0xeb9c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5e5e, gbc.sp());
        EXPECT(0xeb9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb9c));
        EXPECT(0xce, gbc.readMem(0xeb9d));
        // CB CE 039A
        gbc.setState(0x3768, 0x318a, 0x80a0, 0xbc62, 0x66c7, 0xcc11, 0x1, 0x1);
        gbc.writeMem(0x3768, { 0xcb, 0xce });
        gbc.writeMem(0xcc11, { 0xc2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x318a, gbc.sp());
        EXPECT(0x376a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xcc11));
        // CB CE 039C
        gbc.setState(0xc887, 0x8dc0, 0xba80, 0xb4b9, 0x9fbb, 0xab2a, 0x1, 0x0);
        gbc.writeMem(0xab2a, { 0xce });
        gbc.writeMem(0xc887, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8dc0, gbc.sp());
        EXPECT(0xc889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xab2a));
        EXPECT(0xcb, gbc.readMem(0xc887));
        EXPECT(0xce, gbc.readMem(0xc888));
        // CB CE 039D
        gbc.setState(0x4fc4, 0x1943, 0xd210, 0xd547, 0xb66e, 0x8277, 0x0, 0x1);
        gbc.writeMem(0x4fc4, { 0xcb, 0xce });
        gbc.writeMem(0x8277, { 0x37 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1943, gbc.sp());
        EXPECT(0x4fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8277));
        // CB CE 039E
        gbc.setState(0xd37f, 0x1f51, 0x5aa0, 0x89e8, 0x857a, 0xff50, 0x1, 0x0);
        gbc.writeMem(0xd37f, { 0xcb, 0xce });
        gbc.writeMem(0xff50, { 0x4a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1f51, gbc.sp());
        EXPECT(0xd381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd37f));
        EXPECT(0xce, gbc.readMem(0xd380));
        EXPECT(0x4a, gbc.readMem(0xff50));
        // CB CE 039F
        gbc.setState(0xdc92, 0x69ea, 0xa110, 0x5faf, 0x998b, 0x683f, 0x0, 0x0);
        gbc.writeMem(0x683f, { 0x6e });
        gbc.writeMem(0xdc92, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x69ea, gbc.sp());
        EXPECT(0xdc94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc92));
        EXPECT(0xce, gbc.readMem(0xdc93));
        // CB CE 03A1
        gbc.setState(0x3e83, 0xd620, 0x1510, 0x2c97, 0x2526, 0xc5bc, 0x1, 0x0);
        gbc.writeMem(0x3e83, { 0xcb, 0xce });
        gbc.writeMem(0xc5bc, { 0xdb });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd620, gbc.sp());
        EXPECT(0x3e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xc5bc));
        // CB CE 03A2
        gbc.setState(0x2073, 0x5365, 0x4e10, 0x1d1, 0x4d9a, 0xbf54, 0x1, 0x1);
        gbc.writeMem(0x2073, { 0xcb, 0xce });
        gbc.writeMem(0xbf54, { 0x80 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5365, gbc.sp());
        EXPECT(0x2075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xbf54));
        // CB CE 03A3
        gbc.setState(0x5fdc, 0x214a, 0x7270, 0xedd, 0x74a9, 0xd4cb, 0x0, 0x0);
        gbc.writeMem(0x5fdc, { 0xcb, 0xce });
        gbc.writeMem(0xd4cb, { 0x1 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x214a, gbc.sp());
        EXPECT(0x5fde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd4cb));
        // CB CE 03A5
        gbc.setState(0x2e64, 0x4cd5, 0xcd40, 0xf1fa, 0xa366, 0x2368, 0x1, 0x0);
        gbc.writeMem(0x2368, { 0xe3 });
        gbc.writeMem(0x2e64, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4cd5, gbc.sp());
        EXPECT(0x2e66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 03A6
        gbc.setState(0xc0a3, 0x53aa, 0xc660, 0xaef0, 0xdfc3, 0x3aeb, 0x1, 0x0);
        gbc.writeMem(0x3aeb, { 0xde });
        gbc.writeMem(0xc0a3, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x53aa, gbc.sp());
        EXPECT(0xc0a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a3));
        EXPECT(0xce, gbc.readMem(0xc0a4));
        // CB CE 03A7
        gbc.setState(0x96f2, 0x7a83, 0x86f0, 0x6380, 0x4eef, 0xb33, 0x0, 0x0);
        gbc.writeMem(0xb33, { 0x4f });
        gbc.writeMem(0x96f2, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7a83, gbc.sp());
        EXPECT(0x96f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f2));
        EXPECT(0xce, gbc.readMem(0x96f3));
        // CB CE 03A8
        gbc.setState(0xec2, 0x9bf1, 0x1f60, 0xb24, 0xec2b, 0x4761, 0x0, 0x1);
        gbc.writeMem(0xec2, { 0xcb, 0xce });
        gbc.writeMem(0x4761, { 0x53 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9bf1, gbc.sp());
        EXPECT(0xec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 03A9
        gbc.setState(0x8a2a, 0x7996, 0xe650, 0xb0ba, 0xa1e0, 0xbfde, 0x1, 0x0);
        gbc.writeMem(0x8a2a, { 0xcb, 0xce });
        gbc.writeMem(0xbfde, { 0xaa });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7996, gbc.sp());
        EXPECT(0x8a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a2a));
        EXPECT(0xce, gbc.readMem(0x8a2b));
        EXPECT(0xaa, gbc.readMem(0xbfde));
        // CB CE 03AB
        gbc.setState(0x9733, 0x5a9e, 0x4030, 0x7356, 0xa000, 0xd088, 0x1, 0x0);
        gbc.writeMem(0x9733, { 0xcb, 0xce });
        gbc.writeMem(0xd088, { 0x1e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5a9e, gbc.sp());
        EXPECT(0x9735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9733));
        EXPECT(0xce, gbc.readMem(0x9734));
        EXPECT(0x1e, gbc.readMem(0xd088));
        // CB CE 03AC
        gbc.setState(0x6bf6, 0xc61c, 0xa8d0, 0xa801, 0x7547, 0xe0ba, 0x1, 0x1);
        gbc.writeMem(0x6bf6, { 0xcb, 0xce });
        gbc.writeMem(0xe0ba, { 0xa3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc61c, gbc.sp());
        EXPECT(0x6bf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe0ba));
        // CB CE 03AF
        gbc.setState(0x990d, 0xb018, 0x9ab0, 0xd8be, 0x9b3a, 0x26d6, 0x1, 0x1);
        gbc.writeMem(0x26d6, { 0x2f });
        gbc.writeMem(0x990d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb018, gbc.sp());
        EXPECT(0x990f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x990d));
        EXPECT(0xce, gbc.readMem(0x990e));
        // CB CE 03B4
        gbc.setState(0xb6bd, 0xd869, 0x41d0, 0xbbcf, 0xb50a, 0xf536, 0x0, 0x0);
        gbc.writeMem(0xb6bd, { 0xcb, 0xce });
        gbc.writeMem(0xf536, { 0x88 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd869, gbc.sp());
        EXPECT(0xb6bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6bd));
        EXPECT(0xce, gbc.readMem(0xb6be));
        EXPECT(0x8a, gbc.readMem(0xf536));
        // CB CE 03B8
        gbc.setState(0xa424, 0xcbab, 0xe5a0, 0x3cef, 0x72ef, 0x6a8d, 0x1, 0x1);
        gbc.writeMem(0x6a8d, { 0xf6 });
        gbc.writeMem(0xa424, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcbab, gbc.sp());
        EXPECT(0xa426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa424));
        EXPECT(0xce, gbc.readMem(0xa425));
        // CB CE 03B9
        gbc.setState(0xd3ed, 0x4f5f, 0x2e10, 0x98b1, 0xfe54, 0xccea, 0x0, 0x0);
        gbc.writeMem(0xccea, { 0x71 });
        gbc.writeMem(0xd3ed, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4f5f, gbc.sp());
        EXPECT(0xd3ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xccea));
        EXPECT(0xcb, gbc.readMem(0xd3ed));
        EXPECT(0xce, gbc.readMem(0xd3ee));
        // CB CE 03BA
        gbc.setState(0x6c1f, 0x4411, 0xa570, 0xf155, 0xf802, 0x3b9f, 0x1, 0x1);
        gbc.writeMem(0x3b9f, { 0x42 });
        gbc.writeMem(0x6c1f, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4411, gbc.sp());
        EXPECT(0x6c21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 03BB
        gbc.setState(0x1a15, 0x1c88, 0xb250, 0x62b4, 0xcdbe, 0x5a45, 0x0, 0x1);
        gbc.writeMem(0x1a15, { 0xcb, 0xce });
        gbc.writeMem(0x5a45, { 0x13 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1c88, gbc.sp());
        EXPECT(0x1a17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 03BE
        gbc.setState(0x2897, 0xfb11, 0x1dd0, 0xd349, 0xadfa, 0xc270, 0x1, 0x1);
        gbc.writeMem(0x2897, { 0xcb, 0xce });
        gbc.writeMem(0xc270, { 0xa7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xfb11, gbc.sp());
        EXPECT(0x2899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc270));
        // CB CE 03C1
        gbc.setState(0x61b0, 0x88fb, 0x4400, 0xe7cf, 0x57a0, 0xb302, 0x0, 0x1);
        gbc.writeMem(0x61b0, { 0xcb, 0xce });
        gbc.writeMem(0xb302, { 0x1c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x88fb, gbc.sp());
        EXPECT(0x61b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xb302));
        // CB CE 03C2
        gbc.setState(0x53d8, 0x5984, 0xde00, 0x2d6b, 0x4fe1, 0xb631, 0x1, 0x0);
        gbc.writeMem(0x53d8, { 0xcb, 0xce });
        gbc.writeMem(0xb631, { 0x4a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5984, gbc.sp());
        EXPECT(0x53da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xb631));
        // CB CE 03C3
        gbc.setState(0x974c, 0x7211, 0xeb0, 0xa332, 0x32c3, 0xb238, 0x1, 0x1);
        gbc.writeMem(0x974c, { 0xcb, 0xce });
        gbc.writeMem(0xb238, { 0x84 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7211, gbc.sp());
        EXPECT(0x974e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x974c));
        EXPECT(0xce, gbc.readMem(0x974d));
        EXPECT(0x86, gbc.readMem(0xb238));
        // CB CE 03C4
        gbc.setState(0xe2dd, 0x9ead, 0x43e0, 0x6eb9, 0xd88f, 0x9da1, 0x0, 0x0);
        gbc.writeMem(0x9da1, { 0x57 });
        gbc.writeMem(0xe2dd, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9ead, gbc.sp());
        EXPECT(0xe2df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9da1));
        EXPECT(0xcb, gbc.readMem(0xe2dd));
        EXPECT(0xce, gbc.readMem(0xe2de));
        // CB CE 03C5
        gbc.setState(0x5531, 0x921c, 0xd280, 0x1668, 0xd732, 0x15cc, 0x1, 0x1);
        gbc.writeMem(0x15cc, { 0x97 });
        gbc.writeMem(0x5531, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x921c, gbc.sp());
        EXPECT(0x5533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB CE 03C6
        gbc.setState(0x2c3e, 0xa39d, 0xbdd0, 0x603c, 0x4e6, 0x28ea, 0x1, 0x1);
        gbc.writeMem(0x28ea, { 0x3a });
        gbc.writeMem(0x2c3e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa39d, gbc.sp());
        EXPECT(0x2c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 03C7
        gbc.setState(0xc595, 0x1259, 0x9e40, 0xa7df, 0x1f58, 0xcf81, 0x0, 0x0);
        gbc.writeMem(0xc595, { 0xcb, 0xce });
        gbc.writeMem(0xcf81, { 0x81 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1259, gbc.sp());
        EXPECT(0xc597, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc595));
        EXPECT(0xce, gbc.readMem(0xc596));
        EXPECT(0x83, gbc.readMem(0xcf81));
        // CB CE 03C9
        gbc.setState(0x9269, 0x3116, 0xa3a0, 0xb982, 0xab54, 0x8612, 0x1, 0x1);
        gbc.writeMem(0x8612, { 0xca });
        gbc.writeMem(0x9269, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3116, gbc.sp());
        EXPECT(0x926b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x8612));
        EXPECT(0xcb, gbc.readMem(0x9269));
        EXPECT(0xce, gbc.readMem(0x926a));
        // CB CE 03CA
        gbc.setState(0x6d06, 0xd1f9, 0x8c10, 0xe6e7, 0xee3a, 0x93a4, 0x1, 0x0);
        gbc.writeMem(0x6d06, { 0xcb, 0xce });
        gbc.writeMem(0x93a4, { 0xb3 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd1f9, gbc.sp());
        EXPECT(0x6d08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x93a4));
        // CB CE 03CB
        gbc.setState(0x90d3, 0xa12c, 0x25d0, 0xe617, 0x73e6, 0x8ef1, 0x0, 0x0);
        gbc.writeMem(0x8ef1, { 0x2c });
        gbc.writeMem(0x90d3, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa12c, gbc.sp());
        EXPECT(0x90d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8ef1));
        EXPECT(0xcb, gbc.readMem(0x90d3));
        EXPECT(0xce, gbc.readMem(0x90d4));
        // CB CE 03D0
        gbc.setState(0x1f58, 0x2407, 0x9c80, 0x2174, 0x4eb, 0xea42, 0x1, 0x0);
        gbc.writeMem(0x1f58, { 0xcb, 0xce });
        gbc.writeMem(0xea42, { 0xe3 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2407, gbc.sp());
        EXPECT(0x1f5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xea42));
        // CB CE 03D1
        gbc.setState(0x96c8, 0xd5f1, 0xf8c0, 0x49ee, 0xe9ce, 0xc51f, 0x0, 0x0);
        gbc.writeMem(0x96c8, { 0xcb, 0xce });
        gbc.writeMem(0xc51f, { 0x47 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd5f1, gbc.sp());
        EXPECT(0x96ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c8));
        EXPECT(0xce, gbc.readMem(0x96c9));
        EXPECT(0x47, gbc.readMem(0xc51f));
        // CB CE 03D2
        gbc.setState(0x2b9c, 0x26b7, 0x94c0, 0x2ad4, 0xa8d7, 0xa6d3, 0x1, 0x1);
        gbc.writeMem(0x2b9c, { 0xcb, 0xce });
        gbc.writeMem(0xa6d3, { 0xb5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x26b7, gbc.sp());
        EXPECT(0x2b9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa6d3));
        // CB CE 03D3
        gbc.setState(0x4735, 0xfff0, 0xf070, 0xb5a9, 0xf496, 0xe6f7, 0x1, 0x1);
        gbc.writeMem(0x4735, { 0xcb, 0xce });
        gbc.writeMem(0xe6f7, { 0x9e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfff0, gbc.sp());
        EXPECT(0x4737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xe6f7));
        // CB CE 03D4
        gbc.setState(0x946e, 0x73d7, 0x9870, 0x5e57, 0x148e, 0x4862, 0x1, 0x0);
        gbc.writeMem(0x4862, { 0xbb });
        gbc.writeMem(0x946e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x73d7, gbc.sp());
        EXPECT(0x9470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x946e));
        EXPECT(0xce, gbc.readMem(0x946f));
        // CB CE 03D5
        gbc.setState(0x908e, 0xafa9, 0xbee0, 0x2085, 0xf179, 0x63a8, 0x1, 0x1);
        gbc.writeMem(0x63a8, { 0xf7 });
        gbc.writeMem(0x908e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xafa9, gbc.sp());
        EXPECT(0x9090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x908e));
        EXPECT(0xce, gbc.readMem(0x908f));
        // CB CE 03D6
        gbc.setState(0x35a2, 0x1277, 0x4750, 0xa7b9, 0xdd58, 0xe396, 0x1, 0x0);
        gbc.writeMem(0x35a2, { 0xcb, 0xce });
        gbc.writeMem(0xe396, { 0x68 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1277, gbc.sp());
        EXPECT(0x35a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xe396));
        // CB CE 03D8
        gbc.setState(0x789d, 0xc176, 0x2450, 0x6bf8, 0x38bd, 0x8e00, 0x0, 0x1);
        gbc.writeMem(0x789d, { 0xcb, 0xce });
        gbc.writeMem(0x8e00, { 0xcd });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc176, gbc.sp());
        EXPECT(0x789f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0x8e00));
        // CB CE 03D9
        gbc.setState(0xce1, 0x1259, 0x7ed0, 0xc481, 0x2f32, 0x4372, 0x0, 0x0);
        gbc.writeMem(0xce1, { 0xcb, 0xce });
        gbc.writeMem(0x4372, { 0x3b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1259, gbc.sp());
        EXPECT(0xce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 03DA
        gbc.setState(0xde90, 0x9ccb, 0x700, 0x6ad5, 0x50e8, 0x6c3b, 0x0, 0x1);
        gbc.writeMem(0x6c3b, { 0xb2 });
        gbc.writeMem(0xde90, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9ccb, gbc.sp());
        EXPECT(0xde92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde90));
        EXPECT(0xce, gbc.readMem(0xde91));
        // CB CE 03DC
        gbc.setState(0xcae, 0xeb1c, 0x7ec0, 0x5179, 0xecc3, 0xd1ef, 0x1, 0x1);
        gbc.writeMem(0xcae, { 0xcb, 0xce });
        gbc.writeMem(0xd1ef, { 0x86 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xeb1c, gbc.sp());
        EXPECT(0xcb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd1ef));
        // CB CE 03E0
        gbc.setState(0xe02d, 0xc4ad, 0xec10, 0x2cd0, 0x40ff, 0x3e46, 0x1, 0x1);
        gbc.writeMem(0x3e46, { 0x2a });
        gbc.writeMem(0xe02d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc4ad, gbc.sp());
        EXPECT(0xe02f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe02d));
        EXPECT(0xce, gbc.readMem(0xe02e));
        // CB CE 03E2
        gbc.setState(0x54ac, 0x476f, 0x7290, 0x5179, 0x1a1b, 0x31dc, 0x1, 0x1);
        gbc.writeMem(0x31dc, { 0x12 });
        gbc.writeMem(0x54ac, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x476f, gbc.sp());
        EXPECT(0x54ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB CE 03E4
        gbc.setState(0xdc1b, 0x2d4c, 0xf490, 0x5aa0, 0x2c57, 0xae4b, 0x1, 0x1);
        gbc.writeMem(0xae4b, { 0x46 });
        gbc.writeMem(0xdc1b, { 0xcb, 0xce });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2d4c, gbc.sp());
        EXPECT(0xdc1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xae4b));
        EXPECT(0xcb, gbc.readMem(0xdc1b));
        EXPECT(0xce, gbc.readMem(0xdc1c));
        // CB CE 03E5
        gbc.setState(0xbf0c, 0x7afe, 0x94e0, 0xf4e1, 0x93bc, 0xe18a, 0x0, 0x0);
        gbc.writeMem(0xbf0c, { 0xcb, 0xce });
        gbc.writeMem(0xe18a, { 0x51 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7afe, gbc.sp());
        EXPECT(0xbf0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf0c));
        EXPECT(0xce, gbc.readMem(0xbf0d));
        EXPECT(0x53, gbc.readMem(0xe18a));
    }
