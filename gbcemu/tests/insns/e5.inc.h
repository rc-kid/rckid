    TEST(gbcemu, opcode_e5) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // E5 0000
        gbc.setState(0xb24a, 0xd5b1, 0x1910, 0x193, 0x4c2c, 0xb9c8, 0x0, 0x0);
        gbc.writeMem(0xb24a, { 0xe5 });
        gbc.writeMem(0xd5af, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd5af, gbc.sp());
        EXPECT(0xb24b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xb24a));
        EXPECT(0xc8, gbc.readMem(0xd5af));
        EXPECT(0xb9, gbc.readMem(0xd5b0));
        // E5 0002
        gbc.setState(0xc1a6, 0xa9e1, 0x80b0, 0x4123, 0x6548, 0x2b71, 0x0, 0x1);
        gbc.writeMem(0xa9df, { 0x0, 0x0 });
        gbc.writeMem(0xc1a6, { 0xe5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa9df, gbc.sp());
        EXPECT(0xc1a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xa9df));
        EXPECT(0x2b, gbc.readMem(0xa9e0));
        EXPECT(0xe5, gbc.readMem(0xc1a6));
        // E5 0005
        gbc.setState(0x424b, 0x8e10, 0xb8b0, 0x170e, 0xd05f, 0x1090, 0x0, 0x1);
        gbc.writeMem(0x424b, { 0xe5 });
        gbc.writeMem(0x8e0e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8e0e, gbc.sp());
        EXPECT(0x424c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x8e0e));
        EXPECT(0x10, gbc.readMem(0x8e0f));
        // E5 0006
        gbc.setState(0x158f, 0xe89f, 0xfc20, 0xaef8, 0xc4e0, 0xf4cd, 0x0, 0x0);
        gbc.writeMem(0x158f, { 0xe5 });
        gbc.writeMem(0xe89d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe89d, gbc.sp());
        EXPECT(0x1590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xe89d));
        EXPECT(0xf4, gbc.readMem(0xe89e));
        // E5 0007
        gbc.setState(0x42e9, 0xe304, 0xc0c0, 0x44f3, 0x3ce0, 0xc9a, 0x0, 0x0);
        gbc.writeMem(0x42e9, { 0xe5 });
        gbc.writeMem(0xe302, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe302, gbc.sp());
        EXPECT(0x42ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe302));
        EXPECT(0xc, gbc.readMem(0xe303));
        // E5 0008
        gbc.setState(0x5d44, 0xdc81, 0x9490, 0xd36f, 0x1ead, 0x868d, 0x0, 0x0);
        gbc.writeMem(0x5d44, { 0xe5 });
        gbc.writeMem(0xdc7f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdc7f, gbc.sp());
        EXPECT(0x5d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdc7f));
        EXPECT(0x86, gbc.readMem(0xdc80));
        // E5 0009
        gbc.setState(0xa4f9, 0x95f0, 0xc800, 0xfc54, 0x532e, 0xc6ec, 0x1, 0x0);
        gbc.writeMem(0x95ee, { 0x0, 0x0 });
        gbc.writeMem(0xa4f9, { 0xe5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x95ee, gbc.sp());
        EXPECT(0xa4fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x95ee));
        EXPECT(0xc6, gbc.readMem(0x95ef));
        EXPECT(0xe5, gbc.readMem(0xa4f9));
        // E5 000A
        gbc.setState(0x87b0, 0xf386, 0x5720, 0x784b, 0x94e5, 0xda07, 0x1, 0x0);
        gbc.writeMem(0x87b0, { 0xe5 });
        gbc.writeMem(0xf384, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf384, gbc.sp());
        EXPECT(0x87b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x87b0));
        EXPECT(0x7, gbc.readMem(0xf384));
        EXPECT(0xda, gbc.readMem(0xf385));
        // E5 000B
        gbc.setState(0x9aa6, 0xd908, 0xc100, 0x6009, 0xefa5, 0x1295, 0x0, 0x0);
        gbc.writeMem(0x9aa6, { 0xe5 });
        gbc.writeMem(0xd906, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd906, gbc.sp());
        EXPECT(0x9aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9aa6));
        EXPECT(0x95, gbc.readMem(0xd906));
        EXPECT(0x12, gbc.readMem(0xd907));
        // E5 000E
        gbc.setState(0x1b2b, 0xac0f, 0xe6e0, 0xf33f, 0xcde8, 0x8140, 0x1, 0x1);
        gbc.writeMem(0x1b2b, { 0xe5 });
        gbc.writeMem(0xac0d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xac0d, gbc.sp());
        EXPECT(0x1b2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xac0d));
        EXPECT(0x81, gbc.readMem(0xac0e));
        // E5 0010
        gbc.setState(0x6afb, 0xe03f, 0x3890, 0xa5fe, 0xe533, 0x916b, 0x0, 0x1);
        gbc.writeMem(0x6afb, { 0xe5 });
        gbc.writeMem(0xe03d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe03d, gbc.sp());
        EXPECT(0x6afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xe03d));
        EXPECT(0x91, gbc.readMem(0xe03e));
        // E5 0013
        gbc.setState(0xec11, 0xc0f1, 0xf910, 0xe737, 0xcbdd, 0xb6c7, 0x0, 0x0);
        gbc.writeMem(0xc0ef, { 0x0, 0x0 });
        gbc.writeMem(0xec11, { 0xe5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc0ef, gbc.sp());
        EXPECT(0xec12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xc0ef));
        EXPECT(0xb6, gbc.readMem(0xc0f0));
        EXPECT(0xe5, gbc.readMem(0xec11));
        // E5 0014
        gbc.setState(0x5902, 0xb0fe, 0x87a0, 0x1362, 0x7af7, 0x28d4, 0x1, 0x0);
        gbc.writeMem(0x5902, { 0xe5 });
        gbc.writeMem(0xb0fc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb0fc, gbc.sp());
        EXPECT(0x5903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb0fc));
        EXPECT(0x28, gbc.readMem(0xb0fd));
        // E5 0015
        gbc.setState(0x9ecb, 0x9c6c, 0xa170, 0x313c, 0x477a, 0x33b5, 0x1, 0x0);
        gbc.writeMem(0x9c6a, { 0x0, 0x0 });
        gbc.writeMem(0x9ecb, { 0xe5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9c6a, gbc.sp());
        EXPECT(0x9ecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9c6a));
        EXPECT(0x33, gbc.readMem(0x9c6b));
        EXPECT(0xe5, gbc.readMem(0x9ecb));
        // E5 0016
        gbc.setState(0x5099, 0xb710, 0x4570, 0x88b8, 0xe939, 0x8595, 0x0, 0x1);
        gbc.writeMem(0x5099, { 0xe5 });
        gbc.writeMem(0xb70e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb70e, gbc.sp());
        EXPECT(0x509a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb70e));
        EXPECT(0x85, gbc.readMem(0xb70f));
        // E5 001B
        gbc.setState(0xca8a, 0xee99, 0x7c0, 0x318, 0x222f, 0xc5ce, 0x0, 0x1);
        gbc.writeMem(0xca8a, { 0xe5 });
        gbc.writeMem(0xee97, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xee97, gbc.sp());
        EXPECT(0xca8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xca8a));
        EXPECT(0xce, gbc.readMem(0xee97));
        EXPECT(0xc5, gbc.readMem(0xee98));
        // E5 001C
        gbc.setState(0x59e6, 0xb89a, 0x5a40, 0x1de6, 0xf086, 0x34f5, 0x1, 0x1);
        gbc.writeMem(0x59e6, { 0xe5 });
        gbc.writeMem(0xb898, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb898, gbc.sp());
        EXPECT(0x59e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb898));
        EXPECT(0x34, gbc.readMem(0xb899));
        // E5 0020
        gbc.setState(0x7a87, 0xbb32, 0x9470, 0x734a, 0xf83a, 0x7c11, 0x0, 0x1);
        gbc.writeMem(0x7a87, { 0xe5 });
        gbc.writeMem(0xbb30, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbb30, gbc.sp());
        EXPECT(0x7a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbb30));
        EXPECT(0x7c, gbc.readMem(0xbb31));
        // E5 0023
        gbc.setState(0x4906, 0x8c98, 0x12f0, 0x570d, 0x6e9a, 0x1824, 0x1, 0x0);
        gbc.writeMem(0x4906, { 0xe5 });
        gbc.writeMem(0x8c96, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8c96, gbc.sp());
        EXPECT(0x4907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x8c96));
        EXPECT(0x18, gbc.readMem(0x8c97));
        // E5 0024
        gbc.setState(0x6c90, 0xcb1c, 0xf470, 0x35c4, 0xdbab, 0x69e5, 0x1, 0x1);
        gbc.writeMem(0x6c90, { 0xe5 });
        gbc.writeMem(0xcb1a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcb1a, gbc.sp());
        EXPECT(0x6c91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xcb1a));
        EXPECT(0x69, gbc.readMem(0xcb1b));
        // E5 0025
        gbc.setState(0x31c5, 0x88ac, 0xfa00, 0x9e7b, 0xc5a3, 0xfe53, 0x1, 0x0);
        gbc.writeMem(0x31c5, { 0xe5 });
        gbc.writeMem(0x88aa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x88aa, gbc.sp());
        EXPECT(0x31c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x88aa));
        EXPECT(0xfe, gbc.readMem(0x88ab));
        // E5 0026
        gbc.setState(0x2f6b, 0xd34f, 0xc0c0, 0x6249, 0x8a64, 0x40e6, 0x0, 0x1);
        gbc.writeMem(0x2f6b, { 0xe5 });
        gbc.writeMem(0xd34d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd34d, gbc.sp());
        EXPECT(0x2f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd34d));
        EXPECT(0x40, gbc.readMem(0xd34e));
        // E5 0027
        gbc.setState(0xd6dd, 0xed74, 0x6c00, 0xb3e4, 0x5bd, 0x7a67, 0x0, 0x0);
        gbc.writeMem(0xd6dd, { 0xe5 });
        gbc.writeMem(0xed72, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xed72, gbc.sp());
        EXPECT(0xd6de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xd6dd));
        EXPECT(0x67, gbc.readMem(0xed72));
        EXPECT(0x7a, gbc.readMem(0xed73));
        // E5 0028
        gbc.setState(0xeb0c, 0x904a, 0xfde0, 0xdb40, 0x9504, 0x6770, 0x1, 0x0);
        gbc.writeMem(0x9048, { 0x0, 0x0 });
        gbc.writeMem(0xeb0c, { 0xe5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9048, gbc.sp());
        EXPECT(0xeb0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x9048));
        EXPECT(0x67, gbc.readMem(0x9049));
        EXPECT(0xe5, gbc.readMem(0xeb0c));
        // E5 002B
        gbc.setState(0x61a1, 0xc115, 0xbee0, 0xb494, 0x2822, 0x9f17, 0x1, 0x1);
        gbc.writeMem(0x61a1, { 0xe5 });
        gbc.writeMem(0xc113, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc113, gbc.sp());
        EXPECT(0x61a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xc113));
        EXPECT(0x9f, gbc.readMem(0xc114));
        // E5 002D
        gbc.setState(0x7bf8, 0xd71b, 0xdc00, 0xab38, 0x3ac0, 0x89d3, 0x0, 0x1);
        gbc.writeMem(0x7bf8, { 0xe5 });
        gbc.writeMem(0xd719, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd719, gbc.sp());
        EXPECT(0x7bf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xd719));
        EXPECT(0x89, gbc.readMem(0xd71a));
        // E5 002E
        gbc.setState(0x8a8e, 0xbdec, 0xca20, 0x54a4, 0x1ba4, 0xb536, 0x1, 0x1);
        gbc.writeMem(0x8a8e, { 0xe5 });
        gbc.writeMem(0xbdea, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbdea, gbc.sp());
        EXPECT(0x8a8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x8a8e));
        EXPECT(0x36, gbc.readMem(0xbdea));
        EXPECT(0xb5, gbc.readMem(0xbdeb));
        // E5 0033
        gbc.setState(0xd66a, 0xab58, 0x4f80, 0xc78f, 0x6d42, 0x175c, 0x1, 0x0);
        gbc.writeMem(0xab56, { 0x0, 0x0 });
        gbc.writeMem(0xd66a, { 0xe5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xab56, gbc.sp());
        EXPECT(0xd66b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xab56));
        EXPECT(0x17, gbc.readMem(0xab57));
        EXPECT(0xe5, gbc.readMem(0xd66a));
        // E5 003B
        gbc.setState(0xeb49, 0xe7dd, 0xaec0, 0x74e9, 0x7a80, 0xa8fd, 0x1, 0x1);
        gbc.writeMem(0xe7db, { 0x0, 0x0 });
        gbc.writeMem(0xeb49, { 0xe5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe7db, gbc.sp());
        EXPECT(0xeb4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xe7db));
        EXPECT(0xa8, gbc.readMem(0xe7dc));
        EXPECT(0xe5, gbc.readMem(0xeb49));
        // E5 003C
        gbc.setState(0xb714, 0x98f3, 0xf250, 0x1351, 0x75b0, 0x7b40, 0x1, 0x1);
        gbc.writeMem(0x98f1, { 0x0, 0x0 });
        gbc.writeMem(0xb714, { 0xe5 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x98f1, gbc.sp());
        EXPECT(0xb715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x98f1));
        EXPECT(0x7b, gbc.readMem(0x98f2));
        EXPECT(0xe5, gbc.readMem(0xb714));
        // E5 0043
        gbc.setState(0xdb5c, 0xff14, 0x7af0, 0xc3f0, 0x160f, 0xaa2c, 0x1, 0x1);
        gbc.writeMem(0xdb5c, { 0xe5 });
        gbc.writeMem(0xff12, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xff12, gbc.sp());
        EXPECT(0xdb5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xdb5c));
        EXPECT(0x2c, gbc.readMem(0xff12));
        EXPECT(0xaa, gbc.readMem(0xff13));
        // E5 0044
        gbc.setState(0x3d5e, 0xc536, 0x5780, 0xb090, 0x33cb, 0x6fd9, 0x0, 0x1);
        gbc.writeMem(0x3d5e, { 0xe5 });
        gbc.writeMem(0xc534, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc534, gbc.sp());
        EXPECT(0x3d5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc534));
        EXPECT(0x6f, gbc.readMem(0xc535));
        // E5 0045
        gbc.setState(0x6972, 0x9d36, 0x6b80, 0xca12, 0xefaf, 0xd025, 0x1, 0x0);
        gbc.writeMem(0x6972, { 0xe5 });
        gbc.writeMem(0x9d34, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9d34, gbc.sp());
        EXPECT(0x6973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9d34));
        EXPECT(0xd0, gbc.readMem(0x9d35));
        // E5 004D
        gbc.setState(0xc91c, 0xbe3b, 0x76b0, 0x24de, 0x72db, 0x1ecf, 0x1, 0x0);
        gbc.writeMem(0xbe39, { 0x0, 0x0 });
        gbc.writeMem(0xc91c, { 0xe5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbe39, gbc.sp());
        EXPECT(0xc91d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xbe39));
        EXPECT(0x1e, gbc.readMem(0xbe3a));
        EXPECT(0xe5, gbc.readMem(0xc91c));
        // E5 004E
        gbc.setState(0xa444, 0xc3ee, 0xef00, 0x5f0a, 0x79a2, 0xbe9b, 0x0, 0x0);
        gbc.writeMem(0xa444, { 0xe5 });
        gbc.writeMem(0xc3ec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc3ec, gbc.sp());
        EXPECT(0xa445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa444));
        EXPECT(0x9b, gbc.readMem(0xc3ec));
        EXPECT(0xbe, gbc.readMem(0xc3ed));
        // E5 004F
        gbc.setState(0x9dac, 0x9534, 0x4630, 0x2008, 0x11f9, 0x93fd, 0x0, 0x0);
        gbc.writeMem(0x9532, { 0x0, 0x0 });
        gbc.writeMem(0x9dac, { 0xe5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9532, gbc.sp());
        EXPECT(0x9dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x9532));
        EXPECT(0x93, gbc.readMem(0x9533));
        EXPECT(0xe5, gbc.readMem(0x9dac));
        // E5 0053
        gbc.setState(0x341f, 0x9793, 0x17d0, 0x5448, 0x6fa2, 0x82c2, 0x1, 0x0);
        gbc.writeMem(0x341f, { 0xe5 });
        gbc.writeMem(0x9791, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9791, gbc.sp());
        EXPECT(0x3420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9791));
        EXPECT(0x82, gbc.readMem(0x9792));
        // E5 0057
        gbc.setState(0x6309, 0xdc09, 0x6df0, 0xceb7, 0x291e, 0xbba3, 0x0, 0x0);
        gbc.writeMem(0x6309, { 0xe5 });
        gbc.writeMem(0xdc07, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xdc07, gbc.sp());
        EXPECT(0x630a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdc07));
        EXPECT(0xbb, gbc.readMem(0xdc08));
        // E5 0058
        gbc.setState(0x9354, 0xbc9b, 0x61b0, 0xf419, 0x4f4, 0x5095, 0x1, 0x1);
        gbc.writeMem(0x9354, { 0xe5 });
        gbc.writeMem(0xbc99, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbc99, gbc.sp());
        EXPECT(0x9355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9354));
        EXPECT(0x95, gbc.readMem(0xbc99));
        EXPECT(0x50, gbc.readMem(0xbc9a));
        // E5 005B
        gbc.setState(0xa685, 0x9b3b, 0xec00, 0x41d5, 0x3ae5, 0xed77, 0x0, 0x0);
        gbc.writeMem(0x9b39, { 0x0, 0x0 });
        gbc.writeMem(0xa685, { 0xe5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9b39, gbc.sp());
        EXPECT(0xa686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x9b39));
        EXPECT(0xed, gbc.readMem(0x9b3a));
        EXPECT(0xe5, gbc.readMem(0xa685));
        // E5 005F
        gbc.setState(0x9540, 0xe9e1, 0x4e40, 0x786b, 0x517a, 0xac41, 0x0, 0x1);
        gbc.writeMem(0x9540, { 0xe5 });
        gbc.writeMem(0xe9df, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe9df, gbc.sp());
        EXPECT(0x9541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9540));
        EXPECT(0x41, gbc.readMem(0xe9df));
        EXPECT(0xac, gbc.readMem(0xe9e0));
        // E5 0061
        gbc.setState(0x9da3, 0xe085, 0xb140, 0x27b4, 0x5e36, 0xeeec, 0x1, 0x1);
        gbc.writeMem(0x9da3, { 0xe5 });
        gbc.writeMem(0xe083, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe083, gbc.sp());
        EXPECT(0x9da4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9da3));
        EXPECT(0xec, gbc.readMem(0xe083));
        EXPECT(0xee, gbc.readMem(0xe084));
        // E5 0062
        gbc.setState(0x51c4, 0xfa05, 0x1bf0, 0x4a90, 0xf212, 0xb263, 0x1, 0x0);
        gbc.writeMem(0x51c4, { 0xe5 });
        gbc.writeMem(0xfa03, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfa03, gbc.sp());
        EXPECT(0x51c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xfa03));
        EXPECT(0xb2, gbc.readMem(0xfa04));
        // E5 0064
        gbc.setState(0x6ec8, 0xd4df, 0xfd50, 0xe0c1, 0x7ae7, 0x21ae, 0x1, 0x0);
        gbc.writeMem(0x6ec8, { 0xe5 });
        gbc.writeMem(0xd4dd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd4dd, gbc.sp());
        EXPECT(0x6ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xd4dd));
        EXPECT(0x21, gbc.readMem(0xd4de));
        // E5 0068
        gbc.setState(0xd6cd, 0xa05c, 0x80a0, 0xf0f6, 0xd738, 0x7272, 0x1, 0x0);
        gbc.writeMem(0xa05a, { 0x0, 0x0 });
        gbc.writeMem(0xd6cd, { 0xe5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa05a, gbc.sp());
        EXPECT(0xd6ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa05a));
        EXPECT(0x72, gbc.readMem(0xa05b));
        EXPECT(0xe5, gbc.readMem(0xd6cd));
        // E5 0069
        gbc.setState(0x1ea4, 0xe45c, 0xf870, 0x468e, 0x39c8, 0x8928, 0x0, 0x0);
        gbc.writeMem(0x1ea4, { 0xe5 });
        gbc.writeMem(0xe45a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe45a, gbc.sp());
        EXPECT(0x1ea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xe45a));
        EXPECT(0x89, gbc.readMem(0xe45b));
        // E5 006A
        gbc.setState(0xd702, 0xab54, 0x8450, 0x4006, 0x7649, 0x2bec, 0x0, 0x1);
        gbc.writeMem(0xab52, { 0x0, 0x0 });
        gbc.writeMem(0xd702, { 0xe5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xab52, gbc.sp());
        EXPECT(0xd703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xab52));
        EXPECT(0x2b, gbc.readMem(0xab53));
        EXPECT(0xe5, gbc.readMem(0xd702));
        // E5 006B
        gbc.setState(0x1f42, 0xd540, 0xeb0, 0x53c, 0xa2ba, 0x591a, 0x0, 0x0);
        gbc.writeMem(0x1f42, { 0xe5 });
        gbc.writeMem(0xd53e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd53e, gbc.sp());
        EXPECT(0x1f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xd53e));
        EXPECT(0x59, gbc.readMem(0xd53f));
        // E5 006C
        gbc.setState(0xce7a, 0xd3e3, 0xe80, 0xcfd1, 0x1ed2, 0xe626, 0x0, 0x0);
        gbc.writeMem(0xce7a, { 0xe5 });
        gbc.writeMem(0xd3e1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd3e1, gbc.sp());
        EXPECT(0xce7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xce7a));
        EXPECT(0x26, gbc.readMem(0xd3e1));
        EXPECT(0xe6, gbc.readMem(0xd3e2));
        // E5 006D
        gbc.setState(0xd5b, 0x8685, 0xa440, 0x9dc2, 0x5068, 0x5a52, 0x1, 0x1);
        gbc.writeMem(0xd5b, { 0xe5 });
        gbc.writeMem(0x8683, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8683, gbc.sp());
        EXPECT(0xd5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8683));
        EXPECT(0x5a, gbc.readMem(0x8684));
        // E5 006E
        gbc.setState(0xc4d6, 0xccf7, 0xeb70, 0x1589, 0x5f07, 0x16bb, 0x0, 0x1);
        gbc.writeMem(0xc4d6, { 0xe5 });
        gbc.writeMem(0xccf5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xccf5, gbc.sp());
        EXPECT(0xc4d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xc4d6));
        EXPECT(0xbb, gbc.readMem(0xccf5));
        EXPECT(0x16, gbc.readMem(0xccf6));
        // E5 0071
        gbc.setState(0x9455, 0xd6ff, 0x6e50, 0x76f2, 0x4410, 0xd99a, 0x0, 0x0);
        gbc.writeMem(0x9455, { 0xe5 });
        gbc.writeMem(0xd6fd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd6fd, gbc.sp());
        EXPECT(0x9456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9455));
        EXPECT(0x9a, gbc.readMem(0xd6fd));
        EXPECT(0xd9, gbc.readMem(0xd6fe));
        // E5 0072
        gbc.setState(0x9306, 0xb4b6, 0xf950, 0x7376, 0x7322, 0x28d2, 0x1, 0x0);
        gbc.writeMem(0x9306, { 0xe5 });
        gbc.writeMem(0xb4b4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb4b4, gbc.sp());
        EXPECT(0x9307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9306));
        EXPECT(0xd2, gbc.readMem(0xb4b4));
        EXPECT(0x28, gbc.readMem(0xb4b5));
        // E5 0074
        gbc.setState(0x9ad2, 0xdad1, 0x9310, 0xa091, 0x56b8, 0x95b9, 0x0, 0x1);
        gbc.writeMem(0x9ad2, { 0xe5 });
        gbc.writeMem(0xdacf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xdacf, gbc.sp());
        EXPECT(0x9ad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9ad2));
        EXPECT(0xb9, gbc.readMem(0xdacf));
        EXPECT(0x95, gbc.readMem(0xdad0));
        // E5 0076
        gbc.setState(0x585b, 0xc06a, 0x5e00, 0xa45, 0x4968, 0xb7fe, 0x1, 0x0);
        gbc.writeMem(0x585b, { 0xe5 });
        gbc.writeMem(0xc068, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc068, gbc.sp());
        EXPECT(0x585c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc068));
        EXPECT(0xb7, gbc.readMem(0xc069));
        // E5 007A
        gbc.setState(0x40a8, 0xc0f1, 0x7080, 0x9300, 0xa7ad, 0x2ab0, 0x1, 0x1);
        gbc.writeMem(0x40a8, { 0xe5 });
        gbc.writeMem(0xc0ef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc0ef, gbc.sp());
        EXPECT(0x40a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc0ef));
        EXPECT(0x2a, gbc.readMem(0xc0f0));
        // E5 007C
        gbc.setState(0xb4e8, 0xe28f, 0x37c0, 0x60b5, 0xfb97, 0x367e, 0x0, 0x1);
        gbc.writeMem(0xb4e8, { 0xe5 });
        gbc.writeMem(0xe28d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe28d, gbc.sp());
        EXPECT(0xb4e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xb4e8));
        EXPECT(0x7e, gbc.readMem(0xe28d));
        EXPECT(0x36, gbc.readMem(0xe28e));
        // E5 007D
        gbc.setState(0xabbc, 0xdc76, 0xe1c0, 0x5cbd, 0x329c, 0xad99, 0x0, 0x0);
        gbc.writeMem(0xabbc, { 0xe5 });
        gbc.writeMem(0xdc74, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdc74, gbc.sp());
        EXPECT(0xabbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xabbc));
        EXPECT(0x99, gbc.readMem(0xdc74));
        EXPECT(0xad, gbc.readMem(0xdc75));
        // E5 007E
        gbc.setState(0x6b98, 0xb290, 0x2ee0, 0xe1d4, 0x3a47, 0x7da7, 0x1, 0x0);
        gbc.writeMem(0x6b98, { 0xe5 });
        gbc.writeMem(0xb28e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb28e, gbc.sp());
        EXPECT(0x6b99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb28e));
        EXPECT(0x7d, gbc.readMem(0xb28f));
        // E5 0084
        gbc.setState(0x744d, 0xe041, 0xcc50, 0x8fb3, 0x1928, 0x42d9, 0x1, 0x0);
        gbc.writeMem(0x744d, { 0xe5 });
        gbc.writeMem(0xe03f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe03f, gbc.sp());
        EXPECT(0x744e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe03f));
        EXPECT(0x42, gbc.readMem(0xe040));
        // E5 0086
        gbc.setState(0xcfe2, 0xd03f, 0xd70, 0x3fb7, 0x94db, 0xecb1, 0x1, 0x0);
        gbc.writeMem(0xcfe2, { 0xe5 });
        gbc.writeMem(0xd03d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd03d, gbc.sp());
        EXPECT(0xcfe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xcfe2));
        EXPECT(0xb1, gbc.readMem(0xd03d));
        EXPECT(0xec, gbc.readMem(0xd03e));
        // E5 0088
        gbc.setState(0x7683, 0xc97d, 0xdcb0, 0x8adc, 0x3855, 0xf6f1, 0x1, 0x1);
        gbc.writeMem(0x7683, { 0xe5 });
        gbc.writeMem(0xc97b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc97b, gbc.sp());
        EXPECT(0x7684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xc97b));
        EXPECT(0xf6, gbc.readMem(0xc97c));
        // E5 008B
        gbc.setState(0x9ccd, 0xf81a, 0xf320, 0xa0dc, 0x5908, 0x916, 0x0, 0x0);
        gbc.writeMem(0x9ccd, { 0xe5 });
        gbc.writeMem(0xf818, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf818, gbc.sp());
        EXPECT(0x9cce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9ccd));
        EXPECT(0x16, gbc.readMem(0xf818));
        EXPECT(0x9, gbc.readMem(0xf819));
        // E5 008C
        gbc.setState(0xec09, 0xb573, 0x8d90, 0xc42e, 0xc179, 0x6b0f, 0x0, 0x0);
        gbc.writeMem(0xb571, { 0x0, 0x0 });
        gbc.writeMem(0xec09, { 0xe5 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb571, gbc.sp());
        EXPECT(0xec0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xb571));
        EXPECT(0x6b, gbc.readMem(0xb572));
        EXPECT(0xe5, gbc.readMem(0xec09));
        // E5 0094
        gbc.setState(0xa745, 0xd714, 0xbaa0, 0x464a, 0x6a06, 0xb4c1, 0x1, 0x1);
        gbc.writeMem(0xa745, { 0xe5 });
        gbc.writeMem(0xd712, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd712, gbc.sp());
        EXPECT(0xa746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa745));
        EXPECT(0xc1, gbc.readMem(0xd712));
        EXPECT(0xb4, gbc.readMem(0xd713));
        // E5 0096
        gbc.setState(0xde76, 0xfb70, 0x3fe0, 0xc517, 0x7f87, 0x7c47, 0x1, 0x1);
        gbc.writeMem(0xde76, { 0xe5 });
        gbc.writeMem(0xfb6e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfb6e, gbc.sp());
        EXPECT(0xde77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xde76));
        EXPECT(0x47, gbc.readMem(0xfb6e));
        EXPECT(0x7c, gbc.readMem(0xfb6f));
        // E5 0098
        gbc.setState(0xbbe3, 0xbd7b, 0x9110, 0x7806, 0x3b1, 0xe324, 0x0, 0x1);
        gbc.writeMem(0xbbe3, { 0xe5 });
        gbc.writeMem(0xbd79, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbd79, gbc.sp());
        EXPECT(0xbbe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xbbe3));
        EXPECT(0x24, gbc.readMem(0xbd79));
        EXPECT(0xe3, gbc.readMem(0xbd7a));
        // E5 009B
        gbc.setState(0x5e1f, 0xaf5c, 0x2a0, 0xc21b, 0x77c1, 0x3ebc, 0x0, 0x1);
        gbc.writeMem(0x5e1f, { 0xe5 });
        gbc.writeMem(0xaf5a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xaf5a, gbc.sp());
        EXPECT(0x5e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xaf5a));
        EXPECT(0x3e, gbc.readMem(0xaf5b));
        // E5 009F
        gbc.setState(0x1f8f, 0xe2d2, 0x3930, 0xc9ee, 0x253a, 0x518b, 0x1, 0x0);
        gbc.writeMem(0x1f8f, { 0xe5 });
        gbc.writeMem(0xe2d0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe2d0, gbc.sp());
        EXPECT(0x1f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xe2d0));
        EXPECT(0x51, gbc.readMem(0xe2d1));
        // E5 00A2
        gbc.setState(0xb70, 0xe20d, 0x22a0, 0x38da, 0x9913, 0x89c3, 0x0, 0x0);
        gbc.writeMem(0xb70, { 0xe5 });
        gbc.writeMem(0xe20b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe20b, gbc.sp());
        EXPECT(0xb71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xe20b));
        EXPECT(0x89, gbc.readMem(0xe20c));
        // E5 00A3
        gbc.setState(0x7360, 0xcc11, 0x85c0, 0x71ee, 0x6adc, 0xf93f, 0x0, 0x1);
        gbc.writeMem(0x7360, { 0xe5 });
        gbc.writeMem(0xcc0f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xcc0f, gbc.sp());
        EXPECT(0x7361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xcc0f));
        EXPECT(0xf9, gbc.readMem(0xcc10));
        // E5 00A9
        gbc.setState(0x159c, 0xb275, 0xd0, 0x969b, 0xff34, 0xcbf7, 0x1, 0x0);
        gbc.writeMem(0x159c, { 0xe5 });
        gbc.writeMem(0xb273, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb273, gbc.sp());
        EXPECT(0x159d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xb273));
        EXPECT(0xcb, gbc.readMem(0xb274));
        // E5 00AC
        gbc.setState(0x2be, 0xa61e, 0xfb0, 0x89a7, 0x72fd, 0x2d1f, 0x0, 0x1);
        gbc.writeMem(0x2be, { 0xe5 });
        gbc.writeMem(0xa61c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa61c, gbc.sp());
        EXPECT(0x2bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xa61c));
        EXPECT(0x2d, gbc.readMem(0xa61d));
        // E5 00AE
        gbc.setState(0x6747, 0xced4, 0x6f30, 0x86db, 0x3e82, 0x4405, 0x1, 0x1);
        gbc.writeMem(0x6747, { 0xe5 });
        gbc.writeMem(0xced2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xced2, gbc.sp());
        EXPECT(0x6748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xced2));
        EXPECT(0x44, gbc.readMem(0xced3));
        // E5 00AF
        gbc.setState(0x2cdc, 0x9f1a, 0x4dd0, 0xd397, 0xe8f5, 0x1df, 0x0, 0x0);
        gbc.writeMem(0x2cdc, { 0xe5 });
        gbc.writeMem(0x9f18, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9f18, gbc.sp());
        EXPECT(0x2cdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x9f18));
        EXPECT(0x1, gbc.readMem(0x9f19));
        // E5 00B2
        gbc.setState(0x98ad, 0x91e3, 0xd70, 0xe1e0, 0x99cf, 0x1970, 0x0, 0x1);
        gbc.writeMem(0x91e1, { 0x0, 0x0 });
        gbc.writeMem(0x98ad, { 0xe5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x91e1, gbc.sp());
        EXPECT(0x98ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x91e1));
        EXPECT(0x19, gbc.readMem(0x91e2));
        EXPECT(0xe5, gbc.readMem(0x98ad));
        // E5 00B4
        gbc.setState(0xe309, 0xdf7f, 0x9110, 0xccfe, 0xf6d4, 0x4b5f, 0x1, 0x1);
        gbc.writeMem(0xdf7d, { 0x0, 0x0 });
        gbc.writeMem(0xe309, { 0xe5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xdf7d, gbc.sp());
        EXPECT(0xe30a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xdf7d));
        EXPECT(0x4b, gbc.readMem(0xdf7e));
        EXPECT(0xe5, gbc.readMem(0xe309));
        // E5 00B5
        gbc.setState(0xb2f3, 0xab9c, 0x2ca0, 0x9850, 0x707c, 0x3895, 0x0, 0x1);
        gbc.writeMem(0xab9a, { 0x0, 0x0 });
        gbc.writeMem(0xb2f3, { 0xe5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xab9a, gbc.sp());
        EXPECT(0xb2f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xab9a));
        EXPECT(0x38, gbc.readMem(0xab9b));
        EXPECT(0xe5, gbc.readMem(0xb2f3));
        // E5 00B6
        gbc.setState(0x2934, 0xb8ff, 0x4b70, 0x3e8b, 0x9d8d, 0x9b77, 0x1, 0x1);
        gbc.writeMem(0x2934, { 0xe5 });
        gbc.writeMem(0xb8fd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb8fd, gbc.sp());
        EXPECT(0x2935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xb8fd));
        EXPECT(0x9b, gbc.readMem(0xb8fe));
        // E5 00B8
        gbc.setState(0x4bf0, 0xe7bf, 0xb4f0, 0x67ad, 0xb5c1, 0x509b, 0x0, 0x1);
        gbc.writeMem(0x4bf0, { 0xe5 });
        gbc.writeMem(0xe7bd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe7bd, gbc.sp());
        EXPECT(0x4bf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe7bd));
        EXPECT(0x50, gbc.readMem(0xe7be));
        // E5 00BA
        gbc.setState(0x4ca1, 0xd6c3, 0xb810, 0xa4e7, 0xed87, 0x4f10, 0x0, 0x0);
        gbc.writeMem(0x4ca1, { 0xe5 });
        gbc.writeMem(0xd6c1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd6c1, gbc.sp());
        EXPECT(0x4ca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd6c1));
        EXPECT(0x4f, gbc.readMem(0xd6c2));
        // E5 00C1
        gbc.setState(0x7b55, 0xd3aa, 0xfb20, 0x82cc, 0x7954, 0x86ef, 0x0, 0x1);
        gbc.writeMem(0x7b55, { 0xe5 });
        gbc.writeMem(0xd3a8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd3a8, gbc.sp());
        EXPECT(0x7b56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xd3a8));
        EXPECT(0x86, gbc.readMem(0xd3a9));
        // E5 00C2
        gbc.setState(0xc77b, 0xd20b, 0x21d0, 0x8a50, 0xe2e9, 0x2ad8, 0x0, 0x1);
        gbc.writeMem(0xc77b, { 0xe5 });
        gbc.writeMem(0xd209, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd209, gbc.sp());
        EXPECT(0xc77c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xc77b));
        EXPECT(0xd8, gbc.readMem(0xd209));
        EXPECT(0x2a, gbc.readMem(0xd20a));
        // E5 00C3
        gbc.setState(0xc36b, 0xf35c, 0x5350, 0xe8fe, 0xed15, 0x3bb3, 0x1, 0x0);
        gbc.writeMem(0xc36b, { 0xe5 });
        gbc.writeMem(0xf35a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf35a, gbc.sp());
        EXPECT(0xc36c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xc36b));
        EXPECT(0xb3, gbc.readMem(0xf35a));
        EXPECT(0x3b, gbc.readMem(0xf35b));
        // E5 00C4
        gbc.setState(0xa487, 0x89a2, 0x96e0, 0x4400, 0x3a28, 0xd29a, 0x0, 0x1);
        gbc.writeMem(0x89a0, { 0x0, 0x0 });
        gbc.writeMem(0xa487, { 0xe5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x89a0, gbc.sp());
        EXPECT(0xa488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x89a0));
        EXPECT(0xd2, gbc.readMem(0x89a1));
        EXPECT(0xe5, gbc.readMem(0xa487));
        // E5 00C5
        gbc.setState(0xe095, 0x9755, 0xb7b0, 0x82d9, 0x5187, 0x2f06, 0x1, 0x1);
        gbc.writeMem(0x9753, { 0x0, 0x0 });
        gbc.writeMem(0xe095, { 0xe5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9753, gbc.sp());
        EXPECT(0xe096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x9753));
        EXPECT(0x2f, gbc.readMem(0x9754));
        EXPECT(0xe5, gbc.readMem(0xe095));
        // E5 00C7
        gbc.setState(0x85aa, 0xe75f, 0x1060, 0xc9c, 0x97ab, 0x542b, 0x0, 0x1);
        gbc.writeMem(0x85aa, { 0xe5 });
        gbc.writeMem(0xe75d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe75d, gbc.sp());
        EXPECT(0x85ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x85aa));
        EXPECT(0x2b, gbc.readMem(0xe75d));
        EXPECT(0x54, gbc.readMem(0xe75e));
        // E5 00C8
        gbc.setState(0xaa96, 0xcdd9, 0xed90, 0x4c3c, 0x58bb, 0x60b, 0x0, 0x0);
        gbc.writeMem(0xaa96, { 0xe5 });
        gbc.writeMem(0xcdd7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xcdd7, gbc.sp());
        EXPECT(0xaa97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xaa96));
        EXPECT(0xb, gbc.readMem(0xcdd7));
        EXPECT(0x6, gbc.readMem(0xcdd8));
        // E5 00CA
        gbc.setState(0xebc9, 0xbb1d, 0xa1f0, 0x387f, 0x2c26, 0xdf45, 0x1, 0x1);
        gbc.writeMem(0xbb1b, { 0x0, 0x0 });
        gbc.writeMem(0xebc9, { 0xe5 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbb1b, gbc.sp());
        EXPECT(0xebca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xbb1b));
        EXPECT(0xdf, gbc.readMem(0xbb1c));
        EXPECT(0xe5, gbc.readMem(0xebc9));
        // E5 00CB
        gbc.setState(0x62fc, 0xe67c, 0xf000, 0x265, 0xe466, 0x999f, 0x1, 0x1);
        gbc.writeMem(0x62fc, { 0xe5 });
        gbc.writeMem(0xe67a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe67a, gbc.sp());
        EXPECT(0x62fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xe67a));
        EXPECT(0x99, gbc.readMem(0xe67b));
        // E5 00CC
        gbc.setState(0x41e5, 0xf90d, 0x3d00, 0xf8b, 0x2cef, 0x3fd, 0x0, 0x0);
        gbc.writeMem(0x41e5, { 0xe5 });
        gbc.writeMem(0xf90b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf90b, gbc.sp());
        EXPECT(0x41e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xf90b));
        EXPECT(0x3, gbc.readMem(0xf90c));
        // E5 00D1
        gbc.setState(0xc13, 0xd637, 0x730, 0xd472, 0xad5a, 0xf93e, 0x1, 0x1);
        gbc.writeMem(0xc13, { 0xe5 });
        gbc.writeMem(0xd635, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd635, gbc.sp());
        EXPECT(0xc14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd635));
        EXPECT(0xf9, gbc.readMem(0xd636));
        // E5 00D2
        gbc.setState(0x3ded, 0xdb24, 0x6900, 0x33ad, 0x8687, 0x20fc, 0x1, 0x0);
        gbc.writeMem(0x3ded, { 0xe5 });
        gbc.writeMem(0xdb22, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdb22, gbc.sp());
        EXPECT(0x3dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xdb22));
        EXPECT(0x20, gbc.readMem(0xdb23));
        // E5 00D4
        gbc.setState(0x25c6, 0xc927, 0x56d0, 0x581c, 0xc9ca, 0xc2fb, 0x1, 0x0);
        gbc.writeMem(0x25c6, { 0xe5 });
        gbc.writeMem(0xc925, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc925, gbc.sp());
        EXPECT(0x25c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xc925));
        EXPECT(0xc2, gbc.readMem(0xc926));
        // E5 00D5
        gbc.setState(0xae73, 0xc6e0, 0xd260, 0xe08b, 0x979f, 0x2f86, 0x1, 0x1);
        gbc.writeMem(0xae73, { 0xe5 });
        gbc.writeMem(0xc6de, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc6de, gbc.sp());
        EXPECT(0xae74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xae73));
        EXPECT(0x86, gbc.readMem(0xc6de));
        EXPECT(0x2f, gbc.readMem(0xc6df));
        // E5 00D6
        gbc.setState(0x8e0a, 0xd08a, 0x3fc0, 0x67f6, 0x10f, 0xc8e4, 0x0, 0x0);
        gbc.writeMem(0x8e0a, { 0xe5 });
        gbc.writeMem(0xd088, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd088, gbc.sp());
        EXPECT(0x8e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x8e0a));
        EXPECT(0xe4, gbc.readMem(0xd088));
        EXPECT(0xc8, gbc.readMem(0xd089));
        // E5 00D9
        gbc.setState(0x36f7, 0x8d4a, 0x49d0, 0xa5fe, 0x98a6, 0xd284, 0x0, 0x0);
        gbc.writeMem(0x36f7, { 0xe5 });
        gbc.writeMem(0x8d48, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8d48, gbc.sp());
        EXPECT(0x36f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x8d48));
        EXPECT(0xd2, gbc.readMem(0x8d49));
        // E5 00DB
        gbc.setState(0x88e2, 0xf35f, 0xdb00, 0x8bbd, 0x6be4, 0xed6b, 0x1, 0x0);
        gbc.writeMem(0x88e2, { 0xe5 });
        gbc.writeMem(0xf35d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf35d, gbc.sp());
        EXPECT(0x88e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x88e2));
        EXPECT(0x6b, gbc.readMem(0xf35d));
        EXPECT(0xed, gbc.readMem(0xf35e));
        // E5 00DC
        gbc.setState(0x6b91, 0xa2fe, 0xb610, 0xa998, 0x895f, 0x4aff, 0x1, 0x1);
        gbc.writeMem(0x6b91, { 0xe5 });
        gbc.writeMem(0xa2fc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa2fc, gbc.sp());
        EXPECT(0x6b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xa2fc));
        EXPECT(0x4a, gbc.readMem(0xa2fd));
        // E5 00DD
        gbc.setState(0x79c9, 0xad7a, 0x4390, 0xb00f, 0xbb8b, 0xaf17, 0x1, 0x0);
        gbc.writeMem(0x79c9, { 0xe5 });
        gbc.writeMem(0xad78, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xad78, gbc.sp());
        EXPECT(0x79ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xad78));
        EXPECT(0xaf, gbc.readMem(0xad79));
        // E5 00E0
        gbc.setState(0xbabd, 0xbed3, 0xea00, 0xabba, 0x8be9, 0xc819, 0x1, 0x0);
        gbc.writeMem(0xbabd, { 0xe5 });
        gbc.writeMem(0xbed1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbed1, gbc.sp());
        EXPECT(0xbabe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xbabd));
        EXPECT(0x19, gbc.readMem(0xbed1));
        EXPECT(0xc8, gbc.readMem(0xbed2));
        // E5 00E1
        gbc.setState(0xfd2, 0xf8fc, 0x5150, 0x3bac, 0x21c1, 0xab7a, 0x1, 0x0);
        gbc.writeMem(0xfd2, { 0xe5 });
        gbc.writeMem(0xf8fa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf8fa, gbc.sp());
        EXPECT(0xfd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xf8fa));
        EXPECT(0xab, gbc.readMem(0xf8fb));
        // E5 00E2
        gbc.setState(0x5a82, 0xd581, 0x4080, 0xd5ad, 0x5a5f, 0x91b5, 0x0, 0x0);
        gbc.writeMem(0x5a82, { 0xe5 });
        gbc.writeMem(0xd57f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd57f, gbc.sp());
        EXPECT(0x5a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd57f));
        EXPECT(0x91, gbc.readMem(0xd580));
        // E5 00E3
        gbc.setState(0xe7da, 0xb591, 0x5ce0, 0xfd0a, 0xd71a, 0x4c75, 0x0, 0x1);
        gbc.writeMem(0xb58f, { 0x0, 0x0 });
        gbc.writeMem(0xe7da, { 0xe5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb58f, gbc.sp());
        EXPECT(0xe7db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xb58f));
        EXPECT(0x4c, gbc.readMem(0xb590));
        EXPECT(0xe5, gbc.readMem(0xe7da));
        // E5 00E5
        gbc.setState(0x7f76, 0xc069, 0xc1b0, 0xcd23, 0x407c, 0x9e80, 0x0, 0x1);
        gbc.writeMem(0x7f76, { 0xe5 });
        gbc.writeMem(0xc067, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc067, gbc.sp());
        EXPECT(0x7f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xc067));
        EXPECT(0x9e, gbc.readMem(0xc068));
        // E5 00E7
        gbc.setState(0x5cc1, 0xb800, 0x53b0, 0xa3df, 0x8c0b, 0x9ba9, 0x0, 0x0);
        gbc.writeMem(0x5cc1, { 0xe5 });
        gbc.writeMem(0xb7fe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb7fe, gbc.sp());
        EXPECT(0x5cc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xb7fe));
        EXPECT(0x9b, gbc.readMem(0xb7ff));
        // E5 00E9
        gbc.setState(0x74a7, 0x9649, 0x34d0, 0x9b23, 0x4499, 0x9f45, 0x1, 0x1);
        gbc.writeMem(0x74a7, { 0xe5 });
        gbc.writeMem(0x9647, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9647, gbc.sp());
        EXPECT(0x74a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x9647));
        EXPECT(0x9f, gbc.readMem(0x9648));
        // E5 00F0
        gbc.setState(0x1709, 0xab30, 0xed00, 0xf832, 0x39b6, 0x876, 0x1, 0x1);
        gbc.writeMem(0x1709, { 0xe5 });
        gbc.writeMem(0xab2e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xab2e, gbc.sp());
        EXPECT(0x170a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xab2e));
        EXPECT(0x8, gbc.readMem(0xab2f));
        // E5 00F4
        gbc.setState(0x4143, 0xbd73, 0xf7a0, 0x6858, 0xdb28, 0x4a45, 0x1, 0x0);
        gbc.writeMem(0x4143, { 0xe5 });
        gbc.writeMem(0xbd71, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbd71, gbc.sp());
        EXPECT(0x4144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xbd71));
        EXPECT(0x4a, gbc.readMem(0xbd72));
        // E5 00F5
        gbc.setState(0xaaed, 0xe427, 0x80, 0x1ba6, 0x7ff1, 0xd1c7, 0x1, 0x1);
        gbc.writeMem(0xaaed, { 0xe5 });
        gbc.writeMem(0xe425, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe425, gbc.sp());
        EXPECT(0xaaee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xaaed));
        EXPECT(0xc7, gbc.readMem(0xe425));
        EXPECT(0xd1, gbc.readMem(0xe426));
        // E5 00F6
        gbc.setState(0xddfe, 0xabad, 0x3140, 0x969a, 0x865c, 0xbd02, 0x0, 0x0);
        gbc.writeMem(0xabab, { 0x0, 0x0 });
        gbc.writeMem(0xddfe, { 0xe5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xabab, gbc.sp());
        EXPECT(0xddff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xabab));
        EXPECT(0xbd, gbc.readMem(0xabac));
        EXPECT(0xe5, gbc.readMem(0xddfe));
        // E5 00FB
        gbc.setState(0xd60c, 0xa021, 0x3cd0, 0x2201, 0x62b5, 0x8b41, 0x1, 0x1);
        gbc.writeMem(0xa01f, { 0x0, 0x0 });
        gbc.writeMem(0xd60c, { 0xe5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa01f, gbc.sp());
        EXPECT(0xd60d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xa01f));
        EXPECT(0x8b, gbc.readMem(0xa020));
        EXPECT(0xe5, gbc.readMem(0xd60c));
        // E5 00FD
        gbc.setState(0xaf22, 0x80c8, 0x9e10, 0x705d, 0xa0ed, 0x549d, 0x0, 0x0);
        gbc.writeMem(0x80c6, { 0x0, 0x0 });
        gbc.writeMem(0xaf22, { 0xe5 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x80c6, gbc.sp());
        EXPECT(0xaf23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x80c6));
        EXPECT(0x54, gbc.readMem(0x80c7));
        EXPECT(0xe5, gbc.readMem(0xaf22));
        // E5 00FF
        gbc.setState(0xda7b, 0xd95b, 0x3100, 0xdd38, 0xf93, 0x938d, 0x0, 0x0);
        gbc.writeMem(0xd959, { 0x0, 0x0 });
        gbc.writeMem(0xda7b, { 0xe5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd959, gbc.sp());
        EXPECT(0xda7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd959));
        EXPECT(0x93, gbc.readMem(0xd95a));
        EXPECT(0xe5, gbc.readMem(0xda7b));
        // E5 0101
        gbc.setState(0xba31, 0xaef7, 0x8350, 0x5dca, 0x14ff, 0x30e5, 0x1, 0x0);
        gbc.writeMem(0xaef5, { 0x0, 0x0 });
        gbc.writeMem(0xba31, { 0xe5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xaef5, gbc.sp());
        EXPECT(0xba32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xaef5));
        EXPECT(0x30, gbc.readMem(0xaef6));
        EXPECT(0xe5, gbc.readMem(0xba31));
        // E5 0104
        gbc.setState(0xc6e8, 0xc7dc, 0x2b80, 0xb092, 0x462c, 0x770c, 0x1, 0x0);
        gbc.writeMem(0xc6e8, { 0xe5 });
        gbc.writeMem(0xc7da, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc7da, gbc.sp());
        EXPECT(0xc6e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xc6e8));
        EXPECT(0xc, gbc.readMem(0xc7da));
        EXPECT(0x77, gbc.readMem(0xc7db));
        // E5 0107
        gbc.setState(0x4d9a, 0xb1ba, 0x7d90, 0xdb67, 0xa881, 0x88ef, 0x0, 0x0);
        gbc.writeMem(0x4d9a, { 0xe5 });
        gbc.writeMem(0xb1b8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb1b8, gbc.sp());
        EXPECT(0x4d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xb1b8));
        EXPECT(0x88, gbc.readMem(0xb1b9));
        // E5 010A
        gbc.setState(0x8d32, 0xac8d, 0x9750, 0x7e2f, 0x7c61, 0x3909, 0x0, 0x1);
        gbc.writeMem(0x8d32, { 0xe5 });
        gbc.writeMem(0xac8b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xac8b, gbc.sp());
        EXPECT(0x8d33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x8d32));
        EXPECT(0x9, gbc.readMem(0xac8b));
        EXPECT(0x39, gbc.readMem(0xac8c));
        // E5 010B
        gbc.setState(0x30a9, 0xbda4, 0x4850, 0x140e, 0x8a73, 0xd595, 0x0, 0x0);
        gbc.writeMem(0x30a9, { 0xe5 });
        gbc.writeMem(0xbda2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbda2, gbc.sp());
        EXPECT(0x30aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbda2));
        EXPECT(0xd5, gbc.readMem(0xbda3));
        // E5 010C
        gbc.setState(0x482d, 0xff5e, 0xa7f0, 0xa5f5, 0x7c7e, 0xf531, 0x0, 0x0);
        gbc.writeMem(0x482d, { 0xe5 });
        gbc.writeMem(0xff5c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xff5c, gbc.sp());
        EXPECT(0x482e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xff5c));
        EXPECT(0xf5, gbc.readMem(0xff5d));
        // E5 010D
        gbc.setState(0xe527, 0xb792, 0xac50, 0x1a13, 0xd9db, 0x433, 0x1, 0x0);
        gbc.writeMem(0xb790, { 0x0, 0x0 });
        gbc.writeMem(0xe527, { 0xe5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb790, gbc.sp());
        EXPECT(0xe528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb790));
        EXPECT(0x4, gbc.readMem(0xb791));
        EXPECT(0xe5, gbc.readMem(0xe527));
        // E5 010F
        gbc.setState(0x6312, 0xff52, 0x6740, 0x7b9f, 0x2d11, 0xf3fc, 0x1, 0x1);
        gbc.writeMem(0x6312, { 0xe5 });
        gbc.writeMem(0xff50, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xff50, gbc.sp());
        EXPECT(0x6313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xff50));
        EXPECT(0xf3, gbc.readMem(0xff51));
        // E5 0111
        gbc.setState(0xe0be, 0xf5b9, 0xb5b0, 0xfc4c, 0x4a99, 0x2de9, 0x0, 0x0);
        gbc.writeMem(0xe0be, { 0xe5 });
        gbc.writeMem(0xf5b7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf5b7, gbc.sp());
        EXPECT(0xe0bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xe0be));
        EXPECT(0xe9, gbc.readMem(0xf5b7));
        EXPECT(0x2d, gbc.readMem(0xf5b8));
        // E5 0113
        gbc.setState(0x51ed, 0xdb67, 0x2380, 0x44c9, 0xa62f, 0xfee7, 0x0, 0x0);
        gbc.writeMem(0x51ed, { 0xe5 });
        gbc.writeMem(0xdb65, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xdb65, gbc.sp());
        EXPECT(0x51ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xdb65));
        EXPECT(0xfe, gbc.readMem(0xdb66));
        // E5 0114
        gbc.setState(0x482a, 0xaf7d, 0xcd40, 0x7838, 0x862d, 0x562, 0x1, 0x1);
        gbc.writeMem(0x482a, { 0xe5 });
        gbc.writeMem(0xaf7b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xaf7b, gbc.sp());
        EXPECT(0x482b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xaf7b));
        EXPECT(0x5, gbc.readMem(0xaf7c));
        // E5 0115
        gbc.setState(0xdc08, 0xd896, 0xb70, 0x957d, 0x83a5, 0x2642, 0x1, 0x0);
        gbc.writeMem(0xd894, { 0x0, 0x0 });
        gbc.writeMem(0xdc08, { 0xe5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd894, gbc.sp());
        EXPECT(0xdc09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd894));
        EXPECT(0x26, gbc.readMem(0xd895));
        EXPECT(0xe5, gbc.readMem(0xdc08));
        // E5 0116
        gbc.setState(0x6597, 0xe419, 0x1ab0, 0xcbf7, 0xb890, 0xbaf4, 0x0, 0x1);
        gbc.writeMem(0x6597, { 0xe5 });
        gbc.writeMem(0xe417, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe417, gbc.sp());
        EXPECT(0x6598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xe417));
        EXPECT(0xba, gbc.readMem(0xe418));
        // E5 0117
        gbc.setState(0x7d99, 0xce08, 0x7ac0, 0xb9a2, 0xcfba, 0x3a69, 0x0, 0x1);
        gbc.writeMem(0x7d99, { 0xe5 });
        gbc.writeMem(0xce06, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xce06, gbc.sp());
        EXPECT(0x7d9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xce06));
        EXPECT(0x3a, gbc.readMem(0xce07));
        // E5 0119
        gbc.setState(0x137f, 0xa4a5, 0x2210, 0xe483, 0x8911, 0x313b, 0x1, 0x1);
        gbc.writeMem(0x137f, { 0xe5 });
        gbc.writeMem(0xa4a3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa4a3, gbc.sp());
        EXPECT(0x1380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xa4a3));
        EXPECT(0x31, gbc.readMem(0xa4a4));
        // E5 011B
        gbc.setState(0x233c, 0xaac0, 0xae80, 0x5971, 0xfe9c, 0x7c00, 0x0, 0x1);
        gbc.writeMem(0x233c, { 0xe5 });
        gbc.writeMem(0xaabe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xaabe, gbc.sp());
        EXPECT(0x233d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xaabe));
        EXPECT(0x7c, gbc.readMem(0xaabf));
        // E5 011C
        gbc.setState(0x13ea, 0xe113, 0x4dd0, 0x8e9d, 0xc876, 0x8b2c, 0x1, 0x0);
        gbc.writeMem(0x13ea, { 0xe5 });
        gbc.writeMem(0xe111, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe111, gbc.sp());
        EXPECT(0x13eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe111));
        EXPECT(0x8b, gbc.readMem(0xe112));
        // E5 011D
        gbc.setState(0xcc7a, 0xeda9, 0x9f50, 0xc87c, 0xafd6, 0x1a6b, 0x1, 0x0);
        gbc.writeMem(0xcc7a, { 0xe5 });
        gbc.writeMem(0xeda7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xeda7, gbc.sp());
        EXPECT(0xcc7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xcc7a));
        EXPECT(0x6b, gbc.readMem(0xeda7));
        EXPECT(0x1a, gbc.readMem(0xeda8));
        // E5 011E
        gbc.setState(0xdff2, 0xd2b7, 0x6070, 0x3813, 0x49a8, 0x4166, 0x1, 0x1);
        gbc.writeMem(0xd2b5, { 0x0, 0x0 });
        gbc.writeMem(0xdff2, { 0xe5 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd2b5, gbc.sp());
        EXPECT(0xdff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xd2b5));
        EXPECT(0x41, gbc.readMem(0xd2b6));
        EXPECT(0xe5, gbc.readMem(0xdff2));
        // E5 0123
        gbc.setState(0x3ebd, 0xa873, 0x8bd0, 0x3ed1, 0x41a1, 0xccb7, 0x1, 0x1);
        gbc.writeMem(0x3ebd, { 0xe5 });
        gbc.writeMem(0xa871, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa871, gbc.sp());
        EXPECT(0x3ebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xa871));
        EXPECT(0xcc, gbc.readMem(0xa872));
        // E5 0124
        gbc.setState(0x38b0, 0xd887, 0x6440, 0x3eb5, 0xc2d4, 0xf379, 0x1, 0x0);
        gbc.writeMem(0x38b0, { 0xe5 });
        gbc.writeMem(0xd885, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd885, gbc.sp());
        EXPECT(0x38b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd885));
        EXPECT(0xf3, gbc.readMem(0xd886));
        // E5 0125
        gbc.setState(0x6f03, 0xa0cb, 0x3970, 0x447c, 0x8bdd, 0xfc67, 0x0, 0x1);
        gbc.writeMem(0x6f03, { 0xe5 });
        gbc.writeMem(0xa0c9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa0c9, gbc.sp());
        EXPECT(0x6f04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xa0c9));
        EXPECT(0xfc, gbc.readMem(0xa0ca));
        // E5 0126
        gbc.setState(0x826, 0xbf47, 0x5820, 0x5a59, 0x506b, 0x5518, 0x1, 0x1);
        gbc.writeMem(0x826, { 0xe5 });
        gbc.writeMem(0xbf45, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbf45, gbc.sp());
        EXPECT(0x827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xbf45));
        EXPECT(0x55, gbc.readMem(0xbf46));
        // E5 0127
        gbc.setState(0xa711, 0xed24, 0x8660, 0x3b4b, 0x9185, 0x10a0, 0x1, 0x1);
        gbc.writeMem(0xa711, { 0xe5 });
        gbc.writeMem(0xed22, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xed22, gbc.sp());
        EXPECT(0xa712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa711));
        EXPECT(0xa0, gbc.readMem(0xed22));
        EXPECT(0x10, gbc.readMem(0xed23));
        // E5 0128
        gbc.setState(0x7238, 0xc7db, 0x74d0, 0xe40c, 0x8c57, 0xdedc, 0x1, 0x0);
        gbc.writeMem(0x7238, { 0xe5 });
        gbc.writeMem(0xc7d9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc7d9, gbc.sp());
        EXPECT(0x7239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xc7d9));
        EXPECT(0xde, gbc.readMem(0xc7da));
        // E5 012A
        gbc.setState(0xde51, 0x9339, 0x17d0, 0x2ed7, 0xc6e2, 0xefd, 0x0, 0x1);
        gbc.writeMem(0x9337, { 0x0, 0x0 });
        gbc.writeMem(0xde51, { 0xe5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9337, gbc.sp());
        EXPECT(0xde52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x9337));
        EXPECT(0xe, gbc.readMem(0x9338));
        EXPECT(0xe5, gbc.readMem(0xde51));
        // E5 012B
        gbc.setState(0x7b46, 0x88f1, 0xc50, 0x130, 0xaa60, 0x2e1c, 0x0, 0x1);
        gbc.writeMem(0x7b46, { 0xe5 });
        gbc.writeMem(0x88ef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x88ef, gbc.sp());
        EXPECT(0x7b47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x88ef));
        EXPECT(0x2e, gbc.readMem(0x88f0));
        // E5 012C
        gbc.setState(0x547d, 0xd1b6, 0x3aa0, 0xab8c, 0x31c0, 0x7fbb, 0x0, 0x1);
        gbc.writeMem(0x547d, { 0xe5 });
        gbc.writeMem(0xd1b4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd1b4, gbc.sp());
        EXPECT(0x547e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd1b4));
        EXPECT(0x7f, gbc.readMem(0xd1b5));
        // E5 012E
        gbc.setState(0xb16a, 0xb789, 0x9a0, 0x6101, 0x32f1, 0xbf2f, 0x1, 0x0);
        gbc.writeMem(0xb16a, { 0xe5 });
        gbc.writeMem(0xb787, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb787, gbc.sp());
        EXPECT(0xb16b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xb16a));
        EXPECT(0x2f, gbc.readMem(0xb787));
        EXPECT(0xbf, gbc.readMem(0xb788));
        // E5 0135
        gbc.setState(0x4795, 0x834b, 0xddc0, 0xb587, 0x62a1, 0xf460, 0x0, 0x0);
        gbc.writeMem(0x4795, { 0xe5 });
        gbc.writeMem(0x8349, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8349, gbc.sp());
        EXPECT(0x4796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x8349));
        EXPECT(0xf4, gbc.readMem(0x834a));
        // E5 0137
        gbc.setState(0x8067, 0xd7ba, 0x19f0, 0x28f3, 0xeb48, 0xa7b1, 0x0, 0x0);
        gbc.writeMem(0x8067, { 0xe5 });
        gbc.writeMem(0xd7b8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd7b8, gbc.sp());
        EXPECT(0x8068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x8067));
        EXPECT(0xb1, gbc.readMem(0xd7b8));
        EXPECT(0xa7, gbc.readMem(0xd7b9));
        // E5 0138
        gbc.setState(0xd836, 0x9d80, 0x5c00, 0xfeb5, 0xcde1, 0xa00d, 0x1, 0x1);
        gbc.writeMem(0x9d7e, { 0x0, 0x0 });
        gbc.writeMem(0xd836, { 0xe5 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9d7e, gbc.sp());
        EXPECT(0xd837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x9d7e));
        EXPECT(0xa0, gbc.readMem(0x9d7f));
        EXPECT(0xe5, gbc.readMem(0xd836));
        // E5 013B
        gbc.setState(0xd65a, 0x9108, 0x5e30, 0xbd4a, 0x292f, 0xb933, 0x1, 0x1);
        gbc.writeMem(0x9106, { 0x0, 0x0 });
        gbc.writeMem(0xd65a, { 0xe5 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9106, gbc.sp());
        EXPECT(0xd65b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x9106));
        EXPECT(0xb9, gbc.readMem(0x9107));
        EXPECT(0xe5, gbc.readMem(0xd65a));
        // E5 013D
        gbc.setState(0xa498, 0x9469, 0x6880, 0x9e1f, 0x22ed, 0xbe8b, 0x1, 0x1);
        gbc.writeMem(0x9467, { 0x0, 0x0 });
        gbc.writeMem(0xa498, { 0xe5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9467, gbc.sp());
        EXPECT(0xa499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x9467));
        EXPECT(0xbe, gbc.readMem(0x9468));
        EXPECT(0xe5, gbc.readMem(0xa498));
        // E5 013E
        gbc.setState(0xd438, 0xe12b, 0x77e0, 0xbb37, 0xaf23, 0xefd4, 0x1, 0x1);
        gbc.writeMem(0xd438, { 0xe5 });
        gbc.writeMem(0xe129, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe129, gbc.sp());
        EXPECT(0xd439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xd438));
        EXPECT(0xd4, gbc.readMem(0xe129));
        EXPECT(0xef, gbc.readMem(0xe12a));
        // E5 013F
        gbc.setState(0xd072, 0xfbcc, 0x8720, 0xe495, 0xe6e0, 0x9e41, 0x0, 0x0);
        gbc.writeMem(0xd072, { 0xe5 });
        gbc.writeMem(0xfbca, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xfbca, gbc.sp());
        EXPECT(0xd073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xd072));
        EXPECT(0x41, gbc.readMem(0xfbca));
        EXPECT(0x9e, gbc.readMem(0xfbcb));
        // E5 0140
        gbc.setState(0x4a10, 0xaf16, 0xfe00, 0xa61a, 0xb869, 0x980b, 0x0, 0x1);
        gbc.writeMem(0x4a10, { 0xe5 });
        gbc.writeMem(0xaf14, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xaf14, gbc.sp());
        EXPECT(0x4a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xaf14));
        EXPECT(0x98, gbc.readMem(0xaf15));
        // E5 0143
        gbc.setState(0x6549, 0xa0e8, 0x25a0, 0x4c66, 0xe2eb, 0x1e82, 0x0, 0x1);
        gbc.writeMem(0x6549, { 0xe5 });
        gbc.writeMem(0xa0e6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa0e6, gbc.sp());
        EXPECT(0x654a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa0e6));
        EXPECT(0x1e, gbc.readMem(0xa0e7));
        // E5 0147
        gbc.setState(0x6f42, 0x88b0, 0xf6c0, 0x93c4, 0x36d1, 0x49ca, 0x0, 0x1);
        gbc.writeMem(0x6f42, { 0xe5 });
        gbc.writeMem(0x88ae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x88ae, gbc.sp());
        EXPECT(0x6f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x88ae));
        EXPECT(0x49, gbc.readMem(0x88af));
        // E5 0148
        gbc.setState(0x4717, 0xb1a1, 0x9870, 0x459c, 0x512f, 0x6635, 0x0, 0x0);
        gbc.writeMem(0x4717, { 0xe5 });
        gbc.writeMem(0xb19f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb19f, gbc.sp());
        EXPECT(0x4718, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xb19f));
        EXPECT(0x66, gbc.readMem(0xb1a0));
        // E5 0149
        gbc.setState(0xa017, 0x85cd, 0xdfd0, 0x56ae, 0xc780, 0xa7e9, 0x0, 0x1);
        gbc.writeMem(0x85cb, { 0x0, 0x0 });
        gbc.writeMem(0xa017, { 0xe5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x85cb, gbc.sp());
        EXPECT(0xa018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x85cb));
        EXPECT(0xa7, gbc.readMem(0x85cc));
        EXPECT(0xe5, gbc.readMem(0xa017));
        // E5 014A
        gbc.setState(0x67c7, 0xd228, 0x5320, 0x919b, 0xa6a0, 0xe1f0, 0x0, 0x0);
        gbc.writeMem(0x67c7, { 0xe5 });
        gbc.writeMem(0xd226, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd226, gbc.sp());
        EXPECT(0x67c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xd226));
        EXPECT(0xe1, gbc.readMem(0xd227));
        // E5 014C
        gbc.setState(0x3296, 0x8fe8, 0xff40, 0xad53, 0xe803, 0x5da5, 0x0, 0x0);
        gbc.writeMem(0x3296, { 0xe5 });
        gbc.writeMem(0x8fe6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8fe6, gbc.sp());
        EXPECT(0x3297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x8fe6));
        EXPECT(0x5d, gbc.readMem(0x8fe7));
        // E5 014D
        gbc.setState(0x9f16, 0xe10d, 0xadf0, 0x5afb, 0x3397, 0x5ddc, 0x0, 0x1);
        gbc.writeMem(0x9f16, { 0xe5 });
        gbc.writeMem(0xe10b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe10b, gbc.sp());
        EXPECT(0x9f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9f16));
        EXPECT(0xdc, gbc.readMem(0xe10b));
        EXPECT(0x5d, gbc.readMem(0xe10c));
        // E5 014E
        gbc.setState(0x2960, 0xe2cb, 0xbfe0, 0x28cf, 0x6c0e, 0x6a5b, 0x0, 0x0);
        gbc.writeMem(0x2960, { 0xe5 });
        gbc.writeMem(0xe2c9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe2c9, gbc.sp());
        EXPECT(0x2961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe2c9));
        EXPECT(0x6a, gbc.readMem(0xe2ca));
        // E5 0153
        gbc.setState(0x85a, 0xcf10, 0x3430, 0x290d, 0x44ce, 0x5e0c, 0x0, 0x0);
        gbc.writeMem(0x85a, { 0xe5 });
        gbc.writeMem(0xcf0e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xcf0e, gbc.sp());
        EXPECT(0x85b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcf0e));
        EXPECT(0x5e, gbc.readMem(0xcf0f));
        // E5 0155
        gbc.setState(0x468b, 0xe0d9, 0xdc0, 0xcb24, 0x5ed1, 0x38cd, 0x0, 0x1);
        gbc.writeMem(0x468b, { 0xe5 });
        gbc.writeMem(0xe0d7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe0d7, gbc.sp());
        EXPECT(0x468c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xe0d7));
        EXPECT(0x38, gbc.readMem(0xe0d8));
        // E5 0156
        gbc.setState(0x77f7, 0xd53c, 0x87d0, 0xe033, 0x88e8, 0x5036, 0x1, 0x0);
        gbc.writeMem(0x77f7, { 0xe5 });
        gbc.writeMem(0xd53a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd53a, gbc.sp());
        EXPECT(0x77f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xd53a));
        EXPECT(0x50, gbc.readMem(0xd53b));
        // E5 0157
        gbc.setState(0xa477, 0xa5df, 0xb760, 0x8548, 0xfb95, 0x94af, 0x1, 0x1);
        gbc.writeMem(0xa477, { 0xe5 });
        gbc.writeMem(0xa5dd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa5dd, gbc.sp());
        EXPECT(0xa478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa477));
        EXPECT(0xaf, gbc.readMem(0xa5dd));
        EXPECT(0x94, gbc.readMem(0xa5de));
        // E5 0159
        gbc.setState(0x7643, 0xdf5f, 0xe5b0, 0x3942, 0xd7fc, 0x74ad, 0x0, 0x1);
        gbc.writeMem(0x7643, { 0xe5 });
        gbc.writeMem(0xdf5d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xdf5d, gbc.sp());
        EXPECT(0x7644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xdf5d));
        EXPECT(0x74, gbc.readMem(0xdf5e));
        // E5 015A
        gbc.setState(0x826f, 0xc62e, 0xb950, 0x93ef, 0xaf9f, 0x2e52, 0x0, 0x1);
        gbc.writeMem(0x826f, { 0xe5 });
        gbc.writeMem(0xc62c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc62c, gbc.sp());
        EXPECT(0x8270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x826f));
        EXPECT(0x52, gbc.readMem(0xc62c));
        EXPECT(0x2e, gbc.readMem(0xc62d));
        // E5 015B
        gbc.setState(0x1f7b, 0xfc7f, 0x1000, 0x1138, 0x1abd, 0xca5a, 0x1, 0x0);
        gbc.writeMem(0x1f7b, { 0xe5 });
        gbc.writeMem(0xfc7d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfc7d, gbc.sp());
        EXPECT(0x1f7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xfc7d));
        EXPECT(0xca, gbc.readMem(0xfc7e));
        // E5 015C
        gbc.setState(0xee33, 0xa01a, 0x4a80, 0xead5, 0xba3, 0x17c8, 0x0, 0x1);
        gbc.writeMem(0xa018, { 0x0, 0x0 });
        gbc.writeMem(0xee33, { 0xe5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa018, gbc.sp());
        EXPECT(0xee34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa018));
        EXPECT(0x17, gbc.readMem(0xa019));
        EXPECT(0xe5, gbc.readMem(0xee33));
        // E5 015F
        gbc.setState(0x21e6, 0xdf7d, 0x2400, 0xf6a1, 0x583b, 0x4bc5, 0x0, 0x0);
        gbc.writeMem(0x21e6, { 0xe5 });
        gbc.writeMem(0xdf7b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdf7b, gbc.sp());
        EXPECT(0x21e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xdf7b));
        EXPECT(0x4b, gbc.readMem(0xdf7c));
        // E5 0160
        gbc.setState(0x3f30, 0xc12a, 0xb120, 0x2e3c, 0x3ca4, 0xf041, 0x1, 0x1);
        gbc.writeMem(0x3f30, { 0xe5 });
        gbc.writeMem(0xc128, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc128, gbc.sp());
        EXPECT(0x3f31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xc128));
        EXPECT(0xf0, gbc.readMem(0xc129));
        // E5 0163
        gbc.setState(0xe38b, 0xb692, 0xd190, 0x5697, 0xac12, 0xa63d, 0x1, 0x0);
        gbc.writeMem(0xb690, { 0x0, 0x0 });
        gbc.writeMem(0xe38b, { 0xe5 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb690, gbc.sp());
        EXPECT(0xe38c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xb690));
        EXPECT(0xa6, gbc.readMem(0xb691));
        EXPECT(0xe5, gbc.readMem(0xe38b));
        // E5 0164
        gbc.setState(0x7fbd, 0xfad0, 0x1ff0, 0xa0ea, 0xe90d, 0x6a7d, 0x1, 0x0);
        gbc.writeMem(0x7fbd, { 0xe5 });
        gbc.writeMem(0xface, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xface, gbc.sp());
        EXPECT(0x7fbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xface));
        EXPECT(0x6a, gbc.readMem(0xfacf));
        // E5 0166
        gbc.setState(0xe0d0, 0xbed8, 0xf680, 0xf8b4, 0x8370, 0x262d, 0x1, 0x1);
        gbc.writeMem(0xbed6, { 0x0, 0x0 });
        gbc.writeMem(0xe0d0, { 0xe5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbed6, gbc.sp());
        EXPECT(0xe0d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbed6));
        EXPECT(0x26, gbc.readMem(0xbed7));
        EXPECT(0xe5, gbc.readMem(0xe0d0));
        // E5 016F
        gbc.setState(0x9918, 0xfd6c, 0xf9c0, 0xb7fe, 0x884f, 0x6959, 0x0, 0x0);
        gbc.writeMem(0x9918, { 0xe5 });
        gbc.writeMem(0xfd6a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xfd6a, gbc.sp());
        EXPECT(0x9919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9918));
        EXPECT(0x59, gbc.readMem(0xfd6a));
        EXPECT(0x69, gbc.readMem(0xfd6b));
        // E5 0170
        gbc.setState(0xe3bf, 0xa025, 0x7140, 0xed61, 0x1e62, 0x3500, 0x1, 0x1);
        gbc.writeMem(0xa023, { 0x0, 0x0 });
        gbc.writeMem(0xe3bf, { 0xe5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa023, gbc.sp());
        EXPECT(0xe3c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa023));
        EXPECT(0x35, gbc.readMem(0xa024));
        EXPECT(0xe5, gbc.readMem(0xe3bf));
        // E5 0176
        gbc.setState(0xed98, 0xac26, 0xc290, 0x924a, 0xd697, 0x9876, 0x1, 0x1);
        gbc.writeMem(0xac24, { 0x0, 0x0 });
        gbc.writeMem(0xed98, { 0xe5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xac24, gbc.sp());
        EXPECT(0xed99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xac24));
        EXPECT(0x98, gbc.readMem(0xac25));
        EXPECT(0xe5, gbc.readMem(0xed98));
        // E5 0177
        gbc.setState(0x89cf, 0xe8d5, 0x8e40, 0x63d1, 0xa399, 0x8b95, 0x0, 0x0);
        gbc.writeMem(0x89cf, { 0xe5 });
        gbc.writeMem(0xe8d3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe8d3, gbc.sp());
        EXPECT(0x89d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x89cf));
        EXPECT(0x95, gbc.readMem(0xe8d3));
        EXPECT(0x8b, gbc.readMem(0xe8d4));
        // E5 017B
        gbc.setState(0x96e0, 0x8494, 0xca20, 0x2d4e, 0xa194, 0xceb6, 0x0, 0x0);
        gbc.writeMem(0x8492, { 0x0, 0x0 });
        gbc.writeMem(0x96e0, { 0xe5 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8492, gbc.sp());
        EXPECT(0x96e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8492));
        EXPECT(0xce, gbc.readMem(0x8493));
        EXPECT(0xe5, gbc.readMem(0x96e0));
        // E5 017F
        gbc.setState(0xb503, 0xaa22, 0xe150, 0x3497, 0xc3c4, 0xf3fc, 0x1, 0x1);
        gbc.writeMem(0xaa20, { 0x0, 0x0 });
        gbc.writeMem(0xb503, { 0xe5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xaa20, gbc.sp());
        EXPECT(0xb504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xaa20));
        EXPECT(0xf3, gbc.readMem(0xaa21));
        EXPECT(0xe5, gbc.readMem(0xb503));
        // E5 0180
        gbc.setState(0x9593, 0xf1c5, 0x4260, 0x364, 0x200e, 0x71a4, 0x1, 0x1);
        gbc.writeMem(0x9593, { 0xe5 });
        gbc.writeMem(0xf1c3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf1c3, gbc.sp());
        EXPECT(0x9594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9593));
        EXPECT(0xa4, gbc.readMem(0xf1c3));
        EXPECT(0x71, gbc.readMem(0xf1c4));
        // E5 0183
        gbc.setState(0x4d61, 0xab37, 0x4c30, 0x3212, 0xb193, 0x198b, 0x1, 0x0);
        gbc.writeMem(0x4d61, { 0xe5 });
        gbc.writeMem(0xab35, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xab35, gbc.sp());
        EXPECT(0x4d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xab35));
        EXPECT(0x19, gbc.readMem(0xab36));
        // E5 0185
        gbc.setState(0x9172, 0xcc7c, 0xbea0, 0x59f6, 0xad0, 0x310a, 0x1, 0x0);
        gbc.writeMem(0x9172, { 0xe5 });
        gbc.writeMem(0xcc7a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcc7a, gbc.sp());
        EXPECT(0x9173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9172));
        EXPECT(0xa, gbc.readMem(0xcc7a));
        EXPECT(0x31, gbc.readMem(0xcc7b));
        // E5 0186
        gbc.setState(0xdb72, 0xef1b, 0x35c0, 0x8c34, 0xf194, 0xf1e, 0x0, 0x1);
        gbc.writeMem(0xdb72, { 0xe5 });
        gbc.writeMem(0xef19, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xef19, gbc.sp());
        EXPECT(0xdb73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xdb72));
        EXPECT(0x1e, gbc.readMem(0xef19));
        EXPECT(0xf, gbc.readMem(0xef1a));
        // E5 018A
        gbc.setState(0x6851, 0xaca9, 0xae0, 0x123e, 0x6d80, 0x1ab4, 0x0, 0x0);
        gbc.writeMem(0x6851, { 0xe5 });
        gbc.writeMem(0xaca7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xaca7, gbc.sp());
        EXPECT(0x6852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xaca7));
        EXPECT(0x1a, gbc.readMem(0xaca8));
        // E5 018D
        gbc.setState(0xd18f, 0x9fac, 0x8710, 0xd53b, 0x3aa, 0x4e45, 0x1, 0x0);
        gbc.writeMem(0x9faa, { 0x0, 0x0 });
        gbc.writeMem(0xd18f, { 0xe5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9faa, gbc.sp());
        EXPECT(0xd190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x9faa));
        EXPECT(0x4e, gbc.readMem(0x9fab));
        EXPECT(0xe5, gbc.readMem(0xd18f));
        // E5 018E
        gbc.setState(0x2e04, 0xd32c, 0x1a50, 0x1323, 0x4996, 0x6cb0, 0x1, 0x1);
        gbc.writeMem(0x2e04, { 0xe5 });
        gbc.writeMem(0xd32a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd32a, gbc.sp());
        EXPECT(0x2e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd32a));
        EXPECT(0x6c, gbc.readMem(0xd32b));
        // E5 0191
        gbc.setState(0x3d46, 0x84c2, 0x25f0, 0xbaba, 0xe9d2, 0x5235, 0x0, 0x0);
        gbc.writeMem(0x3d46, { 0xe5 });
        gbc.writeMem(0x84c0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x84c0, gbc.sp());
        EXPECT(0x3d47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x84c0));
        EXPECT(0x52, gbc.readMem(0x84c1));
        // E5 0193
        gbc.setState(0xad97, 0xed91, 0x2cb0, 0xe0d6, 0x1d6c, 0xc072, 0x0, 0x1);
        gbc.writeMem(0xad97, { 0xe5 });
        gbc.writeMem(0xed8f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xed8f, gbc.sp());
        EXPECT(0xad98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xad97));
        EXPECT(0x72, gbc.readMem(0xed8f));
        EXPECT(0xc0, gbc.readMem(0xed90));
        // E5 0196
        gbc.setState(0x327c, 0x8c29, 0xa350, 0x4c9a, 0xfd3c, 0x42cc, 0x1, 0x1);
        gbc.writeMem(0x327c, { 0xe5 });
        gbc.writeMem(0x8c27, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8c27, gbc.sp());
        EXPECT(0x327d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0x8c27));
        EXPECT(0x42, gbc.readMem(0x8c28));
        // E5 0197
        gbc.setState(0x196f, 0xbdc0, 0xbc0, 0xa45c, 0xfeb1, 0x14ff, 0x0, 0x0);
        gbc.writeMem(0x196f, { 0xe5 });
        gbc.writeMem(0xbdbe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbdbe, gbc.sp());
        EXPECT(0x1970, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xbdbe));
        EXPECT(0x14, gbc.readMem(0xbdbf));
        // E5 0198
        gbc.setState(0xd192, 0x8d18, 0xdd50, 0x46fd, 0xf49e, 0x2845, 0x0, 0x1);
        gbc.writeMem(0x8d16, { 0x0, 0x0 });
        gbc.writeMem(0xd192, { 0xe5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8d16, gbc.sp());
        EXPECT(0xd193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x8d16));
        EXPECT(0x28, gbc.readMem(0x8d17));
        EXPECT(0xe5, gbc.readMem(0xd192));
        // E5 0199
        gbc.setState(0xbf71, 0x9c96, 0x3710, 0xcabe, 0x282b, 0x54c3, 0x0, 0x1);
        gbc.writeMem(0x9c94, { 0x0, 0x0 });
        gbc.writeMem(0xbf71, { 0xe5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9c94, gbc.sp());
        EXPECT(0xbf72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9c94));
        EXPECT(0x54, gbc.readMem(0x9c95));
        EXPECT(0xe5, gbc.readMem(0xbf71));
        // E5 019A
        gbc.setState(0x5531, 0xeb5b, 0xae10, 0x607c, 0xd04a, 0xc408, 0x0, 0x1);
        gbc.writeMem(0x5531, { 0xe5 });
        gbc.writeMem(0xeb59, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xeb59, gbc.sp());
        EXPECT(0x5532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xeb59));
        EXPECT(0xc4, gbc.readMem(0xeb5a));
        // E5 019C
        gbc.setState(0xca20, 0xd89c, 0xaea0, 0x38f6, 0x4196, 0xc59e, 0x0, 0x0);
        gbc.writeMem(0xca20, { 0xe5 });
        gbc.writeMem(0xd89a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd89a, gbc.sp());
        EXPECT(0xca21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xca20));
        EXPECT(0x9e, gbc.readMem(0xd89a));
        EXPECT(0xc5, gbc.readMem(0xd89b));
        // E5 019D
        gbc.setState(0x5819, 0xc4ce, 0x8480, 0xac0d, 0x6510, 0x69e, 0x1, 0x0);
        gbc.writeMem(0x5819, { 0xe5 });
        gbc.writeMem(0xc4cc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc4cc, gbc.sp());
        EXPECT(0x581a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc4cc));
        EXPECT(0x6, gbc.readMem(0xc4cd));
        // E5 019F
        gbc.setState(0x7879, 0x93d6, 0x8830, 0x84df, 0xa4c3, 0xbcff, 0x0, 0x0);
        gbc.writeMem(0x7879, { 0xe5 });
        gbc.writeMem(0x93d4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x93d4, gbc.sp());
        EXPECT(0x787a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x93d4));
        EXPECT(0xbc, gbc.readMem(0x93d5));
        // E5 01A1
        gbc.setState(0xe95c, 0xf709, 0x1220, 0xd3d9, 0xf586, 0xac0e, 0x0, 0x1);
        gbc.writeMem(0xe95c, { 0xe5 });
        gbc.writeMem(0xf707, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf707, gbc.sp());
        EXPECT(0xe95d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xe95c));
        EXPECT(0xe, gbc.readMem(0xf707));
        EXPECT(0xac, gbc.readMem(0xf708));
        // E5 01A2
        gbc.setState(0xcb3e, 0x957e, 0x4510, 0x20a2, 0xdc08, 0x751a, 0x1, 0x0);
        gbc.writeMem(0x957c, { 0x0, 0x0 });
        gbc.writeMem(0xcb3e, { 0xe5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x957c, gbc.sp());
        EXPECT(0xcb3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x957c));
        EXPECT(0x75, gbc.readMem(0x957d));
        EXPECT(0xe5, gbc.readMem(0xcb3e));
        // E5 01A3
        gbc.setState(0x444c, 0xe656, 0x620, 0xfecf, 0x6909, 0x4fda, 0x1, 0x1);
        gbc.writeMem(0x444c, { 0xe5 });
        gbc.writeMem(0xe654, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe654, gbc.sp());
        EXPECT(0x444d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xe654));
        EXPECT(0x4f, gbc.readMem(0xe655));
        // E5 01A4
        gbc.setState(0x931c, 0xd760, 0x8230, 0x7efa, 0xb746, 0x9779, 0x0, 0x0);
        gbc.writeMem(0x931c, { 0xe5 });
        gbc.writeMem(0xd75e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd75e, gbc.sp());
        EXPECT(0x931d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x931c));
        EXPECT(0x79, gbc.readMem(0xd75e));
        EXPECT(0x97, gbc.readMem(0xd75f));
        // E5 01A5
        gbc.setState(0x453, 0x80eb, 0xc830, 0xb064, 0x77d9, 0x7789, 0x0, 0x0);
        gbc.writeMem(0x453, { 0xe5 });
        gbc.writeMem(0x80e9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x80e9, gbc.sp());
        EXPECT(0x454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x80e9));
        EXPECT(0x77, gbc.readMem(0x80ea));
        // E5 01A7
        gbc.setState(0x8d6f, 0x93dc, 0x45e0, 0x7b56, 0xa11b, 0x7d42, 0x0, 0x0);
        gbc.writeMem(0x8d6f, { 0xe5 });
        gbc.writeMem(0x93da, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x93da, gbc.sp());
        EXPECT(0x8d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x8d6f));
        EXPECT(0x42, gbc.readMem(0x93da));
        EXPECT(0x7d, gbc.readMem(0x93db));
        // E5 01A9
        gbc.setState(0x5a71, 0xa58a, 0xd820, 0x9bc, 0x2afb, 0x43e0, 0x0, 0x1);
        gbc.writeMem(0x5a71, { 0xe5 });
        gbc.writeMem(0xa588, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa588, gbc.sp());
        EXPECT(0x5a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xa588));
        EXPECT(0x43, gbc.readMem(0xa589));
        // E5 01AB
        gbc.setState(0xa689, 0xb7c8, 0x570, 0x1f75, 0xe37a, 0x88f5, 0x1, 0x0);
        gbc.writeMem(0xa689, { 0xe5 });
        gbc.writeMem(0xb7c6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb7c6, gbc.sp());
        EXPECT(0xa68a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa689));
        EXPECT(0xf5, gbc.readMem(0xb7c6));
        EXPECT(0x88, gbc.readMem(0xb7c7));
        // E5 01AE
        gbc.setState(0x945d, 0xeb19, 0x5080, 0x52e7, 0x7aec, 0x65fa, 0x1, 0x0);
        gbc.writeMem(0x945d, { 0xe5 });
        gbc.writeMem(0xeb17, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xeb17, gbc.sp());
        EXPECT(0x945e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x945d));
        EXPECT(0xfa, gbc.readMem(0xeb17));
        EXPECT(0x65, gbc.readMem(0xeb18));
        // E5 01B0
        gbc.setState(0x41b5, 0xc27d, 0xf20, 0x8cff, 0x6bb4, 0xf4ca, 0x0, 0x0);
        gbc.writeMem(0x41b5, { 0xe5 });
        gbc.writeMem(0xc27b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc27b, gbc.sp());
        EXPECT(0x41b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xc27b));
        EXPECT(0xf4, gbc.readMem(0xc27c));
        // E5 01B3
        gbc.setState(0x6bed, 0xf5e2, 0x8e40, 0xf225, 0x116e, 0x5c99, 0x1, 0x1);
        gbc.writeMem(0x6bed, { 0xe5 });
        gbc.writeMem(0xf5e0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf5e0, gbc.sp());
        EXPECT(0x6bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xf5e0));
        EXPECT(0x5c, gbc.readMem(0xf5e1));
        // E5 01B4
        gbc.setState(0xa2c2, 0xe0fe, 0x44d0, 0xf861, 0x447b, 0x7392, 0x0, 0x1);
        gbc.writeMem(0xa2c2, { 0xe5 });
        gbc.writeMem(0xe0fc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe0fc, gbc.sp());
        EXPECT(0xa2c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa2c2));
        EXPECT(0x92, gbc.readMem(0xe0fc));
        EXPECT(0x73, gbc.readMem(0xe0fd));
        // E5 01B5
        gbc.setState(0x7887, 0xaeb0, 0x8c20, 0x49d4, 0x161a, 0xe5aa, 0x1, 0x1);
        gbc.writeMem(0x7887, { 0xe5 });
        gbc.writeMem(0xaeae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xaeae, gbc.sp());
        EXPECT(0x7888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xaeae));
        EXPECT(0xe5, gbc.readMem(0xaeaf));
        // E5 01B6
        gbc.setState(0xc8b7, 0xe625, 0x6e40, 0x583, 0x5866, 0x6338, 0x0, 0x0);
        gbc.writeMem(0xc8b7, { 0xe5 });
        gbc.writeMem(0xe623, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe623, gbc.sp());
        EXPECT(0xc8b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xc8b7));
        EXPECT(0x38, gbc.readMem(0xe623));
        EXPECT(0x63, gbc.readMem(0xe624));
        // E5 01B9
        gbc.setState(0xb93a, 0xa811, 0x6320, 0x34e7, 0x47ac, 0xef30, 0x1, 0x1);
        gbc.writeMem(0xa80f, { 0x0, 0x0 });
        gbc.writeMem(0xb93a, { 0xe5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa80f, gbc.sp());
        EXPECT(0xb93b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xa80f));
        EXPECT(0xef, gbc.readMem(0xa810));
        EXPECT(0xe5, gbc.readMem(0xb93a));
        // E5 01BA
        gbc.setState(0x1390, 0xcfd7, 0xc420, 0xb552, 0x728, 0x9db0, 0x0, 0x0);
        gbc.writeMem(0x1390, { 0xe5 });
        gbc.writeMem(0xcfd5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcfd5, gbc.sp());
        EXPECT(0x1391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xcfd5));
        EXPECT(0x9d, gbc.readMem(0xcfd6));
        // E5 01BB
        gbc.setState(0x238b, 0x8d2f, 0x5f70, 0x1a1a, 0x95e8, 0x88c, 0x1, 0x0);
        gbc.writeMem(0x238b, { 0xe5 });
        gbc.writeMem(0x8d2d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8d2d, gbc.sp());
        EXPECT(0x238c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8d2d));
        EXPECT(0x8, gbc.readMem(0x8d2e));
        // E5 01BD
        gbc.setState(0x450c, 0xefb0, 0xf5d0, 0xe535, 0x313d, 0x87cd, 0x0, 0x1);
        gbc.writeMem(0x450c, { 0xe5 });
        gbc.writeMem(0xefae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xefae, gbc.sp());
        EXPECT(0x450d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xefae));
        EXPECT(0x87, gbc.readMem(0xefaf));
        // E5 01BF
        gbc.setState(0xd0a4, 0xad26, 0xbb90, 0x565e, 0xd6b4, 0x5b26, 0x1, 0x0);
        gbc.writeMem(0xad24, { 0x0, 0x0 });
        gbc.writeMem(0xd0a4, { 0xe5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xad24, gbc.sp());
        EXPECT(0xd0a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xad24));
        EXPECT(0x5b, gbc.readMem(0xad25));
        EXPECT(0xe5, gbc.readMem(0xd0a4));
        // E5 01C4
        gbc.setState(0xabbf, 0xf3d4, 0xffb0, 0xc8a6, 0xed10, 0x5fa4, 0x0, 0x0);
        gbc.writeMem(0xabbf, { 0xe5 });
        gbc.writeMem(0xf3d2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf3d2, gbc.sp());
        EXPECT(0xabc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xabbf));
        EXPECT(0xa4, gbc.readMem(0xf3d2));
        EXPECT(0x5f, gbc.readMem(0xf3d3));
        // E5 01C5
        gbc.setState(0xd98a, 0xb6f9, 0xc670, 0x6274, 0x8f23, 0x3ff7, 0x0, 0x1);
        gbc.writeMem(0xb6f7, { 0x0, 0x0 });
        gbc.writeMem(0xd98a, { 0xe5 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb6f7, gbc.sp());
        EXPECT(0xd98b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xb6f7));
        EXPECT(0x3f, gbc.readMem(0xb6f8));
        EXPECT(0xe5, gbc.readMem(0xd98a));
        // E5 01C6
        gbc.setState(0x4222, 0xa46a, 0x23b0, 0x4ba1, 0xf4ee, 0x1145, 0x1, 0x1);
        gbc.writeMem(0x4222, { 0xe5 });
        gbc.writeMem(0xa468, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa468, gbc.sp());
        EXPECT(0x4223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xa468));
        EXPECT(0x11, gbc.readMem(0xa469));
        // E5 01C7
        gbc.setState(0x97ff, 0xdf67, 0x1710, 0x1ac6, 0x37e9, 0x2b5b, 0x0, 0x1);
        gbc.writeMem(0x97ff, { 0xe5 });
        gbc.writeMem(0xdf65, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xdf65, gbc.sp());
        EXPECT(0x9800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x97ff));
        EXPECT(0x5b, gbc.readMem(0xdf65));
        EXPECT(0x2b, gbc.readMem(0xdf66));
        // E5 01C8
        gbc.setState(0xcbf5, 0xa210, 0x7640, 0xe382, 0xad18, 0x959c, 0x1, 0x1);
        gbc.writeMem(0xa20e, { 0x0, 0x0 });
        gbc.writeMem(0xcbf5, { 0xe5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa20e, gbc.sp());
        EXPECT(0xcbf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa20e));
        EXPECT(0x95, gbc.readMem(0xa20f));
        EXPECT(0xe5, gbc.readMem(0xcbf5));
        // E5 01C9
        gbc.setState(0x1f76, 0xe2f6, 0x9ec0, 0x25fb, 0xf29, 0x2211, 0x1, 0x1);
        gbc.writeMem(0x1f76, { 0xe5 });
        gbc.writeMem(0xe2f4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe2f4, gbc.sp());
        EXPECT(0x1f77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe2f4));
        EXPECT(0x22, gbc.readMem(0xe2f5));
        // E5 01CA
        gbc.setState(0x56f, 0xa173, 0x5ce0, 0xfd39, 0x1535, 0x1c0b, 0x0, 0x1);
        gbc.writeMem(0x56f, { 0xe5 });
        gbc.writeMem(0xa171, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa171, gbc.sp());
        EXPECT(0x570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa171));
        EXPECT(0x1c, gbc.readMem(0xa172));
        // E5 01CB
        gbc.setState(0x7bed, 0xa42e, 0x5600, 0x39f7, 0x27b3, 0xb4b4, 0x0, 0x0);
        gbc.writeMem(0x7bed, { 0xe5 });
        gbc.writeMem(0xa42c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa42c, gbc.sp());
        EXPECT(0x7bee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xa42c));
        EXPECT(0xb4, gbc.readMem(0xa42d));
        // E5 01CF
        gbc.setState(0x2727, 0xd387, 0x3430, 0xda01, 0x45ef, 0x62c5, 0x1, 0x1);
        gbc.writeMem(0x2727, { 0xe5 });
        gbc.writeMem(0xd385, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd385, gbc.sp());
        EXPECT(0x2728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xd385));
        EXPECT(0x62, gbc.readMem(0xd386));
        // E5 01D0
        gbc.setState(0x7140, 0x82c6, 0x5260, 0x56f1, 0x2533, 0xbc86, 0x1, 0x0);
        gbc.writeMem(0x7140, { 0xe5 });
        gbc.writeMem(0x82c4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x82c4, gbc.sp());
        EXPECT(0x7141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x82c4));
        EXPECT(0xbc, gbc.readMem(0x82c5));
        // E5 01D1
        gbc.setState(0x5535, 0xad90, 0x1d10, 0x3a62, 0x2f51, 0x1cf1, 0x0, 0x1);
        gbc.writeMem(0x5535, { 0xe5 });
        gbc.writeMem(0xad8e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xad8e, gbc.sp());
        EXPECT(0x5536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xad8e));
        EXPECT(0x1c, gbc.readMem(0xad8f));
        // E5 01D3
        gbc.setState(0x41f1, 0x8cc1, 0xe1c0, 0x89e0, 0x85b, 0x6bba, 0x0, 0x0);
        gbc.writeMem(0x41f1, { 0xe5 });
        gbc.writeMem(0x8cbf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8cbf, gbc.sp());
        EXPECT(0x41f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x8cbf));
        EXPECT(0x6b, gbc.readMem(0x8cc0));
        // E5 01D5
        gbc.setState(0x6a2a, 0xfbbc, 0xe0a0, 0xf5ea, 0xf818, 0x8dbc, 0x1, 0x0);
        gbc.writeMem(0x6a2a, { 0xe5 });
        gbc.writeMem(0xfbba, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xfbba, gbc.sp());
        EXPECT(0x6a2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xfbba));
        EXPECT(0x8d, gbc.readMem(0xfbbb));
        // E5 01D6
        gbc.setState(0xb228, 0x89c8, 0x1c00, 0x3b76, 0x8977, 0xbd90, 0x0, 0x0);
        gbc.writeMem(0x89c6, { 0x0, 0x0 });
        gbc.writeMem(0xb228, { 0xe5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x89c6, gbc.sp());
        EXPECT(0xb229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x89c6));
        EXPECT(0xbd, gbc.readMem(0x89c7));
        EXPECT(0xe5, gbc.readMem(0xb228));
        // E5 01D7
        gbc.setState(0x6c35, 0xa950, 0xb0f0, 0xaf16, 0xd4b3, 0xd4b3, 0x1, 0x0);
        gbc.writeMem(0x6c35, { 0xe5 });
        gbc.writeMem(0xa94e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa94e, gbc.sp());
        EXPECT(0x6c36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xa94e));
        EXPECT(0xd4, gbc.readMem(0xa94f));
        // E5 01D8
        gbc.setState(0x6323, 0xd260, 0x81b0, 0x6961, 0xcf2d, 0xc2b, 0x0, 0x0);
        gbc.writeMem(0x6323, { 0xe5 });
        gbc.writeMem(0xd25e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd25e, gbc.sp());
        EXPECT(0x6324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd25e));
        EXPECT(0xc, gbc.readMem(0xd25f));
        // E5 01D9
        gbc.setState(0xbd6, 0xf9fc, 0xb040, 0xe9af, 0x26ae, 0xe471, 0x0, 0x0);
        gbc.writeMem(0xbd6, { 0xe5 });
        gbc.writeMem(0xf9fa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf9fa, gbc.sp());
        EXPECT(0xbd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xf9fa));
        EXPECT(0xe4, gbc.readMem(0xf9fb));
        // E5 01DB
        gbc.setState(0x39d8, 0x9fb9, 0x7f0, 0x3656, 0xec8f, 0x786e, 0x1, 0x1);
        gbc.writeMem(0x39d8, { 0xe5 });
        gbc.writeMem(0x9fb7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9fb7, gbc.sp());
        EXPECT(0x39d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9fb7));
        EXPECT(0x78, gbc.readMem(0x9fb8));
        // E5 01DC
        gbc.setState(0x4748, 0xd967, 0xdc00, 0xd1d7, 0x3133, 0xbf13, 0x0, 0x1);
        gbc.writeMem(0x4748, { 0xe5 });
        gbc.writeMem(0xd965, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd965, gbc.sp());
        EXPECT(0x4749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xd965));
        EXPECT(0xbf, gbc.readMem(0xd966));
        // E5 01DD
        gbc.setState(0x49ae, 0xd150, 0x7250, 0x349b, 0x88ae, 0x57b1, 0x1, 0x1);
        gbc.writeMem(0x49ae, { 0xe5 });
        gbc.writeMem(0xd14e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd14e, gbc.sp());
        EXPECT(0x49af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xd14e));
        EXPECT(0x57, gbc.readMem(0xd14f));
        // E5 01DE
        gbc.setState(0xb722, 0xfbb9, 0x4a00, 0xa824, 0x5749, 0x7bf1, 0x0, 0x0);
        gbc.writeMem(0xb722, { 0xe5 });
        gbc.writeMem(0xfbb7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfbb7, gbc.sp());
        EXPECT(0xb723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xb722));
        EXPECT(0xf1, gbc.readMem(0xfbb7));
        EXPECT(0x7b, gbc.readMem(0xfbb8));
        // E5 01DF
        gbc.setState(0x3ca9, 0xb970, 0xd910, 0x38e5, 0xe4bd, 0x513e, 0x0, 0x0);
        gbc.writeMem(0x3ca9, { 0xe5 });
        gbc.writeMem(0xb96e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb96e, gbc.sp());
        EXPECT(0x3caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb96e));
        EXPECT(0x51, gbc.readMem(0xb96f));
        // E5 01E1
        gbc.setState(0x4af7, 0xba7c, 0xdd00, 0x2af2, 0xd70e, 0xad1a, 0x0, 0x1);
        gbc.writeMem(0x4af7, { 0xe5 });
        gbc.writeMem(0xba7a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xba7a, gbc.sp());
        EXPECT(0x4af8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xba7a));
        EXPECT(0xad, gbc.readMem(0xba7b));
        // E5 01E3
        gbc.setState(0xe3f5, 0xcddf, 0xdf50, 0xbb9c, 0x92bb, 0xd07c, 0x1, 0x0);
        gbc.writeMem(0xcddd, { 0x0, 0x0 });
        gbc.writeMem(0xe3f5, { 0xe5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xcddd, gbc.sp());
        EXPECT(0xe3f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xcddd));
        EXPECT(0xd0, gbc.readMem(0xcdde));
        EXPECT(0xe5, gbc.readMem(0xe3f5));
        // E5 01E9
        gbc.setState(0xb857, 0xc902, 0x2150, 0x3773, 0x94e, 0xd85a, 0x0, 0x1);
        gbc.writeMem(0xb857, { 0xe5 });
        gbc.writeMem(0xc900, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc900, gbc.sp());
        EXPECT(0xb858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xb857));
        EXPECT(0x5a, gbc.readMem(0xc900));
        EXPECT(0xd8, gbc.readMem(0xc901));
        // E5 01EA
        gbc.setState(0xebaa, 0x9eed, 0x2d50, 0x9ca6, 0xb69, 0x2ab7, 0x1, 0x1);
        gbc.writeMem(0x9eeb, { 0x0, 0x0 });
        gbc.writeMem(0xebaa, { 0xe5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9eeb, gbc.sp());
        EXPECT(0xebab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9eeb));
        EXPECT(0x2a, gbc.readMem(0x9eec));
        EXPECT(0xe5, gbc.readMem(0xebaa));
        // E5 01EE
        gbc.setState(0x3d4e, 0x9b4c, 0x6040, 0x7135, 0x7391, 0x226f, 0x1, 0x1);
        gbc.writeMem(0x3d4e, { 0xe5 });
        gbc.writeMem(0x9b4a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9b4a, gbc.sp());
        EXPECT(0x3d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x9b4a));
        EXPECT(0x22, gbc.readMem(0x9b4b));
        // E5 01EF
        gbc.setState(0x62fd, 0x9133, 0x6b20, 0x450e, 0x9eb6, 0xaa9f, 0x1, 0x1);
        gbc.writeMem(0x62fd, { 0xe5 });
        gbc.writeMem(0x9131, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9131, gbc.sp());
        EXPECT(0x62fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9131));
        EXPECT(0xaa, gbc.readMem(0x9132));
        // E5 01F1
        gbc.setState(0x2be9, 0xc202, 0xcd50, 0xd24b, 0xa4b0, 0x807d, 0x0, 0x1);
        gbc.writeMem(0x2be9, { 0xe5 });
        gbc.writeMem(0xc200, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc200, gbc.sp());
        EXPECT(0x2bea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc200));
        EXPECT(0x80, gbc.readMem(0xc201));
        // E5 01F4
        gbc.setState(0x6c2b, 0xac7b, 0x2e40, 0x4d26, 0x2e82, 0x4364, 0x0, 0x1);
        gbc.writeMem(0x6c2b, { 0xe5 });
        gbc.writeMem(0xac79, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xac79, gbc.sp());
        EXPECT(0x6c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xac79));
        EXPECT(0x43, gbc.readMem(0xac7a));
        // E5 01F5
        gbc.setState(0x3392, 0xe1e9, 0x2b20, 0x4603, 0x9069, 0xc426, 0x1, 0x1);
        gbc.writeMem(0x3392, { 0xe5 });
        gbc.writeMem(0xe1e7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe1e7, gbc.sp());
        EXPECT(0x3393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe1e7));
        EXPECT(0xc4, gbc.readMem(0xe1e8));
        // E5 01F6
        gbc.setState(0x9f24, 0x8a76, 0x14c0, 0xa757, 0x4f2e, 0xbebd, 0x1, 0x0);
        gbc.writeMem(0x8a74, { 0x0, 0x0 });
        gbc.writeMem(0x9f24, { 0xe5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8a74, gbc.sp());
        EXPECT(0x9f25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8a74));
        EXPECT(0xbe, gbc.readMem(0x8a75));
        EXPECT(0xe5, gbc.readMem(0x9f24));
        // E5 01F8
        gbc.setState(0x445c, 0xb1fc, 0xc250, 0x4339, 0xc01c, 0x810b, 0x1, 0x1);
        gbc.writeMem(0x445c, { 0xe5 });
        gbc.writeMem(0xb1fa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb1fa, gbc.sp());
        EXPECT(0x445d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb1fa));
        EXPECT(0x81, gbc.readMem(0xb1fb));
        // E5 01F9
        gbc.setState(0xd5a0, 0xb9c0, 0x81b0, 0x5c86, 0xaa0f, 0xc236, 0x0, 0x1);
        gbc.writeMem(0xb9be, { 0x0, 0x0 });
        gbc.writeMem(0xd5a0, { 0xe5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb9be, gbc.sp());
        EXPECT(0xd5a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xb9be));
        EXPECT(0xc2, gbc.readMem(0xb9bf));
        EXPECT(0xe5, gbc.readMem(0xd5a0));
        // E5 01FA
        gbc.setState(0x3ab8, 0xc6ef, 0xc720, 0x6af8, 0xe8e3, 0x1235, 0x1, 0x0);
        gbc.writeMem(0x3ab8, { 0xe5 });
        gbc.writeMem(0xc6ed, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc6ed, gbc.sp());
        EXPECT(0x3ab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xc6ed));
        EXPECT(0x12, gbc.readMem(0xc6ee));
        // E5 01FC
        gbc.setState(0x3ca3, 0xfdef, 0xddd0, 0x7e93, 0xca7d, 0xc1a5, 0x0, 0x0);
        gbc.writeMem(0x3ca3, { 0xe5 });
        gbc.writeMem(0xfded, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfded, gbc.sp());
        EXPECT(0x3ca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xfded));
        EXPECT(0xc1, gbc.readMem(0xfdee));
        // E5 01FE
        gbc.setState(0xb36c, 0xbcb8, 0xf1d0, 0x602f, 0xc093, 0xbaa1, 0x1, 0x1);
        gbc.writeMem(0xb36c, { 0xe5 });
        gbc.writeMem(0xbcb6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xbcb6, gbc.sp());
        EXPECT(0xb36d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xb36c));
        EXPECT(0xa1, gbc.readMem(0xbcb6));
        EXPECT(0xba, gbc.readMem(0xbcb7));
        // E5 0200
        gbc.setState(0xaa1, 0xb612, 0x3dd0, 0x683f, 0x8b47, 0x9215, 0x0, 0x0);
        gbc.writeMem(0xaa1, { 0xe5 });
        gbc.writeMem(0xb610, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb610, gbc.sp());
        EXPECT(0xaa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb610));
        EXPECT(0x92, gbc.readMem(0xb611));
        // E5 0201
        gbc.setState(0xc76f, 0xfca3, 0x4910, 0x1e26, 0x18ae, 0xb36b, 0x1, 0x0);
        gbc.writeMem(0xc76f, { 0xe5 });
        gbc.writeMem(0xfca1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfca1, gbc.sp());
        EXPECT(0xc770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xc76f));
        EXPECT(0x6b, gbc.readMem(0xfca1));
        EXPECT(0xb3, gbc.readMem(0xfca2));
        // E5 0202
        gbc.setState(0x94e8, 0x83dd, 0x1f80, 0xbb71, 0xa943, 0xe861, 0x1, 0x1);
        gbc.writeMem(0x83db, { 0x0, 0x0 });
        gbc.writeMem(0x94e8, { 0xe5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x83db, gbc.sp());
        EXPECT(0x94e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x83db));
        EXPECT(0xe8, gbc.readMem(0x83dc));
        EXPECT(0xe5, gbc.readMem(0x94e8));
        // E5 0203
        gbc.setState(0x2a6d, 0x93a2, 0x5440, 0x29a0, 0x7ae1, 0xe334, 0x1, 0x0);
        gbc.writeMem(0x2a6d, { 0xe5 });
        gbc.writeMem(0x93a0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x93a0, gbc.sp());
        EXPECT(0x2a6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x93a0));
        EXPECT(0xe3, gbc.readMem(0x93a1));
        // E5 0206
        gbc.setState(0xeed1, 0xd177, 0xda50, 0xc7d7, 0x3b4, 0xe0fa, 0x0, 0x1);
        gbc.writeMem(0xd175, { 0x0, 0x0 });
        gbc.writeMem(0xeed1, { 0xe5 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd175, gbc.sp());
        EXPECT(0xeed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd175));
        EXPECT(0xe0, gbc.readMem(0xd176));
        EXPECT(0xe5, gbc.readMem(0xeed1));
        // E5 0207
        gbc.setState(0xd4d0, 0xcbde, 0xaf20, 0x9688, 0xccbd, 0xbf08, 0x0, 0x1);
        gbc.writeMem(0xcbdc, { 0x0, 0x0 });
        gbc.writeMem(0xd4d0, { 0xe5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcbdc, gbc.sp());
        EXPECT(0xd4d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xcbdc));
        EXPECT(0xbf, gbc.readMem(0xcbdd));
        EXPECT(0xe5, gbc.readMem(0xd4d0));
        // E5 0209
        gbc.setState(0x11ba, 0xaf3e, 0x5a50, 0xf0c0, 0xdc9f, 0x867, 0x1, 0x1);
        gbc.writeMem(0x11ba, { 0xe5 });
        gbc.writeMem(0xaf3c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xaf3c, gbc.sp());
        EXPECT(0x11bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xaf3c));
        EXPECT(0x8, gbc.readMem(0xaf3d));
        // E5 020A
        gbc.setState(0xedeb, 0xca7f, 0x7160, 0xa6a5, 0x6639, 0xf4f6, 0x1, 0x0);
        gbc.writeMem(0xca7d, { 0x0, 0x0 });
        gbc.writeMem(0xedeb, { 0xe5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xca7d, gbc.sp());
        EXPECT(0xedec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xca7d));
        EXPECT(0xf4, gbc.readMem(0xca7e));
        EXPECT(0xe5, gbc.readMem(0xedeb));
        // E5 020C
        gbc.setState(0xab52, 0xf6c1, 0x2c60, 0x822c, 0x5402, 0x16cf, 0x0, 0x1);
        gbc.writeMem(0xab52, { 0xe5 });
        gbc.writeMem(0xf6bf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf6bf, gbc.sp());
        EXPECT(0xab53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xab52));
        EXPECT(0xcf, gbc.readMem(0xf6bf));
        EXPECT(0x16, gbc.readMem(0xf6c0));
        // E5 020D
        gbc.setState(0x6b2, 0xc482, 0x36a0, 0x6035, 0x24fe, 0x8452, 0x0, 0x0);
        gbc.writeMem(0x6b2, { 0xe5 });
        gbc.writeMem(0xc480, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc480, gbc.sp());
        EXPECT(0x6b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc480));
        EXPECT(0x84, gbc.readMem(0xc481));
        // E5 020F
        gbc.setState(0xe6d5, 0xe3ce, 0xeaf0, 0x2910, 0xf127, 0x1908, 0x0, 0x0);
        gbc.writeMem(0xe3cc, { 0x0, 0x0 });
        gbc.writeMem(0xe6d5, { 0xe5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe3cc, gbc.sp());
        EXPECT(0xe6d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xe3cc));
        EXPECT(0x19, gbc.readMem(0xe3cd));
        EXPECT(0xe5, gbc.readMem(0xe6d5));
        // E5 0211
        gbc.setState(0x373d, 0x81c1, 0xaf20, 0xb677, 0x135a, 0x87d1, 0x1, 0x0);
        gbc.writeMem(0x373d, { 0xe5 });
        gbc.writeMem(0x81bf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x81bf, gbc.sp());
        EXPECT(0x373e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0x81bf));
        EXPECT(0x87, gbc.readMem(0x81c0));
        // E5 0212
        gbc.setState(0x5d79, 0xaf8d, 0x5b50, 0xbe16, 0x753, 0xe677, 0x0, 0x1);
        gbc.writeMem(0x5d79, { 0xe5 });
        gbc.writeMem(0xaf8b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xaf8b, gbc.sp());
        EXPECT(0x5d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xaf8b));
        EXPECT(0xe6, gbc.readMem(0xaf8c));
        // E5 0215
        gbc.setState(0xcd39, 0xada2, 0xcd70, 0x89c2, 0x9cff, 0x60b1, 0x0, 0x0);
        gbc.writeMem(0xada0, { 0x0, 0x0 });
        gbc.writeMem(0xcd39, { 0xe5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xada0, gbc.sp());
        EXPECT(0xcd3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xada0));
        EXPECT(0x60, gbc.readMem(0xada1));
        EXPECT(0xe5, gbc.readMem(0xcd39));
        // E5 0216
        gbc.setState(0x515a, 0xece1, 0x7f50, 0xefbf, 0x987f, 0xcab7, 0x0, 0x0);
        gbc.writeMem(0x515a, { 0xe5 });
        gbc.writeMem(0xecdf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xecdf, gbc.sp());
        EXPECT(0x515b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xecdf));
        EXPECT(0xca, gbc.readMem(0xece0));
        // E5 0217
        gbc.setState(0x6447, 0xb6d0, 0xbd80, 0x55ca, 0x9a83, 0x9f7, 0x1, 0x0);
        gbc.writeMem(0x6447, { 0xe5 });
        gbc.writeMem(0xb6ce, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb6ce, gbc.sp());
        EXPECT(0x6448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xb6ce));
        EXPECT(0x9, gbc.readMem(0xb6cf));
        // E5 0219
        gbc.setState(0xd66, 0xaaa4, 0x4790, 0x12a2, 0x58f6, 0xa016, 0x1, 0x0);
        gbc.writeMem(0xd66, { 0xe5 });
        gbc.writeMem(0xaaa2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xaaa2, gbc.sp());
        EXPECT(0xd67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xaaa2));
        EXPECT(0xa0, gbc.readMem(0xaaa3));
        // E5 021B
        gbc.setState(0xc2dd, 0xadc6, 0xb450, 0xd79, 0x84b9, 0x33fe, 0x0, 0x1);
        gbc.writeMem(0xadc4, { 0x0, 0x0 });
        gbc.writeMem(0xc2dd, { 0xe5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xadc4, gbc.sp());
        EXPECT(0xc2de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xadc4));
        EXPECT(0x33, gbc.readMem(0xadc5));
        EXPECT(0xe5, gbc.readMem(0xc2dd));
        // E5 021F
        gbc.setState(0xccff, 0xa052, 0xb80, 0x96fe, 0xf84e, 0xdc1c, 0x1, 0x1);
        gbc.writeMem(0xa050, { 0x0, 0x0 });
        gbc.writeMem(0xccff, { 0xe5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa050, gbc.sp());
        EXPECT(0xcd00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xa050));
        EXPECT(0xdc, gbc.readMem(0xa051));
        EXPECT(0xe5, gbc.readMem(0xccff));
        // E5 0220
        gbc.setState(0xe66d, 0xa694, 0x190, 0x464f, 0x12b3, 0x18ed, 0x0, 0x0);
        gbc.writeMem(0xa692, { 0x0, 0x0 });
        gbc.writeMem(0xe66d, { 0xe5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa692, gbc.sp());
        EXPECT(0xe66e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xa692));
        EXPECT(0x18, gbc.readMem(0xa693));
        EXPECT(0xe5, gbc.readMem(0xe66d));
        // E5 0221
        gbc.setState(0x2ff7, 0xdf70, 0xca60, 0xbac, 0x8692, 0xd7ee, 0x0, 0x0);
        gbc.writeMem(0x2ff7, { 0xe5 });
        gbc.writeMem(0xdf6e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdf6e, gbc.sp());
        EXPECT(0x2ff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xdf6e));
        EXPECT(0xd7, gbc.readMem(0xdf6f));
        // E5 0227
        gbc.setState(0x3601, 0xb218, 0x3740, 0xc09, 0x89c6, 0x4942, 0x1, 0x0);
        gbc.writeMem(0x3601, { 0xe5 });
        gbc.writeMem(0xb216, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb216, gbc.sp());
        EXPECT(0x3602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb216));
        EXPECT(0x49, gbc.readMem(0xb217));
        // E5 022A
        gbc.setState(0xe616, 0xef29, 0x9ee0, 0x648c, 0x717d, 0x2905, 0x1, 0x1);
        gbc.writeMem(0xe616, { 0xe5 });
        gbc.writeMem(0xef27, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xef27, gbc.sp());
        EXPECT(0xe617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xe616));
        EXPECT(0x5, gbc.readMem(0xef27));
        EXPECT(0x29, gbc.readMem(0xef28));
        // E5 022B
        gbc.setState(0xa58e, 0xbbc4, 0x5070, 0x2f20, 0x25cc, 0x8ccd, 0x0, 0x0);
        gbc.writeMem(0xa58e, { 0xe5 });
        gbc.writeMem(0xbbc2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbbc2, gbc.sp());
        EXPECT(0xa58f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa58e));
        EXPECT(0xcd, gbc.readMem(0xbbc2));
        EXPECT(0x8c, gbc.readMem(0xbbc3));
        // E5 022E
        gbc.setState(0xca3f, 0x9e1c, 0xf610, 0xe36a, 0xaef1, 0x93da, 0x1, 0x0);
        gbc.writeMem(0x9e1a, { 0x0, 0x0 });
        gbc.writeMem(0xca3f, { 0xe5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9e1a, gbc.sp());
        EXPECT(0xca40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9e1a));
        EXPECT(0x93, gbc.readMem(0x9e1b));
        EXPECT(0xe5, gbc.readMem(0xca3f));
        // E5 022F
        gbc.setState(0xc70e, 0xae49, 0x6bf0, 0x750e, 0x2ff4, 0xafa2, 0x1, 0x1);
        gbc.writeMem(0xae47, { 0x0, 0x0 });
        gbc.writeMem(0xc70e, { 0xe5 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xae47, gbc.sp());
        EXPECT(0xc70f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xae47));
        EXPECT(0xaf, gbc.readMem(0xae48));
        EXPECT(0xe5, gbc.readMem(0xc70e));
        // E5 0236
        gbc.setState(0x5b62, 0x85ee, 0xef50, 0xa83d, 0xf0a8, 0x9c4e, 0x0, 0x0);
        gbc.writeMem(0x5b62, { 0xe5 });
        gbc.writeMem(0x85ec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x85ec, gbc.sp());
        EXPECT(0x5b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x85ec));
        EXPECT(0x9c, gbc.readMem(0x85ed));
        // E5 0237
        gbc.setState(0x73e, 0xfc0f, 0x97c0, 0x7d60, 0x7e93, 0xbbe6, 0x1, 0x1);
        gbc.writeMem(0x73e, { 0xe5 });
        gbc.writeMem(0xfc0d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfc0d, gbc.sp());
        EXPECT(0x73f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xfc0d));
        EXPECT(0xbb, gbc.readMem(0xfc0e));
        // E5 023A
        gbc.setState(0xa136, 0xaf47, 0x6760, 0x1301, 0xd692, 0x190b, 0x1, 0x0);
        gbc.writeMem(0xa136, { 0xe5 });
        gbc.writeMem(0xaf45, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xaf45, gbc.sp());
        EXPECT(0xa137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa136));
        EXPECT(0xb, gbc.readMem(0xaf45));
        EXPECT(0x19, gbc.readMem(0xaf46));
        // E5 023B
        gbc.setState(0x590d, 0xe490, 0x4930, 0x7d7c, 0x34f2, 0x368b, 0x0, 0x1);
        gbc.writeMem(0x590d, { 0xe5 });
        gbc.writeMem(0xe48e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe48e, gbc.sp());
        EXPECT(0x590e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xe48e));
        EXPECT(0x36, gbc.readMem(0xe48f));
        // E5 023C
        gbc.setState(0x472a, 0xf766, 0xb760, 0x653f, 0x6639, 0x383b, 0x1, 0x1);
        gbc.writeMem(0x472a, { 0xe5 });
        gbc.writeMem(0xf764, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf764, gbc.sp());
        EXPECT(0x472b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xf764));
        EXPECT(0x38, gbc.readMem(0xf765));
        // E5 023D
        gbc.setState(0x5b86, 0xce7a, 0x8000, 0xaf90, 0xd04a, 0xaf6e, 0x0, 0x0);
        gbc.writeMem(0x5b86, { 0xe5 });
        gbc.writeMem(0xce78, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xce78, gbc.sp());
        EXPECT(0x5b87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xce78));
        EXPECT(0xaf, gbc.readMem(0xce79));
        // E5 0242
        gbc.setState(0xe724, 0x9f97, 0x84a0, 0xd2fe, 0x61b8, 0xff21, 0x1, 0x0);
        gbc.writeMem(0x9f95, { 0x0, 0x0 });
        gbc.writeMem(0xe724, { 0xe5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9f95, gbc.sp());
        EXPECT(0xe725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9f95));
        EXPECT(0xff, gbc.readMem(0x9f96));
        EXPECT(0xe5, gbc.readMem(0xe724));
        // E5 0245
        gbc.setState(0x7506, 0xfb49, 0xb3e0, 0x2da5, 0xb762, 0x92dd, 0x1, 0x1);
        gbc.writeMem(0x7506, { 0xe5 });
        gbc.writeMem(0xfb47, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfb47, gbc.sp());
        EXPECT(0x7507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xfb47));
        EXPECT(0x92, gbc.readMem(0xfb48));
        // E5 0246
        gbc.setState(0xebf7, 0xdc84, 0xd950, 0x5ace, 0xaa73, 0x25bd, 0x0, 0x1);
        gbc.writeMem(0xdc82, { 0x0, 0x0 });
        gbc.writeMem(0xebf7, { 0xe5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xdc82, gbc.sp());
        EXPECT(0xebf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xdc82));
        EXPECT(0x25, gbc.readMem(0xdc83));
        EXPECT(0xe5, gbc.readMem(0xebf7));
        // E5 0247
        gbc.setState(0x373, 0xac74, 0x2970, 0x5939, 0x7637, 0xc5e7, 0x0, 0x0);
        gbc.writeMem(0x373, { 0xe5 });
        gbc.writeMem(0xac72, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xac72, gbc.sp());
        EXPECT(0x374, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xac72));
        EXPECT(0xc5, gbc.readMem(0xac73));
        // E5 0249
        gbc.setState(0x67f0, 0x86aa, 0xd840, 0xa298, 0x2b7f, 0xcc09, 0x1, 0x0);
        gbc.writeMem(0x67f0, { 0xe5 });
        gbc.writeMem(0x86a8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x86a8, gbc.sp());
        EXPECT(0x67f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x86a8));
        EXPECT(0xcc, gbc.readMem(0x86a9));
        // E5 024A
        gbc.setState(0x416a, 0xd44b, 0x7e30, 0x9a18, 0x899c, 0xcc7d, 0x1, 0x1);
        gbc.writeMem(0x416a, { 0xe5 });
        gbc.writeMem(0xd449, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd449, gbc.sp());
        EXPECT(0x416b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd449));
        EXPECT(0xcc, gbc.readMem(0xd44a));
        // E5 024D
        gbc.setState(0x9036, 0xf148, 0x9f90, 0xee8b, 0x6b14, 0x99d0, 0x1, 0x0);
        gbc.writeMem(0x9036, { 0xe5 });
        gbc.writeMem(0xf146, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf146, gbc.sp());
        EXPECT(0x9037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9036));
        EXPECT(0xd0, gbc.readMem(0xf146));
        EXPECT(0x99, gbc.readMem(0xf147));
        // E5 024F
        gbc.setState(0x2066, 0xf830, 0xbce0, 0x678f, 0xa5c0, 0xdae, 0x0, 0x1);
        gbc.writeMem(0x2066, { 0xe5 });
        gbc.writeMem(0xf82e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf82e, gbc.sp());
        EXPECT(0x2067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xf82e));
        EXPECT(0xd, gbc.readMem(0xf82f));
        // E5 0252
        gbc.setState(0x2f0e, 0xd274, 0x1f80, 0x964e, 0xdd67, 0xf4ec, 0x0, 0x0);
        gbc.writeMem(0x2f0e, { 0xe5 });
        gbc.writeMem(0xd272, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd272, gbc.sp());
        EXPECT(0x2f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xd272));
        EXPECT(0xf4, gbc.readMem(0xd273));
        // E5 0255
        gbc.setState(0x24b5, 0x956f, 0x4ac0, 0x7737, 0x1e92, 0x571f, 0x0, 0x1);
        gbc.writeMem(0x24b5, { 0xe5 });
        gbc.writeMem(0x956d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x956d, gbc.sp());
        EXPECT(0x24b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x956d));
        EXPECT(0x57, gbc.readMem(0x956e));
        // E5 0256
        gbc.setState(0xa56a, 0xdfb8, 0xd5b0, 0x434, 0x614e, 0xe717, 0x0, 0x0);
        gbc.writeMem(0xa56a, { 0xe5 });
        gbc.writeMem(0xdfb6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdfb6, gbc.sp());
        EXPECT(0xa56b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa56a));
        EXPECT(0x17, gbc.readMem(0xdfb6));
        EXPECT(0xe7, gbc.readMem(0xdfb7));
        // E5 0258
        gbc.setState(0xcf75, 0xaf13, 0x1560, 0x166f, 0x21ce, 0x7254, 0x1, 0x0);
        gbc.writeMem(0xaf11, { 0x0, 0x0 });
        gbc.writeMem(0xcf75, { 0xe5 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xaf11, gbc.sp());
        EXPECT(0xcf76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xaf11));
        EXPECT(0x72, gbc.readMem(0xaf12));
        EXPECT(0xe5, gbc.readMem(0xcf75));
        // E5 0259
        gbc.setState(0x4bb, 0xf983, 0x1870, 0xa8c7, 0x384f, 0x9697, 0x1, 0x0);
        gbc.writeMem(0x4bb, { 0xe5 });
        gbc.writeMem(0xf981, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf981, gbc.sp());
        EXPECT(0x4bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xf981));
        EXPECT(0x96, gbc.readMem(0xf982));
        // E5 025A
        gbc.setState(0xeb24, 0xb4d3, 0x9ce0, 0xd108, 0xfe7b, 0xfe42, 0x1, 0x1);
        gbc.writeMem(0xb4d1, { 0x0, 0x0 });
        gbc.writeMem(0xeb24, { 0xe5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb4d1, gbc.sp());
        EXPECT(0xeb25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb4d1));
        EXPECT(0xfe, gbc.readMem(0xb4d2));
        EXPECT(0xe5, gbc.readMem(0xeb24));
        // E5 025D
        gbc.setState(0xef0d, 0xd70a, 0x2be0, 0x464e, 0x733, 0xd14c, 0x1, 0x1);
        gbc.writeMem(0xd708, { 0x0, 0x0 });
        gbc.writeMem(0xef0d, { 0xe5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd708, gbc.sp());
        EXPECT(0xef0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd708));
        EXPECT(0xd1, gbc.readMem(0xd709));
        EXPECT(0xe5, gbc.readMem(0xef0d));
        // E5 025E
        gbc.setState(0x6559, 0xe526, 0xac00, 0x3909, 0xf6b9, 0x7e33, 0x0, 0x1);
        gbc.writeMem(0x6559, { 0xe5 });
        gbc.writeMem(0xe524, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe524, gbc.sp());
        EXPECT(0x655a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xe524));
        EXPECT(0x7e, gbc.readMem(0xe525));
        // E5 025F
        gbc.setState(0xd997, 0xe3fb, 0x5a20, 0x6026, 0x1b76, 0x1007, 0x0, 0x0);
        gbc.writeMem(0xd997, { 0xe5 });
        gbc.writeMem(0xe3f9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe3f9, gbc.sp());
        EXPECT(0xd998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xd997));
        EXPECT(0x7, gbc.readMem(0xe3f9));
        EXPECT(0x10, gbc.readMem(0xe3fa));
        // E5 0261
        gbc.setState(0x4ee0, 0xac6a, 0xf3c0, 0xa41b, 0x37c5, 0x66cd, 0x0, 0x0);
        gbc.writeMem(0x4ee0, { 0xe5 });
        gbc.writeMem(0xac68, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xac68, gbc.sp());
        EXPECT(0x4ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xac68));
        EXPECT(0x66, gbc.readMem(0xac69));
        // E5 0262
        gbc.setState(0x9c63, 0xba23, 0xdb20, 0xbd07, 0xc0a7, 0xc016, 0x0, 0x1);
        gbc.writeMem(0x9c63, { 0xe5 });
        gbc.writeMem(0xba21, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xba21, gbc.sp());
        EXPECT(0x9c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9c63));
        EXPECT(0x16, gbc.readMem(0xba21));
        EXPECT(0xc0, gbc.readMem(0xba22));
        // E5 0263
        gbc.setState(0x4ead, 0xb58a, 0xd980, 0xa40e, 0x50fc, 0x62f1, 0x0, 0x1);
        gbc.writeMem(0x4ead, { 0xe5 });
        gbc.writeMem(0xb588, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb588, gbc.sp());
        EXPECT(0x4eae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb588));
        EXPECT(0x62, gbc.readMem(0xb589));
        // E5 0264
        gbc.setState(0xae6d, 0xc9fa, 0x1e50, 0xf458, 0xd58e, 0xea8f, 0x0, 0x1);
        gbc.writeMem(0xae6d, { 0xe5 });
        gbc.writeMem(0xc9f8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc9f8, gbc.sp());
        EXPECT(0xae6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xae6d));
        EXPECT(0x8f, gbc.readMem(0xc9f8));
        EXPECT(0xea, gbc.readMem(0xc9f9));
        // E5 0267
        gbc.setState(0xa349, 0xb6e3, 0xdd60, 0x6f88, 0xb74d, 0xa65b, 0x0, 0x1);
        gbc.writeMem(0xa349, { 0xe5 });
        gbc.writeMem(0xb6e1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb6e1, gbc.sp());
        EXPECT(0xa34a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa349));
        EXPECT(0x5b, gbc.readMem(0xb6e1));
        EXPECT(0xa6, gbc.readMem(0xb6e2));
        // E5 026A
        gbc.setState(0x66d2, 0xbbd3, 0x7c90, 0x7928, 0x5fca, 0x4d93, 0x1, 0x1);
        gbc.writeMem(0x66d2, { 0xe5 });
        gbc.writeMem(0xbbd1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xbbd1, gbc.sp());
        EXPECT(0x66d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbbd1));
        EXPECT(0x4d, gbc.readMem(0xbbd2));
        // E5 026B
        gbc.setState(0xa8a3, 0x8c66, 0x21e0, 0x8ead, 0xaa4a, 0xc360, 0x0, 0x1);
        gbc.writeMem(0x8c64, { 0x0, 0x0 });
        gbc.writeMem(0xa8a3, { 0xe5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8c64, gbc.sp());
        EXPECT(0xa8a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x8c64));
        EXPECT(0xc3, gbc.readMem(0x8c65));
        EXPECT(0xe5, gbc.readMem(0xa8a3));
        // E5 026D
        gbc.setState(0x888b, 0x98d0, 0x5dc0, 0x2584, 0x8ef0, 0xa24f, 0x0, 0x1);
        gbc.writeMem(0x888b, { 0xe5 });
        gbc.writeMem(0x98ce, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x98ce, gbc.sp());
        EXPECT(0x888c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x888b));
        EXPECT(0x4f, gbc.readMem(0x98ce));
        EXPECT(0xa2, gbc.readMem(0x98cf));
        // E5 0271
        gbc.setState(0x4a82, 0xdcd6, 0xc580, 0x77c5, 0x207e, 0xeb79, 0x0, 0x1);
        gbc.writeMem(0x4a82, { 0xe5 });
        gbc.writeMem(0xdcd4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdcd4, gbc.sp());
        EXPECT(0x4a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xdcd4));
        EXPECT(0xeb, gbc.readMem(0xdcd5));
        // E5 0272
        gbc.setState(0xe2bf, 0x8cf9, 0xe1f0, 0xa24d, 0x83f5, 0x787b, 0x0, 0x1);
        gbc.writeMem(0x8cf7, { 0x0, 0x0 });
        gbc.writeMem(0xe2bf, { 0xe5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8cf7, gbc.sp());
        EXPECT(0xe2c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8cf7));
        EXPECT(0x78, gbc.readMem(0x8cf8));
        EXPECT(0xe5, gbc.readMem(0xe2bf));
        // E5 0273
        gbc.setState(0xce75, 0xb692, 0x6aa0, 0x56db, 0x8546, 0xb8ad, 0x1, 0x1);
        gbc.writeMem(0xb690, { 0x0, 0x0 });
        gbc.writeMem(0xce75, { 0xe5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb690, gbc.sp());
        EXPECT(0xce76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xb690));
        EXPECT(0xb8, gbc.readMem(0xb691));
        EXPECT(0xe5, gbc.readMem(0xce75));
        // E5 0274
        gbc.setState(0xc569, 0x9b7b, 0xb7b0, 0x2a39, 0x5ef6, 0x4920, 0x1, 0x1);
        gbc.writeMem(0x9b79, { 0x0, 0x0 });
        gbc.writeMem(0xc569, { 0xe5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9b79, gbc.sp());
        EXPECT(0xc56a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9b79));
        EXPECT(0x49, gbc.readMem(0x9b7a));
        EXPECT(0xe5, gbc.readMem(0xc569));
        // E5 0276
        gbc.setState(0x67bf, 0x99e8, 0x8a60, 0xc068, 0xeb7e, 0x5e4e, 0x1, 0x1);
        gbc.writeMem(0x67bf, { 0xe5 });
        gbc.writeMem(0x99e6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x99e6, gbc.sp());
        EXPECT(0x67c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x99e6));
        EXPECT(0x5e, gbc.readMem(0x99e7));
        // E5 0279
        gbc.setState(0xd280, 0xc323, 0xf370, 0x4927, 0xe30b, 0x8d9e, 0x0, 0x1);
        gbc.writeMem(0xc321, { 0x0, 0x0 });
        gbc.writeMem(0xd280, { 0xe5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc321, gbc.sp());
        EXPECT(0xd281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc321));
        EXPECT(0x8d, gbc.readMem(0xc322));
        EXPECT(0xe5, gbc.readMem(0xd280));
        // E5 027C
        gbc.setState(0x8497, 0x9ddb, 0x8e40, 0x7d80, 0x82a1, 0xa1f4, 0x0, 0x0);
        gbc.writeMem(0x8497, { 0xe5 });
        gbc.writeMem(0x9dd9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9dd9, gbc.sp());
        EXPECT(0x8498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x8497));
        EXPECT(0xf4, gbc.readMem(0x9dd9));
        EXPECT(0xa1, gbc.readMem(0x9dda));
        // E5 027E
        gbc.setState(0x5167, 0xc629, 0xe960, 0xa79f, 0xe334, 0xecb0, 0x0, 0x0);
        gbc.writeMem(0x5167, { 0xe5 });
        gbc.writeMem(0xc627, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc627, gbc.sp());
        EXPECT(0x5168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc627));
        EXPECT(0xec, gbc.readMem(0xc628));
        // E5 027F
        gbc.setState(0x30b6, 0xd25a, 0x6410, 0x25fe, 0xff9c, 0x8214, 0x0, 0x0);
        gbc.writeMem(0x30b6, { 0xe5 });
        gbc.writeMem(0xd258, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd258, gbc.sp());
        EXPECT(0x30b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xd258));
        EXPECT(0x82, gbc.readMem(0xd259));
        // E5 0280
        gbc.setState(0xe1d8, 0xa7d8, 0x1420, 0xb512, 0x1a40, 0xb894, 0x0, 0x0);
        gbc.writeMem(0xa7d6, { 0x0, 0x0 });
        gbc.writeMem(0xe1d8, { 0xe5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa7d6, gbc.sp());
        EXPECT(0xe1d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa7d6));
        EXPECT(0xb8, gbc.readMem(0xa7d7));
        EXPECT(0xe5, gbc.readMem(0xe1d8));
        // E5 0282
        gbc.setState(0x3d30, 0x9433, 0x7100, 0x8f2b, 0x68c0, 0xe05d, 0x1, 0x1);
        gbc.writeMem(0x3d30, { 0xe5 });
        gbc.writeMem(0x9431, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9431, gbc.sp());
        EXPECT(0x3d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9431));
        EXPECT(0xe0, gbc.readMem(0x9432));
        // E5 0284
        gbc.setState(0x12b7, 0xa0b6, 0x49b0, 0xc54b, 0x6218, 0xeca7, 0x1, 0x0);
        gbc.writeMem(0x12b7, { 0xe5 });
        gbc.writeMem(0xa0b4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa0b4, gbc.sp());
        EXPECT(0x12b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa0b4));
        EXPECT(0xec, gbc.readMem(0xa0b5));
        // E5 0286
        gbc.setState(0x2c1e, 0x9d52, 0xfb00, 0x65b2, 0x756a, 0xfbcf, 0x0, 0x1);
        gbc.writeMem(0x2c1e, { 0xe5 });
        gbc.writeMem(0x9d50, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9d50, gbc.sp());
        EXPECT(0x2c1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0x9d50));
        EXPECT(0xfb, gbc.readMem(0x9d51));
        // E5 0287
        gbc.setState(0x494d, 0xe344, 0x8b90, 0x744a, 0xda3f, 0xc759, 0x0, 0x1);
        gbc.writeMem(0x494d, { 0xe5 });
        gbc.writeMem(0xe342, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe342, gbc.sp());
        EXPECT(0x494e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xe342));
        EXPECT(0xc7, gbc.readMem(0xe343));
        // E5 0288
        gbc.setState(0xd9bc, 0xea58, 0x370, 0xd635, 0xf7c1, 0x9f80, 0x0, 0x0);
        gbc.writeMem(0xd9bc, { 0xe5 });
        gbc.writeMem(0xea56, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xea56, gbc.sp());
        EXPECT(0xd9bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xd9bc));
        EXPECT(0x80, gbc.readMem(0xea56));
        EXPECT(0x9f, gbc.readMem(0xea57));
        // E5 0289
        gbc.setState(0xb3a3, 0xd487, 0x6320, 0x940a, 0x13ce, 0xda36, 0x1, 0x1);
        gbc.writeMem(0xb3a3, { 0xe5 });
        gbc.writeMem(0xd485, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd485, gbc.sp());
        EXPECT(0xb3a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xb3a3));
        EXPECT(0x36, gbc.readMem(0xd485));
        EXPECT(0xda, gbc.readMem(0xd486));
        // E5 028B
        gbc.setState(0xdc43, 0xf327, 0x9260, 0xa494, 0xdf6b, 0x4bf9, 0x0, 0x0);
        gbc.writeMem(0xdc43, { 0xe5 });
        gbc.writeMem(0xf325, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf325, gbc.sp());
        EXPECT(0xdc44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xdc43));
        EXPECT(0xf9, gbc.readMem(0xf325));
        EXPECT(0x4b, gbc.readMem(0xf326));
        // E5 028C
        gbc.setState(0x45fd, 0xd968, 0xdbe0, 0x95e7, 0x7808, 0x84ab, 0x1, 0x1);
        gbc.writeMem(0x45fd, { 0xe5 });
        gbc.writeMem(0xd966, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd966, gbc.sp());
        EXPECT(0x45fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xd966));
        EXPECT(0x84, gbc.readMem(0xd967));
        // E5 028D
        gbc.setState(0xbd3c, 0xd908, 0x3e50, 0xc7f1, 0xe1da, 0x287f, 0x0, 0x1);
        gbc.writeMem(0xbd3c, { 0xe5 });
        gbc.writeMem(0xd906, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd906, gbc.sp());
        EXPECT(0xbd3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xbd3c));
        EXPECT(0x7f, gbc.readMem(0xd906));
        EXPECT(0x28, gbc.readMem(0xd907));
        // E5 028E
        gbc.setState(0x99e1, 0xc904, 0x8ca0, 0xb3f4, 0xf15d, 0xc8d6, 0x1, 0x1);
        gbc.writeMem(0x99e1, { 0xe5 });
        gbc.writeMem(0xc902, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc902, gbc.sp());
        EXPECT(0x99e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x99e1));
        EXPECT(0xd6, gbc.readMem(0xc902));
        EXPECT(0xc8, gbc.readMem(0xc903));
        // E5 028F
        gbc.setState(0x4368, 0xfbba, 0xfb70, 0x7590, 0x8e91, 0xf5ed, 0x0, 0x0);
        gbc.writeMem(0x4368, { 0xe5 });
        gbc.writeMem(0xfbb8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xfbb8, gbc.sp());
        EXPECT(0x4369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xfbb8));
        EXPECT(0xf5, gbc.readMem(0xfbb9));
        // E5 0293
        gbc.setState(0xd9c5, 0xb028, 0xb850, 0x1e3d, 0x44c2, 0x1663, 0x0, 0x1);
        gbc.writeMem(0xb026, { 0x0, 0x0 });
        gbc.writeMem(0xd9c5, { 0xe5 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb026, gbc.sp());
        EXPECT(0xd9c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xb026));
        EXPECT(0x16, gbc.readMem(0xb027));
        EXPECT(0xe5, gbc.readMem(0xd9c5));
        // E5 0295
        gbc.setState(0xda2b, 0xfd04, 0x2ec0, 0xc48f, 0x4b51, 0xddde, 0x0, 0x0);
        gbc.writeMem(0xda2b, { 0xe5 });
        gbc.writeMem(0xfd02, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xfd02, gbc.sp());
        EXPECT(0xda2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xda2b));
        EXPECT(0xde, gbc.readMem(0xfd02));
        EXPECT(0xdd, gbc.readMem(0xfd03));
        // E5 0296
        gbc.setState(0xab2d, 0x9402, 0x1de0, 0xc28e, 0xc262, 0xaf71, 0x1, 0x1);
        gbc.writeMem(0x9400, { 0x0, 0x0 });
        gbc.writeMem(0xab2d, { 0xe5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9400, gbc.sp());
        EXPECT(0xab2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9400));
        EXPECT(0xaf, gbc.readMem(0x9401));
        EXPECT(0xe5, gbc.readMem(0xab2d));
        // E5 029A
        gbc.setState(0x385c, 0xff19, 0xaa60, 0xa0f2, 0x94c3, 0x96e4, 0x1, 0x1);
        gbc.writeMem(0x385c, { 0xe5 });
        gbc.writeMem(0xff17, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xff17, gbc.sp());
        EXPECT(0x385d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xff17));
        EXPECT(0x96, gbc.readMem(0xff18));
        // E5 029C
        gbc.setState(0xa032, 0xd136, 0x7330, 0x4531, 0x68cb, 0x3ede, 0x0, 0x0);
        gbc.writeMem(0xa032, { 0xe5 });
        gbc.writeMem(0xd134, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd134, gbc.sp());
        EXPECT(0xa033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa032));
        EXPECT(0xde, gbc.readMem(0xd134));
        EXPECT(0x3e, gbc.readMem(0xd135));
        // E5 029E
        gbc.setState(0x844e, 0x8a57, 0xfd90, 0x7186, 0x21ab, 0x2e94, 0x0, 0x0);
        gbc.writeMem(0x844e, { 0xe5 });
        gbc.writeMem(0x8a55, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8a55, gbc.sp());
        EXPECT(0x844f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x844e));
        EXPECT(0x94, gbc.readMem(0x8a55));
        EXPECT(0x2e, gbc.readMem(0x8a56));
        // E5 029F
        gbc.setState(0xc7db, 0xbd8a, 0xc320, 0x938a, 0xb58f, 0x46ec, 0x1, 0x1);
        gbc.writeMem(0xbd88, { 0x0, 0x0 });
        gbc.writeMem(0xc7db, { 0xe5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbd88, gbc.sp());
        EXPECT(0xc7dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xbd88));
        EXPECT(0x46, gbc.readMem(0xbd89));
        EXPECT(0xe5, gbc.readMem(0xc7db));
        // E5 02A1
        gbc.setState(0x17a3, 0xa773, 0x2500, 0x480f, 0x1f33, 0x7d31, 0x0, 0x1);
        gbc.writeMem(0x17a3, { 0xe5 });
        gbc.writeMem(0xa771, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa771, gbc.sp());
        EXPECT(0x17a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa771));
        EXPECT(0x7d, gbc.readMem(0xa772));
        // E5 02A2
        gbc.setState(0x520e, 0xd8d7, 0xe7d0, 0x6e48, 0x85fb, 0xa9c8, 0x0, 0x0);
        gbc.writeMem(0x520e, { 0xe5 });
        gbc.writeMem(0xd8d5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd8d5, gbc.sp());
        EXPECT(0x520f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xd8d5));
        EXPECT(0xa9, gbc.readMem(0xd8d6));
        // E5 02A3
        gbc.setState(0xd34a, 0xb6e2, 0x510, 0xe7b0, 0x46d5, 0xeedc, 0x0, 0x1);
        gbc.writeMem(0xb6e0, { 0x0, 0x0 });
        gbc.writeMem(0xd34a, { 0xe5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb6e0, gbc.sp());
        EXPECT(0xd34b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xb6e0));
        EXPECT(0xee, gbc.readMem(0xb6e1));
        EXPECT(0xe5, gbc.readMem(0xd34a));
        // E5 02A4
        gbc.setState(0x6412, 0xd554, 0xcf0, 0xe9d0, 0x843d, 0xb6be, 0x1, 0x0);
        gbc.writeMem(0x6412, { 0xe5 });
        gbc.writeMem(0xd552, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd552, gbc.sp());
        EXPECT(0x6413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xd552));
        EXPECT(0xb6, gbc.readMem(0xd553));
        // E5 02A6
        gbc.setState(0x57be, 0xbe49, 0x2770, 0x45a4, 0x781d, 0xaf1f, 0x0, 0x0);
        gbc.writeMem(0x57be, { 0xe5 });
        gbc.writeMem(0xbe47, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbe47, gbc.sp());
        EXPECT(0x57bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xbe47));
        EXPECT(0xaf, gbc.readMem(0xbe48));
        // E5 02A7
        gbc.setState(0x900a, 0xe35e, 0x5480, 0xf2c1, 0x6c9a, 0x15d6, 0x1, 0x0);
        gbc.writeMem(0x900a, { 0xe5 });
        gbc.writeMem(0xe35c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe35c, gbc.sp());
        EXPECT(0x900b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x900a));
        EXPECT(0xd6, gbc.readMem(0xe35c));
        EXPECT(0x15, gbc.readMem(0xe35d));
        // E5 02AD
        gbc.setState(0x61e5, 0xec45, 0xba60, 0xa101, 0x77e0, 0x2371, 0x1, 0x1);
        gbc.writeMem(0x61e5, { 0xe5 });
        gbc.writeMem(0xec43, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xec43, gbc.sp());
        EXPECT(0x61e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xec43));
        EXPECT(0x23, gbc.readMem(0xec44));
        // E5 02AE
        gbc.setState(0x4d1d, 0x8b10, 0x6d60, 0xbb6f, 0x7a91, 0x5f99, 0x0, 0x1);
        gbc.writeMem(0x4d1d, { 0xe5 });
        gbc.writeMem(0x8b0e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8b0e, gbc.sp());
        EXPECT(0x4d1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8b0e));
        EXPECT(0x5f, gbc.readMem(0x8b0f));
        // E5 02AF
        gbc.setState(0xb104, 0x9589, 0x9ad0, 0x53fc, 0x1308, 0x2a6e, 0x1, 0x0);
        gbc.writeMem(0x9587, { 0x0, 0x0 });
        gbc.writeMem(0xb104, { 0xe5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9587, gbc.sp());
        EXPECT(0xb105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9587));
        EXPECT(0x2a, gbc.readMem(0x9588));
        EXPECT(0xe5, gbc.readMem(0xb104));
        // E5 02B0
        gbc.setState(0x9e8c, 0xbd86, 0x8a10, 0x11a2, 0xaca1, 0xdf03, 0x1, 0x0);
        gbc.writeMem(0x9e8c, { 0xe5 });
        gbc.writeMem(0xbd84, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbd84, gbc.sp());
        EXPECT(0x9e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9e8c));
        EXPECT(0x3, gbc.readMem(0xbd84));
        EXPECT(0xdf, gbc.readMem(0xbd85));
        // E5 02B2
        gbc.setState(0x21eb, 0xc24a, 0x140, 0xb810, 0x86a9, 0xf93e, 0x1, 0x0);
        gbc.writeMem(0x21eb, { 0xe5 });
        gbc.writeMem(0xc248, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc248, gbc.sp());
        EXPECT(0x21ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc248));
        EXPECT(0xf9, gbc.readMem(0xc249));
        // E5 02B7
        gbc.setState(0x87dd, 0xd92d, 0xe220, 0xdd86, 0x5157, 0xe095, 0x1, 0x1);
        gbc.writeMem(0x87dd, { 0xe5 });
        gbc.writeMem(0xd92b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd92b, gbc.sp());
        EXPECT(0x87de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x87dd));
        EXPECT(0x95, gbc.readMem(0xd92b));
        EXPECT(0xe0, gbc.readMem(0xd92c));
        // E5 02B8
        gbc.setState(0x9195, 0xd6c1, 0xa500, 0xda69, 0x2677, 0x9984, 0x0, 0x1);
        gbc.writeMem(0x9195, { 0xe5 });
        gbc.writeMem(0xd6bf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd6bf, gbc.sp());
        EXPECT(0x9196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9195));
        EXPECT(0x84, gbc.readMem(0xd6bf));
        EXPECT(0x99, gbc.readMem(0xd6c0));
        // E5 02BD
        gbc.setState(0x893b, 0xb408, 0xf840, 0x161a, 0x57a, 0xa1ea, 0x0, 0x1);
        gbc.writeMem(0x893b, { 0xe5 });
        gbc.writeMem(0xb406, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb406, gbc.sp());
        EXPECT(0x893c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x893b));
        EXPECT(0xea, gbc.readMem(0xb406));
        EXPECT(0xa1, gbc.readMem(0xb407));
        // E5 02C2
        gbc.setState(0xe54b, 0xb4b6, 0x1b0, 0xf4cb, 0x6f9c, 0x1e1d, 0x1, 0x0);
        gbc.writeMem(0xb4b4, { 0x0, 0x0 });
        gbc.writeMem(0xe54b, { 0xe5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb4b4, gbc.sp());
        EXPECT(0xe54c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb4b4));
        EXPECT(0x1e, gbc.readMem(0xb4b5));
        EXPECT(0xe5, gbc.readMem(0xe54b));
        // E5 02C3
        gbc.setState(0x26db, 0xba73, 0x4d00, 0x21d4, 0x858a, 0xd0f, 0x1, 0x0);
        gbc.writeMem(0x26db, { 0xe5 });
        gbc.writeMem(0xba71, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xba71, gbc.sp());
        EXPECT(0x26dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xba71));
        EXPECT(0xd, gbc.readMem(0xba72));
        // E5 02C5
        gbc.setState(0x8393, 0xc2f0, 0xd900, 0x48a6, 0x683f, 0xbe0e, 0x1, 0x0);
        gbc.writeMem(0x8393, { 0xe5 });
        gbc.writeMem(0xc2ee, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc2ee, gbc.sp());
        EXPECT(0x8394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x8393));
        EXPECT(0xe, gbc.readMem(0xc2ee));
        EXPECT(0xbe, gbc.readMem(0xc2ef));
        // E5 02C6
        gbc.setState(0x11bf, 0x8677, 0xb0b0, 0x2ba9, 0xfc94, 0x46f6, 0x1, 0x1);
        gbc.writeMem(0x11bf, { 0xe5 });
        gbc.writeMem(0x8675, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8675, gbc.sp());
        EXPECT(0x11c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x8675));
        EXPECT(0x46, gbc.readMem(0x8676));
        // E5 02C8
        gbc.setState(0xde84, 0xc58b, 0x5340, 0x4f42, 0xf29, 0xe5a5, 0x1, 0x0);
        gbc.writeMem(0xc589, { 0x0, 0x0 });
        gbc.writeMem(0xde84, { 0xe5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc589, gbc.sp());
        EXPECT(0xde85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xc589));
        EXPECT(0xe5, gbc.readMem(0xc58a));
        EXPECT(0xe5, gbc.readMem(0xde84));
        // E5 02CA
        gbc.setState(0x792c, 0x85b9, 0x4d00, 0x1fa4, 0x31db, 0x515e, 0x1, 0x0);
        gbc.writeMem(0x792c, { 0xe5 });
        gbc.writeMem(0x85b7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x85b7, gbc.sp());
        EXPECT(0x792d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x85b7));
        EXPECT(0x51, gbc.readMem(0x85b8));
        // E5 02D0
        gbc.setState(0xeaf6, 0xf0da, 0x35e0, 0xabca, 0xa3b1, 0x9dee, 0x1, 0x1);
        gbc.writeMem(0xeaf6, { 0xe5 });
        gbc.writeMem(0xf0d8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf0d8, gbc.sp());
        EXPECT(0xeaf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xeaf6));
        EXPECT(0xee, gbc.readMem(0xf0d8));
        EXPECT(0x9d, gbc.readMem(0xf0d9));
        // E5 02D3
        gbc.setState(0xc047, 0xd045, 0xf180, 0xb97c, 0x4529, 0x7b36, 0x1, 0x0);
        gbc.writeMem(0xc047, { 0xe5 });
        gbc.writeMem(0xd043, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd043, gbc.sp());
        EXPECT(0xc048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xc047));
        EXPECT(0x36, gbc.readMem(0xd043));
        EXPECT(0x7b, gbc.readMem(0xd044));
        // E5 02D4
        gbc.setState(0xa9d, 0xfed1, 0x5680, 0xf8fd, 0xacc9, 0xdc8b, 0x1, 0x0);
        gbc.writeMem(0xa9d, { 0xe5 });
        gbc.writeMem(0xfecf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfecf, gbc.sp());
        EXPECT(0xa9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xfecf));
        EXPECT(0xdc, gbc.readMem(0xfed0));
        // E5 02DA
        gbc.setState(0xb0b8, 0xb54b, 0xb00, 0x26f9, 0x46b4, 0xde68, 0x0, 0x1);
        gbc.writeMem(0xb0b8, { 0xe5 });
        gbc.writeMem(0xb549, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb549, gbc.sp());
        EXPECT(0xb0b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xb0b8));
        EXPECT(0x68, gbc.readMem(0xb549));
        EXPECT(0xde, gbc.readMem(0xb54a));
        // E5 02DD
        gbc.setState(0x7ace, 0xcbe4, 0x2610, 0x6c6b, 0x6ad3, 0x1803, 0x0, 0x0);
        gbc.writeMem(0x7ace, { 0xe5 });
        gbc.writeMem(0xcbe2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcbe2, gbc.sp());
        EXPECT(0x7acf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xcbe2));
        EXPECT(0x18, gbc.readMem(0xcbe3));
        // E5 02DE
        gbc.setState(0x1457, 0xb77e, 0x8720, 0xa403, 0xd678, 0xe053, 0x0, 0x1);
        gbc.writeMem(0x1457, { 0xe5 });
        gbc.writeMem(0xb77c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb77c, gbc.sp());
        EXPECT(0x1458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb77c));
        EXPECT(0xe0, gbc.readMem(0xb77d));
        // E5 02E0
        gbc.setState(0xbad8, 0x9419, 0x4b0, 0x6598, 0x58ea, 0x25c1, 0x1, 0x0);
        gbc.writeMem(0x9417, { 0x0, 0x0 });
        gbc.writeMem(0xbad8, { 0xe5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9417, gbc.sp());
        EXPECT(0xbad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9417));
        EXPECT(0x25, gbc.readMem(0x9418));
        EXPECT(0xe5, gbc.readMem(0xbad8));
        // E5 02E1
        gbc.setState(0x4de3, 0xc38a, 0x31e0, 0x2519, 0xb00a, 0x2e06, 0x0, 0x0);
        gbc.writeMem(0x4de3, { 0xe5 });
        gbc.writeMem(0xc388, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc388, gbc.sp());
        EXPECT(0x4de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc388));
        EXPECT(0x2e, gbc.readMem(0xc389));
        // E5 02E3
        gbc.setState(0x1fea, 0x96f3, 0x850, 0x85e9, 0x1e70, 0xa079, 0x1, 0x0);
        gbc.writeMem(0x1fea, { 0xe5 });
        gbc.writeMem(0x96f1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x96f1, gbc.sp());
        EXPECT(0x1feb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x96f1));
        EXPECT(0xa0, gbc.readMem(0x96f2));
        // E5 02E4
        gbc.setState(0x8882, 0xb724, 0xe8b0, 0xa684, 0x2d78, 0xdf5e, 0x1, 0x1);
        gbc.writeMem(0x8882, { 0xe5 });
        gbc.writeMem(0xb722, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb722, gbc.sp());
        EXPECT(0x8883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x8882));
        EXPECT(0x5e, gbc.readMem(0xb722));
        EXPECT(0xdf, gbc.readMem(0xb723));
        // E5 02E6
        gbc.setState(0x6472, 0xb081, 0xc450, 0xec9f, 0x68c8, 0x50ee, 0x0, 0x0);
        gbc.writeMem(0x6472, { 0xe5 });
        gbc.writeMem(0xb07f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb07f, gbc.sp());
        EXPECT(0x6473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xb07f));
        EXPECT(0x50, gbc.readMem(0xb080));
        // E5 02E7
        gbc.setState(0xa196, 0x8da8, 0xef0, 0x7772, 0x9b80, 0x9f7, 0x0, 0x1);
        gbc.writeMem(0x8da6, { 0x0, 0x0 });
        gbc.writeMem(0xa196, { 0xe5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8da6, gbc.sp());
        EXPECT(0xa197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8da6));
        EXPECT(0x9, gbc.readMem(0x8da7));
        EXPECT(0xe5, gbc.readMem(0xa196));
        // E5 02E9
        gbc.setState(0x4b74, 0xd5ef, 0x4590, 0xd155, 0xd4, 0xc8d8, 0x0, 0x0);
        gbc.writeMem(0x4b74, { 0xe5 });
        gbc.writeMem(0xd5ed, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd5ed, gbc.sp());
        EXPECT(0x4b75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xd5ed));
        EXPECT(0xc8, gbc.readMem(0xd5ee));
        // E5 02ED
        gbc.setState(0x2314, 0x9159, 0x4540, 0xdbe5, 0x6e4e, 0x747b, 0x0, 0x1);
        gbc.writeMem(0x2314, { 0xe5 });
        gbc.writeMem(0x9157, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9157, gbc.sp());
        EXPECT(0x2315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9157));
        EXPECT(0x74, gbc.readMem(0x9158));
        // E5 02EE
        gbc.setState(0x4a64, 0xbf4d, 0x4850, 0xac88, 0x21b, 0x5a56, 0x0, 0x0);
        gbc.writeMem(0x4a64, { 0xe5 });
        gbc.writeMem(0xbf4b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbf4b, gbc.sp());
        EXPECT(0x4a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xbf4b));
        EXPECT(0x5a, gbc.readMem(0xbf4c));
        // E5 02EF
        gbc.setState(0x853e, 0xd4bd, 0x3550, 0x8abb, 0xd754, 0xad1d, 0x0, 0x1);
        gbc.writeMem(0x853e, { 0xe5 });
        gbc.writeMem(0xd4bb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd4bb, gbc.sp());
        EXPECT(0x853f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x853e));
        EXPECT(0x1d, gbc.readMem(0xd4bb));
        EXPECT(0xad, gbc.readMem(0xd4bc));
        // E5 02F0
        gbc.setState(0xe66b, 0xfdb2, 0x32d0, 0x18b9, 0x4eb8, 0x7766, 0x0, 0x0);
        gbc.writeMem(0xe66b, { 0xe5 });
        gbc.writeMem(0xfdb0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xfdb0, gbc.sp());
        EXPECT(0xe66c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xe66b));
        EXPECT(0x66, gbc.readMem(0xfdb0));
        EXPECT(0x77, gbc.readMem(0xfdb1));
        // E5 02F2
        gbc.setState(0x2789, 0xb1b7, 0xfc20, 0x19a5, 0x5b14, 0x344e, 0x0, 0x0);
        gbc.writeMem(0x2789, { 0xe5 });
        gbc.writeMem(0xb1b5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb1b5, gbc.sp());
        EXPECT(0x278a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xb1b5));
        EXPECT(0x34, gbc.readMem(0xb1b6));
        // E5 02F3
        gbc.setState(0x898d, 0x9a7b, 0xa150, 0x7dff, 0x8ddb, 0x61e9, 0x1, 0x1);
        gbc.writeMem(0x898d, { 0xe5 });
        gbc.writeMem(0x9a79, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9a79, gbc.sp());
        EXPECT(0x898e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x898d));
        EXPECT(0xe9, gbc.readMem(0x9a79));
        EXPECT(0x61, gbc.readMem(0x9a7a));
        // E5 02F4
        gbc.setState(0x20ef, 0xb450, 0x1950, 0xf5af, 0x31e2, 0x23b1, 0x0, 0x0);
        gbc.writeMem(0x20ef, { 0xe5 });
        gbc.writeMem(0xb44e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb44e, gbc.sp());
        EXPECT(0x20f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xb44e));
        EXPECT(0x23, gbc.readMem(0xb44f));
        // E5 02F5
        gbc.setState(0xa68e, 0xccda, 0x22c0, 0xf629, 0x7bea, 0x9290, 0x1, 0x1);
        gbc.writeMem(0xa68e, { 0xe5 });
        gbc.writeMem(0xccd8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xccd8, gbc.sp());
        EXPECT(0xa68f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa68e));
        EXPECT(0x90, gbc.readMem(0xccd8));
        EXPECT(0x92, gbc.readMem(0xccd9));
        // E5 02F6
        gbc.setState(0x5aef, 0x9ffe, 0xba60, 0x4d6b, 0xbb00, 0x60c1, 0x0, 0x0);
        gbc.writeMem(0x5aef, { 0xe5 });
        gbc.writeMem(0x9ffc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9ffc, gbc.sp());
        EXPECT(0x5af0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9ffc));
        EXPECT(0x60, gbc.readMem(0x9ffd));
        // E5 02F8
        gbc.setState(0x21c6, 0xbebf, 0x6ba0, 0x9ef4, 0x90c, 0x2ee9, 0x1, 0x1);
        gbc.writeMem(0x21c6, { 0xe5 });
        gbc.writeMem(0xbebd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbebd, gbc.sp());
        EXPECT(0x21c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xbebd));
        EXPECT(0x2e, gbc.readMem(0xbebe));
        // E5 02F9
        gbc.setState(0x1964, 0xeb25, 0x7550, 0xfa0b, 0xa343, 0x1287, 0x1, 0x0);
        gbc.writeMem(0x1964, { 0xe5 });
        gbc.writeMem(0xeb23, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xeb23, gbc.sp());
        EXPECT(0x1965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xeb23));
        EXPECT(0x12, gbc.readMem(0xeb24));
        // E5 02FC
        gbc.setState(0x807d, 0xbb0e, 0x9640, 0x3933, 0xeaa4, 0xffb1, 0x1, 0x0);
        gbc.writeMem(0x807d, { 0xe5 });
        gbc.writeMem(0xbb0c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbb0c, gbc.sp());
        EXPECT(0x807e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x807d));
        EXPECT(0xb1, gbc.readMem(0xbb0c));
        EXPECT(0xff, gbc.readMem(0xbb0d));
        // E5 02FD
        gbc.setState(0x26df, 0xf23e, 0x7d70, 0xc0fa, 0x47e2, 0xf203, 0x1, 0x1);
        gbc.writeMem(0x26df, { 0xe5 });
        gbc.writeMem(0xf23c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf23c, gbc.sp());
        EXPECT(0x26e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xf23c));
        EXPECT(0xf2, gbc.readMem(0xf23d));
        // E5 02FF
        gbc.setState(0x7a4f, 0xfd53, 0x7b00, 0x1f85, 0xc8dd, 0x7ce0, 0x0, 0x0);
        gbc.writeMem(0x7a4f, { 0xe5 });
        gbc.writeMem(0xfd51, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfd51, gbc.sp());
        EXPECT(0x7a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xfd51));
        EXPECT(0x7c, gbc.readMem(0xfd52));
        // E5 0300
        gbc.setState(0x62e2, 0xd1a1, 0x75e0, 0x6c18, 0xb1fb, 0x8f4f, 0x0, 0x0);
        gbc.writeMem(0x62e2, { 0xe5 });
        gbc.writeMem(0xd19f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd19f, gbc.sp());
        EXPECT(0x62e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xd19f));
        EXPECT(0x8f, gbc.readMem(0xd1a0));
        // E5 0302
        gbc.setState(0xb13a, 0x89d8, 0xb380, 0x16fe, 0x8afb, 0x9f31, 0x0, 0x1);
        gbc.writeMem(0x89d6, { 0x0, 0x0 });
        gbc.writeMem(0xb13a, { 0xe5 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x89d6, gbc.sp());
        EXPECT(0xb13b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x89d6));
        EXPECT(0x9f, gbc.readMem(0x89d7));
        EXPECT(0xe5, gbc.readMem(0xb13a));
        // E5 0305
        gbc.setState(0x6f3b, 0xccee, 0xa0b0, 0x4590, 0x2e62, 0xe634, 0x0, 0x0);
        gbc.writeMem(0x6f3b, { 0xe5 });
        gbc.writeMem(0xccec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xccec, gbc.sp());
        EXPECT(0x6f3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xccec));
        EXPECT(0xe6, gbc.readMem(0xcced));
        // E5 0306
        gbc.setState(0xa35f, 0xbedb, 0x7dc0, 0xee03, 0x5e03, 0x78ed, 0x1, 0x1);
        gbc.writeMem(0xa35f, { 0xe5 });
        gbc.writeMem(0xbed9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbed9, gbc.sp());
        EXPECT(0xa360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa35f));
        EXPECT(0xed, gbc.readMem(0xbed9));
        EXPECT(0x78, gbc.readMem(0xbeda));
        // E5 0307
        gbc.setState(0x87d0, 0x9c93, 0xdf00, 0x9733, 0x72b6, 0x230f, 0x1, 0x1);
        gbc.writeMem(0x87d0, { 0xe5 });
        gbc.writeMem(0x9c91, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9c91, gbc.sp());
        EXPECT(0x87d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x87d0));
        EXPECT(0xf, gbc.readMem(0x9c91));
        EXPECT(0x23, gbc.readMem(0x9c92));
        // E5 0308
        gbc.setState(0x5e75, 0xfca7, 0x1190, 0xfe4d, 0x2c17, 0xf0ff, 0x0, 0x1);
        gbc.writeMem(0x5e75, { 0xe5 });
        gbc.writeMem(0xfca5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfca5, gbc.sp());
        EXPECT(0x5e76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xfca5));
        EXPECT(0xf0, gbc.readMem(0xfca6));
        // E5 030C
        gbc.setState(0x87a4, 0xc29f, 0x87f0, 0x121c, 0xb316, 0xefe8, 0x1, 0x0);
        gbc.writeMem(0x87a4, { 0xe5 });
        gbc.writeMem(0xc29d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc29d, gbc.sp());
        EXPECT(0x87a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x87a4));
        EXPECT(0xe8, gbc.readMem(0xc29d));
        EXPECT(0xef, gbc.readMem(0xc29e));
        // E5 030E
        gbc.setState(0x3ded, 0x9654, 0x29c0, 0xe315, 0x1b78, 0x6958, 0x1, 0x0);
        gbc.writeMem(0x3ded, { 0xe5 });
        gbc.writeMem(0x9652, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9652, gbc.sp());
        EXPECT(0x3dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x9652));
        EXPECT(0x69, gbc.readMem(0x9653));
        // E5 030F
        gbc.setState(0x63a2, 0xf9be, 0x3d90, 0xdba9, 0xd977, 0x190b, 0x0, 0x1);
        gbc.writeMem(0x63a2, { 0xe5 });
        gbc.writeMem(0xf9bc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf9bc, gbc.sp());
        EXPECT(0x63a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xf9bc));
        EXPECT(0x19, gbc.readMem(0xf9bd));
        // E5 0311
        gbc.setState(0x23e, 0xfa1d, 0x9aa0, 0x23df, 0x13c8, 0xc63d, 0x1, 0x0);
        gbc.writeMem(0x23e, { 0xe5 });
        gbc.writeMem(0xfa1b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfa1b, gbc.sp());
        EXPECT(0x23f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xfa1b));
        EXPECT(0xc6, gbc.readMem(0xfa1c));
        // E5 0318
        gbc.setState(0x7369, 0x8155, 0xd870, 0xa30e, 0xf2d5, 0x1027, 0x1, 0x1);
        gbc.writeMem(0x7369, { 0xe5 });
        gbc.writeMem(0x8153, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8153, gbc.sp());
        EXPECT(0x736a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x8153));
        EXPECT(0x10, gbc.readMem(0x8154));
        // E5 031A
        gbc.setState(0x3b26, 0xfb7d, 0x6760, 0xab3b, 0x9d21, 0x74cf, 0x1, 0x1);
        gbc.writeMem(0x3b26, { 0xe5 });
        gbc.writeMem(0xfb7b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xfb7b, gbc.sp());
        EXPECT(0x3b27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xfb7b));
        EXPECT(0x74, gbc.readMem(0xfb7c));
        // E5 031B
        gbc.setState(0x57fb, 0xce4c, 0xccf0, 0x74ba, 0x8aef, 0x46cb, 0x0, 0x1);
        gbc.writeMem(0x57fb, { 0xe5 });
        gbc.writeMem(0xce4a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xce4a, gbc.sp());
        EXPECT(0x57fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce4a));
        EXPECT(0x46, gbc.readMem(0xce4b));
        // E5 031D
        gbc.setState(0xa51a, 0x971c, 0x91c0, 0xf1bb, 0x46b0, 0x8110, 0x0, 0x0);
        gbc.writeMem(0x971a, { 0x0, 0x0 });
        gbc.writeMem(0xa51a, { 0xe5 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x971a, gbc.sp());
        EXPECT(0xa51b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x971a));
        EXPECT(0x81, gbc.readMem(0x971b));
        EXPECT(0xe5, gbc.readMem(0xa51a));
        // E5 0320
        gbc.setState(0x4882, 0xc875, 0x2110, 0x9534, 0x71bc, 0x19a3, 0x1, 0x0);
        gbc.writeMem(0x4882, { 0xe5 });
        gbc.writeMem(0xc873, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc873, gbc.sp());
        EXPECT(0x4883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc873));
        EXPECT(0x19, gbc.readMem(0xc874));
        // E5 0326
        gbc.setState(0xc83e, 0xeaf5, 0xe3c0, 0x5d3e, 0xcf01, 0x88d3, 0x1, 0x1);
        gbc.writeMem(0xc83e, { 0xe5 });
        gbc.writeMem(0xeaf3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xeaf3, gbc.sp());
        EXPECT(0xc83f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xc83e));
        EXPECT(0xd3, gbc.readMem(0xeaf3));
        EXPECT(0x88, gbc.readMem(0xeaf4));
        // E5 0327
        gbc.setState(0xe00a, 0x9b35, 0x2cd0, 0xde0f, 0x9463, 0x7998, 0x1, 0x0);
        gbc.writeMem(0x9b33, { 0x0, 0x0 });
        gbc.writeMem(0xe00a, { 0xe5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9b33, gbc.sp());
        EXPECT(0xe00b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9b33));
        EXPECT(0x79, gbc.readMem(0x9b34));
        EXPECT(0xe5, gbc.readMem(0xe00a));
        // E5 0329
        gbc.setState(0xbf55, 0x9416, 0x9280, 0x2a9b, 0x2b40, 0xdb4d, 0x1, 0x1);
        gbc.writeMem(0x9414, { 0x0, 0x0 });
        gbc.writeMem(0xbf55, { 0xe5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9414, gbc.sp());
        EXPECT(0xbf56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9414));
        EXPECT(0xdb, gbc.readMem(0x9415));
        EXPECT(0xe5, gbc.readMem(0xbf55));
        // E5 032D
        gbc.setState(0x4f97, 0x96ec, 0xc0e0, 0x65eb, 0x95bc, 0xda82, 0x1, 0x1);
        gbc.writeMem(0x4f97, { 0xe5 });
        gbc.writeMem(0x96ea, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x96ea, gbc.sp());
        EXPECT(0x4f98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x96ea));
        EXPECT(0xda, gbc.readMem(0x96eb));
        // E5 032E
        gbc.setState(0xcf1c, 0xf8e7, 0x9010, 0xa572, 0xdcaa, 0x20e4, 0x0, 0x1);
        gbc.writeMem(0xcf1c, { 0xe5 });
        gbc.writeMem(0xf8e5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf8e5, gbc.sp());
        EXPECT(0xcf1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xcf1c));
        EXPECT(0xe4, gbc.readMem(0xf8e5));
        EXPECT(0x20, gbc.readMem(0xf8e6));
        // E5 0334
        gbc.setState(0x5663, 0x802d, 0xbd60, 0x4002, 0x96fc, 0xfe9d, 0x1, 0x0);
        gbc.writeMem(0x5663, { 0xe5 });
        gbc.writeMem(0x802b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x802b, gbc.sp());
        EXPECT(0x5664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x802b));
        EXPECT(0xfe, gbc.readMem(0x802c));
        // E5 0335
        gbc.setState(0x7bf9, 0xea04, 0xda00, 0x1e89, 0xf496, 0x3a11, 0x0, 0x1);
        gbc.writeMem(0x7bf9, { 0xe5 });
        gbc.writeMem(0xea02, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xea02, gbc.sp());
        EXPECT(0x7bfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xea02));
        EXPECT(0x3a, gbc.readMem(0xea03));
        // E5 0336
        gbc.setState(0x9db2, 0xf018, 0x54b0, 0xf296, 0xc448, 0xb2b2, 0x1, 0x0);
        gbc.writeMem(0x9db2, { 0xe5 });
        gbc.writeMem(0xf016, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf016, gbc.sp());
        EXPECT(0x9db3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9db2));
        EXPECT(0xb2, gbc.readMem(0xf016));
        EXPECT(0xb2, gbc.readMem(0xf017));
        // E5 0337
        gbc.setState(0xa062, 0xd3fa, 0x8700, 0x9d9a, 0x380c, 0xd6d4, 0x1, 0x0);
        gbc.writeMem(0xa062, { 0xe5 });
        gbc.writeMem(0xd3f8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd3f8, gbc.sp());
        EXPECT(0xa063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa062));
        EXPECT(0xd4, gbc.readMem(0xd3f8));
        EXPECT(0xd6, gbc.readMem(0xd3f9));
        // E5 0338
        gbc.setState(0xb183, 0xba87, 0xc050, 0xc570, 0x2705, 0xdae5, 0x1, 0x1);
        gbc.writeMem(0xb183, { 0xe5 });
        gbc.writeMem(0xba85, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xba85, gbc.sp());
        EXPECT(0xb184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xb183));
        EXPECT(0xe5, gbc.readMem(0xba85));
        EXPECT(0xda, gbc.readMem(0xba86));
        // E5 0339
        gbc.setState(0x74bf, 0xc401, 0xb380, 0x5c71, 0x65cb, 0xd694, 0x0, 0x0);
        gbc.writeMem(0x74bf, { 0xe5 });
        gbc.writeMem(0xc3ff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc3ff, gbc.sp());
        EXPECT(0x74c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc3ff));
        EXPECT(0xd6, gbc.readMem(0xc400));
        // E5 033A
        gbc.setState(0xd7c, 0x92dd, 0xd5c0, 0x55a6, 0xd312, 0xbb49, 0x0, 0x1);
        gbc.writeMem(0xd7c, { 0xe5 });
        gbc.writeMem(0x92db, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x92db, gbc.sp());
        EXPECT(0xd7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x92db));
        EXPECT(0xbb, gbc.readMem(0x92dc));
        // E5 033B
        gbc.setState(0xa353, 0xa986, 0xfad0, 0x1cef, 0xce0c, 0x91b3, 0x0, 0x0);
        gbc.writeMem(0xa353, { 0xe5 });
        gbc.writeMem(0xa984, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa984, gbc.sp());
        EXPECT(0xa354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa353));
        EXPECT(0xb3, gbc.readMem(0xa984));
        EXPECT(0x91, gbc.readMem(0xa985));
        // E5 033D
        gbc.setState(0x195f, 0xaab1, 0x2110, 0xb185, 0x9cb6, 0x8434, 0x1, 0x0);
        gbc.writeMem(0x195f, { 0xe5 });
        gbc.writeMem(0xaaaf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xaaaf, gbc.sp());
        EXPECT(0x1960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xaaaf));
        EXPECT(0x84, gbc.readMem(0xaab0));
        // E5 033E
        gbc.setState(0xdc08, 0xa825, 0x6c90, 0x60c5, 0x972e, 0xc794, 0x1, 0x0);
        gbc.writeMem(0xa823, { 0x0, 0x0 });
        gbc.writeMem(0xdc08, { 0xe5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa823, gbc.sp());
        EXPECT(0xdc09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa823));
        EXPECT(0xc7, gbc.readMem(0xa824));
        EXPECT(0xe5, gbc.readMem(0xdc08));
        // E5 0340
        gbc.setState(0x55c6, 0x9907, 0xeb0, 0xebd7, 0x1451, 0xe518, 0x1, 0x0);
        gbc.writeMem(0x55c6, { 0xe5 });
        gbc.writeMem(0x9905, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9905, gbc.sp());
        EXPECT(0x55c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x9905));
        EXPECT(0xe5, gbc.readMem(0x9906));
        // E5 0341
        gbc.setState(0xd38c, 0xbb22, 0x4a70, 0xf89b, 0x9b71, 0x3f3e, 0x1, 0x0);
        gbc.writeMem(0xbb20, { 0x0, 0x0 });
        gbc.writeMem(0xd38c, { 0xe5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbb20, gbc.sp());
        EXPECT(0xd38d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xbb20));
        EXPECT(0x3f, gbc.readMem(0xbb21));
        EXPECT(0xe5, gbc.readMem(0xd38c));
        // E5 0342
        gbc.setState(0x9d1d, 0xff9a, 0xd5e0, 0xcb43, 0xb5d5, 0xc087, 0x1, 0x0);
        gbc.writeMem(0x9d1d, { 0xe5 });
        gbc.writeMem(0xff98, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xff98, gbc.sp());
        EXPECT(0x9d1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9d1d));
        EXPECT(0x87, gbc.readMem(0xff98));
        EXPECT(0xc0, gbc.readMem(0xff99));
        // E5 0343
        gbc.setState(0xecbe, 0xcf2f, 0xffb0, 0x653e, 0x5c2d, 0x4844, 0x0, 0x1);
        gbc.writeMem(0xcf2d, { 0x0, 0x0 });
        gbc.writeMem(0xecbe, { 0xe5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcf2d, gbc.sp());
        EXPECT(0xecbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xcf2d));
        EXPECT(0x48, gbc.readMem(0xcf2e));
        EXPECT(0xe5, gbc.readMem(0xecbe));
        // E5 0345
        gbc.setState(0x2985, 0xe2bd, 0xfc00, 0x1f56, 0x44f4, 0xacf3, 0x0, 0x0);
        gbc.writeMem(0x2985, { 0xe5 });
        gbc.writeMem(0xe2bb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe2bb, gbc.sp());
        EXPECT(0x2986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xe2bb));
        EXPECT(0xac, gbc.readMem(0xe2bc));
        // E5 0346
        gbc.setState(0x9f8d, 0xb0c6, 0xc80, 0x4448, 0x945b, 0xeb8c, 0x1, 0x1);
        gbc.writeMem(0x9f8d, { 0xe5 });
        gbc.writeMem(0xb0c4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb0c4, gbc.sp());
        EXPECT(0x9f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9f8d));
        EXPECT(0x8c, gbc.readMem(0xb0c4));
        EXPECT(0xeb, gbc.readMem(0xb0c5));
        // E5 0347
        gbc.setState(0x88ab, 0xac49, 0xe400, 0x9e23, 0xf69f, 0x8081, 0x1, 0x1);
        gbc.writeMem(0x88ab, { 0xe5 });
        gbc.writeMem(0xac47, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xac47, gbc.sp());
        EXPECT(0x88ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x88ab));
        EXPECT(0x81, gbc.readMem(0xac47));
        EXPECT(0x80, gbc.readMem(0xac48));
        // E5 0349
        gbc.setState(0x5d48, 0xe9df, 0x92f0, 0x72d5, 0xc513, 0xd60c, 0x1, 0x0);
        gbc.writeMem(0x5d48, { 0xe5 });
        gbc.writeMem(0xe9dd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe9dd, gbc.sp());
        EXPECT(0x5d49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe9dd));
        EXPECT(0xd6, gbc.readMem(0xe9de));
        // E5 034C
        gbc.setState(0x9e43, 0xfaf9, 0xe3c0, 0xe7af, 0xa252, 0x94ee, 0x1, 0x1);
        gbc.writeMem(0x9e43, { 0xe5 });
        gbc.writeMem(0xfaf7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xfaf7, gbc.sp());
        EXPECT(0x9e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9e43));
        EXPECT(0xee, gbc.readMem(0xfaf7));
        EXPECT(0x94, gbc.readMem(0xfaf8));
        // E5 034D
        gbc.setState(0x20bb, 0x9b5b, 0x4540, 0xfeac, 0x286c, 0x6ad9, 0x0, 0x1);
        gbc.writeMem(0x20bb, { 0xe5 });
        gbc.writeMem(0x9b59, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9b59, gbc.sp());
        EXPECT(0x20bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9b59));
        EXPECT(0x6a, gbc.readMem(0x9b5a));
        // E5 034E
        gbc.setState(0xe5f1, 0xd42a, 0x8920, 0x51d1, 0x8d2c, 0xe639, 0x0, 0x0);
        gbc.writeMem(0xd428, { 0x0, 0x0 });
        gbc.writeMem(0xe5f1, { 0xe5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd428, gbc.sp());
        EXPECT(0xe5f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xd428));
        EXPECT(0xe6, gbc.readMem(0xd429));
        EXPECT(0xe5, gbc.readMem(0xe5f1));
        // E5 034F
        gbc.setState(0x758c, 0xba0a, 0xea60, 0x6c6f, 0x9f63, 0xa72c, 0x1, 0x0);
        gbc.writeMem(0x758c, { 0xe5 });
        gbc.writeMem(0xba08, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xba08, gbc.sp());
        EXPECT(0x758d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xba08));
        EXPECT(0xa7, gbc.readMem(0xba09));
        // E5 0352
        gbc.setState(0xa148, 0xc323, 0x7c40, 0xc3, 0x6bdb, 0xc8da, 0x0, 0x1);
        gbc.writeMem(0xa148, { 0xe5 });
        gbc.writeMem(0xc321, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc321, gbc.sp());
        EXPECT(0xa149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa148));
        EXPECT(0xda, gbc.readMem(0xc321));
        EXPECT(0xc8, gbc.readMem(0xc322));
        // E5 0354
        gbc.setState(0xe38e, 0xedb6, 0xd310, 0xa7a5, 0xfce9, 0xcd35, 0x1, 0x0);
        gbc.writeMem(0xe38e, { 0xe5 });
        gbc.writeMem(0xedb4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xedb4, gbc.sp());
        EXPECT(0xe38f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xe38e));
        EXPECT(0x35, gbc.readMem(0xedb4));
        EXPECT(0xcd, gbc.readMem(0xedb5));
        // E5 0355
        gbc.setState(0x2784, 0xb54f, 0xbaa0, 0x43b5, 0x3dd4, 0x88d6, 0x0, 0x0);
        gbc.writeMem(0x2784, { 0xe5 });
        gbc.writeMem(0xb54d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb54d, gbc.sp());
        EXPECT(0x2785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xb54d));
        EXPECT(0x88, gbc.readMem(0xb54e));
        // E5 0356
        gbc.setState(0x28af, 0xe5df, 0x79a0, 0x3b19, 0x320f, 0xc5a8, 0x0, 0x0);
        gbc.writeMem(0x28af, { 0xe5 });
        gbc.writeMem(0xe5dd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe5dd, gbc.sp());
        EXPECT(0x28b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xe5dd));
        EXPECT(0xc5, gbc.readMem(0xe5de));
        // E5 0357
        gbc.setState(0x0, 0xd259, 0x5e20, 0x8b76, 0x3c63, 0x62c7, 0x0, 0x0);
        gbc.writeMem(0x0, { 0xe5 });
        gbc.writeMem(0xd257, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd257, gbc.sp());
        EXPECT(0x1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xd257));
        EXPECT(0x62, gbc.readMem(0xd258));
        // E5 035C
        gbc.setState(0x80d, 0xd24a, 0x1400, 0x5ea7, 0xbc3d, 0x1c5c, 0x1, 0x0);
        gbc.writeMem(0x80d, { 0xe5 });
        gbc.writeMem(0xd248, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd248, gbc.sp());
        EXPECT(0x80e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xd248));
        EXPECT(0x1c, gbc.readMem(0xd249));
        // E5 035E
        gbc.setState(0xe053, 0xc99b, 0x4be0, 0x4d01, 0x613e, 0x6a81, 0x1, 0x1);
        gbc.writeMem(0xc999, { 0x0, 0x0 });
        gbc.writeMem(0xe053, { 0xe5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc999, gbc.sp());
        EXPECT(0xe054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc999));
        EXPECT(0x6a, gbc.readMem(0xc99a));
        EXPECT(0xe5, gbc.readMem(0xe053));
        // E5 0366
        gbc.setState(0xd0ce, 0xde92, 0xde0, 0x9f0a, 0xc3c3, 0xe8d9, 0x0, 0x0);
        gbc.writeMem(0xd0ce, { 0xe5 });
        gbc.writeMem(0xde90, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xde90, gbc.sp());
        EXPECT(0xd0cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xd0ce));
        EXPECT(0xd9, gbc.readMem(0xde90));
        EXPECT(0xe8, gbc.readMem(0xde91));
        // E5 0367
        gbc.setState(0x9f38, 0xfc29, 0x9410, 0x2dd4, 0x353b, 0x4aa1, 0x0, 0x1);
        gbc.writeMem(0x9f38, { 0xe5 });
        gbc.writeMem(0xfc27, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xfc27, gbc.sp());
        EXPECT(0x9f39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9f38));
        EXPECT(0xa1, gbc.readMem(0xfc27));
        EXPECT(0x4a, gbc.readMem(0xfc28));
        // E5 0369
        gbc.setState(0xefad, 0xc2d1, 0x4510, 0xf2ca, 0x7f84, 0xb22a, 0x0, 0x1);
        gbc.writeMem(0xc2cf, { 0x0, 0x0 });
        gbc.writeMem(0xefad, { 0xe5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc2cf, gbc.sp());
        EXPECT(0xefae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xc2cf));
        EXPECT(0xb2, gbc.readMem(0xc2d0));
        EXPECT(0xe5, gbc.readMem(0xefad));
        // E5 036D
        gbc.setState(0x4aa6, 0x8058, 0x810, 0x292c, 0xca53, 0x625b, 0x1, 0x1);
        gbc.writeMem(0x4aa6, { 0xe5 });
        gbc.writeMem(0x8056, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8056, gbc.sp());
        EXPECT(0x4aa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8056));
        EXPECT(0x62, gbc.readMem(0x8057));
        // E5 0370
        gbc.setState(0xeffc, 0xfc5e, 0x6320, 0xa615, 0xdf43, 0xf23b, 0x1, 0x0);
        gbc.writeMem(0xeffc, { 0xe5 });
        gbc.writeMem(0xfc5c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfc5c, gbc.sp());
        EXPECT(0xeffd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xeffc));
        EXPECT(0x3b, gbc.readMem(0xfc5c));
        EXPECT(0xf2, gbc.readMem(0xfc5d));
        // E5 0373
        gbc.setState(0xbbf0, 0xc523, 0xb4e0, 0x773a, 0x91cd, 0x2566, 0x1, 0x1);
        gbc.writeMem(0xbbf0, { 0xe5 });
        gbc.writeMem(0xc521, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc521, gbc.sp());
        EXPECT(0xbbf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xbbf0));
        EXPECT(0x66, gbc.readMem(0xc521));
        EXPECT(0x25, gbc.readMem(0xc522));
        // E5 0374
        gbc.setState(0xd114, 0xec12, 0xc7d0, 0x3a5b, 0x39a9, 0x794e, 0x1, 0x0);
        gbc.writeMem(0xd114, { 0xe5 });
        gbc.writeMem(0xec10, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xec10, gbc.sp());
        EXPECT(0xd115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xd114));
        EXPECT(0x4e, gbc.readMem(0xec10));
        EXPECT(0x79, gbc.readMem(0xec11));
        // E5 0375
        gbc.setState(0x4121, 0xff97, 0x670, 0xd57, 0x973, 0x1a76, 0x0, 0x1);
        gbc.writeMem(0x4121, { 0xe5 });
        gbc.writeMem(0xff95, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xff95, gbc.sp());
        EXPECT(0x4122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xff95));
        EXPECT(0x1a, gbc.readMem(0xff96));
        // E5 0378
        gbc.setState(0xbd42, 0xf5f6, 0x35b0, 0xbd8d, 0x56ec, 0xfcf, 0x1, 0x0);
        gbc.writeMem(0xbd42, { 0xe5 });
        gbc.writeMem(0xf5f4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf5f4, gbc.sp());
        EXPECT(0xbd43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xbd42));
        EXPECT(0xcf, gbc.readMem(0xf5f4));
        EXPECT(0xf, gbc.readMem(0xf5f5));
        // E5 0379
        gbc.setState(0x1a29, 0x99cc, 0x5560, 0x773d, 0xe791, 0xc50b, 0x0, 0x0);
        gbc.writeMem(0x1a29, { 0xe5 });
        gbc.writeMem(0x99ca, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x99ca, gbc.sp());
        EXPECT(0x1a2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x99ca));
        EXPECT(0xc5, gbc.readMem(0x99cb));
        // E5 037A
        gbc.setState(0x485b, 0x8bad, 0x9280, 0xbefc, 0xd66e, 0x50f0, 0x0, 0x1);
        gbc.writeMem(0x485b, { 0xe5 });
        gbc.writeMem(0x8bab, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8bab, gbc.sp());
        EXPECT(0x485c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8bab));
        EXPECT(0x50, gbc.readMem(0x8bac));
        // E5 037B
        gbc.setState(0xa237, 0xddd3, 0x4110, 0x52b3, 0x14e4, 0x40eb, 0x1, 0x1);
        gbc.writeMem(0xa237, { 0xe5 });
        gbc.writeMem(0xddd1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xddd1, gbc.sp());
        EXPECT(0xa238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa237));
        EXPECT(0xeb, gbc.readMem(0xddd1));
        EXPECT(0x40, gbc.readMem(0xddd2));
        // E5 037D
        gbc.setState(0xe6b9, 0xd3f4, 0x1360, 0x1b1a, 0x6866, 0xd9d7, 0x1, 0x1);
        gbc.writeMem(0xd3f2, { 0x0, 0x0 });
        gbc.writeMem(0xe6b9, { 0xe5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd3f2, gbc.sp());
        EXPECT(0xe6ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xd3f2));
        EXPECT(0xd9, gbc.readMem(0xd3f3));
        EXPECT(0xe5, gbc.readMem(0xe6b9));
        // E5 037E
        gbc.setState(0xc497, 0xf3b6, 0x56d0, 0xb252, 0xb25e, 0xcd36, 0x0, 0x1);
        gbc.writeMem(0xc497, { 0xe5 });
        gbc.writeMem(0xf3b4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf3b4, gbc.sp());
        EXPECT(0xc498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xc497));
        EXPECT(0x36, gbc.readMem(0xf3b4));
        EXPECT(0xcd, gbc.readMem(0xf3b5));
        // E5 037F
        gbc.setState(0x33fc, 0xe86a, 0x2800, 0xdc6, 0xbcd8, 0x3582, 0x0, 0x1);
        gbc.writeMem(0x33fc, { 0xe5 });
        gbc.writeMem(0xe868, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe868, gbc.sp());
        EXPECT(0x33fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xe868));
        EXPECT(0x35, gbc.readMem(0xe869));
        // E5 0381
        gbc.setState(0xec45, 0xc672, 0x8120, 0x2ff0, 0x6510, 0xff30, 0x1, 0x0);
        gbc.writeMem(0xc670, { 0x0, 0x0 });
        gbc.writeMem(0xec45, { 0xe5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc670, gbc.sp());
        EXPECT(0xec46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xc670));
        EXPECT(0xff, gbc.readMem(0xc671));
        EXPECT(0xe5, gbc.readMem(0xec45));
        // E5 0382
        gbc.setState(0x49c3, 0xbcf5, 0x93d0, 0x9fce, 0xaaf, 0x7cb6, 0x0, 0x1);
        gbc.writeMem(0x49c3, { 0xe5 });
        gbc.writeMem(0xbcf3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xbcf3, gbc.sp());
        EXPECT(0x49c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xbcf3));
        EXPECT(0x7c, gbc.readMem(0xbcf4));
        // E5 0387
        gbc.setState(0xa322, 0xf86c, 0x9b70, 0x71a1, 0xfb9, 0x12ba, 0x0, 0x0);
        gbc.writeMem(0xa322, { 0xe5 });
        gbc.writeMem(0xf86a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf86a, gbc.sp());
        EXPECT(0xa323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa322));
        EXPECT(0xba, gbc.readMem(0xf86a));
        EXPECT(0x12, gbc.readMem(0xf86b));
        // E5 0389
        gbc.setState(0xc316, 0x9e7a, 0xa410, 0xb95f, 0xc003, 0xd58c, 0x0, 0x1);
        gbc.writeMem(0x9e78, { 0x0, 0x0 });
        gbc.writeMem(0xc316, { 0xe5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9e78, gbc.sp());
        EXPECT(0xc317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9e78));
        EXPECT(0xd5, gbc.readMem(0x9e79));
        EXPECT(0xe5, gbc.readMem(0xc316));
        // E5 038B
        gbc.setState(0x479e, 0xc17c, 0x8dd0, 0x6ea1, 0x839b, 0x733a, 0x0, 0x1);
        gbc.writeMem(0x479e, { 0xe5 });
        gbc.writeMem(0xc17a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc17a, gbc.sp());
        EXPECT(0x479f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xc17a));
        EXPECT(0x73, gbc.readMem(0xc17b));
        // E5 038D
        gbc.setState(0x224, 0xa3ff, 0x9dd0, 0x125d, 0xa31, 0x6f65, 0x1, 0x0);
        gbc.writeMem(0x224, { 0xe5 });
        gbc.writeMem(0xa3fd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa3fd, gbc.sp());
        EXPECT(0x225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa3fd));
        EXPECT(0x6f, gbc.readMem(0xa3fe));
        // E5 038F
        gbc.setState(0xabe5, 0xad15, 0x3110, 0x66e1, 0x1464, 0xa0a, 0x1, 0x1);
        gbc.writeMem(0xabe5, { 0xe5 });
        gbc.writeMem(0xad13, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xad13, gbc.sp());
        EXPECT(0xabe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xabe5));
        EXPECT(0xa, gbc.readMem(0xad13));
        EXPECT(0xa, gbc.readMem(0xad14));
        // E5 0391
        gbc.setState(0x8128, 0xf09e, 0x76b0, 0x1b6e, 0x90f7, 0xd3a8, 0x1, 0x0);
        gbc.writeMem(0x8128, { 0xe5 });
        gbc.writeMem(0xf09c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf09c, gbc.sp());
        EXPECT(0x8129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x8128));
        EXPECT(0xa8, gbc.readMem(0xf09c));
        EXPECT(0xd3, gbc.readMem(0xf09d));
        // E5 0392
        gbc.setState(0x8236, 0xc8bb, 0xc740, 0xb5ce, 0xa47e, 0x950c, 0x0, 0x0);
        gbc.writeMem(0x8236, { 0xe5 });
        gbc.writeMem(0xc8b9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc8b9, gbc.sp());
        EXPECT(0x8237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x8236));
        EXPECT(0xc, gbc.readMem(0xc8b9));
        EXPECT(0x95, gbc.readMem(0xc8ba));
        // E5 0398
        gbc.setState(0x1a60, 0xd727, 0x2df0, 0xf7e3, 0x4ddd, 0xef35, 0x1, 0x1);
        gbc.writeMem(0x1a60, { 0xe5 });
        gbc.writeMem(0xd725, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd725, gbc.sp());
        EXPECT(0x1a61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xd725));
        EXPECT(0xef, gbc.readMem(0xd726));
        // E5 0399
        gbc.setState(0x937d, 0xe71d, 0x5900, 0x3fa1, 0x72b, 0x80b9, 0x0, 0x1);
        gbc.writeMem(0x937d, { 0xe5 });
        gbc.writeMem(0xe71b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe71b, gbc.sp());
        EXPECT(0x937e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x937d));
        EXPECT(0xb9, gbc.readMem(0xe71b));
        EXPECT(0x80, gbc.readMem(0xe71c));
        // E5 039A
        gbc.setState(0x9c88, 0xddaa, 0xf8f0, 0x8809, 0xf3f7, 0xbe3a, 0x1, 0x0);
        gbc.writeMem(0x9c88, { 0xe5 });
        gbc.writeMem(0xdda8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdda8, gbc.sp());
        EXPECT(0x9c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9c88));
        EXPECT(0x3a, gbc.readMem(0xdda8));
        EXPECT(0xbe, gbc.readMem(0xdda9));
        // E5 039D
        gbc.setState(0x4d50, 0xae23, 0x2720, 0x36d3, 0x3052, 0xec69, 0x1, 0x1);
        gbc.writeMem(0x4d50, { 0xe5 });
        gbc.writeMem(0xae21, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xae21, gbc.sp());
        EXPECT(0x4d51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xae21));
        EXPECT(0xec, gbc.readMem(0xae22));
        // E5 039E
        gbc.setState(0x5c26, 0xc0a4, 0xef80, 0xe812, 0x4b6f, 0x4cf9, 0x1, 0x0);
        gbc.writeMem(0x5c26, { 0xe5 });
        gbc.writeMem(0xc0a2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc0a2, gbc.sp());
        EXPECT(0x5c27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xc0a2));
        EXPECT(0x4c, gbc.readMem(0xc0a3));
        // E5 03A1
        gbc.setState(0xbf5c, 0x94d0, 0x1840, 0xf3c1, 0xa06d, 0xa169, 0x1, 0x0);
        gbc.writeMem(0x94ce, { 0x0, 0x0 });
        gbc.writeMem(0xbf5c, { 0xe5 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x94ce, gbc.sp());
        EXPECT(0xbf5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x94ce));
        EXPECT(0xa1, gbc.readMem(0x94cf));
        EXPECT(0xe5, gbc.readMem(0xbf5c));
        // E5 03A3
        gbc.setState(0xe24e, 0xe78a, 0xc6d0, 0x6377, 0x9074, 0x68d9, 0x0, 0x0);
        gbc.writeMem(0xe24e, { 0xe5 });
        gbc.writeMem(0xe788, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe788, gbc.sp());
        EXPECT(0xe24f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xe24e));
        EXPECT(0xd9, gbc.readMem(0xe788));
        EXPECT(0x68, gbc.readMem(0xe789));
        // E5 03A4
        gbc.setState(0xd2c6, 0xce76, 0x9f00, 0xc965, 0xa98f, 0xf119, 0x0, 0x1);
        gbc.writeMem(0xce74, { 0x0, 0x0 });
        gbc.writeMem(0xd2c6, { 0xe5 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xce74, gbc.sp());
        EXPECT(0xd2c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xce74));
        EXPECT(0xf1, gbc.readMem(0xce75));
        EXPECT(0xe5, gbc.readMem(0xd2c6));
        // E5 03A7
        gbc.setState(0x4f45, 0x9469, 0xe3c0, 0xfe6d, 0x56e2, 0xc367, 0x1, 0x1);
        gbc.writeMem(0x4f45, { 0xe5 });
        gbc.writeMem(0x9467, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9467, gbc.sp());
        EXPECT(0x4f46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x9467));
        EXPECT(0xc3, gbc.readMem(0x9468));
        // E5 03A8
        gbc.setState(0x9f73, 0xf676, 0xb050, 0x9c21, 0x3a50, 0x8d22, 0x1, 0x0);
        gbc.writeMem(0x9f73, { 0xe5 });
        gbc.writeMem(0xf674, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf674, gbc.sp());
        EXPECT(0x9f74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9f73));
        EXPECT(0x22, gbc.readMem(0xf674));
        EXPECT(0x8d, gbc.readMem(0xf675));
        // E5 03AC
        gbc.setState(0x6580, 0xb170, 0x1f0, 0xe36d, 0x465a, 0xb3e6, 0x1, 0x1);
        gbc.writeMem(0x6580, { 0xe5 });
        gbc.writeMem(0xb16e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb16e, gbc.sp());
        EXPECT(0x6581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb16e));
        EXPECT(0xb3, gbc.readMem(0xb16f));
        // E5 03AF
        gbc.setState(0x502a, 0xf3e1, 0x48f0, 0x295e, 0x758f, 0x9105, 0x1, 0x1);
        gbc.writeMem(0x502a, { 0xe5 });
        gbc.writeMem(0xf3df, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf3df, gbc.sp());
        EXPECT(0x502b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xf3df));
        EXPECT(0x91, gbc.readMem(0xf3e0));
        // E5 03B0
        gbc.setState(0xea4, 0xe2a8, 0xc370, 0x7f0a, 0x1f23, 0x1422, 0x0, 0x1);
        gbc.writeMem(0xea4, { 0xe5 });
        gbc.writeMem(0xe2a6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe2a6, gbc.sp());
        EXPECT(0xea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xe2a6));
        EXPECT(0x14, gbc.readMem(0xe2a7));
        // E5 03B3
        gbc.setState(0xe42d, 0xa6e0, 0x7b80, 0x6c5d, 0x3fba, 0x76f7, 0x0, 0x0);
        gbc.writeMem(0xa6de, { 0x0, 0x0 });
        gbc.writeMem(0xe42d, { 0xe5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa6de, gbc.sp());
        EXPECT(0xe42e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xa6de));
        EXPECT(0x76, gbc.readMem(0xa6df));
        EXPECT(0xe5, gbc.readMem(0xe42d));
        // E5 03B8
        gbc.setState(0x8e52, 0xdbbe, 0xbdd0, 0x9498, 0x7291, 0xcb44, 0x1, 0x1);
        gbc.writeMem(0x8e52, { 0xe5 });
        gbc.writeMem(0xdbbc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdbbc, gbc.sp());
        EXPECT(0x8e53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x8e52));
        EXPECT(0x44, gbc.readMem(0xdbbc));
        EXPECT(0xcb, gbc.readMem(0xdbbd));
        // E5 03BA
        gbc.setState(0x2020, 0xe227, 0xe70, 0x38f9, 0xb143, 0xc5e1, 0x0, 0x0);
        gbc.writeMem(0x2020, { 0xe5 });
        gbc.writeMem(0xe225, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe225, gbc.sp());
        EXPECT(0x2021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe225));
        EXPECT(0xc5, gbc.readMem(0xe226));
        // E5 03BB
        gbc.setState(0xe5c0, 0xe232, 0x9690, 0x54c4, 0x627e, 0x892e, 0x1, 0x0);
        gbc.writeMem(0xe230, { 0x0, 0x0 });
        gbc.writeMem(0xe5c0, { 0xe5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe230, gbc.sp());
        EXPECT(0xe5c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe230));
        EXPECT(0x89, gbc.readMem(0xe231));
        EXPECT(0xe5, gbc.readMem(0xe5c0));
        // E5 03BC
        gbc.setState(0x7745, 0xa9d1, 0xace0, 0x8cca, 0x7d80, 0xf37a, 0x1, 0x0);
        gbc.writeMem(0x7745, { 0xe5 });
        gbc.writeMem(0xa9cf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa9cf, gbc.sp());
        EXPECT(0x7746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa9cf));
        EXPECT(0xf3, gbc.readMem(0xa9d0));
        // E5 03C1
        gbc.setState(0x30ec, 0xe70f, 0xd600, 0x85a, 0xfb4e, 0xfd01, 0x1, 0x0);
        gbc.writeMem(0x30ec, { 0xe5 });
        gbc.writeMem(0xe70d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe70d, gbc.sp());
        EXPECT(0x30ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xe70d));
        EXPECT(0xfd, gbc.readMem(0xe70e));
        // E5 03C2
        gbc.setState(0xd89a, 0x8b7b, 0x58d0, 0x5205, 0x4e22, 0xdb73, 0x0, 0x0);
        gbc.writeMem(0x8b79, { 0x0, 0x0 });
        gbc.writeMem(0xd89a, { 0xe5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8b79, gbc.sp());
        EXPECT(0xd89b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x8b79));
        EXPECT(0xdb, gbc.readMem(0x8b7a));
        EXPECT(0xe5, gbc.readMem(0xd89a));
        // E5 03C3
        gbc.setState(0xecc1, 0xa363, 0xf120, 0x8b1e, 0x4ae5, 0x8ba1, 0x0, 0x0);
        gbc.writeMem(0xa361, { 0x0, 0x0 });
        gbc.writeMem(0xecc1, { 0xe5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa361, gbc.sp());
        EXPECT(0xecc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa361));
        EXPECT(0x8b, gbc.readMem(0xa362));
        EXPECT(0xe5, gbc.readMem(0xecc1));
        // E5 03C5
        gbc.setState(0xce12, 0x98ca, 0x74d0, 0xbc81, 0xb706, 0x7af4, 0x0, 0x1);
        gbc.writeMem(0x98c8, { 0x0, 0x0 });
        gbc.writeMem(0xce12, { 0xe5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x98c8, gbc.sp());
        EXPECT(0xce13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x98c8));
        EXPECT(0x7a, gbc.readMem(0x98c9));
        EXPECT(0xe5, gbc.readMem(0xce12));
        // E5 03C6
        gbc.setState(0x1e40, 0xa729, 0x3840, 0xfe30, 0x3f10, 0x22a4, 0x0, 0x1);
        gbc.writeMem(0x1e40, { 0xe5 });
        gbc.writeMem(0xa727, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa727, gbc.sp());
        EXPECT(0x1e41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa727));
        EXPECT(0x22, gbc.readMem(0xa728));
        // E5 03C8
        gbc.setState(0x6f95, 0x88b7, 0xf090, 0x2548, 0x596e, 0xc9a5, 0x0, 0x0);
        gbc.writeMem(0x6f95, { 0xe5 });
        gbc.writeMem(0x88b5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x88b5, gbc.sp());
        EXPECT(0x6f96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x88b5));
        EXPECT(0xc9, gbc.readMem(0x88b6));
        // E5 03C9
        gbc.setState(0xb1f1, 0x9c1a, 0x41b0, 0x3d65, 0x34b0, 0xa3a, 0x0, 0x0);
        gbc.writeMem(0x9c18, { 0x0, 0x0 });
        gbc.writeMem(0xb1f1, { 0xe5 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9c18, gbc.sp());
        EXPECT(0xb1f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x9c18));
        EXPECT(0xa, gbc.readMem(0x9c19));
        EXPECT(0xe5, gbc.readMem(0xb1f1));
        // E5 03CB
        gbc.setState(0xab52, 0xad49, 0xafb0, 0xab79, 0xef63, 0xed78, 0x1, 0x0);
        gbc.writeMem(0xab52, { 0xe5 });
        gbc.writeMem(0xad47, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xad47, gbc.sp());
        EXPECT(0xab53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xab52));
        EXPECT(0x78, gbc.readMem(0xad47));
        EXPECT(0xed, gbc.readMem(0xad48));
        // E5 03CD
        gbc.setState(0x6dc9, 0xa185, 0x7de0, 0x2883, 0xe007, 0xc7df, 0x0, 0x1);
        gbc.writeMem(0x6dc9, { 0xe5 });
        gbc.writeMem(0xa183, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa183, gbc.sp());
        EXPECT(0x6dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xa183));
        EXPECT(0xc7, gbc.readMem(0xa184));
        // E5 03CE
        gbc.setState(0x297c, 0xb6d4, 0x4b30, 0xdeab, 0xd161, 0xe1f2, 0x0, 0x0);
        gbc.writeMem(0x297c, { 0xe5 });
        gbc.writeMem(0xb6d2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb6d2, gbc.sp());
        EXPECT(0x297d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xb6d2));
        EXPECT(0xe1, gbc.readMem(0xb6d3));
        // E5 03D1
        gbc.setState(0x8ec, 0xe17f, 0xd70, 0xe1ee, 0x6ebf, 0x883, 0x0, 0x1);
        gbc.writeMem(0x8ec, { 0xe5 });
        gbc.writeMem(0xe17d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe17d, gbc.sp());
        EXPECT(0x8ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xe17d));
        EXPECT(0x8, gbc.readMem(0xe17e));
        // E5 03D2
        gbc.setState(0x7d69, 0x8f4a, 0x3cb0, 0x2294, 0x8d8, 0x74f1, 0x1, 0x1);
        gbc.writeMem(0x7d69, { 0xe5 });
        gbc.writeMem(0x8f48, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8f48, gbc.sp());
        EXPECT(0x7d6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8f48));
        EXPECT(0x74, gbc.readMem(0x8f49));
        // E5 03D3
        gbc.setState(0x194e, 0xfe3c, 0xe040, 0x22f, 0x22b5, 0xa9c, 0x0, 0x1);
        gbc.writeMem(0x194e, { 0xe5 });
        gbc.writeMem(0xfe3a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xfe3a, gbc.sp());
        EXPECT(0x194f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xfe3a));
        EXPECT(0xa, gbc.readMem(0xfe3b));
        // E5 03DE
        gbc.setState(0x77f1, 0x9077, 0xaa60, 0x1546, 0x8e43, 0x5cea, 0x0, 0x1);
        gbc.writeMem(0x77f1, { 0xe5 });
        gbc.writeMem(0x9075, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9075, gbc.sp());
        EXPECT(0x77f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x9075));
        EXPECT(0x5c, gbc.readMem(0x9076));
        // E5 03DF
        gbc.setState(0xd4b5, 0xcb16, 0xffe0, 0x1eca, 0xb67, 0x3473, 0x0, 0x1);
        gbc.writeMem(0xcb14, { 0x0, 0x0 });
        gbc.writeMem(0xd4b5, { 0xe5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xcb14, gbc.sp());
        EXPECT(0xd4b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xcb14));
        EXPECT(0x34, gbc.readMem(0xcb15));
        EXPECT(0xe5, gbc.readMem(0xd4b5));
        // E5 03E4
        gbc.setState(0xe6b6, 0x8a48, 0x55b0, 0x4b5, 0xb496, 0xa966, 0x0, 0x1);
        gbc.writeMem(0x8a46, { 0x0, 0x0 });
        gbc.writeMem(0xe6b6, { 0xe5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8a46, gbc.sp());
        EXPECT(0xe6b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x8a46));
        EXPECT(0xa9, gbc.readMem(0x8a47));
        EXPECT(0xe5, gbc.readMem(0xe6b6));
        // E5 03E5
        gbc.setState(0xeac6, 0xbe09, 0x8660, 0xe1f5, 0xe885, 0x50e8, 0x0, 0x1);
        gbc.writeMem(0xbe07, { 0x0, 0x0 });
        gbc.writeMem(0xeac6, { 0xe5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbe07, gbc.sp());
        EXPECT(0xeac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xbe07));
        EXPECT(0x50, gbc.readMem(0xbe08));
        EXPECT(0xe5, gbc.readMem(0xeac6));
    }
