    TEST(gbcemu, opcode_cb_b4) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB B4 0000
        gbc.setState(0x72a9, 0xaaf6, 0xa6a0, 0xe3e9, 0xecc2, 0x9366, 0x1, 0x0);
        gbc.writeMem(0x72a9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xaaf6, gbc.sp());
        EXPECT(0x72ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0001
        gbc.setState(0xe554, 0xdd92, 0x650, 0x4783, 0xd41e, 0x6999, 0x1, 0x1);
        gbc.writeMem(0xe554, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdd92, gbc.sp());
        EXPECT(0xe556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe554));
        EXPECT(0xb4, gbc.readMem(0xe555));
        // CB B4 0002
        gbc.setState(0x681d, 0x6ac6, 0x80f0, 0xc41b, 0xb036, 0x88b4, 0x0, 0x0);
        gbc.writeMem(0x681d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6ac6, gbc.sp());
        EXPECT(0x681f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0003
        gbc.setState(0x5956, 0xc4ea, 0xe550, 0x1179, 0xfd8d, 0xb735, 0x0, 0x0);
        gbc.writeMem(0x5956, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc4ea, gbc.sp());
        EXPECT(0x5958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0004
        gbc.setState(0x5a73, 0x8ff1, 0x8830, 0x7824, 0xdcd4, 0x25a8, 0x1, 0x1);
        gbc.writeMem(0x5a73, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8ff1, gbc.sp());
        EXPECT(0x5a75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0005
        gbc.setState(0x2565, 0x6183, 0xd50, 0x6c69, 0xbb98, 0xec2f, 0x1, 0x0);
        gbc.writeMem(0x2565, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6183, gbc.sp());
        EXPECT(0x2567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0006
        gbc.setState(0xee46, 0xb86f, 0xbb00, 0xefb2, 0x1b3f, 0x39d9, 0x0, 0x0);
        gbc.writeMem(0xee46, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb86f, gbc.sp());
        EXPECT(0xee48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee46));
        EXPECT(0xb4, gbc.readMem(0xee47));
        // CB B4 0007
        gbc.setState(0xd66d, 0xd7da, 0xfc70, 0xf148, 0x80d1, 0x83e7, 0x1, 0x0);
        gbc.writeMem(0xd66d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd7da, gbc.sp());
        EXPECT(0xd66f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd66d));
        EXPECT(0xb4, gbc.readMem(0xd66e));
        // CB B4 0008
        gbc.setState(0xd7f5, 0xb8e9, 0x25d0, 0xfb62, 0x7e94, 0x6d30, 0x0, 0x0);
        gbc.writeMem(0xd7f5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb8e9, gbc.sp());
        EXPECT(0xd7f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7f5));
        EXPECT(0xb4, gbc.readMem(0xd7f6));
        // CB B4 000A
        gbc.setState(0x2fa5, 0x1b95, 0x6e50, 0x30b2, 0x54b6, 0xf2ff, 0x0, 0x1);
        gbc.writeMem(0x2fa5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1b95, gbc.sp());
        EXPECT(0x2fa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 000B
        gbc.setState(0x1c6, 0x169d, 0x6710, 0xb713, 0xf1f0, 0x899b, 0x1, 0x0);
        gbc.writeMem(0x1c6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x169d, gbc.sp());
        EXPECT(0x1c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 000C
        gbc.setState(0x58e8, 0x1e80, 0x4f60, 0x9548, 0x59d1, 0xa4c9, 0x0, 0x0);
        gbc.writeMem(0x58e8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1e80, gbc.sp());
        EXPECT(0x58ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 000D
        gbc.setState(0x9e27, 0xbbf5, 0x46c0, 0xaeaa, 0x4b40, 0xcd9, 0x1, 0x1);
        gbc.writeMem(0x9e27, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbbf5, gbc.sp());
        EXPECT(0x9e29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e27));
        EXPECT(0xb4, gbc.readMem(0x9e28));
        // CB B4 000E
        gbc.setState(0x7207, 0x5bf5, 0x8fd0, 0xb090, 0xb849, 0xcc52, 0x0, 0x0);
        gbc.writeMem(0x7207, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5bf5, gbc.sp());
        EXPECT(0x7209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 000F
        gbc.setState(0x6695, 0xe250, 0x3930, 0x3798, 0x9b0, 0xf0b4, 0x1, 0x0);
        gbc.writeMem(0x6695, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe250, gbc.sp());
        EXPECT(0x6697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0010
        gbc.setState(0xe5c1, 0x3372, 0x5260, 0xfc27, 0xd64e, 0x6398, 0x1, 0x1);
        gbc.writeMem(0xe5c1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3372, gbc.sp());
        EXPECT(0xe5c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5c1));
        EXPECT(0xb4, gbc.readMem(0xe5c2));
        // CB B4 0011
        gbc.setState(0xa7a7, 0x9512, 0xa790, 0x3524, 0x6703, 0xd73d, 0x0, 0x1);
        gbc.writeMem(0xa7a7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9512, gbc.sp());
        EXPECT(0xa7a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a7));
        EXPECT(0xb4, gbc.readMem(0xa7a8));
        // CB B4 0012
        gbc.setState(0x7722, 0x9845, 0x30d0, 0xebf6, 0x5c3c, 0x87e7, 0x0, 0x0);
        gbc.writeMem(0x7722, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9845, gbc.sp());
        EXPECT(0x7724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0013
        gbc.setState(0x7e32, 0xd18b, 0x9b60, 0x5faf, 0x99c7, 0xe97a, 0x0, 0x1);
        gbc.writeMem(0x7e32, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd18b, gbc.sp());
        EXPECT(0x7e34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0014
        gbc.setState(0xd87c, 0xe093, 0xdc90, 0xb04f, 0x9b1f, 0x39ea, 0x0, 0x0);
        gbc.writeMem(0xd87c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe093, gbc.sp());
        EXPECT(0xd87e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd87c));
        EXPECT(0xb4, gbc.readMem(0xd87d));
        // CB B4 0015
        gbc.setState(0x594a, 0xa4c0, 0x9610, 0x45d, 0x84fa, 0x6f82, 0x0, 0x1);
        gbc.writeMem(0x594a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa4c0, gbc.sp());
        EXPECT(0x594c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0016
        gbc.setState(0xd020, 0xe2eb, 0xd410, 0x9863, 0xf64f, 0x87d4, 0x1, 0x1);
        gbc.writeMem(0xd020, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe2eb, gbc.sp());
        EXPECT(0xd022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd020));
        EXPECT(0xb4, gbc.readMem(0xd021));
        // CB B4 0017
        gbc.setState(0x5fc5, 0xc74a, 0xd7d0, 0x367c, 0x84f, 0xf954, 0x0, 0x0);
        gbc.writeMem(0x5fc5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc74a, gbc.sp());
        EXPECT(0x5fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0018
        gbc.setState(0x1e60, 0x372a, 0x1a40, 0xe992, 0xfcd3, 0x57fb, 0x1, 0x1);
        gbc.writeMem(0x1e60, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x372a, gbc.sp());
        EXPECT(0x1e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0019
        gbc.setState(0x6a5d, 0x7cb9, 0xffc0, 0xd3ff, 0xd45a, 0xd6f1, 0x1, 0x0);
        gbc.writeMem(0x6a5d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7cb9, gbc.sp());
        EXPECT(0x6a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 001A
        gbc.setState(0x4def, 0x41b5, 0x6560, 0x28db, 0xb130, 0x19d3, 0x0, 0x0);
        gbc.writeMem(0x4def, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x41b5, gbc.sp());
        EXPECT(0x4df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 001B
        gbc.setState(0x6d53, 0xc23a, 0xd190, 0xb3b, 0xc21e, 0x513b, 0x0, 0x0);
        gbc.writeMem(0x6d53, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc23a, gbc.sp());
        EXPECT(0x6d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 001C
        gbc.setState(0xe77e, 0x266f, 0x4930, 0xee43, 0xee02, 0x693f, 0x0, 0x1);
        gbc.writeMem(0xe77e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x266f, gbc.sp());
        EXPECT(0xe780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe77e));
        EXPECT(0xb4, gbc.readMem(0xe77f));
        // CB B4 001D
        gbc.setState(0x94c1, 0xfaa4, 0xde80, 0x3bd4, 0x703d, 0x5f6c, 0x1, 0x0);
        gbc.writeMem(0x94c1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfaa4, gbc.sp());
        EXPECT(0x94c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c1));
        EXPECT(0xb4, gbc.readMem(0x94c2));
        // CB B4 001E
        gbc.setState(0xc062, 0xe72c, 0xe710, 0x3068, 0x5bae, 0xc5a5, 0x1, 0x0);
        gbc.writeMem(0xc062, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe72c, gbc.sp());
        EXPECT(0xc064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc062));
        EXPECT(0xb4, gbc.readMem(0xc063));
        // CB B4 001F
        gbc.setState(0xac0c, 0x17e, 0xd9d0, 0x44aa, 0xfb07, 0xbdf2, 0x1, 0x0);
        gbc.writeMem(0xac0c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x17e, gbc.sp());
        EXPECT(0xac0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac0c));
        EXPECT(0xb4, gbc.readMem(0xac0d));
        // CB B4 0020
        gbc.setState(0x464d, 0xa09b, 0xe80, 0x4b6f, 0xfdb7, 0x71c0, 0x1, 0x0);
        gbc.writeMem(0x464d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa09b, gbc.sp());
        EXPECT(0x464f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0021
        gbc.setState(0xe710, 0x40a6, 0xcb30, 0x985d, 0xdb58, 0x2318, 0x1, 0x0);
        gbc.writeMem(0xe710, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x40a6, gbc.sp());
        EXPECT(0xe712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe710));
        EXPECT(0xb4, gbc.readMem(0xe711));
        // CB B4 0022
        gbc.setState(0x404f, 0x6a43, 0xe3d0, 0x7116, 0x7803, 0x4758, 0x0, 0x0);
        gbc.writeMem(0x404f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6a43, gbc.sp());
        EXPECT(0x4051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0023
        gbc.setState(0x652c, 0x7dba, 0x1f30, 0x194a, 0x2749, 0x361f, 0x1, 0x0);
        gbc.writeMem(0x652c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7dba, gbc.sp());
        EXPECT(0x652e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0024
        gbc.setState(0x221a, 0x50aa, 0x2830, 0xe731, 0x9abe, 0x89c6, 0x0, 0x0);
        gbc.writeMem(0x221a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x50aa, gbc.sp());
        EXPECT(0x221c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0025
        gbc.setState(0x7aba, 0x870f, 0xccb0, 0xbb85, 0xcb9c, 0x2038, 0x1, 0x1);
        gbc.writeMem(0x7aba, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x870f, gbc.sp());
        EXPECT(0x7abc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0026
        gbc.setState(0x1535, 0x3976, 0x5fb0, 0x4f61, 0xa57a, 0x17e5, 0x0, 0x0);
        gbc.writeMem(0x1535, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3976, gbc.sp());
        EXPECT(0x1537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0027
        gbc.setState(0xa452, 0xd2f5, 0x6490, 0xb814, 0xe711, 0x8b81, 0x1, 0x1);
        gbc.writeMem(0xa452, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd2f5, gbc.sp());
        EXPECT(0xa454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa452));
        EXPECT(0xb4, gbc.readMem(0xa453));
        // CB B4 0028
        gbc.setState(0x39f, 0xcfb6, 0xdba0, 0x6eed, 0x843c, 0x250d, 0x0, 0x0);
        gbc.writeMem(0x39f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcfb6, gbc.sp());
        EXPECT(0x3a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0029
        gbc.setState(0x513c, 0xb267, 0xd630, 0x754b, 0xda65, 0x6bc9, 0x1, 0x1);
        gbc.writeMem(0x513c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb267, gbc.sp());
        EXPECT(0x513e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 002A
        gbc.setState(0x8de8, 0x4e21, 0xe6d0, 0x6f83, 0x3856, 0xe62e, 0x0, 0x0);
        gbc.writeMem(0x8de8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4e21, gbc.sp());
        EXPECT(0x8dea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de8));
        EXPECT(0xb4, gbc.readMem(0x8de9));
        // CB B4 002B
        gbc.setState(0x6336, 0x91e4, 0x5700, 0xf09b, 0xdda1, 0x40e, 0x1, 0x0);
        gbc.writeMem(0x6336, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x91e4, gbc.sp());
        EXPECT(0x6338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 002C
        gbc.setState(0x6227, 0x5e73, 0xc560, 0x5209, 0x85b3, 0xae74, 0x0, 0x0);
        gbc.writeMem(0x6227, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5e73, gbc.sp());
        EXPECT(0x6229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 002D
        gbc.setState(0x8ca7, 0xafa7, 0x5550, 0xf035, 0xf36f, 0x5676, 0x1, 0x0);
        gbc.writeMem(0x8ca7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xafa7, gbc.sp());
        EXPECT(0x8ca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca7));
        EXPECT(0xb4, gbc.readMem(0x8ca8));
        // CB B4 002E
        gbc.setState(0x29cd, 0x3ec2, 0x3910, 0x15ea, 0x118a, 0x3883, 0x1, 0x1);
        gbc.writeMem(0x29cd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3ec2, gbc.sp());
        EXPECT(0x29cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 002F
        gbc.setState(0x9098, 0x1b5a, 0xbf90, 0x7883, 0xe7c7, 0xf9e0, 0x1, 0x0);
        gbc.writeMem(0x9098, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1b5a, gbc.sp());
        EXPECT(0x909a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9098));
        EXPECT(0xb4, gbc.readMem(0x9099));
        // CB B4 0030
        gbc.setState(0x2057, 0x9bb5, 0xe720, 0x3c9a, 0xe0ab, 0x2be1, 0x0, 0x1);
        gbc.writeMem(0x2057, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9bb5, gbc.sp());
        EXPECT(0x2059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0031
        gbc.setState(0x50a2, 0xd79d, 0x3dc0, 0xdec2, 0x191b, 0xc1f2, 0x0, 0x1);
        gbc.writeMem(0x50a2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd79d, gbc.sp());
        EXPECT(0x50a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0032
        gbc.setState(0x6e34, 0x4a57, 0x16b0, 0x6096, 0xce0c, 0x64bb, 0x1, 0x0);
        gbc.writeMem(0x6e34, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4a57, gbc.sp());
        EXPECT(0x6e36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0033
        gbc.setState(0x8ec5, 0xb95a, 0x5c60, 0xe57c, 0x201, 0x8d29, 0x0, 0x0);
        gbc.writeMem(0x8ec5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb95a, gbc.sp());
        EXPECT(0x8ec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ec5));
        EXPECT(0xb4, gbc.readMem(0x8ec6));
        // CB B4 0034
        gbc.setState(0x9e98, 0x76b4, 0xacd0, 0x4924, 0x2c3c, 0x1bac, 0x0, 0x1);
        gbc.writeMem(0x9e98, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x76b4, gbc.sp());
        EXPECT(0x9e9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e98));
        EXPECT(0xb4, gbc.readMem(0x9e99));
        // CB B4 0035
        gbc.setState(0xd903, 0x37b4, 0xb1c0, 0x9ec8, 0xfc6c, 0x376e, 0x0, 0x1);
        gbc.writeMem(0xd903, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x37b4, gbc.sp());
        EXPECT(0xd905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd903));
        EXPECT(0xb4, gbc.readMem(0xd904));
        // CB B4 0036
        gbc.setState(0xab9a, 0x42e4, 0xcbf0, 0x93f3, 0x44b6, 0x2883, 0x0, 0x0);
        gbc.writeMem(0xab9a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x42e4, gbc.sp());
        EXPECT(0xab9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab9a));
        EXPECT(0xb4, gbc.readMem(0xab9b));
        // CB B4 0037
        gbc.setState(0x267b, 0x739b, 0x4b30, 0x86ad, 0x6dd4, 0xad8a, 0x0, 0x1);
        gbc.writeMem(0x267b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x739b, gbc.sp());
        EXPECT(0x267d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0038
        gbc.setState(0xceee, 0x791b, 0x87d0, 0xa03e, 0xe45f, 0xe974, 0x0, 0x0);
        gbc.writeMem(0xceee, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x791b, gbc.sp());
        EXPECT(0xcef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceee));
        EXPECT(0xb4, gbc.readMem(0xceef));
        // CB B4 0039
        gbc.setState(0xee85, 0x89c8, 0x1640, 0xa50c, 0x513f, 0xe23c, 0x0, 0x1);
        gbc.writeMem(0xee85, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x89c8, gbc.sp());
        EXPECT(0xee87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee85));
        EXPECT(0xb4, gbc.readMem(0xee86));
        // CB B4 003B
        gbc.setState(0x1ea7, 0x5230, 0x67b0, 0xb5e0, 0xaf7d, 0x1b0f, 0x1, 0x1);
        gbc.writeMem(0x1ea7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5230, gbc.sp());
        EXPECT(0x1ea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 003C
        gbc.setState(0x8b07, 0xbbab, 0xff10, 0xc779, 0x69f6, 0x7499, 0x0, 0x0);
        gbc.writeMem(0x8b07, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbbab, gbc.sp());
        EXPECT(0x8b09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b07));
        EXPECT(0xb4, gbc.readMem(0x8b08));
        // CB B4 003D
        gbc.setState(0x9d00, 0xcbe2, 0xbfe0, 0x849e, 0xac3d, 0xd3ef, 0x1, 0x0);
        gbc.writeMem(0x9d00, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xcbe2, gbc.sp());
        EXPECT(0x9d02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d00));
        EXPECT(0xb4, gbc.readMem(0x9d01));
        // CB B4 003E
        gbc.setState(0x1722, 0xa6f5, 0xf5f0, 0xf3b9, 0x2818, 0xb769, 0x1, 0x0);
        gbc.writeMem(0x1722, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa6f5, gbc.sp());
        EXPECT(0x1724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 003F
        gbc.setState(0xc9d1, 0x7092, 0xde30, 0xf277, 0xb796, 0x1121, 0x1, 0x0);
        gbc.writeMem(0xc9d1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7092, gbc.sp());
        EXPECT(0xc9d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9d1));
        EXPECT(0xb4, gbc.readMem(0xc9d2));
        // CB B4 0041
        gbc.setState(0xe0f1, 0xe627, 0x61c0, 0x4fcd, 0xef1b, 0x275d, 0x0, 0x1);
        gbc.writeMem(0xe0f1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe627, gbc.sp());
        EXPECT(0xe0f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0f1));
        EXPECT(0xb4, gbc.readMem(0xe0f2));
        // CB B4 0042
        gbc.setState(0x4975, 0xa45b, 0x62f0, 0xfc9f, 0x3529, 0x3a97, 0x1, 0x1);
        gbc.writeMem(0x4975, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa45b, gbc.sp());
        EXPECT(0x4977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0043
        gbc.setState(0x3f7b, 0x2759, 0x6200, 0xcb2d, 0xd961, 0xb76, 0x0, 0x1);
        gbc.writeMem(0x3f7b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2759, gbc.sp());
        EXPECT(0x3f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0044
        gbc.setState(0x2985, 0x1c30, 0xb470, 0xdfde, 0xb756, 0xaf09, 0x0, 0x1);
        gbc.writeMem(0x2985, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1c30, gbc.sp());
        EXPECT(0x2987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0045
        gbc.setState(0xb504, 0xd7f3, 0x89e0, 0xa643, 0xae53, 0x1b4e, 0x0, 0x1);
        gbc.writeMem(0xb504, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd7f3, gbc.sp());
        EXPECT(0xb506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb504));
        EXPECT(0xb4, gbc.readMem(0xb505));
        // CB B4 0046
        gbc.setState(0xbfc3, 0xcdc4, 0xace0, 0xc223, 0xdf89, 0xd52c, 0x0, 0x1);
        gbc.writeMem(0xbfc3, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcdc4, gbc.sp());
        EXPECT(0xbfc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc3));
        EXPECT(0xb4, gbc.readMem(0xbfc4));
        // CB B4 0047
        gbc.setState(0xdb45, 0xe939, 0xe110, 0xd2f3, 0xbdf3, 0x3d68, 0x0, 0x0);
        gbc.writeMem(0xdb45, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe939, gbc.sp());
        EXPECT(0xdb47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb45));
        EXPECT(0xb4, gbc.readMem(0xdb46));
        // CB B4 0048
        gbc.setState(0xa82c, 0x486f, 0xc640, 0x9cea, 0xf016, 0x6ae2, 0x0, 0x1);
        gbc.writeMem(0xa82c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x486f, gbc.sp());
        EXPECT(0xa82e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa82c));
        EXPECT(0xb4, gbc.readMem(0xa82d));
        // CB B4 0049
        gbc.setState(0x8cbb, 0xf5d4, 0x3be0, 0xc069, 0x5c0, 0x5097, 0x1, 0x1);
        gbc.writeMem(0x8cbb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf5d4, gbc.sp());
        EXPECT(0x8cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cbb));
        EXPECT(0xb4, gbc.readMem(0x8cbc));
        // CB B4 004A
        gbc.setState(0xb2a1, 0x4e11, 0x4c00, 0x3ae5, 0x6300, 0x23a1, 0x1, 0x0);
        gbc.writeMem(0xb2a1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4e11, gbc.sp());
        EXPECT(0xb2a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a1));
        EXPECT(0xb4, gbc.readMem(0xb2a2));
        // CB B4 004B
        gbc.setState(0x7938, 0xf886, 0xb990, 0x98c4, 0xa7aa, 0x28fe, 0x1, 0x0);
        gbc.writeMem(0x7938, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf886, gbc.sp());
        EXPECT(0x793a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 004C
        gbc.setState(0xd5b, 0xbacc, 0x72f0, 0xb96c, 0xee39, 0x445a, 0x0, 0x0);
        gbc.writeMem(0xd5b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbacc, gbc.sp());
        EXPECT(0xd5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 004D
        gbc.setState(0x1dd9, 0xd621, 0x18c0, 0x2945, 0x68fc, 0xb105, 0x0, 0x0);
        gbc.writeMem(0x1dd9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd621, gbc.sp());
        EXPECT(0x1ddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 004E
        gbc.setState(0x1d9, 0x12f4, 0xb6c0, 0xef85, 0xc6d8, 0x98d0, 0x1, 0x1);
        gbc.writeMem(0x1d9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x12f4, gbc.sp());
        EXPECT(0x1db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0050
        gbc.setState(0x448, 0x6f2e, 0x9ce0, 0xb560, 0xc169, 0x604, 0x1, 0x0);
        gbc.writeMem(0x448, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6f2e, gbc.sp());
        EXPECT(0x44a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0051
        gbc.setState(0x8807, 0x6109, 0x82b0, 0xa0a3, 0xefa, 0x91db, 0x1, 0x0);
        gbc.writeMem(0x8807, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6109, gbc.sp());
        EXPECT(0x8809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8807));
        EXPECT(0xb4, gbc.readMem(0x8808));
        // CB B4 0052
        gbc.setState(0xe8f9, 0x37be, 0xfe80, 0x19e7, 0x17ba, 0x8114, 0x0, 0x1);
        gbc.writeMem(0xe8f9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x37be, gbc.sp());
        EXPECT(0xe8fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8f9));
        EXPECT(0xb4, gbc.readMem(0xe8fa));
        // CB B4 0053
        gbc.setState(0xc85a, 0x74df, 0xff00, 0xac64, 0x299b, 0x321e, 0x0, 0x0);
        gbc.writeMem(0xc85a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x74df, gbc.sp());
        EXPECT(0xc85c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc85a));
        EXPECT(0xb4, gbc.readMem(0xc85b));
        // CB B4 0054
        gbc.setState(0x8f79, 0x4f35, 0x5d20, 0x3e64, 0x898b, 0x4e86, 0x0, 0x1);
        gbc.writeMem(0x8f79, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4f35, gbc.sp());
        EXPECT(0x8f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f79));
        EXPECT(0xb4, gbc.readMem(0x8f7a));
        // CB B4 0055
        gbc.setState(0x67e2, 0x3513, 0x97b0, 0x65cb, 0x1f35, 0xcd1d, 0x1, 0x1);
        gbc.writeMem(0x67e2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3513, gbc.sp());
        EXPECT(0x67e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0056
        gbc.setState(0x3771, 0x3ddd, 0xc2b0, 0x5068, 0x55d6, 0x74b2, 0x0, 0x0);
        gbc.writeMem(0x3771, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3ddd, gbc.sp());
        EXPECT(0x3773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0057
        gbc.setState(0xbb7a, 0x3bab, 0x7210, 0xb2ad, 0xcb37, 0x40a6, 0x0, 0x1);
        gbc.writeMem(0xbb7a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3bab, gbc.sp());
        EXPECT(0xbb7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb7a));
        EXPECT(0xb4, gbc.readMem(0xbb7b));
        // CB B4 0058
        gbc.setState(0x1360, 0x73a2, 0x9ff0, 0x2927, 0xeb03, 0x1cdd, 0x1, 0x0);
        gbc.writeMem(0x1360, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x73a2, gbc.sp());
        EXPECT(0x1362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0059
        gbc.setState(0x17ee, 0x9bf9, 0xf340, 0x88ce, 0xa977, 0x51a1, 0x0, 0x0);
        gbc.writeMem(0x17ee, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9bf9, gbc.sp());
        EXPECT(0x17f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 005A
        gbc.setState(0x2cdc, 0xc2c3, 0x25f0, 0x14ce, 0x7ae8, 0x734a, 0x1, 0x0);
        gbc.writeMem(0x2cdc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc2c3, gbc.sp());
        EXPECT(0x2cde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 005B
        gbc.setState(0x60bd, 0xb31b, 0x8fb0, 0x6e2c, 0x9b09, 0x63f, 0x0, 0x0);
        gbc.writeMem(0x60bd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb31b, gbc.sp());
        EXPECT(0x60bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 005C
        gbc.setState(0x5d63, 0x6845, 0xadd0, 0xa701, 0xfcf8, 0x8292, 0x1, 0x1);
        gbc.writeMem(0x5d63, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6845, gbc.sp());
        EXPECT(0x5d65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 005D
        gbc.setState(0x50df, 0xda38, 0x6980, 0x6364, 0x57cc, 0x3090, 0x0, 0x1);
        gbc.writeMem(0x50df, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xda38, gbc.sp());
        EXPECT(0x50e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 005E
        gbc.setState(0xdca5, 0x7971, 0x4170, 0xf3e0, 0xd9e0, 0xb12f, 0x1, 0x0);
        gbc.writeMem(0xdca5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7971, gbc.sp());
        EXPECT(0xdca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdca5));
        EXPECT(0xb4, gbc.readMem(0xdca6));
        // CB B4 005F
        gbc.setState(0xc7d4, 0x2ae5, 0x82d0, 0xae26, 0xd2dc, 0xc36b, 0x0, 0x1);
        gbc.writeMem(0xc7d4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2ae5, gbc.sp());
        EXPECT(0xc7d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7d4));
        EXPECT(0xb4, gbc.readMem(0xc7d5));
        // CB B4 0060
        gbc.setState(0x6ffe, 0x7c47, 0x3f60, 0x69d, 0xb6e9, 0xdefe, 0x1, 0x1);
        gbc.writeMem(0x6ffe, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7c47, gbc.sp());
        EXPECT(0x7000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0061
        gbc.setState(0x579c, 0xd094, 0x5070, 0xa270, 0x7fc8, 0x5ff1, 0x1, 0x0);
        gbc.writeMem(0x579c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd094, gbc.sp());
        EXPECT(0x579e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0063
        gbc.setState(0x20a8, 0x18f9, 0x2cb0, 0xbcb2, 0x9f1d, 0x4cd4, 0x0, 0x1);
        gbc.writeMem(0x20a8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x18f9, gbc.sp());
        EXPECT(0x20aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0064
        gbc.setState(0xe8ad, 0xf3cb, 0xf200, 0x2e61, 0x6bac, 0xcfc2, 0x1, 0x0);
        gbc.writeMem(0xe8ad, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf3cb, gbc.sp());
        EXPECT(0xe8af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ad));
        EXPECT(0xb4, gbc.readMem(0xe8ae));
        // CB B4 0065
        gbc.setState(0x5980, 0xf527, 0x8400, 0x348c, 0x8812, 0x3ff2, 0x1, 0x1);
        gbc.writeMem(0x5980, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf527, gbc.sp());
        EXPECT(0x5982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0066
        gbc.setState(0x64c2, 0xbff5, 0x3ab0, 0x1d7f, 0xba4d, 0x3784, 0x0, 0x1);
        gbc.writeMem(0x64c2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbff5, gbc.sp());
        EXPECT(0x64c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0067
        gbc.setState(0x8cff, 0x136a, 0x71f0, 0x47a0, 0x231d, 0x66ba, 0x1, 0x0);
        gbc.writeMem(0x8cff, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x136a, gbc.sp());
        EXPECT(0x8d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cff));
        EXPECT(0xb4, gbc.readMem(0x8d00));
        // CB B4 0068
        gbc.setState(0xd7c6, 0xc081, 0xbe50, 0x4f7a, 0x21e3, 0x15d7, 0x0, 0x0);
        gbc.writeMem(0xd7c6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc081, gbc.sp());
        EXPECT(0xd7c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c6));
        EXPECT(0xb4, gbc.readMem(0xd7c7));
        // CB B4 0069
        gbc.setState(0x4ede, 0x7ee, 0xf100, 0xcc2e, 0x75dd, 0x185e, 0x1, 0x0);
        gbc.writeMem(0x4ede, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7ee, gbc.sp());
        EXPECT(0x4ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 006B
        gbc.setState(0x4935, 0x4c00, 0x7da0, 0x5095, 0x2caf, 0xaf45, 0x1, 0x0);
        gbc.writeMem(0x4935, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4c00, gbc.sp());
        EXPECT(0x4937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 006C
        gbc.setState(0x2d78, 0xb20e, 0x7860, 0x89f7, 0xa100, 0x1c70, 0x0, 0x1);
        gbc.writeMem(0x2d78, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb20e, gbc.sp());
        EXPECT(0x2d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 006D
        gbc.setState(0xf80, 0xde7a, 0xde60, 0xefc9, 0xb00e, 0x6800, 0x1, 0x1);
        gbc.writeMem(0xf80, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xde7a, gbc.sp());
        EXPECT(0xf82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 006E
        gbc.setState(0x4f59, 0x69bc, 0xc4c0, 0x7cc6, 0x9df0, 0x6d88, 0x1, 0x0);
        gbc.writeMem(0x4f59, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x69bc, gbc.sp());
        EXPECT(0x4f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 006F
        gbc.setState(0xeb2, 0xfd61, 0xbe10, 0xd322, 0xcf58, 0xca72, 0x1, 0x1);
        gbc.writeMem(0xeb2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xfd61, gbc.sp());
        EXPECT(0xeb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0070
        gbc.setState(0x7df7, 0x1503, 0x8330, 0xfc92, 0x65c5, 0xeff, 0x1, 0x0);
        gbc.writeMem(0x7df7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1503, gbc.sp());
        EXPECT(0x7df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0071
        gbc.setState(0x7ea8, 0xf54d, 0xc190, 0x7590, 0xb82d, 0x63a, 0x0, 0x0);
        gbc.writeMem(0x7ea8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf54d, gbc.sp());
        EXPECT(0x7eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0073
        gbc.setState(0x2e96, 0x33fc, 0xd3f0, 0xb761, 0x63d7, 0x52a9, 0x0, 0x0);
        gbc.writeMem(0x2e96, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x33fc, gbc.sp());
        EXPECT(0x2e98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0074
        gbc.setState(0x683, 0xad5, 0xf340, 0x9ece, 0xb82b, 0x1b75, 0x0, 0x0);
        gbc.writeMem(0x683, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xad5, gbc.sp());
        EXPECT(0x685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0075
        gbc.setState(0x2aa6, 0xbf35, 0x62c0, 0x6883, 0x945d, 0xf07d, 0x0, 0x0);
        gbc.writeMem(0x2aa6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbf35, gbc.sp());
        EXPECT(0x2aa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0076
        gbc.setState(0xb5f0, 0x65c, 0xd570, 0xfc47, 0xf7b0, 0x48d9, 0x1, 0x1);
        gbc.writeMem(0xb5f0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x65c, gbc.sp());
        EXPECT(0xb5f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5f0));
        EXPECT(0xb4, gbc.readMem(0xb5f1));
        // CB B4 0077
        gbc.setState(0x142b, 0xa9e9, 0x5730, 0x771f, 0xc5e9, 0xaa84, 0x0, 0x0);
        gbc.writeMem(0x142b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa9e9, gbc.sp());
        EXPECT(0x142d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0078
        gbc.setState(0xb280, 0xa3fc, 0x22f0, 0xaf6f, 0xbe9, 0x1803, 0x1, 0x0);
        gbc.writeMem(0xb280, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa3fc, gbc.sp());
        EXPECT(0xb282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb280));
        EXPECT(0xb4, gbc.readMem(0xb281));
        // CB B4 0079
        gbc.setState(0x549c, 0xcb46, 0xf9f0, 0x1f77, 0x28f9, 0xa119, 0x0, 0x1);
        gbc.writeMem(0x549c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xcb46, gbc.sp());
        EXPECT(0x549e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 007A
        gbc.setState(0x820f, 0x404f, 0x3120, 0xfab6, 0xa024, 0x1a49, 0x0, 0x0);
        gbc.writeMem(0x820f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x404f, gbc.sp());
        EXPECT(0x8211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x820f));
        EXPECT(0xb4, gbc.readMem(0x8210));
        // CB B4 007B
        gbc.setState(0x99d1, 0x483e, 0x3800, 0xf772, 0x4360, 0x4c51, 0x1, 0x1);
        gbc.writeMem(0x99d1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x483e, gbc.sp());
        EXPECT(0x99d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99d1));
        EXPECT(0xb4, gbc.readMem(0x99d2));
        // CB B4 007C
        gbc.setState(0xbce4, 0x159a, 0x1d40, 0x9eb8, 0xcabc, 0xf7a7, 0x0, 0x0);
        gbc.writeMem(0xbce4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x159a, gbc.sp());
        EXPECT(0xbce6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbce4));
        EXPECT(0xb4, gbc.readMem(0xbce5));
        // CB B4 007D
        gbc.setState(0x979a, 0xad8d, 0x6b50, 0xe5d9, 0xc67a, 0x7f13, 0x1, 0x1);
        gbc.writeMem(0x979a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xad8d, gbc.sp());
        EXPECT(0x979c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x979a));
        EXPECT(0xb4, gbc.readMem(0x979b));
        // CB B4 007E
        gbc.setState(0x8c5e, 0xde48, 0xf350, 0x1ae5, 0x99f2, 0x160c, 0x1, 0x1);
        gbc.writeMem(0x8c5e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xde48, gbc.sp());
        EXPECT(0x8c60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c5e));
        EXPECT(0xb4, gbc.readMem(0x8c5f));
        // CB B4 007F
        gbc.setState(0x40cf, 0xf283, 0x87b0, 0x720b, 0xc948, 0x5cb0, 0x1, 0x1);
        gbc.writeMem(0x40cf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf283, gbc.sp());
        EXPECT(0x40d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0080
        gbc.setState(0x63e2, 0x87df, 0x6760, 0x7e58, 0x88a6, 0x5afb, 0x1, 0x1);
        gbc.writeMem(0x63e2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x87df, gbc.sp());
        EXPECT(0x63e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0081
        gbc.setState(0x30fe, 0xdd41, 0x4990, 0xca9e, 0xa5bb, 0x20d, 0x1, 0x0);
        gbc.writeMem(0x30fe, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdd41, gbc.sp());
        EXPECT(0x3100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0082
        gbc.setState(0x454d, 0xf747, 0x2370, 0x151c, 0x1543, 0x91ba, 0x0, 0x0);
        gbc.writeMem(0x454d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf747, gbc.sp());
        EXPECT(0x454f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0083
        gbc.setState(0x1294, 0x671c, 0x5750, 0x7058, 0x1db1, 0xa3d1, 0x1, 0x0);
        gbc.writeMem(0x1294, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x671c, gbc.sp());
        EXPECT(0x1296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0084
        gbc.setState(0x23de, 0xaffc, 0x630, 0x561f, 0x5d20, 0x4a91, 0x0, 0x1);
        gbc.writeMem(0x23de, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xaffc, gbc.sp());
        EXPECT(0x23e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0085
        gbc.setState(0x7da9, 0x6e3e, 0xb580, 0xff21, 0x86a9, 0x5009, 0x0, 0x0);
        gbc.writeMem(0x7da9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6e3e, gbc.sp());
        EXPECT(0x7dab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0086
        gbc.setState(0xab2b, 0x1d96, 0xb640, 0x4a2c, 0x980e, 0x9fab, 0x0, 0x0);
        gbc.writeMem(0xab2b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1d96, gbc.sp());
        EXPECT(0xab2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab2b));
        EXPECT(0xb4, gbc.readMem(0xab2c));
        // CB B4 0087
        gbc.setState(0x40d4, 0xa548, 0x6e40, 0xec0d, 0xb263, 0xd524, 0x0, 0x0);
        gbc.writeMem(0x40d4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa548, gbc.sp());
        EXPECT(0x40d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0089
        gbc.setState(0x9c4a, 0x28d0, 0xbf90, 0xc79f, 0x30f2, 0x64ae, 0x1, 0x1);
        gbc.writeMem(0x9c4a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x28d0, gbc.sp());
        EXPECT(0x9c4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c4a));
        EXPECT(0xb4, gbc.readMem(0x9c4b));
        // CB B4 008A
        gbc.setState(0xbfdf, 0x37c1, 0x84d0, 0x93fd, 0xc48f, 0xbd02, 0x0, 0x1);
        gbc.writeMem(0xbfdf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x37c1, gbc.sp());
        EXPECT(0xbfe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfdf));
        EXPECT(0xb4, gbc.readMem(0xbfe0));
        // CB B4 008B
        gbc.setState(0xa0b7, 0xb93b, 0xb3a0, 0xe4a, 0xb462, 0x7c2e, 0x1, 0x0);
        gbc.writeMem(0xa0b7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb93b, gbc.sp());
        EXPECT(0xa0b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0b7));
        EXPECT(0xb4, gbc.readMem(0xa0b8));
        // CB B4 008C
        gbc.setState(0x8229, 0x4b45, 0xff10, 0xc582, 0xa19b, 0xf8f9, 0x0, 0x0);
        gbc.writeMem(0x8229, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4b45, gbc.sp());
        EXPECT(0x822b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8229));
        EXPECT(0xb4, gbc.readMem(0x822a));
        // CB B4 008D
        gbc.setState(0x6e24, 0x26da, 0xc260, 0xf53c, 0xd495, 0x769e, 0x1, 0x1);
        gbc.writeMem(0x6e24, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x26da, gbc.sp());
        EXPECT(0x6e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 008E
        gbc.setState(0xd988, 0x63c4, 0x8da0, 0xd44, 0x1390, 0xa43, 0x1, 0x1);
        gbc.writeMem(0xd988, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x63c4, gbc.sp());
        EXPECT(0xd98a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd988));
        EXPECT(0xb4, gbc.readMem(0xd989));
        // CB B4 008F
        gbc.setState(0x95bd, 0x4a11, 0xd3d0, 0x967d, 0xfc54, 0x8c49, 0x1, 0x0);
        gbc.writeMem(0x95bd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4a11, gbc.sp());
        EXPECT(0x95bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95bd));
        EXPECT(0xb4, gbc.readMem(0x95be));
        // CB B4 0090
        gbc.setState(0x8086, 0xa777, 0x8d90, 0x7f11, 0x1c96, 0xee81, 0x1, 0x0);
        gbc.writeMem(0x8086, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa777, gbc.sp());
        EXPECT(0x8088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8086));
        EXPECT(0xb4, gbc.readMem(0x8087));
        // CB B4 0092
        gbc.setState(0xbe98, 0xfc01, 0x4340, 0xbc2f, 0x3a91, 0x6abe, 0x0, 0x1);
        gbc.writeMem(0xbe98, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfc01, gbc.sp());
        EXPECT(0xbe9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe98));
        EXPECT(0xb4, gbc.readMem(0xbe99));
        // CB B4 0093
        gbc.setState(0xa68b, 0x743c, 0x13c0, 0x2995, 0x20c9, 0x77ec, 0x0, 0x0);
        gbc.writeMem(0xa68b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x743c, gbc.sp());
        EXPECT(0xa68d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa68b));
        EXPECT(0xb4, gbc.readMem(0xa68c));
        // CB B4 0095
        gbc.setState(0x875f, 0x66d9, 0x5690, 0x71e3, 0x803c, 0xa84, 0x1, 0x1);
        gbc.writeMem(0x875f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x66d9, gbc.sp());
        EXPECT(0x8761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x875f));
        EXPECT(0xb4, gbc.readMem(0x8760));
        // CB B4 0096
        gbc.setState(0xd069, 0x23da, 0xa8e0, 0x900b, 0x3f69, 0x38ef, 0x1, 0x0);
        gbc.writeMem(0xd069, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x23da, gbc.sp());
        EXPECT(0xd06b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd069));
        EXPECT(0xb4, gbc.readMem(0xd06a));
        // CB B4 0097
        gbc.setState(0x58af, 0x324c, 0xe6d0, 0x3736, 0xbedd, 0x9bfd, 0x0, 0x1);
        gbc.writeMem(0x58af, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x324c, gbc.sp());
        EXPECT(0x58b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0098
        gbc.setState(0xb38e, 0xfeab, 0x4630, 0x9b0, 0xd87, 0xaed8, 0x1, 0x0);
        gbc.writeMem(0xb38e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xfeab, gbc.sp());
        EXPECT(0xb390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb38e));
        EXPECT(0xb4, gbc.readMem(0xb38f));
        // CB B4 0099
        gbc.setState(0x4eb0, 0xdbac, 0x91d0, 0xf424, 0x60c9, 0x2a45, 0x1, 0x1);
        gbc.writeMem(0x4eb0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xdbac, gbc.sp());
        EXPECT(0x4eb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 009A
        gbc.setState(0xf2a, 0xf3, 0xe390, 0xacc6, 0xb6d8, 0x55ef, 0x0, 0x0);
        gbc.writeMem(0xf2a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf3, gbc.sp());
        EXPECT(0xf2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 009B
        gbc.setState(0x4873, 0xa976, 0x7d80, 0xc02b, 0xc298, 0x952f, 0x1, 0x0);
        gbc.writeMem(0x4873, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa976, gbc.sp());
        EXPECT(0x4875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 009C
        gbc.setState(0xa55f, 0x584b, 0xa0a0, 0x5834, 0xeaa1, 0x4490, 0x0, 0x0);
        gbc.writeMem(0xa55f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x584b, gbc.sp());
        EXPECT(0xa561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa55f));
        EXPECT(0xb4, gbc.readMem(0xa560));
        // CB B4 009D
        gbc.setState(0xefba, 0x4e8e, 0xd080, 0x92de, 0xf89d, 0xd516, 0x0, 0x1);
        gbc.writeMem(0xefba, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4e8e, gbc.sp());
        EXPECT(0xefbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefba));
        EXPECT(0xb4, gbc.readMem(0xefbb));
        // CB B4 009E
        gbc.setState(0x47f, 0x3687, 0x1940, 0xb107, 0x9de6, 0x23ac, 0x0, 0x0);
        gbc.writeMem(0x47f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3687, gbc.sp());
        EXPECT(0x481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 009F
        gbc.setState(0xbaed, 0x1504, 0x90d0, 0x48f9, 0x1727, 0xbcfe, 0x0, 0x0);
        gbc.writeMem(0xbaed, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1504, gbc.sp());
        EXPECT(0xbaef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaed));
        EXPECT(0xb4, gbc.readMem(0xbaee));
        // CB B4 00A0
        gbc.setState(0x5ce1, 0xba47, 0x5ea0, 0xb765, 0x9016, 0xe25, 0x1, 0x1);
        gbc.writeMem(0x5ce1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xba47, gbc.sp());
        EXPECT(0x5ce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00A1
        gbc.setState(0xf82, 0x1c5d, 0x9a80, 0x561a, 0xbd86, 0x1c77, 0x1, 0x1);
        gbc.writeMem(0xf82, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1c5d, gbc.sp());
        EXPECT(0xf84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00A2
        gbc.setState(0x37dc, 0x90ce, 0x6330, 0xfa0d, 0xd399, 0x5461, 0x1, 0x1);
        gbc.writeMem(0x37dc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x90ce, gbc.sp());
        EXPECT(0x37de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 00A3
        gbc.setState(0x5f24, 0xac39, 0xbd00, 0xddf, 0x4591, 0xfca1, 0x1, 0x1);
        gbc.writeMem(0x5f24, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xac39, gbc.sp());
        EXPECT(0x5f26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00A4
        gbc.setState(0x5300, 0xdd1, 0x7720, 0x78a5, 0x5bb1, 0xbce3, 0x0, 0x1);
        gbc.writeMem(0x5300, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xdd1, gbc.sp());
        EXPECT(0x5302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00A5
        gbc.setState(0xc70f, 0x1c40, 0x4ee0, 0xd37e, 0xa9e2, 0x7a0b, 0x0, 0x0);
        gbc.writeMem(0xc70f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1c40, gbc.sp());
        EXPECT(0xc711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc70f));
        EXPECT(0xb4, gbc.readMem(0xc710));
        // CB B4 00A6
        gbc.setState(0xd62f, 0x473b, 0xc300, 0x9571, 0x3b5, 0x1f9, 0x0, 0x1);
        gbc.writeMem(0xd62f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x473b, gbc.sp());
        EXPECT(0xd631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd62f));
        EXPECT(0xb4, gbc.readMem(0xd630));
        // CB B4 00A7
        gbc.setState(0xf1e, 0xd15a, 0xe040, 0x7a1f, 0x1f73, 0x9bf7, 0x1, 0x0);
        gbc.writeMem(0xf1e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd15a, gbc.sp());
        EXPECT(0xf20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00A8
        gbc.setState(0xd69b, 0x895b, 0x2640, 0x8baf, 0x1f63, 0x830c, 0x0, 0x1);
        gbc.writeMem(0xd69b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x895b, gbc.sp());
        EXPECT(0xd69d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd69b));
        EXPECT(0xb4, gbc.readMem(0xd69c));
        // CB B4 00AA
        gbc.setState(0xc36a, 0xa81b, 0x1740, 0xb956, 0x616f, 0x95e7, 0x0, 0x1);
        gbc.writeMem(0xc36a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa81b, gbc.sp());
        EXPECT(0xc36c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc36a));
        EXPECT(0xb4, gbc.readMem(0xc36b));
        // CB B4 00AB
        gbc.setState(0xcf38, 0xca42, 0x98c0, 0x9353, 0x5c34, 0x5688, 0x0, 0x0);
        gbc.writeMem(0xcf38, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xca42, gbc.sp());
        EXPECT(0xcf3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf38));
        EXPECT(0xb4, gbc.readMem(0xcf39));
        // CB B4 00AC
        gbc.setState(0x59d0, 0xf2af, 0x8140, 0x464b, 0xd7c3, 0x608d, 0x0, 0x0);
        gbc.writeMem(0x59d0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf2af, gbc.sp());
        EXPECT(0x59d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00AD
        gbc.setState(0x3065, 0x52c9, 0xae0, 0xf26d, 0x726d, 0x76b8, 0x1, 0x0);
        gbc.writeMem(0x3065, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x52c9, gbc.sp());
        EXPECT(0x3067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00AE
        gbc.setState(0xda80, 0xd2e8, 0xeb70, 0x8cf1, 0xce65, 0x6f4e, 0x1, 0x1);
        gbc.writeMem(0xda80, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd2e8, gbc.sp());
        EXPECT(0xda82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda80));
        EXPECT(0xb4, gbc.readMem(0xda81));
        // CB B4 00AF
        gbc.setState(0x7a6c, 0x5c29, 0x48a0, 0x5a4f, 0x67ff, 0x383b, 0x1, 0x1);
        gbc.writeMem(0x7a6c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5c29, gbc.sp());
        EXPECT(0x7a6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00B0
        gbc.setState(0xcb4f, 0x4518, 0xe1c0, 0x10fb, 0xfdc0, 0x4320, 0x1, 0x0);
        gbc.writeMem(0xcb4f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4518, gbc.sp());
        EXPECT(0xcb51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb4f));
        EXPECT(0xb4, gbc.readMem(0xcb50));
        // CB B4 00B1
        gbc.setState(0xc91b, 0xfef9, 0x1a50, 0x5c3e, 0xf317, 0x3db2, 0x0, 0x0);
        gbc.writeMem(0xc91b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfef9, gbc.sp());
        EXPECT(0xc91d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc91b));
        EXPECT(0xb4, gbc.readMem(0xc91c));
        // CB B4 00B2
        gbc.setState(0x2fc8, 0x830, 0x7c10, 0x2963, 0xd094, 0xfd44, 0x1, 0x0);
        gbc.writeMem(0x2fc8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x830, gbc.sp());
        EXPECT(0x2fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 00B3
        gbc.setState(0xd971, 0x51f2, 0x7920, 0x6206, 0x52ed, 0x1448, 0x0, 0x0);
        gbc.writeMem(0xd971, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x51f2, gbc.sp());
        EXPECT(0xd973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd971));
        EXPECT(0xb4, gbc.readMem(0xd972));
        // CB B4 00B4
        gbc.setState(0x1eb0, 0x8e34, 0x4840, 0x3cd9, 0x874f, 0x4121, 0x0, 0x1);
        gbc.writeMem(0x1eb0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8e34, gbc.sp());
        EXPECT(0x1eb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00B5
        gbc.setState(0xe4d8, 0x1c45, 0x4110, 0x1e63, 0xced6, 0x6246, 0x0, 0x1);
        gbc.writeMem(0xe4d8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1c45, gbc.sp());
        EXPECT(0xe4da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4d8));
        EXPECT(0xb4, gbc.readMem(0xe4d9));
        // CB B4 00B7
        gbc.setState(0x3367, 0xbaeb, 0xf2a0, 0xb21c, 0x2445, 0x4bde, 0x0, 0x1);
        gbc.writeMem(0x3367, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xbaeb, gbc.sp());
        EXPECT(0x3369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00B8
        gbc.setState(0x4dd0, 0x9d28, 0xc760, 0x4ced, 0x3346, 0x50c4, 0x1, 0x0);
        gbc.writeMem(0x4dd0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9d28, gbc.sp());
        EXPECT(0x4dd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00B9
        gbc.setState(0x7a8e, 0xec31, 0x68b0, 0x7c25, 0xbf64, 0xb056, 0x0, 0x0);
        gbc.writeMem(0x7a8e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xec31, gbc.sp());
        EXPECT(0x7a90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 00BA
        gbc.setState(0x98bc, 0x30ba, 0x7f90, 0xde7f, 0x4018, 0xcd87, 0x0, 0x1);
        gbc.writeMem(0x98bc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x30ba, gbc.sp());
        EXPECT(0x98be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98bc));
        EXPECT(0xb4, gbc.readMem(0x98bd));
        // CB B4 00BB
        gbc.setState(0xe27a, 0x9c94, 0x3560, 0x3950, 0xa339, 0x5921, 0x1, 0x1);
        gbc.writeMem(0xe27a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9c94, gbc.sp());
        EXPECT(0xe27c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe27a));
        EXPECT(0xb4, gbc.readMem(0xe27b));
        // CB B4 00BC
        gbc.setState(0xb381, 0x9d33, 0x7cf0, 0x40d6, 0xdf62, 0x8e3d, 0x0, 0x1);
        gbc.writeMem(0xb381, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9d33, gbc.sp());
        EXPECT(0xb383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb381));
        EXPECT(0xb4, gbc.readMem(0xb382));
        // CB B4 00BD
        gbc.setState(0x1bd7, 0x75df, 0xbef0, 0x2601, 0xba3f, 0x1679, 0x1, 0x0);
        gbc.writeMem(0x1bd7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x75df, gbc.sp());
        EXPECT(0x1bd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 00BE
        gbc.setState(0x8b43, 0xe967, 0xcaf0, 0x2219, 0x9648, 0xb896, 0x1, 0x1);
        gbc.writeMem(0x8b43, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe967, gbc.sp());
        EXPECT(0x8b45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b43));
        EXPECT(0xb4, gbc.readMem(0x8b44));
        // CB B4 00BF
        gbc.setState(0x359a, 0xdd6f, 0x8a50, 0x9953, 0x26a4, 0x7155, 0x0, 0x0);
        gbc.writeMem(0x359a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xdd6f, gbc.sp());
        EXPECT(0x359c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 00C0
        gbc.setState(0x6a23, 0x132e, 0x2410, 0x657f, 0x763b, 0x96c6, 0x0, 0x1);
        gbc.writeMem(0x6a23, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x132e, gbc.sp());
        EXPECT(0x6a25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 00C1
        gbc.setState(0x8dfe, 0xd0e8, 0xc720, 0x83c, 0x2ce7, 0x332a, 0x1, 0x1);
        gbc.writeMem(0x8dfe, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd0e8, gbc.sp());
        EXPECT(0x8e00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dfe));
        EXPECT(0xb4, gbc.readMem(0x8dff));
        // CB B4 00C2
        gbc.setState(0x7eb7, 0x4b49, 0x39c0, 0x8760, 0x1451, 0x5adf, 0x1, 0x0);
        gbc.writeMem(0x7eb7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4b49, gbc.sp());
        EXPECT(0x7eb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00C3
        gbc.setState(0x1291, 0xe071, 0xa330, 0x784e, 0x7425, 0x57a7, 0x1, 0x0);
        gbc.writeMem(0x1291, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe071, gbc.sp());
        EXPECT(0x1293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 00C4
        gbc.setState(0xe654, 0x7449, 0x400, 0x3398, 0xe652, 0x6746, 0x0, 0x0);
        gbc.writeMem(0xe654, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7449, gbc.sp());
        EXPECT(0xe656, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe654));
        EXPECT(0xb4, gbc.readMem(0xe655));
        // CB B4 00C5
        gbc.setState(0x84b1, 0x2f3f, 0x2aa0, 0xeb13, 0x455, 0x516a, 0x1, 0x1);
        gbc.writeMem(0x84b1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2f3f, gbc.sp());
        EXPECT(0x84b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b1));
        EXPECT(0xb4, gbc.readMem(0x84b2));
        // CB B4 00C6
        gbc.setState(0x8c3c, 0xfd0f, 0xc860, 0x8f23, 0x142e, 0x123c, 0x0, 0x1);
        gbc.writeMem(0x8c3c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfd0f, gbc.sp());
        EXPECT(0x8c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c3c));
        EXPECT(0xb4, gbc.readMem(0x8c3d));
        // CB B4 00C7
        gbc.setState(0x8d49, 0xba90, 0x4ef0, 0xb8cb, 0x839e, 0x140, 0x1, 0x1);
        gbc.writeMem(0x8d49, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xba90, gbc.sp());
        EXPECT(0x8d4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d49));
        EXPECT(0xb4, gbc.readMem(0x8d4a));
        // CB B4 00C8
        gbc.setState(0x3132, 0xd9d9, 0x2350, 0xaffe, 0x8d64, 0xd972, 0x0, 0x1);
        gbc.writeMem(0x3132, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd9d9, gbc.sp());
        EXPECT(0x3134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 00CA
        gbc.setState(0xa824, 0xa121, 0x13e0, 0x6b26, 0xd79, 0x3f3f, 0x1, 0x1);
        gbc.writeMem(0xa824, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa121, gbc.sp());
        EXPECT(0xa826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa824));
        EXPECT(0xb4, gbc.readMem(0xa825));
        // CB B4 00CB
        gbc.setState(0x76c, 0xe8d3, 0xa2a0, 0xfc7c, 0x1113, 0xa935, 0x0, 0x1);
        gbc.writeMem(0x76c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe8d3, gbc.sp());
        EXPECT(0x76e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00CC
        gbc.setState(0x2152, 0x88be, 0x8cc0, 0x58b, 0x1830, 0xd21e, 0x0, 0x1);
        gbc.writeMem(0x2152, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x88be, gbc.sp());
        EXPECT(0x2154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00CD
        gbc.setState(0x8a88, 0xedc4, 0x3d60, 0x3053, 0x3416, 0xb8c0, 0x1, 0x1);
        gbc.writeMem(0x8a88, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xedc4, gbc.sp());
        EXPECT(0x8a8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a88));
        EXPECT(0xb4, gbc.readMem(0x8a89));
        // CB B4 00CE
        gbc.setState(0x45f4, 0xca62, 0x52a0, 0xc514, 0xca39, 0xc1d4, 0x0, 0x0);
        gbc.writeMem(0x45f4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xca62, gbc.sp());
        EXPECT(0x45f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00CF
        gbc.setState(0x7e66, 0x70ef, 0xa7b0, 0x71a1, 0x7650, 0x8618, 0x1, 0x1);
        gbc.writeMem(0x7e66, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x70ef, gbc.sp());
        EXPECT(0x7e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 00D0
        gbc.setState(0x7049, 0x2778, 0xe620, 0x80a7, 0x907b, 0x8d73, 0x1, 0x1);
        gbc.writeMem(0x7049, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2778, gbc.sp());
        EXPECT(0x704b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00D1
        gbc.setState(0xda7f, 0xa472, 0x25a0, 0xcd88, 0x91de, 0xad09, 0x0, 0x0);
        gbc.writeMem(0xda7f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa472, gbc.sp());
        EXPECT(0xda81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda7f));
        EXPECT(0xb4, gbc.readMem(0xda80));
        // CB B4 00D2
        gbc.setState(0x48c3, 0x6398, 0x2530, 0xa727, 0xe0ee, 0x9cf8, 0x1, 0x1);
        gbc.writeMem(0x48c3, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6398, gbc.sp());
        EXPECT(0x48c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 00D3
        gbc.setState(0x36be, 0x30b1, 0xc3d0, 0x4cee, 0xc8, 0x3ec0, 0x1, 0x1);
        gbc.writeMem(0x36be, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x30b1, gbc.sp());
        EXPECT(0x36c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 00D4
        gbc.setState(0x5c0c, 0x50fe, 0xd5a0, 0xfb56, 0x36f2, 0x1df5, 0x1, 0x0);
        gbc.writeMem(0x5c0c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x50fe, gbc.sp());
        EXPECT(0x5c0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00D5
        gbc.setState(0x2e05, 0x8c, 0x9130, 0x50c2, 0x143f, 0x5ce0, 0x0, 0x0);
        gbc.writeMem(0x2e05, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8c, gbc.sp());
        EXPECT(0x2e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 00D6
        gbc.setState(0x2de1, 0xdfd9, 0x1c40, 0x85e0, 0x7050, 0x5e2a, 0x1, 0x1);
        gbc.writeMem(0x2de1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xdfd9, gbc.sp());
        EXPECT(0x2de3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00D7
        gbc.setState(0xdccd, 0xe008, 0xd070, 0xbb52, 0x8693, 0x914e, 0x0, 0x1);
        gbc.writeMem(0xdccd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe008, gbc.sp());
        EXPECT(0xdccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdccd));
        EXPECT(0xb4, gbc.readMem(0xdcce));
        // CB B4 00D8
        gbc.setState(0x98b6, 0x743b, 0xbca0, 0x53b6, 0xe06a, 0x4e3d, 0x0, 0x0);
        gbc.writeMem(0x98b6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x743b, gbc.sp());
        EXPECT(0x98b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b6));
        EXPECT(0xb4, gbc.readMem(0x98b7));
        // CB B4 00D9
        gbc.setState(0x1ed7, 0x654a, 0xe950, 0x3a3e, 0xb597, 0x7cf8, 0x1, 0x0);
        gbc.writeMem(0x1ed7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x654a, gbc.sp());
        EXPECT(0x1ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 00DA
        gbc.setState(0xaa7d, 0xfc4e, 0x64a0, 0x5a21, 0x68f2, 0x43c3, 0x1, 0x0);
        gbc.writeMem(0xaa7d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xfc4e, gbc.sp());
        EXPECT(0xaa7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa7d));
        EXPECT(0xb4, gbc.readMem(0xaa7e));
        // CB B4 00DB
        gbc.setState(0xe279, 0xdff5, 0xba0, 0x3c34, 0x9b3b, 0x4ecd, 0x0, 0x1);
        gbc.writeMem(0xe279, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdff5, gbc.sp());
        EXPECT(0xe27b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe279));
        EXPECT(0xb4, gbc.readMem(0xe27a));
        // CB B4 00DC
        gbc.setState(0x6fc5, 0xc452, 0x3100, 0x6c7e, 0xbcd1, 0x8c21, 0x1, 0x1);
        gbc.writeMem(0x6fc5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc452, gbc.sp());
        EXPECT(0x6fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00DD
        gbc.setState(0xc1b6, 0xf406, 0x29c0, 0xc376, 0x8096, 0x28b4, 0x0, 0x1);
        gbc.writeMem(0xc1b6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf406, gbc.sp());
        EXPECT(0xc1b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b6));
        EXPECT(0xb4, gbc.readMem(0xc1b7));
        // CB B4 00DE
        gbc.setState(0x7623, 0x9e05, 0xff50, 0x54b5, 0x4bde, 0xf8c5, 0x1, 0x1);
        gbc.writeMem(0x7623, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9e05, gbc.sp());
        EXPECT(0x7625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 00DF
        gbc.setState(0xe101, 0xa9d2, 0x5b00, 0x1e6d, 0xea2c, 0x49f0, 0x1, 0x0);
        gbc.writeMem(0xe101, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa9d2, gbc.sp());
        EXPECT(0xe103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe101));
        EXPECT(0xb4, gbc.readMem(0xe102));
        // CB B4 00E0
        gbc.setState(0x9b0b, 0xcebb, 0x8b80, 0x151f, 0x1070, 0x2de5, 0x0, 0x1);
        gbc.writeMem(0x9b0b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcebb, gbc.sp());
        EXPECT(0x9b0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b0b));
        EXPECT(0xb4, gbc.readMem(0x9b0c));
        // CB B4 00E1
        gbc.setState(0xe90b, 0x2f2f, 0xa010, 0xc0d6, 0x59c0, 0xea9c, 0x1, 0x0);
        gbc.writeMem(0xe90b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2f2f, gbc.sp());
        EXPECT(0xe90d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe90b));
        EXPECT(0xb4, gbc.readMem(0xe90c));
        // CB B4 00E3
        gbc.setState(0x2734, 0xcbfd, 0xcea0, 0x1796, 0x3f61, 0x6004, 0x1, 0x0);
        gbc.writeMem(0x2734, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xcbfd, gbc.sp());
        EXPECT(0x2736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00E5
        gbc.setState(0x2b9, 0x9e5e, 0x5f0, 0x8b4d, 0x59c5, 0xf7fe, 0x1, 0x1);
        gbc.writeMem(0x2b9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9e5e, gbc.sp());
        EXPECT(0x2bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 00E6
        gbc.setState(0xc80d, 0xf9e9, 0xb610, 0xca68, 0xbce2, 0x4fdd, 0x0, 0x0);
        gbc.writeMem(0xc80d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf9e9, gbc.sp());
        EXPECT(0xc80f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc80d));
        EXPECT(0xb4, gbc.readMem(0xc80e));
        // CB B4 00E7
        gbc.setState(0x97d9, 0x6a3d, 0x5ae0, 0xf8a1, 0x6bb7, 0xe164, 0x1, 0x0);
        gbc.writeMem(0x97d9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6a3d, gbc.sp());
        EXPECT(0x97db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97d9));
        EXPECT(0xb4, gbc.readMem(0x97da));
        // CB B4 00E8
        gbc.setState(0x9157, 0xe66f, 0x8900, 0x8cd9, 0x4c41, 0x8ec4, 0x1, 0x0);
        gbc.writeMem(0x9157, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe66f, gbc.sp());
        EXPECT(0x9159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9157));
        EXPECT(0xb4, gbc.readMem(0x9158));
        // CB B4 00EA
        gbc.setState(0x3327, 0xae3a, 0xe000, 0x4c79, 0xf8d, 0x59c7, 0x0, 0x0);
        gbc.writeMem(0x3327, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xae3a, gbc.sp());
        EXPECT(0x3329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00EB
        gbc.setState(0xc657, 0x5bed, 0x8d90, 0xfc1b, 0xcc34, 0x794a, 0x0, 0x0);
        gbc.writeMem(0xc657, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5bed, gbc.sp());
        EXPECT(0xc659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc657));
        EXPECT(0xb4, gbc.readMem(0xc658));
        // CB B4 00EC
        gbc.setState(0x40ee, 0xae7e, 0xb90, 0x9333, 0x4ed4, 0x7cc3, 0x0, 0x0);
        gbc.writeMem(0x40ee, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xae7e, gbc.sp());
        EXPECT(0x40f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 00ED
        gbc.setState(0x5da3, 0x95ac, 0x6210, 0x4ba7, 0xa8f, 0x9cfc, 0x0, 0x0);
        gbc.writeMem(0x5da3, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x95ac, gbc.sp());
        EXPECT(0x5da5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 00EE
        gbc.setState(0xe614, 0xa0dd, 0x9f0, 0xce63, 0xe4e4, 0xea7f, 0x1, 0x0);
        gbc.writeMem(0xe614, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa0dd, gbc.sp());
        EXPECT(0xe616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe614));
        EXPECT(0xb4, gbc.readMem(0xe615));
        // CB B4 00F0
        gbc.setState(0x1265, 0x3a79, 0x4080, 0x9f66, 0x9fa3, 0xb85e, 0x0, 0x1);
        gbc.writeMem(0x1265, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3a79, gbc.sp());
        EXPECT(0x1267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00F1
        gbc.setState(0x128f, 0xb822, 0x7880, 0xded7, 0xe8b7, 0xb4c1, 0x1, 0x1);
        gbc.writeMem(0x128f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb822, gbc.sp());
        EXPECT(0x1291, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00F2
        gbc.setState(0xd94a, 0xcd78, 0xf8a0, 0x8868, 0x4346, 0xd343, 0x1, 0x1);
        gbc.writeMem(0xd94a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcd78, gbc.sp());
        EXPECT(0xd94c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd94a));
        EXPECT(0xb4, gbc.readMem(0xd94b));
        // CB B4 00F3
        gbc.setState(0x5a1d, 0x63d0, 0x3740, 0xc960, 0x9e82, 0xb226, 0x0, 0x0);
        gbc.writeMem(0x5a1d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x63d0, gbc.sp());
        EXPECT(0x5a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00F4
        gbc.setState(0x2a1c, 0x236f, 0x6b60, 0xe3da, 0xf55f, 0xddde, 0x1, 0x0);
        gbc.writeMem(0x2a1c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x236f, gbc.sp());
        EXPECT(0x2a1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00F5
        gbc.setState(0xc879, 0x316d, 0x1950, 0xb1a6, 0xdaaf, 0x3e, 0x1, 0x1);
        gbc.writeMem(0xc879, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x316d, gbc.sp());
        EXPECT(0xc87b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc879));
        EXPECT(0xb4, gbc.readMem(0xc87a));
        // CB B4 00F6
        gbc.setState(0x7db9, 0xdc75, 0x6380, 0x7b46, 0x9c14, 0x9809, 0x1, 0x0);
        gbc.writeMem(0x7db9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xdc75, gbc.sp());
        EXPECT(0x7dbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00F7
        gbc.setState(0x363c, 0xb1de, 0x6b80, 0x65, 0x1599, 0x5e23, 0x1, 0x0);
        gbc.writeMem(0x363c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb1de, gbc.sp());
        EXPECT(0x363e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00F8
        gbc.setState(0x26b5, 0x91d5, 0xfc10, 0xb7df, 0x520a, 0xf9a8, 0x1, 0x0);
        gbc.writeMem(0x26b5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x91d5, gbc.sp());
        EXPECT(0x26b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 00FA
        gbc.setState(0xa29, 0x301a, 0x8620, 0x9cec, 0x24f4, 0x2b67, 0x0, 0x0);
        gbc.writeMem(0xa29, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x301a, gbc.sp());
        EXPECT(0xa2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 00FB
        gbc.setState(0x4ce, 0xc99, 0x40f0, 0xb09f, 0x8c4f, 0x7ffd, 0x0, 0x1);
        gbc.writeMem(0x4ce, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc99, gbc.sp());
        EXPECT(0x4d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 00FC
        gbc.setState(0xa9f6, 0x5a50, 0x8fe0, 0x38a3, 0xe888, 0xc181, 0x0, 0x1);
        gbc.writeMem(0xa9f6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5a50, gbc.sp());
        EXPECT(0xa9f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9f6));
        EXPECT(0xb4, gbc.readMem(0xa9f7));
        // CB B4 00FD
        gbc.setState(0x54b2, 0xad62, 0x5f0, 0xb2b6, 0x8ff7, 0xffad, 0x1, 0x0);
        gbc.writeMem(0x54b2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xad62, gbc.sp());
        EXPECT(0x54b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 00FE
        gbc.setState(0xeb07, 0x3cbc, 0xe160, 0xec4a, 0x733e, 0xc301, 0x1, 0x0);
        gbc.writeMem(0xeb07, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3cbc, gbc.sp());
        EXPECT(0xeb09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb07));
        EXPECT(0xb4, gbc.readMem(0xeb08));
        // CB B4 00FF
        gbc.setState(0x1e14, 0x374c, 0x42e0, 0x4d07, 0x671a, 0xe327, 0x0, 0x1);
        gbc.writeMem(0x1e14, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x374c, gbc.sp());
        EXPECT(0x1e16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0100
        gbc.setState(0x5f56, 0x90e9, 0x7f70, 0xeed7, 0xb106, 0xc218, 0x0, 0x0);
        gbc.writeMem(0x5f56, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x90e9, gbc.sp());
        EXPECT(0x5f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0101
        gbc.setState(0x6a4d, 0xac76, 0x57a0, 0xaae, 0xdd73, 0xcb87, 0x0, 0x0);
        gbc.writeMem(0x6a4d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xac76, gbc.sp());
        EXPECT(0x6a4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0102
        gbc.setState(0xc35c, 0x62dd, 0xf790, 0xe8a, 0x7d47, 0x9381, 0x1, 0x0);
        gbc.writeMem(0xc35c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x62dd, gbc.sp());
        EXPECT(0xc35e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc35c));
        EXPECT(0xb4, gbc.readMem(0xc35d));
        // CB B4 0103
        gbc.setState(0x3cde, 0x94e2, 0x1ed0, 0x2530, 0xac4f, 0xb2ce, 0x1, 0x1);
        gbc.writeMem(0x3cde, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x94e2, gbc.sp());
        EXPECT(0x3ce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0104
        gbc.setState(0xbd9e, 0xfdda, 0xe0e0, 0x1cc3, 0xb188, 0xc333, 0x1, 0x1);
        gbc.writeMem(0xbd9e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfdda, gbc.sp());
        EXPECT(0xbda0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd9e));
        EXPECT(0xb4, gbc.readMem(0xbd9f));
        // CB B4 0105
        gbc.setState(0x26dd, 0x7913, 0xc1a0, 0xce51, 0x3fc1, 0x8fa5, 0x1, 0x0);
        gbc.writeMem(0x26dd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7913, gbc.sp());
        EXPECT(0x26df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0106
        gbc.setState(0x9c0e, 0x2268, 0xbac0, 0xac9b, 0x887f, 0x4f22, 0x1, 0x1);
        gbc.writeMem(0x9c0e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2268, gbc.sp());
        EXPECT(0x9c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c0e));
        EXPECT(0xb4, gbc.readMem(0x9c0f));
        // CB B4 0107
        gbc.setState(0xbd12, 0x6bac, 0xe0, 0xcb95, 0x3c39, 0x54d6, 0x1, 0x0);
        gbc.writeMem(0xbd12, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6bac, gbc.sp());
        EXPECT(0xbd14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd12));
        EXPECT(0xb4, gbc.readMem(0xbd13));
        // CB B4 0108
        gbc.setState(0xb7db, 0x6cce, 0x5140, 0x1530, 0xba9e, 0xe5ae, 0x0, 0x1);
        gbc.writeMem(0xb7db, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6cce, gbc.sp());
        EXPECT(0xb7dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7db));
        EXPECT(0xb4, gbc.readMem(0xb7dc));
        // CB B4 0109
        gbc.setState(0xeea6, 0xaaa6, 0x5730, 0xb259, 0x535b, 0x1268, 0x1, 0x1);
        gbc.writeMem(0xeea6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xaaa6, gbc.sp());
        EXPECT(0xeea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea6));
        EXPECT(0xb4, gbc.readMem(0xeea7));
        // CB B4 010A
        gbc.setState(0x8044, 0xeeda, 0xdf60, 0xd860, 0xe8a1, 0x6312, 0x1, 0x1);
        gbc.writeMem(0x8044, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xeeda, gbc.sp());
        EXPECT(0x8046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8044));
        EXPECT(0xb4, gbc.readMem(0x8045));
        // CB B4 010B
        gbc.setState(0x890d, 0xf844, 0xb530, 0x6a94, 0x1ad0, 0x57cc, 0x1, 0x0);
        gbc.writeMem(0x890d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf844, gbc.sp());
        EXPECT(0x890f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x890d));
        EXPECT(0xb4, gbc.readMem(0x890e));
        // CB B4 010C
        gbc.setState(0xb614, 0x32ae, 0xfc10, 0xe4b7, 0xe951, 0xf5ac, 0x0, 0x1);
        gbc.writeMem(0xb614, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x32ae, gbc.sp());
        EXPECT(0xb616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb614));
        EXPECT(0xb4, gbc.readMem(0xb615));
        // CB B4 010D
        gbc.setState(0x7fe5, 0xd062, 0x4830, 0x7ec2, 0x4f00, 0xd300, 0x0, 0x1);
        gbc.writeMem(0x7fe5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd062, gbc.sp());
        EXPECT(0x7fe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 010E
        gbc.setState(0x951b, 0xef1c, 0x8dc0, 0xcca2, 0x6adf, 0x2188, 0x1, 0x1);
        gbc.writeMem(0x951b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xef1c, gbc.sp());
        EXPECT(0x951d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x951b));
        EXPECT(0xb4, gbc.readMem(0x951c));
        // CB B4 010F
        gbc.setState(0x7d75, 0x9548, 0xab80, 0x77e0, 0xda0f, 0x9c7a, 0x1, 0x0);
        gbc.writeMem(0x7d75, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9548, gbc.sp());
        EXPECT(0x7d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0111
        gbc.setState(0x484d, 0x762c, 0x62f0, 0xc11b, 0xbad3, 0xa1d8, 0x0, 0x1);
        gbc.writeMem(0x484d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x762c, gbc.sp());
        EXPECT(0x484f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0112
        gbc.setState(0xb133, 0xdcc, 0x89f0, 0xf785, 0x43c2, 0x37cc, 0x1, 0x1);
        gbc.writeMem(0xb133, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xdcc, gbc.sp());
        EXPECT(0xb135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb133));
        EXPECT(0xb4, gbc.readMem(0xb134));
        // CB B4 0113
        gbc.setState(0xc38f, 0xa726, 0x7e0, 0xfdf5, 0xa40d, 0x8fb6, 0x1, 0x0);
        gbc.writeMem(0xc38f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa726, gbc.sp());
        EXPECT(0xc391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc38f));
        EXPECT(0xb4, gbc.readMem(0xc390));
        // CB B4 0115
        gbc.setState(0xb44, 0x4321, 0xe210, 0xf4b4, 0x594a, 0xa0e8, 0x1, 0x0);
        gbc.writeMem(0xb44, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4321, gbc.sp());
        EXPECT(0xb46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0116
        gbc.setState(0xde5b, 0x66f, 0xa230, 0x96df, 0xa13d, 0x4ddf, 0x0, 0x0);
        gbc.writeMem(0xde5b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x66f, gbc.sp());
        EXPECT(0xde5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde5b));
        EXPECT(0xb4, gbc.readMem(0xde5c));
        // CB B4 0117
        gbc.setState(0x46de, 0xe561, 0xa420, 0x2d41, 0x4dd3, 0xfa36, 0x0, 0x1);
        gbc.writeMem(0x46de, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe561, gbc.sp());
        EXPECT(0x46e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0118
        gbc.setState(0x1269, 0x58c5, 0xa0, 0x37e1, 0xa3f2, 0xf6fc, 0x0, 0x1);
        gbc.writeMem(0x1269, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x58c5, gbc.sp());
        EXPECT(0x126b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0119
        gbc.setState(0xb84c, 0x354d, 0xd830, 0xfd9b, 0xba4e, 0x4f75, 0x1, 0x1);
        gbc.writeMem(0xb84c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x354d, gbc.sp());
        EXPECT(0xb84e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb84c));
        EXPECT(0xb4, gbc.readMem(0xb84d));
        // CB B4 011A
        gbc.setState(0xaa59, 0x2b0e, 0x45c0, 0xdf4b, 0x4e2e, 0x46f0, 0x0, 0x1);
        gbc.writeMem(0xaa59, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2b0e, gbc.sp());
        EXPECT(0xaa5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa59));
        EXPECT(0xb4, gbc.readMem(0xaa5a));
        // CB B4 011B
        gbc.setState(0xd54e, 0xcacb, 0x6290, 0x3d94, 0xc2cc, 0xfc33, 0x0, 0x1);
        gbc.writeMem(0xd54e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xcacb, gbc.sp());
        EXPECT(0xd550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd54e));
        EXPECT(0xb4, gbc.readMem(0xd54f));
        // CB B4 011C
        gbc.setState(0xa29f, 0x39ed, 0x1ee0, 0xda32, 0x8d7a, 0xc64f, 0x0, 0x1);
        gbc.writeMem(0xa29f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x39ed, gbc.sp());
        EXPECT(0xa2a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa29f));
        EXPECT(0xb4, gbc.readMem(0xa2a0));
        // CB B4 011D
        gbc.setState(0xc9d3, 0x5324, 0x7570, 0x8d51, 0x76fb, 0x5152, 0x1, 0x0);
        gbc.writeMem(0xc9d3, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5324, gbc.sp());
        EXPECT(0xc9d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9d3));
        EXPECT(0xb4, gbc.readMem(0xc9d4));
        // CB B4 011E
        gbc.setState(0x9f1c, 0xb471, 0x9ac0, 0x6843, 0xc2b1, 0xa568, 0x1, 0x0);
        gbc.writeMem(0x9f1c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb471, gbc.sp());
        EXPECT(0x9f1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f1c));
        EXPECT(0xb4, gbc.readMem(0x9f1d));
        // CB B4 0120
        gbc.setState(0x20d7, 0x12de, 0xb800, 0x1281, 0xf7de, 0x6881, 0x1, 0x1);
        gbc.writeMem(0x20d7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x12de, gbc.sp());
        EXPECT(0x20d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0121
        gbc.setState(0xa9cb, 0x1063, 0x21c0, 0xaa5a, 0xacd2, 0xe94a, 0x0, 0x1);
        gbc.writeMem(0xa9cb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1063, gbc.sp());
        EXPECT(0xa9cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9cb));
        EXPECT(0xb4, gbc.readMem(0xa9cc));
        // CB B4 0122
        gbc.setState(0xe9d1, 0xe89c, 0x54f0, 0xa721, 0x715, 0x9818, 0x1, 0x1);
        gbc.writeMem(0xe9d1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe89c, gbc.sp());
        EXPECT(0xe9d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9d1));
        EXPECT(0xb4, gbc.readMem(0xe9d2));
        // CB B4 0123
        gbc.setState(0xa7a1, 0xc037, 0x8f40, 0x6e18, 0xe16a, 0x736b, 0x1, 0x1);
        gbc.writeMem(0xa7a1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc037, gbc.sp());
        EXPECT(0xa7a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a1));
        EXPECT(0xb4, gbc.readMem(0xa7a2));
        // CB B4 0124
        gbc.setState(0x70b7, 0xb041, 0xc10, 0xe0aa, 0xb544, 0x3ebd, 0x1, 0x0);
        gbc.writeMem(0x70b7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb041, gbc.sp());
        EXPECT(0x70b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0125
        gbc.setState(0x1662, 0xed6a, 0x2ac0, 0xfa10, 0x4ca0, 0xf441, 0x1, 0x0);
        gbc.writeMem(0x1662, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xed6a, gbc.sp());
        EXPECT(0x1664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0126
        gbc.setState(0xe272, 0x9bbb, 0xd4c0, 0xd144, 0xf3af, 0x3451, 0x1, 0x0);
        gbc.writeMem(0xe272, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9bbb, gbc.sp());
        EXPECT(0xe274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe272));
        EXPECT(0xb4, gbc.readMem(0xe273));
        // CB B4 0127
        gbc.setState(0xc36d, 0xd262, 0xc360, 0xb458, 0xc8f2, 0xb86, 0x1, 0x0);
        gbc.writeMem(0xc36d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd262, gbc.sp());
        EXPECT(0xc36f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc36d));
        EXPECT(0xb4, gbc.readMem(0xc36e));
        // CB B4 0128
        gbc.setState(0x9d5f, 0x78c8, 0xa50, 0xe779, 0x5708, 0x3a87, 0x1, 0x0);
        gbc.writeMem(0x9d5f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x78c8, gbc.sp());
        EXPECT(0x9d61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d5f));
        EXPECT(0xb4, gbc.readMem(0x9d60));
        // CB B4 0129
        gbc.setState(0x2902, 0xb370, 0xb230, 0xf798, 0x1c5b, 0x96f, 0x1, 0x1);
        gbc.writeMem(0x2902, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb370, gbc.sp());
        EXPECT(0x2904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 012A
        gbc.setState(0x80ed, 0x448, 0x4f40, 0xcec8, 0x9472, 0x9f67, 0x1, 0x0);
        gbc.writeMem(0x80ed, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x448, gbc.sp());
        EXPECT(0x80ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ed));
        EXPECT(0xb4, gbc.readMem(0x80ee));
        // CB B4 012B
        gbc.setState(0xd047, 0x8b98, 0xf150, 0xae00, 0x6c1, 0x8d43, 0x0, 0x0);
        gbc.writeMem(0xd047, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8b98, gbc.sp());
        EXPECT(0xd049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd047));
        EXPECT(0xb4, gbc.readMem(0xd048));
        // CB B4 012C
        gbc.setState(0x9c28, 0x4fff, 0xd0e0, 0xb09a, 0x755, 0x36d2, 0x1, 0x0);
        gbc.writeMem(0x9c28, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4fff, gbc.sp());
        EXPECT(0x9c2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c28));
        EXPECT(0xb4, gbc.readMem(0x9c29));
        // CB B4 012D
        gbc.setState(0x2a4a, 0x6b24, 0x2170, 0x3367, 0xdd99, 0x5b7b, 0x1, 0x1);
        gbc.writeMem(0x2a4a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6b24, gbc.sp());
        EXPECT(0x2a4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 012E
        gbc.setState(0xabb4, 0xd3b3, 0x22d0, 0xc2f6, 0x49a1, 0xefc, 0x1, 0x1);
        gbc.writeMem(0xabb4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd3b3, gbc.sp());
        EXPECT(0xabb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb4));
        EXPECT(0xb4, gbc.readMem(0xabb5));
        // CB B4 012F
        gbc.setState(0x5f1e, 0xd283, 0xda90, 0x8b2b, 0x4ca9, 0x4977, 0x0, 0x0);
        gbc.writeMem(0x5f1e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd283, gbc.sp());
        EXPECT(0x5f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0130
        gbc.setState(0x529c, 0x8e31, 0xb170, 0x60a, 0x932f, 0x91a9, 0x0, 0x0);
        gbc.writeMem(0x529c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8e31, gbc.sp());
        EXPECT(0x529e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0131
        gbc.setState(0xc5fd, 0xdc78, 0x36f0, 0x8d05, 0xbc3e, 0x56f9, 0x0, 0x1);
        gbc.writeMem(0xc5fd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xdc78, gbc.sp());
        EXPECT(0xc5ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5fd));
        EXPECT(0xb4, gbc.readMem(0xc5fe));
        // CB B4 0132
        gbc.setState(0x561f, 0x3920, 0xcc90, 0x3007, 0xbcdb, 0x58d7, 0x1, 0x0);
        gbc.writeMem(0x561f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3920, gbc.sp());
        EXPECT(0x5621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0133
        gbc.setState(0xec3, 0x4054, 0xa30, 0xa442, 0xe415, 0xa62, 0x0, 0x0);
        gbc.writeMem(0xec3, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4054, gbc.sp());
        EXPECT(0xec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0134
        gbc.setState(0x13f, 0x3671, 0xdba0, 0xdd07, 0xa536, 0xbfa8, 0x1, 0x0);
        gbc.writeMem(0x13f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3671, gbc.sp());
        EXPECT(0x141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0135
        gbc.setState(0xe3c, 0x1f32, 0xf940, 0xe7e5, 0x6d89, 0xe60c, 0x0, 0x0);
        gbc.writeMem(0xe3c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1f32, gbc.sp());
        EXPECT(0xe3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0136
        gbc.setState(0x2282, 0x8c25, 0x2580, 0xd334, 0x4310, 0x5472, 0x1, 0x1);
        gbc.writeMem(0x2282, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8c25, gbc.sp());
        EXPECT(0x2284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0137
        gbc.setState(0xe4d2, 0x1fae, 0xad30, 0x1091, 0xc419, 0x4954, 0x1, 0x0);
        gbc.writeMem(0xe4d2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1fae, gbc.sp());
        EXPECT(0xe4d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4d2));
        EXPECT(0xb4, gbc.readMem(0xe4d3));
        // CB B4 0138
        gbc.setState(0x7d21, 0x1fe9, 0xe7e0, 0x4ac4, 0xd668, 0x8321, 0x1, 0x1);
        gbc.writeMem(0x7d21, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1fe9, gbc.sp());
        EXPECT(0x7d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0139
        gbc.setState(0x8cfb, 0x3884, 0x8da0, 0x3ddd, 0x1978, 0xa104, 0x1, 0x0);
        gbc.writeMem(0x8cfb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3884, gbc.sp());
        EXPECT(0x8cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cfb));
        EXPECT(0xb4, gbc.readMem(0x8cfc));
        // CB B4 013A
        gbc.setState(0x982c, 0xb04, 0x2b20, 0x8d7f, 0x156f, 0x557d, 0x1, 0x1);
        gbc.writeMem(0x982c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb04, gbc.sp());
        EXPECT(0x982e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x982c));
        EXPECT(0xb4, gbc.readMem(0x982d));
        // CB B4 013B
        gbc.setState(0x31c9, 0x8d96, 0xfab0, 0x974f, 0x3b23, 0x31dd, 0x1, 0x1);
        gbc.writeMem(0x31c9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8d96, gbc.sp());
        EXPECT(0x31cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 013C
        gbc.setState(0xd8cf, 0x9611, 0x63e0, 0x4a6a, 0xeb02, 0x61c9, 0x1, 0x0);
        gbc.writeMem(0xd8cf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9611, gbc.sp());
        EXPECT(0xd8d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8cf));
        EXPECT(0xb4, gbc.readMem(0xd8d0));
        // CB B4 013D
        gbc.setState(0x4bad, 0xd860, 0xd9c0, 0xe1df, 0xfd75, 0xc256, 0x0, 0x1);
        gbc.writeMem(0x4bad, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd860, gbc.sp());
        EXPECT(0x4baf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 013E
        gbc.setState(0xabe8, 0x1368, 0x2a0, 0x1ceb, 0xf97, 0x50a6, 0x1, 0x1);
        gbc.writeMem(0xabe8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1368, gbc.sp());
        EXPECT(0xabea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabe8));
        EXPECT(0xb4, gbc.readMem(0xabe9));
        // CB B4 013F
        gbc.setState(0x7259, 0x4240, 0x8220, 0x90a7, 0xfbce, 0xdfa4, 0x0, 0x0);
        gbc.writeMem(0x7259, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4240, gbc.sp());
        EXPECT(0x725b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0140
        gbc.setState(0x602e, 0x71cd, 0x2860, 0x9992, 0x1142, 0xe118, 0x1, 0x0);
        gbc.writeMem(0x602e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x71cd, gbc.sp());
        EXPECT(0x6030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0141
        gbc.setState(0xee73, 0x3068, 0xb040, 0x1735, 0x5435, 0x7509, 0x0, 0x0);
        gbc.writeMem(0xee73, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3068, gbc.sp());
        EXPECT(0xee75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee73));
        EXPECT(0xb4, gbc.readMem(0xee74));
        // CB B4 0142
        gbc.setState(0x48f, 0xb102, 0x9410, 0x5d69, 0x1ccc, 0x1ee7, 0x0, 0x0);
        gbc.writeMem(0x48f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb102, gbc.sp());
        EXPECT(0x491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0143
        gbc.setState(0x4b2c, 0x4263, 0x28c0, 0x8da2, 0x8aa9, 0xf20b, 0x1, 0x1);
        gbc.writeMem(0x4b2c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4263, gbc.sp());
        EXPECT(0x4b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0144
        gbc.setState(0xac59, 0xfba7, 0xd830, 0x646b, 0xc989, 0xf932, 0x1, 0x1);
        gbc.writeMem(0xac59, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfba7, gbc.sp());
        EXPECT(0xac5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac59));
        EXPECT(0xb4, gbc.readMem(0xac5a));
        // CB B4 0145
        gbc.setState(0xb7e, 0xa03c, 0xc470, 0x2ece, 0xf60c, 0x8190, 0x0, 0x0);
        gbc.writeMem(0xb7e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa03c, gbc.sp());
        EXPECT(0xb80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0146
        gbc.setState(0xeadb, 0xdfb6, 0xea0, 0x3e60, 0xd3a4, 0xfe66, 0x0, 0x1);
        gbc.writeMem(0xeadb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xdfb6, gbc.sp());
        EXPECT(0xeadd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeadb));
        EXPECT(0xb4, gbc.readMem(0xeadc));
        // CB B4 0147
        gbc.setState(0xc145, 0x3918, 0x38d0, 0xeb09, 0xf994, 0xe951, 0x1, 0x1);
        gbc.writeMem(0xc145, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3918, gbc.sp());
        EXPECT(0xc147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc145));
        EXPECT(0xb4, gbc.readMem(0xc146));
        // CB B4 0148
        gbc.setState(0x9205, 0x8e7e, 0x2770, 0x61c8, 0xf6ee, 0x4ab5, 0x1, 0x1);
        gbc.writeMem(0x9205, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8e7e, gbc.sp());
        EXPECT(0x9207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9205));
        EXPECT(0xb4, gbc.readMem(0x9206));
        // CB B4 0149
        gbc.setState(0x9a2e, 0x6639, 0x1a30, 0x5a6f, 0x8a42, 0x1026, 0x1, 0x0);
        gbc.writeMem(0x9a2e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6639, gbc.sp());
        EXPECT(0x9a30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a2e));
        EXPECT(0xb4, gbc.readMem(0x9a2f));
        // CB B4 014A
        gbc.setState(0x7427, 0xc56, 0x6120, 0x311b, 0x85c4, 0x9238, 0x1, 0x1);
        gbc.writeMem(0x7427, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc56, gbc.sp());
        EXPECT(0x7429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 014B
        gbc.setState(0xa3bc, 0x3e1b, 0x4350, 0x4a03, 0x6a7, 0xc737, 0x0, 0x1);
        gbc.writeMem(0xa3bc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3e1b, gbc.sp());
        EXPECT(0xa3be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3bc));
        EXPECT(0xb4, gbc.readMem(0xa3bd));
        // CB B4 014C
        gbc.setState(0x6189, 0xd0dc, 0xc00, 0xd382, 0xbec6, 0x35d6, 0x0, 0x0);
        gbc.writeMem(0x6189, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd0dc, gbc.sp());
        EXPECT(0x618b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 014D
        gbc.setState(0x352, 0x9748, 0x6b50, 0xcc15, 0x7be2, 0x47fa, 0x1, 0x0);
        gbc.writeMem(0x352, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9748, gbc.sp());
        EXPECT(0x354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 014E
        gbc.setState(0x97bd, 0x4386, 0x82b0, 0xc974, 0xea23, 0x1218, 0x1, 0x1);
        gbc.writeMem(0x97bd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4386, gbc.sp());
        EXPECT(0x97bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97bd));
        EXPECT(0xb4, gbc.readMem(0x97be));
        // CB B4 014F
        gbc.setState(0xedff, 0x62da, 0x2350, 0xd7f7, 0x2040, 0x5eff, 0x0, 0x0);
        gbc.writeMem(0xedff, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x62da, gbc.sp());
        EXPECT(0xee01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedff));
        EXPECT(0xb4, gbc.readMem(0xee00));
        // CB B4 0150
        gbc.setState(0x19bb, 0x2850, 0xd960, 0x4678, 0x6011, 0x139b, 0x0, 0x0);
        gbc.writeMem(0x19bb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2850, gbc.sp());
        EXPECT(0x19bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0151
        gbc.setState(0x8030, 0x496c, 0x8a60, 0xe990, 0x2f77, 0x2096, 0x0, 0x1);
        gbc.writeMem(0x8030, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x496c, gbc.sp());
        EXPECT(0x8032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8030));
        EXPECT(0xb4, gbc.readMem(0x8031));
        // CB B4 0152
        gbc.setState(0x4916, 0x575f, 0x1b60, 0xbee, 0xe9a, 0x1077, 0x0, 0x1);
        gbc.writeMem(0x4916, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x575f, gbc.sp());
        EXPECT(0x4918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0153
        gbc.setState(0xeb6, 0x10e5, 0xb7b0, 0x986e, 0x2646, 0x39, 0x1, 0x0);
        gbc.writeMem(0xeb6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x10e5, gbc.sp());
        EXPECT(0xeb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0154
        gbc.setState(0x4cc9, 0x5da1, 0xc650, 0x477e, 0x1709, 0x7a8d, 0x0, 0x0);
        gbc.writeMem(0x4cc9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5da1, gbc.sp());
        EXPECT(0x4ccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0155
        gbc.setState(0x2dd3, 0xc5f, 0xe330, 0x36c, 0x6d86, 0x3ed2, 0x0, 0x1);
        gbc.writeMem(0x2dd3, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc5f, gbc.sp());
        EXPECT(0x2dd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0156
        gbc.setState(0x736e, 0x25da, 0x5c90, 0x960b, 0xf996, 0xe066, 0x1, 0x0);
        gbc.writeMem(0x736e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x25da, gbc.sp());
        EXPECT(0x7370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0157
        gbc.setState(0x9154, 0x555a, 0xded0, 0x57cd, 0x5238, 0xcb8d, 0x1, 0x0);
        gbc.writeMem(0x9154, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x555a, gbc.sp());
        EXPECT(0x9156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9154));
        EXPECT(0xb4, gbc.readMem(0x9155));
        // CB B4 0158
        gbc.setState(0x8983, 0xaff9, 0xe7e0, 0xf413, 0xc463, 0xa297, 0x0, 0x0);
        gbc.writeMem(0x8983, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xaff9, gbc.sp());
        EXPECT(0x8985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8983));
        EXPECT(0xb4, gbc.readMem(0x8984));
        // CB B4 0159
        gbc.setState(0x282e, 0xf10a, 0x8490, 0x5a01, 0xce30, 0xa636, 0x1, 0x0);
        gbc.writeMem(0x282e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf10a, gbc.sp());
        EXPECT(0x2830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 015A
        gbc.setState(0x16c8, 0x7e7, 0xb570, 0x3907, 0xfe9b, 0xe8e6, 0x0, 0x0);
        gbc.writeMem(0x16c8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7e7, gbc.sp());
        EXPECT(0x16ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 015B
        gbc.setState(0xc444, 0x703, 0x1060, 0xc10d, 0xcdb2, 0x89bc, 0x1, 0x1);
        gbc.writeMem(0xc444, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x703, gbc.sp());
        EXPECT(0xc446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc444));
        EXPECT(0xb4, gbc.readMem(0xc445));
        // CB B4 015C
        gbc.setState(0x606, 0xb1c3, 0x7e00, 0x6f07, 0xd3f0, 0xac9, 0x0, 0x0);
        gbc.writeMem(0x606, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb1c3, gbc.sp());
        EXPECT(0x608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 015E
        gbc.setState(0x9241, 0x27df, 0x1290, 0x6847, 0x6eed, 0xd269, 0x0, 0x1);
        gbc.writeMem(0x9241, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x27df, gbc.sp());
        EXPECT(0x9243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9241));
        EXPECT(0xb4, gbc.readMem(0x9242));
        // CB B4 015F
        gbc.setState(0x9112, 0x864f, 0x9990, 0xf03f, 0x70f5, 0x2589, 0x1, 0x0);
        gbc.writeMem(0x9112, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x864f, gbc.sp());
        EXPECT(0x9114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9112));
        EXPECT(0xb4, gbc.readMem(0x9113));
        // CB B4 0160
        gbc.setState(0x1839, 0xea0b, 0x8970, 0x87e, 0x3373, 0xc0b2, 0x1, 0x0);
        gbc.writeMem(0x1839, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xea0b, gbc.sp());
        EXPECT(0x183b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0162
        gbc.setState(0x1eb9, 0x55e9, 0x7db0, 0x3ccf, 0x9f5, 0xfe5d, 0x0, 0x0);
        gbc.writeMem(0x1eb9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x55e9, gbc.sp());
        EXPECT(0x1ebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0163
        gbc.setState(0x534f, 0x7d38, 0xb590, 0x29e7, 0x1880, 0xe1f8, 0x0, 0x0);
        gbc.writeMem(0x534f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7d38, gbc.sp());
        EXPECT(0x5351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0164
        gbc.setState(0x7123, 0xf5db, 0xf160, 0xd16c, 0x2bbe, 0xc1e6, 0x0, 0x0);
        gbc.writeMem(0x7123, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf5db, gbc.sp());
        EXPECT(0x7125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0165
        gbc.setState(0xbfda, 0xc896, 0x3660, 0xbe7c, 0x3bf9, 0xcefc, 0x1, 0x1);
        gbc.writeMem(0xbfda, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc896, gbc.sp());
        EXPECT(0xbfdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfda));
        EXPECT(0xb4, gbc.readMem(0xbfdb));
        // CB B4 0166
        gbc.setState(0x158f, 0x543, 0xa200, 0xa077, 0x9e33, 0xb133, 0x1, 0x1);
        gbc.writeMem(0x158f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x543, gbc.sp());
        EXPECT(0x1591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0167
        gbc.setState(0xaf6d, 0xaa67, 0x6a70, 0x53fe, 0x5593, 0xf38f, 0x1, 0x0);
        gbc.writeMem(0xaf6d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xaa67, gbc.sp());
        EXPECT(0xaf6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6d));
        EXPECT(0xb4, gbc.readMem(0xaf6e));
        // CB B4 0168
        gbc.setState(0xd07d, 0xe530, 0x8920, 0x8e04, 0x6b04, 0x7fe1, 0x1, 0x1);
        gbc.writeMem(0xd07d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe530, gbc.sp());
        EXPECT(0xd07f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd07d));
        EXPECT(0xb4, gbc.readMem(0xd07e));
        // CB B4 0169
        gbc.setState(0xc420, 0xcbb0, 0xe500, 0x1bef, 0x279d, 0xaea, 0x1, 0x1);
        gbc.writeMem(0xc420, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xcbb0, gbc.sp());
        EXPECT(0xc422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc420));
        EXPECT(0xb4, gbc.readMem(0xc421));
        // CB B4 016A
        gbc.setState(0x87a, 0x1d93, 0xae80, 0xc879, 0x377f, 0x9175, 0x0, 0x1);
        gbc.writeMem(0x87a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1d93, gbc.sp());
        EXPECT(0x87c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 016B
        gbc.setState(0xb17d, 0x6314, 0x9ef0, 0xf629, 0xfed0, 0xadc4, 0x0, 0x1);
        gbc.writeMem(0xb17d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6314, gbc.sp());
        EXPECT(0xb17f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17d));
        EXPECT(0xb4, gbc.readMem(0xb17e));
        // CB B4 016C
        gbc.setState(0xd40c, 0x7665, 0x3370, 0xb980, 0x4484, 0x7ddf, 0x1, 0x0);
        gbc.writeMem(0xd40c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7665, gbc.sp());
        EXPECT(0xd40e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd40c));
        EXPECT(0xb4, gbc.readMem(0xd40d));
        // CB B4 016D
        gbc.setState(0xbb68, 0x7093, 0x5440, 0xd086, 0x351, 0x8b26, 0x1, 0x0);
        gbc.writeMem(0xbb68, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7093, gbc.sp());
        EXPECT(0xbb6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb68));
        EXPECT(0xb4, gbc.readMem(0xbb69));
        // CB B4 016E
        gbc.setState(0xc114, 0x6c32, 0x1a40, 0xe054, 0x2dc3, 0x530, 0x1, 0x1);
        gbc.writeMem(0xc114, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6c32, gbc.sp());
        EXPECT(0xc116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc114));
        EXPECT(0xb4, gbc.readMem(0xc115));
        // CB B4 016F
        gbc.setState(0x23a6, 0x8f76, 0x64d0, 0x2b62, 0x9cbe, 0xfbe4, 0x0, 0x0);
        gbc.writeMem(0x23a6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8f76, gbc.sp());
        EXPECT(0x23a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0170
        gbc.setState(0x92d9, 0xda57, 0x4ff0, 0x5410, 0x6ec9, 0x3bcd, 0x0, 0x1);
        gbc.writeMem(0x92d9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xda57, gbc.sp());
        EXPECT(0x92db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92d9));
        EXPECT(0xb4, gbc.readMem(0x92da));
        // CB B4 0171
        gbc.setState(0xc26, 0x3ecf, 0x1e20, 0x6fb2, 0x3e37, 0xb008, 0x0, 0x0);
        gbc.writeMem(0xc26, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3ecf, gbc.sp());
        EXPECT(0xc28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0172
        gbc.setState(0x69cf, 0x4423, 0xdb10, 0xbb0f, 0xb3b1, 0x5a0e, 0x1, 0x1);
        gbc.writeMem(0x69cf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4423, gbc.sp());
        EXPECT(0x69d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0173
        gbc.setState(0x3a90, 0x1605, 0x5080, 0x97f4, 0xa6de, 0x222e, 0x1, 0x0);
        gbc.writeMem(0x3a90, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1605, gbc.sp());
        EXPECT(0x3a92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0174
        gbc.setState(0xd448, 0x283, 0x1b0, 0x429e, 0x6316, 0xaae3, 0x1, 0x1);
        gbc.writeMem(0xd448, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x283, gbc.sp());
        EXPECT(0xd44a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd448));
        EXPECT(0xb4, gbc.readMem(0xd449));
        // CB B4 0175
        gbc.setState(0x6df, 0xcf3a, 0x3570, 0x347c, 0x8fb6, 0x239f, 0x0, 0x0);
        gbc.writeMem(0x6df, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xcf3a, gbc.sp());
        EXPECT(0x6e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0176
        gbc.setState(0x16cd, 0x9343, 0x37a0, 0x473a, 0x5501, 0x22cc, 0x0, 0x1);
        gbc.writeMem(0x16cd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9343, gbc.sp());
        EXPECT(0x16cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0177
        gbc.setState(0xdb72, 0x2a8a, 0x4fa0, 0xde54, 0x6e2b, 0x414f, 0x0, 0x0);
        gbc.writeMem(0xdb72, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2a8a, gbc.sp());
        EXPECT(0xdb74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb72));
        EXPECT(0xb4, gbc.readMem(0xdb73));
        // CB B4 0178
        gbc.setState(0xdaff, 0xfa20, 0xb780, 0x899c, 0xf1ae, 0xa176, 0x0, 0x0);
        gbc.writeMem(0xdaff, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfa20, gbc.sp());
        EXPECT(0xdb01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaff));
        EXPECT(0xb4, gbc.readMem(0xdb00));
        // CB B4 0179
        gbc.setState(0x60b8, 0xef28, 0x4ac0, 0x1c38, 0x5fcb, 0x749, 0x1, 0x0);
        gbc.writeMem(0x60b8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xef28, gbc.sp());
        EXPECT(0x60ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 017A
        gbc.setState(0x46b4, 0x4819, 0x9100, 0xc431, 0xa270, 0x92c5, 0x0, 0x1);
        gbc.writeMem(0x46b4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4819, gbc.sp());
        EXPECT(0x46b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 017B
        gbc.setState(0x3dd1, 0x73fb, 0xe2c0, 0x23c7, 0xb066, 0x25a5, 0x1, 0x1);
        gbc.writeMem(0x3dd1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x73fb, gbc.sp());
        EXPECT(0x3dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 017C
        gbc.setState(0xc74, 0xc195, 0x4480, 0xb664, 0xe6c9, 0x7dc, 0x0, 0x0);
        gbc.writeMem(0xc74, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc195, gbc.sp());
        EXPECT(0xc76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 017D
        gbc.setState(0xac23, 0xa97d, 0xe6c0, 0xc956, 0x4916, 0x6233, 0x1, 0x1);
        gbc.writeMem(0xac23, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa97d, gbc.sp());
        EXPECT(0xac25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac23));
        EXPECT(0xb4, gbc.readMem(0xac24));
        // CB B4 017E
        gbc.setState(0x1331, 0x854d, 0x290, 0x64c8, 0x2371, 0x22ee, 0x1, 0x1);
        gbc.writeMem(0x1331, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x854d, gbc.sp());
        EXPECT(0x1333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 017F
        gbc.setState(0xc794, 0xf451, 0x4070, 0xa1bb, 0xa033, 0x1a6, 0x0, 0x1);
        gbc.writeMem(0xc794, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf451, gbc.sp());
        EXPECT(0xc796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc794));
        EXPECT(0xb4, gbc.readMem(0xc795));
        // CB B4 0180
        gbc.setState(0xc764, 0xc0d6, 0x57a0, 0x9ea2, 0x3127, 0x39a3, 0x1, 0x1);
        gbc.writeMem(0xc764, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc0d6, gbc.sp());
        EXPECT(0xc766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc764));
        EXPECT(0xb4, gbc.readMem(0xc765));
        // CB B4 0181
        gbc.setState(0x49e2, 0x1cf4, 0x5bc0, 0x258, 0x23d8, 0x5916, 0x1, 0x0);
        gbc.writeMem(0x49e2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1cf4, gbc.sp());
        EXPECT(0x49e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0182
        gbc.setState(0xc148, 0xa2e, 0x1f90, 0x80ce, 0xf950, 0x6d2a, 0x0, 0x1);
        gbc.writeMem(0xc148, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa2e, gbc.sp());
        EXPECT(0xc14a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc148));
        EXPECT(0xb4, gbc.readMem(0xc149));
        // CB B4 0183
        gbc.setState(0xba11, 0x83fe, 0x5890, 0x3e37, 0xe8cf, 0x6558, 0x1, 0x1);
        gbc.writeMem(0xba11, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x83fe, gbc.sp());
        EXPECT(0xba13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba11));
        EXPECT(0xb4, gbc.readMem(0xba12));
        // CB B4 0184
        gbc.setState(0x6fdd, 0xca63, 0x6490, 0x37ff, 0x5cfe, 0x45fc, 0x0, 0x0);
        gbc.writeMem(0x6fdd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xca63, gbc.sp());
        EXPECT(0x6fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0186
        gbc.setState(0x94b1, 0x76ea, 0x1ee0, 0xe1e, 0x8d30, 0xf30b, 0x1, 0x0);
        gbc.writeMem(0x94b1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x76ea, gbc.sp());
        EXPECT(0x94b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94b1));
        EXPECT(0xb4, gbc.readMem(0x94b2));
        // CB B4 0187
        gbc.setState(0xfd8, 0x7564, 0x52b0, 0xa765, 0x51e2, 0x4978, 0x0, 0x1);
        gbc.writeMem(0xfd8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7564, gbc.sp());
        EXPECT(0xfda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0188
        gbc.setState(0x10f4, 0xbb06, 0x3090, 0xfc4e, 0x62c9, 0x212b, 0x0, 0x0);
        gbc.writeMem(0x10f4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbb06, gbc.sp());
        EXPECT(0x10f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0189
        gbc.setState(0x3ae6, 0x6c3d, 0x9cc0, 0xa43a, 0xdf81, 0xae1e, 0x1, 0x0);
        gbc.writeMem(0x3ae6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6c3d, gbc.sp());
        EXPECT(0x3ae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 018A
        gbc.setState(0x593, 0xced0, 0xaa10, 0xb13c, 0x7458, 0xf270, 0x0, 0x1);
        gbc.writeMem(0x593, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xced0, gbc.sp());
        EXPECT(0x595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 018B
        gbc.setState(0xb07e, 0x5d2a, 0xf890, 0xe3ab, 0xb6e0, 0xa0aa, 0x0, 0x1);
        gbc.writeMem(0xb07e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5d2a, gbc.sp());
        EXPECT(0xb080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb07e));
        EXPECT(0xb4, gbc.readMem(0xb07f));
        // CB B4 018C
        gbc.setState(0x169d, 0x8ca4, 0x7070, 0x8bdd, 0x49e3, 0xdd94, 0x0, 0x1);
        gbc.writeMem(0x169d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8ca4, gbc.sp());
        EXPECT(0x169f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 018E
        gbc.setState(0x76b, 0x83a7, 0xba70, 0x6440, 0x37b7, 0xc93a, 0x0, 0x1);
        gbc.writeMem(0x76b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x83a7, gbc.sp());
        EXPECT(0x76d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 018F
        gbc.setState(0xe1a3, 0x7cc3, 0x24c0, 0x79ae, 0xb58d, 0xf24a, 0x1, 0x1);
        gbc.writeMem(0xe1a3, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7cc3, gbc.sp());
        EXPECT(0xe1a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a3));
        EXPECT(0xb4, gbc.readMem(0xe1a4));
        // CB B4 0191
        gbc.setState(0x4a09, 0xa68, 0x7a0, 0xd513, 0x1414, 0xac2e, 0x1, 0x1);
        gbc.writeMem(0x4a09, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa68, gbc.sp());
        EXPECT(0x4a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0192
        gbc.setState(0xd7b2, 0x469f, 0x8c90, 0x32a6, 0xd101, 0xbe5e, 0x1, 0x0);
        gbc.writeMem(0xd7b2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x469f, gbc.sp());
        EXPECT(0xd7b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b2));
        EXPECT(0xb4, gbc.readMem(0xd7b3));
        // CB B4 0193
        gbc.setState(0xa729, 0xc354, 0x96e0, 0x4b2, 0x210f, 0x83de, 0x0, 0x0);
        gbc.writeMem(0xa729, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc354, gbc.sp());
        EXPECT(0xa72b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa729));
        EXPECT(0xb4, gbc.readMem(0xa72a));
        // CB B4 0194
        gbc.setState(0xb3da, 0xa5ea, 0x42e0, 0xf26, 0xe967, 0x65cf, 0x1, 0x1);
        gbc.writeMem(0xb3da, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa5ea, gbc.sp());
        EXPECT(0xb3dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3da));
        EXPECT(0xb4, gbc.readMem(0xb3db));
        // CB B4 0195
        gbc.setState(0x5f8a, 0x6f55, 0x76f0, 0xd876, 0xa94f, 0xde01, 0x1, 0x0);
        gbc.writeMem(0x5f8a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6f55, gbc.sp());
        EXPECT(0x5f8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0196
        gbc.setState(0xaa50, 0xafe5, 0x2510, 0x617f, 0xa926, 0x4774, 0x1, 0x1);
        gbc.writeMem(0xaa50, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xafe5, gbc.sp());
        EXPECT(0xaa52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa50));
        EXPECT(0xb4, gbc.readMem(0xaa51));
        // CB B4 0197
        gbc.setState(0x8070, 0x7034, 0x2800, 0xf995, 0x37bb, 0xad3b, 0x0, 0x0);
        gbc.writeMem(0x8070, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7034, gbc.sp());
        EXPECT(0x8072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8070));
        EXPECT(0xb4, gbc.readMem(0x8071));
        // CB B4 0198
        gbc.setState(0x9a31, 0x7436, 0xc4f0, 0x980, 0x90b0, 0x4343, 0x1, 0x0);
        gbc.writeMem(0x9a31, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7436, gbc.sp());
        EXPECT(0x9a33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a31));
        EXPECT(0xb4, gbc.readMem(0x9a32));
        // CB B4 0199
        gbc.setState(0xb1be, 0x4a6d, 0x9a10, 0x71ad, 0x7683, 0xf6e, 0x1, 0x0);
        gbc.writeMem(0xb1be, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4a6d, gbc.sp());
        EXPECT(0xb1c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1be));
        EXPECT(0xb4, gbc.readMem(0xb1bf));
        // CB B4 019A
        gbc.setState(0x8f47, 0xa391, 0x2a00, 0xaec1, 0xc5c2, 0x4089, 0x0, 0x1);
        gbc.writeMem(0x8f47, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa391, gbc.sp());
        EXPECT(0x8f49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f47));
        EXPECT(0xb4, gbc.readMem(0x8f48));
        // CB B4 019B
        gbc.setState(0x70a0, 0x9887, 0x29d0, 0x5a77, 0x1038, 0x3744, 0x1, 0x0);
        gbc.writeMem(0x70a0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9887, gbc.sp());
        EXPECT(0x70a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 019C
        gbc.setState(0x1f50, 0x3326, 0x1230, 0xa567, 0x5091, 0x87fa, 0x0, 0x1);
        gbc.writeMem(0x1f50, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3326, gbc.sp());
        EXPECT(0x1f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 019D
        gbc.setState(0x6617, 0x9513, 0x6d60, 0x1f09, 0x4c17, 0xafbc, 0x1, 0x1);
        gbc.writeMem(0x6617, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9513, gbc.sp());
        EXPECT(0x6619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 019E
        gbc.setState(0x404e, 0xaf5b, 0x5720, 0x461b, 0xbff7, 0x1ed6, 0x1, 0x1);
        gbc.writeMem(0x404e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xaf5b, gbc.sp());
        EXPECT(0x4050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 019F
        gbc.setState(0x6bac, 0x2fea, 0xe90, 0x4d7a, 0x9d09, 0x8c03, 0x0, 0x0);
        gbc.writeMem(0x6bac, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2fea, gbc.sp());
        EXPECT(0x6bae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 01A0
        gbc.setState(0xc1ae, 0xae23, 0xdaa0, 0x3b10, 0x5c85, 0x7fe5, 0x0, 0x1);
        gbc.writeMem(0xc1ae, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xae23, gbc.sp());
        EXPECT(0xc1b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ae));
        EXPECT(0xb4, gbc.readMem(0xc1af));
        // CB B4 01A1
        gbc.setState(0x11b7, 0xf810, 0x7ac0, 0x7244, 0xab82, 0x7542, 0x0, 0x1);
        gbc.writeMem(0x11b7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf810, gbc.sp());
        EXPECT(0x11b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01A2
        gbc.setState(0x94c9, 0x3056, 0xc9b0, 0xfb30, 0x1a1c, 0x1a1, 0x0, 0x1);
        gbc.writeMem(0x94c9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3056, gbc.sp());
        EXPECT(0x94cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c9));
        EXPECT(0xb4, gbc.readMem(0x94ca));
        // CB B4 01A3
        gbc.setState(0xdd11, 0x925b, 0x7240, 0x7716, 0x14a3, 0xdbaa, 0x1, 0x0);
        gbc.writeMem(0xdd11, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x925b, gbc.sp());
        EXPECT(0xdd13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd11));
        EXPECT(0xb4, gbc.readMem(0xdd12));
        // CB B4 01A4
        gbc.setState(0xc2a7, 0x451d, 0x670, 0x1fea, 0x65e, 0xed77, 0x0, 0x0);
        gbc.writeMem(0xc2a7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x451d, gbc.sp());
        EXPECT(0xc2a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a7));
        EXPECT(0xb4, gbc.readMem(0xc2a8));
        // CB B4 01A5
        gbc.setState(0xc711, 0x759, 0xdd40, 0x828f, 0xcf39, 0xc08c, 0x1, 0x0);
        gbc.writeMem(0xc711, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x759, gbc.sp());
        EXPECT(0xc713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc711));
        EXPECT(0xb4, gbc.readMem(0xc712));
        // CB B4 01A6
        gbc.setState(0xec47, 0xd3ee, 0x3730, 0x682e, 0x6244, 0x2754, 0x1, 0x1);
        gbc.writeMem(0xec47, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd3ee, gbc.sp());
        EXPECT(0xec49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec47));
        EXPECT(0xb4, gbc.readMem(0xec48));
        // CB B4 01A7
        gbc.setState(0x438c, 0x9ad1, 0x6f20, 0x20f, 0x8499, 0x111d, 0x1, 0x1);
        gbc.writeMem(0x438c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9ad1, gbc.sp());
        EXPECT(0x438e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01A8
        gbc.setState(0x10e3, 0x4217, 0x7a40, 0x99ec, 0xac5b, 0xf876, 0x0, 0x1);
        gbc.writeMem(0x10e3, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4217, gbc.sp());
        EXPECT(0x10e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01A9
        gbc.setState(0x40be, 0xf3e5, 0xa150, 0x3c8b, 0x67d8, 0x662c, 0x1, 0x0);
        gbc.writeMem(0x40be, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf3e5, gbc.sp());
        EXPECT(0x40c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 01AA
        gbc.setState(0x22cb, 0xe9da, 0xf480, 0x1815, 0x350f, 0xcf89, 0x1, 0x1);
        gbc.writeMem(0x22cb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe9da, gbc.sp());
        EXPECT(0x22cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01AB
        gbc.setState(0x840c, 0x5c22, 0x12a0, 0x7c74, 0x70a8, 0x18cf, 0x1, 0x1);
        gbc.writeMem(0x840c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5c22, gbc.sp());
        EXPECT(0x840e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x840c));
        EXPECT(0xb4, gbc.readMem(0x840d));
        // CB B4 01AC
        gbc.setState(0x49a6, 0x2730, 0x420, 0xd9ab, 0xa3c6, 0x5629, 0x1, 0x1);
        gbc.writeMem(0x49a6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2730, gbc.sp());
        EXPECT(0x49a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01AD
        gbc.setState(0x1133, 0xb708, 0x2390, 0xa639, 0xf3b3, 0x8913, 0x1, 0x1);
        gbc.writeMem(0x1133, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb708, gbc.sp());
        EXPECT(0x1135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 01AE
        gbc.setState(0xce46, 0xf2c8, 0xfc00, 0x35af, 0x3c8, 0xab4e, 0x1, 0x0);
        gbc.writeMem(0xce46, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf2c8, gbc.sp());
        EXPECT(0xce48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce46));
        EXPECT(0xb4, gbc.readMem(0xce47));
        // CB B4 01AF
        gbc.setState(0x2c40, 0x7619, 0xd730, 0x45bb, 0xcafb, 0x6998, 0x1, 0x1);
        gbc.writeMem(0x2c40, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7619, gbc.sp());
        EXPECT(0x2c42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 01B0
        gbc.setState(0x26c0, 0x3864, 0x6630, 0xda87, 0x2a7, 0xb211, 0x1, 0x1);
        gbc.writeMem(0x26c0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3864, gbc.sp());
        EXPECT(0x26c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 01B1
        gbc.setState(0xdb2b, 0xcaa0, 0x6b40, 0x1e7a, 0xa696, 0xad0c, 0x0, 0x1);
        gbc.writeMem(0xdb2b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xcaa0, gbc.sp());
        EXPECT(0xdb2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb2b));
        EXPECT(0xb4, gbc.readMem(0xdb2c));
        // CB B4 01B2
        gbc.setState(0xe97f, 0xe0d7, 0xc350, 0xd95c, 0x18f1, 0x38ab, 0x1, 0x1);
        gbc.writeMem(0xe97f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe0d7, gbc.sp());
        EXPECT(0xe981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe97f));
        EXPECT(0xb4, gbc.readMem(0xe980));
        // CB B4 01B3
        gbc.setState(0xa04, 0x3872, 0x6350, 0xaa2a, 0xb56c, 0xccff, 0x0, 0x0);
        gbc.writeMem(0xa04, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3872, gbc.sp());
        EXPECT(0xa06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 01B4
        gbc.setState(0x8831, 0x8189, 0x5ad0, 0xb57e, 0xa80, 0x2fd1, 0x1, 0x1);
        gbc.writeMem(0x8831, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8189, gbc.sp());
        EXPECT(0x8833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8831));
        EXPECT(0xb4, gbc.readMem(0x8832));
        // CB B4 01B5
        gbc.setState(0xee51, 0x53ca, 0xd170, 0xc656, 0x188a, 0xe28d, 0x0, 0x1);
        gbc.writeMem(0xee51, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x53ca, gbc.sp());
        EXPECT(0xee53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee51));
        EXPECT(0xb4, gbc.readMem(0xee52));
        // CB B4 01B6
        gbc.setState(0x5185, 0xfbb0, 0xb2f0, 0x202f, 0x574f, 0x4556, 0x1, 0x0);
        gbc.writeMem(0x5185, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfbb0, gbc.sp());
        EXPECT(0x5187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 01B7
        gbc.setState(0xd953, 0xed79, 0xdf70, 0x8e32, 0x6198, 0x8dc3, 0x0, 0x1);
        gbc.writeMem(0xd953, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xed79, gbc.sp());
        EXPECT(0xd955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd953));
        EXPECT(0xb4, gbc.readMem(0xd954));
        // CB B4 01B8
        gbc.setState(0x6f83, 0xfd0c, 0x820, 0x8c82, 0x3800, 0xb3f3, 0x1, 0x1);
        gbc.writeMem(0x6f83, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xfd0c, gbc.sp());
        EXPECT(0x6f85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01B9
        gbc.setState(0xcbde, 0x910c, 0x53d0, 0xac2b, 0x8df1, 0xc5c9, 0x0, 0x0);
        gbc.writeMem(0xcbde, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x910c, gbc.sp());
        EXPECT(0xcbe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbde));
        EXPECT(0xb4, gbc.readMem(0xcbdf));
        // CB B4 01BA
        gbc.setState(0x36be, 0xd523, 0x4100, 0xb4aa, 0x1339, 0x746b, 0x1, 0x0);
        gbc.writeMem(0x36be, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd523, gbc.sp());
        EXPECT(0x36c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01BB
        gbc.setState(0xbf, 0x3c5e, 0x1660, 0x74c, 0x2828, 0xe334, 0x1, 0x0);
        gbc.writeMem(0xbf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3c5e, gbc.sp());
        EXPECT(0xc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01BC
        gbc.setState(0xd8f, 0x7536, 0xc070, 0x143c, 0x6db7, 0x9acd, 0x1, 0x0);
        gbc.writeMem(0xd8f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7536, gbc.sp());
        EXPECT(0xd91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 01BD
        gbc.setState(0x8dca, 0xe104, 0xd500, 0x289f, 0x5110, 0x89ca, 0x0, 0x0);
        gbc.writeMem(0x8dca, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe104, gbc.sp());
        EXPECT(0x8dcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dca));
        EXPECT(0xb4, gbc.readMem(0x8dcb));
        // CB B4 01BE
        gbc.setState(0xe349, 0x4c89, 0x49a0, 0x38f5, 0xcecb, 0x636e, 0x1, 0x0);
        gbc.writeMem(0xe349, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4c89, gbc.sp());
        EXPECT(0xe34b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe349));
        EXPECT(0xb4, gbc.readMem(0xe34a));
        // CB B4 01BF
        gbc.setState(0x2eed, 0x438c, 0x9d40, 0xc6a4, 0x777e, 0x95e3, 0x0, 0x1);
        gbc.writeMem(0x2eed, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x438c, gbc.sp());
        EXPECT(0x2eef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01C0
        gbc.setState(0x338b, 0x3bbb, 0x42c0, 0xc637, 0xd812, 0x423c, 0x0, 0x0);
        gbc.writeMem(0x338b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3bbb, gbc.sp());
        EXPECT(0x338d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01C1
        gbc.setState(0x37da, 0x5c3f, 0x49a0, 0xb94, 0xc34, 0x3d9c, 0x0, 0x1);
        gbc.writeMem(0x37da, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5c3f, gbc.sp());
        EXPECT(0x37dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01C3
        gbc.setState(0xae87, 0x4382, 0x7590, 0x8ab0, 0x65d2, 0x28b, 0x1, 0x0);
        gbc.writeMem(0xae87, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4382, gbc.sp());
        EXPECT(0xae89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae87));
        EXPECT(0xb4, gbc.readMem(0xae88));
        // CB B4 01C4
        gbc.setState(0x2c4d, 0x38ec, 0x21c0, 0xd895, 0xb75e, 0x5dff, 0x1, 0x1);
        gbc.writeMem(0x2c4d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x38ec, gbc.sp());
        EXPECT(0x2c4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01C5
        gbc.setState(0x7984, 0x969c, 0x9b90, 0x8758, 0x50fa, 0x9647, 0x1, 0x1);
        gbc.writeMem(0x7984, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x969c, gbc.sp());
        EXPECT(0x7986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 01C6
        gbc.setState(0x76ae, 0x37a6, 0xa740, 0xaf8b, 0xa403, 0x9906, 0x0, 0x1);
        gbc.writeMem(0x76ae, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x37a6, gbc.sp());
        EXPECT(0x76b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01C7
        gbc.setState(0xb540, 0x37cb, 0x9420, 0xe7d5, 0xf68f, 0x3576, 0x0, 0x1);
        gbc.writeMem(0xb540, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x37cb, gbc.sp());
        EXPECT(0xb542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb540));
        EXPECT(0xb4, gbc.readMem(0xb541));
        // CB B4 01C9
        gbc.setState(0x2edd, 0xd1fa, 0x6e70, 0x88ee, 0x31e9, 0xc42a, 0x1, 0x0);
        gbc.writeMem(0x2edd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd1fa, gbc.sp());
        EXPECT(0x2edf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 01CB
        gbc.setState(0x8cce, 0x1b29, 0x8eb0, 0xe101, 0x12e4, 0xf40f, 0x1, 0x0);
        gbc.writeMem(0x8cce, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1b29, gbc.sp());
        EXPECT(0x8cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cce));
        EXPECT(0xb4, gbc.readMem(0x8ccf));
        // CB B4 01CC
        gbc.setState(0xc8cc, 0x6ed8, 0x6570, 0x4bda, 0x6e6c, 0x7465, 0x0, 0x0);
        gbc.writeMem(0xc8cc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6ed8, gbc.sp());
        EXPECT(0xc8ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8cc));
        EXPECT(0xb4, gbc.readMem(0xc8cd));
        // CB B4 01CD
        gbc.setState(0x403f, 0xe19, 0xcc0, 0xee4a, 0x8196, 0xf18f, 0x1, 0x0);
        gbc.writeMem(0x403f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe19, gbc.sp());
        EXPECT(0x4041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01CE
        gbc.setState(0x2a20, 0x92ce, 0xbcc0, 0x9f58, 0x4ed7, 0xfd2d, 0x0, 0x1);
        gbc.writeMem(0x2a20, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x92ce, gbc.sp());
        EXPECT(0x2a22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01CF
        gbc.setState(0xd9e9, 0x3d9, 0xa170, 0xea6e, 0x7223, 0xc315, 0x1, 0x0);
        gbc.writeMem(0xd9e9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3d9, gbc.sp());
        EXPECT(0xd9eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e9));
        EXPECT(0xb4, gbc.readMem(0xd9ea));
        // CB B4 01D0
        gbc.setState(0x69c7, 0xba25, 0x2ab0, 0xe39, 0xa825, 0xd4b8, 0x0, 0x1);
        gbc.writeMem(0x69c7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xba25, gbc.sp());
        EXPECT(0x69c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 01D1
        gbc.setState(0xdf08, 0x6686, 0x8ae0, 0xd59f, 0x3a7c, 0x3812, 0x1, 0x1);
        gbc.writeMem(0xdf08, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6686, gbc.sp());
        EXPECT(0xdf0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf08));
        EXPECT(0xb4, gbc.readMem(0xdf09));
        // CB B4 01D2
        gbc.setState(0x6b4c, 0xd356, 0xd780, 0x27a4, 0xf782, 0xfab6, 0x0, 0x0);
        gbc.writeMem(0x6b4c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd356, gbc.sp());
        EXPECT(0x6b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01D3
        gbc.setState(0x169, 0x17ab, 0xea00, 0xba0, 0x495d, 0x1e07, 0x1, 0x1);
        gbc.writeMem(0x169, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x17ab, gbc.sp());
        EXPECT(0x16b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01D4
        gbc.setState(0x420, 0xb74, 0x3df0, 0x5473, 0x47fd, 0x1470, 0x0, 0x1);
        gbc.writeMem(0x420, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb74, gbc.sp());
        EXPECT(0x422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 01D7
        gbc.setState(0xec25, 0x2703, 0xfcd0, 0xc971, 0x303c, 0xc5fd, 0x1, 0x0);
        gbc.writeMem(0xec25, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2703, gbc.sp());
        EXPECT(0xec27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec25));
        EXPECT(0xb4, gbc.readMem(0xec26));
        // CB B4 01D8
        gbc.setState(0xc2c0, 0xab8b, 0xdf90, 0x2cdf, 0x9ac0, 0x3a1a, 0x0, 0x1);
        gbc.writeMem(0xc2c0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xab8b, gbc.sp());
        EXPECT(0xc2c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2c0));
        EXPECT(0xb4, gbc.readMem(0xc2c1));
        // CB B4 01D9
        gbc.setState(0xbc53, 0xbee0, 0x3460, 0x5424, 0xbd24, 0x1897, 0x1, 0x1);
        gbc.writeMem(0xbc53, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbee0, gbc.sp());
        EXPECT(0xbc55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc53));
        EXPECT(0xb4, gbc.readMem(0xbc54));
        // CB B4 01DA
        gbc.setState(0x3d61, 0x8476, 0x2720, 0x68be, 0x41d5, 0x7adf, 0x0, 0x0);
        gbc.writeMem(0x3d61, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8476, gbc.sp());
        EXPECT(0x3d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01DB
        gbc.setState(0x712d, 0xfa27, 0x4290, 0xd96c, 0x8ca3, 0xf718, 0x1, 0x1);
        gbc.writeMem(0x712d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfa27, gbc.sp());
        EXPECT(0x712f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 01DC
        gbc.setState(0x1824, 0x6d28, 0x3fd0, 0x2d56, 0x899c, 0xa63a, 0x0, 0x1);
        gbc.writeMem(0x1824, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6d28, gbc.sp());
        EXPECT(0x1826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 01DD
        gbc.setState(0xe75f, 0x9294, 0x3310, 0x34d9, 0x39f9, 0xa6ea, 0x1, 0x1);
        gbc.writeMem(0xe75f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9294, gbc.sp());
        EXPECT(0xe761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe75f));
        EXPECT(0xb4, gbc.readMem(0xe760));
        // CB B4 01DE
        gbc.setState(0xe402, 0x97d8, 0x460, 0x9a73, 0x4923, 0x5465, 0x1, 0x1);
        gbc.writeMem(0xe402, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x97d8, gbc.sp());
        EXPECT(0xe404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe402));
        EXPECT(0xb4, gbc.readMem(0xe403));
        // CB B4 01DF
        gbc.setState(0x615a, 0x90a5, 0x7790, 0xba43, 0x4fa8, 0x65f3, 0x1, 0x1);
        gbc.writeMem(0x615a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x90a5, gbc.sp());
        EXPECT(0x615c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 01E0
        gbc.setState(0x37cc, 0x67db, 0xbf60, 0xb335, 0x45eb, 0x490a, 0x1, 0x1);
        gbc.writeMem(0x37cc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x67db, gbc.sp());
        EXPECT(0x37ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01E2
        gbc.setState(0x9759, 0x4122, 0x3330, 0x31c4, 0x305a, 0xc9be, 0x0, 0x1);
        gbc.writeMem(0x9759, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4122, gbc.sp());
        EXPECT(0x975b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9759));
        EXPECT(0xb4, gbc.readMem(0x975a));
        // CB B4 01E3
        gbc.setState(0x2fee, 0x1e98, 0xd340, 0xf9f9, 0x2559, 0x2901, 0x0, 0x1);
        gbc.writeMem(0x2fee, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1e98, gbc.sp());
        EXPECT(0x2ff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01E4
        gbc.setState(0x1a23, 0xe2b3, 0x5090, 0x5257, 0x9349, 0xd5de, 0x1, 0x0);
        gbc.writeMem(0x1a23, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe2b3, gbc.sp());
        EXPECT(0x1a25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 01E5
        gbc.setState(0xd66f, 0x5c1e, 0xb4d0, 0x5223, 0xd93, 0x110, 0x1, 0x0);
        gbc.writeMem(0xd66f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5c1e, gbc.sp());
        EXPECT(0xd671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd66f));
        EXPECT(0xb4, gbc.readMem(0xd670));
        // CB B4 01E7
        gbc.setState(0x5574, 0xbba2, 0x5e50, 0xa7d9, 0x33c0, 0x6bf1, 0x1, 0x0);
        gbc.writeMem(0x5574, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbba2, gbc.sp());
        EXPECT(0x5576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 01E8
        gbc.setState(0xd15b, 0x4d4e, 0xee10, 0xf4ee, 0x7477, 0xc0c7, 0x0, 0x1);
        gbc.writeMem(0xd15b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4d4e, gbc.sp());
        EXPECT(0xd15d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd15b));
        EXPECT(0xb4, gbc.readMem(0xd15c));
        // CB B4 01E9
        gbc.setState(0x2408, 0x2153, 0x3570, 0xc70b, 0x6f74, 0x7b6f, 0x0, 0x1);
        gbc.writeMem(0x2408, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2153, gbc.sp());
        EXPECT(0x240a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 01EA
        gbc.setState(0x89c4, 0x134e, 0x15c0, 0x3d9c, 0xae6c, 0xcb8f, 0x1, 0x1);
        gbc.writeMem(0x89c4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x134e, gbc.sp());
        EXPECT(0x89c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89c4));
        EXPECT(0xb4, gbc.readMem(0x89c5));
        // CB B4 01EB
        gbc.setState(0xd53b, 0x8547, 0xc230, 0x4083, 0x4373, 0x76e, 0x1, 0x1);
        gbc.writeMem(0xd53b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8547, gbc.sp());
        EXPECT(0xd53d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd53b));
        EXPECT(0xb4, gbc.readMem(0xd53c));
        // CB B4 01EC
        gbc.setState(0xbd4b, 0x7beb, 0x8a30, 0xedd4, 0x5db4, 0x33eb, 0x0, 0x1);
        gbc.writeMem(0xbd4b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7beb, gbc.sp());
        EXPECT(0xbd4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd4b));
        EXPECT(0xb4, gbc.readMem(0xbd4c));
        // CB B4 01ED
        gbc.setState(0xe85b, 0x1094, 0x12c0, 0x6d1, 0x79d0, 0x3d09, 0x0, 0x0);
        gbc.writeMem(0xe85b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1094, gbc.sp());
        EXPECT(0xe85d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe85b));
        EXPECT(0xb4, gbc.readMem(0xe85c));
        // CB B4 01EE
        gbc.setState(0x7462, 0x6182, 0xc980, 0xa985, 0x6bf3, 0x5a7e, 0x0, 0x1);
        gbc.writeMem(0x7462, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6182, gbc.sp());
        EXPECT(0x7464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01EF
        gbc.setState(0xcaf7, 0x495c, 0x4d0, 0xc100, 0x5fcd, 0x9874, 0x0, 0x0);
        gbc.writeMem(0xcaf7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x495c, gbc.sp());
        EXPECT(0xcaf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf7));
        EXPECT(0xb4, gbc.readMem(0xcaf8));
        // CB B4 01F0
        gbc.setState(0xa722, 0x907d, 0xabb0, 0xe295, 0x2e12, 0x8389, 0x1, 0x0);
        gbc.writeMem(0xa722, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x907d, gbc.sp());
        EXPECT(0xa724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa722));
        EXPECT(0xb4, gbc.readMem(0xa723));
        // CB B4 01F1
        gbc.setState(0x46e9, 0xd2d, 0x860, 0x9084, 0xda31, 0x72b7, 0x1, 0x0);
        gbc.writeMem(0x46e9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd2d, gbc.sp());
        EXPECT(0x46eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01F2
        gbc.setState(0x6c50, 0x2d2e, 0x2f00, 0x2faa, 0x27b7, 0xcf77, 0x1, 0x0);
        gbc.writeMem(0x6c50, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2d2e, gbc.sp());
        EXPECT(0x6c52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01F3
        gbc.setState(0x7c09, 0xd68, 0xd2d0, 0xcf33, 0xcfa8, 0xc05b, 0x1, 0x0);
        gbc.writeMem(0x7c09, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd68, gbc.sp());
        EXPECT(0x7c0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 01F4
        gbc.setState(0x31a0, 0xf6d8, 0xf520, 0x73fd, 0x9347, 0x5412, 0x0, 0x0);
        gbc.writeMem(0x31a0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf6d8, gbc.sp());
        EXPECT(0x31a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01F5
        gbc.setState(0x9701, 0xae66, 0xbc00, 0xa888, 0xbf55, 0x49c3, 0x0, 0x1);
        gbc.writeMem(0x9701, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xae66, gbc.sp());
        EXPECT(0x9703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9701));
        EXPECT(0xb4, gbc.readMem(0x9702));
        // CB B4 01F6
        gbc.setState(0xba25, 0xe84a, 0x8980, 0xb045, 0x6d3c, 0x25ce, 0x0, 0x0);
        gbc.writeMem(0xba25, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe84a, gbc.sp());
        EXPECT(0xba27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba25));
        EXPECT(0xb4, gbc.readMem(0xba26));
        // CB B4 01F7
        gbc.setState(0x27f6, 0xed0b, 0xf060, 0x4ca6, 0xb4c5, 0x86d5, 0x1, 0x1);
        gbc.writeMem(0x27f6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xed0b, gbc.sp());
        EXPECT(0x27f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01F8
        gbc.setState(0x5de6, 0x226c, 0x790, 0x9e4a, 0xa78d, 0x4cbb, 0x1, 0x1);
        gbc.writeMem(0x5de6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x226c, gbc.sp());
        EXPECT(0x5de8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 01F9
        gbc.setState(0x616c, 0xdefe, 0x3bc0, 0x1954, 0x8831, 0x7bc9, 0x1, 0x1);
        gbc.writeMem(0x616c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdefe, gbc.sp());
        EXPECT(0x616e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01FA
        gbc.setState(0x955e, 0x9279, 0xbb10, 0x3de9, 0x6606, 0x546f, 0x1, 0x1);
        gbc.writeMem(0x955e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9279, gbc.sp());
        EXPECT(0x9560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x955e));
        EXPECT(0xb4, gbc.readMem(0x955f));
        // CB B4 01FB
        gbc.setState(0x2676, 0x7edf, 0xada0, 0xcdcc, 0xcc9b, 0xcde6, 0x0, 0x1);
        gbc.writeMem(0x2676, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7edf, gbc.sp());
        EXPECT(0x2678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01FC
        gbc.setState(0x6808, 0xabaa, 0x1f10, 0x9ba7, 0x628a, 0x7e91, 0x0, 0x0);
        gbc.writeMem(0x6808, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xabaa, gbc.sp());
        EXPECT(0x680a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 01FD
        gbc.setState(0x6b90, 0x6493, 0xcde0, 0x9307, 0x9c30, 0x9cea, 0x0, 0x1);
        gbc.writeMem(0x6b90, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6493, gbc.sp());
        EXPECT(0x6b92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 01FE
        gbc.setState(0x9dd6, 0xc8ee, 0x1640, 0xf733, 0x51d7, 0x269e, 0x1, 0x0);
        gbc.writeMem(0x9dd6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc8ee, gbc.sp());
        EXPECT(0x9dd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dd6));
        EXPECT(0xb4, gbc.readMem(0x9dd7));
        // CB B4 01FF
        gbc.setState(0x5ed5, 0xe67b, 0x9e10, 0xe3f8, 0x7c0f, 0x924d, 0x1, 0x0);
        gbc.writeMem(0x5ed5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe67b, gbc.sp());
        EXPECT(0x5ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0200
        gbc.setState(0x350d, 0x17c3, 0x8210, 0x7294, 0x67a9, 0x8c94, 0x1, 0x1);
        gbc.writeMem(0x350d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x17c3, gbc.sp());
        EXPECT(0x350f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0201
        gbc.setState(0x9830, 0x2acf, 0xbe30, 0x45bd, 0x1df, 0xa25c, 0x0, 0x0);
        gbc.writeMem(0x9830, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2acf, gbc.sp());
        EXPECT(0x9832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9830));
        EXPECT(0xb4, gbc.readMem(0x9831));
        // CB B4 0202
        gbc.setState(0x650c, 0x40bf, 0xa260, 0x9e1c, 0x43f1, 0x7d6d, 0x1, 0x1);
        gbc.writeMem(0x650c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x40bf, gbc.sp());
        EXPECT(0x650e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0203
        gbc.setState(0x6f7, 0xa032, 0x4140, 0x6eb0, 0xb61, 0xd704, 0x0, 0x1);
        gbc.writeMem(0x6f7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa032, gbc.sp());
        EXPECT(0x6f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0204
        gbc.setState(0xae77, 0xe637, 0xc8e0, 0xe8a4, 0x3223, 0xe98f, 0x0, 0x0);
        gbc.writeMem(0xae77, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe637, gbc.sp());
        EXPECT(0xae79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae77));
        EXPECT(0xb4, gbc.readMem(0xae78));
        // CB B4 0205
        gbc.setState(0x42f4, 0xedc, 0xc290, 0x21e5, 0xab60, 0x4f7f, 0x1, 0x0);
        gbc.writeMem(0x42f4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xedc, gbc.sp());
        EXPECT(0x42f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0206
        gbc.setState(0x72ef, 0x314e, 0xcb90, 0xcc13, 0xdf2, 0x4a63, 0x0, 0x0);
        gbc.writeMem(0x72ef, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x314e, gbc.sp());
        EXPECT(0x72f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0207
        gbc.setState(0x9a11, 0x6a53, 0x6720, 0x2a91, 0x31d8, 0x9f, 0x0, 0x1);
        gbc.writeMem(0x9a11, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6a53, gbc.sp());
        EXPECT(0x9a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a11));
        EXPECT(0xb4, gbc.readMem(0x9a12));
        // CB B4 0208
        gbc.setState(0x4cab, 0x2183, 0x26b0, 0xd047, 0xd5dc, 0x5a9d, 0x0, 0x0);
        gbc.writeMem(0x4cab, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2183, gbc.sp());
        EXPECT(0x4cad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0209
        gbc.setState(0x610f, 0x6feb, 0xb6b0, 0x3424, 0xf0b, 0x5ca4, 0x0, 0x1);
        gbc.writeMem(0x610f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6feb, gbc.sp());
        EXPECT(0x6111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 020A
        gbc.setState(0x797b, 0x5239, 0xd6e0, 0x73e6, 0xd1d0, 0xe18d, 0x0, 0x0);
        gbc.writeMem(0x797b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5239, gbc.sp());
        EXPECT(0x797d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 020B
        gbc.setState(0x47d1, 0x9539, 0x96f0, 0xb6e3, 0xbb7d, 0xc45b, 0x0, 0x0);
        gbc.writeMem(0x47d1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9539, gbc.sp());
        EXPECT(0x47d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 020C
        gbc.setState(0x9449, 0x9158, 0xa4f0, 0xf503, 0x9868, 0xa875, 0x0, 0x0);
        gbc.writeMem(0x9449, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9158, gbc.sp());
        EXPECT(0x944b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9449));
        EXPECT(0xb4, gbc.readMem(0x944a));
        // CB B4 020D
        gbc.setState(0x77cd, 0xd80f, 0x660, 0x3678, 0x262e, 0xdfaf, 0x1, 0x1);
        gbc.writeMem(0x77cd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd80f, gbc.sp());
        EXPECT(0x77cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 020E
        gbc.setState(0x8564, 0xb337, 0xac00, 0xbd3a, 0xe5ce, 0x9fcd, 0x0, 0x0);
        gbc.writeMem(0x8564, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb337, gbc.sp());
        EXPECT(0x8566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8564));
        EXPECT(0xb4, gbc.readMem(0x8565));
        // CB B4 0210
        gbc.setState(0x9167, 0xbc5d, 0x9950, 0x1ce3, 0x7c79, 0xe172, 0x0, 0x0);
        gbc.writeMem(0x9167, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xbc5d, gbc.sp());
        EXPECT(0x9169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9167));
        EXPECT(0xb4, gbc.readMem(0x9168));
        // CB B4 0211
        gbc.setState(0xe657, 0x14eb, 0xecc0, 0x4feb, 0x1ba0, 0xd90c, 0x0, 0x1);
        gbc.writeMem(0xe657, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x14eb, gbc.sp());
        EXPECT(0xe659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe657));
        EXPECT(0xb4, gbc.readMem(0xe658));
        // CB B4 0212
        gbc.setState(0x39d3, 0x2f16, 0x3090, 0xf59d, 0xf442, 0xbd17, 0x1, 0x0);
        gbc.writeMem(0x39d3, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2f16, gbc.sp());
        EXPECT(0x39d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0213
        gbc.setState(0x5d2c, 0xa6a4, 0x3620, 0x86fc, 0x4ab7, 0xf094, 0x0, 0x0);
        gbc.writeMem(0x5d2c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa6a4, gbc.sp());
        EXPECT(0x5d2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0214
        gbc.setState(0xe5a8, 0x4a66, 0x9e90, 0x8824, 0xb2de, 0xe5da, 0x0, 0x0);
        gbc.writeMem(0xe5a8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4a66, gbc.sp());
        EXPECT(0xe5aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a8));
        EXPECT(0xb4, gbc.readMem(0xe5a9));
        // CB B4 0215
        gbc.setState(0x293d, 0x7e16, 0x7330, 0x43bd, 0xe2d9, 0xe285, 0x1, 0x1);
        gbc.writeMem(0x293d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7e16, gbc.sp());
        EXPECT(0x293f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0216
        gbc.setState(0xd53, 0x5ebb, 0xe5c0, 0xb7b1, 0x82e7, 0x3011, 0x1, 0x0);
        gbc.writeMem(0xd53, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5ebb, gbc.sp());
        EXPECT(0xd55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0217
        gbc.setState(0xeacd, 0xf36, 0x1820, 0x563a, 0xd85f, 0x75dc, 0x1, 0x1);
        gbc.writeMem(0xeacd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf36, gbc.sp());
        EXPECT(0xeacf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeacd));
        EXPECT(0xb4, gbc.readMem(0xeace));
        // CB B4 0218
        gbc.setState(0x8aa0, 0x485f, 0x9a0, 0xe4af, 0xc033, 0xf6a9, 0x0, 0x0);
        gbc.writeMem(0x8aa0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x485f, gbc.sp());
        EXPECT(0x8aa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aa0));
        EXPECT(0xb4, gbc.readMem(0x8aa1));
        // CB B4 0219
        gbc.setState(0xba95, 0x5bf, 0x3f40, 0x11ed, 0xb70d, 0xbb24, 0x0, 0x0);
        gbc.writeMem(0xba95, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5bf, gbc.sp());
        EXPECT(0xba97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba95));
        EXPECT(0xb4, gbc.readMem(0xba96));
        // CB B4 021A
        gbc.setState(0x97b8, 0x94f4, 0x5960, 0x38b7, 0xc91, 0x4040, 0x1, 0x1);
        gbc.writeMem(0x97b8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x94f4, gbc.sp());
        EXPECT(0x97ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97b8));
        EXPECT(0xb4, gbc.readMem(0x97b9));
        // CB B4 021B
        gbc.setState(0xcdbc, 0x9ba6, 0xf1d0, 0x1965, 0xdc73, 0x1d70, 0x0, 0x1);
        gbc.writeMem(0xcdbc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9ba6, gbc.sp());
        EXPECT(0xcdbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdbc));
        EXPECT(0xb4, gbc.readMem(0xcdbd));
        // CB B4 021C
        gbc.setState(0x7e94, 0x7934, 0xb660, 0x1799, 0xc239, 0x423f, 0x1, 0x0);
        gbc.writeMem(0x7e94, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7934, gbc.sp());
        EXPECT(0x7e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 021D
        gbc.setState(0xa3de, 0x3c41, 0xf6a0, 0x8875, 0xa563, 0x3903, 0x1, 0x1);
        gbc.writeMem(0xa3de, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3c41, gbc.sp());
        EXPECT(0xa3e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3de));
        EXPECT(0xb4, gbc.readMem(0xa3df));
        // CB B4 021E
        gbc.setState(0xbb37, 0x2b12, 0x1960, 0xcd23, 0xe56, 0xf971, 0x0, 0x1);
        gbc.writeMem(0xbb37, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2b12, gbc.sp());
        EXPECT(0xbb39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb37));
        EXPECT(0xb4, gbc.readMem(0xbb38));
        // CB B4 021F
        gbc.setState(0xb740, 0xe871, 0x8260, 0xcfa1, 0xcc4f, 0xc0ac, 0x0, 0x0);
        gbc.writeMem(0xb740, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe871, gbc.sp());
        EXPECT(0xb742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb740));
        EXPECT(0xb4, gbc.readMem(0xb741));
        // CB B4 0220
        gbc.setState(0xdb19, 0x2516, 0x3040, 0x11a3, 0xb5a8, 0xbf7d, 0x1, 0x0);
        gbc.writeMem(0xdb19, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2516, gbc.sp());
        EXPECT(0xdb1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb19));
        EXPECT(0xb4, gbc.readMem(0xdb1a));
        // CB B4 0221
        gbc.setState(0xc9c1, 0x7b0b, 0xe90, 0xfb3c, 0xeeb6, 0x40e0, 0x0, 0x0);
        gbc.writeMem(0xc9c1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7b0b, gbc.sp());
        EXPECT(0xc9c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c1));
        EXPECT(0xb4, gbc.readMem(0xc9c2));
        // CB B4 0222
        gbc.setState(0x58dc, 0xb58a, 0x7840, 0xc666, 0x5971, 0x6664, 0x1, 0x1);
        gbc.writeMem(0x58dc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb58a, gbc.sp());
        EXPECT(0x58de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0223
        gbc.setState(0x3dca, 0xfe3f, 0xbcb0, 0xfdae, 0xb5d7, 0x72f, 0x1, 0x1);
        gbc.writeMem(0x3dca, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfe3f, gbc.sp());
        EXPECT(0x3dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0224
        gbc.setState(0x463c, 0x34dc, 0x55e0, 0x57d7, 0x59b9, 0x5bb6, 0x0, 0x1);
        gbc.writeMem(0x463c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x34dc, gbc.sp());
        EXPECT(0x463e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0225
        gbc.setState(0x3287, 0x4a67, 0xbf10, 0x2775, 0xbd19, 0x8404, 0x0, 0x1);
        gbc.writeMem(0x3287, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4a67, gbc.sp());
        EXPECT(0x3289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0226
        gbc.setState(0xa080, 0xc09b, 0xacd0, 0xab96, 0x4c24, 0x2eec, 0x0, 0x1);
        gbc.writeMem(0xa080, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc09b, gbc.sp());
        EXPECT(0xa082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa080));
        EXPECT(0xb4, gbc.readMem(0xa081));
        // CB B4 0227
        gbc.setState(0x9ffb, 0x163a, 0x1810, 0xd1b6, 0xe8ce, 0xfeb9, 0x0, 0x0);
        gbc.writeMem(0x9ffb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x163a, gbc.sp());
        EXPECT(0x9ffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ffb));
        EXPECT(0xb4, gbc.readMem(0x9ffc));
        // CB B4 0228
        gbc.setState(0xb7f8, 0x4fb8, 0x8110, 0x391b, 0xc07a, 0x9323, 0x1, 0x1);
        gbc.writeMem(0xb7f8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4fb8, gbc.sp());
        EXPECT(0xb7fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7f8));
        EXPECT(0xb4, gbc.readMem(0xb7f9));
        // CB B4 0229
        gbc.setState(0xb0d9, 0x306, 0x3420, 0xdca7, 0x8d13, 0x6e15, 0x1, 0x0);
        gbc.writeMem(0xb0d9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x306, gbc.sp());
        EXPECT(0xb0db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0d9));
        EXPECT(0xb4, gbc.readMem(0xb0da));
        // CB B4 022A
        gbc.setState(0x7f1, 0x50e1, 0x1bf0, 0xb988, 0x110e, 0xfb2, 0x0, 0x0);
        gbc.writeMem(0x7f1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x50e1, gbc.sp());
        EXPECT(0x7f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 022B
        gbc.setState(0xed1a, 0xcb14, 0x20d0, 0x22e, 0x471e, 0xf69e, 0x0, 0x0);
        gbc.writeMem(0xed1a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xcb14, gbc.sp());
        EXPECT(0xed1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed1a));
        EXPECT(0xb4, gbc.readMem(0xed1b));
        // CB B4 022C
        gbc.setState(0x4c0, 0x93f0, 0x96d0, 0x493a, 0xa7d, 0x43df, 0x1, 0x1);
        gbc.writeMem(0x4c0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x93f0, gbc.sp());
        EXPECT(0x4c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 022D
        gbc.setState(0x6e76, 0x74a5, 0x1f0, 0xd77a, 0xe13d, 0x22b8, 0x1, 0x0);
        gbc.writeMem(0x6e76, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x74a5, gbc.sp());
        EXPECT(0x6e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 022E
        gbc.setState(0xe514, 0x73ce, 0x92b0, 0xcfb9, 0x442, 0xe7fe, 0x0, 0x1);
        gbc.writeMem(0xe514, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x73ce, gbc.sp());
        EXPECT(0xe516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe514));
        EXPECT(0xb4, gbc.readMem(0xe515));
        // CB B4 022F
        gbc.setState(0x2017, 0xba21, 0x90b0, 0x1a59, 0xc49c, 0x3ceb, 0x0, 0x0);
        gbc.writeMem(0x2017, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xba21, gbc.sp());
        EXPECT(0x2019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0230
        gbc.setState(0x5e44, 0xf994, 0xde40, 0xbbb4, 0xd077, 0xbfb7, 0x1, 0x0);
        gbc.writeMem(0x5e44, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf994, gbc.sp());
        EXPECT(0x5e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0231
        gbc.setState(0x61a5, 0xe732, 0xeb10, 0xe154, 0x6954, 0x3328, 0x0, 0x0);
        gbc.writeMem(0x61a5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe732, gbc.sp());
        EXPECT(0x61a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0232
        gbc.setState(0x76ca, 0x1775, 0xa550, 0xcd9b, 0x7e7f, 0x6668, 0x0, 0x0);
        gbc.writeMem(0x76ca, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1775, gbc.sp());
        EXPECT(0x76cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0234
        gbc.setState(0x4d02, 0x84c9, 0x3560, 0xf912, 0xfa23, 0x8113, 0x0, 0x1);
        gbc.writeMem(0x4d02, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x84c9, gbc.sp());
        EXPECT(0x4d04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0235
        gbc.setState(0x7ab0, 0xf51d, 0x5db0, 0x5751, 0xe5b1, 0x3420, 0x1, 0x1);
        gbc.writeMem(0x7ab0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf51d, gbc.sp());
        EXPECT(0x7ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0236
        gbc.setState(0x4fb2, 0x5646, 0x4b0, 0x7b56, 0x75bd, 0x1d1, 0x1, 0x1);
        gbc.writeMem(0x4fb2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5646, gbc.sp());
        EXPECT(0x4fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0237
        gbc.setState(0xde2b, 0x227b, 0x68b0, 0xa0ca, 0x3c7b, 0xb4c2, 0x1, 0x1);
        gbc.writeMem(0xde2b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x227b, gbc.sp());
        EXPECT(0xde2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde2b));
        EXPECT(0xb4, gbc.readMem(0xde2c));
        // CB B4 0238
        gbc.setState(0x4c10, 0x4a37, 0xced0, 0xdf40, 0x4c40, 0x776c, 0x1, 0x1);
        gbc.writeMem(0x4c10, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4a37, gbc.sp());
        EXPECT(0x4c12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 023A
        gbc.setState(0xc6ce, 0x9b2f, 0x9ba0, 0xdd3d, 0x3105, 0x9574, 0x0, 0x1);
        gbc.writeMem(0xc6ce, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9b2f, gbc.sp());
        EXPECT(0xc6d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ce));
        EXPECT(0xb4, gbc.readMem(0xc6cf));
        // CB B4 023B
        gbc.setState(0x443a, 0xaa64, 0x9650, 0xa52c, 0xc1ab, 0x9b97, 0x1, 0x1);
        gbc.writeMem(0x443a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xaa64, gbc.sp());
        EXPECT(0x443c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 023C
        gbc.setState(0x1d91, 0x79d5, 0xe9e0, 0xe823, 0xf30e, 0x63b, 0x1, 0x0);
        gbc.writeMem(0x1d91, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x79d5, gbc.sp());
        EXPECT(0x1d93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 023D
        gbc.setState(0x28cd, 0xdaa2, 0xd670, 0x4a30, 0x1c64, 0x4eec, 0x1, 0x1);
        gbc.writeMem(0x28cd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdaa2, gbc.sp());
        EXPECT(0x28cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 023E
        gbc.setState(0xe5c4, 0xa515, 0x3a00, 0x85e1, 0x941c, 0xc282, 0x0, 0x0);
        gbc.writeMem(0xe5c4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa515, gbc.sp());
        EXPECT(0xe5c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5c4));
        EXPECT(0xb4, gbc.readMem(0xe5c5));
        // CB B4 023F
        gbc.setState(0xcaea, 0x251, 0x8630, 0xe7ba, 0xdaa9, 0xe6d0, 0x1, 0x1);
        gbc.writeMem(0xcaea, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x251, gbc.sp());
        EXPECT(0xcaec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaea));
        EXPECT(0xb4, gbc.readMem(0xcaeb));
        // CB B4 0240
        gbc.setState(0x7870, 0xb312, 0x9a30, 0xebda, 0xdb2c, 0x2ed3, 0x1, 0x1);
        gbc.writeMem(0x7870, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb312, gbc.sp());
        EXPECT(0x7872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0241
        gbc.setState(0x3d27, 0x2910, 0x6090, 0xcd78, 0x7710, 0xfbee, 0x1, 0x1);
        gbc.writeMem(0x3d27, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2910, gbc.sp());
        EXPECT(0x3d29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0242
        gbc.setState(0xe845, 0x13bb, 0x8f50, 0xc77d, 0x4512, 0x7742, 0x0, 0x1);
        gbc.writeMem(0xe845, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x13bb, gbc.sp());
        EXPECT(0xe847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe845));
        EXPECT(0xb4, gbc.readMem(0xe846));
        // CB B4 0243
        gbc.setState(0x744, 0xebaf, 0xb560, 0x5f9a, 0x6aac, 0xa5c3, 0x1, 0x0);
        gbc.writeMem(0x744, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xebaf, gbc.sp());
        EXPECT(0x746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0244
        gbc.setState(0xa253, 0x7d23, 0xfe00, 0xd4b5, 0xb3d, 0x12, 0x1, 0x1);
        gbc.writeMem(0xa253, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7d23, gbc.sp());
        EXPECT(0xa255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa253));
        EXPECT(0xb4, gbc.readMem(0xa254));
        // CB B4 0245
        gbc.setState(0x9afb, 0xf5ef, 0x2a40, 0x82ac, 0xe076, 0x7896, 0x0, 0x0);
        gbc.writeMem(0x9afb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf5ef, gbc.sp());
        EXPECT(0x9afd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9afb));
        EXPECT(0xb4, gbc.readMem(0x9afc));
        // CB B4 0247
        gbc.setState(0xc875, 0x24d7, 0xe5e0, 0xfce, 0x6f83, 0x7152, 0x0, 0x0);
        gbc.writeMem(0xc875, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x24d7, gbc.sp());
        EXPECT(0xc877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc875));
        EXPECT(0xb4, gbc.readMem(0xc876));
        // CB B4 0248
        gbc.setState(0xd2a6, 0xe1c4, 0xa190, 0x6b8b, 0xf39, 0xdaa4, 0x0, 0x1);
        gbc.writeMem(0xd2a6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe1c4, gbc.sp());
        EXPECT(0xd2a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2a6));
        EXPECT(0xb4, gbc.readMem(0xd2a7));
        // CB B4 0249
        gbc.setState(0x12fc, 0x3942, 0xd8c0, 0x8cd, 0x91a3, 0xa4cf, 0x0, 0x0);
        gbc.writeMem(0x12fc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3942, gbc.sp());
        EXPECT(0x12fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 024A
        gbc.setState(0x4060, 0xcffc, 0x3c00, 0x61b, 0xcf04, 0x10cf, 0x1, 0x0);
        gbc.writeMem(0x4060, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xcffc, gbc.sp());
        EXPECT(0x4062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 024B
        gbc.setState(0xa725, 0xf25, 0x87c0, 0x738c, 0xbb2d, 0xd32b, 0x0, 0x1);
        gbc.writeMem(0xa725, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf25, gbc.sp());
        EXPECT(0xa727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa725));
        EXPECT(0xb4, gbc.readMem(0xa726));
        // CB B4 024C
        gbc.setState(0x6ccb, 0x7def, 0x7f0, 0xc23d, 0xd9d2, 0xaf7d, 0x0, 0x1);
        gbc.writeMem(0x6ccb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7def, gbc.sp());
        EXPECT(0x6ccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 024D
        gbc.setState(0x2ec8, 0xc6f7, 0x3560, 0x2644, 0x51a0, 0x6fc4, 0x1, 0x1);
        gbc.writeMem(0x2ec8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc6f7, gbc.sp());
        EXPECT(0x2eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 024E
        gbc.setState(0x9353, 0x6beb, 0x76e0, 0x7914, 0x6e0a, 0xc6c9, 0x0, 0x1);
        gbc.writeMem(0x9353, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6beb, gbc.sp());
        EXPECT(0x9355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9353));
        EXPECT(0xb4, gbc.readMem(0x9354));
        // CB B4 024F
        gbc.setState(0x3a85, 0x282b, 0x4300, 0x65c1, 0x9671, 0xcd14, 0x1, 0x0);
        gbc.writeMem(0x3a85, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x282b, gbc.sp());
        EXPECT(0x3a87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0250
        gbc.setState(0xe026, 0xc50c, 0x6240, 0xb916, 0x6239, 0x4bcd, 0x0, 0x1);
        gbc.writeMem(0xe026, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc50c, gbc.sp());
        EXPECT(0xe028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe026));
        EXPECT(0xb4, gbc.readMem(0xe027));
        // CB B4 0251
        gbc.setState(0xe090, 0x7bd5, 0x4dd0, 0xc065, 0x7224, 0x5aad, 0x1, 0x0);
        gbc.writeMem(0xe090, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7bd5, gbc.sp());
        EXPECT(0xe092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe090));
        EXPECT(0xb4, gbc.readMem(0xe091));
        // CB B4 0252
        gbc.setState(0x7d76, 0x66e2, 0x5e80, 0x5feb, 0x8f0e, 0xa0f1, 0x1, 0x0);
        gbc.writeMem(0x7d76, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x66e2, gbc.sp());
        EXPECT(0x7d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0253
        gbc.setState(0x93c5, 0xdc5c, 0x1340, 0xb4d8, 0xbbaa, 0xc466, 0x1, 0x0);
        gbc.writeMem(0x93c5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xdc5c, gbc.sp());
        EXPECT(0x93c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93c5));
        EXPECT(0xb4, gbc.readMem(0x93c6));
        // CB B4 0254
        gbc.setState(0x41a2, 0x6c9c, 0x88f0, 0x9f49, 0x66a8, 0x3b5, 0x1, 0x0);
        gbc.writeMem(0x41a2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6c9c, gbc.sp());
        EXPECT(0x41a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0255
        gbc.setState(0x2119, 0xfccf, 0x55e0, 0x6d5a, 0x9d64, 0x5329, 0x0, 0x1);
        gbc.writeMem(0x2119, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfccf, gbc.sp());
        EXPECT(0x211b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0256
        gbc.setState(0x649d, 0x9950, 0x20d0, 0xc497, 0xdbb5, 0x6aa0, 0x0, 0x0);
        gbc.writeMem(0x649d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9950, gbc.sp());
        EXPECT(0x649f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0257
        gbc.setState(0xe0a8, 0xad31, 0x5610, 0xb712, 0x5ae0, 0x749a, 0x0, 0x1);
        gbc.writeMem(0xe0a8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xad31, gbc.sp());
        EXPECT(0xe0aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0a8));
        EXPECT(0xb4, gbc.readMem(0xe0a9));
        // CB B4 0259
        gbc.setState(0xa3e6, 0x7296, 0xc680, 0x8ad3, 0xcdb4, 0xaca3, 0x0, 0x0);
        gbc.writeMem(0xa3e6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7296, gbc.sp());
        EXPECT(0xa3e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3e6));
        EXPECT(0xb4, gbc.readMem(0xa3e7));
        // CB B4 025A
        gbc.setState(0x8714, 0x1af0, 0xca50, 0x9f85, 0x7c4d, 0x6a80, 0x0, 0x0);
        gbc.writeMem(0x8714, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1af0, gbc.sp());
        EXPECT(0x8716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8714));
        EXPECT(0xb4, gbc.readMem(0x8715));
        // CB B4 025B
        gbc.setState(0x3c56, 0x86c, 0x5240, 0x21b, 0xfa00, 0x74db, 0x0, 0x0);
        gbc.writeMem(0x3c56, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x86c, gbc.sp());
        EXPECT(0x3c58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 025C
        gbc.setState(0xbf92, 0xf3b9, 0x3fe0, 0x2401, 0x745, 0xcf91, 0x1, 0x0);
        gbc.writeMem(0xbf92, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf3b9, gbc.sp());
        EXPECT(0xbf94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf92));
        EXPECT(0xb4, gbc.readMem(0xbf93));
        // CB B4 025F
        gbc.setState(0xbfbc, 0xd496, 0x95d0, 0xe765, 0xe9ac, 0xa3c1, 0x0, 0x0);
        gbc.writeMem(0xbfbc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd496, gbc.sp());
        EXPECT(0xbfbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfbc));
        EXPECT(0xb4, gbc.readMem(0xbfbd));
        // CB B4 0260
        gbc.setState(0x6cf5, 0xca68, 0xe840, 0x450c, 0x33eb, 0xeaee, 0x1, 0x1);
        gbc.writeMem(0x6cf5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xca68, gbc.sp());
        EXPECT(0x6cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0261
        gbc.setState(0x5da4, 0xbb79, 0x6a10, 0xb591, 0xbfd8, 0x130b, 0x1, 0x0);
        gbc.writeMem(0x5da4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbb79, gbc.sp());
        EXPECT(0x5da6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0262
        gbc.setState(0x15cf, 0x9e04, 0xed10, 0xb35d, 0x7ed2, 0x7e05, 0x0, 0x1);
        gbc.writeMem(0x15cf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9e04, gbc.sp());
        EXPECT(0x15d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0263
        gbc.setState(0x8616, 0xf547, 0x9a80, 0x5573, 0xc44d, 0xdb99, 0x1, 0x1);
        gbc.writeMem(0x8616, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf547, gbc.sp());
        EXPECT(0x8618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8616));
        EXPECT(0xb4, gbc.readMem(0x8617));
        // CB B4 0264
        gbc.setState(0x4004, 0xbbbf, 0x5400, 0xe02d, 0x3c83, 0x4e21, 0x0, 0x0);
        gbc.writeMem(0x4004, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbbbf, gbc.sp());
        EXPECT(0x4006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0265
        gbc.setState(0x840b, 0x6bc, 0x7f60, 0x42c3, 0x3d41, 0x858, 0x0, 0x1);
        gbc.writeMem(0x840b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6bc, gbc.sp());
        EXPECT(0x840d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x840b));
        EXPECT(0xb4, gbc.readMem(0x840c));
        // CB B4 0266
        gbc.setState(0xbf81, 0x990c, 0xcaf0, 0x6cc, 0xdbbf, 0x8480, 0x0, 0x1);
        gbc.writeMem(0xbf81, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x990c, gbc.sp());
        EXPECT(0xbf83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf81));
        EXPECT(0xb4, gbc.readMem(0xbf82));
        // CB B4 0267
        gbc.setState(0x2920, 0x8f2d, 0x16a0, 0x313c, 0x39c8, 0x8dc4, 0x1, 0x1);
        gbc.writeMem(0x2920, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8f2d, gbc.sp());
        EXPECT(0x2922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0268
        gbc.setState(0xb85e, 0xdacc, 0xf980, 0xf23a, 0x1ec3, 0x2052, 0x1, 0x1);
        gbc.writeMem(0xb85e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdacc, gbc.sp());
        EXPECT(0xb860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb85e));
        EXPECT(0xb4, gbc.readMem(0xb85f));
        // CB B4 0269
        gbc.setState(0xf7f, 0xc0ef, 0xc4c0, 0xe8b3, 0xd1c4, 0xe1c2, 0x0, 0x1);
        gbc.writeMem(0xf7f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc0ef, gbc.sp());
        EXPECT(0xf81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 026A
        gbc.setState(0x509b, 0x2182, 0x6d10, 0x94a3, 0xfab0, 0x7c97, 0x1, 0x1);
        gbc.writeMem(0x509b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2182, gbc.sp());
        EXPECT(0x509d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 026B
        gbc.setState(0x1dc1, 0xb544, 0x8040, 0x377a, 0xb878, 0x9db, 0x0, 0x0);
        gbc.writeMem(0x1dc1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb544, gbc.sp());
        EXPECT(0x1dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 026D
        gbc.setState(0x77ea, 0x3ad4, 0xd480, 0x4bb4, 0x4b59, 0x712b, 0x0, 0x1);
        gbc.writeMem(0x77ea, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3ad4, gbc.sp());
        EXPECT(0x77ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 026E
        gbc.setState(0x7db4, 0x41cc, 0xe110, 0x5919, 0x8232, 0xf5dd, 0x0, 0x1);
        gbc.writeMem(0x7db4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x41cc, gbc.sp());
        EXPECT(0x7db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 026F
        gbc.setState(0x5aa4, 0x493b, 0x220, 0x46e7, 0x54f4, 0x1362, 0x0, 0x1);
        gbc.writeMem(0x5aa4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x493b, gbc.sp());
        EXPECT(0x5aa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0270
        gbc.setState(0xd11d, 0x3d38, 0x4d30, 0x13bd, 0xaec5, 0x9f5c, 0x0, 0x1);
        gbc.writeMem(0xd11d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3d38, gbc.sp());
        EXPECT(0xd11f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd11d));
        EXPECT(0xb4, gbc.readMem(0xd11e));
        // CB B4 0273
        gbc.setState(0x2006, 0xb8cf, 0x3260, 0xf562, 0x2ccf, 0x671a, 0x0, 0x1);
        gbc.writeMem(0x2006, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb8cf, gbc.sp());
        EXPECT(0x2008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0274
        gbc.setState(0xc364, 0xdc0a, 0xd070, 0xf550, 0x758f, 0x1748, 0x0, 0x1);
        gbc.writeMem(0xc364, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdc0a, gbc.sp());
        EXPECT(0xc366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc364));
        EXPECT(0xb4, gbc.readMem(0xc365));
        // CB B4 0275
        gbc.setState(0x732f, 0x645e, 0x5f90, 0x1f7d, 0xb5c0, 0x5c4b, 0x0, 0x0);
        gbc.writeMem(0x732f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x645e, gbc.sp());
        EXPECT(0x7331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0276
        gbc.setState(0x987b, 0x850d, 0x11e0, 0x9cd4, 0xfa1a, 0x5769, 0x0, 0x1);
        gbc.writeMem(0x987b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x850d, gbc.sp());
        EXPECT(0x987d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x987b));
        EXPECT(0xb4, gbc.readMem(0x987c));
        // CB B4 0277
        gbc.setState(0x36af, 0x8950, 0x5f70, 0xf132, 0x4074, 0xc452, 0x1, 0x0);
        gbc.writeMem(0x36af, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8950, gbc.sp());
        EXPECT(0x36b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0278
        gbc.setState(0x565b, 0xc646, 0xebd0, 0xa76d, 0xc99, 0xc871, 0x0, 0x1);
        gbc.writeMem(0x565b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc646, gbc.sp());
        EXPECT(0x565d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0279
        gbc.setState(0x9a16, 0x2562, 0x5340, 0xc401, 0x65b9, 0xe907, 0x0, 0x0);
        gbc.writeMem(0x9a16, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2562, gbc.sp());
        EXPECT(0x9a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a16));
        EXPECT(0xb4, gbc.readMem(0x9a17));
        // CB B4 027A
        gbc.setState(0x3626, 0xb33e, 0x8900, 0xba6, 0xaf11, 0x519b, 0x0, 0x1);
        gbc.writeMem(0x3626, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb33e, gbc.sp());
        EXPECT(0x3628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 027B
        gbc.setState(0x3a83, 0x1fdc, 0x3110, 0x1c9d, 0x7f89, 0x21fb, 0x1, 0x1);
        gbc.writeMem(0x3a83, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1fdc, gbc.sp());
        EXPECT(0x3a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 027C
        gbc.setState(0xdbec, 0x3c7e, 0xe710, 0xcb48, 0x5b73, 0x9cbb, 0x1, 0x0);
        gbc.writeMem(0xdbec, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3c7e, gbc.sp());
        EXPECT(0xdbee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbec));
        EXPECT(0xb4, gbc.readMem(0xdbed));
        // CB B4 027D
        gbc.setState(0x5950, 0xd0de, 0xa240, 0xefc5, 0xd9fc, 0x655c, 0x1, 0x1);
        gbc.writeMem(0x5950, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd0de, gbc.sp());
        EXPECT(0x5952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 027E
        gbc.setState(0x2194, 0xee52, 0xaec0, 0x84f5, 0x1995, 0x9cde, 0x1, 0x1);
        gbc.writeMem(0x2194, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xee52, gbc.sp());
        EXPECT(0x2196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 027F
        gbc.setState(0x6d3d, 0x9b19, 0x5730, 0xb306, 0x1570, 0x944b, 0x1, 0x1);
        gbc.writeMem(0x6d3d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9b19, gbc.sp());
        EXPECT(0x6d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0280
        gbc.setState(0x42b4, 0xc195, 0xb3c0, 0xd603, 0xc237, 0x4326, 0x1, 0x0);
        gbc.writeMem(0x42b4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc195, gbc.sp());
        EXPECT(0x42b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0281
        gbc.setState(0xbb32, 0x28d3, 0x3620, 0x5f5a, 0x894d, 0xff8c, 0x1, 0x0);
        gbc.writeMem(0xbb32, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x28d3, gbc.sp());
        EXPECT(0xbb34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb32));
        EXPECT(0xb4, gbc.readMem(0xbb33));
        // CB B4 0282
        gbc.setState(0x7641, 0x6501, 0xeac0, 0x3aa4, 0x17a0, 0x8775, 0x1, 0x1);
        gbc.writeMem(0x7641, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6501, gbc.sp());
        EXPECT(0x7643, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0283
        gbc.setState(0xe38c, 0xf6d, 0xbf00, 0xcfa9, 0xa221, 0xd6a9, 0x1, 0x0);
        gbc.writeMem(0xe38c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf6d, gbc.sp());
        EXPECT(0xe38e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe38c));
        EXPECT(0xb4, gbc.readMem(0xe38d));
        // CB B4 0284
        gbc.setState(0xcc86, 0xbea8, 0x5fe0, 0x833a, 0x209b, 0x7139, 0x0, 0x0);
        gbc.writeMem(0xcc86, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbea8, gbc.sp());
        EXPECT(0xcc88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc86));
        EXPECT(0xb4, gbc.readMem(0xcc87));
        // CB B4 0285
        gbc.setState(0x6800, 0x7716, 0xdff0, 0x6c23, 0x9aaa, 0x262e, 0x1, 0x1);
        gbc.writeMem(0x6800, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7716, gbc.sp());
        EXPECT(0x6802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0286
        gbc.setState(0x7b1c, 0x353f, 0x9c40, 0xabbb, 0x2451, 0x4d4f, 0x0, 0x0);
        gbc.writeMem(0x7b1c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x353f, gbc.sp());
        EXPECT(0x7b1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0287
        gbc.setState(0xe85d, 0xefac, 0x24e0, 0xc1b4, 0x7a03, 0x9a54, 0x0, 0x1);
        gbc.writeMem(0xe85d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xefac, gbc.sp());
        EXPECT(0xe85f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe85d));
        EXPECT(0xb4, gbc.readMem(0xe85e));
        // CB B4 0288
        gbc.setState(0x5a96, 0xc231, 0xadd0, 0x814b, 0x67c7, 0x65, 0x0, 0x0);
        gbc.writeMem(0x5a96, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc231, gbc.sp());
        EXPECT(0x5a98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0289
        gbc.setState(0xa34c, 0x31a, 0x210, 0xe65, 0xb040, 0x7249, 0x1, 0x0);
        gbc.writeMem(0xa34c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x31a, gbc.sp());
        EXPECT(0xa34e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa34c));
        EXPECT(0xb4, gbc.readMem(0xa34d));
        // CB B4 028A
        gbc.setState(0xf0, 0x2f78, 0xa720, 0xab56, 0xd249, 0x8a36, 0x1, 0x1);
        gbc.writeMem(0xf0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2f78, gbc.sp());
        EXPECT(0xf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 028B
        gbc.setState(0xd15f, 0x7176, 0x4b30, 0xa9ab, 0xd315, 0x427d, 0x1, 0x1);
        gbc.writeMem(0xd15f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7176, gbc.sp());
        EXPECT(0xd161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd15f));
        EXPECT(0xb4, gbc.readMem(0xd160));
        // CB B4 028C
        gbc.setState(0x93dc, 0x6f56, 0x94e0, 0x3dac, 0xef29, 0x675e, 0x0, 0x0);
        gbc.writeMem(0x93dc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6f56, gbc.sp());
        EXPECT(0x93de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93dc));
        EXPECT(0xb4, gbc.readMem(0x93dd));
        // CB B4 028D
        gbc.setState(0x36b, 0x6e2d, 0xefb0, 0xea82, 0x19ca, 0x5ff5, 0x1, 0x0);
        gbc.writeMem(0x36b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6e2d, gbc.sp());
        EXPECT(0x36d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 028E
        gbc.setState(0x4347, 0xcc74, 0xb390, 0xe65, 0x58ee, 0xa4e1, 0x0, 0x0);
        gbc.writeMem(0x4347, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xcc74, gbc.sp());
        EXPECT(0x4349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 028F
        gbc.setState(0xdbf4, 0xd2de, 0x1170, 0xd516, 0x70f3, 0xfa3c, 0x1, 0x0);
        gbc.writeMem(0xdbf4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd2de, gbc.sp());
        EXPECT(0xdbf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf4));
        EXPECT(0xb4, gbc.readMem(0xdbf5));
        // CB B4 0290
        gbc.setState(0xd9c7, 0xc522, 0x4400, 0x9990, 0xd406, 0xc93c, 0x0, 0x1);
        gbc.writeMem(0xd9c7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc522, gbc.sp());
        EXPECT(0xd9c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c7));
        EXPECT(0xb4, gbc.readMem(0xd9c8));
        // CB B4 0292
        gbc.setState(0x4760, 0x3df2, 0x2e40, 0x2f5e, 0x3eac, 0x9c03, 0x1, 0x0);
        gbc.writeMem(0x4760, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3df2, gbc.sp());
        EXPECT(0x4762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0293
        gbc.setState(0xabec, 0xc4f7, 0x100, 0xb160, 0xc4dd, 0x1b51, 0x0, 0x0);
        gbc.writeMem(0xabec, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc4f7, gbc.sp());
        EXPECT(0xabee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabec));
        EXPECT(0xb4, gbc.readMem(0xabed));
        // CB B4 0294
        gbc.setState(0x67ea, 0x309a, 0x1c70, 0xecd, 0x166f, 0x7860, 0x0, 0x0);
        gbc.writeMem(0x67ea, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x309a, gbc.sp());
        EXPECT(0x67ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0295
        gbc.setState(0x5b20, 0x2f5c, 0xaa60, 0x2351, 0xe2ad, 0x6773, 0x1, 0x1);
        gbc.writeMem(0x5b20, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2f5c, gbc.sp());
        EXPECT(0x5b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0296
        gbc.setState(0x50ec, 0xc3e4, 0x5f90, 0x2922, 0x6c37, 0xa4e5, 0x1, 0x0);
        gbc.writeMem(0x50ec, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc3e4, gbc.sp());
        EXPECT(0x50ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0297
        gbc.setState(0x3f48, 0x1f0c, 0x3340, 0xd22, 0x5d5d, 0xf6c2, 0x0, 0x1);
        gbc.writeMem(0x3f48, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1f0c, gbc.sp());
        EXPECT(0x3f4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0298
        gbc.setState(0x7351, 0x91a3, 0x84f0, 0xcf7a, 0x81f, 0x7f9f, 0x1, 0x1);
        gbc.writeMem(0x7351, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x91a3, gbc.sp());
        EXPECT(0x7353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0299
        gbc.setState(0x875c, 0x13a1, 0xce30, 0x762, 0xac74, 0x3a80, 0x1, 0x1);
        gbc.writeMem(0x875c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x13a1, gbc.sp());
        EXPECT(0x875e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x875c));
        EXPECT(0xb4, gbc.readMem(0x875d));
        // CB B4 029A
        gbc.setState(0xd277, 0x420f, 0xde80, 0x9603, 0x8577, 0x8707, 0x1, 0x0);
        gbc.writeMem(0xd277, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x420f, gbc.sp());
        EXPECT(0xd279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd277));
        EXPECT(0xb4, gbc.readMem(0xd278));
        // CB B4 029B
        gbc.setState(0x64e1, 0x4f42, 0x9a60, 0xaee, 0xcaed, 0x5e7d, 0x0, 0x0);
        gbc.writeMem(0x64e1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4f42, gbc.sp());
        EXPECT(0x64e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 029C
        gbc.setState(0x3512, 0xd259, 0x9a80, 0x9346, 0xfe5d, 0x5375, 0x1, 0x0);
        gbc.writeMem(0x3512, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd259, gbc.sp());
        EXPECT(0x3514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 029D
        gbc.setState(0xe35f, 0xab44, 0x19f0, 0xc87a, 0xc496, 0x6b67, 0x1, 0x0);
        gbc.writeMem(0xe35f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xab44, gbc.sp());
        EXPECT(0xe361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe35f));
        EXPECT(0xb4, gbc.readMem(0xe360));
        // CB B4 029E
        gbc.setState(0x1512, 0x73fe, 0xce90, 0xa09b, 0xd8e3, 0xbb33, 0x1, 0x1);
        gbc.writeMem(0x1512, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x73fe, gbc.sp());
        EXPECT(0x1514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 029F
        gbc.setState(0x894e, 0x7965, 0x2420, 0x8314, 0xe84c, 0xdf6f, 0x0, 0x0);
        gbc.writeMem(0x894e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7965, gbc.sp());
        EXPECT(0x8950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x894e));
        EXPECT(0xb4, gbc.readMem(0x894f));
        // CB B4 02A0
        gbc.setState(0x71e4, 0xb4e8, 0x310, 0xd5d5, 0x6c69, 0xe40c, 0x0, 0x1);
        gbc.writeMem(0x71e4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb4e8, gbc.sp());
        EXPECT(0x71e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02A1
        gbc.setState(0xe4c, 0xdcb9, 0x97d0, 0xb951, 0xeff9, 0x599f, 0x0, 0x1);
        gbc.writeMem(0xe4c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xdcb9, gbc.sp());
        EXPECT(0xe4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02A2
        gbc.setState(0xb4ae, 0xfabd, 0x5d50, 0x6299, 0xdc50, 0x89c0, 0x1, 0x1);
        gbc.writeMem(0xb4ae, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfabd, gbc.sp());
        EXPECT(0xb4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ae));
        EXPECT(0xb4, gbc.readMem(0xb4af));
        // CB B4 02A3
        gbc.setState(0x17a4, 0x27e6, 0xeb90, 0x5cfd, 0x30bd, 0xe34d, 0x0, 0x1);
        gbc.writeMem(0x17a4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x27e6, gbc.sp());
        EXPECT(0x17a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02A4
        gbc.setState(0xce74, 0xf9af, 0x4ab0, 0x57a3, 0x7459, 0x6046, 0x0, 0x1);
        gbc.writeMem(0xce74, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf9af, gbc.sp());
        EXPECT(0xce76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce74));
        EXPECT(0xb4, gbc.readMem(0xce75));
        // CB B4 02A5
        gbc.setState(0x9fa5, 0xa598, 0x57f0, 0xd7ff, 0xc9ff, 0x73b1, 0x1, 0x0);
        gbc.writeMem(0x9fa5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa598, gbc.sp());
        EXPECT(0x9fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fa5));
        EXPECT(0xb4, gbc.readMem(0x9fa6));
        // CB B4 02A6
        gbc.setState(0xbbad, 0x99f, 0x3790, 0x246b, 0x6be1, 0x321a, 0x1, 0x0);
        gbc.writeMem(0xbbad, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x99f, gbc.sp());
        EXPECT(0xbbaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbad));
        EXPECT(0xb4, gbc.readMem(0xbbae));
        // CB B4 02A7
        gbc.setState(0x7e58, 0xe638, 0x5180, 0xaf92, 0xc51b, 0x27b7, 0x1, 0x1);
        gbc.writeMem(0x7e58, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe638, gbc.sp());
        EXPECT(0x7e5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 02A8
        gbc.setState(0x2e5a, 0xb7ab, 0xda30, 0x6659, 0xab3, 0x665f, 0x1, 0x0);
        gbc.writeMem(0x2e5a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb7ab, gbc.sp());
        EXPECT(0x2e5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02A9
        gbc.setState(0x4cb0, 0xe00d, 0x8910, 0x640a, 0x2a24, 0x4496, 0x1, 0x0);
        gbc.writeMem(0x4cb0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe00d, gbc.sp());
        EXPECT(0x4cb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02AA
        gbc.setState(0x8444, 0x5dd0, 0x9660, 0x689, 0xbd69, 0xdac8, 0x1, 0x1);
        gbc.writeMem(0x8444, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5dd0, gbc.sp());
        EXPECT(0x8446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8444));
        EXPECT(0xb4, gbc.readMem(0x8445));
        // CB B4 02AB
        gbc.setState(0x8c1f, 0xc167, 0x40b0, 0x9e62, 0xc972, 0x19c2, 0x1, 0x1);
        gbc.writeMem(0x8c1f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc167, gbc.sp());
        EXPECT(0x8c21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c1f));
        EXPECT(0xb4, gbc.readMem(0x8c20));
        // CB B4 02AC
        gbc.setState(0xb4c3, 0xc224, 0x4710, 0xe850, 0xadfc, 0xb69e, 0x1, 0x1);
        gbc.writeMem(0xb4c3, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc224, gbc.sp());
        EXPECT(0xb4c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4c3));
        EXPECT(0xb4, gbc.readMem(0xb4c4));
        // CB B4 02AD
        gbc.setState(0x786d, 0x2b0, 0x90d0, 0xb7a5, 0x2488, 0xad2f, 0x0, 0x1);
        gbc.writeMem(0x786d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2b0, gbc.sp());
        EXPECT(0x786f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02AE
        gbc.setState(0x5557, 0x7abd, 0xec10, 0x922d, 0x395d, 0x36a0, 0x0, 0x0);
        gbc.writeMem(0x5557, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7abd, gbc.sp());
        EXPECT(0x5559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02AF
        gbc.setState(0x1984, 0x2138, 0x68b0, 0x3c77, 0x6a33, 0x46a6, 0x0, 0x0);
        gbc.writeMem(0x1984, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2138, gbc.sp());
        EXPECT(0x1986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02B0
        gbc.setState(0x46f9, 0x6335, 0x8750, 0x4a1b, 0x57eb, 0xc659, 0x0, 0x1);
        gbc.writeMem(0x46f9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6335, gbc.sp());
        EXPECT(0x46fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02B2
        gbc.setState(0x555c, 0x9666, 0x4ac0, 0x1e8d, 0x1bda, 0x9be7, 0x1, 0x1);
        gbc.writeMem(0x555c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9666, gbc.sp());
        EXPECT(0x555e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 02B3
        gbc.setState(0x2d15, 0x34b0, 0xe4a0, 0xa56, 0x85f0, 0x7901, 0x1, 0x0);
        gbc.writeMem(0x2d15, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x34b0, gbc.sp());
        EXPECT(0x2d17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 02B5
        gbc.setState(0xda4e, 0x331e, 0x7820, 0x3868, 0x8667, 0xbcaf, 0x1, 0x1);
        gbc.writeMem(0xda4e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x331e, gbc.sp());
        EXPECT(0xda50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda4e));
        EXPECT(0xb4, gbc.readMem(0xda4f));
        // CB B4 02B6
        gbc.setState(0xc2bc, 0x15aa, 0x6c10, 0xa538, 0x9933, 0x7d1b, 0x0, 0x0);
        gbc.writeMem(0xc2bc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x15aa, gbc.sp());
        EXPECT(0xc2be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2bc));
        EXPECT(0xb4, gbc.readMem(0xc2bd));
        // CB B4 02B8
        gbc.setState(0xdaf1, 0xcde6, 0x360, 0x4106, 0x7e2, 0xc933, 0x0, 0x0);
        gbc.writeMem(0xdaf1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xcde6, gbc.sp());
        EXPECT(0xdaf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaf1));
        EXPECT(0xb4, gbc.readMem(0xdaf2));
        // CB B4 02B9
        gbc.setState(0x5d91, 0x397d, 0xf540, 0xbe24, 0x161e, 0xb2ff, 0x0, 0x1);
        gbc.writeMem(0x5d91, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x397d, gbc.sp());
        EXPECT(0x5d93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 02BA
        gbc.setState(0xd5a0, 0xde1e, 0x89e0, 0xba1e, 0xc1c2, 0xebb5, 0x1, 0x0);
        gbc.writeMem(0xd5a0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xde1e, gbc.sp());
        EXPECT(0xd5a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a0));
        EXPECT(0xb4, gbc.readMem(0xd5a1));
        // CB B4 02BB
        gbc.setState(0xb111, 0xe632, 0x5b70, 0x93d1, 0xd5f9, 0xf87, 0x0, 0x1);
        gbc.writeMem(0xb111, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe632, gbc.sp());
        EXPECT(0xb113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb111));
        EXPECT(0xb4, gbc.readMem(0xb112));
        // CB B4 02BC
        gbc.setState(0x51ce, 0x350e, 0x3b30, 0xcdec, 0xc35e, 0xb6b, 0x1, 0x1);
        gbc.writeMem(0x51ce, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x350e, gbc.sp());
        EXPECT(0x51d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02BD
        gbc.setState(0xba4e, 0x307a, 0x9b20, 0x8bac, 0xa168, 0xe0ff, 0x0, 0x0);
        gbc.writeMem(0xba4e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x307a, gbc.sp());
        EXPECT(0xba50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba4e));
        EXPECT(0xb4, gbc.readMem(0xba4f));
        // CB B4 02BE
        gbc.setState(0xdb8f, 0xd029, 0xb870, 0xf04a, 0x2c17, 0xaf3d, 0x0, 0x1);
        gbc.writeMem(0xdb8f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd029, gbc.sp());
        EXPECT(0xdb91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb8f));
        EXPECT(0xb4, gbc.readMem(0xdb90));
        // CB B4 02BF
        gbc.setState(0xef32, 0x9749, 0x2810, 0x4826, 0x2252, 0x1409, 0x0, 0x1);
        gbc.writeMem(0xef32, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9749, gbc.sp());
        EXPECT(0xef34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef32));
        EXPECT(0xb4, gbc.readMem(0xef33));
        // CB B4 02C0
        gbc.setState(0x244d, 0x3081, 0xf8d0, 0xdf59, 0x63fc, 0x5228, 0x1, 0x1);
        gbc.writeMem(0x244d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3081, gbc.sp());
        EXPECT(0x244f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02C1
        gbc.setState(0xd, 0xaf26, 0xf850, 0x2b7f, 0x1897, 0xc679, 0x1, 0x1);
        gbc.writeMem(0xd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xaf26, gbc.sp());
        EXPECT(0xf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02C2
        gbc.setState(0x4758, 0x8d3f, 0x1d20, 0x6d8b, 0x99f2, 0x203c, 0x1, 0x0);
        gbc.writeMem(0x4758, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8d3f, gbc.sp());
        EXPECT(0x475a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 02C3
        gbc.setState(0xaf42, 0x800b, 0x74a0, 0x4de9, 0x7588, 0x7d52, 0x1, 0x1);
        gbc.writeMem(0xaf42, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x800b, gbc.sp());
        EXPECT(0xaf44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf42));
        EXPECT(0xb4, gbc.readMem(0xaf43));
        // CB B4 02C4
        gbc.setState(0x2de2, 0x654a, 0x7810, 0x247c, 0x9297, 0x22bb, 0x0, 0x1);
        gbc.writeMem(0x2de2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x654a, gbc.sp());
        EXPECT(0x2de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02C5
        gbc.setState(0x8963, 0x3572, 0x8640, 0x2939, 0x4824, 0x3746, 0x0, 0x0);
        gbc.writeMem(0x8963, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3572, gbc.sp());
        EXPECT(0x8965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8963));
        EXPECT(0xb4, gbc.readMem(0x8964));
        // CB B4 02C6
        gbc.setState(0x1667, 0xbdf3, 0xf6b0, 0x1b70, 0x8619, 0xfd85, 0x0, 0x0);
        gbc.writeMem(0x1667, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xbdf3, gbc.sp());
        EXPECT(0x1669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02C7
        gbc.setState(0x4927, 0x9553, 0x5980, 0x58bc, 0x8f8, 0xcfd0, 0x1, 0x1);
        gbc.writeMem(0x4927, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9553, gbc.sp());
        EXPECT(0x4929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 02C8
        gbc.setState(0xd6f8, 0xbe25, 0x2c50, 0x76ad, 0x85, 0xf602, 0x0, 0x0);
        gbc.writeMem(0xd6f8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbe25, gbc.sp());
        EXPECT(0xd6fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6f8));
        EXPECT(0xb4, gbc.readMem(0xd6f9));
        // CB B4 02C9
        gbc.setState(0xeb94, 0x1313, 0xb330, 0x9e69, 0x807b, 0x9780, 0x0, 0x1);
        gbc.writeMem(0xeb94, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1313, gbc.sp());
        EXPECT(0xeb96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb94));
        EXPECT(0xb4, gbc.readMem(0xeb95));
        // CB B4 02CA
        gbc.setState(0x24f, 0x92ba, 0x78f0, 0x9258, 0x5410, 0xd724, 0x1, 0x0);
        gbc.writeMem(0x24f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x92ba, gbc.sp());
        EXPECT(0x251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02CB
        gbc.setState(0xf6e, 0x6e6b, 0xfbe0, 0x274e, 0xf75b, 0x3aab, 0x0, 0x1);
        gbc.writeMem(0xf6e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6e6b, gbc.sp());
        EXPECT(0xf70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 02CC
        gbc.setState(0x9c56, 0x85dd, 0x87d0, 0x6c22, 0x8b53, 0xc039, 0x1, 0x1);
        gbc.writeMem(0x9c56, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x85dd, gbc.sp());
        EXPECT(0x9c58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c56));
        EXPECT(0xb4, gbc.readMem(0x9c57));
        // CB B4 02CD
        gbc.setState(0xd9d2, 0xaeea, 0x6d40, 0xcecf, 0xe0b6, 0x946f, 0x0, 0x0);
        gbc.writeMem(0xd9d2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xaeea, gbc.sp());
        EXPECT(0xd9d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d2));
        EXPECT(0xb4, gbc.readMem(0xd9d3));
        // CB B4 02CE
        gbc.setState(0x23e8, 0x8d4, 0xb0, 0xca44, 0xf47, 0xb66c, 0x1, 0x1);
        gbc.writeMem(0x23e8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8d4, gbc.sp());
        EXPECT(0x23ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02CF
        gbc.setState(0xd16f, 0x1d3d, 0x56f0, 0x228d, 0x2255, 0xe018, 0x1, 0x0);
        gbc.writeMem(0xd16f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1d3d, gbc.sp());
        EXPECT(0xd171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd16f));
        EXPECT(0xb4, gbc.readMem(0xd170));
        // CB B4 02D0
        gbc.setState(0x102d, 0x58c7, 0x1fc0, 0x878e, 0xb7fd, 0x5286, 0x1, 0x0);
        gbc.writeMem(0x102d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x58c7, gbc.sp());
        EXPECT(0x102f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 02D1
        gbc.setState(0x51a2, 0x409f, 0x92c0, 0x923b, 0xf318, 0xabe9, 0x0, 0x1);
        gbc.writeMem(0x51a2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x409f, gbc.sp());
        EXPECT(0x51a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 02D3
        gbc.setState(0x22b2, 0x83e6, 0x6720, 0xc685, 0x5d90, 0x24e1, 0x1, 0x0);
        gbc.writeMem(0x22b2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x83e6, gbc.sp());
        EXPECT(0x22b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 02D4
        gbc.setState(0xa51f, 0xac40, 0x7970, 0x946c, 0xa09a, 0x6c79, 0x1, 0x1);
        gbc.writeMem(0xa51f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xac40, gbc.sp());
        EXPECT(0xa521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa51f));
        EXPECT(0xb4, gbc.readMem(0xa520));
        // CB B4 02D5
        gbc.setState(0x4b29, 0x305c, 0x7c80, 0x6122, 0x7c3e, 0x1b83, 0x1, 0x1);
        gbc.writeMem(0x4b29, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x305c, gbc.sp());
        EXPECT(0x4b2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 02D6
        gbc.setState(0xcfcf, 0xc87f, 0x1ef0, 0x7e10, 0xe43f, 0x1362, 0x1, 0x0);
        gbc.writeMem(0xcfcf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc87f, gbc.sp());
        EXPECT(0xcfd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfcf));
        EXPECT(0xb4, gbc.readMem(0xcfd0));
        // CB B4 02D7
        gbc.setState(0xda2e, 0x442d, 0x4420, 0x5823, 0xf506, 0xd159, 0x0, 0x0);
        gbc.writeMem(0xda2e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x442d, gbc.sp());
        EXPECT(0xda30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda2e));
        EXPECT(0xb4, gbc.readMem(0xda2f));
        // CB B4 02D8
        gbc.setState(0x2974, 0xa6d4, 0xd700, 0x904b, 0xbe3, 0xd832, 0x0, 0x0);
        gbc.writeMem(0x2974, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa6d4, gbc.sp());
        EXPECT(0x2976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 02D9
        gbc.setState(0xea5, 0xa4aa, 0xfc90, 0x30e, 0xb3da, 0x9bb8, 0x1, 0x1);
        gbc.writeMem(0xea5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa4aa, gbc.sp());
        EXPECT(0xea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02DA
        gbc.setState(0x3969, 0x8461, 0x9f80, 0x26c, 0x9e60, 0x23b0, 0x1, 0x0);
        gbc.writeMem(0x3969, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8461, gbc.sp());
        EXPECT(0x396b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 02DB
        gbc.setState(0x4dae, 0xdf67, 0xe3d0, 0x8a68, 0x36a4, 0xdcdb, 0x1, 0x1);
        gbc.writeMem(0x4dae, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xdf67, gbc.sp());
        EXPECT(0x4db0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02DC
        gbc.setState(0x2023, 0xd6d4, 0x7030, 0xb6f3, 0xccf4, 0x1b35, 0x1, 0x1);
        gbc.writeMem(0x2023, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd6d4, gbc.sp());
        EXPECT(0x2025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02DD
        gbc.setState(0x511f, 0xb611, 0x8690, 0x788d, 0x4c3f, 0xebad, 0x0, 0x1);
        gbc.writeMem(0x511f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb611, gbc.sp());
        EXPECT(0x5121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02DE
        gbc.setState(0x632e, 0x6e7f, 0x1e00, 0x593e, 0x20f5, 0x28ee, 0x0, 0x0);
        gbc.writeMem(0x632e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6e7f, gbc.sp());
        EXPECT(0x6330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 02DF
        gbc.setState(0x5a36, 0x5205, 0xd0, 0xfdb7, 0x8ba0, 0x525c, 0x0, 0x1);
        gbc.writeMem(0x5a36, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5205, gbc.sp());
        EXPECT(0x5a38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02E0
        gbc.setState(0x832d, 0xbcd8, 0xb7a0, 0x8261, 0xb948, 0x2f21, 0x0, 0x1);
        gbc.writeMem(0x832d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbcd8, gbc.sp());
        EXPECT(0x832f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x832d));
        EXPECT(0xb4, gbc.readMem(0x832e));
        // CB B4 02E1
        gbc.setState(0xbc47, 0x1261, 0x9860, 0x9a2b, 0xd251, 0x6fb6, 0x1, 0x0);
        gbc.writeMem(0xbc47, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1261, gbc.sp());
        EXPECT(0xbc49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc47));
        EXPECT(0xb4, gbc.readMem(0xbc48));
        // CB B4 02E2
        gbc.setState(0xef8f, 0xb0a, 0x1ff0, 0x341b, 0xe4f9, 0xfed7, 0x1, 0x1);
        gbc.writeMem(0xef8f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb0a, gbc.sp());
        EXPECT(0xef91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef8f));
        EXPECT(0xb4, gbc.readMem(0xef90));
        // CB B4 02E3
        gbc.setState(0x6f0d, 0xdff2, 0x56d0, 0x6552, 0xc91b, 0xab07, 0x1, 0x1);
        gbc.writeMem(0x6f0d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdff2, gbc.sp());
        EXPECT(0x6f0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02E4
        gbc.setState(0xdab4, 0xe546, 0x6200, 0xae27, 0x646b, 0x8c3d, 0x0, 0x1);
        gbc.writeMem(0xdab4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe546, gbc.sp());
        EXPECT(0xdab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdab4));
        EXPECT(0xb4, gbc.readMem(0xdab5));
        // CB B4 02E5
        gbc.setState(0xb1ad, 0x88e4, 0xba10, 0xe498, 0x4f27, 0x3dbc, 0x0, 0x1);
        gbc.writeMem(0xb1ad, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x88e4, gbc.sp());
        EXPECT(0xb1af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ad));
        EXPECT(0xb4, gbc.readMem(0xb1ae));
        // CB B4 02E6
        gbc.setState(0xdf91, 0xdc76, 0x1a40, 0xeeb5, 0x4ac7, 0xde12, 0x0, 0x1);
        gbc.writeMem(0xdf91, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdc76, gbc.sp());
        EXPECT(0xdf93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf91));
        EXPECT(0xb4, gbc.readMem(0xdf92));
        // CB B4 02E7
        gbc.setState(0x7f7a, 0x67d8, 0x3400, 0xd98b, 0x5bc7, 0x1946, 0x1, 0x0);
        gbc.writeMem(0x7f7a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x67d8, gbc.sp());
        EXPECT(0x7f7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 02E8
        gbc.setState(0x7258, 0x24ad, 0xb70, 0x2660, 0x197f, 0xcb7d, 0x0, 0x0);
        gbc.writeMem(0x7258, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x24ad, gbc.sp());
        EXPECT(0x725a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02E9
        gbc.setState(0x4f5c, 0x5cbf, 0x2cf0, 0x3bed, 0xaf29, 0x7cba, 0x0, 0x1);
        gbc.writeMem(0x4f5c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5cbf, gbc.sp());
        EXPECT(0x4f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02EA
        gbc.setState(0xb882, 0x2052, 0xa000, 0xc62b, 0xaf28, 0x7a03, 0x1, 0x1);
        gbc.writeMem(0xb882, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2052, gbc.sp());
        EXPECT(0xb884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb882));
        EXPECT(0xb4, gbc.readMem(0xb883));
        // CB B4 02EB
        gbc.setState(0xe86d, 0x5c2d, 0xeb60, 0xf020, 0x504d, 0xa5c2, 0x1, 0x0);
        gbc.writeMem(0xe86d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5c2d, gbc.sp());
        EXPECT(0xe86f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe86d));
        EXPECT(0xb4, gbc.readMem(0xe86e));
        // CB B4 02EC
        gbc.setState(0x7cd5, 0x4313, 0xf0, 0xdfca, 0x2f2a, 0x19e2, 0x1, 0x0);
        gbc.writeMem(0x7cd5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4313, gbc.sp());
        EXPECT(0x7cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02ED
        gbc.setState(0x7697, 0x3220, 0x5ec0, 0x16bf, 0x2ea3, 0x6202, 0x1, 0x0);
        gbc.writeMem(0x7697, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3220, gbc.sp());
        EXPECT(0x7699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 02EF
        gbc.setState(0xc86f, 0xa695, 0xeab0, 0xa8dc, 0xd0e6, 0x69c9, 0x1, 0x1);
        gbc.writeMem(0xc86f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa695, gbc.sp());
        EXPECT(0xc871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc86f));
        EXPECT(0xb4, gbc.readMem(0xc870));
        // CB B4 02F0
        gbc.setState(0xb9f5, 0x30ea, 0xd2b0, 0x7b42, 0x422a, 0xcc81, 0x1, 0x0);
        gbc.writeMem(0xb9f5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x30ea, gbc.sp());
        EXPECT(0xb9f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f5));
        EXPECT(0xb4, gbc.readMem(0xb9f6));
        // CB B4 02F1
        gbc.setState(0xe08b, 0x8d9b, 0x6bc0, 0xb4cd, 0x34f9, 0xce45, 0x1, 0x1);
        gbc.writeMem(0xe08b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8d9b, gbc.sp());
        EXPECT(0xe08d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe08b));
        EXPECT(0xb4, gbc.readMem(0xe08c));
        // CB B4 02F2
        gbc.setState(0x6b1d, 0xf8bc, 0xc570, 0x6603, 0x4e39, 0x63ef, 0x0, 0x0);
        gbc.writeMem(0x6b1d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf8bc, gbc.sp());
        EXPECT(0x6b1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02F3
        gbc.setState(0x459f, 0x8f6d, 0xa590, 0x43a4, 0x235c, 0xea9e, 0x0, 0x1);
        gbc.writeMem(0x459f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8f6d, gbc.sp());
        EXPECT(0x45a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02F4
        gbc.setState(0x8972, 0x3dc3, 0xb2e0, 0x7ffa, 0x23e7, 0xff76, 0x1, 0x0);
        gbc.writeMem(0x8972, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3dc3, gbc.sp());
        EXPECT(0x8974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8972));
        EXPECT(0xb4, gbc.readMem(0x8973));
        // CB B4 02F5
        gbc.setState(0x848c, 0x2b77, 0xac10, 0xb4d4, 0x7691, 0xd8b9, 0x1, 0x1);
        gbc.writeMem(0x848c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2b77, gbc.sp());
        EXPECT(0x848e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x848c));
        EXPECT(0xb4, gbc.readMem(0x848d));
        // CB B4 02F6
        gbc.setState(0x6f72, 0x6bae, 0xecf0, 0x95db, 0x2515, 0xadd, 0x0, 0x1);
        gbc.writeMem(0x6f72, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6bae, gbc.sp());
        EXPECT(0x6f74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02F7
        gbc.setState(0x43cf, 0x9d76, 0x56e0, 0x8568, 0xd4c8, 0x44ea, 0x1, 0x1);
        gbc.writeMem(0x43cf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9d76, gbc.sp());
        EXPECT(0x43d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 02F8
        gbc.setState(0x6e04, 0xcc12, 0xd2c0, 0x8e6c, 0x1655, 0x1f82, 0x1, 0x0);
        gbc.writeMem(0x6e04, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcc12, gbc.sp());
        EXPECT(0x6e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 02F9
        gbc.setState(0x9d82, 0xa784, 0x96e0, 0xca29, 0xfe42, 0xc1e3, 0x1, 0x0);
        gbc.writeMem(0x9d82, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa784, gbc.sp());
        EXPECT(0x9d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d82));
        EXPECT(0xb4, gbc.readMem(0x9d83));
        // CB B4 02FA
        gbc.setState(0x58bd, 0x1b36, 0x4320, 0x5863, 0x40cb, 0x746f, 0x0, 0x0);
        gbc.writeMem(0x58bd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1b36, gbc.sp());
        EXPECT(0x58bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 02FB
        gbc.setState(0xb306, 0x572f, 0xc6e0, 0x6f97, 0x79a6, 0xdc7c, 0x0, 0x1);
        gbc.writeMem(0xb306, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x572f, gbc.sp());
        EXPECT(0xb308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb306));
        EXPECT(0xb4, gbc.readMem(0xb307));
        // CB B4 02FC
        gbc.setState(0x7079, 0x377f, 0x68b0, 0xafdf, 0x8662, 0x925d, 0x1, 0x1);
        gbc.writeMem(0x7079, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x377f, gbc.sp());
        EXPECT(0x707b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02FD
        gbc.setState(0x250d, 0xd43f, 0x3cd0, 0xd3f8, 0x6da8, 0xbfa9, 0x0, 0x0);
        gbc.writeMem(0x250d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd43f, gbc.sp());
        EXPECT(0x250f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 02FF
        gbc.setState(0xa99f, 0xc642, 0x4140, 0xd8a9, 0x20bf, 0x7ead, 0x1, 0x0);
        gbc.writeMem(0xa99f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc642, gbc.sp());
        EXPECT(0xa9a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa99f));
        EXPECT(0xb4, gbc.readMem(0xa9a0));
        // CB B4 0300
        gbc.setState(0xca9a, 0xc1af, 0xe020, 0xa972, 0x6cc3, 0x4187, 0x1, 0x0);
        gbc.writeMem(0xca9a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc1af, gbc.sp());
        EXPECT(0xca9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca9a));
        EXPECT(0xb4, gbc.readMem(0xca9b));
        // CB B4 0301
        gbc.setState(0x8a7b, 0xf2e, 0xe5a0, 0x9302, 0xccd4, 0x3e2a, 0x1, 0x0);
        gbc.writeMem(0x8a7b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf2e, gbc.sp());
        EXPECT(0x8a7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a7b));
        EXPECT(0xb4, gbc.readMem(0x8a7c));
        // CB B4 0303
        gbc.setState(0x30ed, 0xf39f, 0x99d0, 0xaf81, 0x3d31, 0xfee6, 0x0, 0x1);
        gbc.writeMem(0x30ed, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf39f, gbc.sp());
        EXPECT(0x30ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0304
        gbc.setState(0x2332, 0x761d, 0x52e0, 0x7e9e, 0xcb6e, 0x421c, 0x0, 0x1);
        gbc.writeMem(0x2332, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x761d, gbc.sp());
        EXPECT(0x2334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0305
        gbc.setState(0xd608, 0xc29, 0xba80, 0xa3f9, 0x5814, 0xc64f, 0x0, 0x1);
        gbc.writeMem(0xd608, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc29, gbc.sp());
        EXPECT(0xd60a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd608));
        EXPECT(0xb4, gbc.readMem(0xd609));
        // CB B4 0306
        gbc.setState(0xb96, 0xc4c8, 0xb030, 0x7ac, 0x6c0b, 0xefe2, 0x1, 0x0);
        gbc.writeMem(0xb96, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc4c8, gbc.sp());
        EXPECT(0xb98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0307
        gbc.setState(0x339e, 0x320e, 0xc8e0, 0x6504, 0xa29f, 0xd3e0, 0x1, 0x0);
        gbc.writeMem(0x339e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x320e, gbc.sp());
        EXPECT(0x33a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0308
        gbc.setState(0x2f83, 0xd9e3, 0xd600, 0x77cb, 0x3a55, 0xff7f, 0x1, 0x1);
        gbc.writeMem(0x2f83, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd9e3, gbc.sp());
        EXPECT(0x2f85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0309
        gbc.setState(0xe3d7, 0x96e4, 0x4490, 0x110a, 0x3a8c, 0xa129, 0x1, 0x1);
        gbc.writeMem(0xe3d7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x96e4, gbc.sp());
        EXPECT(0xe3d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3d7));
        EXPECT(0xb4, gbc.readMem(0xe3d8));
        // CB B4 030A
        gbc.setState(0xd61d, 0x339, 0xd170, 0x8c2d, 0x431a, 0x7b18, 0x1, 0x1);
        gbc.writeMem(0xd61d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x339, gbc.sp());
        EXPECT(0xd61f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd61d));
        EXPECT(0xb4, gbc.readMem(0xd61e));
        // CB B4 030B
        gbc.setState(0x46a1, 0x2e6d, 0x190, 0x16c7, 0x79bf, 0x11ca, 0x1, 0x0);
        gbc.writeMem(0x46a1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2e6d, gbc.sp());
        EXPECT(0x46a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 030C
        gbc.setState(0xd033, 0xfc0e, 0xe2a0, 0xea28, 0xa261, 0xedbc, 0x1, 0x1);
        gbc.writeMem(0xd033, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xfc0e, gbc.sp());
        EXPECT(0xd035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd033));
        EXPECT(0xb4, gbc.readMem(0xd034));
        // CB B4 030D
        gbc.setState(0xbffa, 0x1325, 0xb3c0, 0x976f, 0xa526, 0x1eaa, 0x0, 0x0);
        gbc.writeMem(0xbffa, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1325, gbc.sp());
        EXPECT(0xbffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbffa));
        EXPECT(0xb4, gbc.readMem(0xbffb));
        // CB B4 030E
        gbc.setState(0x6128, 0x38af, 0x10a0, 0x21c1, 0xa006, 0x134b, 0x1, 0x0);
        gbc.writeMem(0x6128, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x38af, gbc.sp());
        EXPECT(0x612a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 030F
        gbc.setState(0x2f3d, 0x83, 0xe760, 0x1dc4, 0x29b6, 0x908c, 0x1, 0x0);
        gbc.writeMem(0x2f3d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x83, gbc.sp());
        EXPECT(0x2f3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0310
        gbc.setState(0x2471, 0x17fe, 0x29a0, 0x3736, 0xba6b, 0x6b72, 0x0, 0x1);
        gbc.writeMem(0x2471, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x17fe, gbc.sp());
        EXPECT(0x2473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0311
        gbc.setState(0x5c83, 0xab61, 0x21e0, 0xbff1, 0x545, 0xb9a8, 0x1, 0x0);
        gbc.writeMem(0x5c83, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xab61, gbc.sp());
        EXPECT(0x5c85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0312
        gbc.setState(0x91ff, 0x43e9, 0x4500, 0x6ab6, 0x623c, 0x2a9a, 0x1, 0x0);
        gbc.writeMem(0x91ff, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x43e9, gbc.sp());
        EXPECT(0x9201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ff));
        EXPECT(0xb4, gbc.readMem(0x9200));
        // CB B4 0313
        gbc.setState(0xab48, 0xd7c8, 0x5070, 0x505b, 0x3642, 0x1c4d, 0x1, 0x0);
        gbc.writeMem(0xab48, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd7c8, gbc.sp());
        EXPECT(0xab4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab48));
        EXPECT(0xb4, gbc.readMem(0xab49));
        // CB B4 0314
        gbc.setState(0x4862, 0x5fef, 0x9e70, 0x413e, 0xec81, 0x6192, 0x0, 0x0);
        gbc.writeMem(0x4862, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5fef, gbc.sp());
        EXPECT(0x4864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0315
        gbc.setState(0x9035, 0xb22e, 0x6280, 0xc630, 0xbac8, 0xdfcc, 0x1, 0x1);
        gbc.writeMem(0x9035, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb22e, gbc.sp());
        EXPECT(0x9037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9035));
        EXPECT(0xb4, gbc.readMem(0x9036));
        // CB B4 0316
        gbc.setState(0x2d14, 0x3a37, 0x8910, 0x87d0, 0xb5a5, 0x6cde, 0x0, 0x1);
        gbc.writeMem(0x2d14, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3a37, gbc.sp());
        EXPECT(0x2d16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0317
        gbc.setState(0xc360, 0xf021, 0x6a30, 0x28e9, 0x900, 0x5a1c, 0x1, 0x0);
        gbc.writeMem(0xc360, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf021, gbc.sp());
        EXPECT(0xc362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc360));
        EXPECT(0xb4, gbc.readMem(0xc361));
        // CB B4 0318
        gbc.setState(0x4bd5, 0xbf07, 0x9c40, 0xf238, 0xe40d, 0x7bf, 0x1, 0x1);
        gbc.writeMem(0x4bd5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xbf07, gbc.sp());
        EXPECT(0x4bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0319
        gbc.setState(0x5757, 0x36d3, 0x7410, 0xe4cb, 0x626d, 0x5b7f, 0x0, 0x1);
        gbc.writeMem(0x5757, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x36d3, gbc.sp());
        EXPECT(0x5759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 031A
        gbc.setState(0xe009, 0x7f1a, 0x8770, 0x1c08, 0x1144, 0x210e, 0x0, 0x0);
        gbc.writeMem(0xe009, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7f1a, gbc.sp());
        EXPECT(0xe00b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe009));
        EXPECT(0xb4, gbc.readMem(0xe00a));
        // CB B4 031B
        gbc.setState(0x2cf9, 0x517f, 0x6810, 0x8e1c, 0xb59b, 0xe451, 0x1, 0x1);
        gbc.writeMem(0x2cf9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x517f, gbc.sp());
        EXPECT(0x2cfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 031C
        gbc.setState(0xe967, 0xdbc9, 0xbe60, 0x36bf, 0x26c2, 0x6b81, 0x0, 0x0);
        gbc.writeMem(0xe967, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xdbc9, gbc.sp());
        EXPECT(0xe969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe967));
        EXPECT(0xb4, gbc.readMem(0xe968));
        // CB B4 031D
        gbc.setState(0x3f49, 0xdbef, 0x2520, 0xa3c2, 0xaa78, 0xb2ea, 0x0, 0x1);
        gbc.writeMem(0x3f49, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xdbef, gbc.sp());
        EXPECT(0x3f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 031E
        gbc.setState(0xe2b5, 0xa7f7, 0xf4b0, 0x172, 0x3d62, 0x8cd9, 0x0, 0x1);
        gbc.writeMem(0xe2b5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa7f7, gbc.sp());
        EXPECT(0xe2b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b5));
        EXPECT(0xb4, gbc.readMem(0xe2b6));
        // CB B4 031F
        gbc.setState(0x1f1d, 0x3242, 0x3830, 0xa876, 0xacf, 0x131a, 0x0, 0x0);
        gbc.writeMem(0x1f1d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3242, gbc.sp());
        EXPECT(0x1f1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0320
        gbc.setState(0xcfe4, 0xfccd, 0x9700, 0xcc82, 0x41a9, 0x365a, 0x0, 0x0);
        gbc.writeMem(0xcfe4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfccd, gbc.sp());
        EXPECT(0xcfe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfe4));
        EXPECT(0xb4, gbc.readMem(0xcfe5));
        // CB B4 0321
        gbc.setState(0xcf4a, 0x10a8, 0x2180, 0xa356, 0xefbb, 0x9ee5, 0x1, 0x1);
        gbc.writeMem(0xcf4a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x10a8, gbc.sp());
        EXPECT(0xcf4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf4a));
        EXPECT(0xb4, gbc.readMem(0xcf4b));
        // CB B4 0322
        gbc.setState(0x6b96, 0xe534, 0xe680, 0xecdc, 0xd9e0, 0xde17, 0x1, 0x1);
        gbc.writeMem(0x6b96, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe534, gbc.sp());
        EXPECT(0x6b98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0323
        gbc.setState(0x51d2, 0xa840, 0x31d0, 0x81d1, 0x3908, 0xcaa7, 0x1, 0x1);
        gbc.writeMem(0x51d2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa840, gbc.sp());
        EXPECT(0x51d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0324
        gbc.setState(0x2897, 0xf38, 0xeb60, 0x74c7, 0x5697, 0xfe0b, 0x0, 0x1);
        gbc.writeMem(0x2897, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf38, gbc.sp());
        EXPECT(0x2899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0325
        gbc.setState(0x7890, 0x59cb, 0x2270, 0xa437, 0xd795, 0xc68a, 0x1, 0x1);
        gbc.writeMem(0x7890, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x59cb, gbc.sp());
        EXPECT(0x7892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0326
        gbc.setState(0x7e7c, 0x1440, 0x2e40, 0xeca6, 0x56c6, 0x2e9c, 0x0, 0x0);
        gbc.writeMem(0x7e7c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1440, gbc.sp());
        EXPECT(0x7e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0327
        gbc.setState(0xdf, 0x6a02, 0x9e70, 0xa988, 0x10c5, 0x727a, 0x1, 0x0);
        gbc.writeMem(0xdf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6a02, gbc.sp());
        EXPECT(0xe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0328
        gbc.setState(0x8698, 0xcb99, 0x9eb0, 0x189d, 0xbed2, 0xac42, 0x0, 0x0);
        gbc.writeMem(0x8698, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xcb99, gbc.sp());
        EXPECT(0x869a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8698));
        EXPECT(0xb4, gbc.readMem(0x8699));
        // CB B4 0329
        gbc.setState(0x957c, 0x5d75, 0x9c00, 0x6302, 0x4c6b, 0x5f8f, 0x1, 0x0);
        gbc.writeMem(0x957c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5d75, gbc.sp());
        EXPECT(0x957e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x957c));
        EXPECT(0xb4, gbc.readMem(0x957d));
        // CB B4 032A
        gbc.setState(0x425b, 0xef15, 0xc130, 0xdcae, 0x24ba, 0x61a0, 0x1, 0x1);
        gbc.writeMem(0x425b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xef15, gbc.sp());
        EXPECT(0x425d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 032B
        gbc.setState(0xe300, 0xe577, 0x7d50, 0xf968, 0xe1d3, 0xf883, 0x0, 0x0);
        gbc.writeMem(0xe300, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe577, gbc.sp());
        EXPECT(0xe302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe300));
        EXPECT(0xb4, gbc.readMem(0xe301));
        // CB B4 032C
        gbc.setState(0xdfbd, 0x8935, 0x8790, 0xa616, 0x3525, 0x51d4, 0x0, 0x0);
        gbc.writeMem(0xdfbd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8935, gbc.sp());
        EXPECT(0xdfbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfbd));
        EXPECT(0xb4, gbc.readMem(0xdfbe));
        // CB B4 032D
        gbc.setState(0x1ea2, 0xd46, 0xb7f0, 0xac0c, 0x5f05, 0xe716, 0x0, 0x1);
        gbc.writeMem(0x1ea2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd46, gbc.sp());
        EXPECT(0x1ea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 032E
        gbc.setState(0x981c, 0x948d, 0x75d0, 0x5b6b, 0x85ec, 0x4218, 0x1, 0x0);
        gbc.writeMem(0x981c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x948d, gbc.sp());
        EXPECT(0x981e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x981c));
        EXPECT(0xb4, gbc.readMem(0x981d));
        // CB B4 032F
        gbc.setState(0xccb2, 0x9111, 0xec10, 0x8b36, 0xca8c, 0xb492, 0x0, 0x1);
        gbc.writeMem(0xccb2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9111, gbc.sp());
        EXPECT(0xccb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb2));
        EXPECT(0xb4, gbc.readMem(0xccb3));
        // CB B4 0330
        gbc.setState(0xbef0, 0x6ab3, 0xca10, 0x728c, 0xc9a4, 0xaa99, 0x1, 0x1);
        gbc.writeMem(0xbef0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6ab3, gbc.sp());
        EXPECT(0xbef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbef0));
        EXPECT(0xb4, gbc.readMem(0xbef1));
        // CB B4 0331
        gbc.setState(0x1e87, 0x9fd2, 0x7fb0, 0xbc2, 0xf596, 0xc86a, 0x1, 0x1);
        gbc.writeMem(0x1e87, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9fd2, gbc.sp());
        EXPECT(0x1e89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0332
        gbc.setState(0x593f, 0xe537, 0xf2f0, 0x9ea7, 0x6d89, 0xa34c, 0x0, 0x1);
        gbc.writeMem(0x593f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe537, gbc.sp());
        EXPECT(0x5941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0333
        gbc.setState(0x9a5d, 0x193b, 0xdf20, 0x1ae3, 0x53a5, 0xfec6, 0x0, 0x1);
        gbc.writeMem(0x9a5d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x193b, gbc.sp());
        EXPECT(0x9a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a5d));
        EXPECT(0xb4, gbc.readMem(0x9a5e));
        // CB B4 0334
        gbc.setState(0x418b, 0xc216, 0x2c20, 0x398b, 0xa50, 0x6eef, 0x1, 0x0);
        gbc.writeMem(0x418b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc216, gbc.sp());
        EXPECT(0x418d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0335
        gbc.setState(0x4f97, 0xece1, 0x6430, 0xe765, 0x1bf9, 0x36c4, 0x0, 0x0);
        gbc.writeMem(0x4f97, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xece1, gbc.sp());
        EXPECT(0x4f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0336
        gbc.setState(0x5485, 0x6a4b, 0x97c0, 0x9c04, 0xd27d, 0x6718, 0x1, 0x1);
        gbc.writeMem(0x5485, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6a4b, gbc.sp());
        EXPECT(0x5487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0337
        gbc.setState(0x7c8a, 0x4b14, 0x9520, 0xc5a0, 0x1ea3, 0x841c, 0x1, 0x0);
        gbc.writeMem(0x7c8a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4b14, gbc.sp());
        EXPECT(0x7c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0338
        gbc.setState(0xc01f, 0x48ba, 0xa430, 0x9247, 0x6b9d, 0xc0c8, 0x0, 0x1);
        gbc.writeMem(0xc01f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x48ba, gbc.sp());
        EXPECT(0xc021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc01f));
        EXPECT(0xb4, gbc.readMem(0xc020));
        // CB B4 0339
        gbc.setState(0xcf4e, 0xc94b, 0x1dc0, 0xdda4, 0x7d46, 0x2ef5, 0x1, 0x0);
        gbc.writeMem(0xcf4e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc94b, gbc.sp());
        EXPECT(0xcf50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf4e));
        EXPECT(0xb4, gbc.readMem(0xcf4f));
        // CB B4 033A
        gbc.setState(0x30b2, 0xf927, 0x1630, 0xd474, 0x7745, 0xfa3d, 0x0, 0x0);
        gbc.writeMem(0x30b2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf927, gbc.sp());
        EXPECT(0x30b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 033B
        gbc.setState(0x9321, 0x3910, 0x9d10, 0x9699, 0xe609, 0xa910, 0x1, 0x0);
        gbc.writeMem(0x9321, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3910, gbc.sp());
        EXPECT(0x9323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9321));
        EXPECT(0xb4, gbc.readMem(0x9322));
        // CB B4 033C
        gbc.setState(0xeaf9, 0xfe82, 0x6db0, 0xddf3, 0xaa5, 0xdfc3, 0x0, 0x1);
        gbc.writeMem(0xeaf9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xfe82, gbc.sp());
        EXPECT(0xeafb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaf9));
        EXPECT(0xb4, gbc.readMem(0xeafa));
        // CB B4 033D
        gbc.setState(0x28cf, 0xcd4a, 0x9f0, 0x342b, 0xbb84, 0x884f, 0x1, 0x0);
        gbc.writeMem(0x28cf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xcd4a, gbc.sp());
        EXPECT(0x28d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 033E
        gbc.setState(0x662a, 0x7568, 0x7c60, 0xb39, 0x52c7, 0x659b, 0x0, 0x1);
        gbc.writeMem(0x662a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7568, gbc.sp());
        EXPECT(0x662c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 033F
        gbc.setState(0x82da, 0xb567, 0xc20, 0xb40a, 0x4d95, 0x34c, 0x0, 0x0);
        gbc.writeMem(0x82da, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb567, gbc.sp());
        EXPECT(0x82dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82da));
        EXPECT(0xb4, gbc.readMem(0x82db));
        // CB B4 0340
        gbc.setState(0xe545, 0x810b, 0x1a40, 0x3a7d, 0x333d, 0x3333, 0x0, 0x0);
        gbc.writeMem(0xe545, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x810b, gbc.sp());
        EXPECT(0xe547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe545));
        EXPECT(0xb4, gbc.readMem(0xe546));
        // CB B4 0341
        gbc.setState(0x306a, 0xd2b4, 0x7460, 0xce43, 0x6c38, 0xe34f, 0x0, 0x0);
        gbc.writeMem(0x306a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd2b4, gbc.sp());
        EXPECT(0x306c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0342
        gbc.setState(0x12f5, 0x118a, 0xb960, 0x3b1c, 0xdf8d, 0xf504, 0x1, 0x1);
        gbc.writeMem(0x12f5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x118a, gbc.sp());
        EXPECT(0x12f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0343
        gbc.setState(0xb3cd, 0xfea4, 0xc920, 0xa20d, 0xd065, 0xc21d, 0x1, 0x1);
        gbc.writeMem(0xb3cd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfea4, gbc.sp());
        EXPECT(0xb3cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3cd));
        EXPECT(0xb4, gbc.readMem(0xb3ce));
        // CB B4 0344
        gbc.setState(0xdf07, 0x4a0e, 0x7f00, 0x314c, 0x187c, 0x5f52, 0x0, 0x1);
        gbc.writeMem(0xdf07, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4a0e, gbc.sp());
        EXPECT(0xdf09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf07));
        EXPECT(0xb4, gbc.readMem(0xdf08));
        // CB B4 0345
        gbc.setState(0x6d66, 0x881, 0x45f0, 0xc7fd, 0x2ad3, 0x57b0, 0x1, 0x0);
        gbc.writeMem(0x6d66, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x881, gbc.sp());
        EXPECT(0x6d68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0346
        gbc.setState(0x104c, 0x4ca4, 0xfb60, 0xf706, 0xebe3, 0x861, 0x0, 0x0);
        gbc.writeMem(0x104c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4ca4, gbc.sp());
        EXPECT(0x104e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0347
        gbc.setState(0x40f6, 0x5c9b, 0xbb80, 0x1c38, 0x268c, 0xcb37, 0x0, 0x1);
        gbc.writeMem(0x40f6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5c9b, gbc.sp());
        EXPECT(0x40f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0348
        gbc.setState(0x119a, 0xa4ef, 0xaa0, 0xd2b3, 0x689b, 0x1e4c, 0x0, 0x1);
        gbc.writeMem(0x119a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa4ef, gbc.sp());
        EXPECT(0x119c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0349
        gbc.setState(0x22b1, 0xf728, 0xb350, 0x69e4, 0x684b, 0xbe6c, 0x1, 0x0);
        gbc.writeMem(0x22b1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf728, gbc.sp());
        EXPECT(0x22b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 034A
        gbc.setState(0x50d0, 0xab0d, 0x3400, 0x1e96, 0xb8db, 0x515f, 0x0, 0x1);
        gbc.writeMem(0x50d0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xab0d, gbc.sp());
        EXPECT(0x50d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 034B
        gbc.setState(0x8672, 0x9dfb, 0x5810, 0x5a94, 0xe546, 0x4e2, 0x1, 0x0);
        gbc.writeMem(0x8672, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9dfb, gbc.sp());
        EXPECT(0x8674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8672));
        EXPECT(0xb4, gbc.readMem(0x8673));
        // CB B4 034C
        gbc.setState(0x5f57, 0x2f41, 0x100, 0x2627, 0x8e5d, 0x427f, 0x0, 0x0);
        gbc.writeMem(0x5f57, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2f41, gbc.sp());
        EXPECT(0x5f59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 034E
        gbc.setState(0x7296, 0x2214, 0x94e0, 0xc600, 0xbbfe, 0x646, 0x1, 0x1);
        gbc.writeMem(0x7296, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2214, gbc.sp());
        EXPECT(0x7298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 034F
        gbc.setState(0xc5bc, 0x2c5, 0x9b70, 0x925, 0xa46d, 0x373d, 0x1, 0x0);
        gbc.writeMem(0xc5bc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2c5, gbc.sp());
        EXPECT(0xc5be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5bc));
        EXPECT(0xb4, gbc.readMem(0xc5bd));
        // CB B4 0350
        gbc.setState(0xa423, 0xdf8b, 0xfd10, 0x195d, 0xf2f0, 0xb386, 0x1, 0x0);
        gbc.writeMem(0xa423, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xdf8b, gbc.sp());
        EXPECT(0xa425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa423));
        EXPECT(0xb4, gbc.readMem(0xa424));
        // CB B4 0351
        gbc.setState(0xe184, 0xc6ab, 0x9960, 0x6add, 0xa983, 0x5022, 0x0, 0x0);
        gbc.writeMem(0xe184, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc6ab, gbc.sp());
        EXPECT(0xe186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe184));
        EXPECT(0xb4, gbc.readMem(0xe185));
        // CB B4 0352
        gbc.setState(0x11e8, 0xea0f, 0x7370, 0x6269, 0x5de6, 0xd1f, 0x0, 0x1);
        gbc.writeMem(0x11e8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xea0f, gbc.sp());
        EXPECT(0x11ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0353
        gbc.setState(0xbc06, 0x98ea, 0x4f10, 0xb0bc, 0xfc5a, 0x664b, 0x1, 0x0);
        gbc.writeMem(0xbc06, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x98ea, gbc.sp());
        EXPECT(0xbc08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc06));
        EXPECT(0xb4, gbc.readMem(0xbc07));
        // CB B4 0354
        gbc.setState(0x65f5, 0x9c0c, 0xf00, 0x886e, 0x5db, 0xb294, 0x0, 0x0);
        gbc.writeMem(0x65f5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9c0c, gbc.sp());
        EXPECT(0x65f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0355
        gbc.setState(0x522, 0xeb84, 0x7f70, 0x846e, 0xdb66, 0x8c02, 0x0, 0x0);
        gbc.writeMem(0x522, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xeb84, gbc.sp());
        EXPECT(0x524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0356
        gbc.setState(0x894e, 0x39e8, 0x80, 0x9064, 0x1d2b, 0x9b51, 0x0, 0x1);
        gbc.writeMem(0x894e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x39e8, gbc.sp());
        EXPECT(0x8950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x894e));
        EXPECT(0xb4, gbc.readMem(0x894f));
        // CB B4 0357
        gbc.setState(0x2c77, 0x16ec, 0x4e60, 0x3fba, 0xcf68, 0xda4f, 0x0, 0x0);
        gbc.writeMem(0x2c77, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x16ec, gbc.sp());
        EXPECT(0x2c79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0358
        gbc.setState(0x8c7, 0x5d96, 0x4770, 0xb62c, 0xd14a, 0xa330, 0x0, 0x1);
        gbc.writeMem(0x8c7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5d96, gbc.sp());
        EXPECT(0x8c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0359
        gbc.setState(0x4b65, 0x1129, 0x4140, 0xc230, 0x84bc, 0x4a8, 0x1, 0x1);
        gbc.writeMem(0x4b65, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1129, gbc.sp());
        EXPECT(0x4b67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 035A
        gbc.setState(0xab98, 0xecdb, 0x5a40, 0xb693, 0x4589, 0x6f34, 0x0, 0x1);
        gbc.writeMem(0xab98, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xecdb, gbc.sp());
        EXPECT(0xab9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab98));
        EXPECT(0xb4, gbc.readMem(0xab99));
        // CB B4 035B
        gbc.setState(0xc98e, 0x4fb5, 0x9150, 0xf069, 0x3241, 0xc1a4, 0x0, 0x1);
        gbc.writeMem(0xc98e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4fb5, gbc.sp());
        EXPECT(0xc990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc98e));
        EXPECT(0xb4, gbc.readMem(0xc98f));
        // CB B4 035C
        gbc.setState(0x85c, 0xb22c, 0xb720, 0x889e, 0x97b8, 0x84ac, 0x1, 0x1);
        gbc.writeMem(0x85c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb22c, gbc.sp());
        EXPECT(0x85e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 035D
        gbc.setState(0x3ddc, 0x58e5, 0x8dd0, 0x9343, 0x4336, 0xd012, 0x0, 0x1);
        gbc.writeMem(0x3ddc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x58e5, gbc.sp());
        EXPECT(0x3dde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 035E
        gbc.setState(0xa415, 0xf460, 0xf7f0, 0x12a5, 0x10eb, 0x435b, 0x0, 0x0);
        gbc.writeMem(0xa415, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf460, gbc.sp());
        EXPECT(0xa417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa415));
        EXPECT(0xb4, gbc.readMem(0xa416));
        // CB B4 035F
        gbc.setState(0x23dd, 0x9c08, 0x2030, 0xa0f0, 0x7e15, 0x10b5, 0x1, 0x0);
        gbc.writeMem(0x23dd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9c08, gbc.sp());
        EXPECT(0x23df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0360
        gbc.setState(0xe9d5, 0x477f, 0x9600, 0x103, 0x5b3f, 0x36ad, 0x1, 0x1);
        gbc.writeMem(0xe9d5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x477f, gbc.sp());
        EXPECT(0xe9d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9d5));
        EXPECT(0xb4, gbc.readMem(0xe9d6));
        // CB B4 0361
        gbc.setState(0xb9ab, 0xa70f, 0x1e30, 0x8cb2, 0x4880, 0xa301, 0x0, 0x0);
        gbc.writeMem(0xb9ab, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa70f, gbc.sp());
        EXPECT(0xb9ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9ab));
        EXPECT(0xb4, gbc.readMem(0xb9ac));
        // CB B4 0362
        gbc.setState(0x89cf, 0x9da2, 0x8e80, 0x7613, 0x62c0, 0xe46f, 0x0, 0x0);
        gbc.writeMem(0x89cf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9da2, gbc.sp());
        EXPECT(0x89d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89cf));
        EXPECT(0xb4, gbc.readMem(0x89d0));
        // CB B4 0363
        gbc.setState(0xa4b5, 0x3229, 0xee40, 0x47a5, 0x8bc, 0x7001, 0x1, 0x1);
        gbc.writeMem(0xa4b5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3229, gbc.sp());
        EXPECT(0xa4b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b5));
        EXPECT(0xb4, gbc.readMem(0xa4b6));
        // CB B4 0364
        gbc.setState(0xddb7, 0xfcd1, 0xc320, 0xd159, 0x9767, 0x4baa, 0x1, 0x0);
        gbc.writeMem(0xddb7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfcd1, gbc.sp());
        EXPECT(0xddb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddb7));
        EXPECT(0xb4, gbc.readMem(0xddb8));
        // CB B4 0365
        gbc.setState(0x7e33, 0x2610, 0xcc90, 0xdd90, 0x933, 0xc152, 0x1, 0x1);
        gbc.writeMem(0x7e33, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2610, gbc.sp());
        EXPECT(0x7e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0366
        gbc.setState(0x4fff, 0x8180, 0x1490, 0x8ae7, 0x1318, 0xfe21, 0x1, 0x1);
        gbc.writeMem(0x4fff, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8180, gbc.sp());
        EXPECT(0x5001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0367
        gbc.setState(0x7269, 0x3417, 0x2020, 0x2866, 0x7480, 0xb1ef, 0x1, 0x1);
        gbc.writeMem(0x7269, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3417, gbc.sp());
        EXPECT(0x726b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0368
        gbc.setState(0xb037, 0xf56c, 0x3830, 0x9def, 0x7e5f, 0x8171, 0x0, 0x0);
        gbc.writeMem(0xb037, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf56c, gbc.sp());
        EXPECT(0xb039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb037));
        EXPECT(0xb4, gbc.readMem(0xb038));
        // CB B4 0369
        gbc.setState(0x4911, 0xf675, 0x25c0, 0x3594, 0x2805, 0x6db8, 0x1, 0x1);
        gbc.writeMem(0x4911, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf675, gbc.sp());
        EXPECT(0x4913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 036A
        gbc.setState(0x8117, 0xe019, 0xf360, 0x82db, 0xdeb, 0x3a05, 0x0, 0x1);
        gbc.writeMem(0x8117, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe019, gbc.sp());
        EXPECT(0x8119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8117));
        EXPECT(0xb4, gbc.readMem(0x8118));
        // CB B4 036B
        gbc.setState(0x7edc, 0x363f, 0x6640, 0x3bd0, 0x8cda, 0x4395, 0x0, 0x1);
        gbc.writeMem(0x7edc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x363f, gbc.sp());
        EXPECT(0x7ede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 036C
        gbc.setState(0x83a9, 0x8b12, 0x1160, 0xb22c, 0x6a69, 0x11c2, 0x0, 0x1);
        gbc.writeMem(0x83a9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8b12, gbc.sp());
        EXPECT(0x83ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83a9));
        EXPECT(0xb4, gbc.readMem(0x83aa));
        // CB B4 036D
        gbc.setState(0x2cf, 0xefb3, 0xd6b0, 0xe2ce, 0x22ad, 0x72d3, 0x0, 0x0);
        gbc.writeMem(0x2cf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xefb3, gbc.sp());
        EXPECT(0x2d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 036E
        gbc.setState(0x42e1, 0xcc1a, 0x9440, 0xb0da, 0xd8d1, 0x985c, 0x1, 0x0);
        gbc.writeMem(0x42e1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xcc1a, gbc.sp());
        EXPECT(0x42e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 036F
        gbc.setState(0x63a6, 0x2eea, 0x9980, 0x1038, 0xbe0f, 0x780f, 0x0, 0x1);
        gbc.writeMem(0x63a6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2eea, gbc.sp());
        EXPECT(0x63a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0370
        gbc.setState(0x4a9a, 0xd2a, 0x5810, 0xaf99, 0x5d8b, 0x594a, 0x1, 0x0);
        gbc.writeMem(0x4a9a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd2a, gbc.sp());
        EXPECT(0x4a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0371
        gbc.setState(0x5d73, 0x5aa3, 0x6cb0, 0x7ffd, 0x5ec9, 0xd90a, 0x1, 0x0);
        gbc.writeMem(0x5d73, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5aa3, gbc.sp());
        EXPECT(0x5d75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0372
        gbc.setState(0x245, 0x36ff, 0x2880, 0x1a7b, 0x589c, 0x2a89, 0x1, 0x1);
        gbc.writeMem(0x245, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x36ff, gbc.sp());
        EXPECT(0x247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0373
        gbc.setState(0x8b02, 0x70c4, 0x2620, 0xf87b, 0xc4aa, 0x3cdc, 0x1, 0x1);
        gbc.writeMem(0x8b02, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x70c4, gbc.sp());
        EXPECT(0x8b04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b02));
        EXPECT(0xb4, gbc.readMem(0x8b03));
        // CB B4 0374
        gbc.setState(0xd750, 0xa70b, 0x1a00, 0x2416, 0xed7a, 0xdbc8, 0x1, 0x0);
        gbc.writeMem(0xd750, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa70b, gbc.sp());
        EXPECT(0xd752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd750));
        EXPECT(0xb4, gbc.readMem(0xd751));
        // CB B4 0375
        gbc.setState(0xd1db, 0xcbaf, 0x9830, 0xb3de, 0xe7da, 0x15b0, 0x0, 0x1);
        gbc.writeMem(0xd1db, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcbaf, gbc.sp());
        EXPECT(0xd1dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1db));
        EXPECT(0xb4, gbc.readMem(0xd1dc));
        // CB B4 0376
        gbc.setState(0xd48b, 0xd382, 0x20b0, 0xf6b4, 0xc583, 0xb6e8, 0x0, 0x0);
        gbc.writeMem(0xd48b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd382, gbc.sp());
        EXPECT(0xd48d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd48b));
        EXPECT(0xb4, gbc.readMem(0xd48c));
        // CB B4 0377
        gbc.setState(0xddaa, 0xb6b8, 0x5d10, 0x2fce, 0xdde7, 0x25ff, 0x1, 0x1);
        gbc.writeMem(0xddaa, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb6b8, gbc.sp());
        EXPECT(0xddac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddaa));
        EXPECT(0xb4, gbc.readMem(0xddab));
        // CB B4 0378
        gbc.setState(0x79b7, 0x9d49, 0x6dc0, 0xd605, 0x3eaa, 0x5b44, 0x1, 0x1);
        gbc.writeMem(0x79b7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9d49, gbc.sp());
        EXPECT(0x79b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0379
        gbc.setState(0x475a, 0x1184, 0xd5e0, 0x6626, 0xdeac, 0x17b2, 0x1, 0x0);
        gbc.writeMem(0x475a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1184, gbc.sp());
        EXPECT(0x475c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 037A
        gbc.setState(0xb92f, 0xd9d9, 0xecb0, 0xe35b, 0x9181, 0x2327, 0x1, 0x1);
        gbc.writeMem(0xb92f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd9d9, gbc.sp());
        EXPECT(0xb931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb92f));
        EXPECT(0xb4, gbc.readMem(0xb930));
        // CB B4 037B
        gbc.setState(0x8ae7, 0xb04a, 0x7b40, 0x4e00, 0x49f2, 0xe33a, 0x0, 0x1);
        gbc.writeMem(0x8ae7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb04a, gbc.sp());
        EXPECT(0x8ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae7));
        EXPECT(0xb4, gbc.readMem(0x8ae8));
        // CB B4 037C
        gbc.setState(0x308c, 0x2cec, 0xf330, 0x77ad, 0x95eb, 0x264f, 0x0, 0x0);
        gbc.writeMem(0x308c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2cec, gbc.sp());
        EXPECT(0x308e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 037D
        gbc.setState(0x9c11, 0x53fa, 0x2830, 0xf092, 0x2d4b, 0x7f32, 0x0, 0x0);
        gbc.writeMem(0x9c11, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x53fa, gbc.sp());
        EXPECT(0x9c13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c11));
        EXPECT(0xb4, gbc.readMem(0x9c12));
        // CB B4 037E
        gbc.setState(0x7c84, 0xa6c9, 0xbd00, 0x6cb3, 0x80af, 0x75a0, 0x1, 0x1);
        gbc.writeMem(0x7c84, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa6c9, gbc.sp());
        EXPECT(0x7c86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 037F
        gbc.setState(0xde4, 0x717f, 0xcc30, 0x4da6, 0x703e, 0x627d, 0x0, 0x1);
        gbc.writeMem(0xde4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x717f, gbc.sp());
        EXPECT(0xde6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0380
        gbc.setState(0xbc68, 0xbee7, 0xedc0, 0xdcf2, 0xa267, 0x3088, 0x0, 0x1);
        gbc.writeMem(0xbc68, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xbee7, gbc.sp());
        EXPECT(0xbc6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc68));
        EXPECT(0xb4, gbc.readMem(0xbc69));
        // CB B4 0381
        gbc.setState(0x82a8, 0x8ac7, 0x3000, 0xe1fc, 0x2e9b, 0x91fd, 0x1, 0x1);
        gbc.writeMem(0x82a8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8ac7, gbc.sp());
        EXPECT(0x82aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82a8));
        EXPECT(0xb4, gbc.readMem(0x82a9));
        // CB B4 0382
        gbc.setState(0x1166, 0x9457, 0xf4a0, 0x34e3, 0xb9d3, 0xefbf, 0x1, 0x1);
        gbc.writeMem(0x1166, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9457, gbc.sp());
        EXPECT(0x1168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0383
        gbc.setState(0x261, 0x8dde, 0x3040, 0x2de4, 0xf4ff, 0xf9cd, 0x0, 0x0);
        gbc.writeMem(0x261, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8dde, gbc.sp());
        EXPECT(0x263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0384
        gbc.setState(0x508d, 0x5bfc, 0xa780, 0x210f, 0x4b50, 0x3fd0, 0x0, 0x0);
        gbc.writeMem(0x508d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5bfc, gbc.sp());
        EXPECT(0x508f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0385
        gbc.setState(0xab52, 0x46a0, 0xe300, 0x8bdf, 0x963b, 0x64c6, 0x1, 0x0);
        gbc.writeMem(0xab52, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x46a0, gbc.sp());
        EXPECT(0xab54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab52));
        EXPECT(0xb4, gbc.readMem(0xab53));
        // CB B4 0386
        gbc.setState(0x18d5, 0x4a2f, 0x2f60, 0x2c9f, 0x4723, 0xec69, 0x1, 0x1);
        gbc.writeMem(0x18d5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4a2f, gbc.sp());
        EXPECT(0x18d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0387
        gbc.setState(0x6ef2, 0x1f07, 0xf920, 0xf092, 0x23c1, 0x2515, 0x0, 0x1);
        gbc.writeMem(0x6ef2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1f07, gbc.sp());
        EXPECT(0x6ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0388
        gbc.setState(0x20fc, 0x2ad1, 0x9090, 0x2542, 0xfcb3, 0x3ceb, 0x0, 0x0);
        gbc.writeMem(0x20fc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2ad1, gbc.sp());
        EXPECT(0x20fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0389
        gbc.setState(0xf18, 0xe43e, 0x1010, 0x2bca, 0x392f, 0xb8b, 0x1, 0x0);
        gbc.writeMem(0xf18, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe43e, gbc.sp());
        EXPECT(0xf1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 038A
        gbc.setState(0xb737, 0x40e1, 0x7db0, 0xbe8c, 0x175, 0x912, 0x1, 0x1);
        gbc.writeMem(0xb737, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x40e1, gbc.sp());
        EXPECT(0xb739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb737));
        EXPECT(0xb4, gbc.readMem(0xb738));
        // CB B4 038B
        gbc.setState(0x99d5, 0x7af9, 0x3d0, 0x7b52, 0x9c85, 0x3891, 0x0, 0x0);
        gbc.writeMem(0x99d5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7af9, gbc.sp());
        EXPECT(0x99d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99d5));
        EXPECT(0xb4, gbc.readMem(0x99d6));
        // CB B4 038C
        gbc.setState(0xbfae, 0xa50d, 0x6de0, 0x657a, 0x2e90, 0xc31b, 0x0, 0x0);
        gbc.writeMem(0xbfae, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa50d, gbc.sp());
        EXPECT(0xbfb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfae));
        EXPECT(0xb4, gbc.readMem(0xbfaf));
        // CB B4 038D
        gbc.setState(0x964f, 0x60a8, 0x6f60, 0x69c5, 0x60f1, 0x2496, 0x1, 0x0);
        gbc.writeMem(0x964f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x60a8, gbc.sp());
        EXPECT(0x9651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x964f));
        EXPECT(0xb4, gbc.readMem(0x9650));
        // CB B4 038E
        gbc.setState(0xaa47, 0x8962, 0x92c0, 0x6744, 0xb081, 0x6ff3, 0x0, 0x0);
        gbc.writeMem(0xaa47, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8962, gbc.sp());
        EXPECT(0xaa49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa47));
        EXPECT(0xb4, gbc.readMem(0xaa48));
        // CB B4 038F
        gbc.setState(0x6461, 0x3f23, 0xbdc0, 0x563, 0x5ffb, 0xfa7d, 0x0, 0x1);
        gbc.writeMem(0x6461, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3f23, gbc.sp());
        EXPECT(0x6463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0390
        gbc.setState(0x24eb, 0x11dc, 0x300, 0xca38, 0x48ee, 0x8cc0, 0x0, 0x1);
        gbc.writeMem(0x24eb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x11dc, gbc.sp());
        EXPECT(0x24ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0391
        gbc.setState(0xa6b6, 0xb200, 0xea70, 0xf650, 0x8c84, 0x4ece, 0x0, 0x0);
        gbc.writeMem(0xa6b6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb200, gbc.sp());
        EXPECT(0xa6b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b6));
        EXPECT(0xb4, gbc.readMem(0xa6b7));
        // CB B4 0392
        gbc.setState(0xab22, 0x724f, 0x1e80, 0x49d8, 0x5c80, 0x5719, 0x0, 0x1);
        gbc.writeMem(0xab22, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x724f, gbc.sp());
        EXPECT(0xab24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab22));
        EXPECT(0xb4, gbc.readMem(0xab23));
        // CB B4 0393
        gbc.setState(0x724f, 0xbca2, 0xf120, 0xd575, 0x4378, 0xd344, 0x0, 0x0);
        gbc.writeMem(0x724f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbca2, gbc.sp());
        EXPECT(0x7251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0394
        gbc.setState(0x940f, 0xd150, 0x1c70, 0xaee, 0xa02, 0xa2e4, 0x1, 0x0);
        gbc.writeMem(0x940f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd150, gbc.sp());
        EXPECT(0x9411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x940f));
        EXPECT(0xb4, gbc.readMem(0x9410));
        // CB B4 0395
        gbc.setState(0x7814, 0x9f19, 0xfc10, 0x1249, 0x3665, 0xafe2, 0x1, 0x0);
        gbc.writeMem(0x7814, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9f19, gbc.sp());
        EXPECT(0x7816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0396
        gbc.setState(0x8a29, 0x9edb, 0xfb40, 0xbfb4, 0x320f, 0x3e4b, 0x1, 0x1);
        gbc.writeMem(0x8a29, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9edb, gbc.sp());
        EXPECT(0x8a2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a29));
        EXPECT(0xb4, gbc.readMem(0x8a2a));
        // CB B4 0397
        gbc.setState(0x3859, 0xed81, 0xc5f0, 0xe7ea, 0xd530, 0xb366, 0x0, 0x1);
        gbc.writeMem(0x3859, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xed81, gbc.sp());
        EXPECT(0x385b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 0398
        gbc.setState(0x1245, 0xd96f, 0x2520, 0xabb5, 0xccfc, 0xe894, 0x1, 0x0);
        gbc.writeMem(0x1245, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd96f, gbc.sp());
        EXPECT(0x1247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 0399
        gbc.setState(0x43db, 0x934f, 0x8d80, 0x9b5e, 0x5136, 0x33c9, 0x0, 0x0);
        gbc.writeMem(0x43db, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x934f, gbc.sp());
        EXPECT(0x43dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 039A
        gbc.setState(0x68ce, 0xfe, 0xd8d0, 0x66cf, 0xa1d1, 0xe05c, 0x1, 0x0);
        gbc.writeMem(0x68ce, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfe, gbc.sp());
        EXPECT(0x68d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 039B
        gbc.setState(0xf8a, 0x4359, 0x3ed0, 0xbd59, 0xc484, 0xf0b2, 0x1, 0x0);
        gbc.writeMem(0xf8a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4359, gbc.sp());
        EXPECT(0xf8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 039C
        gbc.setState(0x932, 0xdf26, 0x3190, 0xc272, 0x3fae, 0x46b7, 0x1, 0x0);
        gbc.writeMem(0x932, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdf26, gbc.sp());
        EXPECT(0x934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 039D
        gbc.setState(0x7a2, 0x529e, 0x88d0, 0xba4c, 0x73e3, 0x58bd, 0x0, 0x1);
        gbc.writeMem(0x7a2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x529e, gbc.sp());
        EXPECT(0x7a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 039E
        gbc.setState(0x773d, 0xea83, 0xd000, 0xefc5, 0xb110, 0xb26f, 0x1, 0x0);
        gbc.writeMem(0x773d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xea83, gbc.sp());
        EXPECT(0x773f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 039F
        gbc.setState(0xed1d, 0x1d03, 0x4780, 0x2a18, 0xd9d2, 0x803c, 0x0, 0x1);
        gbc.writeMem(0xed1d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1d03, gbc.sp());
        EXPECT(0xed1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed1d));
        EXPECT(0xb4, gbc.readMem(0xed1e));
        // CB B4 03A0
        gbc.setState(0x7cdf, 0xc9ce, 0x57f0, 0xd444, 0x8c6a, 0x283c, 0x0, 0x0);
        gbc.writeMem(0x7cdf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc9ce, gbc.sp());
        EXPECT(0x7ce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 03A1
        gbc.setState(0x97c2, 0x3ef1, 0xf9f0, 0x29b4, 0xe14a, 0x522e, 0x0, 0x0);
        gbc.writeMem(0x97c2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3ef1, gbc.sp());
        EXPECT(0x97c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97c2));
        EXPECT(0xb4, gbc.readMem(0x97c3));
        // CB B4 03A2
        gbc.setState(0xbbc7, 0x45d6, 0xc460, 0xbdca, 0x2746, 0x3f83, 0x0, 0x1);
        gbc.writeMem(0xbbc7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x45d6, gbc.sp());
        EXPECT(0xbbc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc7));
        EXPECT(0xb4, gbc.readMem(0xbbc8));
        // CB B4 03A3
        gbc.setState(0xe671, 0x6427, 0xb4e0, 0x159c, 0x2332, 0xc457, 0x1, 0x1);
        gbc.writeMem(0xe671, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6427, gbc.sp());
        EXPECT(0xe673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe671));
        EXPECT(0xb4, gbc.readMem(0xe672));
        // CB B4 03A4
        gbc.setState(0xe35d, 0x1808, 0x2f80, 0x1c64, 0xde4b, 0x8903, 0x1, 0x0);
        gbc.writeMem(0xe35d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1808, gbc.sp());
        EXPECT(0xe35f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe35d));
        EXPECT(0xb4, gbc.readMem(0xe35e));
        // CB B4 03A5
        gbc.setState(0x93f8, 0x6583, 0x3c80, 0x78e4, 0x9410, 0x8c35, 0x0, 0x1);
        gbc.writeMem(0x93f8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6583, gbc.sp());
        EXPECT(0x93fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f8));
        EXPECT(0xb4, gbc.readMem(0x93f9));
        // CB B4 03A6
        gbc.setState(0xe501, 0x3aa9, 0x55f0, 0x6236, 0x8f8d, 0x9b60, 0x0, 0x1);
        gbc.writeMem(0xe501, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3aa9, gbc.sp());
        EXPECT(0xe503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe501));
        EXPECT(0xb4, gbc.readMem(0xe502));
        // CB B4 03A7
        gbc.setState(0xea41, 0x2ba1, 0x4910, 0xae79, 0x7856, 0xb85c, 0x0, 0x0);
        gbc.writeMem(0xea41, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2ba1, gbc.sp());
        EXPECT(0xea43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea41));
        EXPECT(0xb4, gbc.readMem(0xea42));
        // CB B4 03A8
        gbc.setState(0xc74e, 0xb8c9, 0x6a60, 0xb454, 0x7cd, 0xfd15, 0x1, 0x0);
        gbc.writeMem(0xc74e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb8c9, gbc.sp());
        EXPECT(0xc750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc74e));
        EXPECT(0xb4, gbc.readMem(0xc74f));
        // CB B4 03A9
        gbc.setState(0x4a1c, 0x1dc1, 0x1ff0, 0xd702, 0x6a8, 0x5a63, 0x1, 0x1);
        gbc.writeMem(0x4a1c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1dc1, gbc.sp());
        EXPECT(0x4a1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 03AA
        gbc.setState(0xf2e, 0x6e20, 0x2570, 0xd3ea, 0xf3e7, 0x9a6c, 0x1, 0x1);
        gbc.writeMem(0xf2e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6e20, gbc.sp());
        EXPECT(0xf30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 03AB
        gbc.setState(0xbdb2, 0xc6d2, 0xdc60, 0xbcff, 0xb6b, 0xaa5e, 0x1, 0x0);
        gbc.writeMem(0xbdb2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc6d2, gbc.sp());
        EXPECT(0xbdb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb2));
        EXPECT(0xb4, gbc.readMem(0xbdb3));
        // CB B4 03AC
        gbc.setState(0x1e4e, 0xfb89, 0x9840, 0xa0ea, 0x5791, 0x690, 0x0, 0x0);
        gbc.writeMem(0x1e4e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xfb89, gbc.sp());
        EXPECT(0x1e50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 03AD
        gbc.setState(0x7773, 0x3e89, 0x1270, 0x37f, 0xfc3d, 0x6992, 0x1, 0x0);
        gbc.writeMem(0x7773, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3e89, gbc.sp());
        EXPECT(0x7775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 03AE
        gbc.setState(0xe151, 0xed2b, 0x42b0, 0xb8e9, 0x3920, 0x85ca, 0x0, 0x1);
        gbc.writeMem(0xe151, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xed2b, gbc.sp());
        EXPECT(0xe153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe151));
        EXPECT(0xb4, gbc.readMem(0xe152));
        // CB B4 03AF
        gbc.setState(0x10cb, 0x908d, 0x6cb0, 0x8ee2, 0xdde3, 0xe534, 0x0, 0x1);
        gbc.writeMem(0x10cb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x908d, gbc.sp());
        EXPECT(0x10cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 03B0
        gbc.setState(0x8e3a, 0x68a, 0x3860, 0x842d, 0xfad7, 0xedcc, 0x1, 0x0);
        gbc.writeMem(0x8e3a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x68a, gbc.sp());
        EXPECT(0x8e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e3a));
        EXPECT(0xb4, gbc.readMem(0x8e3b));
        // CB B4 03B1
        gbc.setState(0x21a, 0xbc19, 0xb2e0, 0x4367, 0x88ae, 0xce3b, 0x0, 0x1);
        gbc.writeMem(0x21a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbc19, gbc.sp());
        EXPECT(0x21c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 03B2
        gbc.setState(0x422f, 0x2eca, 0x7410, 0x68a8, 0xf60c, 0x2cc0, 0x0, 0x0);
        gbc.writeMem(0x422f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2eca, gbc.sp());
        EXPECT(0x4231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 03B3
        gbc.setState(0x2f07, 0x45eb, 0xaf60, 0xc7c9, 0x32c1, 0xe532, 0x0, 0x1);
        gbc.writeMem(0x2f07, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x45eb, gbc.sp());
        EXPECT(0x2f09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 03B4
        gbc.setState(0x544d, 0x6c42, 0xd840, 0x458e, 0xf56f, 0x5986, 0x1, 0x0);
        gbc.writeMem(0x544d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6c42, gbc.sp());
        EXPECT(0x544f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 03B5
        gbc.setState(0x380, 0x355e, 0xf290, 0xc8bd, 0x16f8, 0x44b, 0x0, 0x1);
        gbc.writeMem(0x380, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x355e, gbc.sp());
        EXPECT(0x382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 03B6
        gbc.setState(0x9e15, 0x6953, 0x5f30, 0xdf45, 0x202a, 0x4ee0, 0x0, 0x1);
        gbc.writeMem(0x9e15, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6953, gbc.sp());
        EXPECT(0x9e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e15));
        EXPECT(0xb4, gbc.readMem(0x9e16));
        // CB B4 03B7
        gbc.setState(0xdc14, 0xab4c, 0x8150, 0xadb9, 0xccda, 0x7568, 0x0, 0x1);
        gbc.writeMem(0xdc14, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xab4c, gbc.sp());
        EXPECT(0xdc16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc14));
        EXPECT(0xb4, gbc.readMem(0xdc15));
        // CB B4 03B8
        gbc.setState(0x62ab, 0xdff1, 0xfdf0, 0x621, 0x193f, 0x6fbb, 0x0, 0x0);
        gbc.writeMem(0x62ab, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdff1, gbc.sp());
        EXPECT(0x62ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 03B9
        gbc.setState(0x8e25, 0x392b, 0x5f50, 0x8755, 0x7c04, 0x6d1a, 0x0, 0x0);
        gbc.writeMem(0x8e25, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x392b, gbc.sp());
        EXPECT(0x8e27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e25));
        EXPECT(0xb4, gbc.readMem(0x8e26));
        // CB B4 03BA
        gbc.setState(0x3a5, 0x203f, 0x2510, 0x6496, 0xda6e, 0xe87d, 0x1, 0x1);
        gbc.writeMem(0x3a5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x203f, gbc.sp());
        EXPECT(0x3a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 03BB
        gbc.setState(0x44f0, 0x54b9, 0x3b20, 0x190b, 0xb1e0, 0xec15, 0x0, 0x0);
        gbc.writeMem(0x44f0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x54b9, gbc.sp());
        EXPECT(0x44f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 03BC
        gbc.setState(0x72c1, 0x5ddd, 0xbf40, 0xe53d, 0x454e, 0x3493, 0x1, 0x1);
        gbc.writeMem(0x72c1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5ddd, gbc.sp());
        EXPECT(0x72c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 03BD
        gbc.setState(0xbe02, 0xfa9b, 0xab90, 0x27c4, 0xc8b3, 0x2471, 0x0, 0x0);
        gbc.writeMem(0xbe02, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfa9b, gbc.sp());
        EXPECT(0xbe04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe02));
        EXPECT(0xb4, gbc.readMem(0xbe03));
        // CB B4 03BE
        gbc.setState(0x9196, 0x7d39, 0xd4a0, 0x35c7, 0x7e1b, 0x8a5c, 0x1, 0x0);
        gbc.writeMem(0x9196, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7d39, gbc.sp());
        EXPECT(0x9198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9196));
        EXPECT(0xb4, gbc.readMem(0x9197));
        // CB B4 03BF
        gbc.setState(0x175b, 0x4f15, 0xe3a0, 0x3f58, 0x4281, 0xee9e, 0x0, 0x1);
        gbc.writeMem(0x175b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4f15, gbc.sp());
        EXPECT(0x175d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 03C0
        gbc.setState(0x27bf, 0x1f9, 0x6480, 0x89b5, 0xe66a, 0x9c32, 0x1, 0x0);
        gbc.writeMem(0x27bf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1f9, gbc.sp());
        EXPECT(0x27c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 03C1
        gbc.setState(0x6952, 0xdb25, 0x7bb0, 0xb0ea, 0x6369, 0x9b9b, 0x1, 0x1);
        gbc.writeMem(0x6952, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdb25, gbc.sp());
        EXPECT(0x6954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 03C2
        gbc.setState(0x64b9, 0xe535, 0x8160, 0xbbdf, 0xcff3, 0x963c, 0x0, 0x0);
        gbc.writeMem(0x64b9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe535, gbc.sp());
        EXPECT(0x64bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 03C3
        gbc.setState(0x8d64, 0x923c, 0xcc70, 0x826b, 0x8695, 0xa3e3, 0x1, 0x0);
        gbc.writeMem(0x8d64, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x923c, gbc.sp());
        EXPECT(0x8d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d64));
        EXPECT(0xb4, gbc.readMem(0x8d65));
        // CB B4 03C4
        gbc.setState(0x63c, 0x6a23, 0x380, 0x1893, 0xb33c, 0x68a3, 0x0, 0x1);
        gbc.writeMem(0x63c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6a23, gbc.sp());
        EXPECT(0x63e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 03C5
        gbc.setState(0x1529, 0xb772, 0x4460, 0x70fc, 0xda59, 0x83e8, 0x0, 0x0);
        gbc.writeMem(0x1529, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb772, gbc.sp());
        EXPECT(0x152b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 03C6
        gbc.setState(0xba22, 0xcde0, 0x9450, 0x2960, 0x4eb4, 0xbbbf, 0x0, 0x1);
        gbc.writeMem(0xba22, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcde0, gbc.sp());
        EXPECT(0xba24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba22));
        EXPECT(0xb4, gbc.readMem(0xba23));
        // CB B4 03C7
        gbc.setState(0x7b28, 0xf606, 0x8780, 0xd100, 0x8ea6, 0x361, 0x0, 0x1);
        gbc.writeMem(0x7b28, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf606, gbc.sp());
        EXPECT(0x7b2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 03C8
        gbc.setState(0xac9e, 0x129d, 0x5220, 0x8520, 0x8017, 0xf4e, 0x1, 0x0);
        gbc.writeMem(0xac9e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x129d, gbc.sp());
        EXPECT(0xaca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac9e));
        EXPECT(0xb4, gbc.readMem(0xac9f));
        // CB B4 03C9
        gbc.setState(0x1e36, 0xf3fd, 0x3ae0, 0xb950, 0x14ba, 0x7f88, 0x0, 0x1);
        gbc.writeMem(0x1e36, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf3fd, gbc.sp());
        EXPECT(0x1e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 03CA
        gbc.setState(0x8411, 0xd193, 0x12f0, 0xad93, 0x9e9e, 0x1ded, 0x1, 0x0);
        gbc.writeMem(0x8411, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd193, gbc.sp());
        EXPECT(0x8413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8411));
        EXPECT(0xb4, gbc.readMem(0x8412));
        // CB B4 03CB
        gbc.setState(0xe0c4, 0x9d9b, 0x12d0, 0xacf1, 0x39be, 0x8b0b, 0x1, 0x1);
        gbc.writeMem(0xe0c4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9d9b, gbc.sp());
        EXPECT(0xe0c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0c4));
        EXPECT(0xb4, gbc.readMem(0xe0c5));
        // CB B4 03CC
        gbc.setState(0xba4b, 0x7570, 0x6e00, 0xf61f, 0x89fc, 0x72d4, 0x0, 0x0);
        gbc.writeMem(0xba4b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7570, gbc.sp());
        EXPECT(0xba4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba4b));
        EXPECT(0xb4, gbc.readMem(0xba4c));
        // CB B4 03CE
        gbc.setState(0xd1bd, 0xe31, 0x1320, 0x147a, 0x210, 0xbb7b, 0x0, 0x1);
        gbc.writeMem(0xd1bd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe31, gbc.sp());
        EXPECT(0xd1bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1bd));
        EXPECT(0xb4, gbc.readMem(0xd1be));
        // CB B4 03CF
        gbc.setState(0x3c03, 0xb4d1, 0xd630, 0x53aa, 0x6820, 0xf5a7, 0x0, 0x0);
        gbc.writeMem(0x3c03, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb4d1, gbc.sp());
        EXPECT(0x3c05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 03D0
        gbc.setState(0xcfa8, 0x991c, 0xb0a0, 0xec17, 0x974b, 0x542a, 0x1, 0x0);
        gbc.writeMem(0xcfa8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x991c, gbc.sp());
        EXPECT(0xcfaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfa8));
        EXPECT(0xb4, gbc.readMem(0xcfa9));
        // CB B4 03D1
        gbc.setState(0x8dc2, 0x429, 0x300, 0x949e, 0x2616, 0xcc99, 0x0, 0x1);
        gbc.writeMem(0x8dc2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x429, gbc.sp());
        EXPECT(0x8dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc2));
        EXPECT(0xb4, gbc.readMem(0x8dc3));
        // CB B4 03D2
        gbc.setState(0x72cd, 0xbb30, 0xc1a0, 0x40ad, 0x79af, 0xb893, 0x1, 0x0);
        gbc.writeMem(0x72cd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xbb30, gbc.sp());
        EXPECT(0x72cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 03D3
        gbc.setState(0xc7fb, 0xa16, 0x39a0, 0xdb58, 0x5016, 0x7c2c, 0x1, 0x1);
        gbc.writeMem(0xc7fb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa16, gbc.sp());
        EXPECT(0xc7fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7fb));
        EXPECT(0xb4, gbc.readMem(0xc7fc));
        // CB B4 03D4
        gbc.setState(0xe8be, 0x664c, 0xb5c0, 0x28d1, 0xe6b0, 0x7894, 0x1, 0x1);
        gbc.writeMem(0xe8be, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x664c, gbc.sp());
        EXPECT(0xe8c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8be));
        EXPECT(0xb4, gbc.readMem(0xe8bf));
        // CB B4 03D5
        gbc.setState(0xb50b, 0xd555, 0xca80, 0xc827, 0xb0d0, 0xd5c7, 0x1, 0x0);
        gbc.writeMem(0xb50b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd555, gbc.sp());
        EXPECT(0xb50d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb50b));
        EXPECT(0xb4, gbc.readMem(0xb50c));
        // CB B4 03D6
        gbc.setState(0x961c, 0x297e, 0x7c70, 0x8dc, 0x9e8e, 0x652e, 0x0, 0x0);
        gbc.writeMem(0x961c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x297e, gbc.sp());
        EXPECT(0x961e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x961c));
        EXPECT(0xb4, gbc.readMem(0x961d));
        // CB B4 03D7
        gbc.setState(0xc0c9, 0x179d, 0x290, 0xd234, 0x5c5, 0xf54a, 0x0, 0x0);
        gbc.writeMem(0xc0c9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x179d, gbc.sp());
        EXPECT(0xc0cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0c9));
        EXPECT(0xb4, gbc.readMem(0xc0ca));
        // CB B4 03D8
        gbc.setState(0xab79, 0xbae6, 0x74d0, 0x96c7, 0x94d0, 0x6e1b, 0x0, 0x0);
        gbc.writeMem(0xab79, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbae6, gbc.sp());
        EXPECT(0xab7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab79));
        EXPECT(0xb4, gbc.readMem(0xab7a));
        // CB B4 03D9
        gbc.setState(0x696d, 0x7eab, 0x73f0, 0xffbb, 0x26e8, 0xf8c8, 0x1, 0x0);
        gbc.writeMem(0x696d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7eab, gbc.sp());
        EXPECT(0x696f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 03DA
        gbc.setState(0x50bb, 0x3837, 0xfdf0, 0x83d7, 0x1c21, 0x26ee, 0x0, 0x1);
        gbc.writeMem(0x50bb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3837, gbc.sp());
        EXPECT(0x50bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 03DB
        gbc.setState(0x3b06, 0x246e, 0x88f0, 0x21fb, 0x1c0b, 0x5beb, 0x0, 0x0);
        gbc.writeMem(0x3b06, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x246e, gbc.sp());
        EXPECT(0x3b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 03DC
        gbc.setState(0x741c, 0xf2af, 0xb5f0, 0xc34b, 0x60b5, 0x5d84, 0x1, 0x1);
        gbc.writeMem(0x741c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf2af, gbc.sp());
        EXPECT(0x741e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 03DD
        gbc.setState(0x2644, 0xd276, 0x5be0, 0x25d8, 0x2c5e, 0x8e47, 0x1, 0x0);
        gbc.writeMem(0x2644, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd276, gbc.sp());
        EXPECT(0x2646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 03DE
        gbc.setState(0x5cdf, 0xd11a, 0xb940, 0x9821, 0x9e0c, 0x0, 0x1, 0x0);
        gbc.writeMem(0x5cdf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd11a, gbc.sp());
        EXPECT(0x5ce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 03DF
        gbc.setState(0xdaa8, 0x747a, 0xa8d0, 0xeb3b, 0xf6ac, 0x209a, 0x1, 0x0);
        gbc.writeMem(0xdaa8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x747a, gbc.sp());
        EXPECT(0xdaaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaa8));
        EXPECT(0xb4, gbc.readMem(0xdaa9));
        // CB B4 03E0
        gbc.setState(0x5fcc, 0x4750, 0x320, 0xa279, 0xe10f, 0xb3e5, 0x0, 0x1);
        gbc.writeMem(0x5fcc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4750, gbc.sp());
        EXPECT(0x5fce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 03E1
        gbc.setState(0x269c, 0x4a1c, 0xe3e0, 0xf8d8, 0x1266, 0x6d41, 0x1, 0x1);
        gbc.writeMem(0x269c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4a1c, gbc.sp());
        EXPECT(0x269e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 03E2
        gbc.setState(0x6707, 0xcf30, 0xf330, 0x8d5, 0xbcd2, 0xab3d, 0x1, 0x1);
        gbc.writeMem(0x6707, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xcf30, gbc.sp());
        EXPECT(0x6709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B4 03E3
        gbc.setState(0xde5d, 0x15a3, 0x7aa0, 0x3b29, 0xa128, 0xe313, 0x1, 0x0);
        gbc.writeMem(0xde5d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x15a3, gbc.sp());
        EXPECT(0xde5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde5d));
        EXPECT(0xb4, gbc.readMem(0xde5e));
        // CB B4 03E4
        gbc.setState(0x6ffb, 0xca79, 0x35a0, 0x2ada, 0xfc52, 0x27ef, 0x0, 0x0);
        gbc.writeMem(0x6ffb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xca79, gbc.sp());
        EXPECT(0x6ffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B4 03E5
        gbc.setState(0x8fd8, 0xad7b, 0x2c60, 0x96bf, 0xc2c6, 0xb91d, 0x0, 0x1);
        gbc.writeMem(0x8fd8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xad7b, gbc.sp());
        EXPECT(0x8fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fd8));
        EXPECT(0xb4, gbc.readMem(0x8fd9));
        // CB B4 03E6
        gbc.setState(0xad4d, 0xb16a, 0x7e70, 0x54dd, 0x5733, 0x8013, 0x1, 0x0);
        gbc.writeMem(0xad4d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb16a, gbc.sp());
        EXPECT(0xad4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad4d));
        EXPECT(0xb4, gbc.readMem(0xad4e));
        // CB B4 03E7
        gbc.setState(0xd01a, 0xec4e, 0xb1e0, 0xca95, 0x4cf2, 0x92ad, 0x1, 0x1);
        gbc.writeMem(0xd01a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xec4e, gbc.sp());
        EXPECT(0xd01c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd01a));
        EXPECT(0xb4, gbc.readMem(0xd01b));
    }
