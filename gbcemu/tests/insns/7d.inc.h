    TEST(gbcemu, opcode_7d) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 7D 0000
        gbc.setState(0x9c4, 0xb197, 0xae20, 0x304, 0xa3a3, 0xc16a, 0x0, 0x1);
        gbc.writeMem(0x9c4, { 0x7d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb197, gbc.sp());
        EXPECT(0x9c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0001
        gbc.setState(0xb16c, 0x7b81, 0x880, 0x6f0b, 0x9735, 0xb0bb, 0x0, 0x0);
        gbc.writeMem(0xb16c, { 0x7d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7b81, gbc.sp());
        EXPECT(0xb16d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb16c));
        // 7D 0002
        gbc.setState(0xc16b, 0xf85b, 0xa8c0, 0xe950, 0xcaa0, 0xf79b, 0x0, 0x1);
        gbc.writeMem(0xc16b, { 0x7d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf85b, gbc.sp());
        EXPECT(0xc16c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc16b));
        // 7D 0003
        gbc.setState(0xaf7b, 0x2597, 0x4590, 0xb5be, 0x92ce, 0x3cad, 0x1, 0x0);
        gbc.writeMem(0xaf7b, { 0x7d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2597, gbc.sp());
        EXPECT(0xaf7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xaf7b));
        // 7D 0004
        gbc.setState(0x238e, 0x9e5e, 0xd6b0, 0x4ef3, 0x6f72, 0x2e18, 0x1, 0x1);
        gbc.writeMem(0x238e, { 0x7d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9e5e, gbc.sp());
        EXPECT(0x238f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0005
        gbc.setState(0xd2ca, 0xf568, 0x7490, 0x4b68, 0x8685, 0xce7c, 0x0, 0x0);
        gbc.writeMem(0xd2ca, { 0x7d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf568, gbc.sp());
        EXPECT(0xd2cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd2ca));
        // 7D 0006
        gbc.setState(0xa472, 0xda58, 0x61c0, 0xefe1, 0x6dfb, 0x4754, 0x1, 0x0);
        gbc.writeMem(0xa472, { 0x7d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xda58, gbc.sp());
        EXPECT(0xa473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa472));
        // 7D 0007
        gbc.setState(0xbfd9, 0xebce, 0xf040, 0x32ec, 0x63bf, 0x8383, 0x0, 0x1);
        gbc.writeMem(0xbfd9, { 0x7d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xebce, gbc.sp());
        EXPECT(0xbfda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xbfd9));
        // 7D 0008
        gbc.setState(0x48be, 0x43c, 0xbd40, 0x9d72, 0xad97, 0xe149, 0x1, 0x0);
        gbc.writeMem(0x48be, { 0x7d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x43c, gbc.sp());
        EXPECT(0x48bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0009
        gbc.setState(0xddaa, 0xcb5d, 0xfe00, 0x8131, 0xe305, 0xecae, 0x0, 0x1);
        gbc.writeMem(0xddaa, { 0x7d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xcb5d, gbc.sp());
        EXPECT(0xddab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xddaa));
        // 7D 000A
        gbc.setState(0x8b97, 0xa52, 0x450, 0x5724, 0xd3c7, 0x24e9, 0x1, 0x0);
        gbc.writeMem(0x8b97, { 0x7d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa52, gbc.sp());
        EXPECT(0x8b98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8b97));
        // 7D 000B
        gbc.setState(0x7d74, 0xf22a, 0x96a0, 0xd775, 0x3ea6, 0x8df3, 0x0, 0x1);
        gbc.writeMem(0x7d74, { 0x7d });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf22a, gbc.sp());
        EXPECT(0x7d75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 000C
        gbc.setState(0x34aa, 0xe0fd, 0xe880, 0xddc3, 0x78d1, 0x912, 0x1, 0x0);
        gbc.writeMem(0x34aa, { 0x7d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe0fd, gbc.sp());
        EXPECT(0x34ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 000D
        gbc.setState(0xda22, 0x8407, 0x4c70, 0x3c45, 0xe08c, 0x74b8, 0x0, 0x1);
        gbc.writeMem(0xda22, { 0x7d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8407, gbc.sp());
        EXPECT(0xda23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xda22));
        // 7D 000F
        gbc.setState(0x1e58, 0x6186, 0x3620, 0x7e7f, 0x6d8d, 0xbd20, 0x0, 0x1);
        gbc.writeMem(0x1e58, { 0x7d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6186, gbc.sp());
        EXPECT(0x1e59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0010
        gbc.setState(0x3e5f, 0x97b7, 0x33f0, 0x863, 0x10e4, 0xf347, 0x0, 0x0);
        gbc.writeMem(0x3e5f, { 0x7d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x97b7, gbc.sp());
        EXPECT(0x3e60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0011
        gbc.setState(0xd6fe, 0xba8d, 0xeea0, 0x898c, 0x61f7, 0x3bc1, 0x0, 0x0);
        gbc.writeMem(0xd6fe, { 0x7d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xba8d, gbc.sp());
        EXPECT(0xd6ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd6fe));
        // 7D 0012
        gbc.setState(0x4c30, 0x6ce, 0xf9f0, 0xe99c, 0xba1a, 0x5aa6, 0x1, 0x1);
        gbc.writeMem(0x4c30, { 0x7d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6ce, gbc.sp());
        EXPECT(0x4c31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0013
        gbc.setState(0x6ee9, 0x29c, 0x7ca0, 0xee54, 0x895f, 0xb377, 0x1, 0x1);
        gbc.writeMem(0x6ee9, { 0x7d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x29c, gbc.sp());
        EXPECT(0x6eea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0014
        gbc.setState(0x13ce, 0x7afd, 0x69b0, 0x969f, 0x3265, 0x4f8e, 0x1, 0x1);
        gbc.writeMem(0x13ce, { 0x7d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7afd, gbc.sp());
        EXPECT(0x13cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0015
        gbc.setState(0xad29, 0x78dd, 0xe820, 0x2aee, 0x5925, 0x120f, 0x0, 0x0);
        gbc.writeMem(0xad29, { 0x7d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x78dd, gbc.sp());
        EXPECT(0xad2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xad29));
        // 7D 0016
        gbc.setState(0x9862, 0xa7bc, 0x2660, 0xcb3e, 0xc0a8, 0xed2, 0x0, 0x1);
        gbc.writeMem(0x9862, { 0x7d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa7bc, gbc.sp());
        EXPECT(0x9863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9862));
        // 7D 0017
        gbc.setState(0x546c, 0x6f45, 0x9020, 0x1b8d, 0x7b20, 0x859b, 0x1, 0x0);
        gbc.writeMem(0x546c, { 0x7d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6f45, gbc.sp());
        EXPECT(0x546d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0018
        gbc.setState(0x4d84, 0x47a1, 0x9950, 0x62b6, 0x800d, 0xc6bd, 0x1, 0x0);
        gbc.writeMem(0x4d84, { 0x7d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x47a1, gbc.sp());
        EXPECT(0x4d85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0019
        gbc.setState(0x4281, 0x2125, 0x6c50, 0x4be, 0x902b, 0x159f, 0x1, 0x0);
        gbc.writeMem(0x4281, { 0x7d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2125, gbc.sp());
        EXPECT(0x4282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 001A
        gbc.setState(0xe89c, 0xf223, 0xf6a0, 0x9afb, 0x24b5, 0xc2fe, 0x1, 0x0);
        gbc.writeMem(0xe89c, { 0x7d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf223, gbc.sp());
        EXPECT(0xe89d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe89c));
        // 7D 001B
        gbc.setState(0xc685, 0x8041, 0xb980, 0xb83d, 0x937e, 0x5a79, 0x1, 0x0);
        gbc.writeMem(0xc685, { 0x7d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8041, gbc.sp());
        EXPECT(0xc686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc685));
        // 7D 001C
        gbc.setState(0xac20, 0x4f, 0xb50, 0x2dc0, 0xfada, 0x5bf6, 0x0, 0x0);
        gbc.writeMem(0xac20, { 0x7d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4f, gbc.sp());
        EXPECT(0xac21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xac20));
        // 7D 001E
        gbc.setState(0x7809, 0x988c, 0x1e10, 0x6683, 0xc0c3, 0x7094, 0x1, 0x0);
        gbc.writeMem(0x7809, { 0x7d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x988c, gbc.sp());
        EXPECT(0x780a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 001F
        gbc.setState(0xd972, 0xdd45, 0x4e10, 0x5237, 0xfc5d, 0xbdc9, 0x0, 0x1);
        gbc.writeMem(0xd972, { 0x7d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdd45, gbc.sp());
        EXPECT(0xd973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd972));
        // 7D 0020
        gbc.setState(0x1af7, 0x8f1a, 0x4b00, 0xcda8, 0x8d0e, 0x7a83, 0x0, 0x0);
        gbc.writeMem(0x1af7, { 0x7d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8f1a, gbc.sp());
        EXPECT(0x1af8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0021
        gbc.setState(0xcccd, 0x23f0, 0xa880, 0x7f77, 0xa048, 0xb8c8, 0x0, 0x1);
        gbc.writeMem(0xcccd, { 0x7d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x23f0, gbc.sp());
        EXPECT(0xccce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xcccd));
        // 7D 0022
        gbc.setState(0x581f, 0x8162, 0x27a0, 0xfc40, 0x7f25, 0x13c9, 0x1, 0x0);
        gbc.writeMem(0x581f, { 0x7d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8162, gbc.sp());
        EXPECT(0x5820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0023
        gbc.setState(0x2e, 0xcdb6, 0x9650, 0x972d, 0x5aaa, 0x5438, 0x1, 0x1);
        gbc.writeMem(0x2e, { 0x7d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcdb6, gbc.sp());
        EXPECT(0x2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0024
        gbc.setState(0x3809, 0xc081, 0xc510, 0x3cfd, 0xedcc, 0x228d, 0x1, 0x1);
        gbc.writeMem(0x3809, { 0x7d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc081, gbc.sp());
        EXPECT(0x380a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0025
        gbc.setState(0xdfed, 0x2495, 0x290, 0x7981, 0x887a, 0x7383, 0x0, 0x1);
        gbc.writeMem(0xdfed, { 0x7d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2495, gbc.sp());
        EXPECT(0xdfee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xdfed));
        // 7D 0026
        gbc.setState(0x14d6, 0x1f88, 0x6c40, 0x7fb, 0xe613, 0xda16, 0x1, 0x1);
        gbc.writeMem(0x14d6, { 0x7d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1f88, gbc.sp());
        EXPECT(0x14d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0027
        gbc.setState(0x2c7d, 0x62d5, 0xdbc0, 0x587b, 0x3154, 0x8837, 0x0, 0x1);
        gbc.writeMem(0x2c7d, { 0x7d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x62d5, gbc.sp());
        EXPECT(0x2c7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0028
        gbc.setState(0x30d9, 0xd17a, 0xa7e0, 0x4295, 0x1187, 0x9c47, 0x0, 0x0);
        gbc.writeMem(0x30d9, { 0x7d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd17a, gbc.sp());
        EXPECT(0x30da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0029
        gbc.setState(0x2119, 0x7104, 0xa4f0, 0xe91e, 0xec30, 0xcb27, 0x0, 0x1);
        gbc.writeMem(0x2119, { 0x7d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7104, gbc.sp());
        EXPECT(0x211a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 002A
        gbc.setState(0x5c3f, 0xdf2, 0x9c80, 0x2baf, 0x9e44, 0xb0ed, 0x0, 0x0);
        gbc.writeMem(0x5c3f, { 0x7d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xdf2, gbc.sp());
        EXPECT(0x5c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 002C
        gbc.setState(0xe1d4, 0xeb00, 0x1c0, 0x70bc, 0x1d0e, 0x2993, 0x0, 0x1);
        gbc.writeMem(0xe1d4, { 0x7d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xeb00, gbc.sp());
        EXPECT(0xe1d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe1d4));
        // 7D 002D
        gbc.setState(0x791c, 0x8aa1, 0xf000, 0x94b3, 0x3d2d, 0xf66, 0x1, 0x0);
        gbc.writeMem(0x791c, { 0x7d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8aa1, gbc.sp());
        EXPECT(0x791d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 002F
        gbc.setState(0xc83e, 0xf9ca, 0xd5f0, 0xe2a7, 0x26f0, 0x218c, 0x1, 0x1);
        gbc.writeMem(0xc83e, { 0x7d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf9ca, gbc.sp());
        EXPECT(0xc83f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc83e));
        // 7D 0030
        gbc.setState(0x4a84, 0xcc4f, 0x2dd0, 0x117c, 0xb6b7, 0x3839, 0x1, 0x0);
        gbc.writeMem(0x4a84, { 0x7d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xcc4f, gbc.sp());
        EXPECT(0x4a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0032
        gbc.setState(0xbcbe, 0x507b, 0x5d20, 0x96d7, 0x9dde, 0x58d0, 0x1, 0x1);
        gbc.writeMem(0xbcbe, { 0x7d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x507b, gbc.sp());
        EXPECT(0xbcbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xbcbe));
        // 7D 0033
        gbc.setState(0xdff9, 0x342f, 0xa030, 0x7351, 0x1fee, 0x9b70, 0x0, 0x0);
        gbc.writeMem(0xdff9, { 0x7d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x342f, gbc.sp());
        EXPECT(0xdffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xdff9));
        // 7D 0034
        gbc.setState(0xc121, 0x740, 0x2f20, 0xedb4, 0x11a4, 0x4790, 0x0, 0x0);
        gbc.writeMem(0xc121, { 0x7d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x740, gbc.sp());
        EXPECT(0xc122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc121));
        // 7D 0035
        gbc.setState(0x7c07, 0x6806, 0xd880, 0x76df, 0x978d, 0xf392, 0x1, 0x1);
        gbc.writeMem(0x7c07, { 0x7d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6806, gbc.sp());
        EXPECT(0x7c08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0036
        gbc.setState(0x13d4, 0x5472, 0xaa00, 0x191d, 0x54df, 0x53c6, 0x1, 0x0);
        gbc.writeMem(0x13d4, { 0x7d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5472, gbc.sp());
        EXPECT(0x13d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0037
        gbc.setState(0xb624, 0x2511, 0xabf0, 0x1e5, 0x66f4, 0x923d, 0x0, 0x1);
        gbc.writeMem(0xb624, { 0x7d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2511, gbc.sp());
        EXPECT(0xb625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb624));
        // 7D 0038
        gbc.setState(0xb13c, 0xcb0f, 0x34c0, 0x1e82, 0x64da, 0xc6e5, 0x1, 0x0);
        gbc.writeMem(0xb13c, { 0x7d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcb0f, gbc.sp());
        EXPECT(0xb13d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb13c));
        // 7D 0039
        gbc.setState(0xbaa0, 0xc6bd, 0xafb0, 0x4e02, 0x7ba0, 0xe0df, 0x0, 0x1);
        gbc.writeMem(0xbaa0, { 0x7d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc6bd, gbc.sp());
        EXPECT(0xbaa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xbaa0));
        // 7D 003A
        gbc.setState(0x34a2, 0x3e99, 0x22a0, 0x2d38, 0x82d, 0x2fb4, 0x1, 0x1);
        gbc.writeMem(0x34a2, { 0x7d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3e99, gbc.sp());
        EXPECT(0x34a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 003B
        gbc.setState(0x40fb, 0x2826, 0xe6a0, 0x7e12, 0x5bd5, 0x5dea, 0x0, 0x0);
        gbc.writeMem(0x40fb, { 0x7d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2826, gbc.sp());
        EXPECT(0x40fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 003C
        gbc.setState(0x64ea, 0xaa5, 0x6630, 0x82ef, 0x9430, 0x7a05, 0x0, 0x1);
        gbc.writeMem(0x64ea, { 0x7d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xaa5, gbc.sp());
        EXPECT(0x64eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 003D
        gbc.setState(0x977d, 0x80dc, 0x3330, 0x6569, 0x9ffa, 0xf021, 0x0, 0x0);
        gbc.writeMem(0x977d, { 0x7d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x80dc, gbc.sp());
        EXPECT(0x977e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x977d));
        // 7D 003E
        gbc.setState(0x1bb, 0xba4a, 0xc980, 0x88fa, 0xb59e, 0xf37c, 0x0, 0x1);
        gbc.writeMem(0x1bb, { 0x7d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xba4a, gbc.sp());
        EXPECT(0x1bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0040
        gbc.setState(0x3c60, 0x5e57, 0x4220, 0xbf97, 0x780e, 0xfb96, 0x1, 0x0);
        gbc.writeMem(0x3c60, { 0x7d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5e57, gbc.sp());
        EXPECT(0x3c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0041
        gbc.setState(0x2ca0, 0xbce7, 0xf030, 0x819a, 0x8d82, 0xfe59, 0x0, 0x1);
        gbc.writeMem(0x2ca0, { 0x7d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbce7, gbc.sp());
        EXPECT(0x2ca1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0042
        gbc.setState(0x6aeb, 0x7459, 0x3320, 0x74f6, 0xf42f, 0x874c, 0x0, 0x0);
        gbc.writeMem(0x6aeb, { 0x7d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7459, gbc.sp());
        EXPECT(0x6aec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0043
        gbc.setState(0xd8b8, 0xc8f1, 0x6a00, 0x7aed, 0x468, 0x1b5, 0x0, 0x1);
        gbc.writeMem(0xd8b8, { 0x7d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc8f1, gbc.sp());
        EXPECT(0xd8b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd8b8));
        // 7D 0044
        gbc.setState(0x3071, 0x3a23, 0x25a0, 0xd4e0, 0x64e7, 0x4186, 0x1, 0x1);
        gbc.writeMem(0x3071, { 0x7d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3a23, gbc.sp());
        EXPECT(0x3072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0045
        gbc.setState(0xa14a, 0xe4fa, 0xf2a0, 0xdbe2, 0xecbd, 0x4896, 0x0, 0x0);
        gbc.writeMem(0xa14a, { 0x7d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe4fa, gbc.sp());
        EXPECT(0xa14b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa14a));
        // 7D 0046
        gbc.setState(0x7138, 0x4ff2, 0xbee0, 0x600b, 0xf303, 0xace8, 0x1, 0x1);
        gbc.writeMem(0x7138, { 0x7d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4ff2, gbc.sp());
        EXPECT(0x7139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0047
        gbc.setState(0xe781, 0x5776, 0x56b0, 0xd321, 0x19f8, 0x1f83, 0x1, 0x1);
        gbc.writeMem(0xe781, { 0x7d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5776, gbc.sp());
        EXPECT(0xe782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe781));
        // 7D 0048
        gbc.setState(0x47c, 0xa3c4, 0xd780, 0x6e42, 0xf7f6, 0x1c11, 0x0, 0x1);
        gbc.writeMem(0x47c, { 0x7d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa3c4, gbc.sp());
        EXPECT(0x47d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0049
        gbc.setState(0xe2e, 0x6295, 0xaed0, 0xd708, 0x634e, 0x41bc, 0x1, 0x0);
        gbc.writeMem(0xe2e, { 0x7d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6295, gbc.sp());
        EXPECT(0xe2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 004A
        gbc.setState(0x9739, 0xa41c, 0x2390, 0xd7e5, 0x2e17, 0x5eed, 0x1, 0x0);
        gbc.writeMem(0x9739, { 0x7d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa41c, gbc.sp());
        EXPECT(0x973a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9739));
        // 7D 004B
        gbc.setState(0x7a89, 0xc5aa, 0x13a0, 0x839c, 0xd0f5, 0x72e0, 0x0, 0x0);
        gbc.writeMem(0x7a89, { 0x7d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc5aa, gbc.sp());
        EXPECT(0x7a8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 004C
        gbc.setState(0xd76f, 0xc757, 0xd970, 0xa3, 0xf21c, 0x6141, 0x1, 0x0);
        gbc.writeMem(0xd76f, { 0x7d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc757, gbc.sp());
        EXPECT(0xd770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd76f));
        // 7D 004E
        gbc.setState(0x5cbe, 0x4337, 0x8850, 0x44bd, 0x5eec, 0x1670, 0x0, 0x0);
        gbc.writeMem(0x5cbe, { 0x7d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4337, gbc.sp());
        EXPECT(0x5cbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 004F
        gbc.setState(0x60dc, 0x98bf, 0x30b0, 0xc420, 0xe243, 0xac2b, 0x1, 0x1);
        gbc.writeMem(0x60dc, { 0x7d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x98bf, gbc.sp());
        EXPECT(0x60dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0050
        gbc.setState(0xc68f, 0x6aa5, 0x1c40, 0xe921, 0x5e31, 0x3cdb, 0x1, 0x1);
        gbc.writeMem(0xc68f, { 0x7d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6aa5, gbc.sp());
        EXPECT(0xc690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc68f));
        // 7D 0051
        gbc.setState(0xe3bb, 0xc123, 0xc070, 0x158f, 0x2bf3, 0xe0f0, 0x0, 0x0);
        gbc.writeMem(0xe3bb, { 0x7d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc123, gbc.sp());
        EXPECT(0xe3bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe3bb));
        // 7D 0052
        gbc.setState(0x7eb7, 0x6fde, 0x3960, 0xea97, 0xd945, 0x521a, 0x1, 0x1);
        gbc.writeMem(0x7eb7, { 0x7d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6fde, gbc.sp());
        EXPECT(0x7eb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0053
        gbc.setState(0x9ba4, 0xec40, 0x9bf0, 0xdd70, 0x439c, 0x1b1f, 0x0, 0x1);
        gbc.writeMem(0x9ba4, { 0x7d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xec40, gbc.sp());
        EXPECT(0x9ba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9ba4));
        // 7D 0054
        gbc.setState(0x74d3, 0xb89, 0xca70, 0x5f1a, 0xb05e, 0x78ae, 0x1, 0x1);
        gbc.writeMem(0x74d3, { 0x7d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb89, gbc.sp());
        EXPECT(0x74d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0055
        gbc.setState(0x9096, 0x5e58, 0x920, 0xf65e, 0xdb84, 0x997, 0x1, 0x0);
        gbc.writeMem(0x9096, { 0x7d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5e58, gbc.sp());
        EXPECT(0x9097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9096));
        // 7D 0056
        gbc.setState(0xa06b, 0x83d4, 0x4dd0, 0xd595, 0x9b8d, 0xbab6, 0x1, 0x1);
        gbc.writeMem(0xa06b, { 0x7d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x83d4, gbc.sp());
        EXPECT(0xa06c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa06b));
        // 7D 0057
        gbc.setState(0x8ceb, 0xea9f, 0x9ec0, 0xebce, 0x945b, 0x5d62, 0x1, 0x1);
        gbc.writeMem(0x8ceb, { 0x7d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xea9f, gbc.sp());
        EXPECT(0x8cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8ceb));
        // 7D 0058
        gbc.setState(0x4f32, 0x27a6, 0xf230, 0x6ab4, 0x6d14, 0x41d, 0x1, 0x1);
        gbc.writeMem(0x4f32, { 0x7d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x27a6, gbc.sp());
        EXPECT(0x4f33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0059
        gbc.setState(0xb54c, 0xaf29, 0x1070, 0x70a2, 0x12c2, 0xd505, 0x1, 0x1);
        gbc.writeMem(0xb54c, { 0x7d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xaf29, gbc.sp());
        EXPECT(0xb54d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb54c));
        // 7D 005A
        gbc.setState(0x6eaa, 0x45bb, 0x8a00, 0x4af6, 0x7dde, 0x9b40, 0x1, 0x1);
        gbc.writeMem(0x6eaa, { 0x7d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x45bb, gbc.sp());
        EXPECT(0x6eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 005B
        gbc.setState(0xa234, 0x6a81, 0x4b90, 0x7c3f, 0x1515, 0x8ba6, 0x0, 0x1);
        gbc.writeMem(0xa234, { 0x7d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6a81, gbc.sp());
        EXPECT(0xa235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa234));
        // 7D 005C
        gbc.setState(0xbe59, 0x1d49, 0xb3f0, 0x77e8, 0x8733, 0xba6d, 0x1, 0x1);
        gbc.writeMem(0xbe59, { 0x7d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1d49, gbc.sp());
        EXPECT(0xbe5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xbe59));
        // 7D 005D
        gbc.setState(0x858f, 0xdca6, 0x5140, 0xaad5, 0xd948, 0x56ec, 0x0, 0x0);
        gbc.writeMem(0x858f, { 0x7d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdca6, gbc.sp());
        EXPECT(0x8590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x858f));
        // 7D 005E
        gbc.setState(0x61a8, 0x18fd, 0x2690, 0x1d65, 0x9c62, 0xeb1, 0x1, 0x0);
        gbc.writeMem(0x61a8, { 0x7d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x18fd, gbc.sp());
        EXPECT(0x61a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 005F
        gbc.setState(0x9088, 0xf7d7, 0xa2d0, 0x1e7c, 0xdbe7, 0xc83a, 0x1, 0x0);
        gbc.writeMem(0x9088, { 0x7d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf7d7, gbc.sp());
        EXPECT(0x9089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9088));
        // 7D 0060
        gbc.setState(0x3e77, 0x949d, 0xe450, 0x2612, 0xac08, 0xd69d, 0x1, 0x1);
        gbc.writeMem(0x3e77, { 0x7d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x949d, gbc.sp());
        EXPECT(0x3e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0061
        gbc.setState(0x8526, 0x73b9, 0x2a00, 0xb148, 0xd0d0, 0x828c, 0x0, 0x1);
        gbc.writeMem(0x8526, { 0x7d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x73b9, gbc.sp());
        EXPECT(0x8527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8526));
        // 7D 0062
        gbc.setState(0x890e, 0x968b, 0xd240, 0xfe93, 0xec20, 0x890, 0x0, 0x0);
        gbc.writeMem(0x890e, { 0x7d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x968b, gbc.sp());
        EXPECT(0x890f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x890e));
        // 7D 0063
        gbc.setState(0x6f67, 0xd918, 0xb8d0, 0x9c0, 0xd48c, 0x13cd, 0x0, 0x0);
        gbc.writeMem(0x6f67, { 0x7d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd918, gbc.sp());
        EXPECT(0x6f68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0064
        gbc.setState(0x97bb, 0x3de4, 0xe2c0, 0x7a34, 0xf4b9, 0x8d7e, 0x0, 0x1);
        gbc.writeMem(0x97bb, { 0x7d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3de4, gbc.sp());
        EXPECT(0x97bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x97bb));
        // 7D 0065
        gbc.setState(0x101b, 0x348b, 0xd010, 0x8040, 0x67d0, 0xd570, 0x0, 0x1);
        gbc.writeMem(0x101b, { 0x7d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x348b, gbc.sp());
        EXPECT(0x101c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0066
        gbc.setState(0x6829, 0x24a5, 0x9b40, 0x32ba, 0x8bea, 0xcb9, 0x0, 0x0);
        gbc.writeMem(0x6829, { 0x7d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x24a5, gbc.sp());
        EXPECT(0x682a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0067
        gbc.setState(0x304d, 0x9ec6, 0xcb20, 0xe473, 0x853d, 0x5fb1, 0x0, 0x1);
        gbc.writeMem(0x304d, { 0x7d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9ec6, gbc.sp());
        EXPECT(0x304e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0068
        gbc.setState(0xe4a1, 0x4088, 0x9e70, 0x150, 0x9069, 0xb956, 0x1, 0x0);
        gbc.writeMem(0xe4a1, { 0x7d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4088, gbc.sp());
        EXPECT(0xe4a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe4a1));
        // 7D 0069
        gbc.setState(0xe7ca, 0x6d12, 0xc9c0, 0x6ded, 0x62c9, 0x9539, 0x1, 0x1);
        gbc.writeMem(0xe7ca, { 0x7d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6d12, gbc.sp());
        EXPECT(0xe7cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe7ca));
        // 7D 006B
        gbc.setState(0xd455, 0x9cbf, 0xa320, 0x66db, 0xef3b, 0x91e6, 0x1, 0x0);
        gbc.writeMem(0xd455, { 0x7d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9cbf, gbc.sp());
        EXPECT(0xd456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd455));
        // 7D 006C
        gbc.setState(0x2756, 0x96b9, 0x1cd0, 0xad64, 0x5e38, 0xe42a, 0x1, 0x1);
        gbc.writeMem(0x2756, { 0x7d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x96b9, gbc.sp());
        EXPECT(0x2757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 006D
        gbc.setState(0xd965, 0xb9a2, 0xc8f0, 0x8142, 0x2cd7, 0xa5dc, 0x0, 0x1);
        gbc.writeMem(0xd965, { 0x7d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb9a2, gbc.sp());
        EXPECT(0xd966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd965));
        // 7D 006E
        gbc.setState(0xd8a2, 0x89e5, 0x4e30, 0xf9e3, 0xfee3, 0x7d88, 0x1, 0x0);
        gbc.writeMem(0xd8a2, { 0x7d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x89e5, gbc.sp());
        EXPECT(0xd8a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd8a2));
        // 7D 006F
        gbc.setState(0x4b03, 0xa392, 0xfc0, 0xf5d6, 0x6b7e, 0x6878, 0x1, 0x0);
        gbc.writeMem(0x4b03, { 0x7d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa392, gbc.sp());
        EXPECT(0x4b04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0070
        gbc.setState(0x5f66, 0xc3bf, 0xcfa0, 0xc50f, 0xeb04, 0xdec1, 0x1, 0x0);
        gbc.writeMem(0x5f66, { 0x7d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc3bf, gbc.sp());
        EXPECT(0x5f67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0071
        gbc.setState(0x7927, 0xc14c, 0x66e0, 0xb1bb, 0x774d, 0x6638, 0x1, 0x1);
        gbc.writeMem(0x7927, { 0x7d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc14c, gbc.sp());
        EXPECT(0x7928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0072
        gbc.setState(0x881, 0xb44f, 0x25e0, 0xe8b9, 0x8809, 0x65d2, 0x0, 0x0);
        gbc.writeMem(0x881, { 0x7d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb44f, gbc.sp());
        EXPECT(0x882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0073
        gbc.setState(0xdf65, 0xeaef, 0x8940, 0x670, 0x700d, 0xea5f, 0x0, 0x1);
        gbc.writeMem(0xdf65, { 0x7d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xeaef, gbc.sp());
        EXPECT(0xdf66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xdf65));
        // 7D 0074
        gbc.setState(0x45cd, 0x8725, 0x510, 0xc37, 0x7744, 0xdfd9, 0x1, 0x0);
        gbc.writeMem(0x45cd, { 0x7d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8725, gbc.sp());
        EXPECT(0x45ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0075
        gbc.setState(0xe658, 0x720d, 0x4280, 0xbb8, 0xee39, 0x284a, 0x0, 0x1);
        gbc.writeMem(0xe658, { 0x7d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x720d, gbc.sp());
        EXPECT(0xe659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe658));
        // 7D 0076
        gbc.setState(0xb747, 0xe41c, 0xd750, 0xd2b5, 0xc398, 0x589a, 0x1, 0x1);
        gbc.writeMem(0xb747, { 0x7d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe41c, gbc.sp());
        EXPECT(0xb748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb747));
        // 7D 0077
        gbc.setState(0x658c, 0xf5ee, 0x5180, 0x1990, 0x9ba3, 0xdb47, 0x0, 0x0);
        gbc.writeMem(0x658c, { 0x7d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf5ee, gbc.sp());
        EXPECT(0x658d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0078
        gbc.setState(0xdc7b, 0xc38a, 0x8620, 0x2b5b, 0x7aac, 0x6e1a, 0x1, 0x1);
        gbc.writeMem(0xdc7b, { 0x7d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc38a, gbc.sp());
        EXPECT(0xdc7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xdc7b));
        // 7D 0079
        gbc.setState(0x872a, 0xd5b7, 0x3140, 0x7608, 0x4a4d, 0xbfd3, 0x1, 0x1);
        gbc.writeMem(0x872a, { 0x7d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd5b7, gbc.sp());
        EXPECT(0x872b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x872a));
        // 7D 007A
        gbc.setState(0x5898, 0x4c23, 0xedc0, 0xa54a, 0xf378, 0xfa30, 0x1, 0x0);
        gbc.writeMem(0x5898, { 0x7d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4c23, gbc.sp());
        EXPECT(0x5899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 007B
        gbc.setState(0x20c9, 0x7a25, 0x39e0, 0xaa46, 0xed53, 0xb41b, 0x1, 0x1);
        gbc.writeMem(0x20c9, { 0x7d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7a25, gbc.sp());
        EXPECT(0x20ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 007C
        gbc.setState(0xc856, 0x408c, 0x54a0, 0x6d22, 0xf644, 0xcbb5, 0x0, 0x0);
        gbc.writeMem(0xc856, { 0x7d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x408c, gbc.sp());
        EXPECT(0xc857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc856));
        // 7D 007D
        gbc.setState(0x601e, 0x6530, 0xe100, 0xaf0c, 0x1355, 0x1a96, 0x1, 0x0);
        gbc.writeMem(0x601e, { 0x7d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6530, gbc.sp());
        EXPECT(0x601f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 007E
        gbc.setState(0x19ae, 0x9c53, 0x5fc0, 0xc534, 0x8702, 0xfcd6, 0x0, 0x0);
        gbc.writeMem(0x19ae, { 0x7d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9c53, gbc.sp());
        EXPECT(0x19af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 007F
        gbc.setState(0x5ba5, 0xa093, 0xbb80, 0x555c, 0x70bd, 0xe309, 0x1, 0x1);
        gbc.writeMem(0x5ba5, { 0x7d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa093, gbc.sp());
        EXPECT(0x5ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0080
        gbc.setState(0x391, 0x7d9f, 0x430, 0xa513, 0x6fa5, 0x3d11, 0x0, 0x0);
        gbc.writeMem(0x391, { 0x7d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7d9f, gbc.sp());
        EXPECT(0x392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0081
        gbc.setState(0x562a, 0x954f, 0x400, 0xb77a, 0xe947, 0x5, 0x0, 0x1);
        gbc.writeMem(0x562a, { 0x7d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x954f, gbc.sp());
        EXPECT(0x562b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0083
        gbc.setState(0x7d9b, 0x34d5, 0x8780, 0x3ed5, 0xfa45, 0xef58, 0x0, 0x0);
        gbc.writeMem(0x7d9b, { 0x7d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x34d5, gbc.sp());
        EXPECT(0x7d9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0084
        gbc.setState(0x30b0, 0x7549, 0x4680, 0xbdd4, 0x9223, 0x7935, 0x0, 0x1);
        gbc.writeMem(0x30b0, { 0x7d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7549, gbc.sp());
        EXPECT(0x30b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0085
        gbc.setState(0x5873, 0x7131, 0x9050, 0x19f3, 0xd479, 0xcccb, 0x1, 0x1);
        gbc.writeMem(0x5873, { 0x7d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7131, gbc.sp());
        EXPECT(0x5874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0086
        gbc.setState(0xd020, 0xb1bb, 0x4c70, 0x2e2e, 0x4ec9, 0x648, 0x0, 0x0);
        gbc.writeMem(0xd020, { 0x7d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb1bb, gbc.sp());
        EXPECT(0xd021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd020));
        // 7D 0087
        gbc.setState(0x2b5f, 0x7c8c, 0x4090, 0x6e8c, 0x4424, 0x24bb, 0x0, 0x0);
        gbc.writeMem(0x2b5f, { 0x7d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7c8c, gbc.sp());
        EXPECT(0x2b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0088
        gbc.setState(0x8afb, 0x358d, 0xd500, 0x2d8f, 0xa559, 0x81e1, 0x0, 0x1);
        gbc.writeMem(0x8afb, { 0x7d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x358d, gbc.sp());
        EXPECT(0x8afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8afb));
        // 7D 0089
        gbc.setState(0xd4b1, 0xab8c, 0xc420, 0x7574, 0xdb1b, 0x223e, 0x0, 0x1);
        gbc.writeMem(0xd4b1, { 0x7d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xab8c, gbc.sp());
        EXPECT(0xd4b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd4b1));
        // 7D 008A
        gbc.setState(0xa9fc, 0xf39d, 0xffa0, 0xd8ad, 0x8fa5, 0xf205, 0x1, 0x1);
        gbc.writeMem(0xa9fc, { 0x7d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf39d, gbc.sp());
        EXPECT(0xa9fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa9fc));
        // 7D 008B
        gbc.setState(0xbb9d, 0xf706, 0xd350, 0x9b46, 0x4e30, 0x41b5, 0x1, 0x0);
        gbc.writeMem(0xbb9d, { 0x7d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf706, gbc.sp());
        EXPECT(0xbb9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xbb9d));
        // 7D 008C
        gbc.setState(0x2fa1, 0x2bec, 0x3c50, 0xe966, 0xfd8c, 0xf7b8, 0x0, 0x1);
        gbc.writeMem(0x2fa1, { 0x7d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2bec, gbc.sp());
        EXPECT(0x2fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 008D
        gbc.setState(0xe8de, 0x1f83, 0x5b40, 0xbe6d, 0x81ba, 0xcb9f, 0x1, 0x0);
        gbc.writeMem(0xe8de, { 0x7d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1f83, gbc.sp());
        EXPECT(0xe8df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe8de));
        // 7D 008E
        gbc.setState(0x1f9b, 0x1c01, 0x5ea0, 0xd26f, 0xcb8b, 0x994, 0x0, 0x1);
        gbc.writeMem(0x1f9b, { 0x7d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1c01, gbc.sp());
        EXPECT(0x1f9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 008F
        gbc.setState(0x318d, 0xdad9, 0x8230, 0x328a, 0xba1b, 0x15d9, 0x0, 0x0);
        gbc.writeMem(0x318d, { 0x7d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xdad9, gbc.sp());
        EXPECT(0x318e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0090
        gbc.setState(0x6c, 0x7d82, 0x9140, 0xb766, 0xa3d0, 0x8f8b, 0x1, 0x0);
        gbc.writeMem(0x6c, { 0x7d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7d82, gbc.sp());
        EXPECT(0x6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0091
        gbc.setState(0xd6f8, 0x3525, 0x8840, 0x50af, 0xbbd4, 0x7e86, 0x1, 0x0);
        gbc.writeMem(0xd6f8, { 0x7d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3525, gbc.sp());
        EXPECT(0xd6f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd6f8));
        // 7D 0092
        gbc.setState(0x3d79, 0xce0e, 0xd0d0, 0x862f, 0x958e, 0x22fa, 0x1, 0x1);
        gbc.writeMem(0x3d79, { 0x7d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xce0e, gbc.sp());
        EXPECT(0x3d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0093
        gbc.setState(0xc855, 0xd72, 0x3ef0, 0x9eb, 0x8c78, 0x5462, 0x1, 0x1);
        gbc.writeMem(0xc855, { 0x7d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd72, gbc.sp());
        EXPECT(0xc856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc855));
        // 7D 0094
        gbc.setState(0x5ee0, 0x1a8, 0xcc90, 0x8751, 0x27c4, 0xfbb5, 0x0, 0x0);
        gbc.writeMem(0x5ee0, { 0x7d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1a8, gbc.sp());
        EXPECT(0x5ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0095
        gbc.setState(0x9e20, 0x202c, 0x53d0, 0xc280, 0x615a, 0x1fe6, 0x1, 0x1);
        gbc.writeMem(0x9e20, { 0x7d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x202c, gbc.sp());
        EXPECT(0x9e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9e20));
        // 7D 0096
        gbc.setState(0xe3c2, 0xc2b3, 0x4580, 0xd95d, 0x44b7, 0x36a3, 0x0, 0x1);
        gbc.writeMem(0xe3c2, { 0x7d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc2b3, gbc.sp());
        EXPECT(0xe3c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe3c2));
        // 7D 0097
        gbc.setState(0x261f, 0x8e89, 0x2d90, 0x64f7, 0x91c4, 0x22da, 0x0, 0x0);
        gbc.writeMem(0x261f, { 0x7d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8e89, gbc.sp());
        EXPECT(0x2620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0098
        gbc.setState(0x4c3c, 0x2763, 0x14c0, 0xb012, 0x957b, 0x250a, 0x0, 0x1);
        gbc.writeMem(0x4c3c, { 0x7d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2763, gbc.sp());
        EXPECT(0x4c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0099
        gbc.setState(0x22cf, 0xb8ea, 0x9d60, 0x45ef, 0x84e3, 0x707b, 0x1, 0x1);
        gbc.writeMem(0x22cf, { 0x7d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb8ea, gbc.sp());
        EXPECT(0x22d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 009A
        gbc.setState(0xc9a6, 0xf8e4, 0xb5e0, 0x69bb, 0x35f6, 0x481f, 0x0, 0x0);
        gbc.writeMem(0xc9a6, { 0x7d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf8e4, gbc.sp());
        EXPECT(0xc9a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc9a6));
        // 7D 009B
        gbc.setState(0x3913, 0x2124, 0x10, 0xe6aa, 0xe55, 0x855b, 0x0, 0x0);
        gbc.writeMem(0x3913, { 0x7d });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2124, gbc.sp());
        EXPECT(0x3914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 009C
        gbc.setState(0xc156, 0x9235, 0x14c0, 0x5b8d, 0x4a03, 0xca20, 0x0, 0x1);
        gbc.writeMem(0xc156, { 0x7d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9235, gbc.sp());
        EXPECT(0xc157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc156));
        // 7D 009D
        gbc.setState(0xbcb6, 0x17f, 0xc3b0, 0xde27, 0x3f9c, 0x8f20, 0x1, 0x1);
        gbc.writeMem(0xbcb6, { 0x7d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x17f, gbc.sp());
        EXPECT(0xbcb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xbcb6));
        // 7D 009E
        gbc.setState(0x694, 0x4f5e, 0x3020, 0x8bb1, 0x7c25, 0x9a17, 0x1, 0x0);
        gbc.writeMem(0x694, { 0x7d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4f5e, gbc.sp());
        EXPECT(0x695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 009F
        gbc.setState(0x9482, 0xeed0, 0xb020, 0x8a27, 0x9b6c, 0x5abf, 0x1, 0x0);
        gbc.writeMem(0x9482, { 0x7d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xeed0, gbc.sp());
        EXPECT(0x9483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9482));
        // 7D 00A0
        gbc.setState(0xac8f, 0x889f, 0xa010, 0x13c, 0x15a1, 0x33c7, 0x1, 0x1);
        gbc.writeMem(0xac8f, { 0x7d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x889f, gbc.sp());
        EXPECT(0xac90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xac8f));
        // 7D 00A1
        gbc.setState(0x9a4e, 0xcd7, 0x99a0, 0xb285, 0x5ee3, 0x1ae2, 0x1, 0x0);
        gbc.writeMem(0x9a4e, { 0x7d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xcd7, gbc.sp());
        EXPECT(0x9a4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9a4e));
        // 7D 00A5
        gbc.setState(0x14d1, 0x10d8, 0xc2a0, 0x632a, 0xe5d, 0x964f, 0x0, 0x1);
        gbc.writeMem(0x14d1, { 0x7d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x10d8, gbc.sp());
        EXPECT(0x14d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 00A6
        gbc.setState(0xa40f, 0x38bd, 0xed90, 0xb52a, 0x2f38, 0xcb27, 0x1, 0x1);
        gbc.writeMem(0xa40f, { 0x7d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x38bd, gbc.sp());
        EXPECT(0xa410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa40f));
        // 7D 00A7
        gbc.setState(0x635c, 0xd922, 0xa8d0, 0xefec, 0x550f, 0xb9ba, 0x1, 0x0);
        gbc.writeMem(0x635c, { 0x7d });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd922, gbc.sp());
        EXPECT(0x635d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00A8
        gbc.setState(0x8fd8, 0xdb50, 0x3400, 0x93d3, 0xfa91, 0xc5c4, 0x1, 0x0);
        gbc.writeMem(0x8fd8, { 0x7d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdb50, gbc.sp());
        EXPECT(0x8fd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8fd8));
        // 7D 00A9
        gbc.setState(0x3a66, 0x9195, 0x3660, 0x362c, 0x282f, 0x6d18, 0x0, 0x1);
        gbc.writeMem(0x3a66, { 0x7d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9195, gbc.sp());
        EXPECT(0x3a67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 00AA
        gbc.setState(0x1116, 0xc9e0, 0x8e0, 0xffa3, 0x893, 0x956c, 0x0, 0x1);
        gbc.writeMem(0x1116, { 0x7d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc9e0, gbc.sp());
        EXPECT(0x1117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 00AB
        gbc.setState(0x1715, 0xe393, 0x8f30, 0xa525, 0x8d58, 0x9db8, 0x0, 0x0);
        gbc.writeMem(0x1715, { 0x7d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe393, gbc.sp());
        EXPECT(0x1716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00AC
        gbc.setState(0x65bf, 0x3c0a, 0x92a0, 0x5924, 0x695a, 0xae5e, 0x1, 0x1);
        gbc.writeMem(0x65bf, { 0x7d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3c0a, gbc.sp());
        EXPECT(0x65c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 00AD
        gbc.setState(0x7fd7, 0x51d, 0x16f0, 0x6518, 0xeac8, 0x94d1, 0x1, 0x0);
        gbc.writeMem(0x7fd7, { 0x7d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x51d, gbc.sp());
        EXPECT(0x7fd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00AE
        gbc.setState(0x31ed, 0x792, 0x23c0, 0x44a2, 0xdb6a, 0xa058, 0x0, 0x1);
        gbc.writeMem(0x31ed, { 0x7d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x792, gbc.sp());
        EXPECT(0x31ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 00AF
        gbc.setState(0x912d, 0x8283, 0x1ed0, 0xcbcb, 0x532, 0x103a, 0x1, 0x0);
        gbc.writeMem(0x912d, { 0x7d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8283, gbc.sp());
        EXPECT(0x912e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x912d));
        // 7D 00B0
        gbc.setState(0x8d0d, 0x7306, 0x5fe0, 0xa710, 0xc439, 0xaabb, 0x0, 0x0);
        gbc.writeMem(0x8d0d, { 0x7d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7306, gbc.sp());
        EXPECT(0x8d0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8d0d));
        // 7D 00B1
        gbc.setState(0xd181, 0x2d64, 0x6f00, 0x12f0, 0xc148, 0x2cab, 0x1, 0x1);
        gbc.writeMem(0xd181, { 0x7d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2d64, gbc.sp());
        EXPECT(0xd182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd181));
        // 7D 00B2
        gbc.setState(0x98f3, 0x5aae, 0x29b0, 0xac97, 0xd3b7, 0x409f, 0x1, 0x0);
        gbc.writeMem(0x98f3, { 0x7d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5aae, gbc.sp());
        EXPECT(0x98f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x98f3));
        // 7D 00B3
        gbc.setState(0xb2d9, 0xec1f, 0x510, 0xacff, 0x4f3c, 0xf798, 0x0, 0x0);
        gbc.writeMem(0xb2d9, { 0x7d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xec1f, gbc.sp());
        EXPECT(0xb2da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb2d9));
        // 7D 00B4
        gbc.setState(0x2d8f, 0xa4aa, 0x830, 0x22a4, 0xf3cc, 0xf16c, 0x0, 0x1);
        gbc.writeMem(0x2d8f, { 0x7d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa4aa, gbc.sp());
        EXPECT(0x2d90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00B5
        gbc.setState(0xea0e, 0x665, 0x2150, 0xd96, 0x9fae, 0x3a52, 0x0, 0x1);
        gbc.writeMem(0xea0e, { 0x7d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x665, gbc.sp());
        EXPECT(0xea0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xea0e));
        // 7D 00B6
        gbc.setState(0xda9c, 0xc4b, 0xd640, 0xbd9a, 0xa576, 0xe497, 0x1, 0x0);
        gbc.writeMem(0xda9c, { 0x7d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc4b, gbc.sp());
        EXPECT(0xda9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xda9c));
        // 7D 00B7
        gbc.setState(0x844, 0xf246, 0x4e40, 0x3fe8, 0xcecd, 0xb5a2, 0x1, 0x0);
        gbc.writeMem(0x844, { 0x7d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf246, gbc.sp());
        EXPECT(0x845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 00B8
        gbc.setState(0xe8c4, 0x4bcb, 0x2920, 0x1bc9, 0x75c1, 0x9c37, 0x0, 0x0);
        gbc.writeMem(0xe8c4, { 0x7d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4bcb, gbc.sp());
        EXPECT(0xe8c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe8c4));
        // 7D 00B9
        gbc.setState(0xd250, 0x19ce, 0xe230, 0x92f5, 0xae34, 0xe950, 0x0, 0x1);
        gbc.writeMem(0xd250, { 0x7d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x19ce, gbc.sp());
        EXPECT(0xd251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd250));
        // 7D 00BA
        gbc.setState(0x3c4, 0x667f, 0x4700, 0xc4ff, 0x96ca, 0x547c, 0x0, 0x1);
        gbc.writeMem(0x3c4, { 0x7d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x667f, gbc.sp());
        EXPECT(0x3c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 00BB
        gbc.setState(0xba61, 0xf937, 0xa4e0, 0xf869, 0x4194, 0xab0f, 0x0, 0x0);
        gbc.writeMem(0xba61, { 0x7d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf937, gbc.sp());
        EXPECT(0xba62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xba61));
        // 7D 00BC
        gbc.setState(0x1df1, 0xc774, 0xba80, 0x3d8a, 0x5eb2, 0xac17, 0x0, 0x0);
        gbc.writeMem(0x1df1, { 0x7d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc774, gbc.sp());
        EXPECT(0x1df2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 00BD
        gbc.setState(0xd2d7, 0x2e57, 0x2440, 0x97ef, 0xf4be, 0x6aaf, 0x1, 0x0);
        gbc.writeMem(0xd2d7, { 0x7d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2e57, gbc.sp());
        EXPECT(0xd2d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd2d7));
        // 7D 00BE
        gbc.setState(0x9bbd, 0x2d45, 0x780, 0xd31c, 0x3aa5, 0x444b, 0x0, 0x0);
        gbc.writeMem(0x9bbd, { 0x7d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2d45, gbc.sp());
        EXPECT(0x9bbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9bbd));
        // 7D 00BF
        gbc.setState(0xa968, 0xe9a, 0x2740, 0x1178, 0xf378, 0x2418, 0x1, 0x1);
        gbc.writeMem(0xa968, { 0x7d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe9a, gbc.sp());
        EXPECT(0xa969, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa968));
        // 7D 00C0
        gbc.setState(0x4643, 0x115f, 0x6b40, 0xb0f3, 0x74e5, 0xc042, 0x0, 0x1);
        gbc.writeMem(0x4643, { 0x7d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x115f, gbc.sp());
        EXPECT(0x4644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 00C1
        gbc.setState(0xe493, 0x3574, 0xcca0, 0xcb29, 0x1d7f, 0x5889, 0x1, 0x1);
        gbc.writeMem(0xe493, { 0x7d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3574, gbc.sp());
        EXPECT(0xe494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe493));
        // 7D 00C3
        gbc.setState(0xb475, 0x9d2a, 0x3e20, 0x311a, 0xe4bb, 0xc706, 0x0, 0x1);
        gbc.writeMem(0xb475, { 0x7d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9d2a, gbc.sp());
        EXPECT(0xb476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb475));
        // 7D 00C4
        gbc.setState(0x4731, 0xf90b, 0x1610, 0x11e3, 0x2643, 0x787a, 0x1, 0x1);
        gbc.writeMem(0x4731, { 0x7d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf90b, gbc.sp());
        EXPECT(0x4732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00C5
        gbc.setState(0xb132, 0x476, 0x56d0, 0xc8dc, 0x7274, 0x811, 0x1, 0x1);
        gbc.writeMem(0xb132, { 0x7d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x476, gbc.sp());
        EXPECT(0xb133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb132));
        // 7D 00C6
        gbc.setState(0x5ca0, 0x95a2, 0xc980, 0x9ccc, 0xd872, 0xcd48, 0x1, 0x0);
        gbc.writeMem(0x5ca0, { 0x7d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x95a2, gbc.sp());
        EXPECT(0x5ca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 00C7
        gbc.setState(0x8dfd, 0xa1b9, 0x4890, 0x4db9, 0x2ea4, 0x5818, 0x0, 0x1);
        gbc.writeMem(0x8dfd, { 0x7d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa1b9, gbc.sp());
        EXPECT(0x8dfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8dfd));
        // 7D 00C8
        gbc.setState(0x4526, 0xac3e, 0x44c0, 0x449e, 0x3887, 0xc9ef, 0x0, 0x1);
        gbc.writeMem(0x4526, { 0x7d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xac3e, gbc.sp());
        EXPECT(0x4527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 00CA
        gbc.setState(0xe697, 0xded9, 0xcfe0, 0xa0dc, 0x6793, 0x86f6, 0x0, 0x1);
        gbc.writeMem(0xe697, { 0x7d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xded9, gbc.sp());
        EXPECT(0xe698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe697));
        // 7D 00CB
        gbc.setState(0x2e3f, 0x3e1e, 0x82b0, 0x6def, 0x261e, 0x559d, 0x1, 0x0);
        gbc.writeMem(0x2e3f, { 0x7d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3e1e, gbc.sp());
        EXPECT(0x2e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00CD
        gbc.setState(0xa3b6, 0x631c, 0xe6d0, 0x33d8, 0xad81, 0xca7c, 0x0, 0x0);
        gbc.writeMem(0xa3b6, { 0x7d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x631c, gbc.sp());
        EXPECT(0xa3b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa3b6));
        // 7D 00CE
        gbc.setState(0x9920, 0x79f6, 0x3770, 0xfc88, 0x8320, 0xf2cd, 0x0, 0x1);
        gbc.writeMem(0x9920, { 0x7d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x79f6, gbc.sp());
        EXPECT(0x9921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9920));
        // 7D 00CF
        gbc.setState(0x14a1, 0xfe5b, 0xab0, 0xba6, 0x7d2b, 0xc200, 0x1, 0x1);
        gbc.writeMem(0x14a1, { 0x7d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfe5b, gbc.sp());
        EXPECT(0x14a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00D0
        gbc.setState(0x524a, 0x8fba, 0xe80, 0x3270, 0x5589, 0x5347, 0x0, 0x0);
        gbc.writeMem(0x524a, { 0x7d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8fba, gbc.sp());
        EXPECT(0x524b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 00D1
        gbc.setState(0xbad2, 0x73a, 0x8fe0, 0xb11b, 0x751a, 0xfe0b, 0x0, 0x0);
        gbc.writeMem(0xbad2, { 0x7d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x73a, gbc.sp());
        EXPECT(0xbad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xbad2));
        // 7D 00D2
        gbc.setState(0x8d0b, 0x252d, 0x6dc0, 0x1d2a, 0x9021, 0xa1d0, 0x1, 0x0);
        gbc.writeMem(0x8d0b, { 0x7d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x252d, gbc.sp());
        EXPECT(0x8d0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8d0b));
        // 7D 00D3
        gbc.setState(0xb98b, 0xf11d, 0x50a0, 0xa7fb, 0xf1de, 0x727e, 0x1, 0x1);
        gbc.writeMem(0xb98b, { 0x7d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf11d, gbc.sp());
        EXPECT(0xb98c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb98b));
        // 7D 00D4
        gbc.setState(0xb810, 0x4ec4, 0xa9e0, 0xbabf, 0x6d17, 0xd06a, 0x0, 0x1);
        gbc.writeMem(0xb810, { 0x7d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4ec4, gbc.sp());
        EXPECT(0xb811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb810));
        // 7D 00D5
        gbc.setState(0x7dc4, 0xfbd5, 0x3b10, 0x3a76, 0xaccf, 0xb52f, 0x1, 0x1);
        gbc.writeMem(0x7dc4, { 0x7d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfbd5, gbc.sp());
        EXPECT(0x7dc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00D6
        gbc.setState(0x8ff8, 0xee4c, 0x47f0, 0x203a, 0xf02e, 0xaa58, 0x1, 0x0);
        gbc.writeMem(0x8ff8, { 0x7d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xee4c, gbc.sp());
        EXPECT(0x8ff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8ff8));
        // 7D 00D7
        gbc.setState(0x7471, 0xb507, 0xe590, 0xf94d, 0xaaf9, 0x23a2, 0x1, 0x1);
        gbc.writeMem(0x7471, { 0x7d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb507, gbc.sp());
        EXPECT(0x7472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00D8
        gbc.setState(0x33ff, 0x58bf, 0xd4b0, 0xbfbe, 0x3da1, 0xa192, 0x1, 0x0);
        gbc.writeMem(0x33ff, { 0x7d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x58bf, gbc.sp());
        EXPECT(0x3400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00D9
        gbc.setState(0xa272, 0x56b4, 0xa080, 0x7e0f, 0xb5dd, 0xe7e6, 0x0, 0x1);
        gbc.writeMem(0xa272, { 0x7d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x56b4, gbc.sp());
        EXPECT(0xa273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa272));
        // 7D 00DA
        gbc.setState(0x3eab, 0x5eb0, 0x32c0, 0xb776, 0xe92e, 0x6, 0x0, 0x0);
        gbc.writeMem(0x3eab, { 0x7d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5eb0, gbc.sp());
        EXPECT(0x3eac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 00DB
        gbc.setState(0xbc9d, 0x4729, 0xf2c0, 0x16ad, 0xa3e9, 0x98a, 0x0, 0x0);
        gbc.writeMem(0xbc9d, { 0x7d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4729, gbc.sp());
        EXPECT(0xbc9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xbc9d));
        // 7D 00DC
        gbc.setState(0x86a9, 0x9896, 0x52d0, 0x2a08, 0xcb4c, 0x8ec8, 0x1, 0x0);
        gbc.writeMem(0x86a9, { 0x7d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9896, gbc.sp());
        EXPECT(0x86aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x86a9));
        // 7D 00DD
        gbc.setState(0x7be6, 0x3576, 0x2ed0, 0x2164, 0xee01, 0xd1d2, 0x0, 0x1);
        gbc.writeMem(0x7be6, { 0x7d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3576, gbc.sp());
        EXPECT(0x7be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00DE
        gbc.setState(0x22d1, 0x44c9, 0x6cf0, 0xd151, 0x7793, 0xd254, 0x0, 0x1);
        gbc.writeMem(0x22d1, { 0x7d });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x44c9, gbc.sp());
        EXPECT(0x22d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00DF
        gbc.setState(0xab8e, 0x88a5, 0xdd00, 0x5519, 0x3b04, 0xbf34, 0x1, 0x1);
        gbc.writeMem(0xab8e, { 0x7d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x88a5, gbc.sp());
        EXPECT(0xab8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xab8e));
        // 7D 00E0
        gbc.setState(0x999, 0x1636, 0x72b0, 0xb246, 0x14b8, 0xaed4, 0x0, 0x0);
        gbc.writeMem(0x999, { 0x7d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1636, gbc.sp());
        EXPECT(0x99a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00E1
        gbc.setState(0x2216, 0x85e4, 0x370, 0x48e, 0xe81, 0x68f5, 0x0, 0x0);
        gbc.writeMem(0x2216, { 0x7d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x85e4, gbc.sp());
        EXPECT(0x2217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00E2
        gbc.setState(0xebf, 0xb256, 0x5a90, 0x5b39, 0xd766, 0x8c3d, 0x0, 0x0);
        gbc.writeMem(0xebf, { 0x7d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb256, gbc.sp());
        EXPECT(0xec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00E3
        gbc.setState(0x2408, 0x867b, 0x7570, 0xcbdb, 0x5f71, 0xcd71, 0x0, 0x1);
        gbc.writeMem(0x2408, { 0x7d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x867b, gbc.sp());
        EXPECT(0x2409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00E4
        gbc.setState(0x77d1, 0xf116, 0x250, 0x7705, 0x2aca, 0x5308, 0x0, 0x0);
        gbc.writeMem(0x77d1, { 0x7d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf116, gbc.sp());
        EXPECT(0x77d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00E5
        gbc.setState(0xbed, 0x9dd1, 0x1380, 0x5092, 0xc565, 0xa6e3, 0x0, 0x1);
        gbc.writeMem(0xbed, { 0x7d });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9dd1, gbc.sp());
        EXPECT(0xbee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 00E6
        gbc.setState(0x330a, 0xe505, 0xee40, 0xeb06, 0x4418, 0xa269, 0x1, 0x0);
        gbc.writeMem(0x330a, { 0x7d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe505, gbc.sp());
        EXPECT(0x330b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 00E7
        gbc.setState(0x31d0, 0xaa13, 0x8090, 0x4f9b, 0x3ed7, 0x205f, 0x0, 0x0);
        gbc.writeMem(0x31d0, { 0x7d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xaa13, gbc.sp());
        EXPECT(0x31d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00E8
        gbc.setState(0xba54, 0x7348, 0x5f70, 0x5e07, 0x2694, 0xfa43, 0x0, 0x1);
        gbc.writeMem(0xba54, { 0x7d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7348, gbc.sp());
        EXPECT(0xba55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xba54));
        // 7D 00E9
        gbc.setState(0x51a5, 0xf1e6, 0xf300, 0x331e, 0x1871, 0xb2a4, 0x1, 0x1);
        gbc.writeMem(0x51a5, { 0x7d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf1e6, gbc.sp());
        EXPECT(0x51a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 00EA
        gbc.setState(0x67b5, 0xe3b7, 0x1030, 0x1e17, 0x3119, 0x5c07, 0x0, 0x1);
        gbc.writeMem(0x67b5, { 0x7d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe3b7, gbc.sp());
        EXPECT(0x67b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00EB
        gbc.setState(0xddd5, 0xc15f, 0x66b0, 0xe7da, 0xf43d, 0x5868, 0x0, 0x0);
        gbc.writeMem(0xddd5, { 0x7d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc15f, gbc.sp());
        EXPECT(0xddd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xddd5));
        // 7D 00EC
        gbc.setState(0x9caf, 0x3c7c, 0x35f0, 0xb2cb, 0x5c3f, 0x843d, 0x1, 0x0);
        gbc.writeMem(0x9caf, { 0x7d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3c7c, gbc.sp());
        EXPECT(0x9cb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9caf));
        // 7D 00ED
        gbc.setState(0xc1b1, 0xa138, 0x1580, 0x4b95, 0xc10a, 0x21dc, 0x0, 0x0);
        gbc.writeMem(0xc1b1, { 0x7d });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa138, gbc.sp());
        EXPECT(0xc1b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc1b1));
        // 7D 00EF
        gbc.setState(0x7e20, 0x619, 0xd450, 0x8869, 0xecbc, 0x6827, 0x1, 0x0);
        gbc.writeMem(0x7e20, { 0x7d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x619, gbc.sp());
        EXPECT(0x7e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00F0
        gbc.setState(0xc76b, 0x94d0, 0xd9e0, 0x323, 0xe499, 0x7e35, 0x1, 0x1);
        gbc.writeMem(0xc76b, { 0x7d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x94d0, gbc.sp());
        EXPECT(0xc76c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc76b));
        // 7D 00F1
        gbc.setState(0xa0e9, 0xac4d, 0xe7a0, 0xb01, 0xbf, 0xcc8f, 0x0, 0x0);
        gbc.writeMem(0xa0e9, { 0x7d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xac4d, gbc.sp());
        EXPECT(0xa0ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa0e9));
        // 7D 00F2
        gbc.setState(0x68e5, 0xe470, 0x6a20, 0x88fa, 0x520d, 0xc912, 0x0, 0x0);
        gbc.writeMem(0x68e5, { 0x7d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe470, gbc.sp());
        EXPECT(0x68e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 00F3
        gbc.setState(0x5515, 0x3896, 0x1210, 0xf0a1, 0x4b31, 0xc5e1, 0x1, 0x1);
        gbc.writeMem(0x5515, { 0x7d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3896, gbc.sp());
        EXPECT(0x5516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00F4
        gbc.setState(0x525f, 0x3413, 0x8910, 0x9b8a, 0x6025, 0x8375, 0x1, 0x1);
        gbc.writeMem(0x525f, { 0x7d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3413, gbc.sp());
        EXPECT(0x5260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00F5
        gbc.setState(0x653d, 0x691f, 0xa2a0, 0x3912, 0xf5bc, 0x6978, 0x1, 0x0);
        gbc.writeMem(0x653d, { 0x7d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x691f, gbc.sp());
        EXPECT(0x653e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 00F6
        gbc.setState(0xae0d, 0x938f, 0x750, 0x6387, 0xd221, 0x1a6, 0x1, 0x1);
        gbc.writeMem(0xae0d, { 0x7d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x938f, gbc.sp());
        EXPECT(0xae0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xae0d));
        // 7D 00F8
        gbc.setState(0x14bc, 0x9ed4, 0x8e10, 0x3fa1, 0x64ba, 0xcde9, 0x1, 0x1);
        gbc.writeMem(0x14bc, { 0x7d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9ed4, gbc.sp());
        EXPECT(0x14bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00FA
        gbc.setState(0x2623, 0xff63, 0x75a0, 0xa417, 0x911, 0x6de6, 0x0, 0x1);
        gbc.writeMem(0x2623, { 0x7d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xff63, gbc.sp());
        EXPECT(0x2624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 00FB
        gbc.setState(0xabb9, 0x82b6, 0x8880, 0x1114, 0x9bcd, 0x6c7c, 0x1, 0x1);
        gbc.writeMem(0xabb9, { 0x7d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x82b6, gbc.sp());
        EXPECT(0xabba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xabb9));
        // 7D 00FC
        gbc.setState(0x5986, 0x4a06, 0xadd0, 0x6707, 0x2f45, 0xd8da, 0x0, 0x1);
        gbc.writeMem(0x5986, { 0x7d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4a06, gbc.sp());
        EXPECT(0x5987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 00FD
        gbc.setState(0x267b, 0xa3e6, 0xb580, 0x593, 0xd169, 0x1aad, 0x0, 0x0);
        gbc.writeMem(0x267b, { 0x7d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa3e6, gbc.sp());
        EXPECT(0x267c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 00FE
        gbc.setState(0x89a1, 0x8da6, 0x6d80, 0xe73b, 0x2c78, 0x34b9, 0x0, 0x0);
        gbc.writeMem(0x89a1, { 0x7d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8da6, gbc.sp());
        EXPECT(0x89a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x89a1));
        // 7D 0100
        gbc.setState(0x30d7, 0xcb66, 0x4590, 0xa849, 0xc765, 0xa77a, 0x1, 0x1);
        gbc.writeMem(0x30d7, { 0x7d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xcb66, gbc.sp());
        EXPECT(0x30d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0101
        gbc.setState(0x3f96, 0x7d70, 0xbed0, 0x20e2, 0x7ecb, 0x992, 0x0, 0x0);
        gbc.writeMem(0x3f96, { 0x7d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7d70, gbc.sp());
        EXPECT(0x3f97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0102
        gbc.setState(0xa40e, 0xf9a7, 0x72b0, 0xdc2f, 0x9a30, 0x5596, 0x1, 0x1);
        gbc.writeMem(0xa40e, { 0x7d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf9a7, gbc.sp());
        EXPECT(0xa40f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa40e));
        // 7D 0103
        gbc.setState(0xedc3, 0x7a06, 0x6bf0, 0xdb7f, 0x36c2, 0x1337, 0x1, 0x0);
        gbc.writeMem(0xedc3, { 0x7d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7a06, gbc.sp());
        EXPECT(0xedc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xedc3));
        // 7D 0104
        gbc.setState(0xa2db, 0x9993, 0x3110, 0xc4ae, 0xb967, 0x48d, 0x1, 0x1);
        gbc.writeMem(0xa2db, { 0x7d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9993, gbc.sp());
        EXPECT(0xa2dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa2db));
        // 7D 0105
        gbc.setState(0x2a9d, 0xf8b0, 0x9970, 0xf224, 0x489b, 0x462e, 0x0, 0x0);
        gbc.writeMem(0x2a9d, { 0x7d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf8b0, gbc.sp());
        EXPECT(0x2a9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0106
        gbc.setState(0xc964, 0xed15, 0xc460, 0xed5e, 0x1dab, 0xbfb3, 0x0, 0x0);
        gbc.writeMem(0xc964, { 0x7d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xed15, gbc.sp());
        EXPECT(0xc965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc964));
        // 7D 0107
        gbc.setState(0x675a, 0x1247, 0x3390, 0x8ec1, 0x2917, 0xa566, 0x0, 0x1);
        gbc.writeMem(0x675a, { 0x7d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1247, gbc.sp());
        EXPECT(0x675b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0108
        gbc.setState(0x3ff9, 0xddd0, 0x440, 0x4540, 0xf575, 0x70bd, 0x1, 0x0);
        gbc.writeMem(0x3ff9, { 0x7d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xddd0, gbc.sp());
        EXPECT(0x3ffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0109
        gbc.setState(0xdd20, 0xfb4, 0x4440, 0xe735, 0xa10e, 0xbdb4, 0x1, 0x0);
        gbc.writeMem(0xdd20, { 0x7d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfb4, gbc.sp());
        EXPECT(0xdd21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xdd20));
        // 7D 010A
        gbc.setState(0xe763, 0x2144, 0xa080, 0xcc18, 0xddec, 0xabe2, 0x0, 0x1);
        gbc.writeMem(0xe763, { 0x7d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2144, gbc.sp());
        EXPECT(0xe764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe763));
        // 7D 010B
        gbc.setState(0x869d, 0x10f5, 0x5ea0, 0x5cb4, 0xc9f0, 0xe145, 0x1, 0x1);
        gbc.writeMem(0x869d, { 0x7d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x10f5, gbc.sp());
        EXPECT(0x869e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x869d));
        // 7D 010C
        gbc.setState(0xa9ec, 0xd9b, 0x18c0, 0x389d, 0xb70, 0xac96, 0x0, 0x0);
        gbc.writeMem(0xa9ec, { 0x7d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd9b, gbc.sp());
        EXPECT(0xa9ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa9ec));
        // 7D 010D
        gbc.setState(0x6f4e, 0x2a93, 0x3570, 0x8dcc, 0xaf41, 0x9230, 0x1, 0x0);
        gbc.writeMem(0x6f4e, { 0x7d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2a93, gbc.sp());
        EXPECT(0x6f4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 010E
        gbc.setState(0x19e4, 0x2df, 0x3de0, 0x1402, 0xa610, 0xa52e, 0x1, 0x0);
        gbc.writeMem(0x19e4, { 0x7d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2df, gbc.sp());
        EXPECT(0x19e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 010F
        gbc.setState(0x34ed, 0x4ebf, 0x51a0, 0xa2dd, 0x5910, 0x3536, 0x0, 0x1);
        gbc.writeMem(0x34ed, { 0x7d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4ebf, gbc.sp());
        EXPECT(0x34ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0110
        gbc.setState(0x93e9, 0x18b4, 0x4bd0, 0x3b12, 0xb6f6, 0x5c65, 0x0, 0x1);
        gbc.writeMem(0x93e9, { 0x7d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x18b4, gbc.sp());
        EXPECT(0x93ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x93e9));
        // 7D 0111
        gbc.setState(0x8eab, 0x9011, 0xa880, 0xc5f1, 0x2f2, 0xa35a, 0x0, 0x0);
        gbc.writeMem(0x8eab, { 0x7d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9011, gbc.sp());
        EXPECT(0x8eac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8eab));
        // 7D 0112
        gbc.setState(0x443e, 0x86b9, 0xc90, 0x740f, 0xeebe, 0x9405, 0x0, 0x1);
        gbc.writeMem(0x443e, { 0x7d });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x86b9, gbc.sp());
        EXPECT(0x443f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0113
        gbc.setState(0x5f55, 0xe77b, 0x1130, 0xb634, 0xa620, 0x6820, 0x1, 0x1);
        gbc.writeMem(0x5f55, { 0x7d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe77b, gbc.sp());
        EXPECT(0x5f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0114
        gbc.setState(0x3673, 0x33b7, 0x51e0, 0xa983, 0xa883, 0xc0, 0x0, 0x1);
        gbc.writeMem(0x3673, { 0x7d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x33b7, gbc.sp());
        EXPECT(0x3674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0115
        gbc.setState(0x869b, 0x41f4, 0x66a0, 0xaf56, 0x565b, 0x84a, 0x0, 0x1);
        gbc.writeMem(0x869b, { 0x7d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x41f4, gbc.sp());
        EXPECT(0x869c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x869b));
        // 7D 0116
        gbc.setState(0x8a25, 0xfab3, 0xc6f0, 0x49d3, 0x64cc, 0x482a, 0x1, 0x0);
        gbc.writeMem(0x8a25, { 0x7d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfab3, gbc.sp());
        EXPECT(0x8a26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8a25));
        // 7D 0117
        gbc.setState(0x6750, 0xad64, 0xf3a0, 0x698f, 0x1efb, 0x8bfe, 0x0, 0x0);
        gbc.writeMem(0x6750, { 0x7d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xad64, gbc.sp());
        EXPECT(0x6751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0118
        gbc.setState(0xef26, 0x37fa, 0xf7c0, 0x758c, 0xc27d, 0x970f, 0x0, 0x1);
        gbc.writeMem(0xef26, { 0x7d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x37fa, gbc.sp());
        EXPECT(0xef27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xef26));
        // 7D 0119
        gbc.setState(0xdf89, 0xdbc7, 0xcbb0, 0xbdf7, 0x1bec, 0x8187, 0x0, 0x1);
        gbc.writeMem(0xdf89, { 0x7d });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xdbc7, gbc.sp());
        EXPECT(0xdf8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xdf89));
        // 7D 011A
        gbc.setState(0x714f, 0x11cc, 0xdad0, 0x71b9, 0x8c9c, 0x41a9, 0x1, 0x1);
        gbc.writeMem(0x714f, { 0x7d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x11cc, gbc.sp());
        EXPECT(0x7150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 011B
        gbc.setState(0xebe4, 0x4c51, 0x7200, 0xb501, 0xb5ef, 0x5d4d, 0x0, 0x0);
        gbc.writeMem(0xebe4, { 0x7d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4c51, gbc.sp());
        EXPECT(0xebe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xebe4));
        // 7D 011C
        gbc.setState(0x1eba, 0xf958, 0x3f00, 0x484e, 0x537c, 0x3767, 0x0, 0x1);
        gbc.writeMem(0x1eba, { 0x7d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf958, gbc.sp());
        EXPECT(0x1ebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 011D
        gbc.setState(0xaf8d, 0xb492, 0x2860, 0x6ca4, 0xd87c, 0x3e67, 0x1, 0x1);
        gbc.writeMem(0xaf8d, { 0x7d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb492, gbc.sp());
        EXPECT(0xaf8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xaf8d));
        // 7D 011E
        gbc.setState(0x84fc, 0x6a0, 0x7cd0, 0x7c97, 0x939e, 0x593f, 0x0, 0x0);
        gbc.writeMem(0x84fc, { 0x7d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6a0, gbc.sp());
        EXPECT(0x84fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x84fc));
        // 7D 011F
        gbc.setState(0xeebf, 0x2618, 0xed60, 0xeac3, 0x33fa, 0xda73, 0x0, 0x1);
        gbc.writeMem(0xeebf, { 0x7d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2618, gbc.sp());
        EXPECT(0xeec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xeebf));
        // 7D 0120
        gbc.setState(0xe7f6, 0xf17f, 0x9070, 0x4b47, 0x8786, 0xfde9, 0x1, 0x1);
        gbc.writeMem(0xe7f6, { 0x7d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf17f, gbc.sp());
        EXPECT(0xe7f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe7f6));
        // 7D 0122
        gbc.setState(0xaff5, 0x44f2, 0xea70, 0xc3cf, 0xbf79, 0xfe96, 0x1, 0x1);
        gbc.writeMem(0xaff5, { 0x7d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x44f2, gbc.sp());
        EXPECT(0xaff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xaff5));
        // 7D 0125
        gbc.setState(0xe99b, 0xd8a3, 0xa470, 0x44a, 0x5550, 0xefe6, 0x0, 0x0);
        gbc.writeMem(0xe99b, { 0x7d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd8a3, gbc.sp());
        EXPECT(0xe99c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe99b));
        // 7D 0126
        gbc.setState(0x5c9, 0x4fce, 0x6580, 0x3c2a, 0x3d51, 0x3952, 0x0, 0x1);
        gbc.writeMem(0x5c9, { 0x7d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4fce, gbc.sp());
        EXPECT(0x5ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0127
        gbc.setState(0xd9f0, 0x2a4, 0x5470, 0xccc7, 0xac27, 0x7109, 0x0, 0x1);
        gbc.writeMem(0xd9f0, { 0x7d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2a4, gbc.sp());
        EXPECT(0xd9f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd9f0));
        // 7D 0128
        gbc.setState(0xdb5a, 0x81b2, 0x4ae0, 0x72b, 0xc3e9, 0x3f35, 0x1, 0x1);
        gbc.writeMem(0xdb5a, { 0x7d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x81b2, gbc.sp());
        EXPECT(0xdb5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xdb5a));
        // 7D 0129
        gbc.setState(0x78bb, 0x30f7, 0x320, 0x95a7, 0x5af7, 0xc60c, 0x1, 0x0);
        gbc.writeMem(0x78bb, { 0x7d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x30f7, gbc.sp());
        EXPECT(0x78bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 012A
        gbc.setState(0x8714, 0x545, 0x7de0, 0xb682, 0x3751, 0xf131, 0x1, 0x0);
        gbc.writeMem(0x8714, { 0x7d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x545, gbc.sp());
        EXPECT(0x8715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8714));
        // 7D 012B
        gbc.setState(0x8548, 0x1444, 0x30b0, 0xd0f1, 0x71ff, 0xad3e, 0x1, 0x1);
        gbc.writeMem(0x8548, { 0x7d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1444, gbc.sp());
        EXPECT(0x8549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8548));
        // 7D 012C
        gbc.setState(0x94c, 0xd2, 0xbfe0, 0xdfc9, 0x2a92, 0xedb2, 0x1, 0x1);
        gbc.writeMem(0x94c, { 0x7d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd2, gbc.sp());
        EXPECT(0x94d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 012D
        gbc.setState(0xb978, 0xf654, 0x4b80, 0x8cf3, 0x6eea, 0x9b28, 0x0, 0x0);
        gbc.writeMem(0xb978, { 0x7d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf654, gbc.sp());
        EXPECT(0xb979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb978));
        // 7D 012E
        gbc.setState(0xd60b, 0x4f8f, 0xc200, 0x6176, 0x891a, 0xf2cb, 0x1, 0x0);
        gbc.writeMem(0xd60b, { 0x7d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4f8f, gbc.sp());
        EXPECT(0xd60c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd60b));
        // 7D 012F
        gbc.setState(0xdcd3, 0x63e0, 0x4920, 0xcfd3, 0xe675, 0xe0c5, 0x0, 0x0);
        gbc.writeMem(0xdcd3, { 0x7d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x63e0, gbc.sp());
        EXPECT(0xdcd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xdcd3));
        // 7D 0130
        gbc.setState(0xb57, 0x99ab, 0x38f0, 0x4ad, 0x73d4, 0x49c4, 0x0, 0x1);
        gbc.writeMem(0xb57, { 0x7d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x99ab, gbc.sp());
        EXPECT(0xb58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0131
        gbc.setState(0x54d8, 0x4963, 0x2b40, 0x8ff2, 0xefc8, 0xa3e2, 0x0, 0x1);
        gbc.writeMem(0x54d8, { 0x7d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4963, gbc.sp());
        EXPECT(0x54d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0132
        gbc.setState(0x85c3, 0x83c1, 0xd10, 0x82f9, 0x6f8f, 0x5a1a, 0x1, 0x1);
        gbc.writeMem(0x85c3, { 0x7d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x83c1, gbc.sp());
        EXPECT(0x85c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x85c3));
        // 7D 0133
        gbc.setState(0x476d, 0x66f, 0xeef0, 0xe6b2, 0xb8d, 0x1b6f, 0x1, 0x0);
        gbc.writeMem(0x476d, { 0x7d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x66f, gbc.sp());
        EXPECT(0x476e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0134
        gbc.setState(0x29ce, 0xc125, 0xf660, 0x9fe6, 0xae06, 0x547d, 0x1, 0x0);
        gbc.writeMem(0x29ce, { 0x7d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc125, gbc.sp());
        EXPECT(0x29cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0136
        gbc.setState(0x9a82, 0x4203, 0xfb40, 0x1b9f, 0xbcc4, 0x980b, 0x0, 0x0);
        gbc.writeMem(0x9a82, { 0x7d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4203, gbc.sp());
        EXPECT(0x9a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9a82));
        // 7D 0137
        gbc.setState(0x992d, 0x65a1, 0x4820, 0x9526, 0x3897, 0x86a2, 0x1, 0x1);
        gbc.writeMem(0x992d, { 0x7d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x65a1, gbc.sp());
        EXPECT(0x992e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x992d));
        // 7D 0138
        gbc.setState(0x65f7, 0x309, 0x13e0, 0xaa9e, 0x23b8, 0xc8b6, 0x1, 0x1);
        gbc.writeMem(0x65f7, { 0x7d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x309, gbc.sp());
        EXPECT(0x65f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 013A
        gbc.setState(0x37e7, 0x5420, 0xd820, 0xbcf4, 0xc7a7, 0x330c, 0x0, 0x1);
        gbc.writeMem(0x37e7, { 0x7d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5420, gbc.sp());
        EXPECT(0x37e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 013B
        gbc.setState(0xdaa2, 0x46d2, 0x5270, 0x632a, 0xa78e, 0xeeb2, 0x0, 0x0);
        gbc.writeMem(0xdaa2, { 0x7d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x46d2, gbc.sp());
        EXPECT(0xdaa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xdaa2));
        // 7D 013C
        gbc.setState(0xb3, 0x3253, 0x7f40, 0xdae0, 0x7d9d, 0xe35, 0x0, 0x0);
        gbc.writeMem(0xb3, { 0x7d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3253, gbc.sp());
        EXPECT(0xb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 013D
        gbc.setState(0x550c, 0x3eb3, 0x9b0, 0xf180, 0xf7ba, 0xf06f, 0x0, 0x0);
        gbc.writeMem(0x550c, { 0x7d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3eb3, gbc.sp());
        EXPECT(0x550d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 013E
        gbc.setState(0x3ab5, 0x6381, 0xb920, 0x2aaa, 0xea43, 0xe158, 0x1, 0x1);
        gbc.writeMem(0x3ab5, { 0x7d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6381, gbc.sp());
        EXPECT(0x3ab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 013F
        gbc.setState(0x21b3, 0xa885, 0x8090, 0x2b52, 0xd580, 0x6da3, 0x0, 0x0);
        gbc.writeMem(0x21b3, { 0x7d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa885, gbc.sp());
        EXPECT(0x21b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0140
        gbc.setState(0x2f22, 0x2bbd, 0xd620, 0x950b, 0xf752, 0x59ee, 0x0, 0x1);
        gbc.writeMem(0x2f22, { 0x7d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2bbd, gbc.sp());
        EXPECT(0x2f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0141
        gbc.setState(0xcddf, 0xe0d1, 0xca90, 0x3a38, 0x90a7, 0xef1, 0x0, 0x1);
        gbc.writeMem(0xcddf, { 0x7d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe0d1, gbc.sp());
        EXPECT(0xcde0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xcddf));
        // 7D 0142
        gbc.setState(0x45f, 0x3b15, 0x9f50, 0x94bc, 0xd35a, 0x77fa, 0x0, 0x1);
        gbc.writeMem(0x45f, { 0x7d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3b15, gbc.sp());
        EXPECT(0x460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0143
        gbc.setState(0x51f5, 0x2d67, 0x49e0, 0x13b3, 0x6725, 0xc3bb, 0x1, 0x0);
        gbc.writeMem(0x51f5, { 0x7d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2d67, gbc.sp());
        EXPECT(0x51f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0144
        gbc.setState(0x9af4, 0xf23e, 0xb7b0, 0xd91a, 0xcc16, 0x6c8d, 0x0, 0x0);
        gbc.writeMem(0x9af4, { 0x7d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf23e, gbc.sp());
        EXPECT(0x9af5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9af4));
        // 7D 0145
        gbc.setState(0xca1f, 0x6185, 0x5870, 0x1e02, 0xe0ca, 0xdf2, 0x1, 0x1);
        gbc.writeMem(0xca1f, { 0x7d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6185, gbc.sp());
        EXPECT(0xca20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xca1f));
        // 7D 0146
        gbc.setState(0x31e, 0xf6e, 0x6cc0, 0x6f2f, 0xefb7, 0x56bb, 0x1, 0x0);
        gbc.writeMem(0x31e, { 0x7d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf6e, gbc.sp());
        EXPECT(0x31f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0147
        gbc.setState(0x64a7, 0xec71, 0x1130, 0x92b, 0x3811, 0xdcfd, 0x0, 0x0);
        gbc.writeMem(0x64a7, { 0x7d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xec71, gbc.sp());
        EXPECT(0x64a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0148
        gbc.setState(0xacd3, 0x593, 0x8870, 0x93c1, 0xb4c9, 0xfe21, 0x0, 0x0);
        gbc.writeMem(0xacd3, { 0x7d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x593, gbc.sp());
        EXPECT(0xacd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xacd3));
        // 7D 0149
        gbc.setState(0xeae3, 0x4642, 0xfc40, 0x7900, 0xed11, 0x71a, 0x0, 0x1);
        gbc.writeMem(0xeae3, { 0x7d });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4642, gbc.sp());
        EXPECT(0xeae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xeae3));
        // 7D 014A
        gbc.setState(0xd017, 0xdfab, 0xcdc0, 0x390f, 0x284f, 0xc1dd, 0x0, 0x1);
        gbc.writeMem(0xd017, { 0x7d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xdfab, gbc.sp());
        EXPECT(0xd018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd017));
        // 7D 014B
        gbc.setState(0x903c, 0xce46, 0xe030, 0x52d6, 0xbaa5, 0x94ac, 0x0, 0x0);
        gbc.writeMem(0x903c, { 0x7d });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xce46, gbc.sp());
        EXPECT(0x903d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x903c));
        // 7D 014C
        gbc.setState(0x7476, 0x84b4, 0x4e50, 0xe03d, 0xf123, 0xd3dd, 0x1, 0x1);
        gbc.writeMem(0x7476, { 0x7d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x84b4, gbc.sp());
        EXPECT(0x7477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 014D
        gbc.setState(0xb56d, 0x1d13, 0x7ac0, 0xbd64, 0x1447, 0x926b, 0x0, 0x1);
        gbc.writeMem(0xb56d, { 0x7d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1d13, gbc.sp());
        EXPECT(0xb56e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb56d));
        // 7D 014E
        gbc.setState(0x76be, 0x671a, 0x6810, 0x58a, 0x11d4, 0x6386, 0x1, 0x0);
        gbc.writeMem(0x76be, { 0x7d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x671a, gbc.sp());
        EXPECT(0x76bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 014F
        gbc.setState(0x8752, 0x7d71, 0x32b0, 0xce71, 0xc888, 0x7b10, 0x0, 0x0);
        gbc.writeMem(0x8752, { 0x7d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7d71, gbc.sp());
        EXPECT(0x8753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8752));
        // 7D 0150
        gbc.setState(0x7b07, 0xad5f, 0x9f0, 0xb9bc, 0x5930, 0x7845, 0x0, 0x1);
        gbc.writeMem(0x7b07, { 0x7d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xad5f, gbc.sp());
        EXPECT(0x7b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0151
        gbc.setState(0xea3c, 0x2d0f, 0xe960, 0x944e, 0xb7b7, 0xdfd1, 0x0, 0x1);
        gbc.writeMem(0xea3c, { 0x7d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2d0f, gbc.sp());
        EXPECT(0xea3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xea3c));
        // 7D 0152
        gbc.setState(0xb96c, 0xff79, 0xeba0, 0x1f67, 0xd5c6, 0x1a88, 0x0, 0x1);
        gbc.writeMem(0xb96c, { 0x7d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xff79, gbc.sp());
        EXPECT(0xb96d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb96c));
        // 7D 0153
        gbc.setState(0x5fed, 0x3f27, 0x960, 0x7762, 0x4c7e, 0x132e, 0x0, 0x0);
        gbc.writeMem(0x5fed, { 0x7d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3f27, gbc.sp());
        EXPECT(0x5fee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0154
        gbc.setState(0xc6e0, 0x88b7, 0xf350, 0x5f3c, 0x80cd, 0xc2b8, 0x0, 0x1);
        gbc.writeMem(0xc6e0, { 0x7d });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x88b7, gbc.sp());
        EXPECT(0xc6e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc6e0));
        // 7D 0155
        gbc.setState(0xc18d, 0x518f, 0x6d60, 0xee7f, 0x7531, 0x16a5, 0x0, 0x1);
        gbc.writeMem(0xc18d, { 0x7d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x518f, gbc.sp());
        EXPECT(0xc18e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc18d));
        // 7D 0156
        gbc.setState(0x8057, 0x41cd, 0x52e0, 0xf0d9, 0xa315, 0xb92a, 0x0, 0x0);
        gbc.writeMem(0x8057, { 0x7d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x41cd, gbc.sp());
        EXPECT(0x8058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8057));
        // 7D 0157
        gbc.setState(0xe866, 0x962f, 0x5890, 0x6334, 0x2dd8, 0x7f34, 0x0, 0x1);
        gbc.writeMem(0xe866, { 0x7d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x962f, gbc.sp());
        EXPECT(0xe867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe866));
        // 7D 0158
        gbc.setState(0xb8b9, 0x5166, 0xcec0, 0x8be8, 0xf953, 0x6ca0, 0x1, 0x1);
        gbc.writeMem(0xb8b9, { 0x7d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5166, gbc.sp());
        EXPECT(0xb8ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb8b9));
        // 7D 0159
        gbc.setState(0xab1e, 0x400f, 0xcb90, 0xd914, 0x3230, 0x3f33, 0x0, 0x1);
        gbc.writeMem(0xab1e, { 0x7d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x400f, gbc.sp());
        EXPECT(0xab1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xab1e));
        // 7D 015A
        gbc.setState(0x5e54, 0x32d3, 0x6e0, 0x79e1, 0x9f4b, 0x65a0, 0x0, 0x1);
        gbc.writeMem(0x5e54, { 0x7d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x32d3, gbc.sp());
        EXPECT(0x5e55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 015B
        gbc.setState(0xe1a3, 0xd46c, 0xfda0, 0xd549, 0x26ec, 0x61e6, 0x1, 0x1);
        gbc.writeMem(0xe1a3, { 0x7d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd46c, gbc.sp());
        EXPECT(0xe1a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe1a3));
        // 7D 015C
        gbc.setState(0xda62, 0x1a2b, 0x210, 0xedcf, 0xbad4, 0x77d3, 0x0, 0x0);
        gbc.writeMem(0xda62, { 0x7d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1a2b, gbc.sp());
        EXPECT(0xda63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xda62));
        // 7D 015D
        gbc.setState(0x83d1, 0xbb62, 0xa790, 0xd767, 0xdbfa, 0xdb14, 0x1, 0x0);
        gbc.writeMem(0x83d1, { 0x7d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbb62, gbc.sp());
        EXPECT(0x83d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x83d1));
        // 7D 015E
        gbc.setState(0xabd1, 0x321a, 0xbe10, 0xb367, 0x9a8c, 0xf5cf, 0x0, 0x1);
        gbc.writeMem(0xabd1, { 0x7d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x321a, gbc.sp());
        EXPECT(0xabd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xabd1));
        // 7D 015F
        gbc.setState(0xc613, 0xaa0b, 0x7680, 0x7a0f, 0xe0ac, 0x93b5, 0x1, 0x1);
        gbc.writeMem(0xc613, { 0x7d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xaa0b, gbc.sp());
        EXPECT(0xc614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc613));
        // 7D 0161
        gbc.setState(0xaafa, 0xc978, 0xaf30, 0x347b, 0x3835, 0xb9d8, 0x1, 0x1);
        gbc.writeMem(0xaafa, { 0x7d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc978, gbc.sp());
        EXPECT(0xaafb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xaafa));
        // 7D 0162
        gbc.setState(0x7f84, 0xbf8d, 0x3350, 0x7b49, 0x2e42, 0x1cec, 0x1, 0x0);
        gbc.writeMem(0x7f84, { 0x7d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbf8d, gbc.sp());
        EXPECT(0x7f85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0163
        gbc.setState(0x528d, 0xdc84, 0x76b0, 0xe4de, 0x6fd4, 0xe2f5, 0x1, 0x0);
        gbc.writeMem(0x528d, { 0x7d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xdc84, gbc.sp());
        EXPECT(0x528e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0164
        gbc.setState(0x6e37, 0xb767, 0xd00, 0xa02c, 0x1c85, 0xd6a6, 0x0, 0x0);
        gbc.writeMem(0x6e37, { 0x7d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb767, gbc.sp());
        EXPECT(0x6e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0165
        gbc.setState(0x7709, 0x93b4, 0x1020, 0x9daf, 0xbd2b, 0xc1a6, 0x0, 0x1);
        gbc.writeMem(0x7709, { 0x7d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x93b4, gbc.sp());
        EXPECT(0x770a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0166
        gbc.setState(0xd4f0, 0xc4e6, 0x29e0, 0x671d, 0x8945, 0x6e10, 0x1, 0x1);
        gbc.writeMem(0xd4f0, { 0x7d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc4e6, gbc.sp());
        EXPECT(0xd4f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd4f0));
        // 7D 0167
        gbc.setState(0xefda, 0x8578, 0xc920, 0xb0bc, 0x338c, 0x5ab3, 0x0, 0x0);
        gbc.writeMem(0xefda, { 0x7d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8578, gbc.sp());
        EXPECT(0xefdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xefda));
        // 7D 0168
        gbc.setState(0xd6d0, 0x51ae, 0x5d90, 0xce8f, 0x2c08, 0x5fef, 0x1, 0x1);
        gbc.writeMem(0xd6d0, { 0x7d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x51ae, gbc.sp());
        EXPECT(0xd6d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd6d0));
        // 7D 0169
        gbc.setState(0xddf9, 0x5f3d, 0xeb20, 0x2e0b, 0xd23c, 0xb3be, 0x1, 0x1);
        gbc.writeMem(0xddf9, { 0x7d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5f3d, gbc.sp());
        EXPECT(0xddfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xddf9));
        // 7D 016A
        gbc.setState(0x882a, 0x58ba, 0xfac0, 0xecbe, 0x205f, 0x3b36, 0x1, 0x1);
        gbc.writeMem(0x882a, { 0x7d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x58ba, gbc.sp());
        EXPECT(0x882b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x882a));
        // 7D 016B
        gbc.setState(0x7405, 0xc71b, 0x4f50, 0x9dfe, 0x9a19, 0xc775, 0x0, 0x1);
        gbc.writeMem(0x7405, { 0x7d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc71b, gbc.sp());
        EXPECT(0x7406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 016C
        gbc.setState(0x39c4, 0xf3ff, 0x7440, 0xa5e3, 0x19e9, 0x99bc, 0x0, 0x1);
        gbc.writeMem(0x39c4, { 0x7d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf3ff, gbc.sp());
        EXPECT(0x39c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 016D
        gbc.setState(0x753f, 0x5a23, 0xb1a0, 0x515, 0x4a15, 0xe19d, 0x1, 0x1);
        gbc.writeMem(0x753f, { 0x7d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5a23, gbc.sp());
        EXPECT(0x7540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 016E
        gbc.setState(0x17b2, 0x4314, 0xd600, 0x4cac, 0xdc64, 0xd339, 0x0, 0x0);
        gbc.writeMem(0x17b2, { 0x7d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4314, gbc.sp());
        EXPECT(0x17b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 016F
        gbc.setState(0xed81, 0x4194, 0xde50, 0xf89f, 0x7e90, 0x7ff4, 0x1, 0x0);
        gbc.writeMem(0xed81, { 0x7d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4194, gbc.sp());
        EXPECT(0xed82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xed81));
        // 7D 0170
        gbc.setState(0x9105, 0x5af6, 0x7260, 0x4ebc, 0xa402, 0x1e8e, 0x0, 0x0);
        gbc.writeMem(0x9105, { 0x7d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5af6, gbc.sp());
        EXPECT(0x9106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9105));
        // 7D 0171
        gbc.setState(0x6d90, 0x579b, 0x7fe0, 0xc78f, 0xeab9, 0x16c5, 0x0, 0x1);
        gbc.writeMem(0x6d90, { 0x7d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x579b, gbc.sp());
        EXPECT(0x6d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0172
        gbc.setState(0xb29e, 0xd3b3, 0x2b80, 0x8835, 0xd41b, 0x8b3f, 0x1, 0x1);
        gbc.writeMem(0xb29e, { 0x7d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd3b3, gbc.sp());
        EXPECT(0xb29f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb29e));
        // 7D 0173
        gbc.setState(0x8c39, 0x5cab, 0x63a0, 0x74a2, 0xfbd2, 0x420e, 0x1, 0x0);
        gbc.writeMem(0x8c39, { 0x7d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5cab, gbc.sp());
        EXPECT(0x8c3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8c39));
        // 7D 0176
        gbc.setState(0x4a9a, 0x68fb, 0x290, 0x7004, 0xdc75, 0xd938, 0x0, 0x0);
        gbc.writeMem(0x4a9a, { 0x7d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x68fb, gbc.sp());
        EXPECT(0x4a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0177
        gbc.setState(0x91c, 0x4d97, 0xcd70, 0x8b00, 0xb5d1, 0xa539, 0x0, 0x1);
        gbc.writeMem(0x91c, { 0x7d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4d97, gbc.sp());
        EXPECT(0x91d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0178
        gbc.setState(0x986d, 0x895b, 0x1da0, 0x8d25, 0xc88f, 0xca47, 0x0, 0x1);
        gbc.writeMem(0x986d, { 0x7d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x895b, gbc.sp());
        EXPECT(0x986e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x986d));
        // 7D 0179
        gbc.setState(0xb896, 0xe275, 0x8850, 0xee65, 0xdc1b, 0x2d77, 0x1, 0x1);
        gbc.writeMem(0xb896, { 0x7d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe275, gbc.sp());
        EXPECT(0xb897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb896));
        // 7D 017A
        gbc.setState(0xba03, 0x5797, 0x2210, 0x7a01, 0x5249, 0x288e, 0x0, 0x0);
        gbc.writeMem(0xba03, { 0x7d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5797, gbc.sp());
        EXPECT(0xba04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xba03));
        // 7D 017B
        gbc.setState(0xcad8, 0x5475, 0xcd70, 0x5298, 0x8b1, 0x6d0a, 0x1, 0x0);
        gbc.writeMem(0xcad8, { 0x7d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5475, gbc.sp());
        EXPECT(0xcad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xcad8));
        // 7D 017C
        gbc.setState(0xedb4, 0x5800, 0x24d0, 0x6945, 0xdb1d, 0xca7, 0x1, 0x1);
        gbc.writeMem(0xedb4, { 0x7d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5800, gbc.sp());
        EXPECT(0xedb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xedb4));
        // 7D 017D
        gbc.setState(0x4363, 0x3c4c, 0x9df0, 0xf602, 0x1929, 0xbe16, 0x0, 0x0);
        gbc.writeMem(0x4363, { 0x7d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3c4c, gbc.sp());
        EXPECT(0x4364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 017E
        gbc.setState(0x94c2, 0xe961, 0xcf20, 0x16a1, 0x3066, 0x9a49, 0x1, 0x0);
        gbc.writeMem(0x94c2, { 0x7d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe961, gbc.sp());
        EXPECT(0x94c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x94c2));
        // 7D 017F
        gbc.setState(0xb2d5, 0x55ef, 0x87d0, 0x9b84, 0x2052, 0x4f06, 0x0, 0x1);
        gbc.writeMem(0xb2d5, { 0x7d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x55ef, gbc.sp());
        EXPECT(0xb2d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb2d5));
        // 7D 0180
        gbc.setState(0x6ff7, 0x6267, 0xde40, 0x4ffa, 0xbcf2, 0x7569, 0x1, 0x1);
        gbc.writeMem(0x6ff7, { 0x7d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6267, gbc.sp());
        EXPECT(0x6ff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0181
        gbc.setState(0x7120, 0xea13, 0xa6c0, 0x1ef5, 0xc2a5, 0xf481, 0x1, 0x1);
        gbc.writeMem(0x7120, { 0x7d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xea13, gbc.sp());
        EXPECT(0x7121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0182
        gbc.setState(0x3a12, 0xe3cc, 0xe300, 0x4256, 0xf065, 0x5199, 0x0, 0x0);
        gbc.writeMem(0x3a12, { 0x7d });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe3cc, gbc.sp());
        EXPECT(0x3a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0183
        gbc.setState(0x4bfd, 0xd8b0, 0x67d0, 0xe5e0, 0x5e35, 0x5883, 0x1, 0x1);
        gbc.writeMem(0x4bfd, { 0x7d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd8b0, gbc.sp());
        EXPECT(0x4bfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0184
        gbc.setState(0x5bf1, 0xb5cc, 0xe540, 0x1c65, 0xd59b, 0x8663, 0x1, 0x0);
        gbc.writeMem(0x5bf1, { 0x7d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb5cc, gbc.sp());
        EXPECT(0x5bf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0185
        gbc.setState(0xe0ba, 0xce1f, 0x9260, 0x193a, 0xfd0f, 0x7a2e, 0x1, 0x1);
        gbc.writeMem(0xe0ba, { 0x7d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xce1f, gbc.sp());
        EXPECT(0xe0bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe0ba));
        // 7D 0186
        gbc.setState(0x68f3, 0xd637, 0x8530, 0x77e1, 0x36aa, 0x2d7c, 0x1, 0x0);
        gbc.writeMem(0x68f3, { 0x7d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd637, gbc.sp());
        EXPECT(0x68f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0187
        gbc.setState(0x29cd, 0x9502, 0xc5e0, 0x262c, 0x3563, 0x52d8, 0x1, 0x0);
        gbc.writeMem(0x29cd, { 0x7d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9502, gbc.sp());
        EXPECT(0x29ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0188
        gbc.setState(0x5934, 0x681, 0xc4b0, 0x74b4, 0x8aa3, 0x21a5, 0x1, 0x0);
        gbc.writeMem(0x5934, { 0x7d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x681, gbc.sp());
        EXPECT(0x5935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0189
        gbc.setState(0x2498, 0x1748, 0xe630, 0xba48, 0x64e4, 0x7fa7, 0x1, 0x1);
        gbc.writeMem(0x2498, { 0x7d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1748, gbc.sp());
        EXPECT(0x2499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 018A
        gbc.setState(0xc944, 0xe0b2, 0x38f0, 0x92aa, 0xf3b0, 0xef3d, 0x0, 0x0);
        gbc.writeMem(0xc944, { 0x7d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe0b2, gbc.sp());
        EXPECT(0xc945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc944));
        // 7D 018B
        gbc.setState(0xe7ee, 0xb448, 0xc860, 0x9588, 0x1ce9, 0x8726, 0x1, 0x1);
        gbc.writeMem(0xe7ee, { 0x7d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb448, gbc.sp());
        EXPECT(0xe7ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe7ee));
        // 7D 018C
        gbc.setState(0x1059, 0x25c0, 0xed60, 0xe12a, 0x96d4, 0x5e72, 0x1, 0x1);
        gbc.writeMem(0x1059, { 0x7d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x25c0, gbc.sp());
        EXPECT(0x105a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 018D
        gbc.setState(0x6004, 0x81bf, 0x6d70, 0xc4e1, 0x3224, 0xa864, 0x0, 0x1);
        gbc.writeMem(0x6004, { 0x7d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x81bf, gbc.sp());
        EXPECT(0x6005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 018E
        gbc.setState(0x90cd, 0x6931, 0x6ef0, 0xbb4c, 0xb74d, 0x304d, 0x1, 0x1);
        gbc.writeMem(0x90cd, { 0x7d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6931, gbc.sp());
        EXPECT(0x90ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x90cd));
        // 7D 018F
        gbc.setState(0x2b63, 0xa4d, 0xcfe0, 0x574a, 0x4f03, 0x4448, 0x1, 0x0);
        gbc.writeMem(0x2b63, { 0x7d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa4d, gbc.sp());
        EXPECT(0x2b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0190
        gbc.setState(0x1001, 0x25d2, 0xa420, 0x2df9, 0xf92a, 0x343c, 0x0, 0x1);
        gbc.writeMem(0x1001, { 0x7d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x25d2, gbc.sp());
        EXPECT(0x1002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0191
        gbc.setState(0xb899, 0x7772, 0x8440, 0xc308, 0xb1e0, 0xd99f, 0x0, 0x0);
        gbc.writeMem(0xb899, { 0x7d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7772, gbc.sp());
        EXPECT(0xb89a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb899));
        // 7D 0192
        gbc.setState(0x9f8d, 0x115d, 0xe650, 0x6734, 0x8722, 0x6482, 0x0, 0x0);
        gbc.writeMem(0x9f8d, { 0x7d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x115d, gbc.sp());
        EXPECT(0x9f8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9f8d));
        // 7D 0193
        gbc.setState(0x7dfa, 0x966f, 0x85a0, 0x25d8, 0x2406, 0x853c, 0x0, 0x1);
        gbc.writeMem(0x7dfa, { 0x7d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x966f, gbc.sp());
        EXPECT(0x7dfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0194
        gbc.setState(0x6d79, 0xae8a, 0xc760, 0x40e3, 0x8ea4, 0x959a, 0x0, 0x0);
        gbc.writeMem(0x6d79, { 0x7d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xae8a, gbc.sp());
        EXPECT(0x6d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0195
        gbc.setState(0xc0db, 0xd578, 0x1580, 0xe68b, 0x5d75, 0xc91d, 0x0, 0x1);
        gbc.writeMem(0xc0db, { 0x7d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd578, gbc.sp());
        EXPECT(0xc0dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc0db));
        // 7D 0196
        gbc.setState(0x8d6a, 0x607f, 0x1880, 0x1efa, 0x3c04, 0x1f67, 0x0, 0x0);
        gbc.writeMem(0x8d6a, { 0x7d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x607f, gbc.sp());
        EXPECT(0x8d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8d6a));
        // 7D 0197
        gbc.setState(0x3853, 0x8115, 0x38f0, 0xd4f6, 0x1ca4, 0xd4cb, 0x1, 0x1);
        gbc.writeMem(0x3853, { 0x7d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8115, gbc.sp());
        EXPECT(0x3854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0198
        gbc.setState(0xdbf, 0x1dc0, 0xc260, 0x97e0, 0xcafc, 0x7e5e, 0x0, 0x0);
        gbc.writeMem(0xdbf, { 0x7d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1dc0, gbc.sp());
        EXPECT(0xdc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0199
        gbc.setState(0x978a, 0x3504, 0x48c0, 0x1bc0, 0x5587, 0xbbc2, 0x0, 0x0);
        gbc.writeMem(0x978a, { 0x7d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3504, gbc.sp());
        EXPECT(0x978b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x978a));
        // 7D 019A
        gbc.setState(0x876e, 0xdc72, 0xfdb0, 0x8d14, 0xd688, 0xf6d2, 0x0, 0x1);
        gbc.writeMem(0x876e, { 0x7d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdc72, gbc.sp());
        EXPECT(0x876f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x876e));
        // 7D 019B
        gbc.setState(0x2ccc, 0xbdcb, 0xc80, 0x1a63, 0x497, 0x778f, 0x0, 0x0);
        gbc.writeMem(0x2ccc, { 0x7d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xbdcb, gbc.sp());
        EXPECT(0x2ccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 019C
        gbc.setState(0x3dbc, 0xffd6, 0xc7f0, 0xd8f7, 0x2f01, 0x1e31, 0x1, 0x1);
        gbc.writeMem(0x3dbc, { 0x7d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xffd6, gbc.sp());
        EXPECT(0x3dbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 019D
        gbc.setState(0x5642, 0x79e, 0x7e30, 0xc910, 0xc066, 0xee09, 0x0, 0x0);
        gbc.writeMem(0x5642, { 0x7d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x79e, gbc.sp());
        EXPECT(0x5643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 019E
        gbc.setState(0x9455, 0x73cc, 0xa760, 0x6a8e, 0xf538, 0x846, 0x0, 0x0);
        gbc.writeMem(0x9455, { 0x7d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x73cc, gbc.sp());
        EXPECT(0x9456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9455));
        // 7D 019F
        gbc.setState(0xc878, 0x7c38, 0x7900, 0xc41d, 0xdd2b, 0xc19, 0x0, 0x1);
        gbc.writeMem(0xc878, { 0x7d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7c38, gbc.sp());
        EXPECT(0xc879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc878));
        // 7D 01A0
        gbc.setState(0x189d, 0x45db, 0x5330, 0xa87e, 0xb4d1, 0x9dcd, 0x1, 0x0);
        gbc.writeMem(0x189d, { 0x7d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x45db, gbc.sp());
        EXPECT(0x189e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 01A1
        gbc.setState(0xd10f, 0x3a4a, 0x6710, 0xd175, 0x5023, 0x7a77, 0x0, 0x1);
        gbc.writeMem(0xd10f, { 0x7d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3a4a, gbc.sp());
        EXPECT(0xd110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd10f));
        // 7D 01A2
        gbc.setState(0x8ab0, 0x99a8, 0x1170, 0xbb23, 0x55e3, 0x64c5, 0x0, 0x0);
        gbc.writeMem(0x8ab0, { 0x7d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x99a8, gbc.sp());
        EXPECT(0x8ab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8ab0));
        // 7D 01A3
        gbc.setState(0x8117, 0x5be6, 0x32d0, 0x61ec, 0xf411, 0xb841, 0x0, 0x1);
        gbc.writeMem(0x8117, { 0x7d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5be6, gbc.sp());
        EXPECT(0x8118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8117));
        // 7D 01A4
        gbc.setState(0xd8c8, 0x169a, 0x9890, 0x6eb2, 0x202a, 0xeddb, 0x0, 0x0);
        gbc.writeMem(0xd8c8, { 0x7d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x169a, gbc.sp());
        EXPECT(0xd8c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd8c8));
        // 7D 01A5
        gbc.setState(0x2a32, 0xf1ec, 0x4bd0, 0xdb29, 0x5728, 0xeabd, 0x1, 0x0);
        gbc.writeMem(0x2a32, { 0x7d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf1ec, gbc.sp());
        EXPECT(0x2a33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 01A6
        gbc.setState(0xb0a8, 0xedfb, 0x3fa0, 0x4c5a, 0xe325, 0x9ce2, 0x0, 0x0);
        gbc.writeMem(0xb0a8, { 0x7d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xedfb, gbc.sp());
        EXPECT(0xb0a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb0a8));
        // 7D 01A7
        gbc.setState(0x7ef1, 0xf11b, 0xe4a0, 0x2738, 0xea8d, 0x75aa, 0x0, 0x1);
        gbc.writeMem(0x7ef1, { 0x7d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf11b, gbc.sp());
        EXPECT(0x7ef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01A8
        gbc.setState(0x3697, 0xcb16, 0xbf50, 0xe487, 0x6b8, 0x618c, 0x1, 0x1);
        gbc.writeMem(0x3697, { 0x7d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcb16, gbc.sp());
        EXPECT(0x3698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 01A9
        gbc.setState(0xb382, 0xd6ac, 0x4fb0, 0x7ae8, 0xe319, 0xa450, 0x0, 0x1);
        gbc.writeMem(0xb382, { 0x7d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd6ac, gbc.sp());
        EXPECT(0xb383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb382));
        // 7D 01AA
        gbc.setState(0x10eb, 0x58f9, 0x2a80, 0x6c22, 0x555b, 0xc98c, 0x0, 0x1);
        gbc.writeMem(0x10eb, { 0x7d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x58f9, gbc.sp());
        EXPECT(0x10ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01AB
        gbc.setState(0x771e, 0x4e52, 0x2800, 0x6a3f, 0xf647, 0x60f6, 0x1, 0x0);
        gbc.writeMem(0x771e, { 0x7d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4e52, gbc.sp());
        EXPECT(0x771f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01AC
        gbc.setState(0x9498, 0xb923, 0x80c0, 0x4914, 0x13c8, 0xbcd3, 0x1, 0x1);
        gbc.writeMem(0x9498, { 0x7d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb923, gbc.sp());
        EXPECT(0x9499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9498));
        // 7D 01AD
        gbc.setState(0xdcaf, 0x512b, 0x87f0, 0xceb8, 0x86ec, 0xbfe9, 0x1, 0x1);
        gbc.writeMem(0xdcaf, { 0x7d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x512b, gbc.sp());
        EXPECT(0xdcb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xdcaf));
        // 7D 01AE
        gbc.setState(0x4ce8, 0x2799, 0x7440, 0x9891, 0x1f08, 0xd915, 0x1, 0x0);
        gbc.writeMem(0x4ce8, { 0x7d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2799, gbc.sp());
        EXPECT(0x4ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01AF
        gbc.setState(0x6718, 0x3319, 0x1560, 0xe379, 0xdd48, 0xb47a, 0x0, 0x1);
        gbc.writeMem(0x6718, { 0x7d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3319, gbc.sp());
        EXPECT(0x6719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01B0
        gbc.setState(0x4eb9, 0xbb8d, 0x1850, 0x117f, 0xf52, 0x6a8c, 0x0, 0x0);
        gbc.writeMem(0x4eb9, { 0x7d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xbb8d, gbc.sp());
        EXPECT(0x4eba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 01B1
        gbc.setState(0x8cff, 0x644d, 0xe050, 0xf612, 0x576, 0x83c6, 0x0, 0x1);
        gbc.writeMem(0x8cff, { 0x7d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x644d, gbc.sp());
        EXPECT(0x8d00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8cff));
        // 7D 01B2
        gbc.setState(0xa95f, 0xb92c, 0xd5e0, 0x8b2c, 0x2e9, 0xb9e4, 0x0, 0x0);
        gbc.writeMem(0xa95f, { 0x7d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb92c, gbc.sp());
        EXPECT(0xa960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa95f));
        // 7D 01B3
        gbc.setState(0x4ab6, 0xe126, 0x4380, 0x32bf, 0xaca8, 0x63fe, 0x1, 0x1);
        gbc.writeMem(0x4ab6, { 0x7d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe126, gbc.sp());
        EXPECT(0x4ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01B4
        gbc.setState(0xb26d, 0x87fb, 0xc3f0, 0x7012, 0xed78, 0x88ee, 0x0, 0x0);
        gbc.writeMem(0xb26d, { 0x7d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x87fb, gbc.sp());
        EXPECT(0xb26e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb26d));
        // 7D 01B5
        gbc.setState(0x3522, 0x139c, 0x59a0, 0x52de, 0x65e, 0x10c1, 0x1, 0x1);
        gbc.writeMem(0x3522, { 0x7d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x139c, gbc.sp());
        EXPECT(0x3523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01B6
        gbc.setState(0x33a4, 0x7321, 0x46a0, 0xa171, 0x8b8d, 0xdc26, 0x1, 0x1);
        gbc.writeMem(0x33a4, { 0x7d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7321, gbc.sp());
        EXPECT(0x33a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01B7
        gbc.setState(0xb4c0, 0xe046, 0x38f0, 0x1261, 0x446, 0x762f, 0x1, 0x0);
        gbc.writeMem(0xb4c0, { 0x7d });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe046, gbc.sp());
        EXPECT(0xb4c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb4c0));
        // 7D 01B8
        gbc.setState(0xa8c1, 0xc212, 0x86a0, 0xdcee, 0x1871, 0x137f, 0x0, 0x1);
        gbc.writeMem(0xa8c1, { 0x7d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc212, gbc.sp());
        EXPECT(0xa8c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa8c1));
        // 7D 01B9
        gbc.setState(0x559b, 0x2bce, 0xba40, 0xe866, 0x4cc2, 0xeb7c, 0x1, 0x1);
        gbc.writeMem(0x559b, { 0x7d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2bce, gbc.sp());
        EXPECT(0x559c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01BA
        gbc.setState(0xe7a8, 0x495a, 0xdbd0, 0x6595, 0xcbdf, 0xdfb5, 0x1, 0x0);
        gbc.writeMem(0xe7a8, { 0x7d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x495a, gbc.sp());
        EXPECT(0xe7a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe7a8));
        // 7D 01BB
        gbc.setState(0xb7d8, 0xa0fe, 0xb700, 0xe07b, 0x5cc8, 0x7720, 0x0, 0x0);
        gbc.writeMem(0xb7d8, { 0x7d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa0fe, gbc.sp());
        EXPECT(0xb7d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb7d8));
        // 7D 01BC
        gbc.setState(0xc7e6, 0xcc90, 0xf350, 0xeb0d, 0x4620, 0xaf83, 0x0, 0x0);
        gbc.writeMem(0xc7e6, { 0x7d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xcc90, gbc.sp());
        EXPECT(0xc7e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc7e6));
        // 7D 01BD
        gbc.setState(0x29c6, 0x8cbf, 0x5020, 0xa413, 0xc61d, 0xaf7f, 0x1, 0x0);
        gbc.writeMem(0x29c6, { 0x7d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8cbf, gbc.sp());
        EXPECT(0x29c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01BE
        gbc.setState(0x2ad2, 0x6b68, 0xc0b0, 0x8071, 0xefcf, 0xbe02, 0x1, 0x1);
        gbc.writeMem(0x2ad2, { 0x7d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6b68, gbc.sp());
        EXPECT(0x2ad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 01BF
        gbc.setState(0x67b1, 0xed76, 0xd4f0, 0xa116, 0x7fa6, 0xf70d, 0x0, 0x1);
        gbc.writeMem(0x67b1, { 0x7d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xed76, gbc.sp());
        EXPECT(0x67b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 01C0
        gbc.setState(0x89ad, 0x8d5a, 0xacf0, 0x8748, 0xd5a, 0x6b59, 0x0, 0x1);
        gbc.writeMem(0x89ad, { 0x7d });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8d5a, gbc.sp());
        EXPECT(0x89ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x89ad));
        // 7D 01C1
        gbc.setState(0xb8f0, 0xfa71, 0xe40, 0xa617, 0x70b5, 0x4430, 0x1, 0x1);
        gbc.writeMem(0xb8f0, { 0x7d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfa71, gbc.sp());
        EXPECT(0xb8f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb8f0));
        // 7D 01C2
        gbc.setState(0xc223, 0x2be5, 0xebc0, 0x19f2, 0x5b00, 0xbe7e, 0x1, 0x0);
        gbc.writeMem(0xc223, { 0x7d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2be5, gbc.sp());
        EXPECT(0xc224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc223));
        // 7D 01C3
        gbc.setState(0xbf7f, 0x33f0, 0xfb10, 0xf489, 0x80fc, 0xc290, 0x1, 0x0);
        gbc.writeMem(0xbf7f, { 0x7d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x33f0, gbc.sp());
        EXPECT(0xbf80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xbf7f));
        // 7D 01C4
        gbc.setState(0xcae7, 0x11d8, 0x81e0, 0x57f3, 0xe183, 0x77d7, 0x0, 0x1);
        gbc.writeMem(0xcae7, { 0x7d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x11d8, gbc.sp());
        EXPECT(0xcae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xcae7));
        // 7D 01C5
        gbc.setState(0xa2f3, 0xc1a2, 0x7f00, 0x5659, 0xd2ee, 0x372d, 0x0, 0x1);
        gbc.writeMem(0xa2f3, { 0x7d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc1a2, gbc.sp());
        EXPECT(0xa2f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa2f3));
        // 7D 01C6
        gbc.setState(0x7103, 0x25bb, 0x1650, 0x41f8, 0x7e88, 0xf457, 0x0, 0x0);
        gbc.writeMem(0x7103, { 0x7d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x25bb, gbc.sp());
        EXPECT(0x7104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 01C7
        gbc.setState(0xb99b, 0xf46a, 0x79a0, 0x3725, 0x4564, 0xdd98, 0x0, 0x0);
        gbc.writeMem(0xb99b, { 0x7d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf46a, gbc.sp());
        EXPECT(0xb99c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb99b));
        // 7D 01C8
        gbc.setState(0xc832, 0xece2, 0xf850, 0x7c75, 0x961f, 0x3815, 0x1, 0x0);
        gbc.writeMem(0xc832, { 0x7d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xece2, gbc.sp());
        EXPECT(0xc833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc832));
        // 7D 01C9
        gbc.setState(0xa647, 0x1260, 0x7b80, 0x4f63, 0xddfc, 0xcf7, 0x1, 0x1);
        gbc.writeMem(0xa647, { 0x7d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1260, gbc.sp());
        EXPECT(0xa648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa647));
        // 7D 01CA
        gbc.setState(0x1408, 0x48c6, 0x2110, 0x10e0, 0x2fa, 0x3725, 0x0, 0x1);
        gbc.writeMem(0x1408, { 0x7d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x48c6, gbc.sp());
        EXPECT(0x1409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 01CB
        gbc.setState(0x3198, 0xe795, 0x79e0, 0xb034, 0xa229, 0x68f8, 0x1, 0x0);
        gbc.writeMem(0x3198, { 0x7d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe795, gbc.sp());
        EXPECT(0x3199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01CC
        gbc.setState(0x2ba4, 0x3384, 0x72c0, 0x7590, 0xe6e3, 0xa5a8, 0x1, 0x1);
        gbc.writeMem(0x2ba4, { 0x7d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3384, gbc.sp());
        EXPECT(0x2ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01CD
        gbc.setState(0xaeb2, 0xf117, 0x9d50, 0x1586, 0x5fe2, 0x6845, 0x0, 0x1);
        gbc.writeMem(0xaeb2, { 0x7d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf117, gbc.sp());
        EXPECT(0xaeb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xaeb2));
        // 7D 01CE
        gbc.setState(0xacf1, 0x82ef, 0xe530, 0x978, 0x95c, 0xbe76, 0x1, 0x0);
        gbc.writeMem(0xacf1, { 0x7d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x82ef, gbc.sp());
        EXPECT(0xacf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xacf1));
        // 7D 01CF
        gbc.setState(0x36a7, 0x9be0, 0x51a0, 0x6eba, 0xdc75, 0x7a78, 0x1, 0x0);
        gbc.writeMem(0x36a7, { 0x7d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9be0, gbc.sp());
        EXPECT(0x36a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01D0
        gbc.setState(0xe482, 0xc9f1, 0x2ab0, 0xca26, 0xac1e, 0x8a5, 0x1, 0x0);
        gbc.writeMem(0xe482, { 0x7d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc9f1, gbc.sp());
        EXPECT(0xe483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe482));
        // 7D 01D1
        gbc.setState(0xc168, 0x8ab7, 0xf2e0, 0x68b9, 0x2fbd, 0x4cc, 0x0, 0x0);
        gbc.writeMem(0xc168, { 0x7d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8ab7, gbc.sp());
        EXPECT(0xc169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc168));
        // 7D 01D2
        gbc.setState(0x6e8e, 0xd3b6, 0x61c0, 0xeff9, 0x6471, 0x85f0, 0x1, 0x1);
        gbc.writeMem(0x6e8e, { 0x7d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd3b6, gbc.sp());
        EXPECT(0x6e8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01D3
        gbc.setState(0x62d8, 0x879, 0x8c80, 0xfa2b, 0x22db, 0x60c7, 0x1, 0x0);
        gbc.writeMem(0x62d8, { 0x7d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x879, gbc.sp());
        EXPECT(0x62d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01D4
        gbc.setState(0xf71, 0xaa25, 0x4690, 0x2ed, 0x94e, 0x233c, 0x0, 0x1);
        gbc.writeMem(0xf71, { 0x7d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xaa25, gbc.sp());
        EXPECT(0xf72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 01D5
        gbc.setState(0x6d1f, 0xaf99, 0x4df0, 0x4af9, 0x49f6, 0xae, 0x1, 0x1);
        gbc.writeMem(0x6d1f, { 0x7d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xaf99, gbc.sp());
        EXPECT(0x6d20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 01D6
        gbc.setState(0xd669, 0xce7, 0xad10, 0xbe65, 0xb801, 0xffd3, 0x0, 0x0);
        gbc.writeMem(0xd669, { 0x7d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xce7, gbc.sp());
        EXPECT(0xd66a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd669));
        // 7D 01D7
        gbc.setState(0xcf46, 0x7459, 0x3320, 0x734f, 0xd660, 0xc64b, 0x0, 0x1);
        gbc.writeMem(0xcf46, { 0x7d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7459, gbc.sp());
        EXPECT(0xcf47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xcf46));
        // 7D 01D8
        gbc.setState(0x2fe3, 0x579b, 0x3bf0, 0x7f46, 0x4818, 0x54c, 0x1, 0x1);
        gbc.writeMem(0x2fe3, { 0x7d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x579b, gbc.sp());
        EXPECT(0x2fe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 01D9
        gbc.setState(0xdfb2, 0xf34c, 0xa120, 0x2220, 0x68a, 0x4f36, 0x1, 0x0);
        gbc.writeMem(0xdfb2, { 0x7d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf34c, gbc.sp());
        EXPECT(0xdfb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xdfb2));
        // 7D 01DA
        gbc.setState(0xcd19, 0xbc1f, 0x6b10, 0x1c5a, 0x6dc3, 0x3a6c, 0x0, 0x0);
        gbc.writeMem(0xcd19, { 0x7d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbc1f, gbc.sp());
        EXPECT(0xcd1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xcd19));
        // 7D 01DB
        gbc.setState(0x303e, 0xacb5, 0x6e10, 0x85d3, 0xa92a, 0x28d4, 0x1, 0x0);
        gbc.writeMem(0x303e, { 0x7d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xacb5, gbc.sp());
        EXPECT(0x303f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 01DC
        gbc.setState(0x9ff1, 0x2961, 0xbc00, 0x9b2d, 0x729, 0x2243, 0x0, 0x0);
        gbc.writeMem(0x9ff1, { 0x7d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2961, gbc.sp());
        EXPECT(0x9ff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9ff1));
        // 7D 01DD
        gbc.setState(0x31d3, 0xb6b2, 0x5ee0, 0xf013, 0x76e, 0xf4b5, 0x0, 0x0);
        gbc.writeMem(0x31d3, { 0x7d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb6b2, gbc.sp());
        EXPECT(0x31d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01DE
        gbc.setState(0x6723, 0x29ee, 0x2f80, 0xc0eb, 0xdbb2, 0x2dae, 0x1, 0x0);
        gbc.writeMem(0x6723, { 0x7d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x29ee, gbc.sp());
        EXPECT(0x6724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01DF
        gbc.setState(0x9278, 0x4739, 0xd5a0, 0x318c, 0xf965, 0x7273, 0x1, 0x1);
        gbc.writeMem(0x9278, { 0x7d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4739, gbc.sp());
        EXPECT(0x9279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9278));
        // 7D 01E1
        gbc.setState(0x863e, 0xd5bb, 0x71d0, 0x74c7, 0x82f4, 0x2312, 0x1, 0x0);
        gbc.writeMem(0x863e, { 0x7d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd5bb, gbc.sp());
        EXPECT(0x863f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x863e));
        // 7D 01E2
        gbc.setState(0xb1a2, 0x927e, 0x5170, 0xed28, 0x80ab, 0x6f78, 0x1, 0x0);
        gbc.writeMem(0xb1a2, { 0x7d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x927e, gbc.sp());
        EXPECT(0xb1a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb1a2));
        // 7D 01E3
        gbc.setState(0x8ba, 0xbb08, 0xef20, 0x81f2, 0xffc4, 0x75f9, 0x0, 0x0);
        gbc.writeMem(0x8ba, { 0x7d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbb08, gbc.sp());
        EXPECT(0x8bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01E4
        gbc.setState(0x2ae, 0x5cac, 0xef90, 0x46ab, 0x914f, 0x2ce4, 0x1, 0x1);
        gbc.writeMem(0x2ae, { 0x7d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5cac, gbc.sp());
        EXPECT(0x2af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 01E5
        gbc.setState(0x2fc7, 0x1f81, 0x4560, 0x8a3d, 0xc674, 0x1179, 0x1, 0x1);
        gbc.writeMem(0x2fc7, { 0x7d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1f81, gbc.sp());
        EXPECT(0x2fc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01E6
        gbc.setState(0x81e9, 0x9a29, 0xccc0, 0xc833, 0x3490, 0xefa, 0x0, 0x1);
        gbc.writeMem(0x81e9, { 0x7d });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9a29, gbc.sp());
        EXPECT(0x81ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x81e9));
        // 7D 01E7
        gbc.setState(0x55d4, 0x9426, 0xc7d0, 0x5fe1, 0x74ad, 0x1fbd, 0x0, 0x1);
        gbc.writeMem(0x55d4, { 0x7d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9426, gbc.sp());
        EXPECT(0x55d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 01E8
        gbc.setState(0xacf2, 0x2c03, 0x8440, 0x864b, 0xd43c, 0x84fb, 0x0, 0x1);
        gbc.writeMem(0xacf2, { 0x7d });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2c03, gbc.sp());
        EXPECT(0xacf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xacf2));
        // 7D 01E9
        gbc.setState(0xce8c, 0xc593, 0x34d0, 0x39e5, 0xb7b8, 0x40a6, 0x1, 0x0);
        gbc.writeMem(0xce8c, { 0x7d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc593, gbc.sp());
        EXPECT(0xce8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xce8c));
        // 7D 01EA
        gbc.setState(0x690b, 0x7b4a, 0xf210, 0x1516, 0x455a, 0x72ed, 0x1, 0x1);
        gbc.writeMem(0x690b, { 0x7d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7b4a, gbc.sp());
        EXPECT(0x690c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 01EB
        gbc.setState(0xe4c4, 0x1e3d, 0x6aa0, 0xc0c9, 0x9769, 0xb47c, 0x0, 0x0);
        gbc.writeMem(0xe4c4, { 0x7d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1e3d, gbc.sp());
        EXPECT(0xe4c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe4c4));
        // 7D 01EC
        gbc.setState(0x33f9, 0xc2b0, 0x5e40, 0x6c99, 0xd269, 0x1b62, 0x0, 0x0);
        gbc.writeMem(0x33f9, { 0x7d });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc2b0, gbc.sp());
        EXPECT(0x33fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01ED
        gbc.setState(0xb708, 0xa9eb, 0x9800, 0x867c, 0xc27a, 0x1b3a, 0x0, 0x1);
        gbc.writeMem(0xb708, { 0x7d });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa9eb, gbc.sp());
        EXPECT(0xb709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb708));
        // 7D 01EE
        gbc.setState(0x180f, 0x752a, 0x2030, 0x653c, 0xa6a1, 0x509c, 0x0, 0x1);
        gbc.writeMem(0x180f, { 0x7d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x752a, gbc.sp());
        EXPECT(0x1810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 01EF
        gbc.setState(0x64ad, 0x265e, 0xe840, 0x89f5, 0x22a, 0xee7, 0x1, 0x0);
        gbc.writeMem(0x64ad, { 0x7d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x265e, gbc.sp());
        EXPECT(0x64ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01F0
        gbc.setState(0x1c66, 0xa5f9, 0xcd20, 0xfd1f, 0xd8ad, 0xc607, 0x1, 0x1);
        gbc.writeMem(0x1c66, { 0x7d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa5f9, gbc.sp());
        EXPECT(0x1c67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01F1
        gbc.setState(0x9e45, 0xc801, 0xde70, 0x5a55, 0x34fd, 0x2f0b, 0x0, 0x1);
        gbc.writeMem(0x9e45, { 0x7d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc801, gbc.sp());
        EXPECT(0x9e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9e45));
        // 7D 01F2
        gbc.setState(0x1041, 0xb9f2, 0x9380, 0xa01c, 0x315a, 0x4147, 0x1, 0x0);
        gbc.writeMem(0x1041, { 0x7d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb9f2, gbc.sp());
        EXPECT(0x1042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01F3
        gbc.setState(0x42a, 0xa56, 0xa550, 0xffb2, 0x80b9, 0xc9d3, 0x0, 0x0);
        gbc.writeMem(0x42a, { 0x7d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa56, gbc.sp());
        EXPECT(0x42b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 01F4
        gbc.setState(0x48e4, 0xa9e7, 0x2690, 0xcadd, 0x1099, 0x3ffd, 0x1, 0x1);
        gbc.writeMem(0x48e4, { 0x7d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa9e7, gbc.sp());
        EXPECT(0x48e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 01F5
        gbc.setState(0x4f51, 0x28b2, 0x88a0, 0x4865, 0xec42, 0xf1e9, 0x0, 0x1);
        gbc.writeMem(0x4f51, { 0x7d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x28b2, gbc.sp());
        EXPECT(0x4f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 01F6
        gbc.setState(0xe2a8, 0x4952, 0xf0, 0xaf7a, 0xaeee, 0x38a1, 0x0, 0x1);
        gbc.writeMem(0xe2a8, { 0x7d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4952, gbc.sp());
        EXPECT(0xe2a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe2a8));
        // 7D 01F7
        gbc.setState(0xd3c, 0xf86f, 0xcdd0, 0xec7e, 0xad43, 0xf7af, 0x0, 0x0);
        gbc.writeMem(0xd3c, { 0x7d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf86f, gbc.sp());
        EXPECT(0xd3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 01F8
        gbc.setState(0x984a, 0xb475, 0xa9e0, 0x503a, 0x39fb, 0x2255, 0x1, 0x1);
        gbc.writeMem(0x984a, { 0x7d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb475, gbc.sp());
        EXPECT(0x984b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x984a));
        // 7D 01F9
        gbc.setState(0x97a3, 0x9752, 0x5270, 0xa306, 0x45c5, 0x97c4, 0x1, 0x0);
        gbc.writeMem(0x97a3, { 0x7d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9752, gbc.sp());
        EXPECT(0x97a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x97a3));
        // 7D 01FA
        gbc.setState(0x998e, 0x2d4e, 0x1100, 0x886a, 0x5418, 0x70b7, 0x1, 0x1);
        gbc.writeMem(0x998e, { 0x7d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2d4e, gbc.sp());
        EXPECT(0x998f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x998e));
        // 7D 01FB
        gbc.setState(0xa5fd, 0xdf59, 0x89f0, 0x64f5, 0xe53c, 0x1438, 0x0, 0x0);
        gbc.writeMem(0xa5fd, { 0x7d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xdf59, gbc.sp());
        EXPECT(0xa5fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa5fd));
        // 7D 01FD
        gbc.setState(0xe55f, 0x4ca, 0x9ef0, 0xcbca, 0x927b, 0x23a7, 0x1, 0x0);
        gbc.writeMem(0xe55f, { 0x7d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4ca, gbc.sp());
        EXPECT(0xe560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe55f));
        // 7D 01FE
        gbc.setState(0x5e1b, 0x3141, 0xf6f0, 0x7326, 0x6229, 0x1622, 0x1, 0x1);
        gbc.writeMem(0x5e1b, { 0x7d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3141, gbc.sp());
        EXPECT(0x5e1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 01FF
        gbc.setState(0x53ab, 0x4239, 0x28b0, 0xd21f, 0xfa11, 0x587a, 0x0, 0x0);
        gbc.writeMem(0x53ab, { 0x7d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4239, gbc.sp());
        EXPECT(0x53ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0200
        gbc.setState(0x46dd, 0x5a85, 0xbea0, 0xa9f2, 0x3ec1, 0x6529, 0x0, 0x0);
        gbc.writeMem(0x46dd, { 0x7d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5a85, gbc.sp());
        EXPECT(0x46de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0201
        gbc.setState(0x5a7f, 0x8bb8, 0x20c0, 0x930c, 0x1ebd, 0xa557, 0x1, 0x1);
        gbc.writeMem(0x5a7f, { 0x7d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8bb8, gbc.sp());
        EXPECT(0x5a80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0203
        gbc.setState(0x7a86, 0xc765, 0x6d10, 0xbab2, 0x9b4c, 0x8de, 0x0, 0x0);
        gbc.writeMem(0x7a86, { 0x7d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc765, gbc.sp());
        EXPECT(0x7a87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0204
        gbc.setState(0xd514, 0x4331, 0xc420, 0x7f40, 0xb35f, 0xee0, 0x0, 0x0);
        gbc.writeMem(0xd514, { 0x7d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4331, gbc.sp());
        EXPECT(0xd515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd514));
        // 7D 0205
        gbc.setState(0xdc37, 0x15e, 0xc1e0, 0xc188, 0xfb04, 0x1ef, 0x0, 0x1);
        gbc.writeMem(0xdc37, { 0x7d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x15e, gbc.sp());
        EXPECT(0xdc38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xdc37));
        // 7D 0206
        gbc.setState(0xb76f, 0xdca, 0x8da0, 0xc14e, 0x35ab, 0x81d2, 0x0, 0x0);
        gbc.writeMem(0xb76f, { 0x7d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdca, gbc.sp());
        EXPECT(0xb770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb76f));
        // 7D 0207
        gbc.setState(0x2e17, 0xa8bc, 0xe3e0, 0xbf21, 0xac4a, 0x8956, 0x1, 0x0);
        gbc.writeMem(0x2e17, { 0x7d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa8bc, gbc.sp());
        EXPECT(0x2e18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0208
        gbc.setState(0x4f99, 0x1ba5, 0x8460, 0xc52c, 0xfaac, 0x40dd, 0x1, 0x1);
        gbc.writeMem(0x4f99, { 0x7d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1ba5, gbc.sp());
        EXPECT(0x4f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0209
        gbc.setState(0x596e, 0xc1c9, 0xa690, 0xefd5, 0x7809, 0xc10b, 0x0, 0x1);
        gbc.writeMem(0x596e, { 0x7d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc1c9, gbc.sp());
        EXPECT(0x596f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 020A
        gbc.setState(0x741, 0x7e46, 0xbfa0, 0xcb56, 0xc273, 0x16ed, 0x0, 0x0);
        gbc.writeMem(0x741, { 0x7d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7e46, gbc.sp());
        EXPECT(0x742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 020B
        gbc.setState(0xa407, 0x4de3, 0x4670, 0x12cc, 0x8de, 0x45fc, 0x0, 0x0);
        gbc.writeMem(0xa407, { 0x7d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4de3, gbc.sp());
        EXPECT(0xa408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa407));
        // 7D 020C
        gbc.setState(0xb4f9, 0x8579, 0x1000, 0xe299, 0x3177, 0xc88e, 0x0, 0x1);
        gbc.writeMem(0xb4f9, { 0x7d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8579, gbc.sp());
        EXPECT(0xb4fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb4f9));
        // 7D 020D
        gbc.setState(0x14e1, 0x8831, 0xa80, 0xf90b, 0x9448, 0x1f09, 0x0, 0x0);
        gbc.writeMem(0x14e1, { 0x7d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8831, gbc.sp());
        EXPECT(0x14e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 020E
        gbc.setState(0x2efc, 0x933c, 0x2760, 0xf95c, 0x9461, 0x8e7b, 0x1, 0x1);
        gbc.writeMem(0x2efc, { 0x7d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x933c, gbc.sp());
        EXPECT(0x2efd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 020F
        gbc.setState(0x9282, 0xbfa3, 0x5bc0, 0xdd79, 0x2311, 0x96ee, 0x0, 0x0);
        gbc.writeMem(0x9282, { 0x7d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xbfa3, gbc.sp());
        EXPECT(0x9283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9282));
        // 7D 0210
        gbc.setState(0x135a, 0x32be, 0x7590, 0x443d, 0xbb1e, 0x2d81, 0x0, 0x0);
        gbc.writeMem(0x135a, { 0x7d });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x32be, gbc.sp());
        EXPECT(0x135b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0211
        gbc.setState(0x7e37, 0xffa8, 0xa1c0, 0x5ffc, 0x8f06, 0x1fe8, 0x0, 0x0);
        gbc.writeMem(0x7e37, { 0x7d });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xffa8, gbc.sp());
        EXPECT(0x7e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0213
        gbc.setState(0x19c2, 0x918, 0xfe90, 0xd1dc, 0x225b, 0xb86a, 0x0, 0x1);
        gbc.writeMem(0x19c2, { 0x7d });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x918, gbc.sp());
        EXPECT(0x19c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0214
        gbc.setState(0x5f71, 0xe4a6, 0xbbb0, 0x2a99, 0x941b, 0xfebb, 0x1, 0x0);
        gbc.writeMem(0x5f71, { 0x7d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe4a6, gbc.sp());
        EXPECT(0x5f72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0215
        gbc.setState(0xb0f1, 0x3ed1, 0x1190, 0x3c3e, 0x1494, 0xb637, 0x1, 0x0);
        gbc.writeMem(0xb0f1, { 0x7d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3ed1, gbc.sp());
        EXPECT(0xb0f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb0f1));
        // 7D 0216
        gbc.setState(0xe373, 0xc2b0, 0x530, 0xa34c, 0x2e91, 0xaa89, 0x1, 0x1);
        gbc.writeMem(0xe373, { 0x7d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc2b0, gbc.sp());
        EXPECT(0xe374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe373));
        // 7D 0217
        gbc.setState(0xd250, 0x1115, 0x16b0, 0xa153, 0x496d, 0x589, 0x1, 0x0);
        gbc.writeMem(0xd250, { 0x7d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1115, gbc.sp());
        EXPECT(0xd251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd250));
        // 7D 0218
        gbc.setState(0xaecf, 0x4db6, 0xb9e0, 0x6a2b, 0x3531, 0x8c5, 0x0, 0x1);
        gbc.writeMem(0xaecf, { 0x7d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4db6, gbc.sp());
        EXPECT(0xaed0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xaecf));
        // 7D 0219
        gbc.setState(0xe01d, 0x2704, 0x6460, 0xffab, 0x382, 0x6a21, 0x0, 0x1);
        gbc.writeMem(0xe01d, { 0x7d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2704, gbc.sp());
        EXPECT(0xe01e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe01d));
        // 7D 021A
        gbc.setState(0xd5b1, 0x4955, 0x32f0, 0xce76, 0xc272, 0xd45c, 0x1, 0x1);
        gbc.writeMem(0xd5b1, { 0x7d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4955, gbc.sp());
        EXPECT(0xd5b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd5b1));
        // 7D 021B
        gbc.setState(0x3624, 0x5816, 0x5880, 0xa8be, 0x4321, 0xea49, 0x1, 0x0);
        gbc.writeMem(0x3624, { 0x7d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5816, gbc.sp());
        EXPECT(0x3625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 021C
        gbc.setState(0x3bd, 0xe798, 0xc500, 0xbad2, 0x7fd5, 0xf5d7, 0x1, 0x1);
        gbc.writeMem(0x3bd, { 0x7d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe798, gbc.sp());
        EXPECT(0x3be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 021D
        gbc.setState(0x2474, 0x91da, 0xbf00, 0x6fe4, 0xbf78, 0xbf63, 0x0, 0x0);
        gbc.writeMem(0x2474, { 0x7d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x91da, gbc.sp());
        EXPECT(0x2475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 021F
        gbc.setState(0xddf9, 0x938c, 0xaab0, 0x9b2, 0x4b04, 0x2fe6, 0x0, 0x0);
        gbc.writeMem(0xddf9, { 0x7d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x938c, gbc.sp());
        EXPECT(0xddfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xddf9));
        // 7D 0220
        gbc.setState(0x8731, 0xd515, 0xcc40, 0xa0fc, 0xe79a, 0xf445, 0x1, 0x0);
        gbc.writeMem(0x8731, { 0x7d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd515, gbc.sp());
        EXPECT(0x8732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8731));
        // 7D 0223
        gbc.setState(0xaeeb, 0x9643, 0x6830, 0xffa3, 0x43ee, 0xc926, 0x0, 0x0);
        gbc.writeMem(0xaeeb, { 0x7d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9643, gbc.sp());
        EXPECT(0xaeec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xaeeb));
        // 7D 0224
        gbc.setState(0x3db9, 0x1980, 0xe500, 0xd43d, 0x951c, 0x19bb, 0x0, 0x0);
        gbc.writeMem(0x3db9, { 0x7d });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1980, gbc.sp());
        EXPECT(0x3dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0225
        gbc.setState(0xc8a9, 0x4981, 0xc320, 0x1e4c, 0x87a3, 0x5789, 0x1, 0x0);
        gbc.writeMem(0xc8a9, { 0x7d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4981, gbc.sp());
        EXPECT(0xc8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc8a9));
        // 7D 0226
        gbc.setState(0x232f, 0x42bf, 0xb6a0, 0x357b, 0xbdcf, 0xf8b2, 0x1, 0x0);
        gbc.writeMem(0x232f, { 0x7d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x42bf, gbc.sp());
        EXPECT(0x2330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0227
        gbc.setState(0x820c, 0xaa2, 0x43c0, 0xaf3f, 0x1cf8, 0x9e56, 0x0, 0x1);
        gbc.writeMem(0x820c, { 0x7d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xaa2, gbc.sp());
        EXPECT(0x820d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x820c));
        // 7D 0228
        gbc.setState(0x1612, 0xef1a, 0x66c0, 0x7a1b, 0xd25d, 0x912, 0x1, 0x1);
        gbc.writeMem(0x1612, { 0x7d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xef1a, gbc.sp());
        EXPECT(0x1613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0229
        gbc.setState(0x8bbf, 0x422c, 0xc0e0, 0x58db, 0x4107, 0xc80, 0x1, 0x0);
        gbc.writeMem(0x8bbf, { 0x7d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x422c, gbc.sp());
        EXPECT(0x8bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8bbf));
        // 7D 022A
        gbc.setState(0xaa3f, 0xb086, 0x9f00, 0x3337, 0x7559, 0xde0f, 0x1, 0x0);
        gbc.writeMem(0xaa3f, { 0x7d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb086, gbc.sp());
        EXPECT(0xaa40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xaa3f));
        // 7D 022B
        gbc.setState(0xeb19, 0xaaac, 0xc290, 0x1b90, 0x9bca, 0x1979, 0x0, 0x0);
        gbc.writeMem(0xeb19, { 0x7d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xaaac, gbc.sp());
        EXPECT(0xeb1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xeb19));
        // 7D 022C
        gbc.setState(0x2afb, 0x4129, 0x9d70, 0x3951, 0xcf6a, 0xeef0, 0x0, 0x1);
        gbc.writeMem(0x2afb, { 0x7d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4129, gbc.sp());
        EXPECT(0x2afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 022D
        gbc.setState(0x699c, 0xfa0f, 0xc10, 0x3989, 0xc7, 0xa982, 0x1, 0x0);
        gbc.writeMem(0x699c, { 0x7d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xfa0f, gbc.sp());
        EXPECT(0x699d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 022E
        gbc.setState(0x828c, 0xdaab, 0x1a20, 0xaf08, 0x6449, 0xf558, 0x0, 0x0);
        gbc.writeMem(0x828c, { 0x7d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xdaab, gbc.sp());
        EXPECT(0x828d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x828c));
        // 7D 022F
        gbc.setState(0xa45b, 0x5c5a, 0xdb50, 0xdf3d, 0xcb04, 0x1940, 0x0, 0x1);
        gbc.writeMem(0xa45b, { 0x7d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5c5a, gbc.sp());
        EXPECT(0xa45c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa45b));
        // 7D 0230
        gbc.setState(0x1145, 0x13a0, 0x2040, 0xf235, 0x7c0e, 0xd2fe, 0x0, 0x1);
        gbc.writeMem(0x1145, { 0x7d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x13a0, gbc.sp());
        EXPECT(0x1146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0231
        gbc.setState(0xd136, 0x7433, 0x28c0, 0x7034, 0x722b, 0x824b, 0x1, 0x0);
        gbc.writeMem(0xd136, { 0x7d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7433, gbc.sp());
        EXPECT(0xd137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd136));
        // 7D 0232
        gbc.setState(0x4483, 0x5308, 0xd3f0, 0x88b, 0x4ba, 0xac31, 0x1, 0x0);
        gbc.writeMem(0x4483, { 0x7d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5308, gbc.sp());
        EXPECT(0x4484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0233
        gbc.setState(0xeca5, 0x3f2c, 0x260, 0x29c6, 0xa558, 0xa6e5, 0x0, 0x1);
        gbc.writeMem(0xeca5, { 0x7d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3f2c, gbc.sp());
        EXPECT(0xeca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xeca5));
        // 7D 0234
        gbc.setState(0x4f04, 0x5802, 0x6fd0, 0x56ac, 0x10d2, 0x98c7, 0x0, 0x0);
        gbc.writeMem(0x4f04, { 0x7d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5802, gbc.sp());
        EXPECT(0x4f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0235
        gbc.setState(0x997c, 0x5974, 0xb490, 0x19ac, 0xeb9d, 0x17a9, 0x1, 0x0);
        gbc.writeMem(0x997c, { 0x7d });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5974, gbc.sp());
        EXPECT(0x997d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x997c));
        // 7D 0236
        gbc.setState(0x2437, 0xf0c, 0xe810, 0xf6d7, 0x7ff3, 0x138e, 0x0, 0x0);
        gbc.writeMem(0x2437, { 0x7d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf0c, gbc.sp());
        EXPECT(0x2438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0237
        gbc.setState(0x18b5, 0x5a4a, 0x5100, 0xe62f, 0xc57c, 0xaf43, 0x1, 0x1);
        gbc.writeMem(0x18b5, { 0x7d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5a4a, gbc.sp());
        EXPECT(0x18b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0238
        gbc.setState(0xd44b, 0x31fa, 0x8860, 0xf6f1, 0x8baa, 0x1a4d, 0x0, 0x0);
        gbc.writeMem(0xd44b, { 0x7d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x31fa, gbc.sp());
        EXPECT(0xd44c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd44b));
        // 7D 0239
        gbc.setState(0xee61, 0xa3e1, 0x87b0, 0x7be0, 0xa817, 0xd6ec, 0x0, 0x1);
        gbc.writeMem(0xee61, { 0x7d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa3e1, gbc.sp());
        EXPECT(0xee62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xee61));
        // 7D 023A
        gbc.setState(0x3793, 0x1493, 0x2700, 0x9039, 0xef19, 0x4975, 0x0, 0x0);
        gbc.writeMem(0x3793, { 0x7d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1493, gbc.sp());
        EXPECT(0x3794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 023B
        gbc.setState(0x41ea, 0x17db, 0xb690, 0x1d96, 0x2982, 0x4db5, 0x0, 0x0);
        gbc.writeMem(0x41ea, { 0x7d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x17db, gbc.sp());
        EXPECT(0x41eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 023C
        gbc.setState(0x6b30, 0x1dd8, 0x4d00, 0x9d9d, 0xa911, 0xa042, 0x1, 0x1);
        gbc.writeMem(0x6b30, { 0x7d });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1dd8, gbc.sp());
        EXPECT(0x6b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 023D
        gbc.setState(0xa4f8, 0x3116, 0x6e20, 0xd2ea, 0x18b8, 0xd406, 0x1, 0x1);
        gbc.writeMem(0xa4f8, { 0x7d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3116, gbc.sp());
        EXPECT(0xa4f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa4f8));
        // 7D 023E
        gbc.setState(0x6ace, 0x51b5, 0xccf0, 0x7778, 0xb51b, 0xe4eb, 0x1, 0x1);
        gbc.writeMem(0x6ace, { 0x7d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x51b5, gbc.sp());
        EXPECT(0x6acf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0240
        gbc.setState(0x8dc2, 0xd96a, 0xea40, 0x2592, 0x6a2f, 0x2e68, 0x1, 0x1);
        gbc.writeMem(0x8dc2, { 0x7d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd96a, gbc.sp());
        EXPECT(0x8dc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8dc2));
        // 7D 0241
        gbc.setState(0x94a1, 0xa, 0x6950, 0xb14, 0x71a9, 0x295a, 0x1, 0x1);
        gbc.writeMem(0x94a1, { 0x7d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa, gbc.sp());
        EXPECT(0x94a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x94a1));
        // 7D 0243
        gbc.setState(0x109e, 0x8168, 0x7dc0, 0x70de, 0x1333, 0x97e1, 0x0, 0x0);
        gbc.writeMem(0x109e, { 0x7d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8168, gbc.sp());
        EXPECT(0x109f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0244
        gbc.setState(0x6510, 0x342c, 0x8ca0, 0x1350, 0x7689, 0x88f4, 0x0, 0x0);
        gbc.writeMem(0x6510, { 0x7d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x342c, gbc.sp());
        EXPECT(0x6511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0245
        gbc.setState(0xd63, 0x5dd7, 0x7b0, 0x8126, 0x8db8, 0x4b66, 0x0, 0x0);
        gbc.writeMem(0xd63, { 0x7d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5dd7, gbc.sp());
        EXPECT(0xd64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0246
        gbc.setState(0xb31b, 0xf20a, 0xb10, 0xc1dc, 0xcea9, 0xa447, 0x0, 0x0);
        gbc.writeMem(0xb31b, { 0x7d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf20a, gbc.sp());
        EXPECT(0xb31c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb31b));
        // 7D 0247
        gbc.setState(0x39ad, 0x16d6, 0x2190, 0x8fb4, 0x79eb, 0x56b5, 0x0, 0x0);
        gbc.writeMem(0x39ad, { 0x7d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x16d6, gbc.sp());
        EXPECT(0x39ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0248
        gbc.setState(0x7203, 0x291f, 0x5ba0, 0x4e5e, 0x7631, 0xe328, 0x0, 0x1);
        gbc.writeMem(0x7203, { 0x7d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x291f, gbc.sp());
        EXPECT(0x7204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0249
        gbc.setState(0x9c2b, 0xa3f3, 0x4240, 0x9897, 0xdc9c, 0xcca, 0x0, 0x0);
        gbc.writeMem(0x9c2b, { 0x7d });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa3f3, gbc.sp());
        EXPECT(0x9c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9c2b));
        // 7D 024A
        gbc.setState(0xa722, 0x692f, 0xe8f0, 0xd84e, 0xc924, 0x26a1, 0x0, 0x1);
        gbc.writeMem(0xa722, { 0x7d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x692f, gbc.sp());
        EXPECT(0xa723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa722));
        // 7D 024B
        gbc.setState(0xd21d, 0xe625, 0x24f0, 0xac9d, 0xf260, 0x810e, 0x0, 0x1);
        gbc.writeMem(0xd21d, { 0x7d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe625, gbc.sp());
        EXPECT(0xd21e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd21d));
        // 7D 024C
        gbc.setState(0x2904, 0x515c, 0x3300, 0x9b13, 0xd27, 0x746e, 0x1, 0x0);
        gbc.writeMem(0x2904, { 0x7d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x515c, gbc.sp());
        EXPECT(0x2905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 024D
        gbc.setState(0x76b3, 0x7933, 0xece0, 0xe8bf, 0x8d93, 0x18a5, 0x1, 0x0);
        gbc.writeMem(0x76b3, { 0x7d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7933, gbc.sp());
        EXPECT(0x76b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 024E
        gbc.setState(0x841e, 0xf1a0, 0x7fe0, 0x666f, 0x14d8, 0xc48e, 0x0, 0x1);
        gbc.writeMem(0x841e, { 0x7d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf1a0, gbc.sp());
        EXPECT(0x841f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x841e));
        // 7D 024F
        gbc.setState(0xdda1, 0x9d9f, 0xf620, 0x4092, 0x5551, 0x74d2, 0x1, 0x1);
        gbc.writeMem(0xdda1, { 0x7d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9d9f, gbc.sp());
        EXPECT(0xdda2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xdda1));
        // 7D 0250
        gbc.setState(0x1c0f, 0x81e, 0xa910, 0x1b47, 0xf9f9, 0x88f1, 0x0, 0x1);
        gbc.writeMem(0x1c0f, { 0x7d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x81e, gbc.sp());
        EXPECT(0x1c10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0251
        gbc.setState(0x5e0f, 0xaf60, 0x35a0, 0xd106, 0x1803, 0x3f48, 0x1, 0x0);
        gbc.writeMem(0x5e0f, { 0x7d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xaf60, gbc.sp());
        EXPECT(0x5e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0252
        gbc.setState(0x8035, 0x6839, 0xbc00, 0x7963, 0xaf88, 0xbcbd, 0x0, 0x0);
        gbc.writeMem(0x8035, { 0x7d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6839, gbc.sp());
        EXPECT(0x8036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8035));
        // 7D 0253
        gbc.setState(0x4ca9, 0x932b, 0x2210, 0x39e9, 0xa552, 0x883e, 0x1, 0x1);
        gbc.writeMem(0x4ca9, { 0x7d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x932b, gbc.sp());
        EXPECT(0x4caa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0254
        gbc.setState(0x8f74, 0x3703, 0xda20, 0x99e4, 0xdeda, 0x5812, 0x0, 0x1);
        gbc.writeMem(0x8f74, { 0x7d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3703, gbc.sp());
        EXPECT(0x8f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8f74));
        // 7D 0255
        gbc.setState(0xd3d4, 0x84cf, 0x83c0, 0xa058, 0xc7ca, 0xcaa2, 0x1, 0x0);
        gbc.writeMem(0xd3d4, { 0x7d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x84cf, gbc.sp());
        EXPECT(0xd3d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd3d4));
        // 7D 0256
        gbc.setState(0xb9a1, 0xa119, 0x3240, 0xe2e5, 0x5656, 0x20c6, 0x0, 0x1);
        gbc.writeMem(0xb9a1, { 0x7d });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa119, gbc.sp());
        EXPECT(0xb9a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb9a1));
        // 7D 0257
        gbc.setState(0x8b90, 0xc9d5, 0x2bf0, 0x53dc, 0x8dd0, 0x3abd, 0x1, 0x0);
        gbc.writeMem(0x8b90, { 0x7d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc9d5, gbc.sp());
        EXPECT(0x8b91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8b90));
        // 7D 0258
        gbc.setState(0xc183, 0x12fa, 0xdbf0, 0x9d63, 0x3df1, 0xba63, 0x1, 0x1);
        gbc.writeMem(0xc183, { 0x7d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x12fa, gbc.sp());
        EXPECT(0xc184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc183));
        // 7D 0259
        gbc.setState(0x2f13, 0x9c9d, 0x8c20, 0xef9a, 0xe89, 0x90d3, 0x0, 0x1);
        gbc.writeMem(0x2f13, { 0x7d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9c9d, gbc.sp());
        EXPECT(0x2f14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 025A
        gbc.setState(0x47ae, 0xfbe9, 0xe6b0, 0xed1a, 0xebd3, 0xc6f7, 0x1, 0x1);
        gbc.writeMem(0x47ae, { 0x7d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfbe9, gbc.sp());
        EXPECT(0x47af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 025B
        gbc.setState(0x5f18, 0x1f1, 0xd6b0, 0x99eb, 0x3084, 0x8037, 0x0, 0x1);
        gbc.writeMem(0x5f18, { 0x7d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1f1, gbc.sp());
        EXPECT(0x5f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 025C
        gbc.setState(0xa06a, 0xf251, 0xd990, 0x2bf4, 0x3124, 0x7a2e, 0x1, 0x1);
        gbc.writeMem(0xa06a, { 0x7d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf251, gbc.sp());
        EXPECT(0xa06b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa06a));
        // 7D 025D
        gbc.setState(0xaff7, 0x9df4, 0x36a0, 0xdfe, 0x18cd, 0x20e7, 0x0, 0x1);
        gbc.writeMem(0xaff7, { 0x7d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9df4, gbc.sp());
        EXPECT(0xaff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xaff7));
        // 7D 025E
        gbc.setState(0xc759, 0xc7df, 0x5a00, 0x5311, 0xb096, 0xd4bf, 0x0, 0x1);
        gbc.writeMem(0xc759, { 0x7d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc7df, gbc.sp());
        EXPECT(0xc75a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc759));
        // 7D 025F
        gbc.setState(0x1e71, 0xd29a, 0xe100, 0xd214, 0x54e0, 0x98fd, 0x1, 0x1);
        gbc.writeMem(0x1e71, { 0x7d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd29a, gbc.sp());
        EXPECT(0x1e72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0260
        gbc.setState(0x1e15, 0x2c68, 0x2370, 0x7085, 0xdb46, 0x396e, 0x0, 0x1);
        gbc.writeMem(0x1e15, { 0x7d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2c68, gbc.sp());
        EXPECT(0x1e16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0261
        gbc.setState(0x7be, 0x2518, 0x58d0, 0x11cb, 0x3c26, 0x9c3c, 0x0, 0x0);
        gbc.writeMem(0x7be, { 0x7d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2518, gbc.sp());
        EXPECT(0x7bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0262
        gbc.setState(0xe30, 0x81e1, 0x6d40, 0x32fa, 0xe205, 0x4463, 0x1, 0x0);
        gbc.writeMem(0xe30, { 0x7d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x81e1, gbc.sp());
        EXPECT(0xe31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0264
        gbc.setState(0xa887, 0xc8a5, 0xc640, 0x4a7f, 0x6744, 0xc3cd, 0x1, 0x1);
        gbc.writeMem(0xa887, { 0x7d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc8a5, gbc.sp());
        EXPECT(0xa888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa887));
        // 7D 0265
        gbc.setState(0x75f6, 0x4d3c, 0xa290, 0xb950, 0x4cb4, 0x7544, 0x0, 0x0);
        gbc.writeMem(0x75f6, { 0x7d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4d3c, gbc.sp());
        EXPECT(0x75f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0266
        gbc.setState(0x77c0, 0xb189, 0xdab0, 0x99dd, 0x52c1, 0xc7b1, 0x1, 0x1);
        gbc.writeMem(0x77c0, { 0x7d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb189, gbc.sp());
        EXPECT(0x77c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0267
        gbc.setState(0xb5ec, 0x263, 0xa140, 0xd47f, 0x3483, 0x206e, 0x1, 0x0);
        gbc.writeMem(0xb5ec, { 0x7d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x263, gbc.sp());
        EXPECT(0xb5ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb5ec));
        // 7D 0268
        gbc.setState(0x2b02, 0xdf18, 0x1970, 0x61ca, 0xfc9c, 0x1b93, 0x0, 0x1);
        gbc.writeMem(0x2b02, { 0x7d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdf18, gbc.sp());
        EXPECT(0x2b03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0269
        gbc.setState(0x655e, 0x8445, 0x6fc0, 0xc1fa, 0x7568, 0x74b, 0x0, 0x0);
        gbc.writeMem(0x655e, { 0x7d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8445, gbc.sp());
        EXPECT(0x655f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 026A
        gbc.setState(0xdf9d, 0xd20a, 0x9ea0, 0x39a6, 0xad61, 0xa5c5, 0x0, 0x0);
        gbc.writeMem(0xdf9d, { 0x7d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd20a, gbc.sp());
        EXPECT(0xdf9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xdf9d));
        // 7D 026B
        gbc.setState(0x308d, 0xe6b8, 0x4b20, 0xef98, 0x73e7, 0xe38, 0x0, 0x0);
        gbc.writeMem(0x308d, { 0x7d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe6b8, gbc.sp());
        EXPECT(0x308e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 026C
        gbc.setState(0x3852, 0xb6c3, 0x31a0, 0xb20b, 0x3f74, 0x663d, 0x0, 0x1);
        gbc.writeMem(0x3852, { 0x7d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb6c3, gbc.sp());
        EXPECT(0x3853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 026D
        gbc.setState(0x224b, 0xe56c, 0x4eb0, 0xaf39, 0x1392, 0x42eb, 0x1, 0x0);
        gbc.writeMem(0x224b, { 0x7d });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe56c, gbc.sp());
        EXPECT(0x224c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 026E
        gbc.setState(0x3269, 0x5e05, 0xb140, 0xd6e, 0xc11b, 0xbfa6, 0x1, 0x1);
        gbc.writeMem(0x3269, { 0x7d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5e05, gbc.sp());
        EXPECT(0x326a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 026F
        gbc.setState(0xde0f, 0xb930, 0x61d0, 0xc0d3, 0x204c, 0xd32d, 0x1, 0x0);
        gbc.writeMem(0xde0f, { 0x7d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb930, gbc.sp());
        EXPECT(0xde10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xde0f));
        // 7D 0270
        gbc.setState(0xb72a, 0xb4c5, 0x6770, 0xe5de, 0x2544, 0xae0e, 0x0, 0x1);
        gbc.writeMem(0xb72a, { 0x7d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb4c5, gbc.sp());
        EXPECT(0xb72b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb72a));
        // 7D 0271
        gbc.setState(0x195e, 0xafd8, 0x6e40, 0xe75c, 0x3e95, 0x9f11, 0x0, 0x0);
        gbc.writeMem(0x195e, { 0x7d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xafd8, gbc.sp());
        EXPECT(0x195f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0272
        gbc.setState(0xaf2, 0xd08c, 0xe640, 0xa921, 0x2c9b, 0x268c, 0x1, 0x0);
        gbc.writeMem(0xaf2, { 0x7d });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd08c, gbc.sp());
        EXPECT(0xaf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0274
        gbc.setState(0x9a2f, 0x1f39, 0xea70, 0xf3e0, 0xec45, 0x9216, 0x1, 0x0);
        gbc.writeMem(0x9a2f, { 0x7d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1f39, gbc.sp());
        EXPECT(0x9a30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9a2f));
        // 7D 0275
        gbc.setState(0x361b, 0xa558, 0xa4c0, 0xb3b9, 0x9967, 0xe751, 0x1, 0x0);
        gbc.writeMem(0x361b, { 0x7d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa558, gbc.sp());
        EXPECT(0x361c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0276
        gbc.setState(0x2990, 0x866c, 0x1450, 0xc53, 0x44e5, 0xcfdd, 0x0, 0x1);
        gbc.writeMem(0x2990, { 0x7d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x866c, gbc.sp());
        EXPECT(0x2991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0277
        gbc.setState(0xadd, 0x6237, 0xe870, 0x4d78, 0x22ae, 0xe34e, 0x1, 0x1);
        gbc.writeMem(0xadd, { 0x7d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6237, gbc.sp());
        EXPECT(0xade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0278
        gbc.setState(0x2cc1, 0x6f69, 0x1020, 0x8cb7, 0x32ed, 0x6509, 0x0, 0x0);
        gbc.writeMem(0x2cc1, { 0x7d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6f69, gbc.sp());
        EXPECT(0x2cc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0279
        gbc.setState(0xd30e, 0xf2b7, 0x9f50, 0x9642, 0x9d66, 0x34e5, 0x0, 0x1);
        gbc.writeMem(0xd30e, { 0x7d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf2b7, gbc.sp());
        EXPECT(0xd30f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd30e));
        // 7D 027A
        gbc.setState(0xc091, 0x40e3, 0xeb40, 0x612d, 0xcffc, 0x3d72, 0x0, 0x0);
        gbc.writeMem(0xc091, { 0x7d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x40e3, gbc.sp());
        EXPECT(0xc092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc091));
        // 7D 027B
        gbc.setState(0x854e, 0xab12, 0xeb00, 0x70fe, 0x4f6, 0xec07, 0x1, 0x1);
        gbc.writeMem(0x854e, { 0x7d });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xab12, gbc.sp());
        EXPECT(0x854f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x854e));
        // 7D 027C
        gbc.setState(0x98b9, 0x4ac4, 0x7130, 0x668a, 0xb4c3, 0x44d4, 0x1, 0x1);
        gbc.writeMem(0x98b9, { 0x7d });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4ac4, gbc.sp());
        EXPECT(0x98ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x98b9));
        // 7D 027D
        gbc.setState(0xd05e, 0xa8e3, 0x87d0, 0x5325, 0x5e83, 0xf982, 0x1, 0x0);
        gbc.writeMem(0xd05e, { 0x7d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa8e3, gbc.sp());
        EXPECT(0xd05f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd05e));
        // 7D 027E
        gbc.setState(0x994a, 0xd8c9, 0x2000, 0xf5c8, 0x7199, 0x9e71, 0x1, 0x1);
        gbc.writeMem(0x994a, { 0x7d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd8c9, gbc.sp());
        EXPECT(0x994b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x994a));
        // 7D 027F
        gbc.setState(0xd5a0, 0x96ad, 0xbdb0, 0x6480, 0x44bd, 0xb78d, 0x0, 0x0);
        gbc.writeMem(0xd5a0, { 0x7d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x96ad, gbc.sp());
        EXPECT(0xd5a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd5a0));
        // 7D 0280
        gbc.setState(0xcbb2, 0xe35f, 0xb7c0, 0xb6c1, 0xd3e7, 0x7b1b, 0x0, 0x1);
        gbc.writeMem(0xcbb2, { 0x7d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe35f, gbc.sp());
        EXPECT(0xcbb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xcbb2));
        // 7D 0281
        gbc.setState(0x5f91, 0xcfd5, 0xd0a0, 0x8251, 0xe6ea, 0x43ad, 0x1, 0x1);
        gbc.writeMem(0x5f91, { 0x7d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xcfd5, gbc.sp());
        EXPECT(0x5f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0282
        gbc.setState(0x810b, 0xfd12, 0xdad0, 0x87c4, 0x579, 0x83d5, 0x0, 0x1);
        gbc.writeMem(0x810b, { 0x7d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfd12, gbc.sp());
        EXPECT(0x810c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x810b));
        // 7D 0283
        gbc.setState(0x7b2e, 0x7923, 0x4c0, 0xac8d, 0x45e7, 0x5bf7, 0x0, 0x0);
        gbc.writeMem(0x7b2e, { 0x7d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7923, gbc.sp());
        EXPECT(0x7b2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0284
        gbc.setState(0xd671, 0x58d0, 0x60f0, 0x42eb, 0x2890, 0x5871, 0x1, 0x1);
        gbc.writeMem(0xd671, { 0x7d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x58d0, gbc.sp());
        EXPECT(0xd672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd671));
        // 7D 0285
        gbc.setState(0x2231, 0x72f7, 0x5b00, 0x7a45, 0xe273, 0x42cd, 0x1, 0x0);
        gbc.writeMem(0x2231, { 0x7d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x72f7, gbc.sp());
        EXPECT(0x2232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0286
        gbc.setState(0xa02c, 0xc10e, 0x1a60, 0x9da2, 0xae66, 0xe639, 0x1, 0x0);
        gbc.writeMem(0xa02c, { 0x7d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc10e, gbc.sp());
        EXPECT(0xa02d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa02c));
        // 7D 0288
        gbc.setState(0x507d, 0xff4a, 0xf1f0, 0xc959, 0x310b, 0x57d2, 0x0, 0x1);
        gbc.writeMem(0x507d, { 0x7d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xff4a, gbc.sp());
        EXPECT(0x507e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0289
        gbc.setState(0xc0e, 0xfddc, 0x7b20, 0x651b, 0x7bd5, 0x8bb9, 0x0, 0x1);
        gbc.writeMem(0xc0e, { 0x7d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfddc, gbc.sp());
        EXPECT(0xc0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 028A
        gbc.setState(0xbe59, 0xbdb3, 0x700, 0xb2db, 0x1a88, 0x5a4e, 0x1, 0x1);
        gbc.writeMem(0xbe59, { 0x7d });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbdb3, gbc.sp());
        EXPECT(0xbe5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xbe59));
        // 7D 028B
        gbc.setState(0x4281, 0x9a6, 0x24b0, 0xf463, 0x401, 0xb20c, 0x1, 0x0);
        gbc.writeMem(0x4281, { 0x7d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9a6, gbc.sp());
        EXPECT(0x4282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 028C
        gbc.setState(0x3884, 0x1b19, 0xf950, 0xc4b4, 0x924d, 0x6447, 0x0, 0x1);
        gbc.writeMem(0x3884, { 0x7d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1b19, gbc.sp());
        EXPECT(0x3885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 028D
        gbc.setState(0x7f4c, 0xdffd, 0x36f0, 0x4f0f, 0xd477, 0xb76c, 0x0, 0x0);
        gbc.writeMem(0x7f4c, { 0x7d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdffd, gbc.sp());
        EXPECT(0x7f4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 028E
        gbc.setState(0x7f21, 0x58ac, 0x200, 0xc24d, 0xb0fb, 0xb8df, 0x1, 0x0);
        gbc.writeMem(0x7f21, { 0x7d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x58ac, gbc.sp());
        EXPECT(0x7f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 028F
        gbc.setState(0xe666, 0x22d7, 0x79a0, 0x9523, 0xe149, 0x1f9f, 0x0, 0x0);
        gbc.writeMem(0xe666, { 0x7d });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x22d7, gbc.sp());
        EXPECT(0xe667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe666));
        // 7D 0290
        gbc.setState(0x8d92, 0x5bcf, 0x6d0, 0x18f7, 0xc4a4, 0xa77e, 0x0, 0x1);
        gbc.writeMem(0x8d92, { 0x7d });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5bcf, gbc.sp());
        EXPECT(0x8d93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8d92));
        // 7D 0291
        gbc.setState(0x3ec8, 0x4a6f, 0xe8a0, 0x9e4f, 0x5d7b, 0x91e0, 0x1, 0x0);
        gbc.writeMem(0x3ec8, { 0x7d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4a6f, gbc.sp());
        EXPECT(0x3ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0292
        gbc.setState(0xdbbf, 0x1392, 0xcaf0, 0x234f, 0xae9d, 0x4278, 0x1, 0x0);
        gbc.writeMem(0xdbbf, { 0x7d });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1392, gbc.sp());
        EXPECT(0xdbc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xdbbf));
        // 7D 0293
        gbc.setState(0x77fa, 0x39ac, 0x4160, 0x1abe, 0x336c, 0x3861, 0x0, 0x1);
        gbc.writeMem(0x77fa, { 0x7d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x39ac, gbc.sp());
        EXPECT(0x77fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0294
        gbc.setState(0x99f5, 0x2569, 0x68f0, 0xd29e, 0xac68, 0x825e, 0x1, 0x0);
        gbc.writeMem(0x99f5, { 0x7d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2569, gbc.sp());
        EXPECT(0x99f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x99f5));
        // 7D 0295
        gbc.setState(0x3a4b, 0x8e20, 0xb8b0, 0x4975, 0xf971, 0x376, 0x0, 0x0);
        gbc.writeMem(0x3a4b, { 0x7d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8e20, gbc.sp());
        EXPECT(0x3a4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0296
        gbc.setState(0xbf23, 0x80d4, 0x1890, 0x44a4, 0xf299, 0x3a90, 0x0, 0x0);
        gbc.writeMem(0xbf23, { 0x7d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x80d4, gbc.sp());
        EXPECT(0xbf24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xbf23));
        // 7D 0297
        gbc.setState(0xda09, 0xf6d4, 0x5840, 0xff8e, 0xd7c1, 0x7b80, 0x1, 0x1);
        gbc.writeMem(0xda09, { 0x7d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf6d4, gbc.sp());
        EXPECT(0xda0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xda09));
        // 7D 0298
        gbc.setState(0xd709, 0x66ae, 0xfbc0, 0x51b2, 0x2267, 0xd247, 0x0, 0x1);
        gbc.writeMem(0xd709, { 0x7d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x66ae, gbc.sp());
        EXPECT(0xd70a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd709));
        // 7D 029A
        gbc.setState(0x1c26, 0xf8d3, 0x6cf0, 0xf16a, 0x8931, 0xc1aa, 0x1, 0x1);
        gbc.writeMem(0x1c26, { 0x7d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf8d3, gbc.sp());
        EXPECT(0x1c27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 029B
        gbc.setState(0x3de0, 0x3932, 0xa300, 0xa3ff, 0x9834, 0xf8, 0x0, 0x0);
        gbc.writeMem(0x3de0, { 0x7d });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3932, gbc.sp());
        EXPECT(0x3de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 029C
        gbc.setState(0x6355, 0xc2f1, 0x24c0, 0xce1d, 0xae54, 0x73d0, 0x1, 0x1);
        gbc.writeMem(0x6355, { 0x7d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc2f1, gbc.sp());
        EXPECT(0x6356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 029E
        gbc.setState(0x8c62, 0x2557, 0xdb40, 0x1dc0, 0x105b, 0x6ec2, 0x0, 0x0);
        gbc.writeMem(0x8c62, { 0x7d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2557, gbc.sp());
        EXPECT(0x8c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8c62));
        // 7D 029F
        gbc.setState(0x7ff9, 0x234f, 0xf8c0, 0xb5e5, 0xdfbd, 0x3ae4, 0x0, 0x0);
        gbc.writeMem(0x7ff9, { 0x7d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x234f, gbc.sp());
        EXPECT(0x7ffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02A0
        gbc.setState(0x4c0a, 0xb752, 0xf660, 0x9a29, 0xd34b, 0xbfd5, 0x0, 0x1);
        gbc.writeMem(0x4c0a, { 0x7d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb752, gbc.sp());
        EXPECT(0x4c0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02A1
        gbc.setState(0x6597, 0x1618, 0x59a0, 0xe09e, 0x6289, 0x69b5, 0x1, 0x1);
        gbc.writeMem(0x6597, { 0x7d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1618, gbc.sp());
        EXPECT(0x6598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02A2
        gbc.setState(0xc1a3, 0x8d5, 0x8a00, 0xb1b, 0xaf84, 0x19f0, 0x1, 0x1);
        gbc.writeMem(0xc1a3, { 0x7d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8d5, gbc.sp());
        EXPECT(0xc1a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc1a3));
        // 7D 02A3
        gbc.setState(0x659e, 0x28fb, 0x97d0, 0x173f, 0x6653, 0x4719, 0x0, 0x0);
        gbc.writeMem(0x659e, { 0x7d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x28fb, gbc.sp());
        EXPECT(0x659f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 02A4
        gbc.setState(0x68f2, 0x42f, 0x6250, 0xe33a, 0xe525, 0x59dd, 0x0, 0x0);
        gbc.writeMem(0x68f2, { 0x7d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x42f, gbc.sp());
        EXPECT(0x68f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 02A5
        gbc.setState(0xa7bb, 0xc58a, 0x13f0, 0xfbaa, 0xaaa0, 0x8c50, 0x0, 0x1);
        gbc.writeMem(0xa7bb, { 0x7d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc58a, gbc.sp());
        EXPECT(0xa7bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa7bb));
        // 7D 02A6
        gbc.setState(0x917a, 0xa65b, 0x6920, 0x8bb9, 0x60bd, 0x9c03, 0x1, 0x0);
        gbc.writeMem(0x917a, { 0x7d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa65b, gbc.sp());
        EXPECT(0x917b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x917a));
        // 7D 02A7
        gbc.setState(0xea3f, 0x8c6a, 0xc260, 0xa8c7, 0x17a0, 0xe5b9, 0x1, 0x1);
        gbc.writeMem(0xea3f, { 0x7d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8c6a, gbc.sp());
        EXPECT(0xea40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xea3f));
        // 7D 02A8
        gbc.setState(0xcd34, 0x77cf, 0x3eb0, 0xed85, 0xa9ef, 0x7719, 0x0, 0x1);
        gbc.writeMem(0xcd34, { 0x7d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x77cf, gbc.sp());
        EXPECT(0xcd35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xcd34));
        // 7D 02A9
        gbc.setState(0xebdc, 0x9e97, 0x73a0, 0x6cc5, 0x73df, 0xcca6, 0x0, 0x1);
        gbc.writeMem(0xebdc, { 0x7d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9e97, gbc.sp());
        EXPECT(0xebdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xebdc));
        // 7D 02AB
        gbc.setState(0xb5d2, 0x701, 0x19d0, 0x6cd1, 0xe89c, 0xe64f, 0x0, 0x0);
        gbc.writeMem(0xb5d2, { 0x7d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x701, gbc.sp());
        EXPECT(0xb5d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb5d2));
        // 7D 02AC
        gbc.setState(0x3643, 0x2eb1, 0x4130, 0x6312, 0xc0e1, 0x908f, 0x1, 0x1);
        gbc.writeMem(0x3643, { 0x7d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2eb1, gbc.sp());
        EXPECT(0x3644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 02AE
        gbc.setState(0x8d09, 0x7a42, 0xfb90, 0x41e5, 0xbd55, 0xbddf, 0x0, 0x1);
        gbc.writeMem(0x8d09, { 0x7d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7a42, gbc.sp());
        EXPECT(0x8d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8d09));
        // 7D 02AF
        gbc.setState(0x42c4, 0xa6be, 0x2800, 0x87fb, 0xe3ec, 0x845a, 0x1, 0x1);
        gbc.writeMem(0x42c4, { 0x7d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa6be, gbc.sp());
        EXPECT(0x42c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02B0
        gbc.setState(0xc6e2, 0x147b, 0x6cb0, 0x9de5, 0x8466, 0xb8d, 0x0, 0x0);
        gbc.writeMem(0xc6e2, { 0x7d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x147b, gbc.sp());
        EXPECT(0xc6e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc6e2));
        // 7D 02B1
        gbc.setState(0x3e8, 0xa2cf, 0x5b50, 0x7a29, 0xf092, 0x294a, 0x0, 0x0);
        gbc.writeMem(0x3e8, { 0x7d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa2cf, gbc.sp());
        EXPECT(0x3e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 02B2
        gbc.setState(0x978d, 0x2d80, 0x1b40, 0xea35, 0xf381, 0x131b, 0x1, 0x0);
        gbc.writeMem(0x978d, { 0x7d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2d80, gbc.sp());
        EXPECT(0x978e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x978d));
        // 7D 02B3
        gbc.setState(0x7cf8, 0x30c2, 0x8de0, 0x22ec, 0x5ac6, 0xe471, 0x0, 0x1);
        gbc.writeMem(0x7cf8, { 0x7d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x30c2, gbc.sp());
        EXPECT(0x7cf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02B4
        gbc.setState(0x6c32, 0x2801, 0x74b0, 0x62ae, 0xf8be, 0xe66c, 0x0, 0x1);
        gbc.writeMem(0x6c32, { 0x7d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2801, gbc.sp());
        EXPECT(0x6c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 02B7
        gbc.setState(0xcfe3, 0xa4f2, 0xdc0, 0x7b99, 0xd257, 0xfdd8, 0x1, 0x1);
        gbc.writeMem(0xcfe3, { 0x7d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa4f2, gbc.sp());
        EXPECT(0xcfe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xcfe3));
        // 7D 02B8
        gbc.setState(0xbda3, 0x73d7, 0xc930, 0x16bc, 0x4be4, 0x37a0, 0x1, 0x1);
        gbc.writeMem(0xbda3, { 0x7d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x73d7, gbc.sp());
        EXPECT(0xbda4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xbda3));
        // 7D 02B9
        gbc.setState(0xc70a, 0x52a5, 0x4a80, 0xa547, 0x35c4, 0x4ca2, 0x0, 0x0);
        gbc.writeMem(0xc70a, { 0x7d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x52a5, gbc.sp());
        EXPECT(0xc70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc70a));
        // 7D 02BA
        gbc.setState(0xf6e, 0xea2c, 0x3630, 0xc8ae, 0x8481, 0x6a9e, 0x0, 0x0);
        gbc.writeMem(0xf6e, { 0x7d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xea2c, gbc.sp());
        EXPECT(0xf6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 02BB
        gbc.setState(0x4f4b, 0xa8f1, 0xe0, 0xd288, 0xf110, 0x9511, 0x0, 0x0);
        gbc.writeMem(0x4f4b, { 0x7d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa8f1, gbc.sp());
        EXPECT(0x4f4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02BC
        gbc.setState(0x38cc, 0x71d5, 0x2b40, 0x74e5, 0x4193, 0x700d, 0x0, 0x0);
        gbc.writeMem(0x38cc, { 0x7d });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x71d5, gbc.sp());
        EXPECT(0x38cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02BD
        gbc.setState(0x5a1d, 0x6c58, 0x8f60, 0x984, 0x4b7f, 0x71f0, 0x0, 0x0);
        gbc.writeMem(0x5a1d, { 0x7d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6c58, gbc.sp());
        EXPECT(0x5a1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02BE
        gbc.setState(0xd606, 0x2a65, 0x8a50, 0xef09, 0x6a32, 0x98fc, 0x1, 0x0);
        gbc.writeMem(0xd606, { 0x7d });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2a65, gbc.sp());
        EXPECT(0xd607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd606));
        // 7D 02BF
        gbc.setState(0x39fa, 0x6b9c, 0xdc50, 0x69ea, 0x3230, 0x639c, 0x0, 0x0);
        gbc.writeMem(0x39fa, { 0x7d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6b9c, gbc.sp());
        EXPECT(0x39fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 02C0
        gbc.setState(0x2259, 0xa7aa, 0xd520, 0xf4b3, 0xe71b, 0xb46b, 0x1, 0x1);
        gbc.writeMem(0x2259, { 0x7d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa7aa, gbc.sp());
        EXPECT(0x225a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02C1
        gbc.setState(0x8dd9, 0x8bf5, 0x3150, 0xd49b, 0xf3bb, 0x9371, 0x1, 0x1);
        gbc.writeMem(0x8dd9, { 0x7d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8bf5, gbc.sp());
        EXPECT(0x8dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8dd9));
        // 7D 02C2
        gbc.setState(0xf9e, 0x7340, 0xa810, 0x7a2a, 0xef3, 0xd32, 0x0, 0x1);
        gbc.writeMem(0xf9e, { 0x7d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7340, gbc.sp());
        EXPECT(0xf9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 02C4
        gbc.setState(0x2b7b, 0x5ac4, 0xbe60, 0xb65d, 0xc946, 0xd6ea, 0x1, 0x0);
        gbc.writeMem(0x2b7b, { 0x7d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5ac4, gbc.sp());
        EXPECT(0x2b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02C5
        gbc.setState(0x687f, 0xebaa, 0x8820, 0x1ee8, 0x2d36, 0x71c9, 0x0, 0x1);
        gbc.writeMem(0x687f, { 0x7d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xebaa, gbc.sp());
        EXPECT(0x6880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02C6
        gbc.setState(0x7e1c, 0xa954, 0xf240, 0x7e18, 0xed25, 0xf093, 0x0, 0x1);
        gbc.writeMem(0x7e1c, { 0x7d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa954, gbc.sp());
        EXPECT(0x7e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02C7
        gbc.setState(0xbe7d, 0xea39, 0x1e30, 0x70ed, 0x26ea, 0x8a94, 0x1, 0x1);
        gbc.writeMem(0xbe7d, { 0x7d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xea39, gbc.sp());
        EXPECT(0xbe7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xbe7d));
        // 7D 02C8
        gbc.setState(0xc6ed, 0xd53b, 0x3450, 0xd155, 0x1790, 0x66bf, 0x1, 0x1);
        gbc.writeMem(0xc6ed, { 0x7d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd53b, gbc.sp());
        EXPECT(0xc6ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc6ed));
        // 7D 02C9
        gbc.setState(0x176d, 0x6bd4, 0x50f0, 0x490e, 0xf89, 0x4353, 0x0, 0x0);
        gbc.writeMem(0x176d, { 0x7d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6bd4, gbc.sp());
        EXPECT(0x176e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 02CA
        gbc.setState(0x9384, 0x70fd, 0xb50, 0xf96f, 0x64fa, 0xc647, 0x1, 0x1);
        gbc.writeMem(0x9384, { 0x7d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x70fd, gbc.sp());
        EXPECT(0x9385, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9384));
        // 7D 02CB
        gbc.setState(0xa6c0, 0x6131, 0x91f0, 0x4f14, 0xd00e, 0xb803, 0x0, 0x0);
        gbc.writeMem(0xa6c0, { 0x7d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6131, gbc.sp());
        EXPECT(0xa6c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa6c0));
        // 7D 02CD
        gbc.setState(0x1a74, 0x50e9, 0x14f0, 0x3349, 0x2845, 0xa764, 0x0, 0x1);
        gbc.writeMem(0x1a74, { 0x7d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x50e9, gbc.sp());
        EXPECT(0x1a75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 02CE
        gbc.setState(0xdaf5, 0xc153, 0x2660, 0x41f0, 0xbf2b, 0x485d, 0x0, 0x0);
        gbc.writeMem(0xdaf5, { 0x7d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc153, gbc.sp());
        EXPECT(0xdaf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xdaf5));
        // 7D 02CF
        gbc.setState(0x1a9d, 0xd6cf, 0x8ce0, 0xabac, 0x5c35, 0x51fd, 0x0, 0x1);
        gbc.writeMem(0x1a9d, { 0x7d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd6cf, gbc.sp());
        EXPECT(0x1a9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02D0
        gbc.setState(0x5907, 0xc280, 0x2e0, 0x8ec6, 0x7d5d, 0x7c79, 0x0, 0x0);
        gbc.writeMem(0x5907, { 0x7d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc280, gbc.sp());
        EXPECT(0x5908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02D1
        gbc.setState(0xaec0, 0x6314, 0x87c0, 0x6321, 0x7013, 0xcff4, 0x0, 0x0);
        gbc.writeMem(0xaec0, { 0x7d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6314, gbc.sp());
        EXPECT(0xaec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xaec0));
        // 7D 02D2
        gbc.setState(0x87af, 0x9d2a, 0xa520, 0x607a, 0x4f9, 0x7936, 0x1, 0x1);
        gbc.writeMem(0x87af, { 0x7d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9d2a, gbc.sp());
        EXPECT(0x87b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x87af));
        // 7D 02D3
        gbc.setState(0x22a3, 0xbd69, 0x9100, 0x54b8, 0x9e96, 0x574, 0x0, 0x1);
        gbc.writeMem(0x22a3, { 0x7d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xbd69, gbc.sp());
        EXPECT(0x22a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02D4
        gbc.setState(0x25bd, 0x7c30, 0xe7e0, 0x3561, 0x97aa, 0xac19, 0x0, 0x0);
        gbc.writeMem(0x25bd, { 0x7d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7c30, gbc.sp());
        EXPECT(0x25be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02D5
        gbc.setState(0x322a, 0x1cec, 0x5e50, 0xf843, 0x5361, 0xf0e4, 0x1, 0x1);
        gbc.writeMem(0x322a, { 0x7d });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1cec, gbc.sp());
        EXPECT(0x322b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 02D6
        gbc.setState(0x44d8, 0x260f, 0x9770, 0xabf3, 0x4646, 0x4cc2, 0x0, 0x1);
        gbc.writeMem(0x44d8, { 0x7d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x260f, gbc.sp());
        EXPECT(0x44d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 02D8
        gbc.setState(0xc271, 0xf171, 0xc450, 0x652f, 0x7b71, 0x1d72, 0x1, 0x1);
        gbc.writeMem(0xc271, { 0x7d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf171, gbc.sp());
        EXPECT(0xc272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc271));
        // 7D 02D9
        gbc.setState(0xc9e9, 0xe1a, 0x3b30, 0xaf13, 0xadb5, 0xfe24, 0x1, 0x1);
        gbc.writeMem(0xc9e9, { 0x7d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe1a, gbc.sp());
        EXPECT(0xc9ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc9e9));
        // 7D 02DA
        gbc.setState(0x3a25, 0xfe5a, 0xdc60, 0x3c78, 0x26a9, 0x2490, 0x0, 0x1);
        gbc.writeMem(0x3a25, { 0x7d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xfe5a, gbc.sp());
        EXPECT(0x3a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02DB
        gbc.setState(0xc165, 0x513c, 0x1a70, 0x166b, 0x2e06, 0xf56e, 0x0, 0x1);
        gbc.writeMem(0xc165, { 0x7d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x513c, gbc.sp());
        EXPECT(0xc166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc165));
        // 7D 02DC
        gbc.setState(0x889d, 0x88f4, 0xd270, 0x7c54, 0x39f6, 0xe00f, 0x1, 0x0);
        gbc.writeMem(0x889d, { 0x7d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x88f4, gbc.sp());
        EXPECT(0x889e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x889d));
        // 7D 02DD
        gbc.setState(0x913d, 0x6b56, 0x63e0, 0xbf42, 0x78f3, 0xc18, 0x0, 0x0);
        gbc.writeMem(0x913d, { 0x7d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6b56, gbc.sp());
        EXPECT(0x913e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x913d));
        // 7D 02DE
        gbc.setState(0x673d, 0x458, 0x8b00, 0x77dd, 0x7449, 0xd022, 0x1, 0x1);
        gbc.writeMem(0x673d, { 0x7d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x458, gbc.sp());
        EXPECT(0x673e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02DF
        gbc.setState(0xae53, 0x1b50, 0x5a00, 0xae1, 0xd9b7, 0x6298, 0x0, 0x1);
        gbc.writeMem(0xae53, { 0x7d });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1b50, gbc.sp());
        EXPECT(0xae54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xae53));
        // 7D 02E0
        gbc.setState(0x2252, 0x2120, 0xd550, 0x33f5, 0xec22, 0xb72a, 0x0, 0x1);
        gbc.writeMem(0x2252, { 0x7d });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2120, gbc.sp());
        EXPECT(0x2253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 02E1
        gbc.setState(0x475c, 0xd9ca, 0xca60, 0x4102, 0x23ff, 0xc436, 0x0, 0x0);
        gbc.writeMem(0x475c, { 0x7d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd9ca, gbc.sp());
        EXPECT(0x475d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02E2
        gbc.setState(0x3b45, 0x416a, 0xc850, 0x67e0, 0x5017, 0x1b13, 0x0, 0x1);
        gbc.writeMem(0x3b45, { 0x7d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x416a, gbc.sp());
        EXPECT(0x3b46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 02E3
        gbc.setState(0x9c39, 0xb1ff, 0xded0, 0xc86, 0xa661, 0x4c0b, 0x1, 0x0);
        gbc.writeMem(0x9c39, { 0x7d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb1ff, gbc.sp());
        EXPECT(0x9c3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9c39));
        // 7D 02E4
        gbc.setState(0xa517, 0xf2c4, 0xb340, 0x95bb, 0xfb82, 0x31c1, 0x0, 0x1);
        gbc.writeMem(0xa517, { 0x7d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf2c4, gbc.sp());
        EXPECT(0xa518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa517));
        // 7D 02E5
        gbc.setState(0x7559, 0x4dc1, 0x5880, 0xf26d, 0x197b, 0xdbe9, 0x1, 0x0);
        gbc.writeMem(0x7559, { 0x7d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4dc1, gbc.sp());
        EXPECT(0x755a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02E6
        gbc.setState(0x8960, 0x3977, 0x1af0, 0xf44f, 0xf1f8, 0x765e, 0x1, 0x0);
        gbc.writeMem(0x8960, { 0x7d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3977, gbc.sp());
        EXPECT(0x8961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8960));
        // 7D 02E7
        gbc.setState(0x8785, 0x41ef, 0x7cb0, 0x25bb, 0xcecd, 0xa506, 0x1, 0x0);
        gbc.writeMem(0x8785, { 0x7d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x41ef, gbc.sp());
        EXPECT(0x8786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8785));
        // 7D 02E8
        gbc.setState(0xe4b0, 0xbd9a, 0xdda0, 0x2666, 0x9ffd, 0xab96, 0x1, 0x0);
        gbc.writeMem(0xe4b0, { 0x7d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbd9a, gbc.sp());
        EXPECT(0xe4b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe4b0));
        // 7D 02E9
        gbc.setState(0x2da5, 0xcfb, 0x4a70, 0x68d0, 0xe194, 0x574a, 0x0, 0x0);
        gbc.writeMem(0x2da5, { 0x7d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcfb, gbc.sp());
        EXPECT(0x2da6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 02EA
        gbc.setState(0x6895, 0x1e35, 0x7ae0, 0xac33, 0xb833, 0xb837, 0x0, 0x0);
        gbc.writeMem(0x6895, { 0x7d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1e35, gbc.sp());
        EXPECT(0x6896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02EB
        gbc.setState(0x68e2, 0x73ac, 0xb6e0, 0x912, 0x9697, 0x33cf, 0x0, 0x0);
        gbc.writeMem(0x68e2, { 0x7d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x73ac, gbc.sp());
        EXPECT(0x68e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02EC
        gbc.setState(0xd1f4, 0x6786, 0x37e0, 0xc704, 0x53a5, 0x7293, 0x0, 0x1);
        gbc.writeMem(0xd1f4, { 0x7d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6786, gbc.sp());
        EXPECT(0xd1f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd1f4));
        // 7D 02ED
        gbc.setState(0x8c2a, 0x8fec, 0x8c40, 0x8d8e, 0x3785, 0x18d2, 0x0, 0x0);
        gbc.writeMem(0x8c2a, { 0x7d });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8fec, gbc.sp());
        EXPECT(0x8c2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8c2a));
        // 7D 02EE
        gbc.setState(0x366, 0xc2f9, 0x9930, 0x65b9, 0x3881, 0x6b34, 0x0, 0x0);
        gbc.writeMem(0x366, { 0x7d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc2f9, gbc.sp());
        EXPECT(0x367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 02EF
        gbc.setState(0x6ad7, 0xb722, 0x6eb0, 0xf9f1, 0x856b, 0x3402, 0x1, 0x0);
        gbc.writeMem(0x6ad7, { 0x7d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb722, gbc.sp());
        EXPECT(0x6ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 02F0
        gbc.setState(0x4b55, 0x54e7, 0x9de0, 0x7f37, 0x4e34, 0xd4f9, 0x1, 0x1);
        gbc.writeMem(0x4b55, { 0x7d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x54e7, gbc.sp());
        EXPECT(0x4b56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02F1
        gbc.setState(0x55c2, 0xd8c8, 0x73e0, 0x5d30, 0xe2fa, 0x7d49, 0x1, 0x1);
        gbc.writeMem(0x55c2, { 0x7d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd8c8, gbc.sp());
        EXPECT(0x55c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02F2
        gbc.setState(0xa63e, 0x852d, 0xa20, 0x9feb, 0x6fe9, 0xbe29, 0x0, 0x1);
        gbc.writeMem(0xa63e, { 0x7d });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x852d, gbc.sp());
        EXPECT(0xa63f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa63e));
        // 7D 02F3
        gbc.setState(0xa75d, 0x488, 0x8180, 0xc62d, 0x8f36, 0xe67a, 0x1, 0x1);
        gbc.writeMem(0xa75d, { 0x7d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x488, gbc.sp());
        EXPECT(0xa75e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa75d));
        // 7D 02F4
        gbc.setState(0x125e, 0x9342, 0x2930, 0xd5fc, 0xfdd5, 0x31ec, 0x1, 0x1);
        gbc.writeMem(0x125e, { 0x7d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9342, gbc.sp());
        EXPECT(0x125f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 02F5
        gbc.setState(0xda4b, 0x9d59, 0xf70, 0x84c9, 0x367d, 0x4b0f, 0x0, 0x1);
        gbc.writeMem(0xda4b, { 0x7d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9d59, gbc.sp());
        EXPECT(0xda4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xda4b));
        // 7D 02F6
        gbc.setState(0xd275, 0xde4d, 0x7be0, 0xbbb5, 0x2f06, 0xae40, 0x1, 0x0);
        gbc.writeMem(0xd275, { 0x7d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xde4d, gbc.sp());
        EXPECT(0xd276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd275));
        // 7D 02F7
        gbc.setState(0x4bdb, 0xb6d1, 0x7440, 0x6640, 0x615f, 0x3475, 0x0, 0x0);
        gbc.writeMem(0x4bdb, { 0x7d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb6d1, gbc.sp());
        EXPECT(0x4bdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02F8
        gbc.setState(0xa98a, 0x1cb0, 0x4260, 0xa2b9, 0x9a2, 0xe8f1, 0x0, 0x0);
        gbc.writeMem(0xa98a, { 0x7d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1cb0, gbc.sp());
        EXPECT(0xa98b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa98a));
        // 7D 02FA
        gbc.setState(0xb54c, 0xc273, 0xb050, 0xfe31, 0xd088, 0xc0c8, 0x1, 0x1);
        gbc.writeMem(0xb54c, { 0x7d });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc273, gbc.sp());
        EXPECT(0xb54d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb54c));
        // 7D 02FB
        gbc.setState(0x4f4c, 0x5579, 0x2c10, 0x2c1d, 0x8d65, 0xc843, 0x1, 0x1);
        gbc.writeMem(0x4f4c, { 0x7d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5579, gbc.sp());
        EXPECT(0x4f4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 02FC
        gbc.setState(0xeb49, 0x711, 0x15e0, 0xec7f, 0x2196, 0x5032, 0x1, 0x0);
        gbc.writeMem(0xeb49, { 0x7d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x711, gbc.sp());
        EXPECT(0xeb4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xeb49));
        // 7D 02FD
        gbc.setState(0xae4, 0x500e, 0xc720, 0x17c3, 0x7634, 0x1883, 0x0, 0x0);
        gbc.writeMem(0xae4, { 0x7d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x500e, gbc.sp());
        EXPECT(0xae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 02FE
        gbc.setState(0xe9bb, 0x3de6, 0x5590, 0x2084, 0x1847, 0xe8bd, 0x1, 0x0);
        gbc.writeMem(0xe9bb, { 0x7d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3de6, gbc.sp());
        EXPECT(0xe9bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe9bb));
        // 7D 02FF
        gbc.setState(0x5241, 0x8a5, 0x13f0, 0xb2b7, 0xde3e, 0xcc3c, 0x1, 0x0);
        gbc.writeMem(0x5241, { 0x7d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8a5, gbc.sp());
        EXPECT(0x5242, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0300
        gbc.setState(0x8630, 0x50ff, 0xf790, 0xb782, 0x4f84, 0x24d6, 0x0, 0x1);
        gbc.writeMem(0x8630, { 0x7d });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x50ff, gbc.sp());
        EXPECT(0x8631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8630));
        // 7D 0301
        gbc.setState(0x3a2e, 0x9971, 0xd290, 0x1eda, 0xe94e, 0x5b41, 0x1, 0x0);
        gbc.writeMem(0x3a2e, { 0x7d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9971, gbc.sp());
        EXPECT(0x3a2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0302
        gbc.setState(0x892f, 0x3307, 0x1680, 0xbb23, 0xe80c, 0xdd74, 0x0, 0x0);
        gbc.writeMem(0x892f, { 0x7d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3307, gbc.sp());
        EXPECT(0x8930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x892f));
        // 7D 0303
        gbc.setState(0xec49, 0xbd70, 0x1730, 0x5607, 0x7d02, 0x426f, 0x0, 0x0);
        gbc.writeMem(0xec49, { 0x7d });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xbd70, gbc.sp());
        EXPECT(0xec4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xec49));
        // 7D 0304
        gbc.setState(0x2b7, 0x3683, 0x4bd0, 0xf2d5, 0x8dba, 0x6360, 0x1, 0x0);
        gbc.writeMem(0x2b7, { 0x7d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3683, gbc.sp());
        EXPECT(0x2b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0305
        gbc.setState(0xa519, 0x2baa, 0xa7b0, 0x7fcd, 0x307, 0x198a, 0x0, 0x0);
        gbc.writeMem(0xa519, { 0x7d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2baa, gbc.sp());
        EXPECT(0xa51a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa519));
        // 7D 0307
        gbc.setState(0x2f1, 0xa448, 0xf30, 0xa7a8, 0x99ab, 0x8c5f, 0x1, 0x1);
        gbc.writeMem(0x2f1, { 0x7d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa448, gbc.sp());
        EXPECT(0x2f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0308
        gbc.setState(0x45bc, 0xee3d, 0x64a0, 0x46bc, 0x65ec, 0xcb06, 0x0, 0x0);
        gbc.writeMem(0x45bc, { 0x7d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xee3d, gbc.sp());
        EXPECT(0x45bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0309
        gbc.setState(0x2c6a, 0xc403, 0xd300, 0x71ff, 0x553, 0x8221, 0x1, 0x0);
        gbc.writeMem(0x2c6a, { 0x7d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc403, gbc.sp());
        EXPECT(0x2c6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 030A
        gbc.setState(0x605, 0xed25, 0xa860, 0x6d66, 0xf3e1, 0x30d7, 0x0, 0x0);
        gbc.writeMem(0x605, { 0x7d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xed25, gbc.sp());
        EXPECT(0x606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 030B
        gbc.setState(0x50d, 0x8a37, 0xbe10, 0x6526, 0xf5c4, 0x2cb9, 0x0, 0x1);
        gbc.writeMem(0x50d, { 0x7d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8a37, gbc.sp());
        EXPECT(0x50e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 030C
        gbc.setState(0xdf8a, 0x9613, 0x9720, 0x1228, 0xb8aa, 0xdb50, 0x1, 0x1);
        gbc.writeMem(0xdf8a, { 0x7d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9613, gbc.sp());
        EXPECT(0xdf8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xdf8a));
        // 7D 030D
        gbc.setState(0x1b04, 0x4b0c, 0x2cd0, 0x4839, 0xf8f6, 0x517a, 0x1, 0x1);
        gbc.writeMem(0x1b04, { 0x7d });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4b0c, gbc.sp());
        EXPECT(0x1b05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 030E
        gbc.setState(0xc909, 0x2e51, 0x19b0, 0x64c5, 0x26a7, 0x3aab, 0x1, 0x0);
        gbc.writeMem(0xc909, { 0x7d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2e51, gbc.sp());
        EXPECT(0xc90a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc909));
        // 7D 030F
        gbc.setState(0x1a69, 0x993f, 0xbc80, 0xfa2a, 0x704c, 0x3e44, 0x1, 0x1);
        gbc.writeMem(0x1a69, { 0x7d });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x993f, gbc.sp());
        EXPECT(0x1a6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0310
        gbc.setState(0x895b, 0x13f2, 0x7f80, 0x4771, 0x5f1f, 0xe461, 0x1, 0x0);
        gbc.writeMem(0x895b, { 0x7d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x13f2, gbc.sp());
        EXPECT(0x895c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x895b));
        // 7D 0311
        gbc.setState(0xb65b, 0x6ebc, 0xf840, 0xbe1c, 0x2560, 0xdf26, 0x0, 0x1);
        gbc.writeMem(0xb65b, { 0x7d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6ebc, gbc.sp());
        EXPECT(0xb65c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb65b));
        // 7D 0312
        gbc.setState(0x9867, 0x475, 0x39c0, 0xac6c, 0x8fcd, 0xbf9d, 0x0, 0x1);
        gbc.writeMem(0x9867, { 0x7d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x475, gbc.sp());
        EXPECT(0x9868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9867));
        // 7D 0313
        gbc.setState(0xacd5, 0x1831, 0xbd70, 0x444f, 0xeb20, 0xcb64, 0x1, 0x1);
        gbc.writeMem(0xacd5, { 0x7d });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1831, gbc.sp());
        EXPECT(0xacd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xacd5));
        // 7D 0314
        gbc.setState(0x467, 0x4e0a, 0x7b40, 0x1b1c, 0x7bcd, 0x68ab, 0x0, 0x1);
        gbc.writeMem(0x467, { 0x7d });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4e0a, gbc.sp());
        EXPECT(0x468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0315
        gbc.setState(0x9563, 0x1aec, 0x3c40, 0xa72f, 0xf84f, 0x8575, 0x1, 0x0);
        gbc.writeMem(0x9563, { 0x7d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1aec, gbc.sp());
        EXPECT(0x9564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9563));
        // 7D 0316
        gbc.setState(0x9c9a, 0x89e, 0xf9b0, 0x3f4a, 0xf5d, 0xecf, 0x0, 0x0);
        gbc.writeMem(0x9c9a, { 0x7d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x89e, gbc.sp());
        EXPECT(0x9c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9c9a));
        // 7D 0317
        gbc.setState(0x10f8, 0x3c2b, 0xcc50, 0x2eee, 0x5498, 0x6a04, 0x0, 0x0);
        gbc.writeMem(0x10f8, { 0x7d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3c2b, gbc.sp());
        EXPECT(0x10f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0318
        gbc.setState(0x8b91, 0xbdf8, 0xf920, 0xc65e, 0x26f9, 0x254b, 0x0, 0x1);
        gbc.writeMem(0x8b91, { 0x7d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbdf8, gbc.sp());
        EXPECT(0x8b92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8b91));
        // 7D 0319
        gbc.setState(0xc6b3, 0x168d, 0xfde0, 0xd21b, 0xf542, 0xf7c, 0x0, 0x1);
        gbc.writeMem(0xc6b3, { 0x7d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x168d, gbc.sp());
        EXPECT(0xc6b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc6b3));
        // 7D 031A
        gbc.setState(0xe41b, 0x73fd, 0xf9d0, 0xced5, 0xd769, 0xa6b7, 0x0, 0x0);
        gbc.writeMem(0xe41b, { 0x7d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x73fd, gbc.sp());
        EXPECT(0xe41c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe41b));
        // 7D 031B
        gbc.setState(0xeb24, 0xcc85, 0x9e70, 0xa580, 0xcb70, 0xa5b7, 0x0, 0x1);
        gbc.writeMem(0xeb24, { 0x7d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xcc85, gbc.sp());
        EXPECT(0xeb25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xeb24));
        // 7D 031C
        gbc.setState(0x4987, 0x3b63, 0x5980, 0x1561, 0x603c, 0xa64c, 0x0, 0x1);
        gbc.writeMem(0x4987, { 0x7d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3b63, gbc.sp());
        EXPECT(0x4988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 031D
        gbc.setState(0x9cd, 0xa87a, 0x7e60, 0x9064, 0xe035, 0x520, 0x1, 0x0);
        gbc.writeMem(0x9cd, { 0x7d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa87a, gbc.sp());
        EXPECT(0x9ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 031E
        gbc.setState(0x7a4, 0x177f, 0x15b0, 0x1e25, 0xd1cf, 0xe91c, 0x0, 0x0);
        gbc.writeMem(0x7a4, { 0x7d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x177f, gbc.sp());
        EXPECT(0x7a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 031F
        gbc.setState(0x2557, 0x20a2, 0x91c0, 0x5b1f, 0xbd0c, 0x7bc4, 0x1, 0x0);
        gbc.writeMem(0x2557, { 0x7d });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x20a2, gbc.sp());
        EXPECT(0x2558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0320
        gbc.setState(0x3134, 0x3e46, 0xb570, 0x1020, 0xd802, 0xd1b2, 0x0, 0x1);
        gbc.writeMem(0x3134, { 0x7d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3e46, gbc.sp());
        EXPECT(0x3135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0321
        gbc.setState(0x9b97, 0x98af, 0x10b0, 0x38e6, 0x8372, 0x72ad, 0x0, 0x0);
        gbc.writeMem(0x9b97, { 0x7d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x98af, gbc.sp());
        EXPECT(0x9b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9b97));
        // 7D 0322
        gbc.setState(0x9cdb, 0x7804, 0xb340, 0x214e, 0x715f, 0xbf7f, 0x1, 0x0);
        gbc.writeMem(0x9cdb, { 0x7d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7804, gbc.sp());
        EXPECT(0x9cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9cdb));
        // 7D 0323
        gbc.setState(0x126f, 0xbe67, 0x2c80, 0xddc6, 0x8ae5, 0x3760, 0x0, 0x0);
        gbc.writeMem(0x126f, { 0x7d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbe67, gbc.sp());
        EXPECT(0x1270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0324
        gbc.setState(0xef4, 0x94f2, 0x8a70, 0x6f1, 0xa398, 0xcff5, 0x0, 0x0);
        gbc.writeMem(0xef4, { 0x7d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x94f2, gbc.sp());
        EXPECT(0xef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0325
        gbc.setState(0x7469, 0x7f4e, 0xafa0, 0x75d6, 0x18a, 0x13d8, 0x0, 0x0);
        gbc.writeMem(0x7469, { 0x7d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7f4e, gbc.sp());
        EXPECT(0x746a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0326
        gbc.setState(0x4949, 0xc107, 0xa840, 0x37b7, 0xb5f1, 0x3000, 0x0, 0x0);
        gbc.writeMem(0x4949, { 0x7d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc107, gbc.sp());
        EXPECT(0x494a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0328
        gbc.setState(0x12e3, 0x6cf4, 0x32e0, 0xf476, 0xa674, 0x8a1, 0x1, 0x0);
        gbc.writeMem(0x12e3, { 0x7d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6cf4, gbc.sp());
        EXPECT(0x12e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0329
        gbc.setState(0xd479, 0xcf70, 0xe120, 0xa403, 0x4fb8, 0x6aa3, 0x1, 0x1);
        gbc.writeMem(0xd479, { 0x7d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xcf70, gbc.sp());
        EXPECT(0xd47a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd479));
        // 7D 032A
        gbc.setState(0x6531, 0x7df, 0xaec0, 0x1cc8, 0xc0e4, 0x1e26, 0x1, 0x0);
        gbc.writeMem(0x6531, { 0x7d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7df, gbc.sp());
        EXPECT(0x6532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 032B
        gbc.setState(0x8cf2, 0x89ee, 0x18b0, 0x2b98, 0x554b, 0xb5b1, 0x1, 0x0);
        gbc.writeMem(0x8cf2, { 0x7d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x89ee, gbc.sp());
        EXPECT(0x8cf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8cf2));
        // 7D 032C
        gbc.setState(0x4895, 0x2417, 0xdf50, 0xa589, 0x9c9d, 0x234d, 0x0, 0x1);
        gbc.writeMem(0x4895, { 0x7d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2417, gbc.sp());
        EXPECT(0x4896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 032D
        gbc.setState(0x8e46, 0x7904, 0x54c0, 0xd0e2, 0xfe0e, 0x4abf, 0x0, 0x0);
        gbc.writeMem(0x8e46, { 0x7d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7904, gbc.sp());
        EXPECT(0x8e47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8e46));
        // 7D 032F
        gbc.setState(0x6416, 0x2c8a, 0x55f0, 0xd39b, 0xa9a7, 0xa5cd, 0x1, 0x0);
        gbc.writeMem(0x6416, { 0x7d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2c8a, gbc.sp());
        EXPECT(0x6417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0330
        gbc.setState(0x23bf, 0xbcb8, 0xf260, 0xe124, 0xc27a, 0xa3ce, 0x1, 0x1);
        gbc.writeMem(0x23bf, { 0x7d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xbcb8, gbc.sp());
        EXPECT(0x23c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0331
        gbc.setState(0xd7b, 0xf8c0, 0x4620, 0x63ba, 0xdb82, 0x32b2, 0x0, 0x1);
        gbc.writeMem(0xd7b, { 0x7d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf8c0, gbc.sp());
        EXPECT(0xd7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0332
        gbc.setState(0x53a3, 0x5644, 0x19e0, 0xba9f, 0x1209, 0x64cb, 0x1, 0x1);
        gbc.writeMem(0x53a3, { 0x7d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5644, gbc.sp());
        EXPECT(0x53a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0333
        gbc.setState(0x8a98, 0x4aff, 0x9ac0, 0x91ce, 0x9753, 0x83f4, 0x0, 0x0);
        gbc.writeMem(0x8a98, { 0x7d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4aff, gbc.sp());
        EXPECT(0x8a99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8a98));
        // 7D 0334
        gbc.setState(0x3df, 0x5cec, 0xb930, 0x34c1, 0xd50b, 0xae48, 0x1, 0x0);
        gbc.writeMem(0x3df, { 0x7d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5cec, gbc.sp());
        EXPECT(0x3e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0335
        gbc.setState(0xcc01, 0x3441, 0x81c0, 0xe441, 0x1a2, 0x7656, 0x1, 0x0);
        gbc.writeMem(0xcc01, { 0x7d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3441, gbc.sp());
        EXPECT(0xcc02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xcc01));
        // 7D 0336
        gbc.setState(0xd7fe, 0x3b51, 0x390, 0xf239, 0xe48c, 0xc312, 0x1, 0x1);
        gbc.writeMem(0xd7fe, { 0x7d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3b51, gbc.sp());
        EXPECT(0xd7ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd7fe));
        // 7D 0337
        gbc.setState(0xc2f3, 0xd09c, 0x20a0, 0x6578, 0x37e9, 0xfbbd, 0x0, 0x1);
        gbc.writeMem(0xc2f3, { 0x7d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd09c, gbc.sp());
        EXPECT(0xc2f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc2f3));
        // 7D 0338
        gbc.setState(0x326b, 0x923b, 0xe840, 0xbc4c, 0x45f7, 0x44de, 0x0, 0x0);
        gbc.writeMem(0x326b, { 0x7d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x923b, gbc.sp());
        EXPECT(0x326c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0339
        gbc.setState(0xc3e, 0x5c7, 0x3500, 0x695f, 0x643e, 0x5918, 0x0, 0x0);
        gbc.writeMem(0xc3e, { 0x7d });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5c7, gbc.sp());
        EXPECT(0xc3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 033A
        gbc.setState(0xd1d9, 0x98fd, 0x3c90, 0x1825, 0x9ec5, 0x82a5, 0x0, 0x1);
        gbc.writeMem(0xd1d9, { 0x7d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x98fd, gbc.sp());
        EXPECT(0xd1da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd1d9));
        // 7D 033B
        gbc.setState(0xec61, 0x342e, 0x7390, 0xd4df, 0x74cf, 0x2f2e, 0x1, 0x1);
        gbc.writeMem(0xec61, { 0x7d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x342e, gbc.sp());
        EXPECT(0xec62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xec61));
        // 7D 033C
        gbc.setState(0xa906, 0xc8a, 0x9100, 0x9de, 0x1ee6, 0x285c, 0x1, 0x0);
        gbc.writeMem(0xa906, { 0x7d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc8a, gbc.sp());
        EXPECT(0xa907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa906));
        // 7D 033D
        gbc.setState(0x6c9f, 0x733f, 0x7d70, 0x3b6f, 0xde45, 0x12a0, 0x0, 0x0);
        gbc.writeMem(0x6c9f, { 0x7d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x733f, gbc.sp());
        EXPECT(0x6ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 033E
        gbc.setState(0xba84, 0x7f7b, 0x3220, 0x65df, 0x7eba, 0xd23f, 0x1, 0x0);
        gbc.writeMem(0xba84, { 0x7d });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7f7b, gbc.sp());
        EXPECT(0xba85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xba84));
        // 7D 033F
        gbc.setState(0xa11, 0x74cf, 0x53c0, 0x7b51, 0x4b70, 0xd5f, 0x0, 0x1);
        gbc.writeMem(0xa11, { 0x7d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x74cf, gbc.sp());
        EXPECT(0xa12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0340
        gbc.setState(0x308d, 0x51a2, 0xc100, 0xbacf, 0x8bdb, 0x3949, 0x0, 0x0);
        gbc.writeMem(0x308d, { 0x7d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x51a2, gbc.sp());
        EXPECT(0x308e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0341
        gbc.setState(0x83fd, 0xa17e, 0xe320, 0x9d86, 0x486a, 0x83c7, 0x0, 0x0);
        gbc.writeMem(0x83fd, { 0x7d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa17e, gbc.sp());
        EXPECT(0x83fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x83fd));
        // 7D 0342
        gbc.setState(0x161b, 0xe95b, 0x640, 0xcba2, 0x510e, 0xd18f, 0x0, 0x1);
        gbc.writeMem(0x161b, { 0x7d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe95b, gbc.sp());
        EXPECT(0x161c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0343
        gbc.setState(0xc3a1, 0x5b62, 0xebd0, 0xc4c, 0xe9d2, 0x2e3b, 0x1, 0x0);
        gbc.writeMem(0xc3a1, { 0x7d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5b62, gbc.sp());
        EXPECT(0xc3a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc3a1));
        // 7D 0344
        gbc.setState(0x757c, 0x39fd, 0x5610, 0x904b, 0xcda0, 0x5665, 0x1, 0x1);
        gbc.writeMem(0x757c, { 0x7d });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x39fd, gbc.sp());
        EXPECT(0x757d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0345
        gbc.setState(0xea3c, 0xa276, 0x8bd0, 0x480d, 0xe6bf, 0x25e7, 0x0, 0x1);
        gbc.writeMem(0xea3c, { 0x7d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa276, gbc.sp());
        EXPECT(0xea3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xea3c));
        // 7D 0346
        gbc.setState(0x28c5, 0xc5f2, 0xf500, 0xda7b, 0xbe2a, 0xf6d5, 0x0, 0x0);
        gbc.writeMem(0x28c5, { 0x7d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc5f2, gbc.sp());
        EXPECT(0x28c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0347
        gbc.setState(0x4c09, 0xb06d, 0xc6c0, 0x97ca, 0x7b8a, 0x9d63, 0x1, 0x1);
        gbc.writeMem(0x4c09, { 0x7d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb06d, gbc.sp());
        EXPECT(0x4c0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0348
        gbc.setState(0xef14, 0x312d, 0xff10, 0x886d, 0x56cf, 0x8a15, 0x1, 0x0);
        gbc.writeMem(0xef14, { 0x7d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x312d, gbc.sp());
        EXPECT(0xef15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xef14));
        // 7D 0349
        gbc.setState(0x41f3, 0xcff1, 0x2aa0, 0x5ac9, 0x3dc9, 0x4808, 0x1, 0x1);
        gbc.writeMem(0x41f3, { 0x7d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcff1, gbc.sp());
        EXPECT(0x41f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 034A
        gbc.setState(0x7b5, 0x9297, 0xdc90, 0x4813, 0xaba5, 0x58a4, 0x1, 0x1);
        gbc.writeMem(0x7b5, { 0x7d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9297, gbc.sp());
        EXPECT(0x7b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 034B
        gbc.setState(0x7043, 0x5e82, 0xa8c0, 0x9b5b, 0x7342, 0x653e, 0x0, 0x0);
        gbc.writeMem(0x7043, { 0x7d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5e82, gbc.sp());
        EXPECT(0x7044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 034C
        gbc.setState(0x8dc8, 0x59f3, 0x1f00, 0x5a4f, 0x2185, 0x808d, 0x0, 0x1);
        gbc.writeMem(0x8dc8, { 0x7d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x59f3, gbc.sp());
        EXPECT(0x8dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8dc8));
        // 7D 034D
        gbc.setState(0xc1ff, 0x69b7, 0x97e0, 0x9d1e, 0xceed, 0x2df5, 0x0, 0x0);
        gbc.writeMem(0xc1ff, { 0x7d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x69b7, gbc.sp());
        EXPECT(0xc200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc1ff));
        // 7D 034E
        gbc.setState(0x686c, 0xcc7c, 0x7400, 0x63bc, 0xf863, 0x3f21, 0x0, 0x1);
        gbc.writeMem(0x686c, { 0x7d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xcc7c, gbc.sp());
        EXPECT(0x686d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 034F
        gbc.setState(0xbf22, 0xfa07, 0x30d0, 0x9f03, 0x6e09, 0x8ca7, 0x1, 0x0);
        gbc.writeMem(0xbf22, { 0x7d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xfa07, gbc.sp());
        EXPECT(0xbf23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xbf22));
        // 7D 0350
        gbc.setState(0x775b, 0x4262, 0xb640, 0x59b, 0x8c66, 0xb0bd, 0x0, 0x0);
        gbc.writeMem(0x775b, { 0x7d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4262, gbc.sp());
        EXPECT(0x775c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0351
        gbc.setState(0x6e5c, 0x6ba6, 0xdc90, 0xf799, 0xbf1e, 0x82f0, 0x0, 0x0);
        gbc.writeMem(0x6e5c, { 0x7d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6ba6, gbc.sp());
        EXPECT(0x6e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0352
        gbc.setState(0x608, 0xaf80, 0x7520, 0x3860, 0xcf39, 0x350c, 0x1, 0x0);
        gbc.writeMem(0x608, { 0x7d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xaf80, gbc.sp());
        EXPECT(0x609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0353
        gbc.setState(0x9dcf, 0x2f02, 0xd5f0, 0x9ba8, 0xd0c3, 0x333e, 0x0, 0x0);
        gbc.writeMem(0x9dcf, { 0x7d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2f02, gbc.sp());
        EXPECT(0x9dd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9dcf));
        // 7D 0354
        gbc.setState(0x95b9, 0x2adf, 0xf440, 0x739e, 0xec50, 0xf91, 0x0, 0x0);
        gbc.writeMem(0x95b9, { 0x7d });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2adf, gbc.sp());
        EXPECT(0x95ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x95b9));
        // 7D 0355
        gbc.setState(0xbfeb, 0xee25, 0x47c0, 0xf83e, 0x27ee, 0x3c4b, 0x0, 0x1);
        gbc.writeMem(0xbfeb, { 0x7d });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xee25, gbc.sp());
        EXPECT(0xbfec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xbfeb));
        // 7D 0356
        gbc.setState(0xbbde, 0x7e88, 0x5720, 0x75a3, 0x140, 0x2ed5, 0x0, 0x0);
        gbc.writeMem(0xbbde, { 0x7d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7e88, gbc.sp());
        EXPECT(0xbbdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xbbde));
        // 7D 0357
        gbc.setState(0xaeb7, 0x6d6a, 0xf370, 0xb736, 0xe390, 0x9bc7, 0x0, 0x0);
        gbc.writeMem(0xaeb7, { 0x7d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6d6a, gbc.sp());
        EXPECT(0xaeb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xaeb7));
        // 7D 0358
        gbc.setState(0x8371, 0xb7a8, 0x5fe0, 0x3fd2, 0xe0d2, 0xfa33, 0x0, 0x0);
        gbc.writeMem(0x8371, { 0x7d });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb7a8, gbc.sp());
        EXPECT(0x8372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8371));
        // 7D 0359
        gbc.setState(0x9242, 0x91b9, 0x8660, 0xe9b2, 0x9133, 0x3952, 0x0, 0x1);
        gbc.writeMem(0x9242, { 0x7d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x91b9, gbc.sp());
        EXPECT(0x9243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9242));
        // 7D 035A
        gbc.setState(0x4d9a, 0x282f, 0xfca0, 0x8181, 0x96f7, 0x7d57, 0x1, 0x0);
        gbc.writeMem(0x4d9a, { 0x7d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x282f, gbc.sp());
        EXPECT(0x4d9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 035B
        gbc.setState(0xe1db, 0xe084, 0x66e0, 0xd951, 0xefa2, 0xc279, 0x1, 0x0);
        gbc.writeMem(0xe1db, { 0x7d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe084, gbc.sp());
        EXPECT(0xe1dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe1db));
        // 7D 035C
        gbc.setState(0xa86f, 0xff61, 0xe710, 0xf7e2, 0x9fa1, 0x20a7, 0x1, 0x1);
        gbc.writeMem(0xa86f, { 0x7d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xff61, gbc.sp());
        EXPECT(0xa870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa86f));
        // 7D 035D
        gbc.setState(0xc1c4, 0x1b6, 0x2320, 0x3a8d, 0xebaf, 0xb9d9, 0x0, 0x0);
        gbc.writeMem(0xc1c4, { 0x7d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1b6, gbc.sp());
        EXPECT(0xc1c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc1c4));
        // 7D 035E
        gbc.setState(0x4c80, 0x314, 0x40f0, 0x16a8, 0xe20b, 0xd4b1, 0x1, 0x0);
        gbc.writeMem(0x4c80, { 0x7d });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x314, gbc.sp());
        EXPECT(0x4c81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 035F
        gbc.setState(0xbec9, 0x5653, 0x3f90, 0x5ab7, 0xb280, 0xf332, 0x1, 0x1);
        gbc.writeMem(0xbec9, { 0x7d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5653, gbc.sp());
        EXPECT(0xbeca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xbec9));
        // 7D 0361
        gbc.setState(0x9430, 0xb37, 0xb970, 0xc507, 0x2f52, 0x8145, 0x1, 0x0);
        gbc.writeMem(0x9430, { 0x7d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb37, gbc.sp());
        EXPECT(0x9431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9430));
        // 7D 0362
        gbc.setState(0x1770, 0x2ad1, 0x2ea0, 0xed4, 0xec52, 0x5ae, 0x0, 0x0);
        gbc.writeMem(0x1770, { 0x7d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2ad1, gbc.sp());
        EXPECT(0x1771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0363
        gbc.setState(0x9fbe, 0x2b60, 0x72e0, 0xacad, 0xeb76, 0xf748, 0x0, 0x1);
        gbc.writeMem(0x9fbe, { 0x7d });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2b60, gbc.sp());
        EXPECT(0x9fbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9fbe));
        // 7D 0364
        gbc.setState(0x7ee5, 0x7d67, 0xfc90, 0x14a3, 0xcef7, 0x449d, 0x0, 0x1);
        gbc.writeMem(0x7ee5, { 0x7d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7d67, gbc.sp());
        EXPECT(0x7ee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0365
        gbc.setState(0x3a26, 0xdca7, 0x8ea0, 0x16d1, 0x6579, 0x1e75, 0x1, 0x0);
        gbc.writeMem(0x3a26, { 0x7d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xdca7, gbc.sp());
        EXPECT(0x3a27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0366
        gbc.setState(0xc2c5, 0x1137, 0x60a0, 0xe6b9, 0x8713, 0xad50, 0x1, 0x1);
        gbc.writeMem(0xc2c5, { 0x7d });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1137, gbc.sp());
        EXPECT(0xc2c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc2c5));
        // 7D 0367
        gbc.setState(0xf57, 0xc25, 0x24f0, 0xed07, 0xf76f, 0xf303, 0x0, 0x1);
        gbc.writeMem(0xf57, { 0x7d });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc25, gbc.sp());
        EXPECT(0xf58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0368
        gbc.setState(0x15e7, 0xad37, 0x7990, 0xbd71, 0x7a40, 0x288b, 0x1, 0x0);
        gbc.writeMem(0x15e7, { 0x7d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xad37, gbc.sp());
        EXPECT(0x15e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0369
        gbc.setState(0x758d, 0xf6d7, 0x1cd0, 0xd16b, 0xaf38, 0xb07c, 0x0, 0x1);
        gbc.writeMem(0x758d, { 0x7d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf6d7, gbc.sp());
        EXPECT(0x758e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 036A
        gbc.setState(0xfd9, 0x854d, 0xfd90, 0x37cb, 0x374, 0xa747, 0x0, 0x1);
        gbc.writeMem(0xfd9, { 0x7d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x854d, gbc.sp());
        EXPECT(0xfda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 036B
        gbc.setState(0xe8f5, 0x82e7, 0x2e20, 0x8de3, 0xe532, 0xd3a3, 0x0, 0x1);
        gbc.writeMem(0xe8f5, { 0x7d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x82e7, gbc.sp());
        EXPECT(0xe8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe8f5));
        // 7D 036D
        gbc.setState(0x200f, 0x2fd1, 0xf5e0, 0x23a0, 0xbf58, 0x3e67, 0x0, 0x0);
        gbc.writeMem(0x200f, { 0x7d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2fd1, gbc.sp());
        EXPECT(0x2010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 036E
        gbc.setState(0x9ef4, 0xfaec, 0x3cb0, 0x725b, 0xa1e3, 0x7416, 0x0, 0x1);
        gbc.writeMem(0x9ef4, { 0x7d });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfaec, gbc.sp());
        EXPECT(0x9ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9ef4));
        // 7D 036F
        gbc.setState(0x49fe, 0x943a, 0xc3b0, 0x2ef4, 0x84be, 0xef43, 0x1, 0x0);
        gbc.writeMem(0x49fe, { 0x7d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x943a, gbc.sp());
        EXPECT(0x49ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0370
        gbc.setState(0xc99d, 0x2b1e, 0x360, 0xf373, 0xf63c, 0xcc40, 0x1, 0x0);
        gbc.writeMem(0xc99d, { 0x7d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2b1e, gbc.sp());
        EXPECT(0xc99e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc99d));
        // 7D 0371
        gbc.setState(0x1b9c, 0x6feb, 0x350, 0x68cf, 0xc8e0, 0x260, 0x1, 0x1);
        gbc.writeMem(0x1b9c, { 0x7d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6feb, gbc.sp());
        EXPECT(0x1b9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0372
        gbc.setState(0x5426, 0x2b10, 0x9d70, 0x97ab, 0xe05c, 0x80a8, 0x1, 0x0);
        gbc.writeMem(0x5426, { 0x7d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2b10, gbc.sp());
        EXPECT(0x5427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0373
        gbc.setState(0xacaf, 0xa703, 0xdf40, 0x2398, 0x27f9, 0xdea6, 0x0, 0x1);
        gbc.writeMem(0xacaf, { 0x7d });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa703, gbc.sp());
        EXPECT(0xacb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xacaf));
        // 7D 0374
        gbc.setState(0x84d9, 0x969, 0xff0, 0xa613, 0xdad1, 0xa3a0, 0x1, 0x1);
        gbc.writeMem(0x84d9, { 0x7d });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x969, gbc.sp());
        EXPECT(0x84da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x84d9));
        // 7D 0375
        gbc.setState(0xadd8, 0x1a9d, 0xd80, 0xfbe, 0x4919, 0xee, 0x0, 0x0);
        gbc.writeMem(0xadd8, { 0x7d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1a9d, gbc.sp());
        EXPECT(0xadd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xadd8));
        // 7D 0376
        gbc.setState(0x730e, 0x3185, 0x30a0, 0xe37e, 0x3c03, 0xb09c, 0x1, 0x1);
        gbc.writeMem(0x730e, { 0x7d });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3185, gbc.sp());
        EXPECT(0x730f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0377
        gbc.setState(0x9405, 0x4673, 0x58e0, 0xd785, 0x30ae, 0x6734, 0x1, 0x0);
        gbc.writeMem(0x9405, { 0x7d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4673, gbc.sp());
        EXPECT(0x9406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9405));
        // 7D 0378
        gbc.setState(0x556f, 0x708, 0xe5b0, 0xbfb5, 0x9aff, 0x9f60, 0x0, 0x0);
        gbc.writeMem(0x556f, { 0x7d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x708, gbc.sp());
        EXPECT(0x5570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0379
        gbc.setState(0xe001, 0xa0dc, 0xd20, 0xcab8, 0x1595, 0x570a, 0x0, 0x0);
        gbc.writeMem(0xe001, { 0x7d });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa0dc, gbc.sp());
        EXPECT(0xe002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe001));
        // 7D 037A
        gbc.setState(0x2fe0, 0xcba5, 0xc30, 0xddf9, 0xe983, 0x6d68, 0x0, 0x0);
        gbc.writeMem(0x2fe0, { 0x7d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xcba5, gbc.sp());
        EXPECT(0x2fe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 037B
        gbc.setState(0xc972, 0x463e, 0x1340, 0x327c, 0x5792, 0x9c39, 0x0, 0x1);
        gbc.writeMem(0xc972, { 0x7d });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x463e, gbc.sp());
        EXPECT(0xc973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc972));
        // 7D 037D
        gbc.setState(0xd7fa, 0x7700, 0xe510, 0x3eec, 0x6c0, 0xecaf, 0x0, 0x1);
        gbc.writeMem(0xd7fa, { 0x7d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7700, gbc.sp());
        EXPECT(0xd7fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd7fa));
        // 7D 037F
        gbc.setState(0xaeea, 0x4700, 0xe970, 0x7618, 0x7266, 0x5eaa, 0x0, 0x0);
        gbc.writeMem(0xaeea, { 0x7d });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4700, gbc.sp());
        EXPECT(0xaeeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xaeea));
        // 7D 0380
        gbc.setState(0x52a7, 0xf4f4, 0xfa90, 0xd835, 0xfbc9, 0x43e0, 0x1, 0x0);
        gbc.writeMem(0x52a7, { 0x7d });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf4f4, gbc.sp());
        EXPECT(0x52a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0381
        gbc.setState(0x3450, 0x1c8b, 0x9eb0, 0x1e55, 0xd249, 0x1f89, 0x0, 0x0);
        gbc.writeMem(0x3450, { 0x7d });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1c8b, gbc.sp());
        EXPECT(0x3451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0382
        gbc.setState(0xd273, 0x5b47, 0x36c0, 0x2df3, 0xc2cc, 0x8ba8, 0x1, 0x1);
        gbc.writeMem(0xd273, { 0x7d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5b47, gbc.sp());
        EXPECT(0xd274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd273));
        // 7D 0383
        gbc.setState(0xde4a, 0x5cf1, 0xf400, 0xef7b, 0xc44e, 0x157c, 0x0, 0x1);
        gbc.writeMem(0xde4a, { 0x7d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5cf1, gbc.sp());
        EXPECT(0xde4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xde4a));
        // 7D 0384
        gbc.setState(0x19f4, 0x2b6b, 0xc770, 0x26f2, 0x81d3, 0x1443, 0x1, 0x0);
        gbc.writeMem(0x19f4, { 0x7d });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2b6b, gbc.sp());
        EXPECT(0x19f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0385
        gbc.setState(0xc469, 0xd8e5, 0xfc80, 0xd579, 0x485d, 0xcfc7, 0x1, 0x1);
        gbc.writeMem(0xc469, { 0x7d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd8e5, gbc.sp());
        EXPECT(0xc46a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc469));
        // 7D 0386
        gbc.setState(0x1a9a, 0xf37a, 0x6cb0, 0xc8d0, 0xae3e, 0x9882, 0x0, 0x0);
        gbc.writeMem(0x1a9a, { 0x7d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf37a, gbc.sp());
        EXPECT(0x1a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0387
        gbc.setState(0x4772, 0x6153, 0xc6e0, 0x4b9d, 0x492a, 0x713e, 0x1, 0x1);
        gbc.writeMem(0x4772, { 0x7d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6153, gbc.sp());
        EXPECT(0x4773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0389
        gbc.setState(0x9e04, 0xe9bb, 0x5ec0, 0x6277, 0x69e6, 0x25ec, 0x0, 0x1);
        gbc.writeMem(0x9e04, { 0x7d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe9bb, gbc.sp());
        EXPECT(0x9e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9e04));
        // 7D 038A
        gbc.setState(0x8f4b, 0x2e75, 0x5790, 0x3819, 0xaca, 0x9b94, 0x0, 0x1);
        gbc.writeMem(0x8f4b, { 0x7d });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2e75, gbc.sp());
        EXPECT(0x8f4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8f4b));
        // 7D 038B
        gbc.setState(0x5a32, 0x5465, 0xfb40, 0x4879, 0xd003, 0x9137, 0x0, 0x0);
        gbc.writeMem(0x5a32, { 0x7d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5465, gbc.sp());
        EXPECT(0x5a33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 038C
        gbc.setState(0xec34, 0xbd75, 0x9390, 0xc491, 0x1167, 0xdfda, 0x1, 0x1);
        gbc.writeMem(0xec34, { 0x7d });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbd75, gbc.sp());
        EXPECT(0xec35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xec34));
        // 7D 038D
        gbc.setState(0xe6a0, 0x1a96, 0xe010, 0xafe6, 0x3022, 0x3e01, 0x1, 0x1);
        gbc.writeMem(0xe6a0, { 0x7d });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1a96, gbc.sp());
        EXPECT(0xe6a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe6a0));
        // 7D 038E
        gbc.setState(0x6bc5, 0x4a24, 0xa890, 0xf8df, 0x2757, 0x231c, 0x0, 0x0);
        gbc.writeMem(0x6bc5, { 0x7d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4a24, gbc.sp());
        EXPECT(0x6bc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 038F
        gbc.setState(0x35ed, 0xb841, 0xc560, 0xd076, 0x2b21, 0x635d, 0x1, 0x0);
        gbc.writeMem(0x35ed, { 0x7d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb841, gbc.sp());
        EXPECT(0x35ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0390
        gbc.setState(0x959d, 0x99e3, 0xe350, 0xca6c, 0x8b9f, 0xd0ea, 0x0, 0x1);
        gbc.writeMem(0x959d, { 0x7d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x99e3, gbc.sp());
        EXPECT(0x959e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x959d));
        // 7D 0391
        gbc.setState(0x7ea9, 0x8450, 0x6db0, 0x6e5f, 0xd08c, 0x42a2, 0x0, 0x1);
        gbc.writeMem(0x7ea9, { 0x7d });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8450, gbc.sp());
        EXPECT(0x7eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0392
        gbc.setState(0xbc66, 0x75c4, 0x4c20, 0x1e51, 0x188b, 0xc91f, 0x1, 0x0);
        gbc.writeMem(0xbc66, { 0x7d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x75c4, gbc.sp());
        EXPECT(0xbc67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xbc66));
        // 7D 0393
        gbc.setState(0x76ab, 0x46d7, 0xbda0, 0x3e8f, 0x4d9c, 0x809d, 0x1, 0x0);
        gbc.writeMem(0x76ab, { 0x7d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x46d7, gbc.sp());
        EXPECT(0x76ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0394
        gbc.setState(0x2026, 0x50fa, 0xe940, 0xc38d, 0x4d35, 0x45cc, 0x0, 0x0);
        gbc.writeMem(0x2026, { 0x7d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x50fa, gbc.sp());
        EXPECT(0x2027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 0395
        gbc.setState(0xa31b, 0x2caa, 0xaa70, 0x49cc, 0x3b9d, 0xc5fe, 0x1, 0x0);
        gbc.writeMem(0xa31b, { 0x7d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2caa, gbc.sp());
        EXPECT(0xa31c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa31b));
        // 7D 0396
        gbc.setState(0x19d8, 0x1685, 0xd270, 0xe814, 0xcfb8, 0x77f1, 0x0, 0x0);
        gbc.writeMem(0x19d8, { 0x7d });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1685, gbc.sp());
        EXPECT(0x19d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0397
        gbc.setState(0x16ec, 0x7c98, 0x4410, 0x7ed3, 0xb767, 0xc121, 0x1, 0x0);
        gbc.writeMem(0x16ec, { 0x7d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7c98, gbc.sp());
        EXPECT(0x16ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0398
        gbc.setState(0x1737, 0xae3b, 0x5ed0, 0xef9, 0xf767, 0x1796, 0x1, 0x1);
        gbc.writeMem(0x1737, { 0x7d });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xae3b, gbc.sp());
        EXPECT(0x1738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 0399
        gbc.setState(0x8668, 0x17d4, 0x4600, 0x2fe9, 0x4665, 0xcd93, 0x1, 0x1);
        gbc.writeMem(0x8668, { 0x7d });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x17d4, gbc.sp());
        EXPECT(0x8669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8668));
        // 7D 039A
        gbc.setState(0x5fed, 0xbabf, 0xb580, 0x64c4, 0x6408, 0xadcb, 0x0, 0x0);
        gbc.writeMem(0x5fed, { 0x7d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbabf, gbc.sp());
        EXPECT(0x5fee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 039B
        gbc.setState(0x5553, 0xf192, 0xf200, 0x14e8, 0x9dc8, 0xd025, 0x1, 0x1);
        gbc.writeMem(0x5553, { 0x7d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf192, gbc.sp());
        EXPECT(0x5554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 039C
        gbc.setState(0x6ada, 0x825f, 0x290, 0x5e34, 0x888a, 0x5746, 0x1, 0x1);
        gbc.writeMem(0x6ada, { 0x7d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x825f, gbc.sp());
        EXPECT(0x6adb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 039D
        gbc.setState(0xc743, 0x116a, 0x6a80, 0x94bd, 0x6aef, 0x27f, 0x1, 0x0);
        gbc.writeMem(0xc743, { 0x7d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x116a, gbc.sp());
        EXPECT(0xc744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc743));
        // 7D 039E
        gbc.setState(0x7f47, 0xb22c, 0x650, 0x8f3b, 0xe206, 0x842d, 0x0, 0x1);
        gbc.writeMem(0x7f47, { 0x7d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb22c, gbc.sp());
        EXPECT(0x7f48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 039F
        gbc.setState(0x6956, 0x7f54, 0x8de0, 0x9df, 0xe816, 0x166, 0x0, 0x0);
        gbc.writeMem(0x6956, { 0x7d });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7f54, gbc.sp());
        EXPECT(0x6957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 03A0
        gbc.setState(0x3611, 0xe7e4, 0x85b0, 0x7ba4, 0xaf75, 0x7f9b, 0x0, 0x0);
        gbc.writeMem(0x3611, { 0x7d });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe7e4, gbc.sp());
        EXPECT(0x3612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 03A1
        gbc.setState(0x489, 0xeb1f, 0x28b0, 0xb03f, 0xfaa6, 0x25ec, 0x0, 0x0);
        gbc.writeMem(0x489, { 0x7d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xeb1f, gbc.sp());
        EXPECT(0x48a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 03A2
        gbc.setState(0xd2aa, 0xb26f, 0x2260, 0xc7a1, 0x208b, 0x8834, 0x0, 0x1);
        gbc.writeMem(0xd2aa, { 0x7d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb26f, gbc.sp());
        EXPECT(0xd2ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd2aa));
        // 7D 03A3
        gbc.setState(0xe01b, 0x5f18, 0x3610, 0xf6bf, 0x1db8, 0x29b0, 0x1, 0x1);
        gbc.writeMem(0xe01b, { 0x7d });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5f18, gbc.sp());
        EXPECT(0xe01c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe01b));
        // 7D 03A4
        gbc.setState(0xcead, 0x99f7, 0xd2e0, 0x8a0c, 0xa7fb, 0x7d32, 0x1, 0x1);
        gbc.writeMem(0xcead, { 0x7d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x99f7, gbc.sp());
        EXPECT(0xceae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xcead));
        // 7D 03A5
        gbc.setState(0x5907, 0xbfcc, 0x99d0, 0x3c7d, 0x76c6, 0x123d, 0x0, 0x1);
        gbc.writeMem(0x5907, { 0x7d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xbfcc, gbc.sp());
        EXPECT(0x5908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 03A6
        gbc.setState(0x4e69, 0xc3ac, 0xee80, 0x3212, 0x5305, 0x8de1, 0x1, 0x0);
        gbc.writeMem(0x4e69, { 0x7d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc3ac, gbc.sp());
        EXPECT(0x4e6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 03A7
        gbc.setState(0x1814, 0x6165, 0x4d80, 0x8d01, 0x860f, 0xa738, 0x0, 0x1);
        gbc.writeMem(0x1814, { 0x7d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6165, gbc.sp());
        EXPECT(0x1815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 03A9
        gbc.setState(0xd794, 0xd8b3, 0x5580, 0x66, 0xe507, 0xf910, 0x1, 0x1);
        gbc.writeMem(0xd794, { 0x7d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd8b3, gbc.sp());
        EXPECT(0xd795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd794));
        // 7D 03AA
        gbc.setState(0xd293, 0xc470, 0x41f0, 0x92a, 0x481a, 0x7546, 0x0, 0x1);
        gbc.writeMem(0xd293, { 0x7d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc470, gbc.sp());
        EXPECT(0xd294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd293));
        // 7D 03AB
        gbc.setState(0xc2ee, 0x6c8, 0x7960, 0xe7b3, 0x55ae, 0xdca7, 0x1, 0x1);
        gbc.writeMem(0xc2ee, { 0x7d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6c8, gbc.sp());
        EXPECT(0xc2ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc2ee));
        // 7D 03AC
        gbc.setState(0x1251, 0x37d6, 0xc6e0, 0x8a56, 0xd262, 0x5e47, 0x0, 0x0);
        gbc.writeMem(0x1251, { 0x7d });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x37d6, gbc.sp());
        EXPECT(0x1252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 03AD
        gbc.setState(0x27bc, 0x5485, 0x4e10, 0xcc17, 0x778f, 0xa083, 0x0, 0x1);
        gbc.writeMem(0x27bc, { 0x7d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5485, gbc.sp());
        EXPECT(0x27bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 03AE
        gbc.setState(0x43f5, 0xde0, 0x4800, 0xbf11, 0xa265, 0xe046, 0x1, 0x0);
        gbc.writeMem(0x43f5, { 0x7d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xde0, gbc.sp());
        EXPECT(0x43f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 03AF
        gbc.setState(0x3bf, 0x2989, 0x1110, 0x57f2, 0x582, 0xd910, 0x0, 0x0);
        gbc.writeMem(0x3bf, { 0x7d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2989, gbc.sp());
        EXPECT(0x3c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 03B0
        gbc.setState(0x36a4, 0x1dfb, 0x23a0, 0x2fc2, 0x8f1c, 0xa753, 0x0, 0x1);
        gbc.writeMem(0x36a4, { 0x7d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1dfb, gbc.sp());
        EXPECT(0x36a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 03B1
        gbc.setState(0xe8f7, 0xfcbe, 0xcc50, 0x8946, 0x5663, 0xc67c, 0x1, 0x0);
        gbc.writeMem(0xe8f7, { 0x7d });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xfcbe, gbc.sp());
        EXPECT(0xe8f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe8f7));
        // 7D 03B2
        gbc.setState(0x896c, 0xd605, 0xa90, 0xd0d2, 0xdf9c, 0x651d, 0x0, 0x0);
        gbc.writeMem(0x896c, { 0x7d });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd605, gbc.sp());
        EXPECT(0x896d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x896c));
        // 7D 03B3
        gbc.setState(0xc06f, 0x41c9, 0x2b50, 0xc4a0, 0x3db9, 0x2f15, 0x0, 0x0);
        gbc.writeMem(0xc06f, { 0x7d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x41c9, gbc.sp());
        EXPECT(0xc070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc06f));
        // 7D 03B4
        gbc.setState(0x3989, 0xdc9b, 0x170, 0x5020, 0xd103, 0x9935, 0x1, 0x0);
        gbc.writeMem(0x3989, { 0x7d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xdc9b, gbc.sp());
        EXPECT(0x398a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 03B5
        gbc.setState(0xdc3c, 0xd7e5, 0x2d40, 0xaebf, 0x79dc, 0x6904, 0x0, 0x0);
        gbc.writeMem(0xdc3c, { 0x7d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd7e5, gbc.sp());
        EXPECT(0xdc3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xdc3c));
        // 7D 03B6
        gbc.setState(0xd429, 0x9cda, 0xb330, 0x3e08, 0x8d9c, 0x2fc2, 0x0, 0x0);
        gbc.writeMem(0xd429, { 0x7d });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9cda, gbc.sp());
        EXPECT(0xd42a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd429));
        // 7D 03B7
        gbc.setState(0xb9a2, 0xce6, 0x9b60, 0xf593, 0xf35, 0x5f56, 0x0, 0x1);
        gbc.writeMem(0xb9a2, { 0x7d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xce6, gbc.sp());
        EXPECT(0xb9a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb9a2));
        // 7D 03B8
        gbc.setState(0x1da9, 0x2b71, 0xb930, 0x8fbc, 0x6551, 0x4252, 0x1, 0x0);
        gbc.writeMem(0x1da9, { 0x7d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2b71, gbc.sp());
        EXPECT(0x1daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 03B9
        gbc.setState(0x82dd, 0x1a83, 0x2cb0, 0xb59e, 0x3986, 0x8ea4, 0x1, 0x0);
        gbc.writeMem(0x82dd, { 0x7d });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1a83, gbc.sp());
        EXPECT(0x82de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x82dd));
        // 7D 03BA
        gbc.setState(0xe3f3, 0x1ace, 0xb840, 0xc814, 0x2c07, 0xdbe, 0x0, 0x0);
        gbc.writeMem(0xe3f3, { 0x7d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1ace, gbc.sp());
        EXPECT(0xe3f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe3f3));
        // 7D 03BB
        gbc.setState(0x12f6, 0xdc41, 0x4270, 0x8293, 0x309e, 0xdb56, 0x0, 0x1);
        gbc.writeMem(0x12f6, { 0x7d });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdc41, gbc.sp());
        EXPECT(0x12f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 03BD
        gbc.setState(0x83b3, 0xe562, 0xe90, 0x4ded, 0xff4d, 0x9770, 0x1, 0x1);
        gbc.writeMem(0x83b3, { 0x7d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe562, gbc.sp());
        EXPECT(0x83b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x83b3));
        // 7D 03BE
        gbc.setState(0x49a3, 0x306a, 0xb4d0, 0x4c42, 0xdef0, 0x7612, 0x1, 0x0);
        gbc.writeMem(0x49a3, { 0x7d });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x306a, gbc.sp());
        EXPECT(0x49a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 03BF
        gbc.setState(0x20a3, 0xec4, 0xfcd0, 0xf389, 0x2b96, 0x7cdd, 0x1, 0x1);
        gbc.writeMem(0x20a3, { 0x7d });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xec4, gbc.sp());
        EXPECT(0x20a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 03C0
        gbc.setState(0xbbf2, 0x9f71, 0x1a40, 0xd74b, 0x3f06, 0x232, 0x0, 0x1);
        gbc.writeMem(0xbbf2, { 0x7d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9f71, gbc.sp());
        EXPECT(0xbbf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xbbf2));
        // 7D 03C1
        gbc.setState(0x4920, 0x8c94, 0xa940, 0x8c61, 0x59f8, 0x54c0, 0x0, 0x1);
        gbc.writeMem(0x4920, { 0x7d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8c94, gbc.sp());
        EXPECT(0x4921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 03C2
        gbc.setState(0x8db5, 0xdf1d, 0x4490, 0x1a41, 0x4738, 0xd1d9, 0x0, 0x0);
        gbc.writeMem(0x8db5, { 0x7d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xdf1d, gbc.sp());
        EXPECT(0x8db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8db5));
        // 7D 03C3
        gbc.setState(0x7eb6, 0xe3cc, 0x1120, 0x5669, 0x70de, 0xcdc7, 0x0, 0x1);
        gbc.writeMem(0x7eb6, { 0x7d });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe3cc, gbc.sp());
        EXPECT(0x7eb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 03C4
        gbc.setState(0xe617, 0x3dfb, 0xba80, 0x1b90, 0xa465, 0x4552, 0x0, 0x0);
        gbc.writeMem(0xe617, { 0x7d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3dfb, gbc.sp());
        EXPECT(0xe618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe617));
        // 7D 03C6
        gbc.setState(0xa276, 0x8918, 0xa850, 0xa4a2, 0xa1a8, 0x211f, 0x1, 0x0);
        gbc.writeMem(0xa276, { 0x7d });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8918, gbc.sp());
        EXPECT(0xa277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa276));
        // 7D 03C7
        gbc.setState(0x7858, 0x8caa, 0xefd0, 0xac85, 0x47fb, 0x94d3, 0x1, 0x0);
        gbc.writeMem(0x7858, { 0x7d });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8caa, gbc.sp());
        EXPECT(0x7859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 03C8
        gbc.setState(0x9cb9, 0xf90a, 0x5fb0, 0xa4b0, 0xc864, 0xf2f7, 0x1, 0x0);
        gbc.writeMem(0x9cb9, { 0x7d });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf90a, gbc.sp());
        EXPECT(0x9cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x9cb9));
        // 7D 03CA
        gbc.setState(0x6edf, 0x952e, 0xa80, 0xa382, 0x2773, 0xaad0, 0x0, 0x0);
        gbc.writeMem(0x6edf, { 0x7d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x952e, gbc.sp());
        EXPECT(0x6ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 03CB
        gbc.setState(0xc15b, 0x311c, 0x2f0, 0xd0d4, 0x6549, 0x1b5f, 0x1, 0x1);
        gbc.writeMem(0xc15b, { 0x7d });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x311c, gbc.sp());
        EXPECT(0xc15c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc15b));
        // 7D 03CC
        gbc.setState(0x5e77, 0xd817, 0x41b0, 0x1be2, 0xb39c, 0x21e9, 0x1, 0x1);
        gbc.writeMem(0x5e77, { 0x7d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd817, gbc.sp());
        EXPECT(0x5e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 03CD
        gbc.setState(0x4e38, 0x8238, 0xb440, 0x91b0, 0x281e, 0xcbf5, 0x0, 0x1);
        gbc.writeMem(0x4e38, { 0x7d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8238, gbc.sp());
        EXPECT(0x4e39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 03CE
        gbc.setState(0x6a2e, 0x3e58, 0xfe20, 0x70d, 0x1466, 0x1e1c, 0x1, 0x0);
        gbc.writeMem(0x6a2e, { 0x7d });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3e58, gbc.sp());
        EXPECT(0x6a2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 03CF
        gbc.setState(0xc269, 0x2fbe, 0xcb10, 0x61f4, 0x85c, 0x7c0c, 0x1, 0x0);
        gbc.writeMem(0xc269, { 0x7d });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2fbe, gbc.sp());
        EXPECT(0xc26a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc269));
        // 7D 03D0
        gbc.setState(0x4810, 0xcff4, 0xad50, 0xf8b0, 0x9c18, 0x926c, 0x1, 0x0);
        gbc.writeMem(0x4810, { 0x7d });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcff4, gbc.sp());
        EXPECT(0x4811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 03D1
        gbc.setState(0xe091, 0x738a, 0x7b50, 0xb535, 0x4330, 0x3686, 0x0, 0x1);
        gbc.writeMem(0xe091, { 0x7d });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x738a, gbc.sp());
        EXPECT(0xe092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xe091));
        // 7D 03D2
        gbc.setState(0xce3c, 0x8365, 0xdda0, 0xef61, 0x84db, 0x66ea, 0x1, 0x1);
        gbc.writeMem(0xce3c, { 0x7d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8365, gbc.sp());
        EXPECT(0xce3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xce3c));
        // 7D 03D3
        gbc.setState(0x6349, 0xfd10, 0x6520, 0xa414, 0xe37f, 0x59a, 0x0, 0x0);
        gbc.writeMem(0x6349, { 0x7d });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xfd10, gbc.sp());
        EXPECT(0x634a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 03D4
        gbc.setState(0xc153, 0xd6b3, 0xf440, 0x1112, 0x72e5, 0x89bd, 0x1, 0x0);
        gbc.writeMem(0xc153, { 0x7d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd6b3, gbc.sp());
        EXPECT(0xc154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc153));
        // 7D 03D5
        gbc.setState(0x6907, 0x4a82, 0xd060, 0x3bf5, 0x2aa6, 0x2dc3, 0x0, 0x1);
        gbc.writeMem(0x6907, { 0x7d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4a82, gbc.sp());
        EXPECT(0x6908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 03D6
        gbc.setState(0x957e, 0x61bc, 0xf7b0, 0x9fed, 0xa21f, 0x2431, 0x1, 0x1);
        gbc.writeMem(0x957e, { 0x7d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x61bc, gbc.sp());
        EXPECT(0x957f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x957e));
        // 7D 03D7
        gbc.setState(0x7a23, 0x24fb, 0x3a20, 0x66a5, 0x7e0, 0xa61b, 0x1, 0x1);
        gbc.writeMem(0x7a23, { 0x7d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x24fb, gbc.sp());
        EXPECT(0x7a24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 03D9
        gbc.setState(0xd3de, 0x6f53, 0xfce0, 0xf32e, 0xc205, 0xf6fd, 0x1, 0x0);
        gbc.writeMem(0xd3de, { 0x7d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6f53, gbc.sp());
        EXPECT(0xd3df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd3de));
        // 7D 03DA
        gbc.setState(0xc186, 0x3432, 0xdea0, 0xeb47, 0x5866, 0x6b9, 0x1, 0x1);
        gbc.writeMem(0xc186, { 0x7d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3432, gbc.sp());
        EXPECT(0xc187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc186));
        // 7D 03DB
        gbc.setState(0x8dbb, 0x4632, 0x7f60, 0x8281, 0x731e, 0x3235, 0x0, 0x0);
        gbc.writeMem(0x8dbb, { 0x7d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4632, gbc.sp());
        EXPECT(0x8dbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8dbb));
        // 7D 03DC
        gbc.setState(0xea1c, 0x48c, 0xf290, 0x1975, 0x2458, 0x7e6e, 0x1, 0x1);
        gbc.writeMem(0xea1c, { 0x7d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x48c, gbc.sp());
        EXPECT(0xea1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xea1c));
        // 7D 03DE
        gbc.setState(0x86a3, 0xe07f, 0x18f0, 0xa812, 0x5f75, 0x96e, 0x1, 0x0);
        gbc.writeMem(0x86a3, { 0x7d });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe07f, gbc.sp());
        EXPECT(0x86a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x86a3));
        // 7D 03DF
        gbc.setState(0x63ef, 0x1a98, 0xfae0, 0x1b80, 0x6915, 0x2709, 0x1, 0x1);
        gbc.writeMem(0x63ef, { 0x7d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1a98, gbc.sp());
        EXPECT(0x63f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 03E0
        gbc.setState(0x2fc4, 0xb6a7, 0x9860, 0x3b81, 0x5137, 0x61bc, 0x1, 0x0);
        gbc.writeMem(0x2fc4, { 0x7d });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb6a7, gbc.sp());
        EXPECT(0x2fc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7D 03E1
        gbc.setState(0x5fac, 0x276a, 0x1ab0, 0xf241, 0xd696, 0xdf70, 0x0, 0x0);
        gbc.writeMem(0x5fac, { 0x7d });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x276a, gbc.sp());
        EXPECT(0x5fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 03E2
        gbc.setState(0x950b, 0xaa41, 0xbd20, 0x1eda, 0xf883, 0x8324, 0x0, 0x0);
        gbc.writeMem(0x950b, { 0x7d });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xaa41, gbc.sp());
        EXPECT(0x950c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x950b));
        // 7D 03E3
        gbc.setState(0x863e, 0xe01d, 0x4d50, 0x6453, 0x9823, 0x9613, 0x1, 0x0);
        gbc.writeMem(0x863e, { 0x7d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe01d, gbc.sp());
        EXPECT(0x863f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x863e));
        // 7D 03E4
        gbc.setState(0x8027, 0x3425, 0xa420, 0x4411, 0xb201, 0xc36, 0x0, 0x1);
        gbc.writeMem(0x8027, { 0x7d });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3425, gbc.sp());
        EXPECT(0x8028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x8027));
        // 7D 03E6
        gbc.setState(0x4cc5, 0x13b2, 0xfe90, 0x4619, 0x5f35, 0xcf83, 0x0, 0x1);
        gbc.writeMem(0x4cc5, { 0x7d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x13b2, gbc.sp());
        EXPECT(0x4cc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7D 03E7
        gbc.setState(0x5abe, 0x249e, 0xcbf0, 0xcd97, 0x7802, 0xd2e5, 0x1, 0x1);
        gbc.writeMem(0x5abe, { 0x7d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x249e, gbc.sp());
        EXPECT(0x5abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
