    TEST(gbcemu, opcode_9b) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 9B 0000
        gbc.setState(0x8cff, 0x7eeb, 0x7840, 0x51a0, 0x48f6, 0x10e4, 0x1, 0x0);
        gbc.writeMem(0x8cff, { 0x9b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7eeb, gbc.sp());
        EXPECT(0x8d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8cff));
        // 9B 0001
        gbc.setState(0x5d44, 0x42af, 0x3730, 0xf796, 0x79cd, 0x70c6, 0x0, 0x1);
        gbc.writeMem(0x5d44, { 0x9b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x42af, gbc.sp());
        EXPECT(0x5d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0002
        gbc.setState(0xc6c0, 0xb961, 0x52c0, 0x9511, 0x815b, 0xd4c6, 0x0, 0x0);
        gbc.writeMem(0xc6c0, { 0x9b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb961, gbc.sp());
        EXPECT(0xc6c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc6c0));
        // 9B 0003
        gbc.setState(0x673c, 0xcfc3, 0x3880, 0x68d9, 0xb01c, 0x3dee, 0x0, 0x0);
        gbc.writeMem(0x673c, { 0x9b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xcfc3, gbc.sp());
        EXPECT(0x673d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0004
        gbc.setState(0xafaf, 0xeffc, 0xae60, 0x4149, 0xa8b1, 0xa98a, 0x0, 0x0);
        gbc.writeMem(0xafaf, { 0x9b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xeffc, gbc.sp());
        EXPECT(0xafb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xafaf));
        // 9B 0005
        gbc.setState(0x8c25, 0xf987, 0x83a0, 0xbffd, 0x736c, 0xd48a, 0x1, 0x1);
        gbc.writeMem(0x8c25, { 0x9b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf987, gbc.sp());
        EXPECT(0x8c26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8c25));
        // 9B 0006
        gbc.setState(0x85a2, 0xa0f7, 0x2a30, 0xe646, 0xb592, 0xbc16, 0x1, 0x0);
        gbc.writeMem(0x85a2, { 0x9b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa0f7, gbc.sp());
        EXPECT(0x85a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x85a2));
        // 9B 0007
        gbc.setState(0x4465, 0xb10a, 0xce70, 0x9aab, 0x88a3, 0xe09a, 0x0, 0x0);
        gbc.writeMem(0x4465, { 0x9b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb10a, gbc.sp());
        EXPECT(0x4466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0008
        gbc.setState(0x7e8d, 0x9509, 0x7680, 0xd73b, 0xd4c3, 0x950a, 0x0, 0x1);
        gbc.writeMem(0x7e8d, { 0x9b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9509, gbc.sp());
        EXPECT(0x7e8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0009
        gbc.setState(0xaa31, 0xdb52, 0xef90, 0xdde0, 0x4ac4, 0xc769, 0x1, 0x0);
        gbc.writeMem(0xaa31, { 0x9b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdb52, gbc.sp());
        EXPECT(0xaa32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xaa31));
        // 9B 000A
        gbc.setState(0x4fb5, 0xfbae, 0x9f80, 0xd2cd, 0x1ef4, 0x6f19, 0x0, 0x1);
        gbc.writeMem(0x4fb5, { 0x9b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfbae, gbc.sp());
        EXPECT(0x4fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 000B
        gbc.setState(0x7abc, 0x36ed, 0x8390, 0xdd5d, 0x5640, 0xe234, 0x0, 0x0);
        gbc.writeMem(0x7abc, { 0x9b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x36ed, gbc.sp());
        EXPECT(0x7abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 000C
        gbc.setState(0x9fc0, 0x94ca, 0xe10, 0x37be, 0x2454, 0x47e7, 0x0, 0x1);
        gbc.writeMem(0x9fc0, { 0x9b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x94ca, gbc.sp());
        EXPECT(0x9fc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9fc0));
        // 9B 000D
        gbc.setState(0x58d9, 0x2a1, 0xa6c0, 0xa29a, 0x416c, 0x5234, 0x0, 0x1);
        gbc.writeMem(0x58d9, { 0x9b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2a1, gbc.sp());
        EXPECT(0x58da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 000E
        gbc.setState(0xb62b, 0x2ad, 0x9c40, 0xea67, 0xb15f, 0x57a9, 0x0, 0x1);
        gbc.writeMem(0xb62b, { 0x9b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2ad, gbc.sp());
        EXPECT(0xb62c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb62b));
        // 9B 000F
        gbc.setState(0x4d71, 0x5258, 0x9780, 0x7919, 0x7ba0, 0x6c84, 0x1, 0x0);
        gbc.writeMem(0x4d71, { 0x9b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5258, gbc.sp());
        EXPECT(0x4d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0010
        gbc.setState(0x9888, 0xb8a2, 0x4180, 0x2107, 0x8a32, 0x9d5b, 0x0, 0x1);
        gbc.writeMem(0x9888, { 0x9b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb8a2, gbc.sp());
        EXPECT(0x9889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9888));
        // 9B 0011
        gbc.setState(0x1b19, 0x7be1, 0x8bf0, 0xbea, 0xf0f4, 0x1144, 0x0, 0x0);
        gbc.writeMem(0x1b19, { 0x9b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7be1, gbc.sp());
        EXPECT(0x1b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0012
        gbc.setState(0x162, 0x9fac, 0x6e50, 0x2f08, 0xa79d, 0x9d1, 0x1, 0x1);
        gbc.writeMem(0x162, { 0x9b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9fac, gbc.sp());
        EXPECT(0x163, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0013
        gbc.setState(0x28a7, 0x1440, 0xe8f0, 0xfe10, 0x3cb, 0x3f27, 0x0, 0x0);
        gbc.writeMem(0x28a7, { 0x9b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1440, gbc.sp());
        EXPECT(0x28a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0014
        gbc.setState(0x9575, 0x3ad5, 0x95c0, 0xdc34, 0xd62b, 0xe37b, 0x0, 0x0);
        gbc.writeMem(0x9575, { 0x9b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3ad5, gbc.sp());
        EXPECT(0x9576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9575));
        // 9B 0015
        gbc.setState(0xd521, 0x3987, 0xa7b0, 0x9b53, 0xb25f, 0x74c7, 0x0, 0x1);
        gbc.writeMem(0xd521, { 0x9b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3987, gbc.sp());
        EXPECT(0xd522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd521));
        // 9B 0016
        gbc.setState(0xc3cd, 0xc179, 0xa3b0, 0xf33b, 0x2892, 0xb078, 0x0, 0x0);
        gbc.writeMem(0xc3cd, { 0x9b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc179, gbc.sp());
        EXPECT(0xc3ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc3cd));
        // 9B 0018
        gbc.setState(0x4b29, 0x1f52, 0x550, 0x61d0, 0xb715, 0x5816, 0x0, 0x1);
        gbc.writeMem(0x4b29, { 0x9b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1f52, gbc.sp());
        EXPECT(0x4b2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0019
        gbc.setState(0x2cfd, 0x1c2, 0xb590, 0x82ac, 0x2f40, 0xde, 0x0, 0x0);
        gbc.writeMem(0x2cfd, { 0x9b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1c2, gbc.sp());
        EXPECT(0x2cfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 001A
        gbc.setState(0x99fd, 0x3bcb, 0xfc90, 0xac4d, 0x8c59, 0x52c4, 0x0, 0x1);
        gbc.writeMem(0x99fd, { 0x9b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3bcb, gbc.sp());
        EXPECT(0x99fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x99fd));
        // 9B 001B
        gbc.setState(0x369a, 0x4059, 0x9810, 0xe383, 0xb637, 0x175, 0x0, 0x1);
        gbc.writeMem(0x369a, { 0x9b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4059, gbc.sp());
        EXPECT(0x369b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 001C
        gbc.setState(0xd0f0, 0xc9c3, 0x2a30, 0xcde6, 0xe3e4, 0x2645, 0x1, 0x0);
        gbc.writeMem(0xd0f0, { 0x9b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc9c3, gbc.sp());
        EXPECT(0xd0f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd0f0));
        // 9B 001D
        gbc.setState(0x3d66, 0xe885, 0xd670, 0x7247, 0xeab3, 0x1c8e, 0x1, 0x1);
        gbc.writeMem(0x3d66, { 0x9b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe885, gbc.sp());
        EXPECT(0x3d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 001E
        gbc.setState(0xdedd, 0x9c21, 0xdca0, 0x635c, 0xc6c9, 0x97e, 0x0, 0x1);
        gbc.writeMem(0xdedd, { 0x9b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9c21, gbc.sp());
        EXPECT(0xdede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xdedd));
        // 9B 001F
        gbc.setState(0x24a, 0x8bfa, 0xd6c0, 0xca8, 0xeaa2, 0x1789, 0x1, 0x1);
        gbc.writeMem(0x24a, { 0x9b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8bfa, gbc.sp());
        EXPECT(0x24b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0020
        gbc.setState(0xb00f, 0xa5f2, 0x7020, 0xac37, 0xaca6, 0x3bbd, 0x1, 0x1);
        gbc.writeMem(0xb00f, { 0x9b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa5f2, gbc.sp());
        EXPECT(0xb010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb00f));
        // 9B 0021
        gbc.setState(0xbaf5, 0x17db, 0x9950, 0x2d41, 0x6f37, 0x95b3, 0x0, 0x0);
        gbc.writeMem(0xbaf5, { 0x9b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x17db, gbc.sp());
        EXPECT(0xbaf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbaf5));
        // 9B 0022
        gbc.setState(0x53dc, 0x331a, 0x6c0, 0xac48, 0x82c7, 0x5732, 0x1, 0x1);
        gbc.writeMem(0x53dc, { 0x9b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x331a, gbc.sp());
        EXPECT(0x53dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0023
        gbc.setState(0x19ce, 0xce6b, 0x8220, 0x8a81, 0x3d66, 0x5b84, 0x1, 0x1);
        gbc.writeMem(0x19ce, { 0x9b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xce6b, gbc.sp());
        EXPECT(0x19cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0024
        gbc.setState(0x79df, 0x223, 0x79e0, 0x3c07, 0x40e0, 0xdad9, 0x1, 0x0);
        gbc.writeMem(0x79df, { 0x9b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x223, gbc.sp());
        EXPECT(0x79e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0025
        gbc.setState(0x993, 0xd77, 0x3910, 0x1aeb, 0xac81, 0x2f84, 0x1, 0x1);
        gbc.writeMem(0x993, { 0x9b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd77, gbc.sp());
        EXPECT(0x994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0026
        gbc.setState(0x35aa, 0x33c7, 0x6ce0, 0xe619, 0x7e83, 0x8fdf, 0x0, 0x1);
        gbc.writeMem(0x35aa, { 0x9b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x33c7, gbc.sp());
        EXPECT(0x35ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0027
        gbc.setState(0x6bea, 0xa0d8, 0xcbe0, 0xc463, 0x40a1, 0x78a6, 0x1, 0x1);
        gbc.writeMem(0x6bea, { 0x9b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa0d8, gbc.sp());
        EXPECT(0x6beb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0028
        gbc.setState(0x5e8e, 0x99bc, 0xf1f0, 0x8b1e, 0x90e0, 0x49, 0x0, 0x1);
        gbc.writeMem(0x5e8e, { 0x9b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x99bc, gbc.sp());
        EXPECT(0x5e8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0029
        gbc.setState(0x90e3, 0xaf8f, 0x78a0, 0x1500, 0xc766, 0xbbc, 0x1, 0x0);
        gbc.writeMem(0x90e3, { 0x9b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xaf8f, gbc.sp());
        EXPECT(0x90e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x90e3));
        // 9B 002A
        gbc.setState(0x3ba6, 0xc24c, 0x910, 0x3752, 0x3185, 0x8a58, 0x0, 0x0);
        gbc.writeMem(0x3ba6, { 0x9b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc24c, gbc.sp());
        EXPECT(0x3ba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 002B
        gbc.setState(0x452f, 0x1f97, 0x4430, 0x82a7, 0x1bbd, 0xa5f4, 0x0, 0x0);
        gbc.writeMem(0x452f, { 0x9b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1f97, gbc.sp());
        EXPECT(0x4530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 002C
        gbc.setState(0xd278, 0x2c0b, 0xb530, 0x2bc0, 0x2781, 0x2811, 0x1, 0x1);
        gbc.writeMem(0xd278, { 0x9b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2c0b, gbc.sp());
        EXPECT(0xd279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd278));
        // 9B 002D
        gbc.setState(0xd0f4, 0x5ac5, 0x8390, 0x22cd, 0x67f, 0xcbc5, 0x0, 0x0);
        gbc.writeMem(0xd0f4, { 0x9b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5ac5, gbc.sp());
        EXPECT(0xd0f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd0f4));
        // 9B 002E
        gbc.setState(0xc7ca, 0xf2ed, 0x6200, 0x6775, 0x6452, 0x4a85, 0x1, 0x0);
        gbc.writeMem(0xc7ca, { 0x9b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf2ed, gbc.sp());
        EXPECT(0xc7cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc7ca));
        // 9B 002F
        gbc.setState(0x2190, 0xb8d8, 0xb7c0, 0x623b, 0xc496, 0x300a, 0x1, 0x0);
        gbc.writeMem(0x2190, { 0x9b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb8d8, gbc.sp());
        EXPECT(0x2191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0030
        gbc.setState(0x7ab1, 0x94df, 0xaf30, 0x9b84, 0xb9fc, 0xe07b, 0x0, 0x0);
        gbc.writeMem(0x7ab1, { 0x9b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x94df, gbc.sp());
        EXPECT(0x7ab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0031
        gbc.setState(0x50cd, 0x5512, 0x8760, 0xe1ae, 0x1a48, 0xff1c, 0x0, 0x0);
        gbc.writeMem(0x50cd, { 0x9b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5512, gbc.sp());
        EXPECT(0x50ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0033
        gbc.setState(0xfc5, 0xcf63, 0x6690, 0x938f, 0x5355, 0xd100, 0x1, 0x0);
        gbc.writeMem(0xfc5, { 0x9b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xcf63, gbc.sp());
        EXPECT(0xfc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0035
        gbc.setState(0xa29b, 0x43c1, 0x23d0, 0x2ada, 0xcda, 0x95fe, 0x1, 0x1);
        gbc.writeMem(0xa29b, { 0x9b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x43c1, gbc.sp());
        EXPECT(0xa29c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa29b));
        // 9B 0036
        gbc.setState(0x4d21, 0x37e3, 0xfdb0, 0x7b1c, 0xcc8d, 0xb3f9, 0x0, 0x0);
        gbc.writeMem(0x4d21, { 0x9b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x37e3, gbc.sp());
        EXPECT(0x4d22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0037
        gbc.setState(0x9838, 0x1243, 0x5320, 0x6ae4, 0x7d56, 0x55b0, 0x0, 0x0);
        gbc.writeMem(0x9838, { 0x9b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1243, gbc.sp());
        EXPECT(0x9839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9838));
        // 9B 0038
        gbc.setState(0x6c21, 0x77d2, 0x5890, 0xcfdd, 0x7e7a, 0xc51e, 0x0, 0x1);
        gbc.writeMem(0x6c21, { 0x9b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x77d2, gbc.sp());
        EXPECT(0x6c22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0039
        gbc.setState(0xe253, 0x30c9, 0x5910, 0x6136, 0x4f67, 0x204e, 0x1, 0x1);
        gbc.writeMem(0xe253, { 0x9b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x30c9, gbc.sp());
        EXPECT(0xe254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe253));
        // 9B 003A
        gbc.setState(0x78be, 0xaa74, 0x31d0, 0x4791, 0x937d, 0x5a1b, 0x1, 0x1);
        gbc.writeMem(0x78be, { 0x9b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xaa74, gbc.sp());
        EXPECT(0x78bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 003B
        gbc.setState(0x4d12, 0xabab, 0xbef0, 0x6053, 0x8a75, 0x7713, 0x1, 0x0);
        gbc.writeMem(0x4d12, { 0x9b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xabab, gbc.sp());
        EXPECT(0x4d13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 003C
        gbc.setState(0x5833, 0x8ab2, 0x3a30, 0x79cd, 0xaf9c, 0x2ad1, 0x1, 0x1);
        gbc.writeMem(0x5833, { 0x9b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8ab2, gbc.sp());
        EXPECT(0x5834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 003D
        gbc.setState(0x9ee4, 0xa7d7, 0x6010, 0x801e, 0xcba9, 0x56a5, 0x0, 0x1);
        gbc.writeMem(0x9ee4, { 0x9b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa7d7, gbc.sp());
        EXPECT(0x9ee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9ee4));
        // 9B 003E
        gbc.setState(0x8e74, 0xe6fe, 0x4b80, 0x6175, 0x1980, 0xba79, 0x1, 0x0);
        gbc.writeMem(0x8e74, { 0x9b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe6fe, gbc.sp());
        EXPECT(0x8e75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8e74));
        // 9B 003F
        gbc.setState(0x8397, 0x114e, 0xf260, 0xdf85, 0x1621, 0xd09b, 0x1, 0x1);
        gbc.writeMem(0x8397, { 0x9b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x114e, gbc.sp());
        EXPECT(0x8398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8397));
        // 9B 0040
        gbc.setState(0x6816, 0xbd63, 0x3d50, 0x38b5, 0x584b, 0xce29, 0x0, 0x0);
        gbc.writeMem(0x6816, { 0x9b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbd63, gbc.sp());
        EXPECT(0x6817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0041
        gbc.setState(0x9a89, 0xa91f, 0x6480, 0xc909, 0xea4f, 0xcd17, 0x1, 0x1);
        gbc.writeMem(0x9a89, { 0x9b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa91f, gbc.sp());
        EXPECT(0x9a8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9a89));
        // 9B 0042
        gbc.setState(0x12b7, 0x7a37, 0xd6c0, 0x7297, 0xbed, 0xa387, 0x1, 0x1);
        gbc.writeMem(0x12b7, { 0x9b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7a37, gbc.sp());
        EXPECT(0x12b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0043
        gbc.setState(0x127e, 0x3a3a, 0x7840, 0x6bd, 0xda5, 0x507e, 0x0, 0x0);
        gbc.writeMem(0x127e, { 0x9b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3a3a, gbc.sp());
        EXPECT(0x127f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0044
        gbc.setState(0xdc49, 0xed09, 0x2950, 0xe942, 0x7a91, 0x305, 0x1, 0x0);
        gbc.writeMem(0xdc49, { 0x9b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xed09, gbc.sp());
        EXPECT(0xdc4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xdc49));
        // 9B 0045
        gbc.setState(0x65cf, 0xd29, 0xc750, 0x4e49, 0x1db0, 0xca52, 0x1, 0x0);
        gbc.writeMem(0x65cf, { 0x9b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd29, gbc.sp());
        EXPECT(0x65d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0047
        gbc.setState(0x75e2, 0x5e25, 0x7110, 0xf418, 0xce16, 0xdc64, 0x0, 0x1);
        gbc.writeMem(0x75e2, { 0x9b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5e25, gbc.sp());
        EXPECT(0x75e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0048
        gbc.setState(0xe3a6, 0xcd67, 0x5110, 0x1bd4, 0x7459, 0x735f, 0x0, 0x1);
        gbc.writeMem(0xe3a6, { 0x9b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcd67, gbc.sp());
        EXPECT(0xe3a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe3a6));
        // 9B 0049
        gbc.setState(0x710c, 0x5145, 0x45e0, 0xe4d3, 0x3b1a, 0x71e0, 0x1, 0x1);
        gbc.writeMem(0x710c, { 0x9b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5145, gbc.sp());
        EXPECT(0x710d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 004A
        gbc.setState(0xbd03, 0x2480, 0xbec0, 0x3cda, 0xea09, 0xc1db, 0x1, 0x1);
        gbc.writeMem(0xbd03, { 0x9b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2480, gbc.sp());
        EXPECT(0xbd04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbd03));
        // 9B 004B
        gbc.setState(0x15bf, 0xa8d3, 0x1820, 0x16d2, 0xc754, 0xa1c3, 0x0, 0x1);
        gbc.writeMem(0x15bf, { 0x9b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa8d3, gbc.sp());
        EXPECT(0x15c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 004C
        gbc.setState(0x63d, 0xf959, 0x3040, 0x6daf, 0x7cea, 0x8d02, 0x1, 0x1);
        gbc.writeMem(0x63d, { 0x9b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf959, gbc.sp());
        EXPECT(0x63e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 004D
        gbc.setState(0xd9f6, 0xc9b9, 0xc0d0, 0x45ba, 0x807, 0x29eb, 0x0, 0x0);
        gbc.writeMem(0xd9f6, { 0x9b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc9b9, gbc.sp());
        EXPECT(0xd9f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd9f6));
        // 9B 004E
        gbc.setState(0xbd74, 0xb66b, 0xe0e0, 0x9666, 0x293e, 0x78fe, 0x0, 0x1);
        gbc.writeMem(0xbd74, { 0x9b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb66b, gbc.sp());
        EXPECT(0xbd75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbd74));
        // 9B 004F
        gbc.setState(0x897a, 0x2fa2, 0xc490, 0xe9a0, 0x25cd, 0x2d18, 0x1, 0x1);
        gbc.writeMem(0x897a, { 0x9b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2fa2, gbc.sp());
        EXPECT(0x897b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x897a));
        // 9B 0050
        gbc.setState(0x14f8, 0x5cd5, 0x8ac0, 0xa014, 0xc7c0, 0xe7ba, 0x0, 0x1);
        gbc.writeMem(0x14f8, { 0x9b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5cd5, gbc.sp());
        EXPECT(0x14f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0051
        gbc.setState(0x7808, 0xddc5, 0xb1b0, 0xfd3, 0xb7c1, 0xcf23, 0x0, 0x0);
        gbc.writeMem(0x7808, { 0x9b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xddc5, gbc.sp());
        EXPECT(0x7809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0052
        gbc.setState(0x2501, 0x752a, 0xfa00, 0x71e, 0x7ae5, 0x853f, 0x1, 0x0);
        gbc.writeMem(0x2501, { 0x9b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x752a, gbc.sp());
        EXPECT(0x2502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0053
        gbc.setState(0x3548, 0xdcca, 0xa650, 0x6aa5, 0xfe01, 0xb865, 0x1, 0x1);
        gbc.writeMem(0x3548, { 0x9b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xdcca, gbc.sp());
        EXPECT(0x3549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0054
        gbc.setState(0x8e2e, 0x40bf, 0x68f0, 0xc313, 0xb807, 0x5f99, 0x1, 0x1);
        gbc.writeMem(0x8e2e, { 0x9b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x40bf, gbc.sp());
        EXPECT(0x8e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8e2e));
        // 9B 0055
        gbc.setState(0x865b, 0xd854, 0xb4e0, 0xe6a7, 0x5083, 0xaf0e, 0x0, 0x1);
        gbc.writeMem(0x865b, { 0x9b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd854, gbc.sp());
        EXPECT(0x865c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x865b));
        // 9B 0056
        gbc.setState(0xaef4, 0xd18, 0x7c50, 0x9119, 0x604e, 0x1e25, 0x1, 0x1);
        gbc.writeMem(0xaef4, { 0x9b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd18, gbc.sp());
        EXPECT(0xaef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xaef4));
        // 9B 0057
        gbc.setState(0x1f41, 0xdae1, 0x4690, 0xca08, 0xc557, 0x60b6, 0x0, 0x1);
        gbc.writeMem(0x1f41, { 0x9b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xdae1, gbc.sp());
        EXPECT(0x1f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0058
        gbc.setState(0x57bf, 0x4674, 0xfa60, 0xc7f6, 0xe798, 0xc0c9, 0x1, 0x0);
        gbc.writeMem(0x57bf, { 0x9b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4674, gbc.sp());
        EXPECT(0x57c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0059
        gbc.setState(0xdf17, 0x6617, 0xdd50, 0x4624, 0x63cc, 0xffb, 0x0, 0x0);
        gbc.writeMem(0xdf17, { 0x9b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6617, gbc.sp());
        EXPECT(0xdf18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xdf17));
        // 9B 005A
        gbc.setState(0x109d, 0xe37f, 0x92a0, 0x4b2f, 0xe603, 0x201c, 0x1, 0x1);
        gbc.writeMem(0x109d, { 0x9b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe37f, gbc.sp());
        EXPECT(0x109e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 005B
        gbc.setState(0xc81b, 0xd95a, 0x9fa0, 0xcc8f, 0x5eb5, 0xebc, 0x1, 0x0);
        gbc.writeMem(0xc81b, { 0x9b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd95a, gbc.sp());
        EXPECT(0xc81c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc81b));
        // 9B 005C
        gbc.setState(0xc043, 0x45e5, 0x6d40, 0xfe3a, 0x3f34, 0xd253, 0x1, 0x1);
        gbc.writeMem(0xc043, { 0x9b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x45e5, gbc.sp());
        EXPECT(0xc044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc043));
        // 9B 005D
        gbc.setState(0xb70a, 0xcfac, 0xe7f0, 0x7ce6, 0xd741, 0x119, 0x0, 0x0);
        gbc.writeMem(0xb70a, { 0x9b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xcfac, gbc.sp());
        EXPECT(0xb70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb70a));
        // 9B 005E
        gbc.setState(0x6c58, 0x115d, 0xc940, 0xb34b, 0x9168, 0x57c7, 0x1, 0x0);
        gbc.writeMem(0x6c58, { 0x9b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x115d, gbc.sp());
        EXPECT(0x6c59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 005F
        gbc.setState(0x7dbb, 0x17d9, 0x3610, 0x63eb, 0xc2fb, 0x1eab, 0x1, 0x1);
        gbc.writeMem(0x7dbb, { 0x9b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x17d9, gbc.sp());
        EXPECT(0x7dbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0060
        gbc.setState(0xb342, 0x8cb7, 0xa5a0, 0xe831, 0xdd7a, 0x1fee, 0x0, 0x1);
        gbc.writeMem(0xb342, { 0x9b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8cb7, gbc.sp());
        EXPECT(0xb343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb342));
        // 9B 0061
        gbc.setState(0x181f, 0xf2cf, 0x5fa0, 0x931b, 0xded6, 0xdb68, 0x1, 0x0);
        gbc.writeMem(0x181f, { 0x9b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf2cf, gbc.sp());
        EXPECT(0x1820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0062
        gbc.setState(0x2f20, 0xdef5, 0xdf40, 0x4240, 0x4d44, 0xb2ef, 0x0, 0x0);
        gbc.writeMem(0x2f20, { 0x9b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdef5, gbc.sp());
        EXPECT(0x2f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0063
        gbc.setState(0xbf8b, 0x7e6a, 0xc230, 0xadfd, 0xcfa4, 0x160d, 0x0, 0x0);
        gbc.writeMem(0xbf8b, { 0x9b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7e6a, gbc.sp());
        EXPECT(0xbf8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbf8b));
        // 9B 0065
        gbc.setState(0x98a2, 0x4196, 0x1660, 0x1e1c, 0x6a84, 0x18fe, 0x0, 0x0);
        gbc.writeMem(0x98a2, { 0x9b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4196, gbc.sp());
        EXPECT(0x98a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x98a2));
        // 9B 0066
        gbc.setState(0x7a5f, 0xe971, 0xe40, 0xf177, 0xf02b, 0xbf47, 0x0, 0x0);
        gbc.writeMem(0x7a5f, { 0x9b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe971, gbc.sp());
        EXPECT(0x7a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0067
        gbc.setState(0xc1ba, 0xd0f5, 0x7b40, 0xc313, 0x2a75, 0xae18, 0x0, 0x1);
        gbc.writeMem(0xc1ba, { 0x9b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd0f5, gbc.sp());
        EXPECT(0xc1bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc1ba));
        // 9B 0068
        gbc.setState(0x692c, 0xef2e, 0xfd60, 0x46f3, 0xb094, 0x20f4, 0x0, 0x1);
        gbc.writeMem(0x692c, { 0x9b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xef2e, gbc.sp());
        EXPECT(0x692d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0069
        gbc.setState(0x103d, 0x4249, 0xa1d0, 0x33fc, 0x745e, 0x8855, 0x0, 0x0);
        gbc.writeMem(0x103d, { 0x9b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4249, gbc.sp());
        EXPECT(0x103e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 006A
        gbc.setState(0xa0a8, 0x24b1, 0xc420, 0x7b38, 0x3592, 0x73, 0x0, 0x1);
        gbc.writeMem(0xa0a8, { 0x9b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x24b1, gbc.sp());
        EXPECT(0xa0a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa0a8));
        // 9B 006B
        gbc.setState(0xb340, 0x4daf, 0x8740, 0xf85f, 0x6b71, 0xda14, 0x1, 0x0);
        gbc.writeMem(0xb340, { 0x9b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4daf, gbc.sp());
        EXPECT(0xb341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb340));
        // 9B 006C
        gbc.setState(0xe9f1, 0xb109, 0x1530, 0xd907, 0x736f, 0xe6a4, 0x0, 0x0);
        gbc.writeMem(0xe9f1, { 0x9b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb109, gbc.sp());
        EXPECT(0xe9f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe9f1));
        // 9B 006D
        gbc.setState(0x2c93, 0xb8ad, 0x4710, 0x42dc, 0xe123, 0x38f5, 0x1, 0x0);
        gbc.writeMem(0x2c93, { 0x9b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb8ad, gbc.sp());
        EXPECT(0x2c94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 006E
        gbc.setState(0x6d9b, 0x1fbb, 0x8be0, 0xe21, 0xf33e, 0x6f5a, 0x1, 0x1);
        gbc.writeMem(0x6d9b, { 0x9b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1fbb, gbc.sp());
        EXPECT(0x6d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 006F
        gbc.setState(0x8ccb, 0xbd36, 0xaa10, 0xd9fc, 0x3610, 0xf990, 0x0, 0x0);
        gbc.writeMem(0x8ccb, { 0x9b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xbd36, gbc.sp());
        EXPECT(0x8ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8ccb));
        // 9B 0070
        gbc.setState(0x8ba3, 0xc11a, 0x9690, 0x538e, 0x3e47, 0xf7bf, 0x0, 0x1);
        gbc.writeMem(0x8ba3, { 0x9b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc11a, gbc.sp());
        EXPECT(0x8ba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8ba3));
        // 9B 0071
        gbc.setState(0x3482, 0x4acb, 0xff70, 0x4a5a, 0x34b2, 0x52f3, 0x1, 0x0);
        gbc.writeMem(0x3482, { 0x9b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4acb, gbc.sp());
        EXPECT(0x3483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0072
        gbc.setState(0x4e2d, 0xc995, 0x220, 0xffc7, 0x685e, 0x4b78, 0x0, 0x0);
        gbc.writeMem(0x4e2d, { 0x9b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc995, gbc.sp());
        EXPECT(0x4e2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0073
        gbc.setState(0xbdf1, 0x5d37, 0x4130, 0xe52e, 0x3da3, 0xc587, 0x0, 0x0);
        gbc.writeMem(0xbdf1, { 0x9b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5d37, gbc.sp());
        EXPECT(0xbdf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbdf1));
        // 9B 0075
        gbc.setState(0x4e02, 0xb1a5, 0xbce0, 0xde7f, 0x1a3e, 0x6b31, 0x1, 0x0);
        gbc.writeMem(0x4e02, { 0x9b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb1a5, gbc.sp());
        EXPECT(0x4e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0076
        gbc.setState(0x7cdf, 0xd386, 0xc060, 0x34c9, 0x5f42, 0x7011, 0x0, 0x0);
        gbc.writeMem(0x7cdf, { 0x9b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd386, gbc.sp());
        EXPECT(0x7ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0077
        gbc.setState(0x919a, 0x74c0, 0xda00, 0x705c, 0x6ccf, 0x44f4, 0x0, 0x0);
        gbc.writeMem(0x919a, { 0x9b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x74c0, gbc.sp());
        EXPECT(0x919b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x919a));
        // 9B 0078
        gbc.setState(0x58be, 0xa0f8, 0x69f0, 0xb716, 0x7355, 0xae20, 0x0, 0x0);
        gbc.writeMem(0x58be, { 0x9b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa0f8, gbc.sp());
        EXPECT(0x58bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0079
        gbc.setState(0xc9fe, 0xbb8f, 0xe80, 0x5f71, 0xe4b1, 0x90d2, 0x1, 0x0);
        gbc.writeMem(0xc9fe, { 0x9b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbb8f, gbc.sp());
        EXPECT(0xc9ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc9fe));
        // 9B 007A
        gbc.setState(0x967a, 0x2e36, 0xfc70, 0x99d6, 0x7c5b, 0xae71, 0x0, 0x0);
        gbc.writeMem(0x967a, { 0x9b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2e36, gbc.sp());
        EXPECT(0x967b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x967a));
        // 9B 007B
        gbc.setState(0x33f, 0x9628, 0xca00, 0xa008, 0xfb0f, 0x60e, 0x0, 0x0);
        gbc.writeMem(0x33f, { 0x9b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9628, gbc.sp());
        EXPECT(0x340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 007C
        gbc.setState(0xfac, 0xfa0f, 0x25d0, 0xa168, 0x469a, 0x9bcd, 0x1, 0x0);
        gbc.writeMem(0xfac, { 0x9b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfa0f, gbc.sp());
        EXPECT(0xfad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 007D
        gbc.setState(0x590b, 0x4568, 0xa250, 0xb2ef, 0x8769, 0x25a8, 0x0, 0x0);
        gbc.writeMem(0x590b, { 0x9b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4568, gbc.sp());
        EXPECT(0x590c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 007E
        gbc.setState(0xdf87, 0x4eea, 0xd450, 0x5f43, 0xbe68, 0x8566, 0x0, 0x0);
        gbc.writeMem(0xdf87, { 0x9b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4eea, gbc.sp());
        EXPECT(0xdf88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xdf87));
        // 9B 007F
        gbc.setState(0xdcc2, 0xccaa, 0xd280, 0x4659, 0x98e5, 0x8c5, 0x1, 0x1);
        gbc.writeMem(0xdcc2, { 0x9b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xccaa, gbc.sp());
        EXPECT(0xdcc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xdcc2));
        // 9B 0080
        gbc.setState(0x921, 0xa817, 0xb8e0, 0x2f93, 0x4119, 0x364a, 0x1, 0x0);
        gbc.writeMem(0x921, { 0x9b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa817, gbc.sp());
        EXPECT(0x922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0082
        gbc.setState(0xcc44, 0x1e66, 0xe610, 0x94e8, 0x560e, 0x4779, 0x0, 0x1);
        gbc.writeMem(0xcc44, { 0x9b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1e66, gbc.sp());
        EXPECT(0xcc45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xcc44));
        // 9B 0083
        gbc.setState(0x6842, 0x4667, 0x65f0, 0x3e74, 0x74f3, 0xa563, 0x1, 0x1);
        gbc.writeMem(0x6842, { 0x9b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4667, gbc.sp());
        EXPECT(0x6843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0084
        gbc.setState(0x848b, 0xa36a, 0x9040, 0x83e9, 0xd4f1, 0x87c9, 0x1, 0x1);
        gbc.writeMem(0x848b, { 0x9b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa36a, gbc.sp());
        EXPECT(0x848c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x848b));
        // 9B 0085
        gbc.setState(0x70ad, 0x5143, 0xae60, 0xd17b, 0x9fa7, 0x9f51, 0x1, 0x0);
        gbc.writeMem(0x70ad, { 0x9b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5143, gbc.sp());
        EXPECT(0x70ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0086
        gbc.setState(0x4008, 0x3611, 0x1330, 0xc7bf, 0xbdb5, 0x4e98, 0x1, 0x0);
        gbc.writeMem(0x4008, { 0x9b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3611, gbc.sp());
        EXPECT(0x4009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0087
        gbc.setState(0xc481, 0x340a, 0x3390, 0xd545, 0x9e67, 0x32f5, 0x0, 0x0);
        gbc.writeMem(0xc481, { 0x9b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x340a, gbc.sp());
        EXPECT(0xc482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc481));
        // 9B 0089
        gbc.setState(0xafbe, 0xe43c, 0x2240, 0xf166, 0xc072, 0xb7af, 0x0, 0x1);
        gbc.writeMem(0xafbe, { 0x9b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe43c, gbc.sp());
        EXPECT(0xafbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xafbe));
        // 9B 008A
        gbc.setState(0xa61b, 0x1596, 0xcb60, 0x58b8, 0x4322, 0x8c31, 0x1, 0x0);
        gbc.writeMem(0xa61b, { 0x9b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1596, gbc.sp());
        EXPECT(0xa61c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa61b));
        // 9B 008B
        gbc.setState(0x7de6, 0x6774, 0xa080, 0x7f21, 0x9e66, 0x16ce, 0x0, 0x1);
        gbc.writeMem(0x7de6, { 0x9b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6774, gbc.sp());
        EXPECT(0x7de7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 008C
        gbc.setState(0x77f4, 0x782d, 0xaef0, 0x9aff, 0x5553, 0x3050, 0x0, 0x1);
        gbc.writeMem(0x77f4, { 0x9b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x782d, gbc.sp());
        EXPECT(0x77f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 008D
        gbc.setState(0x6338, 0x7fdf, 0x3ea0, 0x940f, 0xb4ef, 0x70fa, 0x1, 0x0);
        gbc.writeMem(0x6338, { 0x9b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7fdf, gbc.sp());
        EXPECT(0x6339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 008E
        gbc.setState(0xb85e, 0xfd3e, 0xfaf0, 0x5674, 0xbc94, 0x8383, 0x0, 0x0);
        gbc.writeMem(0xb85e, { 0x9b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xfd3e, gbc.sp());
        EXPECT(0xb85f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb85e));
        // 9B 008F
        gbc.setState(0x34bc, 0xaff6, 0x3fa0, 0x27c5, 0x7483, 0xc52d, 0x1, 0x0);
        gbc.writeMem(0x34bc, { 0x9b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xaff6, gbc.sp());
        EXPECT(0x34bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0090
        gbc.setState(0x87c0, 0x9def, 0x4d90, 0xe59c, 0xf516, 0x2d40, 0x0, 0x1);
        gbc.writeMem(0x87c0, { 0x9b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9def, gbc.sp());
        EXPECT(0x87c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x87c0));
        // 9B 0091
        gbc.setState(0x7b68, 0x5b79, 0x2f10, 0x5a20, 0x1e22, 0x25ed, 0x1, 0x1);
        gbc.writeMem(0x7b68, { 0x9b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5b79, gbc.sp());
        EXPECT(0x7b69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0092
        gbc.setState(0x4b6b, 0x6bf3, 0x5970, 0xb2f0, 0xb15, 0x5fb8, 0x0, 0x1);
        gbc.writeMem(0x4b6b, { 0x9b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6bf3, gbc.sp());
        EXPECT(0x4b6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0093
        gbc.setState(0x5fb7, 0xfb32, 0x3be0, 0xddee, 0xc99, 0x958b, 0x1, 0x1);
        gbc.writeMem(0x5fb7, { 0x9b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfb32, gbc.sp());
        EXPECT(0x5fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0094
        gbc.setState(0xd7ac, 0xc6ee, 0x9a0, 0x8072, 0x708d, 0x6675, 0x0, 0x1);
        gbc.writeMem(0xd7ac, { 0x9b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc6ee, gbc.sp());
        EXPECT(0xd7ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd7ac));
        // 9B 0095
        gbc.setState(0x3328, 0xa524, 0x75e0, 0x54b5, 0xe188, 0xdfa5, 0x1, 0x0);
        gbc.writeMem(0x3328, { 0x9b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa524, gbc.sp());
        EXPECT(0x3329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0096
        gbc.setState(0x909, 0x46b3, 0x2080, 0x937c, 0xe575, 0xc944, 0x1, 0x0);
        gbc.writeMem(0x909, { 0x9b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x46b3, gbc.sp());
        EXPECT(0x90a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0097
        gbc.setState(0x4c29, 0x1c67, 0x9540, 0x9169, 0x5b3a, 0xde88, 0x1, 0x1);
        gbc.writeMem(0x4c29, { 0x9b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1c67, gbc.sp());
        EXPECT(0x4c2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0098
        gbc.setState(0x64f3, 0x6c87, 0x1cf0, 0x24de, 0xa095, 0xc32b, 0x0, 0x1);
        gbc.writeMem(0x64f3, { 0x9b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6c87, gbc.sp());
        EXPECT(0x64f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0099
        gbc.setState(0x93e8, 0xb007, 0x4df0, 0xcea8, 0x71a, 0xbbb8, 0x0, 0x0);
        gbc.writeMem(0x93e8, { 0x9b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb007, gbc.sp());
        EXPECT(0x93e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x93e8));
        // 9B 009A
        gbc.setState(0x1e5b, 0xad86, 0x3070, 0x19b9, 0xed0, 0xb52, 0x0, 0x1);
        gbc.writeMem(0x1e5b, { 0x9b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xad86, gbc.sp());
        EXPECT(0x1e5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 009B
        gbc.setState(0x496, 0x547e, 0x8e60, 0x30c8, 0x5a01, 0x1e8e, 0x1, 0x0);
        gbc.writeMem(0x496, { 0x9b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x547e, gbc.sp());
        EXPECT(0x497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 009C
        gbc.setState(0x88a2, 0x58a4, 0x3780, 0x85e7, 0x7c26, 0x790, 0x0, 0x0);
        gbc.writeMem(0x88a2, { 0x9b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x58a4, gbc.sp());
        EXPECT(0x88a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x88a2));
        // 9B 009D
        gbc.setState(0xe87, 0x90d7, 0x8120, 0x945c, 0xfecf, 0x822e, 0x1, 0x0);
        gbc.writeMem(0xe87, { 0x9b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x90d7, gbc.sp());
        EXPECT(0xe88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 009E
        gbc.setState(0x23e6, 0x548c, 0xabd0, 0x583b, 0xaca0, 0x3af7, 0x0, 0x0);
        gbc.writeMem(0x23e6, { 0x9b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x548c, gbc.sp());
        EXPECT(0x23e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 009F
        gbc.setState(0xeeb5, 0xe039, 0x4620, 0x2a76, 0x3d7f, 0x2edf, 0x0, 0x1);
        gbc.writeMem(0xeeb5, { 0x9b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe039, gbc.sp());
        EXPECT(0xeeb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xeeb5));
        // 9B 00A0
        gbc.setState(0xf9e, 0x5c79, 0x2780, 0x59c3, 0x90e9, 0x994, 0x0, 0x1);
        gbc.writeMem(0xf9e, { 0x9b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5c79, gbc.sp());
        EXPECT(0xf9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 00A1
        gbc.setState(0x5b95, 0xcd6, 0x4630, 0x2292, 0xac82, 0x5a69, 0x0, 0x0);
        gbc.writeMem(0x5b95, { 0x9b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xcd6, gbc.sp());
        EXPECT(0x5b96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 00A2
        gbc.setState(0x3bf7, 0x3960, 0x8d80, 0x638, 0x5a0d, 0x256, 0x1, 0x0);
        gbc.writeMem(0x3bf7, { 0x9b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3960, gbc.sp());
        EXPECT(0x3bf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00A3
        gbc.setState(0xe40, 0xdbd1, 0x2be0, 0x95b6, 0x1e1c, 0xff44, 0x1, 0x0);
        gbc.writeMem(0xe40, { 0x9b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdbd1, gbc.sp());
        EXPECT(0xe41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00A4
        gbc.setState(0x9d1a, 0x6134, 0xbe0, 0x7e45, 0xa546, 0x27ee, 0x0, 0x0);
        gbc.writeMem(0x9d1a, { 0x9b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6134, gbc.sp());
        EXPECT(0x9d1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9d1a));
        // 9B 00A5
        gbc.setState(0x39d4, 0x5f28, 0xe540, 0x3946, 0x3dce, 0xb805, 0x0, 0x0);
        gbc.writeMem(0x39d4, { 0x9b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5f28, gbc.sp());
        EXPECT(0x39d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00A6
        gbc.setState(0xdd76, 0xe3cd, 0x3b0, 0x606e, 0x1598, 0xaefc, 0x0, 0x0);
        gbc.writeMem(0xdd76, { 0x9b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe3cd, gbc.sp());
        EXPECT(0xdd77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xdd76));
        // 9B 00A7
        gbc.setState(0x3cd1, 0x5b43, 0xbb80, 0x972c, 0x5b4e, 0xdf4, 0x1, 0x0);
        gbc.writeMem(0x3cd1, { 0x9b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5b43, gbc.sp());
        EXPECT(0x3cd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00A9
        gbc.setState(0x445f, 0x6728, 0x48c0, 0xe219, 0xa15d, 0x72b2, 0x1, 0x1);
        gbc.writeMem(0x445f, { 0x9b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6728, gbc.sp());
        EXPECT(0x4460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 00AA
        gbc.setState(0x43fa, 0x1106, 0xc2d0, 0xf102, 0x7397, 0x62fe, 0x0, 0x1);
        gbc.writeMem(0x43fa, { 0x9b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1106, gbc.sp());
        EXPECT(0x43fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00AB
        gbc.setState(0x73da, 0xd962, 0xfb30, 0xfbec, 0xc174, 0x3585, 0x0, 0x0);
        gbc.writeMem(0x73da, { 0x9b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd962, gbc.sp());
        EXPECT(0x73db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00AC
        gbc.setState(0xe40d, 0xb9d9, 0x8db0, 0xeccd, 0x60e1, 0xd572, 0x1, 0x1);
        gbc.writeMem(0xe40d, { 0x9b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb9d9, gbc.sp());
        EXPECT(0xe40e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe40d));
        // 9B 00AD
        gbc.setState(0x175e, 0xf1f9, 0x2f10, 0x130, 0x5039, 0x2f46, 0x0, 0x0);
        gbc.writeMem(0x175e, { 0x9b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf1f9, gbc.sp());
        EXPECT(0x175f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 00AE
        gbc.setState(0x893b, 0xb5e4, 0x5ab0, 0x8bb2, 0xeedc, 0x589e, 0x0, 0x0);
        gbc.writeMem(0x893b, { 0x9b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb5e4, gbc.sp());
        EXPECT(0x893c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x893b));
        // 9B 00AF
        gbc.setState(0x8134, 0xeb12, 0xd700, 0xe8af, 0xc08a, 0xe53b, 0x0, 0x0);
        gbc.writeMem(0x8134, { 0x9b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xeb12, gbc.sp());
        EXPECT(0x8135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8134));
        // 9B 00B0
        gbc.setState(0x4b46, 0x1cd2, 0xf3c0, 0xd7c8, 0xad54, 0x8902, 0x0, 0x1);
        gbc.writeMem(0x4b46, { 0x9b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1cd2, gbc.sp());
        EXPECT(0x4b47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00B1
        gbc.setState(0x30bf, 0x2eb3, 0x3d90, 0x945d, 0x335f, 0xef8, 0x0, 0x0);
        gbc.writeMem(0x30bf, { 0x9b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2eb3, gbc.sp());
        EXPECT(0x30c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 00B2
        gbc.setState(0xa02d, 0x7d29, 0xd940, 0xe16, 0xa3f6, 0xee3c, 0x0, 0x0);
        gbc.writeMem(0xa02d, { 0x9b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7d29, gbc.sp());
        EXPECT(0xa02e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa02d));
        // 9B 00B3
        gbc.setState(0x96, 0x3de8, 0x4c80, 0xd156, 0x87a8, 0x9a42, 0x0, 0x1);
        gbc.writeMem(0x96, { 0x9b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3de8, gbc.sp());
        EXPECT(0x97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 00B4
        gbc.setState(0x2ad9, 0x350b, 0x9e20, 0xb70b, 0xb79f, 0x305a, 0x0, 0x0);
        gbc.writeMem(0x2ad9, { 0x9b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x350b, gbc.sp());
        EXPECT(0x2ada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 00B5
        gbc.setState(0x3823, 0xc6b5, 0x9e40, 0xc9e8, 0xfed0, 0xd09d, 0x0, 0x0);
        gbc.writeMem(0x3823, { 0x9b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc6b5, gbc.sp());
        EXPECT(0x3824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 00B6
        gbc.setState(0xb1e8, 0x6097, 0x4d50, 0xa832, 0x30a7, 0xdada, 0x0, 0x1);
        gbc.writeMem(0xb1e8, { 0x9b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6097, gbc.sp());
        EXPECT(0xb1e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb1e8));
        // 9B 00B7
        gbc.setState(0x89, 0xe430, 0xff20, 0x672d, 0x5546, 0xf946, 0x1, 0x1);
        gbc.writeMem(0x89, { 0x9b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe430, gbc.sp());
        EXPECT(0x8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00B8
        gbc.setState(0xa9d7, 0x8459, 0x38c0, 0x83a8, 0x26b, 0x9b32, 0x1, 0x1);
        gbc.writeMem(0xa9d7, { 0x9b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8459, gbc.sp());
        EXPECT(0xa9d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa9d7));
        // 9B 00B9
        gbc.setState(0x7c58, 0xff2a, 0xb10, 0x9f6c, 0xbd3e, 0xff8c, 0x1, 0x0);
        gbc.writeMem(0x7c58, { 0x9b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xff2a, gbc.sp());
        EXPECT(0x7c59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 00BA
        gbc.setState(0x8d02, 0xb06f, 0xdc20, 0x8728, 0x6e7b, 0xe60, 0x0, 0x1);
        gbc.writeMem(0x8d02, { 0x9b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb06f, gbc.sp());
        EXPECT(0x8d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8d02));
        // 9B 00BB
        gbc.setState(0xac44, 0x5c42, 0x1d10, 0x9ec2, 0x6669, 0x98d6, 0x0, 0x1);
        gbc.writeMem(0xac44, { 0x9b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5c42, gbc.sp());
        EXPECT(0xac45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xac44));
        // 9B 00BC
        gbc.setState(0x722a, 0xd83f, 0xd450, 0xb5fd, 0x6bc7, 0x8bbe, 0x0, 0x1);
        gbc.writeMem(0x722a, { 0x9b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd83f, gbc.sp());
        EXPECT(0x722b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00BD
        gbc.setState(0x3c47, 0x9079, 0xfc80, 0xc203, 0xa8d8, 0x70f0, 0x0, 0x0);
        gbc.writeMem(0x3c47, { 0x9b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9079, gbc.sp());
        EXPECT(0x3c48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00BE
        gbc.setState(0x9e73, 0x552c, 0x3e40, 0xc70e, 0x230d, 0x2391, 0x1, 0x0);
        gbc.writeMem(0x9e73, { 0x9b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x552c, gbc.sp());
        EXPECT(0x9e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9e73));
        // 9B 00BF
        gbc.setState(0x6fad, 0x5f3d, 0xb40, 0xdd2e, 0x4869, 0x1e7b, 0x1, 0x0);
        gbc.writeMem(0x6fad, { 0x9b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5f3d, gbc.sp());
        EXPECT(0x6fae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 00C0
        gbc.setState(0xa19b, 0x485f, 0x17b0, 0x1b06, 0x509e, 0x7515, 0x1, 0x0);
        gbc.writeMem(0xa19b, { 0x9b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x485f, gbc.sp());
        EXPECT(0xa19c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa19b));
        // 9B 00C1
        gbc.setState(0x702e, 0xc0fa, 0xa270, 0x308f, 0xf2e2, 0x23a9, 0x1, 0x0);
        gbc.writeMem(0x702e, { 0x9b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc0fa, gbc.sp());
        EXPECT(0x702f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 00C2
        gbc.setState(0x3e39, 0xa121, 0x95e0, 0x1ed6, 0x295, 0xf284, 0x0, 0x0);
        gbc.writeMem(0x3e39, { 0x9b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa121, gbc.sp());
        EXPECT(0x3e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00C3
        gbc.setState(0xcd7, 0x1a5e, 0x41e0, 0xe4ef, 0x6505, 0x79c5, 0x0, 0x1);
        gbc.writeMem(0xcd7, { 0x9b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1a5e, gbc.sp());
        EXPECT(0xcd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00C4
        gbc.setState(0x7178, 0x98ab, 0x48c0, 0x52b, 0x2b3f, 0xa591, 0x0, 0x1);
        gbc.writeMem(0x7178, { 0x9b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x98ab, gbc.sp());
        EXPECT(0x7179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00C5
        gbc.setState(0xbcc5, 0xd1c2, 0x5050, 0x74f5, 0xb0cd, 0x91ac, 0x0, 0x1);
        gbc.writeMem(0xbcc5, { 0x9b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd1c2, gbc.sp());
        EXPECT(0xbcc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbcc5));
        // 9B 00C6
        gbc.setState(0x2f0f, 0xaa90, 0xfde0, 0x10ce, 0xe17c, 0xcab4, 0x0, 0x0);
        gbc.writeMem(0x2f0f, { 0x9b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xaa90, gbc.sp());
        EXPECT(0x2f10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00C7
        gbc.setState(0x2d39, 0x6d6c, 0x6770, 0xfda9, 0x622e, 0xfa6d, 0x0, 0x0);
        gbc.writeMem(0x2d39, { 0x9b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6d6c, gbc.sp());
        EXPECT(0x2d3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00C8
        gbc.setState(0xa103, 0x44b7, 0xf9f0, 0xae1e, 0x5ddd, 0x1141, 0x1, 0x1);
        gbc.writeMem(0xa103, { 0x9b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x44b7, gbc.sp());
        EXPECT(0xa104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa103));
        // 9B 00C9
        gbc.setState(0xbcdb, 0x9441, 0x4970, 0xd4b1, 0x8db9, 0x1777, 0x0, 0x1);
        gbc.writeMem(0xbcdb, { 0x9b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9441, gbc.sp());
        EXPECT(0xbcdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbcdb));
        // 9B 00CA
        gbc.setState(0xafe4, 0x13b5, 0xd700, 0x53cb, 0x381b, 0xb1d4, 0x1, 0x1);
        gbc.writeMem(0xafe4, { 0x9b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x13b5, gbc.sp());
        EXPECT(0xafe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xafe4));
        // 9B 00CB
        gbc.setState(0x7b0, 0x4f1f, 0xe9b0, 0x40f4, 0x1e01, 0x842, 0x1, 0x1);
        gbc.writeMem(0x7b0, { 0x9b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4f1f, gbc.sp());
        EXPECT(0x7b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00CC
        gbc.setState(0x353a, 0xce3e, 0x3870, 0xb1df, 0x2ab5, 0xd63a, 0x0, 0x1);
        gbc.writeMem(0x353a, { 0x9b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xce3e, gbc.sp());
        EXPECT(0x353b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 00CD
        gbc.setState(0x6d8b, 0xb6f1, 0x9a70, 0xf172, 0x51b2, 0x789c, 0x0, 0x1);
        gbc.writeMem(0x6d8b, { 0x9b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb6f1, gbc.sp());
        EXPECT(0x6d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 00CE
        gbc.setState(0x506f, 0x802a, 0xffc0, 0x53a4, 0xbd04, 0xaa92, 0x0, 0x1);
        gbc.writeMem(0x506f, { 0x9b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x802a, gbc.sp());
        EXPECT(0x5070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00D0
        gbc.setState(0x396a, 0x91f2, 0xea40, 0xfdac, 0x386, 0x1346, 0x1, 0x0);
        gbc.writeMem(0x396a, { 0x9b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x91f2, gbc.sp());
        EXPECT(0x396b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00D1
        gbc.setState(0xe7d5, 0xbfb6, 0x5e70, 0x5734, 0xf362, 0x9a9f, 0x0, 0x0);
        gbc.writeMem(0xe7d5, { 0x9b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbfb6, gbc.sp());
        EXPECT(0xe7d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe7d5));
        // 9B 00D2
        gbc.setState(0x9c29, 0x395e, 0x3090, 0x15e4, 0xdc78, 0xecc4, 0x1, 0x0);
        gbc.writeMem(0x9c29, { 0x9b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x395e, gbc.sp());
        EXPECT(0x9c2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9c29));
        // 9B 00D4
        gbc.setState(0x5127, 0x9e1c, 0xe840, 0x30b6, 0xecd, 0xe4d, 0x1, 0x0);
        gbc.writeMem(0x5127, { 0x9b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9e1c, gbc.sp());
        EXPECT(0x5128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00D6
        gbc.setState(0x2573, 0x8989, 0x45b0, 0x91c3, 0x622b, 0x6096, 0x1, 0x0);
        gbc.writeMem(0x2573, { 0x9b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8989, gbc.sp());
        EXPECT(0x2574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00D7
        gbc.setState(0xa546, 0x5d18, 0x9a30, 0x728a, 0x35ea, 0xdb5c, 0x0, 0x0);
        gbc.writeMem(0xa546, { 0x9b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5d18, gbc.sp());
        EXPECT(0xa547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa546));
        // 9B 00D8
        gbc.setState(0x9019, 0x9f55, 0x28f0, 0xe865, 0x4a55, 0xc6d3, 0x0, 0x1);
        gbc.writeMem(0x9019, { 0x9b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9f55, gbc.sp());
        EXPECT(0x901a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9019));
        // 9B 00D9
        gbc.setState(0x3dc4, 0xaac, 0x19c0, 0x6525, 0xca15, 0x1d5d, 0x0, 0x1);
        gbc.writeMem(0x3dc4, { 0x9b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xaac, gbc.sp());
        EXPECT(0x3dc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00DA
        gbc.setState(0x12ae, 0x5eb, 0x1660, 0x8bc2, 0xe393, 0xddc5, 0x1, 0x1);
        gbc.writeMem(0x12ae, { 0x9b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5eb, gbc.sp());
        EXPECT(0x12af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 00DB
        gbc.setState(0xc2a6, 0x24a2, 0x27d0, 0xdd56, 0x5ea4, 0x4db2, 0x0, 0x1);
        gbc.writeMem(0xc2a6, { 0x9b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x24a2, gbc.sp());
        EXPECT(0xc2a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc2a6));
        // 9B 00DC
        gbc.setState(0x616c, 0x6194, 0x9ae0, 0x6034, 0x4c36, 0xc7c0, 0x0, 0x1);
        gbc.writeMem(0x616c, { 0x9b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6194, gbc.sp());
        EXPECT(0x616d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00DD
        gbc.setState(0x2f4, 0xcd8b, 0x3e40, 0xf6b6, 0xef23, 0x97ff, 0x1, 0x0);
        gbc.writeMem(0x2f4, { 0x9b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xcd8b, gbc.sp());
        EXPECT(0x2f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00DE
        gbc.setState(0x7377, 0x1236, 0x8bb0, 0xcdac, 0xc983, 0x6821, 0x0, 0x1);
        gbc.writeMem(0x7377, { 0x9b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1236, gbc.sp());
        EXPECT(0x7378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00DF
        gbc.setState(0x58cc, 0x24b, 0xf0, 0x78fb, 0x5d46, 0x555b, 0x0, 0x1);
        gbc.writeMem(0x58cc, { 0x9b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x24b, gbc.sp());
        EXPECT(0x58cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 00E0
        gbc.setState(0x7db3, 0x6f, 0x5d30, 0xe27e, 0x8e79, 0xa39e, 0x0, 0x1);
        gbc.writeMem(0x7db3, { 0x9b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6f, gbc.sp());
        EXPECT(0x7db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 00E1
        gbc.setState(0x42ac, 0x32d9, 0x2bb0, 0x338, 0x9507, 0xb95d, 0x0, 0x0);
        gbc.writeMem(0x42ac, { 0x9b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x32d9, gbc.sp());
        EXPECT(0x42ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00E2
        gbc.setState(0x371f, 0xbc1d, 0x7fd0, 0x8125, 0x1239, 0x8dfd, 0x0, 0x0);
        gbc.writeMem(0x371f, { 0x9b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xbc1d, gbc.sp());
        EXPECT(0x3720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00E3
        gbc.setState(0x49ee, 0x3a44, 0x1370, 0x13a3, 0x8e6c, 0x1129, 0x0, 0x1);
        gbc.writeMem(0x49ee, { 0x9b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3a44, gbc.sp());
        EXPECT(0x49ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 00E4
        gbc.setState(0x8668, 0x5e1d, 0x9fb0, 0xe75a, 0x9a40, 0x2e95, 0x1, 0x0);
        gbc.writeMem(0x8668, { 0x9b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5e1d, gbc.sp());
        EXPECT(0x8669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8668));
        // 9B 00E5
        gbc.setState(0x2f16, 0x2cf6, 0x4700, 0xfd50, 0x9ff8, 0x18a3, 0x0, 0x1);
        gbc.writeMem(0x2f16, { 0x9b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2cf6, gbc.sp());
        EXPECT(0x2f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 00E6
        gbc.setState(0xc26a, 0xa56e, 0x9f70, 0x96f2, 0x91da, 0x4fb9, 0x1, 0x0);
        gbc.writeMem(0xc26a, { 0x9b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa56e, gbc.sp());
        EXPECT(0xc26b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc26a));
        // 9B 00E7
        gbc.setState(0x3abf, 0x1ec5, 0xbe70, 0xef1d, 0xeb86, 0x2842, 0x1, 0x0);
        gbc.writeMem(0x3abf, { 0x9b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1ec5, gbc.sp());
        EXPECT(0x3ac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00E9
        gbc.setState(0xa2ca, 0x5933, 0xbee0, 0xd086, 0x85d7, 0x56f3, 0x0, 0x1);
        gbc.writeMem(0xa2ca, { 0x9b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5933, gbc.sp());
        EXPECT(0xa2cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa2ca));
        // 9B 00EA
        gbc.setState(0xea32, 0xcd1e, 0x27c0, 0x94c2, 0x9ea, 0xa10d, 0x1, 0x1);
        gbc.writeMem(0xea32, { 0x9b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcd1e, gbc.sp());
        EXPECT(0xea33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xea32));
        // 9B 00EB
        gbc.setState(0xa64a, 0xf5c8, 0x1130, 0x368b, 0xd006, 0x6b78, 0x1, 0x0);
        gbc.writeMem(0xa64a, { 0x9b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf5c8, gbc.sp());
        EXPECT(0xa64b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa64a));
        // 9B 00EC
        gbc.setState(0x4cf2, 0xefa, 0x6af0, 0xdb88, 0x2cf, 0x9703, 0x1, 0x1);
        gbc.writeMem(0x4cf2, { 0x9b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xefa, gbc.sp());
        EXPECT(0x4cf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 00ED
        gbc.setState(0xe6a8, 0xd0b6, 0x1950, 0x37ea, 0x534d, 0x28c9, 0x1, 0x1);
        gbc.writeMem(0xe6a8, { 0x9b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd0b6, gbc.sp());
        EXPECT(0xe6a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe6a8));
        // 9B 00EE
        gbc.setState(0x174c, 0xb7c8, 0xa8a0, 0x5e6a, 0xdf2b, 0xc07d, 0x0, 0x1);
        gbc.writeMem(0x174c, { 0x9b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb7c8, gbc.sp());
        EXPECT(0x174d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00EF
        gbc.setState(0x1aed, 0x6609, 0x1720, 0xa1b5, 0x4962, 0x8381, 0x0, 0x0);
        gbc.writeMem(0x1aed, { 0x9b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6609, gbc.sp());
        EXPECT(0x1aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 00F0
        gbc.setState(0x3133, 0xe775, 0xe380, 0x1fa, 0x8d69, 0xb5ad, 0x0, 0x1);
        gbc.writeMem(0x3133, { 0x9b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe775, gbc.sp());
        EXPECT(0x3134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00F1
        gbc.setState(0x3f8e, 0x1e98, 0xbaf0, 0xd394, 0x33a8, 0x290c, 0x0, 0x0);
        gbc.writeMem(0x3f8e, { 0x9b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1e98, gbc.sp());
        EXPECT(0x3f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 00F2
        gbc.setState(0x87ce, 0x6d4d, 0x41b0, 0xf48, 0x3b7, 0x479f, 0x0, 0x1);
        gbc.writeMem(0x87ce, { 0x9b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6d4d, gbc.sp());
        EXPECT(0x87cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x87ce));
        // 9B 00F3
        gbc.setState(0x9664, 0xedc7, 0xb190, 0x3a49, 0x664b, 0xfb16, 0x1, 0x1);
        gbc.writeMem(0x9664, { 0x9b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xedc7, gbc.sp());
        EXPECT(0x9665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9664));
        // 9B 00F4
        gbc.setState(0x1e8e, 0xc46e, 0xb4d0, 0x4e81, 0xd9c7, 0xc837, 0x0, 0x0);
        gbc.writeMem(0x1e8e, { 0x9b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc46e, gbc.sp());
        EXPECT(0x1e8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 00F5
        gbc.setState(0x1cc1, 0x9db1, 0x3010, 0xff7f, 0xe35c, 0x2890, 0x0, 0x1);
        gbc.writeMem(0x1cc1, { 0x9b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9db1, gbc.sp());
        EXPECT(0x1cc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 00F6
        gbc.setState(0x8df6, 0xaa6c, 0xfb10, 0xf19a, 0x6289, 0xaa1d, 0x0, 0x0);
        gbc.writeMem(0x8df6, { 0x9b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xaa6c, gbc.sp());
        EXPECT(0x8df7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8df6));
        // 9B 00F7
        gbc.setState(0xb9a0, 0x9ff5, 0xfdf0, 0xc0a7, 0x9dcf, 0x5388, 0x0, 0x1);
        gbc.writeMem(0xb9a0, { 0x9b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9ff5, gbc.sp());
        EXPECT(0xb9a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb9a0));
        // 9B 00F8
        gbc.setState(0x99fc, 0xb93b, 0x9e80, 0x3138, 0xbc48, 0x14f8, 0x0, 0x1);
        gbc.writeMem(0x99fc, { 0x9b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb93b, gbc.sp());
        EXPECT(0x99fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x99fc));
        // 9B 00F9
        gbc.setState(0xde9e, 0x8f7c, 0x7d70, 0xa05a, 0xb37b, 0x39ed, 0x1, 0x1);
        gbc.writeMem(0xde9e, { 0x9b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8f7c, gbc.sp());
        EXPECT(0xde9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xde9e));
        // 9B 00FA
        gbc.setState(0xc440, 0xedfc, 0xc4a0, 0xfbe, 0x4c2a, 0x1230, 0x1, 0x1);
        gbc.writeMem(0xc440, { 0x9b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xedfc, gbc.sp());
        EXPECT(0xc441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc440));
        // 9B 00FC
        gbc.setState(0x3b3e, 0x2e09, 0x4040, 0xdf1a, 0x4fca, 0xea2c, 0x0, 0x0);
        gbc.writeMem(0x3b3e, { 0x9b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2e09, gbc.sp());
        EXPECT(0x3b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 00FD
        gbc.setState(0xd941, 0xa57d, 0xb400, 0xb167, 0xbe43, 0x4ca3, 0x1, 0x1);
        gbc.writeMem(0xd941, { 0x9b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa57d, gbc.sp());
        EXPECT(0xd942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd941));
        // 9B 00FE
        gbc.setState(0xe081, 0x3548, 0x2960, 0x892d, 0x56cb, 0xe343, 0x1, 0x1);
        gbc.writeMem(0xe081, { 0x9b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3548, gbc.sp());
        EXPECT(0xe082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe081));
        // 9B 00FF
        gbc.setState(0xbaba, 0xb398, 0xfc40, 0xe963, 0xbcbb, 0xd2af, 0x1, 0x1);
        gbc.writeMem(0xbaba, { 0x9b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb398, gbc.sp());
        EXPECT(0xbabb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbaba));
        // 9B 0100
        gbc.setState(0xa418, 0x8481, 0xc960, 0x80cf, 0xfb43, 0x99ce, 0x1, 0x1);
        gbc.writeMem(0xa418, { 0x9b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8481, gbc.sp());
        EXPECT(0xa419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa418));
        // 9B 0101
        gbc.setState(0x7ccf, 0x33ed, 0x2a10, 0xddaa, 0x7469, 0x8991, 0x1, 0x1);
        gbc.writeMem(0x7ccf, { 0x9b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x33ed, gbc.sp());
        EXPECT(0x7cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0102
        gbc.setState(0xc8c2, 0x5c46, 0x74a0, 0x33ad, 0x599f, 0x4753, 0x0, 0x0);
        gbc.writeMem(0xc8c2, { 0x9b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5c46, gbc.sp());
        EXPECT(0xc8c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc8c2));
        // 9B 0103
        gbc.setState(0x692d, 0xb48e, 0x8830, 0xffba, 0xd2a2, 0x868, 0x1, 0x1);
        gbc.writeMem(0x692d, { 0x9b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb48e, gbc.sp());
        EXPECT(0x692e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0105
        gbc.setState(0x6f5b, 0x33b1, 0x68e0, 0xc48, 0x6bbd, 0xf2ac, 0x1, 0x1);
        gbc.writeMem(0x6f5b, { 0x9b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x33b1, gbc.sp());
        EXPECT(0x6f5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0107
        gbc.setState(0x6a3a, 0xb54f, 0x2450, 0x4de8, 0xc08a, 0x16d3, 0x1, 0x1);
        gbc.writeMem(0x6a3a, { 0x9b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb54f, gbc.sp());
        EXPECT(0x6a3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0108
        gbc.setState(0x5de3, 0xaf22, 0x2170, 0x2420, 0xe341, 0x26e9, 0x0, 0x0);
        gbc.writeMem(0x5de3, { 0x9b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xaf22, gbc.sp());
        EXPECT(0x5de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0109
        gbc.setState(0xbce7, 0x2f4e, 0x4840, 0xdd24, 0xdbb2, 0x10da, 0x1, 0x1);
        gbc.writeMem(0xbce7, { 0x9b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2f4e, gbc.sp());
        EXPECT(0xbce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbce7));
        // 9B 010A
        gbc.setState(0x4413, 0xc5ee, 0xfed0, 0x892, 0xdf5c, 0x3da1, 0x1, 0x0);
        gbc.writeMem(0x4413, { 0x9b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc5ee, gbc.sp());
        EXPECT(0x4414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 010B
        gbc.setState(0x8668, 0x7a12, 0xd210, 0x9441, 0xbd2e, 0x4a87, 0x0, 0x0);
        gbc.writeMem(0x8668, { 0x9b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7a12, gbc.sp());
        EXPECT(0x8669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8668));
        // 9B 010C
        gbc.setState(0xddae, 0xf7c2, 0x4500, 0x79f4, 0x2e0a, 0x135e, 0x1, 0x1);
        gbc.writeMem(0xddae, { 0x9b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf7c2, gbc.sp());
        EXPECT(0xddaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xddae));
        // 9B 010D
        gbc.setState(0xb17d, 0xe644, 0x3850, 0x8e48, 0xb681, 0x519f, 0x1, 0x1);
        gbc.writeMem(0xb17d, { 0x9b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe644, gbc.sp());
        EXPECT(0xb17e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb17d));
        // 9B 010E
        gbc.setState(0x7373, 0xde71, 0x6e60, 0x4b1, 0x4b8e, 0xf3ac, 0x1, 0x1);
        gbc.writeMem(0x7373, { 0x9b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xde71, gbc.sp());
        EXPECT(0x7374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 010F
        gbc.setState(0xdae2, 0x3ff9, 0x98e0, 0x3b5c, 0x5d1d, 0x2394, 0x1, 0x0);
        gbc.writeMem(0xdae2, { 0x9b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3ff9, gbc.sp());
        EXPECT(0xdae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xdae2));
        // 9B 0110
        gbc.setState(0xaf99, 0x1ffe, 0x3520, 0x396f, 0xfbe0, 0xa592, 0x1, 0x0);
        gbc.writeMem(0xaf99, { 0x9b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1ffe, gbc.sp());
        EXPECT(0xaf9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xaf99));
        // 9B 0111
        gbc.setState(0x7fdb, 0x4586, 0x1eb0, 0x487b, 0xa350, 0x270e, 0x0, 0x1);
        gbc.writeMem(0x7fdb, { 0x9b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4586, gbc.sp());
        EXPECT(0x7fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0112
        gbc.setState(0x8e02, 0xd7fe, 0x9600, 0xb273, 0xa64, 0xfd5f, 0x0, 0x0);
        gbc.writeMem(0x8e02, { 0x9b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd7fe, gbc.sp());
        EXPECT(0x8e03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8e02));
        // 9B 0113
        gbc.setState(0x6889, 0x6f8a, 0x8160, 0xa948, 0x9c45, 0x2d0a, 0x1, 0x1);
        gbc.writeMem(0x6889, { 0x9b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6f8a, gbc.sp());
        EXPECT(0x688a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0114
        gbc.setState(0x2a22, 0xc201, 0x2cb0, 0xd0a5, 0xc74e, 0x4f04, 0x0, 0x0);
        gbc.writeMem(0x2a22, { 0x9b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc201, gbc.sp());
        EXPECT(0x2a23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0116
        gbc.setState(0xc193, 0x758e, 0x5c80, 0x3e2d, 0x1c62, 0x97b0, 0x1, 0x1);
        gbc.writeMem(0xc193, { 0x9b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x758e, gbc.sp());
        EXPECT(0xc194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc193));
        // 9B 0117
        gbc.setState(0x8c55, 0xfc26, 0xa4c0, 0x1ab1, 0x1a18, 0x6f73, 0x1, 0x1);
        gbc.writeMem(0x8c55, { 0x9b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfc26, gbc.sp());
        EXPECT(0x8c56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8c55));
        // 9B 0118
        gbc.setState(0x2397, 0xbc8, 0x5da0, 0xf155, 0x347e, 0xec5a, 0x1, 0x1);
        gbc.writeMem(0x2397, { 0x9b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbc8, gbc.sp());
        EXPECT(0x2398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0119
        gbc.setState(0x4af0, 0xbc6a, 0x1bb0, 0xa741, 0x45a0, 0xa701, 0x1, 0x1);
        gbc.writeMem(0x4af0, { 0x9b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbc6a, gbc.sp());
        EXPECT(0x4af1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 011A
        gbc.setState(0x4080, 0x2440, 0xc8d0, 0x6880, 0x926f, 0x14d3, 0x0, 0x0);
        gbc.writeMem(0x4080, { 0x9b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2440, gbc.sp());
        EXPECT(0x4081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 011B
        gbc.setState(0x124a, 0x24ea, 0xe160, 0x231b, 0x4d9, 0xe46c, 0x1, 0x1);
        gbc.writeMem(0x124a, { 0x9b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x24ea, gbc.sp());
        EXPECT(0x124b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 011C
        gbc.setState(0x5d04, 0x4618, 0xfee0, 0x11a8, 0xf7ad, 0x2e16, 0x1, 0x1);
        gbc.writeMem(0x5d04, { 0x9b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4618, gbc.sp());
        EXPECT(0x5d05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 011D
        gbc.setState(0x674a, 0xd28c, 0x4d80, 0xa174, 0x5e8a, 0x7109, 0x0, 0x1);
        gbc.writeMem(0x674a, { 0x9b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd28c, gbc.sp());
        EXPECT(0x674b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 011E
        gbc.setState(0x98ef, 0x5380, 0x8c40, 0x83b1, 0x4b04, 0xced5, 0x1, 0x1);
        gbc.writeMem(0x98ef, { 0x9b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5380, gbc.sp());
        EXPECT(0x98f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x98ef));
        // 9B 011F
        gbc.setState(0x5ba2, 0x47b, 0x35a0, 0x657d, 0x2a8, 0x90eb, 0x0, 0x1);
        gbc.writeMem(0x5ba2, { 0x9b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x47b, gbc.sp());
        EXPECT(0x5ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0120
        gbc.setState(0xa32b, 0x54ed, 0x3a80, 0x69f5, 0xc34b, 0x7a80, 0x1, 0x1);
        gbc.writeMem(0xa32b, { 0x9b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x54ed, gbc.sp());
        EXPECT(0xa32c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa32b));
        // 9B 0121
        gbc.setState(0x4b83, 0x4d0, 0xc380, 0x3be8, 0x288d, 0x957d, 0x1, 0x0);
        gbc.writeMem(0x4b83, { 0x9b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4d0, gbc.sp());
        EXPECT(0x4b84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0122
        gbc.setState(0x4a25, 0x11f6, 0xfc60, 0xfbef, 0x6205, 0x9ae7, 0x1, 0x0);
        gbc.writeMem(0x4a25, { 0x9b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x11f6, gbc.sp());
        EXPECT(0x4a26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0123
        gbc.setState(0xe09, 0xa6fc, 0x57e0, 0x4a23, 0x3148, 0xccf9, 0x1, 0x1);
        gbc.writeMem(0xe09, { 0x9b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa6fc, gbc.sp());
        EXPECT(0xe0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0124
        gbc.setState(0x7a7e, 0xeef6, 0xe5f0, 0x2792, 0x1047, 0x4629, 0x1, 0x1);
        gbc.writeMem(0x7a7e, { 0x9b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xeef6, gbc.sp());
        EXPECT(0x7a7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0125
        gbc.setState(0x2b10, 0xf55e, 0x7da0, 0x6817, 0x884a, 0x5eda, 0x1, 0x0);
        gbc.writeMem(0x2b10, { 0x9b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf55e, gbc.sp());
        EXPECT(0x2b11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0126
        gbc.setState(0x687b, 0x3058, 0x9af0, 0x4117, 0xfd, 0x2208, 0x0, 0x0);
        gbc.writeMem(0x687b, { 0x9b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3058, gbc.sp());
        EXPECT(0x687c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0127
        gbc.setState(0x1d67, 0xc364, 0xdb60, 0x23b0, 0x8e77, 0xb722, 0x1, 0x1);
        gbc.writeMem(0x1d67, { 0x9b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc364, gbc.sp());
        EXPECT(0x1d68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0128
        gbc.setState(0xeff0, 0x9cd8, 0xdf50, 0x4d9e, 0x25bd, 0x506, 0x1, 0x0);
        gbc.writeMem(0xeff0, { 0x9b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9cd8, gbc.sp());
        EXPECT(0xeff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xeff0));
        // 9B 0129
        gbc.setState(0x4aa0, 0x45e9, 0xc8d0, 0xec8c, 0x6720, 0xf3f, 0x1, 0x0);
        gbc.writeMem(0x4aa0, { 0x9b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x45e9, gbc.sp());
        EXPECT(0x4aa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 012A
        gbc.setState(0x97, 0x995b, 0xaef0, 0x94d6, 0x8d38, 0x139, 0x0, 0x0);
        gbc.writeMem(0x97, { 0x9b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x995b, gbc.sp());
        EXPECT(0x98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 012B
        gbc.setState(0xccf6, 0xaf3e, 0x16c0, 0xb155, 0x79f1, 0xba22, 0x1, 0x1);
        gbc.writeMem(0xccf6, { 0x9b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xaf3e, gbc.sp());
        EXPECT(0xccf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xccf6));
        // 9B 012C
        gbc.setState(0x1ad9, 0xb4a2, 0xc8e0, 0x4698, 0x9f09, 0x348d, 0x1, 0x0);
        gbc.writeMem(0x1ad9, { 0x9b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb4a2, gbc.sp());
        EXPECT(0x1ada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 012D
        gbc.setState(0x940f, 0x3bb2, 0xba00, 0xc789, 0xa327, 0xfd70, 0x1, 0x0);
        gbc.writeMem(0x940f, { 0x9b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3bb2, gbc.sp());
        EXPECT(0x9410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x940f));
        // 9B 012E
        gbc.setState(0x2c9a, 0x3ada, 0xd840, 0x3bb2, 0xb0e4, 0xb674, 0x0, 0x1);
        gbc.writeMem(0x2c9a, { 0x9b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3ada, gbc.sp());
        EXPECT(0x2c9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 012F
        gbc.setState(0xd19a, 0xe67d, 0xa7d0, 0x8970, 0x11ed, 0xdbe7, 0x0, 0x0);
        gbc.writeMem(0xd19a, { 0x9b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe67d, gbc.sp());
        EXPECT(0xd19b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd19a));
        // 9B 0130
        gbc.setState(0x2458, 0xe19e, 0xa2c0, 0x348, 0x9c70, 0x671b, 0x1, 0x1);
        gbc.writeMem(0x2458, { 0x9b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe19e, gbc.sp());
        EXPECT(0x2459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0131
        gbc.setState(0xae4b, 0xf4d9, 0x8ec0, 0xc44, 0x7296, 0xdaab, 0x1, 0x0);
        gbc.writeMem(0xae4b, { 0x9b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf4d9, gbc.sp());
        EXPECT(0xae4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xae4b));
        // 9B 0133
        gbc.setState(0x1bfb, 0x7977, 0x1e50, 0x6f24, 0xca29, 0xb7f3, 0x1, 0x0);
        gbc.writeMem(0x1bfb, { 0x9b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7977, gbc.sp());
        EXPECT(0x1bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0134
        gbc.setState(0xae9c, 0x84bd, 0xb770, 0xb88c, 0xfc5c, 0x6f3d, 0x0, 0x0);
        gbc.writeMem(0xae9c, { 0x9b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x84bd, gbc.sp());
        EXPECT(0xae9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xae9c));
        // 9B 0135
        gbc.setState(0x3c0f, 0xb9d8, 0xf90, 0x51a6, 0x63e8, 0xec09, 0x0, 0x0);
        gbc.writeMem(0x3c0f, { 0x9b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb9d8, gbc.sp());
        EXPECT(0x3c10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0136
        gbc.setState(0xd16b, 0xd244, 0x19c0, 0x70c0, 0xe38f, 0x7b73, 0x1, 0x1);
        gbc.writeMem(0xd16b, { 0x9b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd244, gbc.sp());
        EXPECT(0xd16c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd16b));
        // 9B 0137
        gbc.setState(0xba57, 0xd96a, 0xcfd0, 0xab0d, 0x786e, 0x8569, 0x0, 0x1);
        gbc.writeMem(0xba57, { 0x9b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd96a, gbc.sp());
        EXPECT(0xba58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xba57));
        // 9B 0138
        gbc.setState(0x2ce7, 0xb26a, 0x26d0, 0xa9f3, 0x3836, 0x6fb8, 0x1, 0x1);
        gbc.writeMem(0x2ce7, { 0x9b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb26a, gbc.sp());
        EXPECT(0x2ce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0139
        gbc.setState(0x5b5a, 0xf6f6, 0xdc40, 0x8e57, 0xb2ce, 0xaada, 0x1, 0x0);
        gbc.writeMem(0x5b5a, { 0x9b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf6f6, gbc.sp());
        EXPECT(0x5b5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 013A
        gbc.setState(0x550e, 0xcb6a, 0xd380, 0xe198, 0xe37e, 0x1005, 0x0, 0x0);
        gbc.writeMem(0x550e, { 0x9b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xcb6a, gbc.sp());
        EXPECT(0x550f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 013B
        gbc.setState(0x9f08, 0x27a3, 0x2b50, 0x860b, 0xba45, 0x8788, 0x1, 0x1);
        gbc.writeMem(0x9f08, { 0x9b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x27a3, gbc.sp());
        EXPECT(0x9f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9f08));
        // 9B 013C
        gbc.setState(0x110e, 0x7d0d, 0x5950, 0x81f1, 0x3795, 0x4467, 0x0, 0x1);
        gbc.writeMem(0x110e, { 0x9b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7d0d, gbc.sp());
        EXPECT(0x110f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 013E
        gbc.setState(0x3d18, 0xf8dc, 0xd650, 0x6a4a, 0x1a45, 0xca0b, 0x1, 0x1);
        gbc.writeMem(0x3d18, { 0x9b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf8dc, gbc.sp());
        EXPECT(0x3d19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 013F
        gbc.setState(0x4875, 0x90a4, 0xc6a0, 0xb603, 0x73f1, 0xdfdd, 0x1, 0x1);
        gbc.writeMem(0x4875, { 0x9b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x90a4, gbc.sp());
        EXPECT(0x4876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0140
        gbc.setState(0x7f67, 0xe879, 0xcda0, 0x8eea, 0x265e, 0x6ab1, 0x1, 0x0);
        gbc.writeMem(0x7f67, { 0x9b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe879, gbc.sp());
        EXPECT(0x7f68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0141
        gbc.setState(0xba41, 0xc7ef, 0x3850, 0x13c0, 0x2e04, 0xa067, 0x1, 0x0);
        gbc.writeMem(0xba41, { 0x9b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc7ef, gbc.sp());
        EXPECT(0xba42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xba41));
        // 9B 0142
        gbc.setState(0x4f00, 0x17ca, 0x5200, 0x7966, 0xce34, 0x82ff, 0x0, 0x0);
        gbc.writeMem(0x4f00, { 0x9b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x17ca, gbc.sp());
        EXPECT(0x4f01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0143
        gbc.setState(0x1710, 0x6186, 0x3020, 0x34c3, 0x1c, 0x2873, 0x0, 0x1);
        gbc.writeMem(0x1710, { 0x9b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6186, gbc.sp());
        EXPECT(0x1711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0144
        gbc.setState(0x1541, 0x1bcf, 0x44a0, 0x208f, 0x1e2c, 0xa30a, 0x0, 0x0);
        gbc.writeMem(0x1541, { 0x9b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1bcf, gbc.sp());
        EXPECT(0x1542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0145
        gbc.setState(0x55ae, 0xd229, 0x2430, 0x6f89, 0xb0d2, 0x4bc2, 0x1, 0x1);
        gbc.writeMem(0x55ae, { 0x9b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd229, gbc.sp());
        EXPECT(0x55af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0146
        gbc.setState(0xa826, 0x1628, 0x1db0, 0x54c0, 0x80d0, 0x433b, 0x0, 0x0);
        gbc.writeMem(0xa826, { 0x9b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1628, gbc.sp());
        EXPECT(0xa827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa826));
        // 9B 0147
        gbc.setState(0x4ab8, 0xbc6, 0xfba0, 0x52f8, 0x26ea, 0x7879, 0x0, 0x0);
        gbc.writeMem(0x4ab8, { 0x9b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbc6, gbc.sp());
        EXPECT(0x4ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0148
        gbc.setState(0x9892, 0x8c64, 0xf860, 0x999b, 0x5fec, 0xaf20, 0x0, 0x0);
        gbc.writeMem(0x9892, { 0x9b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8c64, gbc.sp());
        EXPECT(0x9893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9892));
        // 9B 0149
        gbc.setState(0xbe80, 0x4408, 0xd1f0, 0x8ae8, 0xce1a, 0xd41a, 0x0, 0x0);
        gbc.writeMem(0xbe80, { 0x9b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4408, gbc.sp());
        EXPECT(0xbe81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbe80));
        // 9B 014A
        gbc.setState(0xd5e6, 0xe805, 0xe000, 0xfaac, 0x2725, 0x5c0a, 0x0, 0x1);
        gbc.writeMem(0xd5e6, { 0x9b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe805, gbc.sp());
        EXPECT(0xd5e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd5e6));
        // 9B 014B
        gbc.setState(0x64d1, 0x7dd, 0xde10, 0x2066, 0x5ee2, 0x6dbd, 0x1, 0x1);
        gbc.writeMem(0x64d1, { 0x9b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7dd, gbc.sp());
        EXPECT(0x64d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 014C
        gbc.setState(0x6e94, 0x7d70, 0x7660, 0xc774, 0x63ba, 0x15d0, 0x1, 0x0);
        gbc.writeMem(0x6e94, { 0x9b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7d70, gbc.sp());
        EXPECT(0x6e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 014D
        gbc.setState(0xbd20, 0x3196, 0x8f00, 0xfd27, 0x619b, 0x6055, 0x1, 0x0);
        gbc.writeMem(0xbd20, { 0x9b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3196, gbc.sp());
        EXPECT(0xbd21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbd20));
        // 9B 014E
        gbc.setState(0xb7ce, 0x8541, 0x7670, 0xf6a4, 0xde99, 0xd0a6, 0x0, 0x1);
        gbc.writeMem(0xb7ce, { 0x9b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8541, gbc.sp());
        EXPECT(0xb7cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb7ce));
        // 9B 0150
        gbc.setState(0x8cbb, 0x967f, 0x2670, 0x552b, 0x13eb, 0x57c4, 0x0, 0x1);
        gbc.writeMem(0x8cbb, { 0x9b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x967f, gbc.sp());
        EXPECT(0x8cbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8cbb));
        // 9B 0151
        gbc.setState(0xde83, 0xeba, 0x64c0, 0xa5a, 0x2b3d, 0x85c7, 0x1, 0x0);
        gbc.writeMem(0xde83, { 0x9b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xeba, gbc.sp());
        EXPECT(0xde84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xde83));
        // 9B 0152
        gbc.setState(0x6810, 0x94af, 0xbd90, 0xe5dd, 0xbfc2, 0xe296, 0x1, 0x1);
        gbc.writeMem(0x6810, { 0x9b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x94af, gbc.sp());
        EXPECT(0x6811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0153
        gbc.setState(0xd1b7, 0x8604, 0x34b0, 0x928, 0xd142, 0x679a, 0x1, 0x1);
        gbc.writeMem(0xd1b7, { 0x9b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8604, gbc.sp());
        EXPECT(0xd1b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd1b7));
        // 9B 0154
        gbc.setState(0xcab0, 0xa897, 0xfbc0, 0xa5fb, 0xd29b, 0xdaaf, 0x1, 0x1);
        gbc.writeMem(0xcab0, { 0x9b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa897, gbc.sp());
        EXPECT(0xcab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xcab0));
        // 9B 0155
        gbc.setState(0x42ab, 0xbe9d, 0x1f10, 0x25ea, 0xf699, 0xaed6, 0x0, 0x1);
        gbc.writeMem(0x42ab, { 0x9b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xbe9d, gbc.sp());
        EXPECT(0x42ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0156
        gbc.setState(0x4d4e, 0xa64e, 0x5b70, 0x2fc2, 0x19b9, 0x673d, 0x1, 0x0);
        gbc.writeMem(0x4d4e, { 0x9b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa64e, gbc.sp());
        EXPECT(0x4d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0157
        gbc.setState(0x5e04, 0x4361, 0xdf80, 0xad6d, 0x37e8, 0x748e, 0x1, 0x0);
        gbc.writeMem(0x5e04, { 0x9b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4361, gbc.sp());
        EXPECT(0x5e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0158
        gbc.setState(0xa7c3, 0x1d7f, 0x5d0, 0x9d3a, 0xa223, 0x5fa0, 0x1, 0x0);
        gbc.writeMem(0xa7c3, { 0x9b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1d7f, gbc.sp());
        EXPECT(0xa7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa7c3));
        // 9B 0159
        gbc.setState(0x77b0, 0xd1a4, 0x44a0, 0x593a, 0x193e, 0x1748, 0x0, 0x0);
        gbc.writeMem(0x77b0, { 0x9b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd1a4, gbc.sp());
        EXPECT(0x77b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 015B
        gbc.setState(0x7b61, 0xebdb, 0x86e0, 0xcbf9, 0x4bf7, 0x2df2, 0x1, 0x0);
        gbc.writeMem(0x7b61, { 0x9b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xebdb, gbc.sp());
        EXPECT(0x7b62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 015C
        gbc.setState(0x87f5, 0xb828, 0x2060, 0xee6d, 0x5583, 0x8fb9, 0x0, 0x1);
        gbc.writeMem(0x87f5, { 0x9b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb828, gbc.sp());
        EXPECT(0x87f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x87f5));
        // 9B 015D
        gbc.setState(0x9335, 0xafe5, 0x7c40, 0x5edd, 0xee77, 0x6e74, 0x1, 0x0);
        gbc.writeMem(0x9335, { 0x9b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xafe5, gbc.sp());
        EXPECT(0x9336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9335));
        // 9B 015E
        gbc.setState(0x1988, 0xa319, 0xd1f0, 0xb2ea, 0x5d70, 0x7217, 0x0, 0x1);
        gbc.writeMem(0x1988, { 0x9b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa319, gbc.sp());
        EXPECT(0x1989, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 015F
        gbc.setState(0x35da, 0xf476, 0xc470, 0x4be6, 0xe96f, 0xbc67, 0x0, 0x1);
        gbc.writeMem(0x35da, { 0x9b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf476, gbc.sp());
        EXPECT(0x35db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0160
        gbc.setState(0xecb8, 0x23f8, 0xb960, 0x62cc, 0x8be1, 0x5e1c, 0x1, 0x0);
        gbc.writeMem(0xecb8, { 0x9b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x23f8, gbc.sp());
        EXPECT(0xecb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xecb8));
        // 9B 0161
        gbc.setState(0x8e7c, 0x77fa, 0xec00, 0xcaba, 0xe686, 0xac05, 0x0, 0x1);
        gbc.writeMem(0x8e7c, { 0x9b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x77fa, gbc.sp());
        EXPECT(0x8e7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8e7c));
        // 9B 0162
        gbc.setState(0xaa6a, 0xebc2, 0x4a0, 0x6809, 0x842f, 0x8d2c, 0x0, 0x0);
        gbc.writeMem(0xaa6a, { 0x9b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xebc2, gbc.sp());
        EXPECT(0xaa6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xaa6a));
        // 9B 0163
        gbc.setState(0x2c76, 0x9640, 0xe330, 0x2f96, 0x58f5, 0x1ebb, 0x0, 0x0);
        gbc.writeMem(0x2c76, { 0x9b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9640, gbc.sp());
        EXPECT(0x2c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0164
        gbc.setState(0x2caf, 0x51bd, 0xf350, 0x8ea0, 0x822c, 0x7f2b, 0x0, 0x1);
        gbc.writeMem(0x2caf, { 0x9b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x51bd, gbc.sp());
        EXPECT(0x2cb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0165
        gbc.setState(0x966f, 0xcec8, 0xfa60, 0xd141, 0xda06, 0x468f, 0x1, 0x1);
        gbc.writeMem(0x966f, { 0x9b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xcec8, gbc.sp());
        EXPECT(0x9670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x966f));
        // 9B 0166
        gbc.setState(0x40ae, 0xe55b, 0x2d50, 0xde26, 0x4145, 0x3e11, 0x0, 0x0);
        gbc.writeMem(0x40ae, { 0x9b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe55b, gbc.sp());
        EXPECT(0x40af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0167
        gbc.setState(0x2e75, 0x908c, 0xda60, 0x9c89, 0x1843, 0x2e1c, 0x1, 0x1);
        gbc.writeMem(0x2e75, { 0x9b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x908c, gbc.sp());
        EXPECT(0x2e76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0168
        gbc.setState(0x6d48, 0x1a7d, 0xb410, 0xab57, 0xf438, 0x7188, 0x1, 0x0);
        gbc.writeMem(0x6d48, { 0x9b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1a7d, gbc.sp());
        EXPECT(0x6d49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0169
        gbc.setState(0x5c84, 0xe256, 0x1d50, 0x6275, 0x19f7, 0x27dd, 0x1, 0x0);
        gbc.writeMem(0x5c84, { 0x9b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe256, gbc.sp());
        EXPECT(0x5c85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 016A
        gbc.setState(0x109, 0x9368, 0x5120, 0x582b, 0xa1c1, 0x51cb, 0x1, 0x1);
        gbc.writeMem(0x109, { 0x9b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9368, gbc.sp());
        EXPECT(0x10a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 016B
        gbc.setState(0x70d9, 0x1db2, 0x5a90, 0x3ad5, 0x5e9d, 0x184, 0x1, 0x1);
        gbc.writeMem(0x70d9, { 0x9b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1db2, gbc.sp());
        EXPECT(0x70da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 016C
        gbc.setState(0xe674, 0xa82e, 0x7a90, 0x7765, 0xed49, 0x3c5e, 0x1, 0x0);
        gbc.writeMem(0xe674, { 0x9b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa82e, gbc.sp());
        EXPECT(0xe675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe674));
        // 9B 016D
        gbc.setState(0xb62e, 0x58fb, 0x700, 0x1bf1, 0xcf9c, 0xa830, 0x1, 0x0);
        gbc.writeMem(0xb62e, { 0x9b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x58fb, gbc.sp());
        EXPECT(0xb62f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb62e));
        // 9B 016E
        gbc.setState(0x9809, 0xd2f9, 0xfe50, 0x331d, 0xa6c1, 0x5936, 0x1, 0x1);
        gbc.writeMem(0x9809, { 0x9b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd2f9, gbc.sp());
        EXPECT(0x980a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9809));
        // 9B 0170
        gbc.setState(0x5af5, 0x6f2, 0x5dd0, 0x3a66, 0x860b, 0x7f99, 0x1, 0x0);
        gbc.writeMem(0x5af5, { 0x9b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6f2, gbc.sp());
        EXPECT(0x5af6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0171
        gbc.setState(0xad70, 0x3ad3, 0x4050, 0x1518, 0xcf6a, 0xa489, 0x0, 0x1);
        gbc.writeMem(0xad70, { 0x9b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3ad3, gbc.sp());
        EXPECT(0xad71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xad70));
        // 9B 0172
        gbc.setState(0xb5d9, 0x8461, 0x1530, 0x1ff, 0x6891, 0x2eb2, 0x1, 0x0);
        gbc.writeMem(0xb5d9, { 0x9b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8461, gbc.sp());
        EXPECT(0xb5da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb5d9));
        // 9B 0173
        gbc.setState(0x9e9e, 0x20d1, 0xac40, 0x3a4, 0x4b7b, 0x60d7, 0x0, 0x0);
        gbc.writeMem(0x9e9e, { 0x9b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x20d1, gbc.sp());
        EXPECT(0x9e9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9e9e));
        // 9B 0174
        gbc.setState(0xb933, 0xaf1e, 0x7c30, 0xc768, 0x1d46, 0x2a02, 0x0, 0x1);
        gbc.writeMem(0xb933, { 0x9b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xaf1e, gbc.sp());
        EXPECT(0xb934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb933));
        // 9B 0175
        gbc.setState(0x2357, 0x4741, 0x2b50, 0xfe21, 0xefff, 0x4338, 0x1, 0x0);
        gbc.writeMem(0x2357, { 0x9b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4741, gbc.sp());
        EXPECT(0x2358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0176
        gbc.setState(0x4557, 0x647d, 0x8bd0, 0x49c, 0x9796, 0x2cad, 0x1, 0x0);
        gbc.writeMem(0x4557, { 0x9b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x647d, gbc.sp());
        EXPECT(0x4558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0177
        gbc.setState(0x7175, 0x2810, 0xb730, 0xc25d, 0x246f, 0x5841, 0x1, 0x1);
        gbc.writeMem(0x7175, { 0x9b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2810, gbc.sp());
        EXPECT(0x7176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0178
        gbc.setState(0xb333, 0x3b11, 0xb380, 0x4f92, 0x22fc, 0x711d, 0x0, 0x1);
        gbc.writeMem(0xb333, { 0x9b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3b11, gbc.sp());
        EXPECT(0xb334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb333));
        // 9B 0179
        gbc.setState(0xa153, 0xed8c, 0xc610, 0xd44c, 0x4167, 0x18a6, 0x1, 0x0);
        gbc.writeMem(0xa153, { 0x9b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xed8c, gbc.sp());
        EXPECT(0xa154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa153));
        // 9B 017A
        gbc.setState(0xc76b, 0x9888, 0x6ff0, 0x54aa, 0x7690, 0x12be, 0x1, 0x0);
        gbc.writeMem(0xc76b, { 0x9b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9888, gbc.sp());
        EXPECT(0xc76c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc76b));
        // 9B 017B
        gbc.setState(0xd285, 0xa4a6, 0xe7f0, 0x97d7, 0x6698, 0x5db5, 0x0, 0x0);
        gbc.writeMem(0xd285, { 0x9b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa4a6, gbc.sp());
        EXPECT(0xd286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd285));
        // 9B 017C
        gbc.setState(0xae41, 0x2811, 0x5360, 0xe4db, 0x7aab, 0xe70e, 0x1, 0x0);
        gbc.writeMem(0xae41, { 0x9b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2811, gbc.sp());
        EXPECT(0xae42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xae41));
        // 9B 017E
        gbc.setState(0x118, 0xb372, 0x76e0, 0x13bb, 0xf554, 0xd7b5, 0x0, 0x1);
        gbc.writeMem(0x118, { 0x9b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb372, gbc.sp());
        EXPECT(0x119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 017F
        gbc.setState(0x8369, 0x2bdf, 0xcf60, 0xfcd8, 0xbb54, 0x7a6e, 0x0, 0x0);
        gbc.writeMem(0x8369, { 0x9b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2bdf, gbc.sp());
        EXPECT(0x836a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8369));
        // 9B 0180
        gbc.setState(0x51c1, 0x1065, 0xa380, 0x4f69, 0xc96e, 0xeb2a, 0x0, 0x0);
        gbc.writeMem(0x51c1, { 0x9b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1065, gbc.sp());
        EXPECT(0x51c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0181
        gbc.setState(0x4ccc, 0x135e, 0xb250, 0x6ca6, 0x8808, 0x940a, 0x1, 0x1);
        gbc.writeMem(0x4ccc, { 0x9b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x135e, gbc.sp());
        EXPECT(0x4ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0182
        gbc.setState(0xcc99, 0x1b20, 0x6b10, 0xd580, 0xaca4, 0xdc82, 0x0, 0x0);
        gbc.writeMem(0xcc99, { 0x9b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1b20, gbc.sp());
        EXPECT(0xcc9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xcc99));
        // 9B 0183
        gbc.setState(0x7a22, 0xc9bb, 0x15a0, 0x872b, 0x5ca1, 0xe15a, 0x1, 0x0);
        gbc.writeMem(0x7a22, { 0x9b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc9bb, gbc.sp());
        EXPECT(0x7a23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0184
        gbc.setState(0x5cca, 0xaa2, 0x4aa0, 0xc212, 0xa91d, 0xe299, 0x1, 0x1);
        gbc.writeMem(0x5cca, { 0x9b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xaa2, gbc.sp());
        EXPECT(0x5ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0185
        gbc.setState(0xc24d, 0x7fd4, 0xd3b0, 0x9198, 0x6946, 0x3cb3, 0x1, 0x1);
        gbc.writeMem(0xc24d, { 0x9b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7fd4, gbc.sp());
        EXPECT(0xc24e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc24d));
        // 9B 0186
        gbc.setState(0x8263, 0x7369, 0xa8b0, 0x1cc7, 0xda6d, 0x1b15, 0x0, 0x0);
        gbc.writeMem(0x8263, { 0x9b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7369, gbc.sp());
        EXPECT(0x8264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8263));
        // 9B 0187
        gbc.setState(0xb733, 0x2689, 0x6250, 0x7a24, 0x4ff6, 0xedef, 0x1, 0x0);
        gbc.writeMem(0xb733, { 0x9b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2689, gbc.sp());
        EXPECT(0xb734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb733));
        // 9B 0188
        gbc.setState(0x8e64, 0x39da, 0xbef0, 0xbfbe, 0xcfe0, 0x31e7, 0x1, 0x1);
        gbc.writeMem(0x8e64, { 0x9b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x39da, gbc.sp());
        EXPECT(0x8e65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8e64));
        // 9B 0189
        gbc.setState(0xb07a, 0x1b4e, 0xae20, 0x6a76, 0xae15, 0xd31f, 0x0, 0x1);
        gbc.writeMem(0xb07a, { 0x9b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1b4e, gbc.sp());
        EXPECT(0xb07b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb07a));
        // 9B 018A
        gbc.setState(0xa6f8, 0xdc2b, 0x8670, 0x6bfc, 0xe816, 0xdb9d, 0x1, 0x0);
        gbc.writeMem(0xa6f8, { 0x9b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xdc2b, gbc.sp());
        EXPECT(0xa6f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa6f8));
        // 9B 018C
        gbc.setState(0xb890, 0xc92a, 0xa160, 0xa42c, 0xf372, 0x5c2, 0x1, 0x0);
        gbc.writeMem(0xb890, { 0x9b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc92a, gbc.sp());
        EXPECT(0xb891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb890));
        // 9B 018D
        gbc.setState(0x740a, 0x3188, 0x7af0, 0x53c2, 0xf6ec, 0x56cb, 0x1, 0x0);
        gbc.writeMem(0x740a, { 0x9b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3188, gbc.sp());
        EXPECT(0x740b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 018E
        gbc.setState(0x26b6, 0x4f33, 0xbfa0, 0xed99, 0xb682, 0xc537, 0x0, 0x0);
        gbc.writeMem(0x26b6, { 0x9b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4f33, gbc.sp());
        EXPECT(0x26b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 018F
        gbc.setState(0x5b6a, 0xd3e7, 0xa180, 0x7f1d, 0xa3e8, 0x40fe, 0x1, 0x1);
        gbc.writeMem(0x5b6a, { 0x9b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd3e7, gbc.sp());
        EXPECT(0x5b6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0190
        gbc.setState(0x142a, 0xdda6, 0xaad0, 0x594b, 0xc11f, 0xb0e3, 0x1, 0x0);
        gbc.writeMem(0x142a, { 0x9b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xdda6, gbc.sp());
        EXPECT(0x142b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0191
        gbc.setState(0x75b5, 0x9106, 0xcef0, 0xb809, 0x5c23, 0xbf5b, 0x0, 0x1);
        gbc.writeMem(0x75b5, { 0x9b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9106, gbc.sp());
        EXPECT(0x75b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0192
        gbc.setState(0xed50, 0x2db6, 0x70d0, 0x2fb4, 0xf550, 0xbf00, 0x1, 0x1);
        gbc.writeMem(0xed50, { 0x9b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2db6, gbc.sp());
        EXPECT(0xed51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xed50));
        // 9B 0193
        gbc.setState(0x8ae1, 0x5b86, 0x1130, 0x3b15, 0xa761, 0x753a, 0x0, 0x0);
        gbc.writeMem(0x8ae1, { 0x9b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5b86, gbc.sp());
        EXPECT(0x8ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8ae1));
        // 9B 0194
        gbc.setState(0xa7cc, 0x580d, 0xdd90, 0xd1e3, 0x578, 0x9aab, 0x1, 0x0);
        gbc.writeMem(0xa7cc, { 0x9b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x580d, gbc.sp());
        EXPECT(0xa7cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa7cc));
        // 9B 0195
        gbc.setState(0x6a38, 0x726a, 0xa0d0, 0xea3e, 0x331e, 0x6a19, 0x1, 0x0);
        gbc.writeMem(0x6a38, { 0x9b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x726a, gbc.sp());
        EXPECT(0x6a39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0196
        gbc.setState(0x702a, 0x8e03, 0xd050, 0xdf4, 0x2f01, 0x3bb, 0x0, 0x0);
        gbc.writeMem(0x702a, { 0x9b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8e03, gbc.sp());
        EXPECT(0x702b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0197
        gbc.setState(0x8594, 0x62fa, 0xc8e0, 0x3e09, 0xaee8, 0x4ce7, 0x0, 0x1);
        gbc.writeMem(0x8594, { 0x9b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x62fa, gbc.sp());
        EXPECT(0x8595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8594));
        // 9B 0198
        gbc.setState(0xb0bc, 0xc9be, 0xceb0, 0x4f75, 0x1ebf, 0x6bca, 0x1, 0x1);
        gbc.writeMem(0xb0bc, { 0x9b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc9be, gbc.sp());
        EXPECT(0xb0bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb0bc));
        // 9B 0199
        gbc.setState(0xd661, 0x8c98, 0xc360, 0x641f, 0xa8b, 0x4187, 0x1, 0x0);
        gbc.writeMem(0xd661, { 0x9b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8c98, gbc.sp());
        EXPECT(0xd662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd661));
        // 9B 019A
        gbc.setState(0x98ec, 0xd27, 0x6250, 0x58a7, 0x95dc, 0xe591, 0x1, 0x0);
        gbc.writeMem(0x98ec, { 0x9b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd27, gbc.sp());
        EXPECT(0x98ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x98ec));
        // 9B 019B
        gbc.setState(0xcc55, 0x8cca, 0x2fd0, 0x3705, 0xccb5, 0xca83, 0x0, 0x0);
        gbc.writeMem(0xcc55, { 0x9b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8cca, gbc.sp());
        EXPECT(0xcc56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xcc55));
        // 9B 019C
        gbc.setState(0xe4cd, 0xb2c9, 0x1060, 0x8120, 0x5bfd, 0x1b58, 0x1, 0x0);
        gbc.writeMem(0xe4cd, { 0x9b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb2c9, gbc.sp());
        EXPECT(0xe4ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe4cd));
        // 9B 019D
        gbc.setState(0xa74a, 0x681a, 0x920, 0x9941, 0xbb9b, 0x6780, 0x0, 0x0);
        gbc.writeMem(0xa74a, { 0x9b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x681a, gbc.sp());
        EXPECT(0xa74b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa74a));
        // 9B 019E
        gbc.setState(0x7d22, 0xe5fb, 0x23d0, 0x28b9, 0x4faf, 0xaed1, 0x0, 0x1);
        gbc.writeMem(0x7d22, { 0x9b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe5fb, gbc.sp());
        EXPECT(0x7d23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 019F
        gbc.setState(0x510f, 0x1601, 0x7250, 0x51d4, 0x3dc6, 0x524b, 0x1, 0x0);
        gbc.writeMem(0x510f, { 0x9b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1601, gbc.sp());
        EXPECT(0x5110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 01A0
        gbc.setState(0x35a5, 0xccca, 0x620, 0xa69a, 0x6262, 0xe80c, 0x0, 0x0);
        gbc.writeMem(0x35a5, { 0x9b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xccca, gbc.sp());
        EXPECT(0x35a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 01A1
        gbc.setState(0x44cd, 0xa896, 0x9280, 0x97b2, 0xd06a, 0x8679, 0x0, 0x0);
        gbc.writeMem(0x44cd, { 0x9b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa896, gbc.sp());
        EXPECT(0x44ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01A2
        gbc.setState(0x322c, 0xb9d0, 0x7f80, 0x35cf, 0x790a, 0xf683, 0x1, 0x1);
        gbc.writeMem(0x322c, { 0x9b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb9d0, gbc.sp());
        EXPECT(0x322d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01A3
        gbc.setState(0x6f0e, 0xce6f, 0x9190, 0x6d93, 0x3b58, 0xf56, 0x1, 0x1);
        gbc.writeMem(0x6f0e, { 0x9b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xce6f, gbc.sp());
        EXPECT(0x6f0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01A4
        gbc.setState(0x4e67, 0xd5b0, 0xd320, 0x42fd, 0xa8d, 0x51d0, 0x0, 0x1);
        gbc.writeMem(0x4e67, { 0x9b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd5b0, gbc.sp());
        EXPECT(0x4e68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01A5
        gbc.setState(0x584d, 0x4734, 0xbaa0, 0x3d92, 0x2170, 0xa722, 0x0, 0x1);
        gbc.writeMem(0x584d, { 0x9b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4734, gbc.sp());
        EXPECT(0x584e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01A6
        gbc.setState(0x2749, 0xaece, 0x4e20, 0x1470, 0x907a, 0x960, 0x1, 0x1);
        gbc.writeMem(0x2749, { 0x9b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xaece, gbc.sp());
        EXPECT(0x274a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 01A7
        gbc.setState(0xc483, 0x3662, 0xc90, 0x46b5, 0x1766, 0x132, 0x1, 0x1);
        gbc.writeMem(0xc483, { 0x9b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3662, gbc.sp());
        EXPECT(0xc484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc483));
        // 9B 01A8
        gbc.setState(0xa27a, 0xa487, 0x32e0, 0xed88, 0x98b6, 0x7f6b, 0x1, 0x1);
        gbc.writeMem(0xa27a, { 0x9b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa487, gbc.sp());
        EXPECT(0xa27b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa27a));
        // 9B 01A9
        gbc.setState(0xa8e4, 0xc252, 0xc0b0, 0xf1, 0x6230, 0x3f04, 0x1, 0x0);
        gbc.writeMem(0xa8e4, { 0x9b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc252, gbc.sp());
        EXPECT(0xa8e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa8e4));
        // 9B 01AA
        gbc.setState(0x9a13, 0x52a2, 0x5150, 0x1d14, 0xbd8d, 0xac4b, 0x0, 0x0);
        gbc.writeMem(0x9a13, { 0x9b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x52a2, gbc.sp());
        EXPECT(0x9a14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9a13));
        // 9B 01AB
        gbc.setState(0x6896, 0xf8e8, 0xffc0, 0xe099, 0x5424, 0x13e9, 0x1, 0x1);
        gbc.writeMem(0x6896, { 0x9b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf8e8, gbc.sp());
        EXPECT(0x6897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01AC
        gbc.setState(0x51fe, 0xa3b4, 0x4900, 0x8ae1, 0xda09, 0x7218, 0x1, 0x0);
        gbc.writeMem(0x51fe, { 0x9b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa3b4, gbc.sp());
        EXPECT(0x51ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01AD
        gbc.setState(0xebc9, 0x189f, 0x9c00, 0x507b, 0xaa51, 0xbf49, 0x0, 0x1);
        gbc.writeMem(0xebc9, { 0x9b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x189f, gbc.sp());
        EXPECT(0xebca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xebc9));
        // 9B 01AE
        gbc.setState(0xe612, 0x898a, 0x740, 0xce, 0xe3d7, 0x8df3, 0x0, 0x0);
        gbc.writeMem(0xe612, { 0x9b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x898a, gbc.sp());
        EXPECT(0xe613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe612));
        // 9B 01AF
        gbc.setState(0xa19b, 0x4285, 0x7cf0, 0x38f9, 0x626c, 0x624e, 0x1, 0x1);
        gbc.writeMem(0xa19b, { 0x9b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4285, gbc.sp());
        EXPECT(0xa19c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa19b));
        // 9B 01B0
        gbc.setState(0x2f5b, 0x45af, 0x87e0, 0x1040, 0xdd73, 0x3e94, 0x0, 0x0);
        gbc.writeMem(0x2f5b, { 0x9b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x45af, gbc.sp());
        EXPECT(0x2f5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01B2
        gbc.setState(0xa029, 0x7e32, 0xd420, 0x9ab1, 0x1551, 0x3f53, 0x1, 0x1);
        gbc.writeMem(0xa029, { 0x9b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7e32, gbc.sp());
        EXPECT(0xa02a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa029));
        // 9B 01B3
        gbc.setState(0xb6c9, 0xa28, 0x9450, 0x44c4, 0x61b5, 0x2b23, 0x1, 0x1);
        gbc.writeMem(0xb6c9, { 0x9b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa28, gbc.sp());
        EXPECT(0xb6ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb6c9));
        // 9B 01B4
        gbc.setState(0x7c3e, 0xa28c, 0x3330, 0x876a, 0x575d, 0xc697, 0x0, 0x1);
        gbc.writeMem(0x7c3e, { 0x9b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa28c, gbc.sp());
        EXPECT(0x7c3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 01B5
        gbc.setState(0xace7, 0x659e, 0x9340, 0xf381, 0xd15a, 0x4a92, 0x0, 0x1);
        gbc.writeMem(0xace7, { 0x9b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x659e, gbc.sp());
        EXPECT(0xace8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xace7));
        // 9B 01B6
        gbc.setState(0x3299, 0xd77a, 0x3440, 0x9236, 0xf9e0, 0x9d12, 0x1, 0x0);
        gbc.writeMem(0x3299, { 0x9b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd77a, gbc.sp());
        EXPECT(0x329a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 01B8
        gbc.setState(0x9987, 0x91c6, 0xb8c0, 0x2471, 0x90aa, 0xbbe7, 0x1, 0x1);
        gbc.writeMem(0x9987, { 0x9b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x91c6, gbc.sp());
        EXPECT(0x9988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9987));
        // 9B 01B9
        gbc.setState(0x8945, 0x75b0, 0x4030, 0xc2a1, 0xb6a5, 0x45e7, 0x1, 0x1);
        gbc.writeMem(0x8945, { 0x9b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x75b0, gbc.sp());
        EXPECT(0x8946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8945));
        // 9B 01BA
        gbc.setState(0xb8b1, 0x782b, 0x4b80, 0x1c0f, 0xbe0e, 0x7748, 0x0, 0x0);
        gbc.writeMem(0xb8b1, { 0x9b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x782b, gbc.sp());
        EXPECT(0xb8b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb8b1));
        // 9B 01BB
        gbc.setState(0x7688, 0x5007, 0x6030, 0xaf08, 0x9ad2, 0xbe7, 0x0, 0x1);
        gbc.writeMem(0x7688, { 0x9b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5007, gbc.sp());
        EXPECT(0x7689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 01BC
        gbc.setState(0x4ba3, 0xeef1, 0xd140, 0xb0ed, 0xa5cd, 0xad6d, 0x0, 0x0);
        gbc.writeMem(0x4ba3, { 0x9b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xeef1, gbc.sp());
        EXPECT(0x4ba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01BD
        gbc.setState(0x9e6a, 0x669b, 0x8ed0, 0xfab5, 0xc05f, 0xd688, 0x0, 0x0);
        gbc.writeMem(0x9e6a, { 0x9b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x669b, gbc.sp());
        EXPECT(0x9e6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9e6a));
        // 9B 01BE
        gbc.setState(0xb368, 0xee7e, 0x6190, 0x78e2, 0x4197, 0x73e6, 0x0, 0x0);
        gbc.writeMem(0xb368, { 0x9b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xee7e, gbc.sp());
        EXPECT(0xb369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb368));
        // 9B 01BF
        gbc.setState(0xbe1c, 0x3899, 0xce10, 0xa2d1, 0x369d, 0xd90f, 0x0, 0x1);
        gbc.writeMem(0xbe1c, { 0x9b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3899, gbc.sp());
        EXPECT(0xbe1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbe1c));
        // 9B 01C0
        gbc.setState(0x13e0, 0x3b87, 0x1ed0, 0x2f4f, 0xcd0c, 0x2c9e, 0x0, 0x0);
        gbc.writeMem(0x13e0, { 0x9b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3b87, gbc.sp());
        EXPECT(0x13e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01C1
        gbc.setState(0xd322, 0x61f1, 0x2720, 0xb19b, 0x2199, 0xb57e, 0x0, 0x1);
        gbc.writeMem(0xd322, { 0x9b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x61f1, gbc.sp());
        EXPECT(0xd323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd322));
        // 9B 01C2
        gbc.setState(0x27bb, 0x8b0, 0xbd40, 0xc459, 0xfe9f, 0x4243, 0x1, 0x0);
        gbc.writeMem(0x27bb, { 0x9b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8b0, gbc.sp());
        EXPECT(0x27bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01C3
        gbc.setState(0xc46a, 0x3287, 0x85e0, 0xb234, 0x8c25, 0xfd06, 0x1, 0x1);
        gbc.writeMem(0xc46a, { 0x9b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3287, gbc.sp());
        EXPECT(0xc46b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc46a));
        // 9B 01C4
        gbc.setState(0xb65b, 0xbd2c, 0xdfa0, 0x36e0, 0xde71, 0xd83d, 0x1, 0x0);
        gbc.writeMem(0xb65b, { 0x9b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xbd2c, gbc.sp());
        EXPECT(0xb65c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb65b));
        // 9B 01C5
        gbc.setState(0xcf85, 0x8dc3, 0x8070, 0x933f, 0xc3ff, 0x5b5c, 0x1, 0x1);
        gbc.writeMem(0xcf85, { 0x9b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8dc3, gbc.sp());
        EXPECT(0xcf86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xcf85));
        // 9B 01C6
        gbc.setState(0x9f09, 0xc720, 0xb790, 0x9831, 0x70a5, 0x1db8, 0x0, 0x0);
        gbc.writeMem(0x9f09, { 0x9b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc720, gbc.sp());
        EXPECT(0x9f0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9f09));
        // 9B 01C7
        gbc.setState(0xda88, 0xdaef, 0x9620, 0xbb3d, 0x7b2, 0x87f0, 0x1, 0x1);
        gbc.writeMem(0xda88, { 0x9b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xdaef, gbc.sp());
        EXPECT(0xda89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xda88));
        // 9B 01C8
        gbc.setState(0x80d, 0xdb70, 0xa290, 0x265f, 0x519f, 0xb48d, 0x1, 0x0);
        gbc.writeMem(0x80d, { 0x9b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdb70, gbc.sp());
        EXPECT(0x80e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01C9
        gbc.setState(0xdd33, 0xf999, 0x4ac0, 0x7e3f, 0xf7ab, 0xb226, 0x0, 0x0);
        gbc.writeMem(0xdd33, { 0x9b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf999, gbc.sp());
        EXPECT(0xdd34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xdd33));
        // 9B 01CA
        gbc.setState(0x1a73, 0x1930, 0x7d10, 0xfb53, 0xaa6d, 0x92db, 0x0, 0x0);
        gbc.writeMem(0x1a73, { 0x9b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1930, gbc.sp());
        EXPECT(0x1a74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01CB
        gbc.setState(0x539f, 0xf177, 0xdd50, 0xa079, 0xf30, 0x4b5b, 0x1, 0x1);
        gbc.writeMem(0x539f, { 0x9b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf177, gbc.sp());
        EXPECT(0x53a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01CC
        gbc.setState(0x5ee4, 0x510c, 0x97c0, 0xf6ee, 0xdd15, 0x4c5c, 0x0, 0x1);
        gbc.writeMem(0x5ee4, { 0x9b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x510c, gbc.sp());
        EXPECT(0x5ee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01CD
        gbc.setState(0xd206, 0xe1f8, 0xd660, 0x411a, 0xa986, 0x183, 0x0, 0x0);
        gbc.writeMem(0xd206, { 0x9b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe1f8, gbc.sp());
        EXPECT(0xd207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd206));
        // 9B 01CE
        gbc.setState(0xdf2d, 0x7de1, 0xe260, 0xbdb6, 0xa805, 0x3089, 0x1, 0x0);
        gbc.writeMem(0xdf2d, { 0x9b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7de1, gbc.sp());
        EXPECT(0xdf2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xdf2d));
        // 9B 01CF
        gbc.setState(0x566a, 0xd0a2, 0x6170, 0xdfba, 0x2018, 0x6a94, 0x0, 0x0);
        gbc.writeMem(0x566a, { 0x9b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd0a2, gbc.sp());
        EXPECT(0x566b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01D0
        gbc.setState(0xb97a, 0x9fe7, 0x2d20, 0x65ef, 0x29d6, 0xf90e, 0x1, 0x0);
        gbc.writeMem(0xb97a, { 0x9b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9fe7, gbc.sp());
        EXPECT(0xb97b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb97a));
        // 9B 01D1
        gbc.setState(0x449f, 0x351, 0x3500, 0x4baf, 0x810c, 0x3297, 0x1, 0x0);
        gbc.writeMem(0x449f, { 0x9b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x351, gbc.sp());
        EXPECT(0x44a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01D2
        gbc.setState(0xed26, 0xeab7, 0xe470, 0x3b86, 0xe3fc, 0x966d, 0x1, 0x1);
        gbc.writeMem(0xed26, { 0x9b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xeab7, gbc.sp());
        EXPECT(0xed27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xed26));
        // 9B 01D3
        gbc.setState(0xaf1b, 0xb1d0, 0x22d0, 0xa91, 0x880f, 0x8c85, 0x1, 0x0);
        gbc.writeMem(0xaf1b, { 0x9b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb1d0, gbc.sp());
        EXPECT(0xaf1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xaf1b));
        // 9B 01D4
        gbc.setState(0x65bc, 0xeafe, 0x90b0, 0xbfbe, 0x566f, 0xd124, 0x0, 0x0);
        gbc.writeMem(0x65bc, { 0x9b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xeafe, gbc.sp());
        EXPECT(0x65bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01D5
        gbc.setState(0x9cb4, 0xea2c, 0x1bc0, 0x600c, 0x314c, 0x2808, 0x1, 0x0);
        gbc.writeMem(0x9cb4, { 0x9b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xea2c, gbc.sp());
        EXPECT(0x9cb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9cb4));
        // 9B 01D6
        gbc.setState(0xa04, 0x7325, 0x5190, 0x6708, 0x3ebd, 0xce83, 0x0, 0x1);
        gbc.writeMem(0xa04, { 0x9b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7325, gbc.sp());
        EXPECT(0xa05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 01D7
        gbc.setState(0x9fe0, 0xc7d2, 0xaa0, 0xcbc5, 0x74fe, 0x4852, 0x1, 0x1);
        gbc.writeMem(0x9fe0, { 0x9b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc7d2, gbc.sp());
        EXPECT(0x9fe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9fe0));
        // 9B 01D8
        gbc.setState(0x26f3, 0xe8ab, 0x37a0, 0x45d4, 0x4588, 0xbbab, 0x0, 0x1);
        gbc.writeMem(0x26f3, { 0x9b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe8ab, gbc.sp());
        EXPECT(0x26f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 01D9
        gbc.setState(0xdcd9, 0x158d, 0xb560, 0x2162, 0xc502, 0xdcbb, 0x0, 0x0);
        gbc.writeMem(0xdcd9, { 0x9b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x158d, gbc.sp());
        EXPECT(0xdcda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xdcd9));
        // 9B 01DA
        gbc.setState(0x2f7d, 0x8569, 0xd600, 0xf98e, 0x8194, 0x5e3e, 0x1, 0x0);
        gbc.writeMem(0x2f7d, { 0x9b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8569, gbc.sp());
        EXPECT(0x2f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01DB
        gbc.setState(0xd045, 0x91fd, 0x4200, 0xe7c6, 0xb9c0, 0x7621, 0x1, 0x1);
        gbc.writeMem(0xd045, { 0x9b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x91fd, gbc.sp());
        EXPECT(0xd046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd045));
        // 9B 01DC
        gbc.setState(0x3d13, 0xde8c, 0x5610, 0xbc44, 0xccf, 0xbafd, 0x0, 0x0);
        gbc.writeMem(0x3d13, { 0x9b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xde8c, gbc.sp());
        EXPECT(0x3d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 01DE
        gbc.setState(0x2f02, 0xadfc, 0x7420, 0xa927, 0xb2a2, 0x4c69, 0x0, 0x0);
        gbc.writeMem(0x2f02, { 0x9b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xadfc, gbc.sp());
        EXPECT(0x2f03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 01DF
        gbc.setState(0x16e2, 0x9cc8, 0x5280, 0x94d3, 0x1daf, 0xa99c, 0x0, 0x1);
        gbc.writeMem(0x16e2, { 0x9b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9cc8, gbc.sp());
        EXPECT(0x16e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 01E0
        gbc.setState(0x50f0, 0x2b96, 0x5800, 0x22a4, 0x97d8, 0xb967, 0x0, 0x1);
        gbc.writeMem(0x50f0, { 0x9b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2b96, gbc.sp());
        EXPECT(0x50f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 01E1
        gbc.setState(0xe09d, 0x89c7, 0x5f10, 0xbcf0, 0x87dc, 0xe91f, 0x0, 0x0);
        gbc.writeMem(0xe09d, { 0x9b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x89c7, gbc.sp());
        EXPECT(0xe09e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe09d));
        // 9B 01E3
        gbc.setState(0x91b3, 0xb4a0, 0x1780, 0x483d, 0x1f61, 0x4cfc, 0x1, 0x0);
        gbc.writeMem(0x91b3, { 0x9b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb4a0, gbc.sp());
        EXPECT(0x91b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x91b3));
        // 9B 01E4
        gbc.setState(0x3d3d, 0x8a66, 0xedf0, 0x2d52, 0xb8a6, 0x17e1, 0x0, 0x1);
        gbc.writeMem(0x3d3d, { 0x9b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8a66, gbc.sp());
        EXPECT(0x3d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01E5
        gbc.setState(0x2fc, 0x8cd9, 0xd100, 0x84bb, 0x4c71, 0x70a7, 0x1, 0x1);
        gbc.writeMem(0x2fc, { 0x9b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8cd9, gbc.sp());
        EXPECT(0x2fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01E6
        gbc.setState(0x2ab1, 0x7596, 0xc5e0, 0xbe31, 0x664f, 0x7fcd, 0x0, 0x0);
        gbc.writeMem(0x2ab1, { 0x9b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7596, gbc.sp());
        EXPECT(0x2ab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01E7
        gbc.setState(0x712f, 0x5312, 0xba70, 0xf1ea, 0xa43a, 0x3037, 0x1, 0x1);
        gbc.writeMem(0x712f, { 0x9b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5312, gbc.sp());
        EXPECT(0x7130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01E9
        gbc.setState(0xb2e2, 0x268f, 0x8240, 0xcedb, 0x748e, 0xab4c, 0x1, 0x0);
        gbc.writeMem(0xb2e2, { 0x9b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x268f, gbc.sp());
        EXPECT(0xb2e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb2e2));
        // 9B 01EA
        gbc.setState(0x63e8, 0x4a7b, 0xa930, 0xbce6, 0xf3dc, 0x236b, 0x1, 0x1);
        gbc.writeMem(0x63e8, { 0x9b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4a7b, gbc.sp());
        EXPECT(0x63e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 01EB
        gbc.setState(0x9e02, 0x78ae, 0xa5e0, 0x422a, 0x57d4, 0x961e, 0x1, 0x1);
        gbc.writeMem(0x9e02, { 0x9b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x78ae, gbc.sp());
        EXPECT(0x9e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9e02));
        // 9B 01EC
        gbc.setState(0x6eb2, 0x6587, 0x160, 0x729c, 0x94c1, 0xb546, 0x1, 0x1);
        gbc.writeMem(0x6eb2, { 0x9b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6587, gbc.sp());
        EXPECT(0x6eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 01ED
        gbc.setState(0x7dd1, 0x869e, 0x2790, 0xe4ad, 0xe4c, 0xf0b0, 0x0, 0x1);
        gbc.writeMem(0x7dd1, { 0x9b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x869e, gbc.sp());
        EXPECT(0x7dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 01EE
        gbc.setState(0xa4c8, 0xdf2c, 0x90b0, 0xe7ab, 0x99aa, 0x5fcb, 0x1, 0x0);
        gbc.writeMem(0xa4c8, { 0x9b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xdf2c, gbc.sp());
        EXPECT(0xa4c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa4c8));
        // 9B 01EF
        gbc.setState(0xd7fd, 0x28a2, 0x37b0, 0x438b, 0xb5b4, 0x882e, 0x0, 0x1);
        gbc.writeMem(0xd7fd, { 0x9b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x28a2, gbc.sp());
        EXPECT(0xd7fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd7fd));
        // 9B 01F0
        gbc.setState(0x5cb, 0x621e, 0xef30, 0xbd2e, 0x59ba, 0xbaf1, 0x0, 0x0);
        gbc.writeMem(0x5cb, { 0x9b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x621e, gbc.sp());
        EXPECT(0x5cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01F1
        gbc.setState(0x1fe8, 0x9a9e, 0x2a10, 0xe527, 0xf529, 0xd641, 0x1, 0x1);
        gbc.writeMem(0x1fe8, { 0x9b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9a9e, gbc.sp());
        EXPECT(0x1fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01F2
        gbc.setState(0x7f3f, 0x2cb0, 0x1380, 0x544, 0xf96b, 0xdc4f, 0x1, 0x1);
        gbc.writeMem(0x7f3f, { 0x9b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2cb0, gbc.sp());
        EXPECT(0x7f40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 01F4
        gbc.setState(0x707b, 0x38e8, 0xf0e0, 0x5f8e, 0x2f41, 0xff6c, 0x1, 0x0);
        gbc.writeMem(0x707b, { 0x9b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x38e8, gbc.sp());
        EXPECT(0x707c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01F5
        gbc.setState(0x824a, 0x9d86, 0xe2c0, 0x960e, 0x88b8, 0x9c30, 0x0, 0x1);
        gbc.writeMem(0x824a, { 0x9b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9d86, gbc.sp());
        EXPECT(0x824b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x824a));
        // 9B 01F6
        gbc.setState(0x440c, 0xe6c4, 0x4d70, 0xdb9f, 0x7448, 0x23d2, 0x0, 0x1);
        gbc.writeMem(0x440c, { 0x9b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe6c4, gbc.sp());
        EXPECT(0x440d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01F7
        gbc.setState(0x8965, 0x77e7, 0xded0, 0xd004, 0x1127, 0x3a4, 0x1, 0x0);
        gbc.writeMem(0x8965, { 0x9b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x77e7, gbc.sp());
        EXPECT(0x8966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8965));
        // 9B 01F8
        gbc.setState(0xc53e, 0x8111, 0x1c0, 0xa084, 0xe1c, 0x1a7a, 0x0, 0x0);
        gbc.writeMem(0xc53e, { 0x9b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8111, gbc.sp());
        EXPECT(0xc53f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc53e));
        // 9B 01F9
        gbc.setState(0x641b, 0x8ee7, 0x47d0, 0xa658, 0x7317, 0x9425, 0x0, 0x1);
        gbc.writeMem(0x641b, { 0x9b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8ee7, gbc.sp());
        EXPECT(0x641c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01FA
        gbc.setState(0xb828, 0xd21a, 0x6e20, 0xd4d0, 0xfce1, 0x70ed, 0x0, 0x1);
        gbc.writeMem(0xb828, { 0x9b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd21a, gbc.sp());
        EXPECT(0xb829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb828));
        // 9B 01FB
        gbc.setState(0xab58, 0x8be9, 0x490, 0xde98, 0xec49, 0x9af6, 0x0, 0x0);
        gbc.writeMem(0xab58, { 0x9b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8be9, gbc.sp());
        EXPECT(0xab59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xab58));
        // 9B 01FC
        gbc.setState(0xa477, 0x870a, 0x58c0, 0x7bc2, 0x9807, 0xf9f, 0x0, 0x1);
        gbc.writeMem(0xa477, { 0x9b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x870a, gbc.sp());
        EXPECT(0xa478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa477));
        // 9B 01FD
        gbc.setState(0xab8a, 0xc962, 0xe240, 0xed0e, 0x4d44, 0x9f77, 0x0, 0x0);
        gbc.writeMem(0xab8a, { 0x9b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc962, gbc.sp());
        EXPECT(0xab8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xab8a));
        // 9B 01FE
        gbc.setState(0x312b, 0xcece, 0xdcd0, 0x3b4c, 0x1d2c, 0x1644, 0x0, 0x1);
        gbc.writeMem(0x312b, { 0x9b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcece, gbc.sp());
        EXPECT(0x312c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 01FF
        gbc.setState(0x6a6b, 0xbf1c, 0xb300, 0x97d4, 0x5110, 0x964f, 0x1, 0x1);
        gbc.writeMem(0x6a6b, { 0x9b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xbf1c, gbc.sp());
        EXPECT(0x6a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0200
        gbc.setState(0x6d91, 0xa58f, 0xe3a0, 0x537, 0x1b4, 0xad3f, 0x0, 0x1);
        gbc.writeMem(0x6d91, { 0x9b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa58f, gbc.sp());
        EXPECT(0x6d92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0201
        gbc.setState(0xeb2b, 0x2525, 0xe190, 0xb38b, 0xf4a8, 0x5744, 0x1, 0x0);
        gbc.writeMem(0xeb2b, { 0x9b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2525, gbc.sp());
        EXPECT(0xeb2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xeb2b));
        // 9B 0202
        gbc.setState(0xef9f, 0x36b3, 0xe550, 0x2fd9, 0xcc89, 0xeb97, 0x0, 0x0);
        gbc.writeMem(0xef9f, { 0x9b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x36b3, gbc.sp());
        EXPECT(0xefa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xef9f));
        // 9B 0203
        gbc.setState(0xd2a2, 0x13d2, 0xe170, 0x6283, 0xcf67, 0x655, 0x0, 0x1);
        gbc.writeMem(0xd2a2, { 0x9b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x13d2, gbc.sp());
        EXPECT(0xd2a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd2a2));
        // 9B 0204
        gbc.setState(0x4827, 0x36f2, 0x9920, 0xc912, 0xed26, 0x2ac1, 0x1, 0x0);
        gbc.writeMem(0x4827, { 0x9b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x36f2, gbc.sp());
        EXPECT(0x4828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0205
        gbc.setState(0x8a8e, 0x670d, 0x53b0, 0x1e32, 0xdb4a, 0xb795, 0x0, 0x0);
        gbc.writeMem(0x8a8e, { 0x9b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x670d, gbc.sp());
        EXPECT(0x8a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8a8e));
        // 9B 0206
        gbc.setState(0x5e66, 0xd6af, 0xfb30, 0xc1fa, 0xdf8c, 0xe3be, 0x1, 0x1);
        gbc.writeMem(0x5e66, { 0x9b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd6af, gbc.sp());
        EXPECT(0x5e67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0209
        gbc.setState(0xb268, 0xc8dd, 0xd00, 0xc8bc, 0xf6db, 0x321, 0x0, 0x1);
        gbc.writeMem(0xb268, { 0x9b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc8dd, gbc.sp());
        EXPECT(0xb269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb268));
        // 9B 020A
        gbc.setState(0x2bb1, 0xe0e, 0xbec0, 0xa6e0, 0xf19d, 0x7682, 0x0, 0x0);
        gbc.writeMem(0x2bb1, { 0x9b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe0e, gbc.sp());
        EXPECT(0x2bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 020B
        gbc.setState(0xefe8, 0x387b, 0x9ce0, 0x47f1, 0x345e, 0xb12a, 0x1, 0x1);
        gbc.writeMem(0xefe8, { 0x9b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x387b, gbc.sp());
        EXPECT(0xefe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xefe8));
        // 9B 020C
        gbc.setState(0x418e, 0xf544, 0xf290, 0xb5c2, 0x5b4a, 0x8a7a, 0x1, 0x0);
        gbc.writeMem(0x418e, { 0x9b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf544, gbc.sp());
        EXPECT(0x418f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 020E
        gbc.setState(0x8c16, 0x7124, 0xf400, 0x9d06, 0xdb7f, 0x50a1, 0x0, 0x0);
        gbc.writeMem(0x8c16, { 0x9b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7124, gbc.sp());
        EXPECT(0x8c17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8c16));
        // 9B 020F
        gbc.setState(0x4441, 0x888, 0x1160, 0x5d98, 0x8502, 0x220f, 0x1, 0x1);
        gbc.writeMem(0x4441, { 0x9b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x888, gbc.sp());
        EXPECT(0x4442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0210
        gbc.setState(0x58f7, 0x7f45, 0xd2e0, 0x7839, 0x2d9, 0x78ef, 0x0, 0x0);
        gbc.writeMem(0x58f7, { 0x9b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7f45, gbc.sp());
        EXPECT(0x58f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0211
        gbc.setState(0x3de6, 0x3545, 0x890, 0x8106, 0xb5c2, 0xb29, 0x1, 0x0);
        gbc.writeMem(0x3de6, { 0x9b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3545, gbc.sp());
        EXPECT(0x3de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0212
        gbc.setState(0x442a, 0xbd8f, 0x5520, 0x2cbb, 0x9abb, 0x6287, 0x0, 0x0);
        gbc.writeMem(0x442a, { 0x9b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xbd8f, gbc.sp());
        EXPECT(0x442b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0214
        gbc.setState(0xdce2, 0x7e5, 0xd620, 0xe780, 0xb63e, 0x5dd5, 0x1, 0x0);
        gbc.writeMem(0xdce2, { 0x9b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7e5, gbc.sp());
        EXPECT(0xdce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xdce2));
        // 9B 0215
        gbc.setState(0xb664, 0x7934, 0x4cb0, 0xc5f0, 0x3600, 0xcc3a, 0x1, 0x1);
        gbc.writeMem(0xb664, { 0x9b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7934, gbc.sp());
        EXPECT(0xb665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb664));
        // 9B 0217
        gbc.setState(0x76e9, 0x152d, 0x8be0, 0x65ec, 0x61c5, 0x3971, 0x0, 0x0);
        gbc.writeMem(0x76e9, { 0x9b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x152d, gbc.sp());
        EXPECT(0x76ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0218
        gbc.setState(0xbe22, 0x6633, 0xbee0, 0x6bc8, 0xc650, 0xcf91, 0x0, 0x0);
        gbc.writeMem(0xbe22, { 0x9b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6633, gbc.sp());
        EXPECT(0xbe23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbe22));
        // 9B 0219
        gbc.setState(0xecf6, 0x95d7, 0xcc00, 0x110b, 0xd0be, 0x30f1, 0x0, 0x1);
        gbc.writeMem(0xecf6, { 0x9b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x95d7, gbc.sp());
        EXPECT(0xecf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xecf6));
        // 9B 021A
        gbc.setState(0xe20, 0xcfe, 0xa760, 0x396b, 0x65ee, 0x7fab, 0x0, 0x0);
        gbc.writeMem(0xe20, { 0x9b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcfe, gbc.sp());
        EXPECT(0xe21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 021B
        gbc.setState(0x3ee7, 0x6e2a, 0xd8d0, 0x48b, 0x9660, 0xbde1, 0x1, 0x1);
        gbc.writeMem(0x3ee7, { 0x9b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6e2a, gbc.sp());
        EXPECT(0x3ee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 021C
        gbc.setState(0xee85, 0x45bd, 0xa710, 0x4765, 0x9261, 0x6711, 0x1, 0x0);
        gbc.writeMem(0xee85, { 0x9b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x45bd, gbc.sp());
        EXPECT(0xee86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xee85));
        // 9B 021D
        gbc.setState(0xfa3, 0x2f5e, 0x30b0, 0x47d3, 0x884b, 0xfae7, 0x1, 0x1);
        gbc.writeMem(0xfa3, { 0x9b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2f5e, gbc.sp());
        EXPECT(0xfa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 021E
        gbc.setState(0x9233, 0xfefc, 0xd230, 0x2370, 0x8fc9, 0xa1be, 0x0, 0x1);
        gbc.writeMem(0x9233, { 0x9b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfefc, gbc.sp());
        EXPECT(0x9234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9233));
        // 9B 021F
        gbc.setState(0x3853, 0x3124, 0x52a0, 0x6abd, 0x89ee, 0x69ad, 0x1, 0x1);
        gbc.writeMem(0x3853, { 0x9b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3124, gbc.sp());
        EXPECT(0x3854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0220
        gbc.setState(0xbe35, 0x8962, 0x10c0, 0xe4e2, 0x71e8, 0x76f0, 0x0, 0x0);
        gbc.writeMem(0xbe35, { 0x9b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8962, gbc.sp());
        EXPECT(0xbe36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbe35));
        // 9B 0221
        gbc.setState(0x7b31, 0xfca1, 0xcd90, 0x58e5, 0x23bf, 0x91a2, 0x1, 0x0);
        gbc.writeMem(0x7b31, { 0x9b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfca1, gbc.sp());
        EXPECT(0x7b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0222
        gbc.setState(0xde33, 0xe304, 0x3460, 0x563e, 0x231f, 0xb34f, 0x1, 0x0);
        gbc.writeMem(0xde33, { 0x9b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe304, gbc.sp());
        EXPECT(0xde34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xde33));
        // 9B 0223
        gbc.setState(0x8388, 0x23f9, 0x4860, 0x8723, 0x1d64, 0xdaa5, 0x0, 0x0);
        gbc.writeMem(0x8388, { 0x9b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x23f9, gbc.sp());
        EXPECT(0x8389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8388));
        // 9B 0224
        gbc.setState(0x46b5, 0xd3f9, 0x5e20, 0xac19, 0x671a, 0xe057, 0x1, 0x1);
        gbc.writeMem(0x46b5, { 0x9b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd3f9, gbc.sp());
        EXPECT(0x46b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0225
        gbc.setState(0x95d0, 0x3972, 0xb2c0, 0x2dde, 0xd453, 0xf401, 0x0, 0x0);
        gbc.writeMem(0x95d0, { 0x9b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3972, gbc.sp());
        EXPECT(0x95d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x95d0));
        // 9B 0226
        gbc.setState(0x3cef, 0x960e, 0x75e0, 0x4cc5, 0xfdf0, 0x85fa, 0x0, 0x0);
        gbc.writeMem(0x3cef, { 0x9b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x960e, gbc.sp());
        EXPECT(0x3cf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0228
        gbc.setState(0xd522, 0xcf84, 0xa3f0, 0x2a62, 0x5c76, 0xf53f, 0x0, 0x1);
        gbc.writeMem(0xd522, { 0x9b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xcf84, gbc.sp());
        EXPECT(0xd523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd522));
        // 9B 0229
        gbc.setState(0xcfc5, 0xcaac, 0xd780, 0xc4f5, 0xca45, 0x5afd, 0x1, 0x0);
        gbc.writeMem(0xcfc5, { 0x9b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcaac, gbc.sp());
        EXPECT(0xcfc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xcfc5));
        // 9B 022A
        gbc.setState(0x6543, 0x9af8, 0x81c0, 0x2c84, 0x1844, 0xb8ec, 0x0, 0x0);
        gbc.writeMem(0x6543, { 0x9b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9af8, gbc.sp());
        EXPECT(0x6544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 022B
        gbc.setState(0x5c53, 0x7b78, 0x5680, 0x63c9, 0xa2cc, 0x72a, 0x1, 0x1);
        gbc.writeMem(0x5c53, { 0x9b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7b78, gbc.sp());
        EXPECT(0x5c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 022C
        gbc.setState(0xe546, 0x2765, 0xe9e0, 0xd725, 0xa208, 0x396, 0x1, 0x1);
        gbc.writeMem(0xe546, { 0x9b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2765, gbc.sp());
        EXPECT(0xe547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe546));
        // 9B 022D
        gbc.setState(0x8670, 0x9e9b, 0xa4d0, 0xfc44, 0xd4ff, 0xaf92, 0x1, 0x1);
        gbc.writeMem(0x8670, { 0x9b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9e9b, gbc.sp());
        EXPECT(0x8671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8670));
        // 9B 022E
        gbc.setState(0x2fa0, 0x2f4c, 0x5210, 0x8fdb, 0xf404, 0x1fcb, 0x0, 0x0);
        gbc.writeMem(0x2fa0, { 0x9b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2f4c, gbc.sp());
        EXPECT(0x2fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 022F
        gbc.setState(0x8847, 0x3269, 0xf310, 0xe21a, 0x3b9, 0x25d7, 0x1, 0x1);
        gbc.writeMem(0x8847, { 0x9b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3269, gbc.sp());
        EXPECT(0x8848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8847));
        // 9B 0230
        gbc.setState(0x98d8, 0x53b1, 0x77e0, 0x77a, 0x58bb, 0x64d9, 0x0, 0x0);
        gbc.writeMem(0x98d8, { 0x9b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x53b1, gbc.sp());
        EXPECT(0x98d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x98d8));
        // 9B 0231
        gbc.setState(0xbd4, 0x7d08, 0x3360, 0x330, 0x81ad, 0x8a88, 0x0, 0x0);
        gbc.writeMem(0xbd4, { 0x9b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7d08, gbc.sp());
        EXPECT(0xbd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0232
        gbc.setState(0xbf24, 0x2193, 0xe980, 0x577c, 0x4da2, 0x77c7, 0x1, 0x0);
        gbc.writeMem(0xbf24, { 0x9b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2193, gbc.sp());
        EXPECT(0xbf25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbf24));
        // 9B 0233
        gbc.setState(0xe8ce, 0x9c65, 0x3710, 0xe09, 0x8ba1, 0xae92, 0x0, 0x0);
        gbc.writeMem(0xe8ce, { 0x9b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9c65, gbc.sp());
        EXPECT(0xe8cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe8ce));
        // 9B 0234
        gbc.setState(0x4cd, 0xa0d0, 0xdd20, 0xa0b, 0x3e8, 0x8151, 0x0, 0x1);
        gbc.writeMem(0x4cd, { 0x9b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa0d0, gbc.sp());
        EXPECT(0x4ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0235
        gbc.setState(0x7455, 0x4599, 0x45e0, 0xb5b2, 0x33f1, 0x66fd, 0x1, 0x1);
        gbc.writeMem(0x7455, { 0x9b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4599, gbc.sp());
        EXPECT(0x7456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0236
        gbc.setState(0x97e5, 0xf111, 0x2390, 0xa58b, 0xe4d9, 0x196e, 0x0, 0x1);
        gbc.writeMem(0x97e5, { 0x9b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf111, gbc.sp());
        EXPECT(0x97e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x97e5));
        // 9B 0239
        gbc.setState(0x7552, 0xff23, 0x5bc0, 0x2b53, 0x2bb5, 0x1751, 0x0, 0x1);
        gbc.writeMem(0x7552, { 0x9b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xff23, gbc.sp());
        EXPECT(0x7553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 023A
        gbc.setState(0x7cb6, 0xae91, 0x53e0, 0x423d, 0x5eea, 0xe16f, 0x0, 0x0);
        gbc.writeMem(0x7cb6, { 0x9b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xae91, gbc.sp());
        EXPECT(0x7cb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 023B
        gbc.setState(0x7deb, 0xf42b, 0xcb30, 0x742, 0x7eac, 0x5ae0, 0x0, 0x1);
        gbc.writeMem(0x7deb, { 0x9b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf42b, gbc.sp());
        EXPECT(0x7dec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 023C
        gbc.setState(0xdec6, 0xd88f, 0x2a80, 0x28f1, 0xed85, 0x29da, 0x0, 0x1);
        gbc.writeMem(0xdec6, { 0x9b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd88f, gbc.sp());
        EXPECT(0xdec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xdec6));
        // 9B 023D
        gbc.setState(0xe151, 0xe76a, 0xe5b0, 0x7310, 0x88da, 0x5a6e, 0x1, 0x0);
        gbc.writeMem(0xe151, { 0x9b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe76a, gbc.sp());
        EXPECT(0xe152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe151));
        // 9B 023E
        gbc.setState(0x83ba, 0x3769, 0x2730, 0x32f4, 0x7d0d, 0xbb32, 0x0, 0x0);
        gbc.writeMem(0x83ba, { 0x9b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3769, gbc.sp());
        EXPECT(0x83bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x83ba));
        // 9B 023F
        gbc.setState(0x84d2, 0xac8f, 0xc870, 0x2f85, 0xabd3, 0x3001, 0x1, 0x1);
        gbc.writeMem(0x84d2, { 0x9b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xac8f, gbc.sp());
        EXPECT(0x84d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x84d2));
        // 9B 0240
        gbc.setState(0x61ee, 0xe25b, 0x7d60, 0xd5b0, 0x2359, 0x4bde, 0x0, 0x0);
        gbc.writeMem(0x61ee, { 0x9b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe25b, gbc.sp());
        EXPECT(0x61ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0241
        gbc.setState(0x7e6b, 0xb7b1, 0x9960, 0x5081, 0x79d1, 0xcb31, 0x0, 0x1);
        gbc.writeMem(0x7e6b, { 0x9b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb7b1, gbc.sp());
        EXPECT(0x7e6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0242
        gbc.setState(0x18db, 0xf631, 0xb290, 0x9d16, 0xa3ff, 0x3321, 0x0, 0x0);
        gbc.writeMem(0x18db, { 0x9b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf631, gbc.sp());
        EXPECT(0x18dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0243
        gbc.setState(0x3d6, 0xf0b9, 0x28e0, 0x4aae, 0x588b, 0x9868, 0x1, 0x1);
        gbc.writeMem(0x3d6, { 0x9b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf0b9, gbc.sp());
        EXPECT(0x3d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0244
        gbc.setState(0x367a, 0xcaab, 0xac70, 0xd65c, 0x4ba9, 0xa1f5, 0x0, 0x1);
        gbc.writeMem(0x367a, { 0x9b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcaab, gbc.sp());
        EXPECT(0x367b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0245
        gbc.setState(0xa177, 0x2ce6, 0x8c40, 0xe277, 0x8edb, 0xb12, 0x0, 0x0);
        gbc.writeMem(0xa177, { 0x9b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2ce6, gbc.sp());
        EXPECT(0xa178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa177));
        // 9B 0246
        gbc.setState(0xdb74, 0x5f00, 0xf150, 0xc125, 0x6f0b, 0x65e, 0x1, 0x1);
        gbc.writeMem(0xdb74, { 0x9b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5f00, gbc.sp());
        EXPECT(0xdb75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xdb74));
        // 9B 0247
        gbc.setState(0x294c, 0x6e0f, 0x3930, 0xb07e, 0x4c1d, 0x1d3d, 0x1, 0x0);
        gbc.writeMem(0x294c, { 0x9b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6e0f, gbc.sp());
        EXPECT(0x294d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0248
        gbc.setState(0x8278, 0xdd75, 0x8c70, 0xcf93, 0x77ba, 0xf656, 0x1, 0x1);
        gbc.writeMem(0x8278, { 0x9b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdd75, gbc.sp());
        EXPECT(0x8279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8278));
        // 9B 0249
        gbc.setState(0xc04f, 0x215f, 0xc680, 0x3cd4, 0xfaeb, 0xd8b9, 0x0, 0x1);
        gbc.writeMem(0xc04f, { 0x9b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x215f, gbc.sp());
        EXPECT(0xc050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc04f));
        // 9B 024A
        gbc.setState(0x14e9, 0x2117, 0xc580, 0x5adf, 0x2fbe, 0x3087, 0x1, 0x0);
        gbc.writeMem(0x14e9, { 0x9b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2117, gbc.sp());
        EXPECT(0x14ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 024B
        gbc.setState(0xca79, 0x1b5e, 0xaa10, 0x2e4a, 0x3e27, 0x11dc, 0x0, 0x1);
        gbc.writeMem(0xca79, { 0x9b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1b5e, gbc.sp());
        EXPECT(0xca7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xca79));
        // 9B 024C
        gbc.setState(0x3fbe, 0xdbf8, 0x2e40, 0xe070, 0x8c3f, 0xeb07, 0x1, 0x1);
        gbc.writeMem(0x3fbe, { 0x9b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdbf8, gbc.sp());
        EXPECT(0x3fbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 024D
        gbc.setState(0xafce, 0x6d9f, 0xfba0, 0x1118, 0x9214, 0xb073, 0x1, 0x1);
        gbc.writeMem(0xafce, { 0x9b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6d9f, gbc.sp());
        EXPECT(0xafcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xafce));
        // 9B 024E
        gbc.setState(0xa98c, 0x359, 0x8060, 0xf3d1, 0x4366, 0xed06, 0x1, 0x0);
        gbc.writeMem(0xa98c, { 0x9b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x359, gbc.sp());
        EXPECT(0xa98d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa98c));
        // 9B 0250
        gbc.setState(0x4339, 0xf129, 0xf650, 0x97c4, 0x8154, 0xc8ec, 0x0, 0x1);
        gbc.writeMem(0x4339, { 0x9b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf129, gbc.sp());
        EXPECT(0x433a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0251
        gbc.setState(0xc4a8, 0xd249, 0xad70, 0x5c36, 0xfc40, 0xa52f, 0x0, 0x1);
        gbc.writeMem(0xc4a8, { 0x9b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd249, gbc.sp());
        EXPECT(0xc4a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc4a8));
        // 9B 0252
        gbc.setState(0xc80d, 0xe09d, 0x640, 0x27fa, 0x8059, 0x34ae, 0x1, 0x1);
        gbc.writeMem(0xc80d, { 0x9b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe09d, gbc.sp());
        EXPECT(0xc80e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc80d));
        // 9B 0253
        gbc.setState(0xbf47, 0xe275, 0xa5e0, 0xef1e, 0xedad, 0xc310, 0x0, 0x0);
        gbc.writeMem(0xbf47, { 0x9b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe275, gbc.sp());
        EXPECT(0xbf48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbf47));
        // 9B 0254
        gbc.setState(0x764f, 0xd7de, 0x5490, 0x2057, 0x18e2, 0xb63a, 0x1, 0x1);
        gbc.writeMem(0x764f, { 0x9b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd7de, gbc.sp());
        EXPECT(0x7650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0255
        gbc.setState(0x44a0, 0x70e8, 0x82b0, 0x9bbd, 0x29d2, 0x2d80, 0x0, 0x0);
        gbc.writeMem(0x44a0, { 0x9b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x70e8, gbc.sp());
        EXPECT(0x44a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0256
        gbc.setState(0x91d3, 0x3eab, 0xced0, 0xda4b, 0xcc30, 0x20ec, 0x0, 0x1);
        gbc.writeMem(0x91d3, { 0x9b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3eab, gbc.sp());
        EXPECT(0x91d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x91d3));
        // 9B 0257
        gbc.setState(0x24b5, 0xd88d, 0x22d0, 0xdf3d, 0x158a, 0x46bb, 0x1, 0x0);
        gbc.writeMem(0x24b5, { 0x9b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd88d, gbc.sp());
        EXPECT(0x24b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0258
        gbc.setState(0xae1, 0xde4a, 0x9bd0, 0x477, 0xda58, 0x91ba, 0x0, 0x1);
        gbc.writeMem(0xae1, { 0x9b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xde4a, gbc.sp());
        EXPECT(0xae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0259
        gbc.setState(0xbed0, 0xcaeb, 0x4d80, 0x9997, 0xfee8, 0x82fd, 0x0, 0x1);
        gbc.writeMem(0xbed0, { 0x9b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcaeb, gbc.sp());
        EXPECT(0xbed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbed0));
        // 9B 025A
        gbc.setState(0x9bb4, 0x9816, 0x4070, 0x5a56, 0x2b6d, 0x3c0d, 0x0, 0x0);
        gbc.writeMem(0x9bb4, { 0x9b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9816, gbc.sp());
        EXPECT(0x9bb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9bb4));
        // 9B 025B
        gbc.setState(0x96a9, 0xd2b0, 0xd370, 0xea47, 0xf047, 0x6101, 0x1, 0x0);
        gbc.writeMem(0x96a9, { 0x9b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd2b0, gbc.sp());
        EXPECT(0x96aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x96a9));
        // 9B 025C
        gbc.setState(0xe73a, 0xe177, 0x4040, 0xffb1, 0xbbec, 0x40d6, 0x1, 0x0);
        gbc.writeMem(0xe73a, { 0x9b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe177, gbc.sp());
        EXPECT(0xe73b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe73a));
        // 9B 025D
        gbc.setState(0x6a67, 0xae46, 0x55e0, 0xc9b7, 0x4790, 0xe628, 0x1, 0x1);
        gbc.writeMem(0x6a67, { 0x9b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xae46, gbc.sp());
        EXPECT(0x6a68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 025E
        gbc.setState(0xd85d, 0xa64e, 0xb5f0, 0xf3db, 0xbf5a, 0x5993, 0x0, 0x0);
        gbc.writeMem(0xd85d, { 0x9b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa64e, gbc.sp());
        EXPECT(0xd85e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd85d));
        // 9B 025F
        gbc.setState(0x11bd, 0x904a, 0xd0f0, 0x65a4, 0x3f7e, 0x90, 0x0, 0x0);
        gbc.writeMem(0x11bd, { 0x9b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x904a, gbc.sp());
        EXPECT(0x11be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0260
        gbc.setState(0xabee, 0x4a1b, 0x3890, 0x838f, 0x2b89, 0x6e99, 0x1, 0x0);
        gbc.writeMem(0xabee, { 0x9b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4a1b, gbc.sp());
        EXPECT(0xabef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xabee));
        // 9B 0261
        gbc.setState(0x3a9b, 0x34b, 0xb940, 0xd663, 0x15a6, 0xdbc4, 0x1, 0x0);
        gbc.writeMem(0x3a9b, { 0x9b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x34b, gbc.sp());
        EXPECT(0x3a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0262
        gbc.setState(0xb018, 0xbc74, 0xc520, 0x7e91, 0x9adf, 0x4d68, 0x0, 0x0);
        gbc.writeMem(0xb018, { 0x9b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbc74, gbc.sp());
        EXPECT(0xb019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb018));
        // 9B 0263
        gbc.setState(0xdf16, 0xa3a3, 0xd760, 0x5cd8, 0xe592, 0xc413, 0x1, 0x1);
        gbc.writeMem(0xdf16, { 0x9b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa3a3, gbc.sp());
        EXPECT(0xdf17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xdf16));
        // 9B 0264
        gbc.setState(0x9243, 0xeba3, 0xd30, 0xb08f, 0x69bd, 0xad8f, 0x1, 0x0);
        gbc.writeMem(0x9243, { 0x9b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xeba3, gbc.sp());
        EXPECT(0x9244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9243));
        // 9B 0265
        gbc.setState(0x1fa5, 0xdefa, 0x8a0, 0xda61, 0xcc13, 0xbd08, 0x1, 0x1);
        gbc.writeMem(0x1fa5, { 0x9b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xdefa, gbc.sp());
        EXPECT(0x1fa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0266
        gbc.setState(0xaaaf, 0x3053, 0x25e0, 0x2453, 0xd614, 0xcf4e, 0x1, 0x1);
        gbc.writeMem(0xaaaf, { 0x9b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3053, gbc.sp());
        EXPECT(0xaab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xaaaf));
        // 9B 0267
        gbc.setState(0x4bac, 0x60ba, 0x6910, 0x7f08, 0xabe8, 0x6601, 0x0, 0x1);
        gbc.writeMem(0x4bac, { 0x9b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x60ba, gbc.sp());
        EXPECT(0x4bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0268
        gbc.setState(0x8d5, 0x47fe, 0x78a0, 0x5f14, 0x77a6, 0xaf2a, 0x0, 0x0);
        gbc.writeMem(0x8d5, { 0x9b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x47fe, gbc.sp());
        EXPECT(0x8d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0269
        gbc.setState(0x847c, 0x92f6, 0x91e0, 0x6937, 0x2bb, 0xa2af, 0x0, 0x1);
        gbc.writeMem(0x847c, { 0x9b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x92f6, gbc.sp());
        EXPECT(0x847d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x847c));
        // 9B 026A
        gbc.setState(0xb0, 0xdad, 0x47a0, 0xaae7, 0x7de7, 0x31de, 0x1, 0x1);
        gbc.writeMem(0xb0, { 0x9b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xdad, gbc.sp());
        EXPECT(0xb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 026B
        gbc.setState(0x9771, 0x24d4, 0x19e0, 0x3bc9, 0xf634, 0x44d9, 0x1, 0x0);
        gbc.writeMem(0x9771, { 0x9b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x24d4, gbc.sp());
        EXPECT(0x9772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9771));
        // 9B 026C
        gbc.setState(0xe255, 0xc918, 0xeec0, 0x105d, 0x5ea2, 0x4a35, 0x0, 0x0);
        gbc.writeMem(0xe255, { 0x9b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc918, gbc.sp());
        EXPECT(0xe256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe255));
        // 9B 026E
        gbc.setState(0xadb6, 0xa305, 0x20, 0xad42, 0x6d30, 0xf12d, 0x0, 0x0);
        gbc.writeMem(0xadb6, { 0x9b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa305, gbc.sp());
        EXPECT(0xadb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xadb6));
        // 9B 026F
        gbc.setState(0xc4e1, 0xc6df, 0xdff0, 0xe4f5, 0x890a, 0xbdc6, 0x1, 0x0);
        gbc.writeMem(0xc4e1, { 0x9b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc6df, gbc.sp());
        EXPECT(0xc4e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc4e1));
        // 9B 0270
        gbc.setState(0xabb1, 0xb4d1, 0x4200, 0x2b95, 0xc577, 0x855b, 0x1, 0x1);
        gbc.writeMem(0xabb1, { 0x9b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb4d1, gbc.sp());
        EXPECT(0xabb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xabb1));
        // 9B 0271
        gbc.setState(0xb152, 0x9f5, 0xd8a0, 0xd520, 0x51e5, 0x3a0a, 0x1, 0x1);
        gbc.writeMem(0xb152, { 0x9b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9f5, gbc.sp());
        EXPECT(0xb153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb152));
        // 9B 0273
        gbc.setState(0x97f1, 0xb3d0, 0xf220, 0x7795, 0x643a, 0x5845, 0x1, 0x0);
        gbc.writeMem(0x97f1, { 0x9b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb3d0, gbc.sp());
        EXPECT(0x97f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x97f1));
        // 9B 0274
        gbc.setState(0x4e4c, 0x832c, 0xab90, 0x5cda, 0x4bc4, 0xa6c7, 0x1, 0x0);
        gbc.writeMem(0x4e4c, { 0x9b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x832c, gbc.sp());
        EXPECT(0x4e4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0275
        gbc.setState(0xcf28, 0xff8f, 0xa360, 0x67e2, 0x7991, 0x2f9a, 0x1, 0x0);
        gbc.writeMem(0xcf28, { 0x9b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xff8f, gbc.sp());
        EXPECT(0xcf29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xcf28));
        // 9B 0276
        gbc.setState(0x6d63, 0x78a6, 0x8fa0, 0x29af, 0xe959, 0xff38, 0x0, 0x0);
        gbc.writeMem(0x6d63, { 0x9b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x78a6, gbc.sp());
        EXPECT(0x6d64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0278
        gbc.setState(0x9b, 0x5978, 0xb340, 0x155f, 0x63b, 0x39cc, 0x1, 0x1);
        gbc.writeMem(0x9b, { 0x9b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5978, gbc.sp());
        EXPECT(0x9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0279
        gbc.setState(0xa45d, 0xda79, 0xa330, 0xe6f5, 0x7400, 0x2027, 0x0, 0x1);
        gbc.writeMem(0xa45d, { 0x9b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xda79, gbc.sp());
        EXPECT(0xa45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa45d));
        // 9B 027A
        gbc.setState(0xe809, 0x8a68, 0x5350, 0x358e, 0xb777, 0x1f7e, 0x0, 0x1);
        gbc.writeMem(0xe809, { 0x9b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8a68, gbc.sp());
        EXPECT(0xe80a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe809));
        // 9B 027B
        gbc.setState(0x6bb9, 0x13cf, 0x5e70, 0xc63, 0xadda, 0x2c42, 0x0, 0x1);
        gbc.writeMem(0x6bb9, { 0x9b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x13cf, gbc.sp());
        EXPECT(0x6bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 027C
        gbc.setState(0x7fad, 0x6488, 0x63a0, 0x76e1, 0x5a0c, 0xfc7f, 0x0, 0x0);
        gbc.writeMem(0x7fad, { 0x9b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6488, gbc.sp());
        EXPECT(0x7fae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 027D
        gbc.setState(0x3f24, 0x8cf8, 0xb770, 0x12da, 0x68f, 0x1ddb, 0x1, 0x0);
        gbc.writeMem(0x3f24, { 0x9b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8cf8, gbc.sp());
        EXPECT(0x3f25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 027E
        gbc.setState(0xd075, 0x527c, 0x3840, 0xeee0, 0x7865, 0x9010, 0x0, 0x1);
        gbc.writeMem(0xd075, { 0x9b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x527c, gbc.sp());
        EXPECT(0xd076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd075));
        // 9B 027F
        gbc.setState(0x77f4, 0x9caf, 0x8110, 0xd01, 0x6398, 0xa81a, 0x0, 0x0);
        gbc.writeMem(0x77f4, { 0x9b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9caf, gbc.sp());
        EXPECT(0x77f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0280
        gbc.setState(0xd867, 0x664a, 0x7020, 0x4c85, 0xcd68, 0x8a06, 0x1, 0x0);
        gbc.writeMem(0xd867, { 0x9b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x664a, gbc.sp());
        EXPECT(0xd868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd867));
        // 9B 0281
        gbc.setState(0x89cb, 0xc3f0, 0x2780, 0xf130, 0xc77e, 0x477f, 0x0, 0x1);
        gbc.writeMem(0x89cb, { 0x9b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc3f0, gbc.sp());
        EXPECT(0x89cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x89cb));
        // 9B 0282
        gbc.setState(0xd3a4, 0x4573, 0xe70, 0xeb08, 0x7e96, 0x9231, 0x0, 0x0);
        gbc.writeMem(0xd3a4, { 0x9b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4573, gbc.sp());
        EXPECT(0xd3a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd3a4));
        // 9B 0283
        gbc.setState(0x95e4, 0x38b, 0x42f0, 0x6185, 0x5250, 0xa0c2, 0x0, 0x1);
        gbc.writeMem(0x95e4, { 0x9b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x38b, gbc.sp());
        EXPECT(0x95e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x95e4));
        // 9B 0285
        gbc.setState(0xe387, 0x226d, 0xe8d0, 0xdd44, 0x59e4, 0x4190, 0x0, 0x1);
        gbc.writeMem(0xe387, { 0x9b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x226d, gbc.sp());
        EXPECT(0xe388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe387));
        // 9B 0286
        gbc.setState(0x5782, 0xb247, 0xa640, 0xd28, 0x37f4, 0xd299, 0x1, 0x1);
        gbc.writeMem(0x5782, { 0x9b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb247, gbc.sp());
        EXPECT(0x5783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0287
        gbc.setState(0xe7cc, 0xce7e, 0x210, 0x4eea, 0x844e, 0xd146, 0x0, 0x0);
        gbc.writeMem(0xe7cc, { 0x9b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xce7e, gbc.sp());
        EXPECT(0xe7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe7cc));
        // 9B 0288
        gbc.setState(0x32c3, 0x7c2a, 0x8520, 0x4842, 0x846b, 0xfd87, 0x1, 0x0);
        gbc.writeMem(0x32c3, { 0x9b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7c2a, gbc.sp());
        EXPECT(0x32c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0289
        gbc.setState(0xe1da, 0xf864, 0xf2a0, 0x65b8, 0x41ac, 0x8d38, 0x1, 0x0);
        gbc.writeMem(0xe1da, { 0x9b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf864, gbc.sp());
        EXPECT(0xe1db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe1da));
        // 9B 028A
        gbc.setState(0xd491, 0x36f1, 0x6c70, 0x9c30, 0xfebc, 0x324a, 0x0, 0x1);
        gbc.writeMem(0xd491, { 0x9b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x36f1, gbc.sp());
        EXPECT(0xd492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd491));
        // 9B 028B
        gbc.setState(0xd5b1, 0x99eb, 0xe9b0, 0x7c38, 0xd9d, 0xff56, 0x1, 0x1);
        gbc.writeMem(0xd5b1, { 0x9b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x99eb, gbc.sp());
        EXPECT(0xd5b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd5b1));
        // 9B 028C
        gbc.setState(0x7969, 0xa30c, 0xfe20, 0x9fcb, 0xb329, 0x861b, 0x1, 0x1);
        gbc.writeMem(0x7969, { 0x9b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa30c, gbc.sp());
        EXPECT(0x796a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 028E
        gbc.setState(0xd764, 0x59cf, 0x2fa0, 0x7e07, 0x661e, 0x3e26, 0x1, 0x0);
        gbc.writeMem(0xd764, { 0x9b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x59cf, gbc.sp());
        EXPECT(0xd765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd764));
        // 9B 028F
        gbc.setState(0x8a56, 0xf029, 0xf4d0, 0x6699, 0x6545, 0x50bf, 0x1, 0x1);
        gbc.writeMem(0x8a56, { 0x9b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf029, gbc.sp());
        EXPECT(0x8a57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8a56));
        // 9B 0290
        gbc.setState(0x99c4, 0x2081, 0xe850, 0xc5a5, 0xc6db, 0x249, 0x1, 0x1);
        gbc.writeMem(0x99c4, { 0x9b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2081, gbc.sp());
        EXPECT(0x99c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x99c4));
        // 9B 0291
        gbc.setState(0xa2fb, 0x5608, 0xa9f0, 0xd32b, 0x716b, 0xc126, 0x0, 0x0);
        gbc.writeMem(0xa2fb, { 0x9b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5608, gbc.sp());
        EXPECT(0xa2fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa2fb));
        // 9B 0292
        gbc.setState(0x3fdc, 0x11e4, 0x27f0, 0x5f59, 0xe78b, 0x65da, 0x0, 0x0);
        gbc.writeMem(0x3fdc, { 0x9b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x11e4, gbc.sp());
        EXPECT(0x3fdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0293
        gbc.setState(0xca57, 0x924, 0xf610, 0xb3b0, 0x37f0, 0x3a97, 0x0, 0x1);
        gbc.writeMem(0xca57, { 0x9b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x924, gbc.sp());
        EXPECT(0xca58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xca57));
        // 9B 0294
        gbc.setState(0x4cf, 0xa11e, 0x2fb0, 0xd9c7, 0xed39, 0xd59c, 0x1, 0x1);
        gbc.writeMem(0x4cf, { 0x9b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa11e, gbc.sp());
        EXPECT(0x4d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0295
        gbc.setState(0x3c98, 0x1ea0, 0x4f40, 0xc594, 0x4edf, 0x286e, 0x0, 0x1);
        gbc.writeMem(0x3c98, { 0x9b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1ea0, gbc.sp());
        EXPECT(0x3c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0296
        gbc.setState(0x386a, 0xab11, 0x9100, 0x59fa, 0x263e, 0x51fa, 0x1, 0x0);
        gbc.writeMem(0x386a, { 0x9b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xab11, gbc.sp());
        EXPECT(0x386b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0297
        gbc.setState(0x94dc, 0xbaf4, 0x2a50, 0x6c00, 0x850e, 0xea6c, 0x1, 0x0);
        gbc.writeMem(0x94dc, { 0x9b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbaf4, gbc.sp());
        EXPECT(0x94dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x94dc));
        // 9B 0298
        gbc.setState(0x9c71, 0xcaa5, 0x2e40, 0x1462, 0x944e, 0x8f01, 0x1, 0x1);
        gbc.writeMem(0x9c71, { 0x9b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xcaa5, gbc.sp());
        EXPECT(0x9c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9c71));
        // 9B 0299
        gbc.setState(0x201a, 0xfedd, 0xfa0, 0x1487, 0xe5cb, 0x8f1d, 0x1, 0x1);
        gbc.writeMem(0x201a, { 0x9b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfedd, gbc.sp());
        EXPECT(0x201b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 029A
        gbc.setState(0xcaab, 0xda0f, 0xf290, 0x5494, 0x596, 0x8c28, 0x1, 0x1);
        gbc.writeMem(0xcaab, { 0x9b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xda0f, gbc.sp());
        EXPECT(0xcaac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xcaab));
        // 9B 029B
        gbc.setState(0x37da, 0xde68, 0xce70, 0x369, 0x485d, 0x529e, 0x1, 0x1);
        gbc.writeMem(0x37da, { 0x9b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xde68, gbc.sp());
        EXPECT(0x37db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 029C
        gbc.setState(0xe3d6, 0xf438, 0x5990, 0x5a68, 0x7d6, 0x109d, 0x1, 0x1);
        gbc.writeMem(0xe3d6, { 0x9b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf438, gbc.sp());
        EXPECT(0xe3d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe3d6));
        // 9B 029D
        gbc.setState(0xdca3, 0x6a5a, 0x98e0, 0x6e4c, 0xd05c, 0x607, 0x0, 0x1);
        gbc.writeMem(0xdca3, { 0x9b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6a5a, gbc.sp());
        EXPECT(0xdca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xdca3));
        // 9B 029E
        gbc.setState(0x7e86, 0x1297, 0xfa20, 0x9384, 0x6d47, 0x7df1, 0x1, 0x0);
        gbc.writeMem(0x7e86, { 0x9b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1297, gbc.sp());
        EXPECT(0x7e87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 029F
        gbc.setState(0xd2ab, 0xf621, 0x7c60, 0x19fb, 0xbf2d, 0xc6f2, 0x1, 0x0);
        gbc.writeMem(0xd2ab, { 0x9b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf621, gbc.sp());
        EXPECT(0xd2ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd2ab));
        // 9B 02A0
        gbc.setState(0x86f4, 0x6479, 0x1640, 0xc00, 0x9b73, 0x879a, 0x1, 0x1);
        gbc.writeMem(0x86f4, { 0x9b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6479, gbc.sp());
        EXPECT(0x86f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x86f4));
        // 9B 02A1
        gbc.setState(0x9dd1, 0x104, 0xeb30, 0xdb59, 0xc5de, 0x88a2, 0x1, 0x0);
        gbc.writeMem(0x9dd1, { 0x9b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x104, gbc.sp());
        EXPECT(0x9dd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9dd1));
        // 9B 02A2
        gbc.setState(0xe2e4, 0x2706, 0x5c60, 0x9931, 0x276a, 0xf452, 0x1, 0x0);
        gbc.writeMem(0xe2e4, { 0x9b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2706, gbc.sp());
        EXPECT(0xe2e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe2e4));
        // 9B 02A3
        gbc.setState(0x420a, 0xa747, 0xc0a0, 0xbfaf, 0x7e31, 0xee59, 0x1, 0x1);
        gbc.writeMem(0x420a, { 0x9b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa747, gbc.sp());
        EXPECT(0x420b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 02A4
        gbc.setState(0x6400, 0xad7f, 0xb3a0, 0xb100, 0x4838, 0x9f9b, 0x0, 0x1);
        gbc.writeMem(0x6400, { 0x9b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xad7f, gbc.sp());
        EXPECT(0x6401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 02A5
        gbc.setState(0x57d, 0x55fa, 0xf1b0, 0xfd04, 0xfb, 0x1373, 0x1, 0x0);
        gbc.writeMem(0x57d, { 0x9b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x55fa, gbc.sp());
        EXPECT(0x57e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 02A6
        gbc.setState(0xdf58, 0xe8eb, 0xe980, 0xe7bb, 0x57e2, 0xd81c, 0x0, 0x0);
        gbc.writeMem(0xdf58, { 0x9b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe8eb, gbc.sp());
        EXPECT(0xdf59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xdf58));
        // 9B 02A7
        gbc.setState(0xd9e1, 0xfcb3, 0x46c0, 0x5704, 0x6753, 0xa01, 0x0, 0x1);
        gbc.writeMem(0xd9e1, { 0x9b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xfcb3, gbc.sp());
        EXPECT(0xd9e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd9e1));
        // 9B 02A8
        gbc.setState(0x2615, 0x4db6, 0x4e50, 0xd066, 0x41b3, 0x5de3, 0x0, 0x0);
        gbc.writeMem(0x2615, { 0x9b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4db6, gbc.sp());
        EXPECT(0x2616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 02A9
        gbc.setState(0x110c, 0x25c1, 0xe1a0, 0x5db0, 0xf92e, 0x770c, 0x0, 0x1);
        gbc.writeMem(0x110c, { 0x9b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x25c1, gbc.sp());
        EXPECT(0x110d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 02AA
        gbc.setState(0x70fc, 0x8c87, 0xe9b0, 0x69a2, 0x6bd5, 0x5acb, 0x0, 0x1);
        gbc.writeMem(0x70fc, { 0x9b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8c87, gbc.sp());
        EXPECT(0x70fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 02AB
        gbc.setState(0x97bb, 0x3170, 0x6b20, 0x6045, 0x784b, 0x4c35, 0x0, 0x1);
        gbc.writeMem(0x97bb, { 0x9b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3170, gbc.sp());
        EXPECT(0x97bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x97bb));
        // 9B 02AC
        gbc.setState(0xe388, 0xe9a, 0x68d0, 0xca83, 0xc75, 0x4eaa, 0x1, 0x1);
        gbc.writeMem(0xe388, { 0x9b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe9a, gbc.sp());
        EXPECT(0xe389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe388));
        // 9B 02AD
        gbc.setState(0x4c52, 0xf1b4, 0x1bf0, 0xd912, 0x80eb, 0xbd72, 0x0, 0x1);
        gbc.writeMem(0x4c52, { 0x9b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf1b4, gbc.sp());
        EXPECT(0x4c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 02AE
        gbc.setState(0x11f2, 0x5a8f, 0x6a40, 0x1522, 0x243e, 0xa8d1, 0x0, 0x0);
        gbc.writeMem(0x11f2, { 0x9b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5a8f, gbc.sp());
        EXPECT(0x11f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 02AF
        gbc.setState(0x7ca8, 0x8a33, 0x9e20, 0xa3a9, 0x897, 0x2e6b, 0x0, 0x0);
        gbc.writeMem(0x7ca8, { 0x9b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8a33, gbc.sp());
        EXPECT(0x7ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 02B0
        gbc.setState(0xb9bd, 0x5b90, 0x9c70, 0x895e, 0xc62f, 0x5166, 0x1, 0x0);
        gbc.writeMem(0xb9bd, { 0x9b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5b90, gbc.sp());
        EXPECT(0xb9be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb9bd));
        // 9B 02B1
        gbc.setState(0x1db5, 0x2972, 0x2620, 0x6870, 0x7abf, 0x9a8d, 0x0, 0x0);
        gbc.writeMem(0x1db5, { 0x9b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2972, gbc.sp());
        EXPECT(0x1db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 02B2
        gbc.setState(0xa337, 0xdf27, 0x2a90, 0x5ba8, 0xaa0b, 0x3783, 0x0, 0x0);
        gbc.writeMem(0xa337, { 0x9b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdf27, gbc.sp());
        EXPECT(0xa338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa337));
        // 9B 02B3
        gbc.setState(0x1a1c, 0xc8d8, 0x49b0, 0xa28c, 0x234, 0x1fd6, 0x1, 0x1);
        gbc.writeMem(0x1a1c, { 0x9b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc8d8, gbc.sp());
        EXPECT(0x1a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 02B4
        gbc.setState(0xa40b, 0xf776, 0x69c0, 0x2189, 0x7f3, 0x9093, 0x1, 0x1);
        gbc.writeMem(0xa40b, { 0x9b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf776, gbc.sp());
        EXPECT(0xa40c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa40b));
        // 9B 02B5
        gbc.setState(0xb88f, 0x2b1e, 0x1530, 0x3368, 0x7e5b, 0x404b, 0x1, 0x1);
        gbc.writeMem(0xb88f, { 0x9b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2b1e, gbc.sp());
        EXPECT(0xb890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb88f));
        // 9B 02B6
        gbc.setState(0x41a2, 0xe254, 0x8620, 0xe1f8, 0x24f, 0x4601, 0x1, 0x1);
        gbc.writeMem(0x41a2, { 0x9b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe254, gbc.sp());
        EXPECT(0x41a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 02B7
        gbc.setState(0xc265, 0xb4f1, 0xba80, 0xfcb3, 0x73d7, 0x1631, 0x0, 0x1);
        gbc.writeMem(0xc265, { 0x9b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb4f1, gbc.sp());
        EXPECT(0xc266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc265));
        // 9B 02B8
        gbc.setState(0x5285, 0x80b6, 0xe3d0, 0xf779, 0xf219, 0xb5ca, 0x1, 0x0);
        gbc.writeMem(0x5285, { 0x9b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x80b6, gbc.sp());
        EXPECT(0x5286, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 02B9
        gbc.setState(0x6c52, 0xd172, 0x49a0, 0x7c83, 0xd906, 0x5308, 0x0, 0x1);
        gbc.writeMem(0x6c52, { 0x9b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd172, gbc.sp());
        EXPECT(0x6c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 02BA
        gbc.setState(0xe938, 0x8b5e, 0x72c0, 0x6806, 0x85c3, 0xad73, 0x1, 0x0);
        gbc.writeMem(0xe938, { 0x9b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8b5e, gbc.sp());
        EXPECT(0xe939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe938));
        // 9B 02BB
        gbc.setState(0x38a8, 0x6a77, 0x2ca0, 0xc31d, 0x9a11, 0xea21, 0x1, 0x0);
        gbc.writeMem(0x38a8, { 0x9b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6a77, gbc.sp());
        EXPECT(0x38a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 02BD
        gbc.setState(0xba11, 0x72a9, 0x9b30, 0x9c2d, 0xf134, 0xfc38, 0x0, 0x0);
        gbc.writeMem(0xba11, { 0x9b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x72a9, gbc.sp());
        EXPECT(0xba12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xba11));
        // 9B 02BE
        gbc.setState(0xa1ae, 0xfe6a, 0xe020, 0x6bd6, 0xecb1, 0x40, 0x1, 0x1);
        gbc.writeMem(0xa1ae, { 0x9b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xfe6a, gbc.sp());
        EXPECT(0xa1af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa1ae));
        // 9B 02BF
        gbc.setState(0xb30d, 0x6f94, 0x2b50, 0x2c0d, 0xa0da, 0xba77, 0x0, 0x1);
        gbc.writeMem(0xb30d, { 0x9b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6f94, gbc.sp());
        EXPECT(0xb30e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb30d));
        // 9B 02C0
        gbc.setState(0x211d, 0x328e, 0xd0e0, 0xd38d, 0xf562, 0x1f43, 0x0, 0x1);
        gbc.writeMem(0x211d, { 0x9b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x328e, gbc.sp());
        EXPECT(0x211e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 02C1
        gbc.setState(0x4f25, 0xfbff, 0xac90, 0xb249, 0x5d0c, 0x1875, 0x0, 0x0);
        gbc.writeMem(0x4f25, { 0x9b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfbff, gbc.sp());
        EXPECT(0x4f26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 02C2
        gbc.setState(0x61a8, 0x3575, 0x9290, 0x24ea, 0xdbce, 0xdf82, 0x1, 0x0);
        gbc.writeMem(0x61a8, { 0x9b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3575, gbc.sp());
        EXPECT(0x61a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 02C3
        gbc.setState(0x8c20, 0x2062, 0x40d0, 0x3b6e, 0xb829, 0x4d89, 0x0, 0x1);
        gbc.writeMem(0x8c20, { 0x9b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2062, gbc.sp());
        EXPECT(0x8c21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8c20));
        // 9B 02C4
        gbc.setState(0x665, 0xc95a, 0x7a60, 0x3e0e, 0x12ea, 0x60c7, 0x0, 0x1);
        gbc.writeMem(0x665, { 0x9b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc95a, gbc.sp());
        EXPECT(0x666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 02C6
        gbc.setState(0x5948, 0xf2c7, 0x4140, 0x9c46, 0xf90d, 0x4357, 0x0, 0x1);
        gbc.writeMem(0x5948, { 0x9b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf2c7, gbc.sp());
        EXPECT(0x5949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 02C8
        gbc.setState(0xa74f, 0xf23b, 0x7490, 0xf710, 0x253a, 0xccda, 0x1, 0x0);
        gbc.writeMem(0xa74f, { 0x9b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf23b, gbc.sp());
        EXPECT(0xa750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa74f));
        // 9B 02C9
        gbc.setState(0xda1d, 0xc2d1, 0x2600, 0xbcb6, 0x3baa, 0x9737, 0x1, 0x1);
        gbc.writeMem(0xda1d, { 0x9b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc2d1, gbc.sp());
        EXPECT(0xda1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xda1d));
        // 9B 02CA
        gbc.setState(0xa689, 0x8b60, 0x1d50, 0x3fd6, 0x658, 0xca2c, 0x1, 0x1);
        gbc.writeMem(0xa689, { 0x9b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8b60, gbc.sp());
        EXPECT(0xa68a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa689));
        // 9B 02CB
        gbc.setState(0xc878, 0xc3ac, 0xf9a0, 0x2454, 0xeb28, 0x6fd2, 0x1, 0x1);
        gbc.writeMem(0xc878, { 0x9b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc3ac, gbc.sp());
        EXPECT(0xc879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc878));
        // 9B 02CC
        gbc.setState(0x7f4b, 0xb7e6, 0x9360, 0xbb82, 0x359c, 0xe1c7, 0x1, 0x1);
        gbc.writeMem(0x7f4b, { 0x9b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb7e6, gbc.sp());
        EXPECT(0x7f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 02CD
        gbc.setState(0xd735, 0x6c6, 0xfbe0, 0xbd72, 0xd28f, 0x70e3, 0x1, 0x0);
        gbc.writeMem(0xd735, { 0x9b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6c6, gbc.sp());
        EXPECT(0xd736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd735));
        // 9B 02CE
        gbc.setState(0xd261, 0x58f1, 0x4e80, 0x4328, 0xb133, 0x5f5, 0x1, 0x0);
        gbc.writeMem(0xd261, { 0x9b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x58f1, gbc.sp());
        EXPECT(0xd262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd261));
        // 9B 02CF
        gbc.setState(0x7478, 0xc65b, 0x3b20, 0x4466, 0x6781, 0xf122, 0x0, 0x0);
        gbc.writeMem(0x7478, { 0x9b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc65b, gbc.sp());
        EXPECT(0x7479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 02D0
        gbc.setState(0xdf6b, 0x7625, 0xad60, 0x9419, 0xb0b4, 0x97c0, 0x1, 0x0);
        gbc.writeMem(0xdf6b, { 0x9b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7625, gbc.sp());
        EXPECT(0xdf6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xdf6b));
        // 9B 02D1
        gbc.setState(0x7025, 0xe7aa, 0x6440, 0x7866, 0x4090, 0x29aa, 0x1, 0x1);
        gbc.writeMem(0x7025, { 0x9b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe7aa, gbc.sp());
        EXPECT(0x7026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 02D2
        gbc.setState(0x70ea, 0x8b2b, 0x6d0, 0xfbba, 0x444d, 0x2128, 0x1, 0x0);
        gbc.writeMem(0x70ea, { 0x9b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8b2b, gbc.sp());
        EXPECT(0x70eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 02D3
        gbc.setState(0x1d52, 0x9cdc, 0xad0, 0xbfac, 0x71, 0x59fe, 0x1, 0x0);
        gbc.writeMem(0x1d52, { 0x9b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9cdc, gbc.sp());
        EXPECT(0x1d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 02D4
        gbc.setState(0xb9ac, 0x118e, 0x6cf0, 0xee5f, 0x7a09, 0xabbb, 0x1, 0x0);
        gbc.writeMem(0xb9ac, { 0x9b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x118e, gbc.sp());
        EXPECT(0xb9ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb9ac));
        // 9B 02D5
        gbc.setState(0x2bfd, 0x9c00, 0xce0, 0xf40d, 0x9156, 0xb6e8, 0x0, 0x0);
        gbc.writeMem(0x2bfd, { 0x9b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9c00, gbc.sp());
        EXPECT(0x2bfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 02D6
        gbc.setState(0xb5d9, 0x5671, 0x5640, 0x8fcf, 0xf01e, 0x53f4, 0x0, 0x0);
        gbc.writeMem(0xb5d9, { 0x9b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5671, gbc.sp());
        EXPECT(0xb5da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb5d9));
        // 9B 02D7
        gbc.setState(0x1f2e, 0x4e8, 0x27d0, 0xe64a, 0xf293, 0x62da, 0x0, 0x1);
        gbc.writeMem(0x1f2e, { 0x9b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4e8, gbc.sp());
        EXPECT(0x1f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 02D8
        gbc.setState(0x93c4, 0xcdff, 0x4250, 0xcf66, 0x1bff, 0xc8e8, 0x0, 0x1);
        gbc.writeMem(0x93c4, { 0x9b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xcdff, gbc.sp());
        EXPECT(0x93c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x93c4));
        // 9B 02DA
        gbc.setState(0xada6, 0x7389, 0x1060, 0x547b, 0x505d, 0x8095, 0x1, 0x0);
        gbc.writeMem(0xada6, { 0x9b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7389, gbc.sp());
        EXPECT(0xada7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xada6));
        // 9B 02DB
        gbc.setState(0xc9d1, 0xfc95, 0xc9f0, 0x9c4a, 0x2024, 0x4577, 0x0, 0x0);
        gbc.writeMem(0xc9d1, { 0x9b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xfc95, gbc.sp());
        EXPECT(0xc9d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc9d1));
        // 9B 02DC
        gbc.setState(0x824c, 0xa7ee, 0x7d60, 0x67c7, 0x3abb, 0xce39, 0x1, 0x0);
        gbc.writeMem(0x824c, { 0x9b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa7ee, gbc.sp());
        EXPECT(0x824d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x824c));
        // 9B 02DD
        gbc.setState(0x98fc, 0x1a47, 0xec50, 0x199b, 0xd840, 0xb530, 0x1, 0x1);
        gbc.writeMem(0x98fc, { 0x9b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1a47, gbc.sp());
        EXPECT(0x98fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x98fc));
        // 9B 02DE
        gbc.setState(0x681d, 0xbb8b, 0x6cf0, 0x7872, 0x63f5, 0x9fbb, 0x1, 0x1);
        gbc.writeMem(0x681d, { 0x9b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbb8b, gbc.sp());
        EXPECT(0x681e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 02DF
        gbc.setState(0xf7a, 0x21f4, 0x7380, 0x6aa, 0xdb5d, 0xec89, 0x1, 0x0);
        gbc.writeMem(0xf7a, { 0x9b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x21f4, gbc.sp());
        EXPECT(0xf7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 02E0
        gbc.setState(0x8951, 0xaba3, 0x50e0, 0x8a4f, 0x62ac, 0x5f2b, 0x0, 0x0);
        gbc.writeMem(0x8951, { 0x9b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xaba3, gbc.sp());
        EXPECT(0x8952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8951));
        // 9B 02E1
        gbc.setState(0x49bc, 0xe44d, 0x1c30, 0x79bb, 0xa23f, 0xa7c6, 0x0, 0x1);
        gbc.writeMem(0x49bc, { 0x9b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe44d, gbc.sp());
        EXPECT(0x49bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 02E2
        gbc.setState(0xe6d, 0x2c76, 0x7a00, 0x989, 0xaf57, 0x590d, 0x1, 0x1);
        gbc.writeMem(0xe6d, { 0x9b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2c76, gbc.sp());
        EXPECT(0xe6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 02E3
        gbc.setState(0x41f3, 0xe65f, 0x8490, 0x857d, 0x6cc1, 0xbf9, 0x0, 0x0);
        gbc.writeMem(0x41f3, { 0x9b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe65f, gbc.sp());
        EXPECT(0x41f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 02E4
        gbc.setState(0x83f3, 0xdfc9, 0x2590, 0xddf0, 0xeed, 0x60ba, 0x0, 0x1);
        gbc.writeMem(0x83f3, { 0x9b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xdfc9, gbc.sp());
        EXPECT(0x83f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x83f3));
        // 9B 02E5
        gbc.setState(0x5938, 0x316a, 0x2fa0, 0xe3be, 0xb99e, 0x1ad8, 0x1, 0x0);
        gbc.writeMem(0x5938, { 0x9b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x316a, gbc.sp());
        EXPECT(0x5939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 02E7
        gbc.setState(0xe021, 0x929, 0xffe0, 0x5426, 0xa1e4, 0xc7fd, 0x0, 0x0);
        gbc.writeMem(0xe021, { 0x9b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x929, gbc.sp());
        EXPECT(0xe022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe021));
        // 9B 02E8
        gbc.setState(0x8c76, 0xdca1, 0x42d0, 0xd59d, 0x4d9a, 0x4722, 0x0, 0x1);
        gbc.writeMem(0x8c76, { 0x9b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xdca1, gbc.sp());
        EXPECT(0x8c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8c76));
        // 9B 02E9
        gbc.setState(0x78fb, 0x3eb9, 0xf9a0, 0x2dd3, 0x5bc5, 0x436a, 0x1, 0x0);
        gbc.writeMem(0x78fb, { 0x9b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3eb9, gbc.sp());
        EXPECT(0x78fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 02EB
        gbc.setState(0x2d7a, 0xbb39, 0xf4c0, 0x36d4, 0x3c8e, 0x7d37, 0x0, 0x0);
        gbc.writeMem(0x2d7a, { 0x9b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbb39, gbc.sp());
        EXPECT(0x2d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 02EC
        gbc.setState(0xd5f6, 0x6307, 0xbca0, 0x2292, 0xb0cc, 0x9bc3, 0x0, 0x0);
        gbc.writeMem(0xd5f6, { 0x9b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6307, gbc.sp());
        EXPECT(0xd5f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd5f6));
        // 9B 02ED
        gbc.setState(0x6226, 0xbb3a, 0x1690, 0x2050, 0x3ad0, 0x2d02, 0x0, 0x0);
        gbc.writeMem(0x6226, { 0x9b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbb3a, gbc.sp());
        EXPECT(0x6227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 02EE
        gbc.setState(0x7d4f, 0x9671, 0xd8c0, 0x78e2, 0x56c7, 0x7e4, 0x0, 0x1);
        gbc.writeMem(0x7d4f, { 0x9b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9671, gbc.sp());
        EXPECT(0x7d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 02EF
        gbc.setState(0x91fd, 0x99fc, 0x3fc0, 0xab87, 0xc55a, 0xcc74, 0x0, 0x1);
        gbc.writeMem(0x91fd, { 0x9b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x99fc, gbc.sp());
        EXPECT(0x91fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x91fd));
        // 9B 02F0
        gbc.setState(0x4bdb, 0x2ed0, 0xfd80, 0xf652, 0x94bd, 0xc026, 0x1, 0x1);
        gbc.writeMem(0x4bdb, { 0x9b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2ed0, gbc.sp());
        EXPECT(0x4bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 02F1
        gbc.setState(0x25a5, 0x1dea, 0xad10, 0xf7a4, 0x6394, 0xa121, 0x1, 0x1);
        gbc.writeMem(0x25a5, { 0x9b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1dea, gbc.sp());
        EXPECT(0x25a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 02F3
        gbc.setState(0x62a7, 0x284e, 0x16e0, 0xabc8, 0xcd68, 0x761d, 0x0, 0x1);
        gbc.writeMem(0x62a7, { 0x9b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x284e, gbc.sp());
        EXPECT(0x62a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 02F4
        gbc.setState(0x97c1, 0x1429, 0x7190, 0xd871, 0xee3c, 0x9238, 0x1, 0x1);
        gbc.writeMem(0x97c1, { 0x9b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1429, gbc.sp());
        EXPECT(0x97c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x97c1));
        // 9B 02F5
        gbc.setState(0x9d96, 0x660d, 0x2de0, 0x74d9, 0x3d40, 0x968d, 0x1, 0x0);
        gbc.writeMem(0x9d96, { 0x9b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x660d, gbc.sp());
        EXPECT(0x9d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9d96));
        // 9B 02F6
        gbc.setState(0x579b, 0xf2a9, 0xf6e0, 0xaa05, 0x7a4a, 0x85d5, 0x1, 0x1);
        gbc.writeMem(0x579b, { 0x9b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf2a9, gbc.sp());
        EXPECT(0x579c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 02F7
        gbc.setState(0x4161, 0x8ec, 0x5b0, 0xf8dc, 0xc06f, 0x5aca, 0x1, 0x1);
        gbc.writeMem(0x4161, { 0x9b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8ec, gbc.sp());
        EXPECT(0x4162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 02F9
        gbc.setState(0x2f47, 0x189c, 0x9ff0, 0xc486, 0x97f5, 0xa7f9, 0x1, 0x1);
        gbc.writeMem(0x2f47, { 0x9b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x189c, gbc.sp());
        EXPECT(0x2f48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 02FC
        gbc.setState(0x841a, 0xb9b3, 0xed0, 0xfb2f, 0xa764, 0x8d52, 0x0, 0x1);
        gbc.writeMem(0x841a, { 0x9b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb9b3, gbc.sp());
        EXPECT(0x841b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x841a));
        // 9B 02FD
        gbc.setState(0xc92, 0xe0a5, 0x2870, 0x539f, 0x70aa, 0x6b3, 0x1, 0x0);
        gbc.writeMem(0xc92, { 0x9b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe0a5, gbc.sp());
        EXPECT(0xc93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 02FE
        gbc.setState(0x74c0, 0xe5fa, 0xfc00, 0xb00a, 0xe1bb, 0xed52, 0x1, 0x1);
        gbc.writeMem(0x74c0, { 0x9b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe5fa, gbc.sp());
        EXPECT(0x74c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 02FF
        gbc.setState(0x4365, 0xddca, 0x2500, 0x2f41, 0xd0af, 0x38b8, 0x0, 0x0);
        gbc.writeMem(0x4365, { 0x9b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xddca, gbc.sp());
        EXPECT(0x4366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0300
        gbc.setState(0x2983, 0x61d4, 0x2df0, 0x1a47, 0x4216, 0xef07, 0x0, 0x0);
        gbc.writeMem(0x2983, { 0x9b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x61d4, gbc.sp());
        EXPECT(0x2984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0301
        gbc.setState(0x98a3, 0x73a8, 0xe140, 0x913, 0xdf88, 0xe099, 0x0, 0x1);
        gbc.writeMem(0x98a3, { 0x9b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x73a8, gbc.sp());
        EXPECT(0x98a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x98a3));
        // 9B 0302
        gbc.setState(0x4f21, 0x3c14, 0xb220, 0xac7, 0x4b10, 0xecb6, 0x1, 0x0);
        gbc.writeMem(0x4f21, { 0x9b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3c14, gbc.sp());
        EXPECT(0x4f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0303
        gbc.setState(0x7772, 0xcfda, 0x56c0, 0xe706, 0x27ab, 0xa0e8, 0x0, 0x0);
        gbc.writeMem(0x7772, { 0x9b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xcfda, gbc.sp());
        EXPECT(0x7773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0304
        gbc.setState(0x197, 0x889a, 0x23d0, 0xc356, 0x11c1, 0x3f75, 0x0, 0x1);
        gbc.writeMem(0x197, { 0x9b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x889a, gbc.sp());
        EXPECT(0x198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0305
        gbc.setState(0x12ee, 0xeeb, 0x2560, 0x256f, 0x993d, 0xf3e2, 0x0, 0x1);
        gbc.writeMem(0x12ee, { 0x9b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xeeb, gbc.sp());
        EXPECT(0x12ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0306
        gbc.setState(0x53cd, 0xd548, 0x2200, 0x6251, 0x2b21, 0x5671, 0x0, 0x1);
        gbc.writeMem(0x53cd, { 0x9b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd548, gbc.sp());
        EXPECT(0x53ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0307
        gbc.setState(0xb3c0, 0x6d25, 0x9d40, 0x4324, 0xc193, 0x6673, 0x0, 0x0);
        gbc.writeMem(0xb3c0, { 0x9b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6d25, gbc.sp());
        EXPECT(0xb3c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb3c0));
        // 9B 0308
        gbc.setState(0x91cc, 0xa8c9, 0x1fd0, 0x7643, 0xf289, 0xa45c, 0x1, 0x1);
        gbc.writeMem(0x91cc, { 0x9b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa8c9, gbc.sp());
        EXPECT(0x91cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x91cc));
        // 9B 0309
        gbc.setState(0x2870, 0x6b99, 0x4750, 0x1ee8, 0xd26b, 0x231f, 0x0, 0x0);
        gbc.writeMem(0x2870, { 0x9b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6b99, gbc.sp());
        EXPECT(0x2871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 030A
        gbc.setState(0xc86d, 0x6fdb, 0xe4f0, 0x2e18, 0xdd69, 0xf376, 0x1, 0x0);
        gbc.writeMem(0xc86d, { 0x9b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6fdb, gbc.sp());
        EXPECT(0xc86e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc86d));
        // 9B 030B
        gbc.setState(0x14e, 0xe7dc, 0x34a0, 0xa170, 0xce75, 0xe9e3, 0x0, 0x0);
        gbc.writeMem(0x14e, { 0x9b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe7dc, gbc.sp());
        EXPECT(0x14f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 030C
        gbc.setState(0x2afd, 0x5336, 0xec60, 0x5121, 0xcc68, 0x4fb7, 0x0, 0x0);
        gbc.writeMem(0x2afd, { 0x9b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5336, gbc.sp());
        EXPECT(0x2afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 030D
        gbc.setState(0x2627, 0x41eb, 0xb640, 0xf85c, 0x5018, 0x5e1f, 0x0, 0x1);
        gbc.writeMem(0x2627, { 0x9b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x41eb, gbc.sp());
        EXPECT(0x2628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 030E
        gbc.setState(0xa008, 0x6361, 0xbac0, 0x3460, 0x184a, 0xcff3, 0x0, 0x0);
        gbc.writeMem(0xa008, { 0x9b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6361, gbc.sp());
        EXPECT(0xa009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa008));
        // 9B 030F
        gbc.setState(0xa02f, 0xd2dc, 0xc580, 0xd790, 0x39de, 0xc47e, 0x1, 0x1);
        gbc.writeMem(0xa02f, { 0x9b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd2dc, gbc.sp());
        EXPECT(0xa030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa02f));
        // 9B 0311
        gbc.setState(0xbf43, 0x192b, 0x7c60, 0x9fb6, 0x16a8, 0x5288, 0x1, 0x1);
        gbc.writeMem(0xbf43, { 0x9b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x192b, gbc.sp());
        EXPECT(0xbf44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbf43));
        // 9B 0312
        gbc.setState(0x9e84, 0x9365, 0xe050, 0x3956, 0xd191, 0xef60, 0x0, 0x1);
        gbc.writeMem(0x9e84, { 0x9b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9365, gbc.sp());
        EXPECT(0x9e85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9e84));
        // 9B 0313
        gbc.setState(0x3e52, 0x2b4d, 0x6700, 0x25e2, 0x231d, 0x5a23, 0x0, 0x0);
        gbc.writeMem(0x3e52, { 0x9b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2b4d, gbc.sp());
        EXPECT(0x3e53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0315
        gbc.setState(0x8795, 0x7343, 0x9290, 0x2b9a, 0x8b12, 0xb219, 0x0, 0x1);
        gbc.writeMem(0x8795, { 0x9b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7343, gbc.sp());
        EXPECT(0x8796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8795));
        // 9B 0316
        gbc.setState(0xbb9d, 0x3ef9, 0x6700, 0x2050, 0x4ca, 0xc4c7, 0x1, 0x0);
        gbc.writeMem(0xbb9d, { 0x9b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3ef9, gbc.sp());
        EXPECT(0xbb9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbb9d));
        // 9B 0317
        gbc.setState(0xc462, 0xbe1, 0x3c80, 0xfa97, 0x4a27, 0xfe0, 0x1, 0x1);
        gbc.writeMem(0xc462, { 0x9b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbe1, gbc.sp());
        EXPECT(0xc463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc462));
        // 9B 0318
        gbc.setState(0x4907, 0xd4fc, 0xfc40, 0xa452, 0x850c, 0x3ccb, 0x1, 0x0);
        gbc.writeMem(0x4907, { 0x9b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd4fc, gbc.sp());
        EXPECT(0x4908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0319
        gbc.setState(0x3213, 0x7503, 0x4ed0, 0x9bda, 0x6274, 0x5d89, 0x0, 0x0);
        gbc.writeMem(0x3213, { 0x9b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7503, gbc.sp());
        EXPECT(0x3214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 031A
        gbc.setState(0x2f27, 0x66a0, 0x7350, 0x29d8, 0xce6f, 0x54ff, 0x1, 0x0);
        gbc.writeMem(0x2f27, { 0x9b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x66a0, gbc.sp());
        EXPECT(0x2f28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 031C
        gbc.setState(0x94fb, 0xc309, 0x8190, 0xbe39, 0x3acf, 0xca8e, 0x1, 0x0);
        gbc.writeMem(0x94fb, { 0x9b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc309, gbc.sp());
        EXPECT(0x94fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x94fb));
        // 9B 031D
        gbc.setState(0x6906, 0x7c07, 0xc9e0, 0x2a38, 0x29c0, 0x572f, 0x1, 0x0);
        gbc.writeMem(0x6906, { 0x9b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7c07, gbc.sp());
        EXPECT(0x6907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 031E
        gbc.setState(0xc68c, 0x47d0, 0x62f0, 0x6329, 0x7620, 0x93ca, 0x0, 0x1);
        gbc.writeMem(0xc68c, { 0x9b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x47d0, gbc.sp());
        EXPECT(0xc68d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xc68c));
        // 9B 031F
        gbc.setState(0x689, 0x35f2, 0xc610, 0x6ad0, 0x54fc, 0xddc2, 0x1, 0x1);
        gbc.writeMem(0x689, { 0x9b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x35f2, gbc.sp());
        EXPECT(0x68a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0321
        gbc.setState(0x7a55, 0x14b0, 0x4ca0, 0xfaa9, 0x2987, 0x357c, 0x0, 0x1);
        gbc.writeMem(0x7a55, { 0x9b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x14b0, gbc.sp());
        EXPECT(0x7a56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0322
        gbc.setState(0x102a, 0x6f96, 0x5d40, 0x88a1, 0x3915, 0x88cc, 0x0, 0x0);
        gbc.writeMem(0x102a, { 0x9b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6f96, gbc.sp());
        EXPECT(0x102b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0323
        gbc.setState(0x3a6e, 0x28ab, 0x10f0, 0x81fe, 0xcc93, 0x8bcb, 0x0, 0x0);
        gbc.writeMem(0x3a6e, { 0x9b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x28ab, gbc.sp());
        EXPECT(0x3a6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0324
        gbc.setState(0x6a99, 0x1896, 0xce30, 0x9c0b, 0xa078, 0xd1f, 0x0, 0x1);
        gbc.writeMem(0x6a99, { 0x9b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1896, gbc.sp());
        EXPECT(0x6a9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0325
        gbc.setState(0xa3ee, 0xd8f7, 0xab60, 0x46ef, 0x1675, 0xc18a, 0x1, 0x1);
        gbc.writeMem(0xa3ee, { 0x9b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd8f7, gbc.sp());
        EXPECT(0xa3ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa3ee));
        // 9B 0326
        gbc.setState(0xb47d, 0x6598, 0x8970, 0x4529, 0xf7c, 0x735a, 0x1, 0x0);
        gbc.writeMem(0xb47d, { 0x9b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6598, gbc.sp());
        EXPECT(0xb47e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb47d));
        // 9B 0327
        gbc.setState(0x709a, 0x5225, 0x3af0, 0x61cd, 0xc1c8, 0xb3cd, 0x0, 0x0);
        gbc.writeMem(0x709a, { 0x9b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5225, gbc.sp());
        EXPECT(0x709b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0328
        gbc.setState(0x2d87, 0xc1b4, 0x2fe0, 0xb095, 0x452f, 0x18e1, 0x1, 0x0);
        gbc.writeMem(0x2d87, { 0x9b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc1b4, gbc.sp());
        EXPECT(0x2d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0329
        gbc.setState(0x9362, 0x5bab, 0x36a0, 0x424e, 0xadbd, 0x65d1, 0x1, 0x1);
        gbc.writeMem(0x9362, { 0x9b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5bab, gbc.sp());
        EXPECT(0x9363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9362));
        // 9B 032A
        gbc.setState(0x8b40, 0x4df2, 0xb440, 0xbf78, 0xa3e5, 0x3a5, 0x0, 0x1);
        gbc.writeMem(0x8b40, { 0x9b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4df2, gbc.sp());
        EXPECT(0x8b41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8b40));
        // 9B 032B
        gbc.setState(0xd872, 0xb907, 0x8250, 0xee8, 0x3ac9, 0xedbf, 0x1, 0x1);
        gbc.writeMem(0xd872, { 0x9b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb907, gbc.sp());
        EXPECT(0xd873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd872));
        // 9B 032C
        gbc.setState(0x7b33, 0x4dd9, 0xe630, 0x760b, 0xa2d0, 0x8cd8, 0x0, 0x0);
        gbc.writeMem(0x7b33, { 0x9b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4dd9, gbc.sp());
        EXPECT(0x7b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 032D
        gbc.setState(0xd9db, 0x48b3, 0xaa80, 0xdd08, 0xc6ff, 0x69e, 0x0, 0x1);
        gbc.writeMem(0xd9db, { 0x9b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x48b3, gbc.sp());
        EXPECT(0xd9dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd9db));
        // 9B 032E
        gbc.setState(0xe5d7, 0x7588, 0x6bc0, 0xa469, 0x36d7, 0xa606, 0x0, 0x0);
        gbc.writeMem(0xe5d7, { 0x9b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7588, gbc.sp());
        EXPECT(0xe5d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe5d7));
        // 9B 032F
        gbc.setState(0xef27, 0x14c0, 0x4900, 0xd086, 0x7a54, 0x345, 0x0, 0x1);
        gbc.writeMem(0xef27, { 0x9b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x14c0, gbc.sp());
        EXPECT(0xef28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xef27));
        // 9B 0330
        gbc.setState(0x2f4a, 0xc4b, 0xe660, 0x8562, 0xbad4, 0xac3b, 0x0, 0x1);
        gbc.writeMem(0x2f4a, { 0x9b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc4b, gbc.sp());
        EXPECT(0x2f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0331
        gbc.setState(0xeba, 0xd18c, 0x3a00, 0xe256, 0x4b93, 0xd2ce, 0x1, 0x1);
        gbc.writeMem(0xeba, { 0x9b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd18c, gbc.sp());
        EXPECT(0xebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0332
        gbc.setState(0x4db9, 0x8da7, 0xf450, 0x1758, 0x9833, 0x5b66, 0x0, 0x1);
        gbc.writeMem(0x4db9, { 0x9b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8da7, gbc.sp());
        EXPECT(0x4dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0334
        gbc.setState(0x51b3, 0x96df, 0xd930, 0xc624, 0xfb92, 0x65b0, 0x1, 0x1);
        gbc.writeMem(0x51b3, { 0x9b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x96df, gbc.sp());
        EXPECT(0x51b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0335
        gbc.setState(0x8f5d, 0xa7e9, 0x5940, 0x6f9e, 0x2ee5, 0x2501, 0x0, 0x0);
        gbc.writeMem(0x8f5d, { 0x9b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa7e9, gbc.sp());
        EXPECT(0x8f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8f5d));
        // 9B 0336
        gbc.setState(0x614f, 0xd61, 0xe8d0, 0xbb42, 0x9044, 0x63db, 0x1, 0x0);
        gbc.writeMem(0x614f, { 0x9b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd61, gbc.sp());
        EXPECT(0x6150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0337
        gbc.setState(0x9609, 0x8ae9, 0x2fc0, 0xb329, 0xe628, 0x136b, 0x1, 0x1);
        gbc.writeMem(0x9609, { 0x9b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8ae9, gbc.sp());
        EXPECT(0x960a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9609));
        // 9B 0338
        gbc.setState(0x96e7, 0x161, 0xda60, 0x3154, 0xaae, 0x26d7, 0x1, 0x1);
        gbc.writeMem(0x96e7, { 0x9b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x161, gbc.sp());
        EXPECT(0x96e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x96e7));
        // 9B 0339
        gbc.setState(0xa6fc, 0x61a2, 0x1ff0, 0x6f21, 0x1a25, 0xb548, 0x1, 0x0);
        gbc.writeMem(0xa6fc, { 0x9b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x61a2, gbc.sp());
        EXPECT(0xa6fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa6fc));
        // 9B 033A
        gbc.setState(0xe4b8, 0x6062, 0x8aa0, 0x9df9, 0xfbc6, 0x9190, 0x0, 0x1);
        gbc.writeMem(0xe4b8, { 0x9b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6062, gbc.sp());
        EXPECT(0xe4b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe4b8));
        // 9B 033B
        gbc.setState(0xcb1f, 0x9982, 0x11d0, 0xa133, 0x3b6, 0x857e, 0x1, 0x1);
        gbc.writeMem(0xcb1f, { 0x9b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9982, gbc.sp());
        EXPECT(0xcb20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xcb1f));
        // 9B 033C
        gbc.setState(0x4aaa, 0x7b3, 0x5e20, 0x8b0c, 0xe754, 0x7795, 0x0, 0x1);
        gbc.writeMem(0x4aaa, { 0x9b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7b3, gbc.sp());
        EXPECT(0x4aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 033D
        gbc.setState(0x5555, 0x2ebe, 0xb680, 0x5d69, 0x2dbe, 0x2c36, 0x1, 0x1);
        gbc.writeMem(0x5555, { 0x9b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2ebe, gbc.sp());
        EXPECT(0x5556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 033E
        gbc.setState(0x29e8, 0x677b, 0xe9e0, 0x3245, 0x26e4, 0x1616, 0x0, 0x0);
        gbc.writeMem(0x29e8, { 0x9b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x677b, gbc.sp());
        EXPECT(0x29e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 033F
        gbc.setState(0x3cb7, 0xfd8c, 0x2f20, 0x6b8e, 0xcf5a, 0x2070, 0x1, 0x1);
        gbc.writeMem(0x3cb7, { 0x9b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xfd8c, gbc.sp());
        EXPECT(0x3cb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0340
        gbc.setState(0xe1bd, 0x3a37, 0xeba0, 0xb16c, 0x43b6, 0x35e, 0x1, 0x0);
        gbc.writeMem(0xe1bd, { 0x9b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3a37, gbc.sp());
        EXPECT(0xe1be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe1bd));
        // 9B 0341
        gbc.setState(0x68af, 0xd302, 0x71b0, 0x4232, 0x2123, 0x912b, 0x0, 0x0);
        gbc.writeMem(0x68af, { 0x9b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd302, gbc.sp());
        EXPECT(0x68b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0342
        gbc.setState(0x710b, 0xfa27, 0x8560, 0x10a3, 0x54c8, 0x61f2, 0x1, 0x0);
        gbc.writeMem(0x710b, { 0x9b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfa27, gbc.sp());
        EXPECT(0x710c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0343
        gbc.setState(0x772c, 0x4a0d, 0x4210, 0x2503, 0x3f9d, 0xa476, 0x1, 0x0);
        gbc.writeMem(0x772c, { 0x9b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4a0d, gbc.sp());
        EXPECT(0x772d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0344
        gbc.setState(0x8adb, 0xe973, 0xaa90, 0x152, 0x6613, 0x7e02, 0x0, 0x1);
        gbc.writeMem(0x8adb, { 0x9b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe973, gbc.sp());
        EXPECT(0x8adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8adb));
        // 9B 0345
        gbc.setState(0x5df7, 0xdbf, 0x3990, 0x2bee, 0xf5c8, 0x46ca, 0x1, 0x1);
        gbc.writeMem(0x5df7, { 0x9b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdbf, gbc.sp());
        EXPECT(0x5df8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0346
        gbc.setState(0x905d, 0xf0a7, 0xe890, 0x1761, 0x9e58, 0x9c8f, 0x0, 0x1);
        gbc.writeMem(0x905d, { 0x9b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf0a7, gbc.sp());
        EXPECT(0x905e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x905d));
        // 9B 0347
        gbc.setState(0x986d, 0x8af2, 0x3120, 0xcd8c, 0x8566, 0x699e, 0x0, 0x1);
        gbc.writeMem(0x986d, { 0x9b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8af2, gbc.sp());
        EXPECT(0x986e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x986d));
        // 9B 0348
        gbc.setState(0x41bf, 0x723a, 0x9760, 0x329f, 0xbd60, 0x550e, 0x0, 0x1);
        gbc.writeMem(0x41bf, { 0x9b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x723a, gbc.sp());
        EXPECT(0x41c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0349
        gbc.setState(0x3b35, 0x3280, 0x19d0, 0xbf7b, 0xd6b6, 0x4e36, 0x0, 0x0);
        gbc.writeMem(0x3b35, { 0x9b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3280, gbc.sp());
        EXPECT(0x3b36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 034A
        gbc.setState(0xab44, 0xcf5b, 0x5cc0, 0xf0de, 0x857b, 0xe766, 0x0, 0x0);
        gbc.writeMem(0xab44, { 0x9b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcf5b, gbc.sp());
        EXPECT(0xab45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xab44));
        // 9B 034B
        gbc.setState(0x99d2, 0xfd51, 0xa100, 0xd4de, 0xd793, 0xb79b, 0x0, 0x0);
        gbc.writeMem(0x99d2, { 0x9b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xfd51, gbc.sp());
        EXPECT(0x99d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x99d2));
        // 9B 034C
        gbc.setState(0x1ecc, 0x6024, 0xb760, 0xc6d3, 0x99b4, 0x4153, 0x1, 0x0);
        gbc.writeMem(0x1ecc, { 0x9b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6024, gbc.sp());
        EXPECT(0x1ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 034D
        gbc.setState(0x6629, 0xab43, 0xd210, 0x898f, 0xee11, 0x631a, 0x1, 0x1);
        gbc.writeMem(0x6629, { 0x9b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xab43, gbc.sp());
        EXPECT(0x662a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 034E
        gbc.setState(0x393e, 0x1e72, 0x4030, 0x5286, 0xf2c6, 0x3f70, 0x0, 0x0);
        gbc.writeMem(0x393e, { 0x9b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1e72, gbc.sp());
        EXPECT(0x393f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 034F
        gbc.setState(0x92ad, 0x7abd, 0x2a0, 0x1085, 0xbac3, 0x77f3, 0x1, 0x0);
        gbc.writeMem(0x92ad, { 0x9b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7abd, gbc.sp());
        EXPECT(0x92ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x92ad));
        // 9B 0350
        gbc.setState(0xee58, 0x370b, 0xd4f0, 0x1eb2, 0x33e8, 0x66cf, 0x0, 0x1);
        gbc.writeMem(0xee58, { 0x9b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x370b, gbc.sp());
        EXPECT(0xee59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xee58));
        // 9B 0351
        gbc.setState(0xcf2e, 0x165d, 0x2a50, 0x686c, 0x43f9, 0x4508, 0x1, 0x1);
        gbc.writeMem(0xcf2e, { 0x9b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x165d, gbc.sp());
        EXPECT(0xcf2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xcf2e));
        // 9B 0352
        gbc.setState(0x53eb, 0xebc5, 0xe940, 0x8b9f, 0x49bb, 0xec28, 0x0, 0x1);
        gbc.writeMem(0x53eb, { 0x9b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xebc5, gbc.sp());
        EXPECT(0x53ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0353
        gbc.setState(0x5f3b, 0xe29e, 0x49d0, 0xb12f, 0x6297, 0xc04d, 0x0, 0x1);
        gbc.writeMem(0x5f3b, { 0x9b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe29e, gbc.sp());
        EXPECT(0x5f3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0354
        gbc.setState(0x67c3, 0x223f, 0x9d80, 0xb20e, 0x7427, 0xf8db, 0x0, 0x0);
        gbc.writeMem(0x67c3, { 0x9b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x223f, gbc.sp());
        EXPECT(0x67c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0355
        gbc.setState(0xa834, 0x3d9e, 0x93a0, 0x6c19, 0xfffb, 0xf979, 0x0, 0x0);
        gbc.writeMem(0xa834, { 0x9b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3d9e, gbc.sp());
        EXPECT(0xa835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa834));
        // 9B 0356
        gbc.setState(0x23f, 0x4b88, 0xde10, 0x62f8, 0x7ccb, 0x3e20, 0x0, 0x1);
        gbc.writeMem(0x23f, { 0x9b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4b88, gbc.sp());
        EXPECT(0x240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0357
        gbc.setState(0x5927, 0x4598, 0x11e0, 0xecb6, 0xe4f6, 0xbae0, 0x1, 0x0);
        gbc.writeMem(0x5927, { 0x9b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4598, gbc.sp());
        EXPECT(0x5928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0358
        gbc.setState(0x2fe9, 0x342e, 0x8660, 0x8346, 0x5a8a, 0x55c2, 0x0, 0x1);
        gbc.writeMem(0x2fe9, { 0x9b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x342e, gbc.sp());
        EXPECT(0x2fea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0359
        gbc.setState(0xeb33, 0xb988, 0x7470, 0x428a, 0x4145, 0x5fb2, 0x0, 0x0);
        gbc.writeMem(0xeb33, { 0x9b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb988, gbc.sp());
        EXPECT(0xeb34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xeb33));
        // 9B 035A
        gbc.setState(0x5c92, 0xaa2f, 0xa360, 0xbbe7, 0x46f4, 0x2c30, 0x0, 0x0);
        gbc.writeMem(0x5c92, { 0x9b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xaa2f, gbc.sp());
        EXPECT(0x5c93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 035B
        gbc.setState(0xbacd, 0x13e7, 0xdb10, 0xdf00, 0x34eb, 0xe20a, 0x1, 0x1);
        gbc.writeMem(0xbacd, { 0x9b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x13e7, gbc.sp());
        EXPECT(0xbace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbacd));
        // 9B 035C
        gbc.setState(0xb4e6, 0xe2cb, 0xdfa0, 0xfb5b, 0x2df5, 0xe58c, 0x1, 0x1);
        gbc.writeMem(0xb4e6, { 0x9b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe2cb, gbc.sp());
        EXPECT(0xb4e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb4e6));
        // 9B 035D
        gbc.setState(0x8d6f, 0xb884, 0x8130, 0x1d93, 0xf5f2, 0xfc2b, 0x0, 0x1);
        gbc.writeMem(0x8d6f, { 0x9b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb884, gbc.sp());
        EXPECT(0x8d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8d6f));
        // 9B 035E
        gbc.setState(0x766c, 0x71f2, 0x5200, 0xd82, 0x2188, 0x6500, 0x1, 0x0);
        gbc.writeMem(0x766c, { 0x9b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x71f2, gbc.sp());
        EXPECT(0x766d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 035F
        gbc.setState(0x26fb, 0x82a2, 0xa3d0, 0x9776, 0xebb, 0xcfee, 0x1, 0x0);
        gbc.writeMem(0x26fb, { 0x9b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x82a2, gbc.sp());
        EXPECT(0x26fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0360
        gbc.setState(0x8c9, 0x569c, 0x9e10, 0x23fa, 0x3591, 0xabc0, 0x0, 0x1);
        gbc.writeMem(0x8c9, { 0x9b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x569c, gbc.sp());
        EXPECT(0x8ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0361
        gbc.setState(0xa59e, 0xe1, 0x2050, 0x7c68, 0x5241, 0x2ba5, 0x1, 0x1);
        gbc.writeMem(0xa59e, { 0x9b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe1, gbc.sp());
        EXPECT(0xa59f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa59e));
        // 9B 0362
        gbc.setState(0x1229, 0x2aa9, 0xe4a0, 0x27ae, 0x5a71, 0xd00e, 0x0, 0x1);
        gbc.writeMem(0x1229, { 0x9b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2aa9, gbc.sp());
        EXPECT(0x122a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0363
        gbc.setState(0xed9, 0x8cf, 0x62f0, 0xe329, 0xd5de, 0x2b9c, 0x1, 0x0);
        gbc.writeMem(0xed9, { 0x9b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8cf, gbc.sp());
        EXPECT(0xeda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0364
        gbc.setState(0x9d54, 0x9123, 0x9d10, 0xa08f, 0x2aa7, 0xb29d, 0x0, 0x0);
        gbc.writeMem(0x9d54, { 0x9b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9123, gbc.sp());
        EXPECT(0x9d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9d54));
        // 9B 0365
        gbc.setState(0x79f4, 0xad7d, 0x7060, 0xc8ef, 0x671, 0xfbce, 0x1, 0x1);
        gbc.writeMem(0x79f4, { 0x9b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xad7d, gbc.sp());
        EXPECT(0x79f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0366
        gbc.setState(0x210e, 0x144c, 0xb690, 0xa93b, 0x78a6, 0x90bb, 0x1, 0x0);
        gbc.writeMem(0x210e, { 0x9b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x144c, gbc.sp());
        EXPECT(0x210f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0367
        gbc.setState(0x7a0e, 0xd7fe, 0xc880, 0x452c, 0x3996, 0x39ed, 0x0, 0x1);
        gbc.writeMem(0x7a0e, { 0x9b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd7fe, gbc.sp());
        EXPECT(0x7a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0368
        gbc.setState(0x2f0e, 0x8314, 0x3240, 0x2580, 0xccff, 0xed05, 0x0, 0x1);
        gbc.writeMem(0x2f0e, { 0x9b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8314, gbc.sp());
        EXPECT(0x2f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0369
        gbc.setState(0x6ac4, 0x7743, 0xecf0, 0xe22c, 0xfbdd, 0x76af, 0x1, 0x1);
        gbc.writeMem(0x6ac4, { 0x9b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7743, gbc.sp());
        EXPECT(0x6ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 036A
        gbc.setState(0xc6e, 0x3583, 0x7c50, 0x5eab, 0x2baf, 0x59a6, 0x0, 0x0);
        gbc.writeMem(0xc6e, { 0x9b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3583, gbc.sp());
        EXPECT(0xc6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 036B
        gbc.setState(0x6592, 0xdf84, 0x6f60, 0x249a, 0xf2b6, 0xde02, 0x0, 0x0);
        gbc.writeMem(0x6592, { 0x9b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdf84, gbc.sp());
        EXPECT(0x6593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 036C
        gbc.setState(0xb421, 0xdc49, 0xcbc0, 0x4736, 0x172f, 0xd3a1, 0x0, 0x0);
        gbc.writeMem(0xb421, { 0x9b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdc49, gbc.sp());
        EXPECT(0xb422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb421));
        // 9B 036D
        gbc.setState(0x7a83, 0x92b0, 0x13b0, 0x2875, 0x7a84, 0x7614, 0x0, 0x0);
        gbc.writeMem(0x7a83, { 0x9b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x92b0, gbc.sp());
        EXPECT(0x7a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 036E
        gbc.setState(0x3f05, 0xffd5, 0x4600, 0xf104, 0x38c6, 0x5da9, 0x0, 0x0);
        gbc.writeMem(0x3f05, { 0x9b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xffd5, gbc.sp());
        EXPECT(0x3f06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 036F
        gbc.setState(0xce0, 0xb425, 0x6800, 0x3c8, 0xc756, 0x7ef, 0x0, 0x1);
        gbc.writeMem(0xce0, { 0x9b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb425, gbc.sp());
        EXPECT(0xce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0370
        gbc.setState(0x2c4a, 0x5d50, 0xd810, 0xae3f, 0x2a67, 0xe9d1, 0x1, 0x0);
        gbc.writeMem(0x2c4a, { 0x9b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5d50, gbc.sp());
        EXPECT(0x2c4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0371
        gbc.setState(0xd29f, 0x75a5, 0xcef0, 0x5288, 0xbae1, 0x44dd, 0x0, 0x0);
        gbc.writeMem(0xd29f, { 0x9b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x75a5, gbc.sp());
        EXPECT(0xd2a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd29f));
        // 9B 0372
        gbc.setState(0xd9b8, 0x364a, 0x1020, 0x321b, 0xcb25, 0xb5f6, 0x1, 0x0);
        gbc.writeMem(0xd9b8, { 0x9b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x364a, gbc.sp());
        EXPECT(0xd9b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd9b8));
        // 9B 0373
        gbc.setState(0x8063, 0x2451, 0x9070, 0xd7aa, 0x2cb1, 0xbf11, 0x0, 0x0);
        gbc.writeMem(0x8063, { 0x9b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2451, gbc.sp());
        EXPECT(0x8064, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8063));
        // 9B 0374
        gbc.setState(0x29dd, 0xa5db, 0x32c0, 0x556b, 0x3a5c, 0xda44, 0x0, 0x1);
        gbc.writeMem(0x29dd, { 0x9b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa5db, gbc.sp());
        EXPECT(0x29de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0375
        gbc.setState(0xa96b, 0xdecf, 0x9270, 0xea24, 0x6e17, 0xd62d, 0x0, 0x1);
        gbc.writeMem(0xa96b, { 0x9b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xdecf, gbc.sp());
        EXPECT(0xa96c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa96b));
        // 9B 0376
        gbc.setState(0xbac9, 0xe240, 0xdaa0, 0x2d4e, 0x604, 0xe754, 0x0, 0x1);
        gbc.writeMem(0xbac9, { 0x9b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe240, gbc.sp());
        EXPECT(0xbaca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbac9));
        // 9B 0377
        gbc.setState(0x53fb, 0xcb39, 0x57d0, 0xdd94, 0x8071, 0x1b19, 0x0, 0x0);
        gbc.writeMem(0x53fb, { 0x9b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xcb39, gbc.sp());
        EXPECT(0x53fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0378
        gbc.setState(0x6b3e, 0x66c, 0xfcc0, 0x4016, 0x32b5, 0x7dc3, 0x1, 0x1);
        gbc.writeMem(0x6b3e, { 0x9b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x66c, gbc.sp());
        EXPECT(0x6b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0379
        gbc.setState(0x5383, 0x916c, 0xe6a0, 0xdc2d, 0xae95, 0x3c1f, 0x0, 0x0);
        gbc.writeMem(0x5383, { 0x9b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x916c, gbc.sp());
        EXPECT(0x5384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 037A
        gbc.setState(0x5ec7, 0xeab6, 0x8cc0, 0x1d41, 0xeec3, 0xccec, 0x0, 0x1);
        gbc.writeMem(0x5ec7, { 0x9b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xeab6, gbc.sp());
        EXPECT(0x5ec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 037B
        gbc.setState(0xd484, 0x1bb7, 0xea10, 0xac2, 0x3eec, 0x94ee, 0x1, 0x1);
        gbc.writeMem(0xd484, { 0x9b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1bb7, gbc.sp());
        EXPECT(0xd485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd484));
        // 9B 037C
        gbc.setState(0x1504, 0x6b79, 0xefc0, 0xd166, 0x35cf, 0xf96a, 0x0, 0x1);
        gbc.writeMem(0x1504, { 0x9b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6b79, gbc.sp());
        EXPECT(0x1505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 037D
        gbc.setState(0x59c, 0x5512, 0xd7d0, 0x6592, 0x1a7b, 0xbbc2, 0x1, 0x1);
        gbc.writeMem(0x59c, { 0x9b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5512, gbc.sp());
        EXPECT(0x59d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 037E
        gbc.setState(0xbb06, 0xf719, 0x9f20, 0x94a2, 0x2885, 0xe240, 0x0, 0x0);
        gbc.writeMem(0xbb06, { 0x9b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf719, gbc.sp());
        EXPECT(0xbb07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbb06));
        // 9B 037F
        gbc.setState(0x2628, 0xc10f, 0x2680, 0xd75d, 0x6bd4, 0x6735, 0x1, 0x1);
        gbc.writeMem(0x2628, { 0x9b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc10f, gbc.sp());
        EXPECT(0x2629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0380
        gbc.setState(0xe210, 0x5cfa, 0xf350, 0x4ced, 0x5145, 0x98e6, 0x0, 0x1);
        gbc.writeMem(0xe210, { 0x9b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5cfa, gbc.sp());
        EXPECT(0xe211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe210));
        // 9B 0381
        gbc.setState(0x50f6, 0x427b, 0x670, 0x252b, 0x4416, 0x4d0b, 0x1, 0x0);
        gbc.writeMem(0x50f6, { 0x9b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x427b, gbc.sp());
        EXPECT(0x50f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0382
        gbc.setState(0xa3f5, 0xff18, 0x7a50, 0x8352, 0x906b, 0x2c06, 0x0, 0x1);
        gbc.writeMem(0xa3f5, { 0x9b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xff18, gbc.sp());
        EXPECT(0xa3f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa3f5));
        // 9B 0383
        gbc.setState(0xa0b0, 0x31db, 0x9dd0, 0xbec1, 0x8592, 0xbf4a, 0x0, 0x1);
        gbc.writeMem(0xa0b0, { 0x9b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x31db, gbc.sp());
        EXPECT(0xa0b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa0b0));
        // 9B 0384
        gbc.setState(0xdfb7, 0xfcb2, 0x2a0, 0x7ade, 0xd36d, 0x5d29, 0x0, 0x1);
        gbc.writeMem(0xdfb7, { 0x9b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfcb2, gbc.sp());
        EXPECT(0xdfb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xdfb7));
        // 9B 0385
        gbc.setState(0xba54, 0x6cac, 0x2a60, 0x4348, 0xea5b, 0xe516, 0x1, 0x1);
        gbc.writeMem(0xba54, { 0x9b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6cac, gbc.sp());
        EXPECT(0xba55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xba54));
        // 9B 0386
        gbc.setState(0x1cac, 0xd55b, 0xd3f0, 0x7765, 0x569c, 0x75a0, 0x0, 0x1);
        gbc.writeMem(0x1cac, { 0x9b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd55b, gbc.sp());
        EXPECT(0x1cad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0387
        gbc.setState(0x4454, 0x9242, 0x5a30, 0x71b1, 0x9485, 0x3b0d, 0x1, 0x1);
        gbc.writeMem(0x4454, { 0x9b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9242, gbc.sp());
        EXPECT(0x4455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0388
        gbc.setState(0xbc7d, 0x9b16, 0xfcf0, 0xe70c, 0x1452, 0xf3dc, 0x0, 0x1);
        gbc.writeMem(0xbc7d, { 0x9b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9b16, gbc.sp());
        EXPECT(0xbc7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbc7d));
        // 9B 0389
        gbc.setState(0x9883, 0x7bd5, 0xf0b0, 0x27a1, 0xa154, 0x87ba, 0x0, 0x1);
        gbc.writeMem(0x9883, { 0x9b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7bd5, gbc.sp());
        EXPECT(0x9884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9883));
        // 9B 038B
        gbc.setState(0xa3fa, 0x927d, 0x4340, 0x95d9, 0x231e, 0x94d4, 0x1, 0x0);
        gbc.writeMem(0xa3fa, { 0x9b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x927d, gbc.sp());
        EXPECT(0xa3fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa3fa));
        // 9B 038C
        gbc.setState(0xd911, 0x2004, 0x3ee0, 0x7fdf, 0x31b8, 0xe1fb, 0x1, 0x1);
        gbc.writeMem(0xd911, { 0x9b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2004, gbc.sp());
        EXPECT(0xd912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd911));
        // 9B 038D
        gbc.setState(0x3b6e, 0xd49f, 0xfee0, 0xfbbe, 0x8b46, 0x5c23, 0x0, 0x1);
        gbc.writeMem(0x3b6e, { 0x9b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd49f, gbc.sp());
        EXPECT(0x3b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 038E
        gbc.setState(0x138, 0x4a26, 0x4910, 0x1632, 0x8a8a, 0x24d9, 0x0, 0x1);
        gbc.writeMem(0x138, { 0x9b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4a26, gbc.sp());
        EXPECT(0x139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 038F
        gbc.setState(0xe34e, 0xdc06, 0xc020, 0xa272, 0x3447, 0xab59, 0x1, 0x0);
        gbc.writeMem(0xe34e, { 0x9b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdc06, gbc.sp());
        EXPECT(0xe34f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe34e));
        // 9B 0390
        gbc.setState(0x24d9, 0xafed, 0x4220, 0x2808, 0xb8d4, 0xf222, 0x1, 0x0);
        gbc.writeMem(0x24d9, { 0x9b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xafed, gbc.sp());
        EXPECT(0x24da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0391
        gbc.setState(0x2f3b, 0xfabb, 0x7410, 0x17da, 0xafda, 0x2f6, 0x0, 0x0);
        gbc.writeMem(0x2f3b, { 0x9b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xfabb, gbc.sp());
        EXPECT(0x2f3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0392
        gbc.setState(0x13c7, 0xb7f1, 0x1030, 0xbe3e, 0x9a4b, 0xad79, 0x1, 0x1);
        gbc.writeMem(0x13c7, { 0x9b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb7f1, gbc.sp());
        EXPECT(0x13c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0393
        gbc.setState(0x4ab, 0x3469, 0x3c30, 0x65b8, 0xb255, 0xe973, 0x0, 0x1);
        gbc.writeMem(0x4ab, { 0x9b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3469, gbc.sp());
        EXPECT(0x4ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0394
        gbc.setState(0x7c49, 0x4dd0, 0x6b20, 0x3832, 0x17ce, 0xf13a, 0x1, 0x1);
        gbc.writeMem(0x7c49, { 0x9b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4dd0, gbc.sp());
        EXPECT(0x7c4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0395
        gbc.setState(0xbac9, 0x7fc2, 0x6090, 0xff09, 0xef34, 0x801e, 0x1, 0x0);
        gbc.writeMem(0xbac9, { 0x9b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7fc2, gbc.sp());
        EXPECT(0xbaca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbac9));
        // 9B 0396
        gbc.setState(0x7cf5, 0x5d52, 0xf0e0, 0x3deb, 0xdcc6, 0x6a9c, 0x1, 0x1);
        gbc.writeMem(0x7cf5, { 0x9b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5d52, gbc.sp());
        EXPECT(0x7cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 0397
        gbc.setState(0x295c, 0x281f, 0x2f40, 0xb64, 0xeade, 0xbefa, 0x0, 0x1);
        gbc.writeMem(0x295c, { 0x9b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x281f, gbc.sp());
        EXPECT(0x295d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 0398
        gbc.setState(0xcd14, 0x5b13, 0xa310, 0x510b, 0xe07f, 0x99f1, 0x0, 0x1);
        gbc.writeMem(0xcd14, { 0x9b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5b13, gbc.sp());
        EXPECT(0xcd15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xcd14));
        // 9B 0399
        gbc.setState(0x5038, 0x4740, 0xa0f0, 0xf75d, 0x7957, 0xdb75, 0x0, 0x0);
        gbc.writeMem(0x5038, { 0x9b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4740, gbc.sp());
        EXPECT(0x5039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 039A
        gbc.setState(0x56e1, 0x561b, 0xb710, 0xebdd, 0x7aeb, 0xcce2, 0x1, 0x0);
        gbc.writeMem(0x56e1, { 0x9b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x561b, gbc.sp());
        EXPECT(0x56e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 039B
        gbc.setState(0xa55a, 0xdf61, 0x3870, 0xad72, 0x1806, 0xf1d1, 0x0, 0x0);
        gbc.writeMem(0xa55a, { 0x9b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xdf61, gbc.sp());
        EXPECT(0xa55b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa55a));
        // 9B 039D
        gbc.setState(0xbda9, 0xbf43, 0xaca0, 0x8242, 0xbf1c, 0xb7ae, 0x0, 0x1);
        gbc.writeMem(0xbda9, { 0x9b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xbf43, gbc.sp());
        EXPECT(0xbdaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbda9));
        // 9B 039E
        gbc.setState(0x4ecd, 0xb70d, 0x2160, 0x4dcc, 0x8a1d, 0x25e1, 0x1, 0x1);
        gbc.writeMem(0x4ecd, { 0x9b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb70d, gbc.sp());
        EXPECT(0x4ece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 039F
        gbc.setState(0x51c2, 0x52fa, 0x9d40, 0x21d, 0xc735, 0x6663, 0x0, 0x0);
        gbc.writeMem(0x51c2, { 0x9b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x52fa, gbc.sp());
        EXPECT(0x51c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 03A1
        gbc.setState(0x760e, 0x7fdd, 0xf210, 0x8631, 0x8951, 0xb581, 0x0, 0x1);
        gbc.writeMem(0x760e, { 0x9b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7fdd, gbc.sp());
        EXPECT(0x760f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 03A2
        gbc.setState(0x9b31, 0xa4a0, 0x4760, 0xebc0, 0xe9c5, 0x2b91, 0x0, 0x0);
        gbc.writeMem(0x9b31, { 0x9b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa4a0, gbc.sp());
        EXPECT(0x9b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9b31));
        // 9B 03A3
        gbc.setState(0xd83c, 0x7bca, 0x79c0, 0x49e1, 0x884f, 0x4cf0, 0x0, 0x1);
        gbc.writeMem(0xd83c, { 0x9b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7bca, gbc.sp());
        EXPECT(0xd83d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd83c));
        // 9B 03A4
        gbc.setState(0xdefb, 0x67bc, 0x26c0, 0xa01f, 0xd35b, 0xe406, 0x1, 0x0);
        gbc.writeMem(0xdefb, { 0x9b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x67bc, gbc.sp());
        EXPECT(0xdefc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xdefb));
        // 9B 03A5
        gbc.setState(0xacfc, 0x12e4, 0x64b0, 0x3611, 0x6923, 0x5bcf, 0x1, 0x1);
        gbc.writeMem(0xacfc, { 0x9b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x12e4, gbc.sp());
        EXPECT(0xacfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xacfc));
        // 9B 03A6
        gbc.setState(0x99b5, 0x2adc, 0xfba0, 0x602b, 0xc135, 0xdb57, 0x1, 0x0);
        gbc.writeMem(0x99b5, { 0x9b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2adc, gbc.sp());
        EXPECT(0x99b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x99b5));
        // 9B 03A7
        gbc.setState(0x77f2, 0xe8ae, 0x2520, 0x6d6b, 0x5d3, 0xdb90, 0x0, 0x1);
        gbc.writeMem(0x77f2, { 0x9b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe8ae, gbc.sp());
        EXPECT(0x77f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 03A8
        gbc.setState(0x9185, 0xf701, 0x8770, 0x7333, 0xab, 0x9929, 0x0, 0x0);
        gbc.writeMem(0x9185, { 0x9b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf701, gbc.sp());
        EXPECT(0x9186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9185));
        // 9B 03A9
        gbc.setState(0x6984, 0xe9b3, 0x81a0, 0xe22, 0xef82, 0x90e4, 0x1, 0x1);
        gbc.writeMem(0x6984, { 0x9b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe9b3, gbc.sp());
        EXPECT(0x6985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 03AA
        gbc.setState(0x3269, 0x8f78, 0x2890, 0x78da, 0xdb41, 0xa50b, 0x1, 0x1);
        gbc.writeMem(0x3269, { 0x9b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8f78, gbc.sp());
        EXPECT(0x326a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 03AB
        gbc.setState(0x6fdb, 0x1f18, 0x57f0, 0x88a7, 0x79c3, 0x3473, 0x0, 0x1);
        gbc.writeMem(0x6fdb, { 0x9b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1f18, gbc.sp());
        EXPECT(0x6fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 03AC
        gbc.setState(0x6840, 0x1918, 0xce80, 0x4ad9, 0xd9e9, 0xc8e0, 0x0, 0x0);
        gbc.writeMem(0x6840, { 0x9b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1918, gbc.sp());
        EXPECT(0x6841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 03AD
        gbc.setState(0x6cd5, 0xdd3e, 0x9e60, 0x60f2, 0x314, 0x76c8, 0x0, 0x0);
        gbc.writeMem(0x6cd5, { 0x9b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdd3e, gbc.sp());
        EXPECT(0x6cd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 03AE
        gbc.setState(0x7f7, 0x3267, 0xd0e0, 0x3c98, 0x3bbc, 0xba9f, 0x1, 0x1);
        gbc.writeMem(0x7f7, { 0x9b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3267, gbc.sp());
        EXPECT(0x7f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 03AF
        gbc.setState(0x89ea, 0xf58c, 0xe4a0, 0xa5c6, 0x46cb, 0x585b, 0x0, 0x0);
        gbc.writeMem(0x89ea, { 0x9b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf58c, gbc.sp());
        EXPECT(0x89eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x89ea));
        // 9B 03B0
        gbc.setState(0x5c0d, 0xee22, 0x3670, 0xb5cf, 0x5986, 0x1ccd, 0x0, 0x1);
        gbc.writeMem(0x5c0d, { 0x9b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xee22, gbc.sp());
        EXPECT(0x5c0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 03B1
        gbc.setState(0x5fc6, 0xd3b6, 0xd0a0, 0x8e7e, 0xed5a, 0xbbd8, 0x1, 0x1);
        gbc.writeMem(0x5fc6, { 0x9b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd3b6, gbc.sp());
        EXPECT(0x5fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 03B2
        gbc.setState(0x6372, 0x88d9, 0xeb80, 0x7354, 0xe606, 0xcfca, 0x0, 0x1);
        gbc.writeMem(0x6372, { 0x9b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x88d9, gbc.sp());
        EXPECT(0x6373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 03B3
        gbc.setState(0xfba, 0xc681, 0x3a80, 0x26d3, 0x4f24, 0x27d1, 0x0, 0x1);
        gbc.writeMem(0xfba, { 0x9b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc681, gbc.sp());
        EXPECT(0xfbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 03B4
        gbc.setState(0x7511, 0x9d59, 0x4e30, 0x9722, 0xb32c, 0x924, 0x1, 0x0);
        gbc.writeMem(0x7511, { 0x9b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9d59, gbc.sp());
        EXPECT(0x7512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 03B5
        gbc.setState(0xde55, 0x12e0, 0xca70, 0x2c3e, 0x983f, 0x977d, 0x1, 0x1);
        gbc.writeMem(0xde55, { 0x9b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x12e0, gbc.sp());
        EXPECT(0xde56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xde55));
        // 9B 03B6
        gbc.setState(0x42b3, 0xb5ae, 0x9d30, 0x4586, 0x1425, 0x27aa, 0x0, 0x1);
        gbc.writeMem(0x42b3, { 0x9b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb5ae, gbc.sp());
        EXPECT(0x42b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 03B7
        gbc.setState(0xe31b, 0xeb8, 0x9a50, 0x69c0, 0xd19b, 0x3f1d, 0x0, 0x0);
        gbc.writeMem(0xe31b, { 0x9b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xeb8, gbc.sp());
        EXPECT(0xe31c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe31b));
        // 9B 03B8
        gbc.setState(0xe0ec, 0xfa31, 0x2ea0, 0xe903, 0xb7ef, 0xf7f4, 0x0, 0x1);
        gbc.writeMem(0xe0ec, { 0x9b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfa31, gbc.sp());
        EXPECT(0xe0ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe0ec));
        // 9B 03B9
        gbc.setState(0xbac4, 0x61dc, 0x5790, 0xc897, 0x552, 0x9969, 0x1, 0x0);
        gbc.writeMem(0xbac4, { 0x9b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x61dc, gbc.sp());
        EXPECT(0xbac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbac4));
        // 9B 03BA
        gbc.setState(0x63fb, 0x71b6, 0x5630, 0x6c75, 0x898a, 0x1de8, 0x1, 0x1);
        gbc.writeMem(0x63fb, { 0x9b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x71b6, gbc.sp());
        EXPECT(0x63fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 03BB
        gbc.setState(0x3e90, 0xb2c5, 0x3eb0, 0xb264, 0x5bc6, 0x4fcb, 0x1, 0x1);
        gbc.writeMem(0x3e90, { 0x9b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb2c5, gbc.sp());
        EXPECT(0x3e91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 03BC
        gbc.setState(0x4cc5, 0xc2bb, 0xcec0, 0xed23, 0x3703, 0xe430, 0x0, 0x1);
        gbc.writeMem(0x4cc5, { 0x9b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc2bb, gbc.sp());
        EXPECT(0x4cc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 03BD
        gbc.setState(0x7f8f, 0x3e41, 0xa070, 0x7dc5, 0x81e5, 0x8d16, 0x0, 0x0);
        gbc.writeMem(0x7f8f, { 0x9b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3e41, gbc.sp());
        EXPECT(0x7f90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 03BE
        gbc.setState(0x5758, 0x6f91, 0x26b0, 0x5bd7, 0xa977, 0xa0ce, 0x0, 0x1);
        gbc.writeMem(0x5758, { 0x9b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6f91, gbc.sp());
        EXPECT(0x5759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 03BF
        gbc.setState(0x6bd7, 0xbfe0, 0x3b10, 0x9b17, 0xb3da, 0x5584, 0x1, 0x0);
        gbc.writeMem(0x6bd7, { 0x9b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbfe0, gbc.sp());
        EXPECT(0x6bd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 03C0
        gbc.setState(0x7303, 0x32f3, 0x81e0, 0x2cd5, 0x9c6a, 0x176d, 0x1, 0x1);
        gbc.writeMem(0x7303, { 0x9b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x32f3, gbc.sp());
        EXPECT(0x7304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 03C1
        gbc.setState(0xe807, 0xd5db, 0xd0b0, 0x10d6, 0xb6ea, 0x96cb, 0x1, 0x0);
        gbc.writeMem(0xe807, { 0x9b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd5db, gbc.sp());
        EXPECT(0xe808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe807));
        // 9B 03C2
        gbc.setState(0x8b0f, 0x5739, 0x50c0, 0x6272, 0x887c, 0x1478, 0x0, 0x1);
        gbc.writeMem(0x8b0f, { 0x9b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5739, gbc.sp());
        EXPECT(0x8b10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8b0f));
        // 9B 03C3
        gbc.setState(0x601e, 0xb127, 0x4bc0, 0x992f, 0x436c, 0x8e95, 0x1, 0x1);
        gbc.writeMem(0x601e, { 0x9b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb127, gbc.sp());
        EXPECT(0x601f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 03C4
        gbc.setState(0x8080, 0xdfca, 0x2900, 0xf480, 0x63d9, 0xb0a9, 0x0, 0x0);
        gbc.writeMem(0x8080, { 0x9b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdfca, gbc.sp());
        EXPECT(0x8081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8080));
        // 9B 03C5
        gbc.setState(0xeaaf, 0xd532, 0xdf70, 0x7c96, 0xfc5e, 0x15e8, 0x0, 0x1);
        gbc.writeMem(0xeaaf, { 0x9b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd532, gbc.sp());
        EXPECT(0xeab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xeaaf));
        // 9B 03C6
        gbc.setState(0x819, 0x8504, 0xc420, 0x9f73, 0x6a71, 0x7347, 0x0, 0x0);
        gbc.writeMem(0x819, { 0x9b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8504, gbc.sp());
        EXPECT(0x81a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 03C7
        gbc.setState(0xe4aa, 0xcfb9, 0x2e00, 0x7720, 0xa1ad, 0x8a33, 0x1, 0x1);
        gbc.writeMem(0xe4aa, { 0x9b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xcfb9, gbc.sp());
        EXPECT(0xe4ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe4aa));
        // 9B 03C8
        gbc.setState(0x3723, 0x1c98, 0x1550, 0xb301, 0xd885, 0x9b16, 0x1, 0x1);
        gbc.writeMem(0x3723, { 0x9b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1c98, gbc.sp());
        EXPECT(0x3724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 03C9
        gbc.setState(0xce89, 0xe1d4, 0x30e0, 0x5d6f, 0x5cbf, 0xc13c, 0x1, 0x0);
        gbc.writeMem(0xce89, { 0x9b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe1d4, gbc.sp());
        EXPECT(0xce8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xce89));
        // 9B 03CA
        gbc.setState(0x9016, 0x8d6c, 0xbbd0, 0x98ca, 0x987a, 0x4e49, 0x1, 0x1);
        gbc.writeMem(0x9016, { 0x9b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8d6c, gbc.sp());
        EXPECT(0x9017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9016));
        // 9B 03CB
        gbc.setState(0xb28f, 0xf75f, 0x9310, 0x4b8, 0x1ce7, 0x1fa6, 0x1, 0x0);
        gbc.writeMem(0xb28f, { 0x9b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf75f, gbc.sp());
        EXPECT(0xb290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb28f));
        // 9B 03CE
        gbc.setState(0xb4a2, 0xd89b, 0x7c40, 0x20b2, 0x3869, 0x7266, 0x0, 0x0);
        gbc.writeMem(0xb4a2, { 0x9b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd89b, gbc.sp());
        EXPECT(0xb4a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb4a2));
        // 9B 03CF
        gbc.setState(0x409d, 0xf7b8, 0x5450, 0xb40, 0xabda, 0x7391, 0x1, 0x0);
        gbc.writeMem(0x409d, { 0x9b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf7b8, gbc.sp());
        EXPECT(0x409e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 03D1
        gbc.setState(0x64f1, 0x342f, 0x94f0, 0x28f0, 0xa2e9, 0x429c, 0x1, 0x0);
        gbc.writeMem(0x64f1, { 0x9b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x342f, gbc.sp());
        EXPECT(0x64f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 03D2
        gbc.setState(0x63b, 0xd543, 0x61b0, 0x43c4, 0xf8e7, 0x71d5, 0x1, 0x0);
        gbc.writeMem(0x63b, { 0x9b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd543, gbc.sp());
        EXPECT(0x63c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 03D3
        gbc.setState(0x3e3, 0xbaeb, 0xc420, 0x8bc4, 0xc345, 0xa59c, 0x0, 0x0);
        gbc.writeMem(0x3e3, { 0x9b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbaeb, gbc.sp());
        EXPECT(0x3e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 03D4
        gbc.setState(0x7b2d, 0xf204, 0x92a0, 0xa355, 0xf1ac, 0xa492, 0x0, 0x1);
        gbc.writeMem(0x7b2d, { 0x9b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf204, gbc.sp());
        EXPECT(0x7b2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 03D5
        gbc.setState(0xb658, 0x1850, 0xa0, 0x5e2a, 0xad4f, 0x5f8a, 0x0, 0x1);
        gbc.writeMem(0xb658, { 0x9b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1850, gbc.sp());
        EXPECT(0xb659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb658));
        // 9B 03D6
        gbc.setState(0x6fb7, 0xd734, 0x2790, 0x2b5, 0xb602, 0xcf8c, 0x1, 0x1);
        gbc.writeMem(0x6fb7, { 0x9b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd734, gbc.sp());
        EXPECT(0x6fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 03D7
        gbc.setState(0xbd58, 0x7617, 0x1c10, 0xe51e, 0xc9ba, 0x79b7, 0x0, 0x0);
        gbc.writeMem(0xbd58, { 0x9b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7617, gbc.sp());
        EXPECT(0xbd59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbd58));
        // 9B 03D8
        gbc.setState(0x857f, 0xda43, 0xf770, 0x66b0, 0x5220, 0x99d3, 0x0, 0x1);
        gbc.writeMem(0x857f, { 0x9b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xda43, gbc.sp());
        EXPECT(0x8580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x857f));
        // 9B 03D9
        gbc.setState(0x1d53, 0x2bfd, 0x2b10, 0x2965, 0xcd04, 0x9732, 0x1, 0x1);
        gbc.writeMem(0x1d53, { 0x9b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2bfd, gbc.sp());
        EXPECT(0x1d54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 03DA
        gbc.setState(0xa733, 0xce45, 0x68d0, 0x44b8, 0xb0ef, 0x90d1, 0x1, 0x0);
        gbc.writeMem(0xa733, { 0x9b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xce45, gbc.sp());
        EXPECT(0xa734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa733));
        // 9B 03DB
        gbc.setState(0x1e94, 0x7586, 0xf5e0, 0x7127, 0x2689, 0x6e86, 0x1, 0x1);
        gbc.writeMem(0x1e94, { 0x9b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7586, gbc.sp());
        EXPECT(0x1e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 03DC
        gbc.setState(0xa92d, 0x5cb6, 0xb810, 0xefb8, 0x3582, 0x8e97, 0x0, 0x0);
        gbc.writeMem(0xa92d, { 0x9b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5cb6, gbc.sp());
        EXPECT(0xa92e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa92d));
        // 9B 03DD
        gbc.setState(0xead9, 0x74d9, 0xc500, 0x8168, 0x22dc, 0xe879, 0x0, 0x1);
        gbc.writeMem(0xead9, { 0x9b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x74d9, gbc.sp());
        EXPECT(0xeada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xead9));
        // 9B 03DE
        gbc.setState(0x1adf, 0x8974, 0x6360, 0xa8dd, 0x8ce9, 0x5fbd, 0x0, 0x1);
        gbc.writeMem(0x1adf, { 0x9b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8974, gbc.sp());
        EXPECT(0x1ae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 03DF
        gbc.setState(0x9f40, 0x4745, 0xfae0, 0x9a12, 0x5d1e, 0xf615, 0x0, 0x0);
        gbc.writeMem(0x9f40, { 0x9b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4745, gbc.sp());
        EXPECT(0x9f41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9f40));
        // 9B 03E0
        gbc.setState(0x8be1, 0x7ae6, 0x3ce0, 0xf949, 0x31ac, 0x5940, 0x1, 0x1);
        gbc.writeMem(0x8be1, { 0x9b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7ae6, gbc.sp());
        EXPECT(0x8be2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8be1));
        // 9B 03E1
        gbc.setState(0x17e1, 0x46b0, 0xb70, 0xc5a4, 0xe5c, 0x521c, 0x1, 0x1);
        gbc.writeMem(0x17e1, { 0x9b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x46b0, gbc.sp());
        EXPECT(0x17e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 03E2
        gbc.setState(0xa6b2, 0xd8e9, 0x3d10, 0x453f, 0xdb03, 0x366f, 0x1, 0x0);
        gbc.writeMem(0xa6b2, { 0x9b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd8e9, gbc.sp());
        EXPECT(0xa6b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa6b2));
        // 9B 03E3
        gbc.setState(0x9d80, 0xcaa2, 0xd4a0, 0x3e81, 0xee86, 0x7cad, 0x0, 0x1);
        gbc.writeMem(0x9d80, { 0x9b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xcaa2, gbc.sp());
        EXPECT(0x9d81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9d80));
        // 9B 03E4
        gbc.setState(0xb1d5, 0xa644, 0xa5b0, 0xa944, 0xd06e, 0xda70, 0x0, 0x0);
        gbc.writeMem(0xb1d5, { 0x9b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa644, gbc.sp());
        EXPECT(0xb1d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb1d5));
        // 9B 03E5
        gbc.setState(0x6914, 0x5a4f, 0x92c0, 0x69ad, 0x44d5, 0xc616, 0x1, 0x1);
        gbc.writeMem(0x6914, { 0x9b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5a4f, gbc.sp());
        EXPECT(0x6915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9B 03E6
        gbc.setState(0x61f8, 0xd5cd, 0xbb00, 0x8cb2, 0x3112, 0xd93f, 0x1, 0x0);
        gbc.writeMem(0x61f8, { 0x9b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd5cd, gbc.sp());
        EXPECT(0x61f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9B 03E7
        gbc.setState(0x5fde, 0xe7cd, 0x9d90, 0xa9e1, 0x12b7, 0x14a8, 0x0, 0x0);
        gbc.writeMem(0x5fde, { 0x9b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe7cd, gbc.sp());
        EXPECT(0x5fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
