#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_68)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_68) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 68 0000
        gbc.setState(0xe180, 0x9901, 0xe550, 0x641c, 0xbca2, 0xa340, 0x1, 0x1);
        gbc.writeMem(0xe180, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x9901);
        EXPECT(gbc.pc(), 0xe182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe180), 0xcb);
        EXPECT(gbc.readMem(0xe181), 0x68);
        // CB 68 0001
        gbc.setState(0x2735, 0xd00d, 0xfdf0, 0xb0a5, 0xb7c, 0x4007, 0x0, 0x1);
        gbc.writeMem(0x2735, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd00d);
        EXPECT(gbc.pc(), 0x2737);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0002
        gbc.setState(0x8694, 0xd4be, 0xb570, 0x6e3c, 0x7e18, 0x5c28, 0x0, 0x0);
        gbc.writeMem(0x8694, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd4be);
        EXPECT(gbc.pc(), 0x8696);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8694), 0xcb);
        EXPECT(gbc.readMem(0x8695), 0x68);
        // CB 68 0003
        gbc.setState(0x5355, 0x6b32, 0x1280, 0x32b2, 0x5c40, 0x2619, 0x1, 0x0);
        gbc.writeMem(0x5355, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6b32);
        EXPECT(gbc.pc(), 0x5357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0004
        gbc.setState(0x8c8e, 0xb749, 0x7f90, 0x41da, 0x7ab3, 0x6aa8, 0x0, 0x1);
        gbc.writeMem(0x8c8e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb749);
        EXPECT(gbc.pc(), 0x8c90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c8e), 0xcb);
        EXPECT(gbc.readMem(0x8c8f), 0x68);
        // CB 68 0005
        gbc.setState(0xdcfc, 0x319, 0xde70, 0x257b, 0x3de2, 0x2c9d, 0x0, 0x1);
        gbc.writeMem(0xdcfc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x319);
        EXPECT(gbc.pc(), 0xdcfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcfc), 0xcb);
        EXPECT(gbc.readMem(0xdcfd), 0x68);
        // CB 68 0006
        gbc.setState(0x9550, 0x2724, 0x5630, 0x8193, 0x2e08, 0x22b4, 0x1, 0x1);
        gbc.writeMem(0x9550, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2724);
        EXPECT(gbc.pc(), 0x9552);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9550), 0xcb);
        EXPECT(gbc.readMem(0x9551), 0x68);
        // CB 68 0007
        gbc.setState(0xc5ec, 0x18b7, 0x28d0, 0xe4ac, 0x52f2, 0x9744, 0x0, 0x0);
        gbc.writeMem(0xc5ec, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x18b7);
        EXPECT(gbc.pc(), 0xc5ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5ec), 0xcb);
        EXPECT(gbc.readMem(0xc5ed), 0x68);
        // CB 68 0008
        gbc.setState(0x998e, 0x1826, 0xb400, 0xee18, 0xfc62, 0x753f, 0x0, 0x0);
        gbc.writeMem(0x998e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1826);
        EXPECT(gbc.pc(), 0x9990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x998e), 0xcb);
        EXPECT(gbc.readMem(0x998f), 0x68);
        // CB 68 0009
        gbc.setState(0x9c97, 0xd02c, 0x80f0, 0x17d2, 0x96ab, 0xc7c1, 0x0, 0x0);
        gbc.writeMem(0x9c97, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xd02c);
        EXPECT(gbc.pc(), 0x9c99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c97), 0xcb);
        EXPECT(gbc.readMem(0x9c98), 0x68);
        // CB 68 000A
        gbc.setState(0xe9ce, 0xb051, 0x51e0, 0xa0bd, 0x6df7, 0xf16, 0x1, 0x1);
        gbc.writeMem(0xe9ce, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb051);
        EXPECT(gbc.pc(), 0xe9d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ce), 0xcb);
        EXPECT(gbc.readMem(0xe9cf), 0x68);
        // CB 68 000B
        gbc.setState(0x5edd, 0xcd5, 0x86b0, 0xdc81, 0x75e5, 0x5f92, 0x1, 0x0);
        gbc.writeMem(0x5edd, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xcd5);
        EXPECT(gbc.pc(), 0x5edf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 000C
        gbc.setState(0x537d, 0xab6e, 0x3ee0, 0x635c, 0x28ce, 0xb347, 0x1, 0x0);
        gbc.writeMem(0x537d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xab6e);
        EXPECT(gbc.pc(), 0x537f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 000D
        gbc.setState(0xdc4d, 0xff3a, 0x1830, 0x888f, 0x857f, 0xfa28, 0x0, 0x0);
        gbc.writeMem(0xdc4d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xff3a);
        EXPECT(gbc.pc(), 0xdc4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc4d), 0xcb);
        EXPECT(gbc.readMem(0xdc4e), 0x68);
        // CB 68 000E
        gbc.setState(0x221c, 0x9962, 0x3030, 0xda6c, 0x9757, 0xcc21, 0x1, 0x0);
        gbc.writeMem(0x221c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9962);
        EXPECT(gbc.pc(), 0x221e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 000F
        gbc.setState(0xcdbc, 0x465c, 0x3ee0, 0x4de6, 0xcef3, 0xd887, 0x0, 0x0);
        gbc.writeMem(0xcdbc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x465c);
        EXPECT(gbc.pc(), 0xcdbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdbc), 0xcb);
        EXPECT(gbc.readMem(0xcdbd), 0x68);
        // CB 68 0010
        gbc.setState(0xb8aa, 0xcfd0, 0x5300, 0x452a, 0x374f, 0x693, 0x1, 0x1);
        gbc.writeMem(0xb8aa, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xcfd0);
        EXPECT(gbc.pc(), 0xb8ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8aa), 0xcb);
        EXPECT(gbc.readMem(0xb8ab), 0x68);
        // CB 68 0011
        gbc.setState(0x47fb, 0x1fc8, 0xfc20, 0xbbaf, 0x1663, 0x8cb9, 0x1, 0x1);
        gbc.writeMem(0x47fb, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1fc8);
        EXPECT(gbc.pc(), 0x47fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0012
        gbc.setState(0xcbed, 0x2f29, 0x6c10, 0x3e9e, 0xa691, 0xbf14, 0x0, 0x1);
        gbc.writeMem(0xcbed, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2f29);
        EXPECT(gbc.pc(), 0xcbef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbed), 0xcb);
        EXPECT(gbc.readMem(0xcbee), 0x68);
        // CB 68 0013
        gbc.setState(0x8725, 0x8c5d, 0x2160, 0x6d26, 0x777c, 0x1375, 0x1, 0x0);
        gbc.writeMem(0x8725, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x8c5d);
        EXPECT(gbc.pc(), 0x8727);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8725), 0xcb);
        EXPECT(gbc.readMem(0x8726), 0x68);
        // CB 68 0014
        gbc.setState(0x8e94, 0xe3ec, 0xa880, 0x9cb0, 0x5f02, 0x7099, 0x1, 0x0);
        gbc.writeMem(0x8e94, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe3ec);
        EXPECT(gbc.pc(), 0x8e96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e94), 0xcb);
        EXPECT(gbc.readMem(0x8e95), 0x68);
        // CB 68 0015
        gbc.setState(0x6a6e, 0xc9af, 0x7df0, 0x4516, 0x84d7, 0xdcc6, 0x1, 0x0);
        gbc.writeMem(0x6a6e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc9af);
        EXPECT(gbc.pc(), 0x6a70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0016
        gbc.setState(0xaba2, 0x1457, 0x6dd0, 0x1856, 0x60ba, 0x3528, 0x0, 0x0);
        gbc.writeMem(0xaba2, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x1457);
        EXPECT(gbc.pc(), 0xaba4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaba2), 0xcb);
        EXPECT(gbc.readMem(0xaba3), 0x68);
        // CB 68 0017
        gbc.setState(0xcd80, 0x8b04, 0x39b0, 0xc1d3, 0x69f1, 0x5384, 0x1, 0x0);
        gbc.writeMem(0xcd80, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x8b04);
        EXPECT(gbc.pc(), 0xcd82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd80), 0xcb);
        EXPECT(gbc.readMem(0xcd81), 0x68);
        // CB 68 0018
        gbc.setState(0x2a95, 0x33bb, 0x12d0, 0x20de, 0xa5fa, 0x9262, 0x0, 0x0);
        gbc.writeMem(0x2a95, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x33bb);
        EXPECT(gbc.pc(), 0x2a97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0019
        gbc.setState(0x8b42, 0xaa0b, 0x54c0, 0xce13, 0x54c7, 0x5e08, 0x1, 0x0);
        gbc.writeMem(0x8b42, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xaa0b);
        EXPECT(gbc.pc(), 0x8b44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b42), 0xcb);
        EXPECT(gbc.readMem(0x8b43), 0x68);
        // CB 68 001A
        gbc.setState(0xc955, 0xa604, 0x4150, 0x96e4, 0xc03d, 0x9044, 0x1, 0x1);
        gbc.writeMem(0xc955, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa604);
        EXPECT(gbc.pc(), 0xc957);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc955), 0xcb);
        EXPECT(gbc.readMem(0xc956), 0x68);
        // CB 68 001B
        gbc.setState(0x388d, 0xc44f, 0x6660, 0x1490, 0xd592, 0xa5f8, 0x1, 0x0);
        gbc.writeMem(0x388d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xc44f);
        EXPECT(gbc.pc(), 0x388f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 001C
        gbc.setState(0xe38d, 0xef74, 0xd70, 0x1d77, 0x7a22, 0x2ed4, 0x0, 0x0);
        gbc.writeMem(0xe38d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xef74);
        EXPECT(gbc.pc(), 0xe38f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe38d), 0xcb);
        EXPECT(gbc.readMem(0xe38e), 0x68);
        // CB 68 001E
        gbc.setState(0xb313, 0x7796, 0xa60, 0xd374, 0xc397, 0x74e4, 0x1, 0x0);
        gbc.writeMem(0xb313, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7796);
        EXPECT(gbc.pc(), 0xb315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb313), 0xcb);
        EXPECT(gbc.readMem(0xb314), 0x68);
        // CB 68 001F
        gbc.setState(0x42fc, 0xc399, 0x99d0, 0x2ccd, 0x426b, 0x495e, 0x1, 0x1);
        gbc.writeMem(0x42fc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc399);
        EXPECT(gbc.pc(), 0x42fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0020
        gbc.setState(0x846, 0xbd05, 0x9b80, 0xd3a8, 0xa3a, 0x8cf, 0x0, 0x1);
        gbc.writeMem(0x846, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xbd05);
        EXPECT(gbc.pc(), 0x848);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0021
        gbc.setState(0x3458, 0x6aad, 0x3d0, 0xb323, 0xb6ab, 0x4cd7, 0x1, 0x1);
        gbc.writeMem(0x3458, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6aad);
        EXPECT(gbc.pc(), 0x345a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0022
        gbc.setState(0xde06, 0x3dcb, 0x9140, 0x891c, 0x2e2f, 0xf086, 0x0, 0x1);
        gbc.writeMem(0xde06, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3dcb);
        EXPECT(gbc.pc(), 0xde08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde06), 0xcb);
        EXPECT(gbc.readMem(0xde07), 0x68);
        // CB 68 0023
        gbc.setState(0xc71a, 0xc1a8, 0x6720, 0xefbb, 0xabbb, 0x42e4, 0x1, 0x1);
        gbc.writeMem(0xc71a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc1a8);
        EXPECT(gbc.pc(), 0xc71c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc71a), 0xcb);
        EXPECT(gbc.readMem(0xc71b), 0x68);
        // CB 68 0024
        gbc.setState(0xb766, 0x2c2f, 0x1b20, 0x1513, 0xa864, 0x33e5, 0x0, 0x0);
        gbc.writeMem(0xb766, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2c2f);
        EXPECT(gbc.pc(), 0xb768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb766), 0xcb);
        EXPECT(gbc.readMem(0xb767), 0x68);
        // CB 68 0025
        gbc.setState(0x95e2, 0xd29d, 0x4700, 0xd78b, 0x83c2, 0x579a, 0x0, 0x0);
        gbc.writeMem(0x95e2, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd29d);
        EXPECT(gbc.pc(), 0x95e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95e2), 0xcb);
        EXPECT(gbc.readMem(0x95e3), 0x68);
        // CB 68 0026
        gbc.setState(0x3e1f, 0xb544, 0x9c60, 0xeca1, 0x9e80, 0x9e1a, 0x1, 0x0);
        gbc.writeMem(0x3e1f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb544);
        EXPECT(gbc.pc(), 0x3e21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0027
        gbc.setState(0x4acf, 0x1a92, 0x69b0, 0x554c, 0xad71, 0xb15c, 0x0, 0x0);
        gbc.writeMem(0x4acf, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1a92);
        EXPECT(gbc.pc(), 0x4ad1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0028
        gbc.setState(0xa648, 0x58b0, 0xc920, 0xec73, 0xd884, 0xd76f, 0x1, 0x1);
        gbc.writeMem(0xa648, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x58b0);
        EXPECT(gbc.pc(), 0xa64a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa648), 0xcb);
        EXPECT(gbc.readMem(0xa649), 0x68);
        // CB 68 0029
        gbc.setState(0xc39, 0xc651, 0xc1b0, 0xec82, 0xef, 0x28f0, 0x0, 0x0);
        gbc.writeMem(0xc39, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc651);
        EXPECT(gbc.pc(), 0xc3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 002A
        gbc.setState(0x9ca0, 0xa285, 0x91c0, 0xb49a, 0x27d, 0x9a81, 0x0, 0x1);
        gbc.writeMem(0x9ca0, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa285);
        EXPECT(gbc.pc(), 0x9ca2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ca0), 0xcb);
        EXPECT(gbc.readMem(0x9ca1), 0x68);
        // CB 68 002B
        gbc.setState(0xe710, 0x8a7b, 0xe440, 0xbb83, 0xb1ac, 0xa4d, 0x1, 0x0);
        gbc.writeMem(0xe710, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8a7b);
        EXPECT(gbc.pc(), 0xe712);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe710), 0xcb);
        EXPECT(gbc.readMem(0xe711), 0x68);
        // CB 68 002C
        gbc.setState(0xb0b1, 0xf122, 0x8a40, 0xb6be, 0x68e8, 0xfcb8, 0x0, 0x0);
        gbc.writeMem(0xb0b1, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf122);
        EXPECT(gbc.pc(), 0xb0b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0b1), 0xcb);
        EXPECT(gbc.readMem(0xb0b2), 0x68);
        // CB 68 002D
        gbc.setState(0x47a6, 0x4a57, 0xf110, 0xd239, 0xbf37, 0xe297, 0x0, 0x1);
        gbc.writeMem(0x47a6, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x4a57);
        EXPECT(gbc.pc(), 0x47a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 002E
        gbc.setState(0x28fa, 0x6e78, 0xff20, 0xd871, 0x75bd, 0xe815, 0x1, 0x0);
        gbc.writeMem(0x28fa, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6e78);
        EXPECT(gbc.pc(), 0x28fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 002F
        gbc.setState(0xa395, 0x4497, 0x36f0, 0xa4ba, 0x820, 0x1d34, 0x1, 0x1);
        gbc.writeMem(0xa395, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4497);
        EXPECT(gbc.pc(), 0xa397);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa395), 0xcb);
        EXPECT(gbc.readMem(0xa396), 0x68);
        // CB 68 0030
        gbc.setState(0x80f7, 0xa036, 0xc090, 0x6c91, 0x6593, 0x3d5d, 0x1, 0x0);
        gbc.writeMem(0x80f7, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa036);
        EXPECT(gbc.pc(), 0x80f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80f7), 0xcb);
        EXPECT(gbc.readMem(0x80f8), 0x68);
        // CB 68 0031
        gbc.setState(0x6188, 0xfe6a, 0xbb30, 0x1d3, 0x1ff4, 0xf054, 0x0, 0x0);
        gbc.writeMem(0x6188, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xfe6a);
        EXPECT(gbc.pc(), 0x618a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0032
        gbc.setState(0xe30f, 0x5c39, 0xa620, 0xeb98, 0xf0a2, 0x8953, 0x0, 0x0);
        gbc.writeMem(0xe30f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5c39);
        EXPECT(gbc.pc(), 0xe311);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe30f), 0xcb);
        EXPECT(gbc.readMem(0xe310), 0x68);
        // CB 68 0033
        gbc.setState(0x77d2, 0xa750, 0x3520, 0x1edb, 0xd12, 0xb1a3, 0x0, 0x1);
        gbc.writeMem(0x77d2, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa750);
        EXPECT(gbc.pc(), 0x77d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0034
        gbc.setState(0x7dcf, 0x8735, 0x4380, 0xc364, 0xb023, 0x7e0f, 0x0, 0x0);
        gbc.writeMem(0x7dcf, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8735);
        EXPECT(gbc.pc(), 0x7dd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0035
        gbc.setState(0x416a, 0x7e0a, 0x8710, 0xb534, 0xd052, 0x8a69, 0x0, 0x1);
        gbc.writeMem(0x416a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x7e0a);
        EXPECT(gbc.pc(), 0x416c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0036
        gbc.setState(0x1a36, 0xe8d8, 0xba60, 0x89d8, 0x78c4, 0xea81, 0x1, 0x0);
        gbc.writeMem(0x1a36, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe8d8);
        EXPECT(gbc.pc(), 0x1a38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0037
        gbc.setState(0xea1f, 0xa6d0, 0xfc90, 0x6e6a, 0x574c, 0x8a49, 0x1, 0x1);
        gbc.writeMem(0xea1f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa6d0);
        EXPECT(gbc.pc(), 0xea21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea1f), 0xcb);
        EXPECT(gbc.readMem(0xea20), 0x68);
        // CB 68 0038
        gbc.setState(0xa962, 0xc6e0, 0x6240, 0x2476, 0xa382, 0x9ede, 0x1, 0x1);
        gbc.writeMem(0xa962, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc6e0);
        EXPECT(gbc.pc(), 0xa964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa962), 0xcb);
        EXPECT(gbc.readMem(0xa963), 0x68);
        // CB 68 0039
        gbc.setState(0xa136, 0x2cb4, 0xfd30, 0x89c4, 0x5d9c, 0xc017, 0x1, 0x1);
        gbc.writeMem(0xa136, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2cb4);
        EXPECT(gbc.pc(), 0xa138);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa136), 0xcb);
        EXPECT(gbc.readMem(0xa137), 0x68);
        // CB 68 003A
        gbc.setState(0xc112, 0xad2f, 0x1d90, 0xf814, 0x5691, 0x4610, 0x1, 0x1);
        gbc.writeMem(0xc112, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xad2f);
        EXPECT(gbc.pc(), 0xc114);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc112), 0xcb);
        EXPECT(gbc.readMem(0xc113), 0x68);
        // CB 68 003B
        gbc.setState(0x6b7b, 0x889, 0x34b0, 0x555a, 0x2f76, 0xd857, 0x1, 0x0);
        gbc.writeMem(0x6b7b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x889);
        EXPECT(gbc.pc(), 0x6b7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 003C
        gbc.setState(0x9f87, 0xc0, 0x2a10, 0x5b0b, 0xaad8, 0xb3bb, 0x0, 0x0);
        gbc.writeMem(0x9f87, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xc0);
        EXPECT(gbc.pc(), 0x9f89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f87), 0xcb);
        EXPECT(gbc.readMem(0x9f88), 0x68);
        // CB 68 003D
        gbc.setState(0x72ba, 0xeac6, 0x18a0, 0x751e, 0x3be0, 0xc19, 0x0, 0x1);
        gbc.writeMem(0x72ba, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xeac6);
        EXPECT(gbc.pc(), 0x72bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 003E
        gbc.setState(0x442d, 0xc77f, 0xf830, 0xd02e, 0xb630, 0x2559, 0x0, 0x1);
        gbc.writeMem(0x442d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc77f);
        EXPECT(gbc.pc(), 0x442f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 003F
        gbc.setState(0x9a24, 0x23a4, 0xd1d0, 0x7360, 0x17b5, 0x2cc8, 0x0, 0x1);
        gbc.writeMem(0x9a24, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x23a4);
        EXPECT(gbc.pc(), 0x9a26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a24), 0xcb);
        EXPECT(gbc.readMem(0x9a25), 0x68);
        // CB 68 0040
        gbc.setState(0xc77a, 0xcf81, 0xe3c0, 0xf4ed, 0xe6f7, 0xb9f2, 0x1, 0x1);
        gbc.writeMem(0xc77a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xcf81);
        EXPECT(gbc.pc(), 0xc77c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc77a), 0xcb);
        EXPECT(gbc.readMem(0xc77b), 0x68);
        // CB 68 0041
        gbc.setState(0xe1c3, 0xb180, 0x9ae0, 0x1a17, 0x4db6, 0xa7b3, 0x0, 0x0);
        gbc.writeMem(0xe1c3, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb180);
        EXPECT(gbc.pc(), 0xe1c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1c3), 0xcb);
        EXPECT(gbc.readMem(0xe1c4), 0x68);
        // CB 68 0042
        gbc.setState(0x73ca, 0xd018, 0xecf0, 0x52dc, 0x220f, 0x7ee6, 0x1, 0x0);
        gbc.writeMem(0x73ca, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd018);
        EXPECT(gbc.pc(), 0x73cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0043
        gbc.setState(0x2fac, 0xef94, 0x5d30, 0x64c7, 0x141, 0xacdf, 0x1, 0x1);
        gbc.writeMem(0x2fac, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xef94);
        EXPECT(gbc.pc(), 0x2fae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0044
        gbc.setState(0x372d, 0x1903, 0xa290, 0x43fa, 0x5b17, 0x66bd, 0x1, 0x0);
        gbc.writeMem(0x372d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1903);
        EXPECT(gbc.pc(), 0x372f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0045
        gbc.setState(0x3a2a, 0x7a1d, 0x7190, 0x4c07, 0xfaef, 0xf5a9, 0x0, 0x0);
        gbc.writeMem(0x3a2a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7a1d);
        EXPECT(gbc.pc(), 0x3a2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0046
        gbc.setState(0xec69, 0xd916, 0xb610, 0x1dbc, 0xdca8, 0x61e4, 0x1, 0x0);
        gbc.writeMem(0xec69, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd916);
        EXPECT(gbc.pc(), 0xec6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec69), 0xcb);
        EXPECT(gbc.readMem(0xec6a), 0x68);
        // CB 68 0047
        gbc.setState(0xb079, 0x6377, 0x140, 0xa1fe, 0x2880, 0x91a8, 0x0, 0x0);
        gbc.writeMem(0xb079, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6377);
        EXPECT(gbc.pc(), 0xb07b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb079), 0xcb);
        EXPECT(gbc.readMem(0xb07a), 0x68);
        // CB 68 0048
        gbc.setState(0x768c, 0x255a, 0x1e90, 0x5308, 0x22b9, 0x1a43, 0x0, 0x1);
        gbc.writeMem(0x768c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x255a);
        EXPECT(gbc.pc(), 0x768e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0049
        gbc.setState(0xd815, 0xf32, 0x33d0, 0x9356, 0xbd9f, 0xf896, 0x0, 0x0);
        gbc.writeMem(0xd815, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf32);
        EXPECT(gbc.pc(), 0xd817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd815), 0xcb);
        EXPECT(gbc.readMem(0xd816), 0x68);
        // CB 68 004A
        gbc.setState(0x8f9d, 0xec4d, 0xc2c0, 0xaba6, 0x368b, 0x1a79, 0x1, 0x0);
        gbc.writeMem(0x8f9d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xec4d);
        EXPECT(gbc.pc(), 0x8f9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f9d), 0xcb);
        EXPECT(gbc.readMem(0x8f9e), 0x68);
        // CB 68 004B
        gbc.setState(0x113a, 0x7aa4, 0xfa80, 0xc813, 0xa274, 0x63bc, 0x0, 0x1);
        gbc.writeMem(0x113a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7aa4);
        EXPECT(gbc.pc(), 0x113c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 004C
        gbc.setState(0x8768, 0xc659, 0x9e00, 0xc36a, 0xe6bd, 0x665, 0x1, 0x1);
        gbc.writeMem(0x8768, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc659);
        EXPECT(gbc.pc(), 0x876a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8768), 0xcb);
        EXPECT(gbc.readMem(0x8769), 0x68);
        // CB 68 004D
        gbc.setState(0x2f58, 0x221c, 0x290, 0x5593, 0x6a41, 0x5562, 0x0, 0x1);
        gbc.writeMem(0x2f58, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x221c);
        EXPECT(gbc.pc(), 0x2f5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 004E
        gbc.setState(0x8de1, 0x23c0, 0x2320, 0x42de, 0x69de, 0xc30d, 0x0, 0x0);
        gbc.writeMem(0x8de1, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x23c0);
        EXPECT(gbc.pc(), 0x8de3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8de1), 0xcb);
        EXPECT(gbc.readMem(0x8de2), 0x68);
        // CB 68 004F
        gbc.setState(0x7099, 0x99ad, 0xc520, 0xcfc5, 0x1649, 0xef6e, 0x0, 0x0);
        gbc.writeMem(0x7099, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x99ad);
        EXPECT(gbc.pc(), 0x709b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0050
        gbc.setState(0x634f, 0x97c8, 0x9cc0, 0x6ab9, 0xe6fd, 0x52d6, 0x0, 0x0);
        gbc.writeMem(0x634f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x97c8);
        EXPECT(gbc.pc(), 0x6351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0051
        gbc.setState(0xcf2e, 0x838f, 0xd410, 0x9aed, 0x808f, 0x1a7b, 0x1, 0x1);
        gbc.writeMem(0xcf2e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x838f);
        EXPECT(gbc.pc(), 0xcf30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf2e), 0xcb);
        EXPECT(gbc.readMem(0xcf2f), 0x68);
        // CB 68 0052
        gbc.setState(0xa477, 0x7474, 0x61e0, 0xbd4e, 0x7b5, 0x1e5f, 0x1, 0x0);
        gbc.writeMem(0xa477, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x7474);
        EXPECT(gbc.pc(), 0xa479);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa477), 0xcb);
        EXPECT(gbc.readMem(0xa478), 0x68);
        // CB 68 0053
        gbc.setState(0x8863, 0x2a9, 0x7f30, 0xf457, 0xa1ed, 0xb5aa, 0x1, 0x0);
        gbc.writeMem(0x8863, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2a9);
        EXPECT(gbc.pc(), 0x8865);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8863), 0xcb);
        EXPECT(gbc.readMem(0x8864), 0x68);
        // CB 68 0054
        gbc.setState(0xdb32, 0x2389, 0x8a20, 0x571d, 0x2d18, 0x2f3c, 0x1, 0x0);
        gbc.writeMem(0xdb32, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2389);
        EXPECT(gbc.pc(), 0xdb34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb32), 0xcb);
        EXPECT(gbc.readMem(0xdb33), 0x68);
        // CB 68 0055
        gbc.setState(0x7145, 0x8c5e, 0x2770, 0xa689, 0xe68e, 0x948c, 0x0, 0x1);
        gbc.writeMem(0x7145, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8c5e);
        EXPECT(gbc.pc(), 0x7147);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0056
        gbc.setState(0x30c, 0x355, 0x4eb0, 0x1838, 0x9da7, 0xfac6, 0x0, 0x0);
        gbc.writeMem(0x30c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x355);
        EXPECT(gbc.pc(), 0x30e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0057
        gbc.setState(0xe4f, 0x4dcf, 0xe8d0, 0xa7e, 0xc920, 0xed80, 0x1, 0x1);
        gbc.writeMem(0xe4f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4dcf);
        EXPECT(gbc.pc(), 0xe51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0058
        gbc.setState(0xeef2, 0x8dd7, 0x7820, 0xd788, 0xe35d, 0x4fec, 0x0, 0x1);
        gbc.writeMem(0xeef2, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8dd7);
        EXPECT(gbc.pc(), 0xeef4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeef2), 0xcb);
        EXPECT(gbc.readMem(0xeef3), 0x68);
        // CB 68 0059
        gbc.setState(0xad6a, 0x6290, 0x6140, 0x73d3, 0xd213, 0x34c3, 0x1, 0x0);
        gbc.writeMem(0xad6a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x6290);
        EXPECT(gbc.pc(), 0xad6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad6a), 0xcb);
        EXPECT(gbc.readMem(0xad6b), 0x68);
        // CB 68 005A
        gbc.setState(0xf67, 0x1f7f, 0x6790, 0x97d6, 0x8655, 0x9f13, 0x1, 0x0);
        gbc.writeMem(0xf67, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1f7f);
        EXPECT(gbc.pc(), 0xf69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 005B
        gbc.setState(0x44d4, 0xcb4, 0x7c50, 0x8c5e, 0xe4c4, 0x4065, 0x0, 0x1);
        gbc.writeMem(0x44d4, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xcb4);
        EXPECT(gbc.pc(), 0x44d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 005C
        gbc.setState(0xe974, 0x68ed, 0x2e30, 0xb2e2, 0xd7af, 0x3f8c, 0x1, 0x0);
        gbc.writeMem(0xe974, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x68ed);
        EXPECT(gbc.pc(), 0xe976);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe974), 0xcb);
        EXPECT(gbc.readMem(0xe975), 0x68);
        // CB 68 005D
        gbc.setState(0xebf2, 0xe946, 0xd30, 0x88cf, 0x780f, 0x1fc6, 0x0, 0x0);
        gbc.writeMem(0xebf2, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe946);
        EXPECT(gbc.pc(), 0xebf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebf2), 0xcb);
        EXPECT(gbc.readMem(0xebf3), 0x68);
        // CB 68 005E
        gbc.setState(0xa9b7, 0x8f1a, 0xcec0, 0x9a99, 0xd48d, 0x4066, 0x1, 0x1);
        gbc.writeMem(0xa9b7, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8f1a);
        EXPECT(gbc.pc(), 0xa9b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9b7), 0xcb);
        EXPECT(gbc.readMem(0xa9b8), 0x68);
        // CB 68 005F
        gbc.setState(0x417d, 0xfea0, 0xe4a0, 0x119c, 0x173, 0x37ca, 0x1, 0x0);
        gbc.writeMem(0x417d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xfea0);
        EXPECT(gbc.pc(), 0x417f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0060
        gbc.setState(0xb06e, 0x9499, 0xc210, 0x8a8c, 0xac77, 0x5ec4, 0x1, 0x0);
        gbc.writeMem(0xb06e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x9499);
        EXPECT(gbc.pc(), 0xb070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb06e), 0xcb);
        EXPECT(gbc.readMem(0xb06f), 0x68);
        // CB 68 0061
        gbc.setState(0x942f, 0x16bc, 0x4210, 0xdbc7, 0x9bc3, 0xbe78, 0x1, 0x1);
        gbc.writeMem(0x942f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x16bc);
        EXPECT(gbc.pc(), 0x9431);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x942f), 0xcb);
        EXPECT(gbc.readMem(0x9430), 0x68);
        // CB 68 0062
        gbc.setState(0x52f, 0x4ddf, 0x4110, 0xa602, 0xde11, 0x2f53, 0x1, 0x0);
        gbc.writeMem(0x52f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4ddf);
        EXPECT(gbc.pc(), 0x531);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0063
        gbc.setState(0x1c41, 0x2fd0, 0xc40, 0x73b0, 0x8c04, 0x4674, 0x1, 0x0);
        gbc.writeMem(0x1c41, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2fd0);
        EXPECT(gbc.pc(), 0x1c43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0064
        gbc.setState(0x4985, 0x132c, 0xfd60, 0x8777, 0x947, 0xdaa9, 0x0, 0x1);
        gbc.writeMem(0x4985, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x132c);
        EXPECT(gbc.pc(), 0x4987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0065
        gbc.setState(0x63c5, 0x377a, 0xac30, 0x6ecf, 0x45b8, 0x1593, 0x0, 0x0);
        gbc.writeMem(0x63c5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x377a);
        EXPECT(gbc.pc(), 0x63c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0066
        gbc.setState(0x7f61, 0xa2a0, 0xad20, 0x27f6, 0x4e18, 0x3c5d, 0x0, 0x1);
        gbc.writeMem(0x7f61, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa2a0);
        EXPECT(gbc.pc(), 0x7f63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0068
        gbc.setState(0xce40, 0xaec7, 0xd640, 0x2a20, 0xc120, 0xb120, 0x0, 0x0);
        gbc.writeMem(0xce40, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xaec7);
        EXPECT(gbc.pc(), 0xce42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce40), 0xcb);
        EXPECT(gbc.readMem(0xce41), 0x68);
        // CB 68 006A
        gbc.setState(0x6a74, 0x5f91, 0xa260, 0x62bd, 0x115b, 0x24f8, 0x0, 0x0);
        gbc.writeMem(0x6a74, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x5f91);
        EXPECT(gbc.pc(), 0x6a76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 006B
        gbc.setState(0xb95, 0x8644, 0x9e10, 0x345, 0xf5ee, 0xd57f, 0x1, 0x0);
        gbc.writeMem(0xb95, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8644);
        EXPECT(gbc.pc(), 0xb97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 006C
        gbc.setState(0x7c31, 0x20a5, 0x91b0, 0x8d9, 0x8405, 0x98db, 0x1, 0x1);
        gbc.writeMem(0x7c31, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x20a5);
        EXPECT(gbc.pc(), 0x7c33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 006D
        gbc.setState(0x34bb, 0xe6c5, 0xc790, 0xaed2, 0xebb4, 0xd5c6, 0x0, 0x1);
        gbc.writeMem(0x34bb, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe6c5);
        EXPECT(gbc.pc(), 0x34bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 006E
        gbc.setState(0x174c, 0x301f, 0xd6a0, 0x3eab, 0x1606, 0xf388, 0x1, 0x0);
        gbc.writeMem(0x174c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x301f);
        EXPECT(gbc.pc(), 0x174e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 006F
        gbc.setState(0xa442, 0x692f, 0x8930, 0x426b, 0x9f72, 0x7323, 0x0, 0x0);
        gbc.writeMem(0xa442, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x692f);
        EXPECT(gbc.pc(), 0xa444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa442), 0xcb);
        EXPECT(gbc.readMem(0xa443), 0x68);
        // CB 68 0070
        gbc.setState(0x738c, 0xe247, 0x1310, 0x6e30, 0x6fb7, 0xa9cf, 0x0, 0x0);
        gbc.writeMem(0x738c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xe247);
        EXPECT(gbc.pc(), 0x738e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0071
        gbc.setState(0x9d27, 0x2f44, 0xd2b0, 0xd73c, 0x24d0, 0xd0d2, 0x1, 0x1);
        gbc.writeMem(0x9d27, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2f44);
        EXPECT(gbc.pc(), 0x9d29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d27), 0xcb);
        EXPECT(gbc.readMem(0x9d28), 0x68);
        // CB 68 0072
        gbc.setState(0xb34b, 0x8346, 0x6a40, 0xca84, 0x94f2, 0x93f1, 0x1, 0x1);
        gbc.writeMem(0xb34b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x8346);
        EXPECT(gbc.pc(), 0xb34d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb34b), 0xcb);
        EXPECT(gbc.readMem(0xb34c), 0x68);
        // CB 68 0073
        gbc.setState(0xa3de, 0xec7c, 0x8170, 0x76d6, 0x8960, 0xab50, 0x1, 0x1);
        gbc.writeMem(0xa3de, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xec7c);
        EXPECT(gbc.pc(), 0xa3e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3de), 0xcb);
        EXPECT(gbc.readMem(0xa3df), 0x68);
        // CB 68 0074
        gbc.setState(0x7ca4, 0x197c, 0x5570, 0xe50b, 0x36bf, 0xb7bb, 0x1, 0x0);
        gbc.writeMem(0x7ca4, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x197c);
        EXPECT(gbc.pc(), 0x7ca6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0075
        gbc.setState(0x22ee, 0x546, 0xef40, 0x7aaf, 0x4fea, 0xc0d, 0x0, 0x0);
        gbc.writeMem(0x22ee, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x546);
        EXPECT(gbc.pc(), 0x22f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0076
        gbc.setState(0x8ab2, 0x4b3, 0xa7e0, 0xc56e, 0x3f0f, 0x3492, 0x0, 0x1);
        gbc.writeMem(0x8ab2, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x4b3);
        EXPECT(gbc.pc(), 0x8ab4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ab2), 0xcb);
        EXPECT(gbc.readMem(0x8ab3), 0x68);
        // CB 68 0077
        gbc.setState(0x74df, 0x351, 0xbc30, 0xfa20, 0x7fc, 0x5fe5, 0x1, 0x1);
        gbc.writeMem(0x74df, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x351);
        EXPECT(gbc.pc(), 0x74e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0078
        gbc.setState(0xa04a, 0x3f9e, 0xd940, 0x11bb, 0xfd93, 0xc786, 0x0, 0x1);
        gbc.writeMem(0xa04a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3f9e);
        EXPECT(gbc.pc(), 0xa04c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa04a), 0xcb);
        EXPECT(gbc.readMem(0xa04b), 0x68);
        // CB 68 0079
        gbc.setState(0xbdef, 0xea16, 0x660, 0xae93, 0x17e7, 0x87e9, 0x1, 0x0);
        gbc.writeMem(0xbdef, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xea16);
        EXPECT(gbc.pc(), 0xbdf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdef), 0xcb);
        EXPECT(gbc.readMem(0xbdf0), 0x68);
        // CB 68 007A
        gbc.setState(0x71d1, 0xca81, 0xad20, 0xc14f, 0x8f6d, 0xbc9c, 0x1, 0x1);
        gbc.writeMem(0x71d1, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xca81);
        EXPECT(gbc.pc(), 0x71d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 007B
        gbc.setState(0x796a, 0x1d7e, 0xacc0, 0x46a6, 0xf23d, 0xd836, 0x0, 0x0);
        gbc.writeMem(0x796a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x1d7e);
        EXPECT(gbc.pc(), 0x796c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 007C
        gbc.setState(0xd9c4, 0x5677, 0xdbd0, 0xe12, 0x1511, 0xebd7, 0x0, 0x1);
        gbc.writeMem(0xd9c4, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x5677);
        EXPECT(gbc.pc(), 0xd9c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9c4), 0xcb);
        EXPECT(gbc.readMem(0xd9c5), 0x68);
        // CB 68 007D
        gbc.setState(0xae37, 0x7e6b, 0x4230, 0x801d, 0x9c45, 0xf117, 0x0, 0x1);
        gbc.writeMem(0xae37, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7e6b);
        EXPECT(gbc.pc(), 0xae39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae37), 0xcb);
        EXPECT(gbc.readMem(0xae38), 0x68);
        // CB 68 007E
        gbc.setState(0x6fd4, 0x3770, 0x7260, 0x4afe, 0xc526, 0x9776, 0x0, 0x1);
        gbc.writeMem(0x6fd4, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3770);
        EXPECT(gbc.pc(), 0x6fd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 007F
        gbc.setState(0x15ca, 0x19ee, 0xa580, 0xb7f, 0x8558, 0x7e7a, 0x0, 0x1);
        gbc.writeMem(0x15ca, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x19ee);
        EXPECT(gbc.pc(), 0x15cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0080
        gbc.setState(0x5c02, 0x7b17, 0x95c0, 0xbd7f, 0x702, 0x304c, 0x0, 0x1);
        gbc.writeMem(0x5c02, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7b17);
        EXPECT(gbc.pc(), 0x5c04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0081
        gbc.setState(0xd393, 0xad25, 0xd30, 0x548a, 0xad29, 0x824a, 0x1, 0x1);
        gbc.writeMem(0xd393, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xad25);
        EXPECT(gbc.pc(), 0xd395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd393), 0xcb);
        EXPECT(gbc.readMem(0xd394), 0x68);
        // CB 68 0083
        gbc.setState(0xd965, 0x8cf1, 0x1600, 0x7d97, 0x8624, 0x32fe, 0x1, 0x1);
        gbc.writeMem(0xd965, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x8cf1);
        EXPECT(gbc.pc(), 0xd967);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd965), 0xcb);
        EXPECT(gbc.readMem(0xd966), 0x68);
        // CB 68 0084
        gbc.setState(0x4881, 0xf6b9, 0x3860, 0x30d9, 0x7c6a, 0x1cb3, 0x1, 0x1);
        gbc.writeMem(0x4881, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf6b9);
        EXPECT(gbc.pc(), 0x4883);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0085
        gbc.setState(0x7a3, 0x9dd7, 0xce20, 0x817a, 0x961a, 0xeb1e, 0x0, 0x1);
        gbc.writeMem(0x7a3, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x9dd7);
        EXPECT(gbc.pc(), 0x7a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0086
        gbc.setState(0xb944, 0x4b38, 0x3830, 0x6b35, 0x6380, 0xe92a, 0x1, 0x1);
        gbc.writeMem(0xb944, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4b38);
        EXPECT(gbc.pc(), 0xb946);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb944), 0xcb);
        EXPECT(gbc.readMem(0xb945), 0x68);
        // CB 68 0087
        gbc.setState(0x52b0, 0x62c, 0x8180, 0x50cf, 0xd928, 0xa0f1, 0x0, 0x1);
        gbc.writeMem(0x52b0, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x62c);
        EXPECT(gbc.pc(), 0x52b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0088
        gbc.setState(0xd16d, 0x29a6, 0x33c0, 0x136e, 0x9603, 0xf2ed, 0x0, 0x0);
        gbc.writeMem(0xd16d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x29a6);
        EXPECT(gbc.pc(), 0xd16f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd16d), 0xcb);
        EXPECT(gbc.readMem(0xd16e), 0x68);
        // CB 68 008A
        gbc.setState(0xbbc7, 0x46e, 0x1a90, 0xd740, 0x3394, 0xbcca, 0x1, 0x1);
        gbc.writeMem(0xbbc7, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x46e);
        EXPECT(gbc.pc(), 0xbbc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbc7), 0xcb);
        EXPECT(gbc.readMem(0xbbc8), 0x68);
        // CB 68 008B
        gbc.setState(0x8c4c, 0xe7b0, 0x5810, 0x835c, 0x7314, 0x1659, 0x0, 0x1);
        gbc.writeMem(0x8c4c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe7b0);
        EXPECT(gbc.pc(), 0x8c4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c4c), 0xcb);
        EXPECT(gbc.readMem(0x8c4d), 0x68);
        // CB 68 008C
        gbc.setState(0xad19, 0xc733, 0x8b40, 0x71bb, 0x158f, 0xd4f2, 0x1, 0x0);
        gbc.writeMem(0xad19, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc733);
        EXPECT(gbc.pc(), 0xad1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad19), 0xcb);
        EXPECT(gbc.readMem(0xad1a), 0x68);
        // CB 68 008E
        gbc.setState(0x95b1, 0x755e, 0xd6c0, 0x4cc0, 0x31b0, 0xadb, 0x1, 0x0);
        gbc.writeMem(0x95b1, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x755e);
        EXPECT(gbc.pc(), 0x95b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95b1), 0xcb);
        EXPECT(gbc.readMem(0x95b2), 0x68);
        // CB 68 008F
        gbc.setState(0x4f6d, 0x569c, 0x5da0, 0x706d, 0x6cc3, 0xe3be, 0x0, 0x1);
        gbc.writeMem(0x4f6d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x569c);
        EXPECT(gbc.pc(), 0x4f6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0090
        gbc.setState(0x98b, 0xdacf, 0xad10, 0xb5f7, 0xcc4b, 0xbcbd, 0x1, 0x0);
        gbc.writeMem(0x98b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xdacf);
        EXPECT(gbc.pc(), 0x98d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0091
        gbc.setState(0xee40, 0xeee3, 0xeba0, 0x586c, 0xc26f, 0xa494, 0x0, 0x1);
        gbc.writeMem(0xee40, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xeee3);
        EXPECT(gbc.pc(), 0xee42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee40), 0xcb);
        EXPECT(gbc.readMem(0xee41), 0x68);
        // CB 68 0092
        gbc.setState(0x53e2, 0xb279, 0x9d00, 0x9a69, 0xc360, 0x716, 0x0, 0x0);
        gbc.writeMem(0x53e2, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb279);
        EXPECT(gbc.pc(), 0x53e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0095
        gbc.setState(0x3500, 0xb682, 0xd6d0, 0x204c, 0xfbd8, 0x7258, 0x1, 0x0);
        gbc.writeMem(0x3500, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb682);
        EXPECT(gbc.pc(), 0x3502);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0096
        gbc.setState(0x6480, 0x37f6, 0xf7a0, 0xd8b4, 0x3190, 0xcd5a, 0x1, 0x0);
        gbc.writeMem(0x6480, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x37f6);
        EXPECT(gbc.pc(), 0x6482);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0097
        gbc.setState(0xe3d1, 0xe4f2, 0x74c0, 0xf1c0, 0x157f, 0x59e3, 0x1, 0x0);
        gbc.writeMem(0xe3d1, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe4f2);
        EXPECT(gbc.pc(), 0xe3d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3d1), 0xcb);
        EXPECT(gbc.readMem(0xe3d2), 0x68);
        // CB 68 0098
        gbc.setState(0xdd6e, 0xccde, 0xbf20, 0xc3a7, 0xf2bc, 0x13e6, 0x0, 0x0);
        gbc.writeMem(0xdd6e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xccde);
        EXPECT(gbc.pc(), 0xdd70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd6e), 0xcb);
        EXPECT(gbc.readMem(0xdd6f), 0x68);
        // CB 68 0099
        gbc.setState(0x4466, 0xeb5d, 0x2a20, 0xd215, 0x4dbc, 0xe9e, 0x0, 0x0);
        gbc.writeMem(0x4466, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xeb5d);
        EXPECT(gbc.pc(), 0x4468);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 009A
        gbc.setState(0x4031, 0x35df, 0x3af0, 0x5e5d, 0x5479, 0x2575, 0x1, 0x1);
        gbc.writeMem(0x4031, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x35df);
        EXPECT(gbc.pc(), 0x4033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 009B
        gbc.setState(0xe2fa, 0x4b66, 0x4030, 0xd36f, 0x121, 0x3597, 0x0, 0x1);
        gbc.writeMem(0xe2fa, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x4b66);
        EXPECT(gbc.pc(), 0xe2fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2fa), 0xcb);
        EXPECT(gbc.readMem(0xe2fb), 0x68);
        // CB 68 009C
        gbc.setState(0x2723, 0x40ca, 0x56b0, 0x4094, 0x4958, 0xf84b, 0x0, 0x0);
        gbc.writeMem(0x2723, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x40ca);
        EXPECT(gbc.pc(), 0x2725);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 009D
        gbc.setState(0x1f15, 0x58ea, 0xc520, 0x35e6, 0x9752, 0x5788, 0x0, 0x0);
        gbc.writeMem(0x1f15, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x58ea);
        EXPECT(gbc.pc(), 0x1f17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 009E
        gbc.setState(0xc5f8, 0xaf68, 0xcef0, 0xde22, 0x2c47, 0xc517, 0x0, 0x0);
        gbc.writeMem(0xc5f8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xaf68);
        EXPECT(gbc.pc(), 0xc5fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5f8), 0xcb);
        EXPECT(gbc.readMem(0xc5f9), 0x68);
        // CB 68 009F
        gbc.setState(0x1595, 0xde54, 0x5530, 0xc8a1, 0x191, 0xaf9b, 0x0, 0x1);
        gbc.writeMem(0x1595, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xde54);
        EXPECT(gbc.pc(), 0x1597);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 00A0
        gbc.setState(0x4865, 0x23ae, 0x840, 0x1610, 0xb2e2, 0x48a8, 0x1, 0x0);
        gbc.writeMem(0x4865, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x23ae);
        EXPECT(gbc.pc(), 0x4867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 00A1
        gbc.setState(0xeeab, 0xaaa1, 0x1e70, 0x8815, 0xc448, 0x4995, 0x0, 0x0);
        gbc.writeMem(0xeeab, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xaaa1);
        EXPECT(gbc.pc(), 0xeead);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeab), 0xcb);
        EXPECT(gbc.readMem(0xeeac), 0x68);
        // CB 68 00A2
        gbc.setState(0xeced, 0x2146, 0x1340, 0xa6f2, 0x7999, 0xa33c, 0x1, 0x1);
        gbc.writeMem(0xeced, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2146);
        EXPECT(gbc.pc(), 0xecef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeced), 0xcb);
        EXPECT(gbc.readMem(0xecee), 0x68);
        // CB 68 00A3
        gbc.setState(0x3639, 0xab0e, 0xb950, 0x2550, 0x2312, 0xbf74, 0x0, 0x0);
        gbc.writeMem(0x3639, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xab0e);
        EXPECT(gbc.pc(), 0x363b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 00A4
        gbc.setState(0xda41, 0x4489, 0x15c0, 0x85b4, 0x4ff5, 0x6101, 0x1, 0x1);
        gbc.writeMem(0xda41, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4489);
        EXPECT(gbc.pc(), 0xda43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda41), 0xcb);
        EXPECT(gbc.readMem(0xda42), 0x68);
        // CB 68 00A5
        gbc.setState(0x9547, 0xaa76, 0xdb80, 0x14cd, 0xdc55, 0xb113, 0x1, 0x1);
        gbc.writeMem(0x9547, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xaa76);
        EXPECT(gbc.pc(), 0x9549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9547), 0xcb);
        EXPECT(gbc.readMem(0x9548), 0x68);
        // CB 68 00A6
        gbc.setState(0x5952, 0x63cd, 0x5ff0, 0xea14, 0xc5de, 0x21dc, 0x1, 0x0);
        gbc.writeMem(0x5952, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x63cd);
        EXPECT(gbc.pc(), 0x5954);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 00A7
        gbc.setState(0x5776, 0xab84, 0xe280, 0x8ea3, 0x4f90, 0x7d2b, 0x0, 0x1);
        gbc.writeMem(0x5776, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xab84);
        EXPECT(gbc.pc(), 0x5778);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 00A8
        gbc.setState(0x1761, 0xb14a, 0xcaf0, 0x866b, 0x419f, 0xa920, 0x1, 0x1);
        gbc.writeMem(0x1761, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb14a);
        EXPECT(gbc.pc(), 0x1763);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 00A9
        gbc.setState(0x8fcc, 0x9d62, 0xe020, 0x7ab7, 0x9a21, 0xa6ae, 0x0, 0x1);
        gbc.writeMem(0x8fcc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x9d62);
        EXPECT(gbc.pc(), 0x8fce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fcc), 0xcb);
        EXPECT(gbc.readMem(0x8fcd), 0x68);
        // CB 68 00AA
        gbc.setState(0xb4bb, 0x1c6, 0x63b0, 0xa1f2, 0x78b4, 0x92d5, 0x0, 0x0);
        gbc.writeMem(0xb4bb, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x1c6);
        EXPECT(gbc.pc(), 0xb4bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4bb), 0xcb);
        EXPECT(gbc.readMem(0xb4bc), 0x68);
        // CB 68 00AB
        gbc.setState(0xcd7d, 0xd5b9, 0x1700, 0xf31d, 0x4460, 0x70dc, 0x0, 0x1);
        gbc.writeMem(0xcd7d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xd5b9);
        EXPECT(gbc.pc(), 0xcd7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd7d), 0xcb);
        EXPECT(gbc.readMem(0xcd7e), 0x68);
        // CB 68 00AC
        gbc.setState(0x2045, 0x5052, 0xa5a0, 0x1bfc, 0x89aa, 0x22b3, 0x0, 0x0);
        gbc.writeMem(0x2045, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5052);
        EXPECT(gbc.pc(), 0x2047);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 00AD
        gbc.setState(0xef05, 0xf246, 0x360, 0x72e8, 0xf792, 0xb4b8, 0x1, 0x1);
        gbc.writeMem(0xef05, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf246);
        EXPECT(gbc.pc(), 0xef07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef05), 0xcb);
        EXPECT(gbc.readMem(0xef06), 0x68);
        // CB 68 00AE
        gbc.setState(0x91b7, 0x9b97, 0xfff0, 0xad53, 0x671b, 0x98cc, 0x1, 0x0);
        gbc.writeMem(0x91b7, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9b97);
        EXPECT(gbc.pc(), 0x91b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91b7), 0xcb);
        EXPECT(gbc.readMem(0x91b8), 0x68);
        // CB 68 00AF
        gbc.setState(0x5b3b, 0x5343, 0xeee0, 0xd2d, 0x9075, 0x6d86, 0x1, 0x0);
        gbc.writeMem(0x5b3b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5343);
        EXPECT(gbc.pc(), 0x5b3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 00B0
        gbc.setState(0xcbb1, 0x33cc, 0x9ea0, 0xf9a5, 0x6659, 0xd97b, 0x1, 0x1);
        gbc.writeMem(0xcbb1, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x33cc);
        EXPECT(gbc.pc(), 0xcbb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbb1), 0xcb);
        EXPECT(gbc.readMem(0xcbb2), 0x68);
        // CB 68 00B1
        gbc.setState(0x5b9b, 0x891e, 0x6260, 0x33d9, 0xe5f0, 0xeb8, 0x1, 0x0);
        gbc.writeMem(0x5b9b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x891e);
        EXPECT(gbc.pc(), 0x5b9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 00B2
        gbc.setState(0xc192, 0xdebe, 0x7a00, 0x8117, 0xaa56, 0x16bc, 0x1, 0x1);
        gbc.writeMem(0xc192, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xdebe);
        EXPECT(gbc.pc(), 0xc194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc192), 0xcb);
        EXPECT(gbc.readMem(0xc193), 0x68);
        // CB 68 00B3
        gbc.setState(0x36db, 0x99cd, 0xb4c0, 0xc082, 0xb4c2, 0x10ee, 0x1, 0x1);
        gbc.writeMem(0x36db, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x99cd);
        EXPECT(gbc.pc(), 0x36dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 00B4
        gbc.setState(0x5669, 0x5e75, 0xa040, 0x742f, 0x6e3b, 0x4312, 0x1, 0x0);
        gbc.writeMem(0x5669, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5e75);
        EXPECT(gbc.pc(), 0x566b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 00B5
        gbc.setState(0xebb8, 0xd1a5, 0x6070, 0x484a, 0xef9d, 0xfaa8, 0x1, 0x0);
        gbc.writeMem(0xebb8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd1a5);
        EXPECT(gbc.pc(), 0xebba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebb8), 0xcb);
        EXPECT(gbc.readMem(0xebb9), 0x68);
        // CB 68 00B6
        gbc.setState(0x3c08, 0x1c72, 0xe730, 0x41c1, 0xa127, 0xd838, 0x0, 0x1);
        gbc.writeMem(0x3c08, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x1c72);
        EXPECT(gbc.pc(), 0x3c0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 00B7
        gbc.setState(0x1633, 0xcb1b, 0x9c60, 0x87df, 0xbbde, 0x6192, 0x1, 0x1);
        gbc.writeMem(0x1633, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xcb1b);
        EXPECT(gbc.pc(), 0x1635);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 00B8
        gbc.setState(0x4281, 0xaa24, 0x29f0, 0x6912, 0x9a69, 0x4a6b, 0x1, 0x1);
        gbc.writeMem(0x4281, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xaa24);
        EXPECT(gbc.pc(), 0x4283);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 00B9
        gbc.setState(0xd929, 0xdc71, 0xda40, 0x1b2d, 0x2e60, 0x2217, 0x0, 0x1);
        gbc.writeMem(0xd929, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xdc71);
        EXPECT(gbc.pc(), 0xd92b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd929), 0xcb);
        EXPECT(gbc.readMem(0xd92a), 0x68);
        // CB 68 00BA
        gbc.setState(0x9ea9, 0x2c60, 0xa290, 0x2fc3, 0x94fb, 0xa051, 0x0, 0x1);
        gbc.writeMem(0x9ea9, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x2c60);
        EXPECT(gbc.pc(), 0x9eab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ea9), 0xcb);
        EXPECT(gbc.readMem(0x9eaa), 0x68);
        // CB 68 00BB
        gbc.setState(0x507, 0x1cc6, 0xf4a0, 0x5773, 0xc394, 0x7f72, 0x1, 0x0);
        gbc.writeMem(0x507, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1cc6);
        EXPECT(gbc.pc(), 0x509);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 00BC
        gbc.setState(0x3fcf, 0x3fca, 0xc380, 0xfd82, 0xf652, 0xb9e, 0x0, 0x1);
        gbc.writeMem(0x3fcf, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3fca);
        EXPECT(gbc.pc(), 0x3fd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 00BD
        gbc.setState(0x3e2c, 0xce77, 0x3ff0, 0x3f28, 0x3128, 0x4951, 0x1, 0x1);
        gbc.writeMem(0x3e2c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xce77);
        EXPECT(gbc.pc(), 0x3e2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 00BE
        gbc.setState(0xc5b6, 0x6356, 0xd40, 0xcd47, 0x18b2, 0xaf65, 0x0, 0x1);
        gbc.writeMem(0xc5b6, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x6356);
        EXPECT(gbc.pc(), 0xc5b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5b6), 0xcb);
        EXPECT(gbc.readMem(0xc5b7), 0x68);
        // CB 68 00BF
        gbc.setState(0x16a9, 0x7c4f, 0x9690, 0xbb82, 0xc935, 0xc634, 0x0, 0x1);
        gbc.writeMem(0x16a9, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7c4f);
        EXPECT(gbc.pc(), 0x16ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 00C0
        gbc.setState(0xa17c, 0x7e66, 0x9c50, 0x42a7, 0xf5e, 0xc89, 0x1, 0x0);
        gbc.writeMem(0xa17c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7e66);
        EXPECT(gbc.pc(), 0xa17e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa17c), 0xcb);
        EXPECT(gbc.readMem(0xa17d), 0x68);
        // CB 68 00C1
        gbc.setState(0xae41, 0x6045, 0x56b0, 0x4e6, 0x32f5, 0x5f9a, 0x1, 0x1);
        gbc.writeMem(0xae41, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6045);
        EXPECT(gbc.pc(), 0xae43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae41), 0xcb);
        EXPECT(gbc.readMem(0xae42), 0x68);
        // CB 68 00C2
        gbc.setState(0x1ed5, 0x1ae, 0xd620, 0xf0cb, 0x41a4, 0xcaa7, 0x1, 0x1);
        gbc.writeMem(0x1ed5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x1ae);
        EXPECT(gbc.pc(), 0x1ed7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 00C3
        gbc.setState(0x3133, 0xebd9, 0x87f0, 0x9833, 0x93cb, 0x2247, 0x1, 0x0);
        gbc.writeMem(0x3133, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xebd9);
        EXPECT(gbc.pc(), 0x3135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 00C4
        gbc.setState(0x3ff, 0x46ab, 0x11d0, 0x10d2, 0xc9fd, 0x77aa, 0x1, 0x1);
        gbc.writeMem(0x3ff, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x46ab);
        EXPECT(gbc.pc(), 0x401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 00C5
        gbc.setState(0xdbbc, 0x1d0a, 0x2090, 0xe5e5, 0x504d, 0xc65c, 0x0, 0x1);
        gbc.writeMem(0xdbbc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1d0a);
        EXPECT(gbc.pc(), 0xdbbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbbc), 0xcb);
        EXPECT(gbc.readMem(0xdbbd), 0x68);
        // CB 68 00C6
        gbc.setState(0x8b10, 0xbc82, 0xfed0, 0xfa91, 0xf323, 0x4e76, 0x1, 0x0);
        gbc.writeMem(0x8b10, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xbc82);
        EXPECT(gbc.pc(), 0x8b12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b10), 0xcb);
        EXPECT(gbc.readMem(0x8b11), 0x68);
        // CB 68 00C7
        gbc.setState(0xd851, 0x4da1, 0xa550, 0x681a, 0x9d2f, 0xb58f, 0x1, 0x0);
        gbc.writeMem(0xd851, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x4da1);
        EXPECT(gbc.pc(), 0xd853);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd851), 0xcb);
        EXPECT(gbc.readMem(0xd852), 0x68);
        // CB 68 00C8
        gbc.setState(0x16a6, 0x5205, 0xb860, 0x4be2, 0x480d, 0x3786, 0x0, 0x1);
        gbc.writeMem(0x16a6, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5205);
        EXPECT(gbc.pc(), 0x16a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 00C9
        gbc.setState(0x12f6, 0x9a58, 0x4330, 0xdd19, 0xfb9b, 0x94ca, 0x0, 0x0);
        gbc.writeMem(0x12f6, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9a58);
        EXPECT(gbc.pc(), 0x12f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 00CB
        gbc.setState(0x59b5, 0x9fc0, 0x5b50, 0xbf9c, 0xf506, 0xd6d7, 0x1, 0x0);
        gbc.writeMem(0x59b5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9fc0);
        EXPECT(gbc.pc(), 0x59b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 00CC
        gbc.setState(0x863, 0xec08, 0xd660, 0x249, 0x566f, 0x6d74, 0x0, 0x1);
        gbc.writeMem(0x863, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xec08);
        EXPECT(gbc.pc(), 0x865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 00CD
        gbc.setState(0x9118, 0x37e5, 0x8000, 0x8969, 0xa895, 0xb257, 0x0, 0x1);
        gbc.writeMem(0x9118, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x37e5);
        EXPECT(gbc.pc(), 0x911a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9118), 0xcb);
        EXPECT(gbc.readMem(0x9119), 0x68);
        // CB 68 00CE
        gbc.setState(0x95bb, 0x91f3, 0x8eb0, 0xf4b3, 0x1444, 0x8c3b, 0x1, 0x1);
        gbc.writeMem(0x95bb, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x91f3);
        EXPECT(gbc.pc(), 0x95bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95bb), 0xcb);
        EXPECT(gbc.readMem(0x95bc), 0x68);
        // CB 68 00CF
        gbc.setState(0x8b19, 0xe693, 0x6090, 0x99d7, 0x8cdf, 0x3b68, 0x1, 0x0);
        gbc.writeMem(0x8b19, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe693);
        EXPECT(gbc.pc(), 0x8b1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b19), 0xcb);
        EXPECT(gbc.readMem(0x8b1a), 0x68);
        // CB 68 00D0
        gbc.setState(0x5b22, 0xf250, 0xce80, 0x680a, 0x5cf9, 0x746d, 0x0, 0x1);
        gbc.writeMem(0x5b22, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf250);
        EXPECT(gbc.pc(), 0x5b24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 00D1
        gbc.setState(0x3ff6, 0x9ed9, 0x6b90, 0x2719, 0x801a, 0x46e, 0x1, 0x1);
        gbc.writeMem(0x3ff6, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x9ed9);
        EXPECT(gbc.pc(), 0x3ff8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 00D2
        gbc.setState(0x9e0, 0x175a, 0xa1b0, 0xc2b0, 0x9a65, 0x5abd, 0x0, 0x0);
        gbc.writeMem(0x9e0, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x175a);
        EXPECT(gbc.pc(), 0x9e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 00D3
        gbc.setState(0xe2cb, 0xc96a, 0x52b0, 0x36b2, 0x4a5f, 0x3f3, 0x1, 0x0);
        gbc.writeMem(0xe2cb, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc96a);
        EXPECT(gbc.pc(), 0xe2cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2cb), 0xcb);
        EXPECT(gbc.readMem(0xe2cc), 0x68);
        // CB 68 00D4
        gbc.setState(0x7510, 0x7f40, 0x1000, 0x779d, 0x7be, 0x6bb2, 0x1, 0x0);
        gbc.writeMem(0x7510, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7f40);
        EXPECT(gbc.pc(), 0x7512);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 00D5
        gbc.setState(0xc657, 0x44f7, 0x1570, 0x97c1, 0xa5bd, 0x9ce, 0x1, 0x0);
        gbc.writeMem(0xc657, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x44f7);
        EXPECT(gbc.pc(), 0xc659);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc657), 0xcb);
        EXPECT(gbc.readMem(0xc658), 0x68);
        // CB 68 00D6
        gbc.setState(0x737f, 0x3072, 0xd3a0, 0xb2f6, 0x5270, 0x2aa9, 0x0, 0x0);
        gbc.writeMem(0x737f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3072);
        EXPECT(gbc.pc(), 0x7381);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 00D7
        gbc.setState(0x9ed8, 0xa9a5, 0x2f30, 0x7477, 0xeeb9, 0x1e97, 0x0, 0x1);
        gbc.writeMem(0x9ed8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xa9a5);
        EXPECT(gbc.pc(), 0x9eda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ed8), 0xcb);
        EXPECT(gbc.readMem(0x9ed9), 0x68);
        // CB 68 00D8
        gbc.setState(0x6e4, 0x791a, 0xa5d0, 0x6513, 0xaac4, 0x14c1, 0x0, 0x0);
        gbc.writeMem(0x6e4, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x791a);
        EXPECT(gbc.pc(), 0x6e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 00D9
        gbc.setState(0x8479, 0x8bc3, 0x2e80, 0x98a2, 0x1090, 0xfeb9, 0x0, 0x0);
        gbc.writeMem(0x8479, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8bc3);
        EXPECT(gbc.pc(), 0x847b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8479), 0xcb);
        EXPECT(gbc.readMem(0x847a), 0x68);
        // CB 68 00DA
        gbc.setState(0xaf35, 0x1b84, 0xda60, 0xb7f6, 0xb0fa, 0x9018, 0x1, 0x0);
        gbc.writeMem(0xaf35, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1b84);
        EXPECT(gbc.pc(), 0xaf37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf35), 0xcb);
        EXPECT(gbc.readMem(0xaf36), 0x68);
        // CB 68 00DB
        gbc.setState(0xee72, 0xf55a, 0x4a70, 0xd6bd, 0xae1, 0xdef4, 0x0, 0x0);
        gbc.writeMem(0xee72, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf55a);
        EXPECT(gbc.pc(), 0xee74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee72), 0xcb);
        EXPECT(gbc.readMem(0xee73), 0x68);
        // CB 68 00DC
        gbc.setState(0xd8aa, 0xe93b, 0xca60, 0xb885, 0xc48, 0x6f4b, 0x0, 0x0);
        gbc.writeMem(0xd8aa, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe93b);
        EXPECT(gbc.pc(), 0xd8ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8aa), 0xcb);
        EXPECT(gbc.readMem(0xd8ab), 0x68);
        // CB 68 00DD
        gbc.setState(0x4f03, 0x902e, 0x1590, 0x88c, 0x46a2, 0xe2b1, 0x0, 0x0);
        gbc.writeMem(0x4f03, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x902e);
        EXPECT(gbc.pc(), 0x4f05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 00DE
        gbc.setState(0xc73d, 0xc017, 0xe9c0, 0xe82f, 0xf21c, 0xb04, 0x0, 0x0);
        gbc.writeMem(0xc73d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xc017);
        EXPECT(gbc.pc(), 0xc73f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc73d), 0xcb);
        EXPECT(gbc.readMem(0xc73e), 0x68);
        // CB 68 00DF
        gbc.setState(0xb064, 0x84ad, 0x8180, 0xbb6, 0xc2e3, 0x1136, 0x0, 0x0);
        gbc.writeMem(0xb064, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x84ad);
        EXPECT(gbc.pc(), 0xb066);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb064), 0xcb);
        EXPECT(gbc.readMem(0xb065), 0x68);
        // CB 68 00E0
        gbc.setState(0xb352, 0x644c, 0x3180, 0x71ee, 0xa2eb, 0xea8a, 0x1, 0x0);
        gbc.writeMem(0xb352, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x644c);
        EXPECT(gbc.pc(), 0xb354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb352), 0xcb);
        EXPECT(gbc.readMem(0xb353), 0x68);
        // CB 68 00E2
        gbc.setState(0x6d66, 0x7b55, 0x8de0, 0x50b, 0xd41f, 0x2983, 0x1, 0x0);
        gbc.writeMem(0x6d66, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x7b55);
        EXPECT(gbc.pc(), 0x6d68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 00E3
        gbc.setState(0xbfef, 0xa8af, 0x30f0, 0x4c8b, 0x3cfe, 0xa62e, 0x1, 0x0);
        gbc.writeMem(0xbfef, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa8af);
        EXPECT(gbc.pc(), 0xbff1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfef), 0xcb);
        EXPECT(gbc.readMem(0xbff0), 0x68);
        // CB 68 00E4
        gbc.setState(0x8b1c, 0xff04, 0x610, 0x35a7, 0xd635, 0xca6, 0x1, 0x1);
        gbc.writeMem(0x8b1c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xff04);
        EXPECT(gbc.pc(), 0x8b1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b1c), 0xcb);
        EXPECT(gbc.readMem(0x8b1d), 0x68);
        // CB 68 00E5
        gbc.setState(0xc60a, 0x4c0d, 0xbf70, 0xf460, 0x7f51, 0x8bdc, 0x1, 0x1);
        gbc.writeMem(0xc60a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x4c0d);
        EXPECT(gbc.pc(), 0xc60c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc60a), 0xcb);
        EXPECT(gbc.readMem(0xc60b), 0x68);
        // CB 68 00E6
        gbc.setState(0x4955, 0xb0f4, 0xd8b0, 0x768b, 0x2022, 0x7750, 0x1, 0x1);
        gbc.writeMem(0x4955, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb0f4);
        EXPECT(gbc.pc(), 0x4957);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 00E7
        gbc.setState(0x53a5, 0x7fa7, 0x3f10, 0xdd5, 0x9f3d, 0xb746, 0x0, 0x0);
        gbc.writeMem(0x53a5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7fa7);
        EXPECT(gbc.pc(), 0x53a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 00E8
        gbc.setState(0x95cd, 0xe7b6, 0x87e0, 0xc71c, 0x761, 0xb920, 0x1, 0x0);
        gbc.writeMem(0x95cd, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xe7b6);
        EXPECT(gbc.pc(), 0x95cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95cd), 0xcb);
        EXPECT(gbc.readMem(0x95ce), 0x68);
        // CB 68 00E9
        gbc.setState(0xcda2, 0x5f84, 0x9ae0, 0xbbc, 0x5796, 0xf50c, 0x1, 0x1);
        gbc.writeMem(0xcda2, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5f84);
        EXPECT(gbc.pc(), 0xcda4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcda2), 0xcb);
        EXPECT(gbc.readMem(0xcda3), 0x68);
        // CB 68 00EA
        gbc.setState(0x4654, 0xc92, 0x31e0, 0x7278, 0x7e31, 0x30e4, 0x1, 0x1);
        gbc.writeMem(0x4654, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc92);
        EXPECT(gbc.pc(), 0x4656);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 00EC
        gbc.setState(0xc7d3, 0xee31, 0x4d20, 0x6767, 0x9761, 0x979d, 0x0, 0x1);
        gbc.writeMem(0xc7d3, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xee31);
        EXPECT(gbc.pc(), 0xc7d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7d3), 0xcb);
        EXPECT(gbc.readMem(0xc7d4), 0x68);
        // CB 68 00ED
        gbc.setState(0x1768, 0x79a, 0x4a40, 0xc08b, 0x24d8, 0xc386, 0x0, 0x1);
        gbc.writeMem(0x1768, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x79a);
        EXPECT(gbc.pc(), 0x176a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 00EE
        gbc.setState(0xde4d, 0xdf9b, 0xd6a0, 0x21ab, 0x39b, 0x8f98, 0x0, 0x1);
        gbc.writeMem(0xde4d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xdf9b);
        EXPECT(gbc.pc(), 0xde4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde4d), 0xcb);
        EXPECT(gbc.readMem(0xde4e), 0x68);
        // CB 68 00EF
        gbc.setState(0xc7b8, 0xb8c2, 0x9e60, 0xc43a, 0x8720, 0xcbd3, 0x0, 0x1);
        gbc.writeMem(0xc7b8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb8c2);
        EXPECT(gbc.pc(), 0xc7ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7b8), 0xcb);
        EXPECT(gbc.readMem(0xc7b9), 0x68);
        // CB 68 00F0
        gbc.setState(0xc34d, 0x63f6, 0x6d90, 0x4b13, 0x3594, 0x91e1, 0x0, 0x1);
        gbc.writeMem(0xc34d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x63f6);
        EXPECT(gbc.pc(), 0xc34f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc34d), 0xcb);
        EXPECT(gbc.readMem(0xc34e), 0x68);
        // CB 68 00F1
        gbc.setState(0xc230, 0xbb45, 0x9930, 0x83e5, 0x95f6, 0x9907, 0x1, 0x1);
        gbc.writeMem(0xc230, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xbb45);
        EXPECT(gbc.pc(), 0xc232);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc230), 0xcb);
        EXPECT(gbc.readMem(0xc231), 0x68);
        // CB 68 00F2
        gbc.setState(0x73d5, 0x1651, 0x73c0, 0x4c27, 0x474b, 0x2e0f, 0x0, 0x0);
        gbc.writeMem(0x73d5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1651);
        EXPECT(gbc.pc(), 0x73d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 00F3
        gbc.setState(0x61b7, 0xa917, 0x3cd0, 0x6c51, 0x92ff, 0xd845, 0x1, 0x1);
        gbc.writeMem(0x61b7, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa917);
        EXPECT(gbc.pc(), 0x61b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 00F4
        gbc.setState(0xbcd3, 0x1559, 0x4df0, 0x660d, 0x5288, 0x5074, 0x1, 0x0);
        gbc.writeMem(0xbcd3, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1559);
        EXPECT(gbc.pc(), 0xbcd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcd3), 0xcb);
        EXPECT(gbc.readMem(0xbcd4), 0x68);
        // CB 68 00F5
        gbc.setState(0x8226, 0x5e89, 0x6400, 0x6317, 0x95e, 0xa0c6, 0x0, 0x0);
        gbc.writeMem(0x8226, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5e89);
        EXPECT(gbc.pc(), 0x8228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8226), 0xcb);
        EXPECT(gbc.readMem(0x8227), 0x68);
        // CB 68 00F6
        gbc.setState(0x78c7, 0x2dd9, 0x90e0, 0xde97, 0xaf4b, 0x1fc6, 0x1, 0x1);
        gbc.writeMem(0x78c7, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x2dd9);
        EXPECT(gbc.pc(), 0x78c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 00F7
        gbc.setState(0x5d90, 0x5478, 0xb560, 0x52c3, 0xf3b7, 0xbc9a, 0x1, 0x1);
        gbc.writeMem(0x5d90, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5478);
        EXPECT(gbc.pc(), 0x5d92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 00F8
        gbc.setState(0x9233, 0xa9fb, 0xcdf0, 0xea5e, 0x9948, 0xe374, 0x0, 0x1);
        gbc.writeMem(0x9233, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa9fb);
        EXPECT(gbc.pc(), 0x9235);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9233), 0xcb);
        EXPECT(gbc.readMem(0x9234), 0x68);
        // CB 68 00FA
        gbc.setState(0x9, 0x5fb3, 0x8930, 0xe769, 0x55ce, 0x7a59, 0x0, 0x0);
        gbc.writeMem(0x9, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5fb3);
        EXPECT(gbc.pc(), 0xb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 00FB
        gbc.setState(0xb3cc, 0xa045, 0x6240, 0x7d56, 0xf9a, 0x9a2a, 0x1, 0x0);
        gbc.writeMem(0xb3cc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa045);
        EXPECT(gbc.pc(), 0xb3ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3cc), 0xcb);
        EXPECT(gbc.readMem(0xb3cd), 0x68);
        // CB 68 00FC
        gbc.setState(0x7180, 0xf7cf, 0x5d60, 0xb6bc, 0xb8d6, 0x6034, 0x0, 0x0);
        gbc.writeMem(0x7180, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf7cf);
        EXPECT(gbc.pc(), 0x7182);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 00FD
        gbc.setState(0xcfd3, 0x47d5, 0x9e0, 0xf5e0, 0x72c0, 0xf873, 0x1, 0x0);
        gbc.writeMem(0xcfd3, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x47d5);
        EXPECT(gbc.pc(), 0xcfd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfd3), 0xcb);
        EXPECT(gbc.readMem(0xcfd4), 0x68);
        // CB 68 00FE
        gbc.setState(0xca50, 0x6c58, 0xee30, 0xd1a1, 0x71fc, 0xdbc0, 0x0, 0x0);
        gbc.writeMem(0xca50, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6c58);
        EXPECT(gbc.pc(), 0xca52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca50), 0xcb);
        EXPECT(gbc.readMem(0xca51), 0x68);
        // CB 68 00FF
        gbc.setState(0xe0d7, 0x73ae, 0x4680, 0xc41f, 0xa7b3, 0xa89e, 0x0, 0x1);
        gbc.writeMem(0xe0d7, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x73ae);
        EXPECT(gbc.pc(), 0xe0d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0d7), 0xcb);
        EXPECT(gbc.readMem(0xe0d8), 0x68);
        // CB 68 0100
        gbc.setState(0xb454, 0x7cfc, 0x7460, 0x6911, 0x46a0, 0xb1b, 0x0, 0x1);
        gbc.writeMem(0xb454, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7cfc);
        EXPECT(gbc.pc(), 0xb456);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb454), 0xcb);
        EXPECT(gbc.readMem(0xb455), 0x68);
        // CB 68 0101
        gbc.setState(0xb101, 0x9c60, 0xbc40, 0xddca, 0xef7e, 0x25a2, 0x1, 0x0);
        gbc.writeMem(0xb101, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9c60);
        EXPECT(gbc.pc(), 0xb103);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb101), 0xcb);
        EXPECT(gbc.readMem(0xb102), 0x68);
        // CB 68 0102
        gbc.setState(0xe555, 0x82a0, 0x94e0, 0x26aa, 0xfc9e, 0x4d77, 0x1, 0x0);
        gbc.writeMem(0xe555, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x82a0);
        EXPECT(gbc.pc(), 0xe557);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe555), 0xcb);
        EXPECT(gbc.readMem(0xe556), 0x68);
        // CB 68 0103
        gbc.setState(0x8d03, 0xc846, 0xc00, 0x3709, 0x5428, 0x5287, 0x0, 0x1);
        gbc.writeMem(0x8d03, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xc846);
        EXPECT(gbc.pc(), 0x8d05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d03), 0xcb);
        EXPECT(gbc.readMem(0x8d04), 0x68);
        // CB 68 0104
        gbc.setState(0x7d94, 0x1d0b, 0xfe70, 0xc399, 0x6dc3, 0x1632, 0x1, 0x0);
        gbc.writeMem(0x7d94, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x1d0b);
        EXPECT(gbc.pc(), 0x7d96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0105
        gbc.setState(0x549b, 0xdb51, 0x140, 0xf6a9, 0x4b4a, 0x9dca, 0x0, 0x0);
        gbc.writeMem(0x549b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xdb51);
        EXPECT(gbc.pc(), 0x549d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0106
        gbc.setState(0xa9bf, 0x4e18, 0xe8c0, 0x1023, 0x4897, 0x7dab, 0x0, 0x0);
        gbc.writeMem(0xa9bf, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4e18);
        EXPECT(gbc.pc(), 0xa9c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9bf), 0xcb);
        EXPECT(gbc.readMem(0xa9c0), 0x68);
        // CB 68 0107
        gbc.setState(0x35b5, 0x3754, 0x3b70, 0x37bd, 0xadcc, 0x1f2d, 0x1, 0x1);
        gbc.writeMem(0x35b5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x3754);
        EXPECT(gbc.pc(), 0x35b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0108
        gbc.setState(0x307, 0x6916, 0xf780, 0x18e7, 0x2d7f, 0x117c, 0x1, 0x1);
        gbc.writeMem(0x307, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x6916);
        EXPECT(gbc.pc(), 0x309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0109
        gbc.setState(0x49d4, 0x712b, 0x56b0, 0xcd83, 0x5f81, 0xaf69, 0x1, 0x1);
        gbc.writeMem(0x49d4, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x712b);
        EXPECT(gbc.pc(), 0x49d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 010A
        gbc.setState(0x3877, 0x3ec1, 0x36d0, 0xe0f, 0x2bbf, 0xaa63, 0x0, 0x0);
        gbc.writeMem(0x3877, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3ec1);
        EXPECT(gbc.pc(), 0x3879);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 010B
        gbc.setState(0x4c80, 0x2a2, 0xad80, 0x3f6e, 0xbbc4, 0x16d7, 0x0, 0x1);
        gbc.writeMem(0x4c80, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2a2);
        EXPECT(gbc.pc(), 0x4c82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 010C
        gbc.setState(0x7a8e, 0x1413, 0x1a20, 0x1b56, 0x4b18, 0xf6f8, 0x1, 0x0);
        gbc.writeMem(0x7a8e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x1413);
        EXPECT(gbc.pc(), 0x7a90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 010D
        gbc.setState(0x923e, 0xf661, 0x6b10, 0xb6c3, 0xdc82, 0xf5a, 0x0, 0x0);
        gbc.writeMem(0x923e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xf661);
        EXPECT(gbc.pc(), 0x9240);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x923e), 0xcb);
        EXPECT(gbc.readMem(0x923f), 0x68);
        // CB 68 010E
        gbc.setState(0xbff8, 0x1f49, 0x880, 0xfa9b, 0x226a, 0x327d, 0x1, 0x0);
        gbc.writeMem(0xbff8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x1f49);
        EXPECT(gbc.pc(), 0xbffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbff8), 0xcb);
        EXPECT(gbc.readMem(0xbff9), 0x68);
        // CB 68 010F
        gbc.setState(0xde8d, 0x2708, 0xd700, 0xd9ff, 0xc382, 0xeb7e, 0x1, 0x0);
        gbc.writeMem(0xde8d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2708);
        EXPECT(gbc.pc(), 0xde8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde8d), 0xcb);
        EXPECT(gbc.readMem(0xde8e), 0x68);
        // CB 68 0110
        gbc.setState(0x174b, 0x9cfd, 0x8ca0, 0x9167, 0xc044, 0xd5a3, 0x0, 0x0);
        gbc.writeMem(0x174b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9cfd);
        EXPECT(gbc.pc(), 0x174d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0111
        gbc.setState(0x3fa4, 0x6ea0, 0x7820, 0xb68a, 0xfeac, 0x2f92, 0x1, 0x0);
        gbc.writeMem(0x3fa4, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6ea0);
        EXPECT(gbc.pc(), 0x3fa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0112
        gbc.setState(0x382b, 0x40fe, 0xf5f0, 0x5c2, 0xa8f0, 0xbba, 0x1, 0x1);
        gbc.writeMem(0x382b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x40fe);
        EXPECT(gbc.pc(), 0x382d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0113
        gbc.setState(0x4a7c, 0x8ee4, 0xe7b0, 0xa650, 0xb009, 0xba0e, 0x0, 0x1);
        gbc.writeMem(0x4a7c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8ee4);
        EXPECT(gbc.pc(), 0x4a7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0114
        gbc.setState(0x892c, 0x2cbc, 0xd520, 0xb7ee, 0x9314, 0xb3a1, 0x1, 0x1);
        gbc.writeMem(0x892c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x2cbc);
        EXPECT(gbc.pc(), 0x892e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x892c), 0xcb);
        EXPECT(gbc.readMem(0x892d), 0x68);
        // CB 68 0116
        gbc.setState(0xd517, 0xd9e8, 0xa870, 0x7687, 0xa49c, 0x607c, 0x0, 0x0);
        gbc.writeMem(0xd517, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd9e8);
        EXPECT(gbc.pc(), 0xd519);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd517), 0xcb);
        EXPECT(gbc.readMem(0xd518), 0x68);
        // CB 68 0118
        gbc.setState(0xe70e, 0x79a6, 0xb4b0, 0x3f36, 0xf359, 0x5c5f, 0x1, 0x1);
        gbc.writeMem(0xe70e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x79a6);
        EXPECT(gbc.pc(), 0xe710);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe70e), 0xcb);
        EXPECT(gbc.readMem(0xe70f), 0x68);
        // CB 68 0119
        gbc.setState(0x4188, 0x546e, 0x8400, 0x23f0, 0x9b26, 0xad4e, 0x1, 0x0);
        gbc.writeMem(0x4188, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x546e);
        EXPECT(gbc.pc(), 0x418a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 011A
        gbc.setState(0x6285, 0x1f3c, 0x7b10, 0x6ab4, 0xd51b, 0xeb1a, 0x0, 0x0);
        gbc.writeMem(0x6285, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x1f3c);
        EXPECT(gbc.pc(), 0x6287);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 011B
        gbc.setState(0xd164, 0x83e6, 0x6210, 0x9070, 0xfcb3, 0x53cb, 0x0, 0x0);
        gbc.writeMem(0xd164, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x83e6);
        EXPECT(gbc.pc(), 0xd166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd164), 0xcb);
        EXPECT(gbc.readMem(0xd165), 0x68);
        // CB 68 011C
        gbc.setState(0xd3c5, 0x7d14, 0x30a0, 0x32fd, 0xb07a, 0x5cbb, 0x0, 0x1);
        gbc.writeMem(0xd3c5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x7d14);
        EXPECT(gbc.pc(), 0xd3c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3c5), 0xcb);
        EXPECT(gbc.readMem(0xd3c6), 0x68);
        // CB 68 011D
        gbc.setState(0x91ff, 0x546, 0x4f20, 0x6090, 0x1baf, 0x4439, 0x1, 0x0);
        gbc.writeMem(0x91ff, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x546);
        EXPECT(gbc.pc(), 0x9201);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ff), 0xcb);
        EXPECT(gbc.readMem(0x9200), 0x68);
        // CB 68 011E
        gbc.setState(0x2be1, 0x98e9, 0xe530, 0x220c, 0x6bc3, 0x8385, 0x1, 0x1);
        gbc.writeMem(0x2be1, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x98e9);
        EXPECT(gbc.pc(), 0x2be3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 011F
        gbc.setState(0xa571, 0x4f16, 0xc3c0, 0xf321, 0x7e24, 0x7c07, 0x1, 0x1);
        gbc.writeMem(0xa571, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4f16);
        EXPECT(gbc.pc(), 0xa573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa571), 0xcb);
        EXPECT(gbc.readMem(0xa572), 0x68);
        // CB 68 0120
        gbc.setState(0xea68, 0x1274, 0x4200, 0x9274, 0x425, 0x1c90, 0x0, 0x0);
        gbc.writeMem(0xea68, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x1274);
        EXPECT(gbc.pc(), 0xea6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea68), 0xcb);
        EXPECT(gbc.readMem(0xea69), 0x68);
        // CB 68 0121
        gbc.setState(0x709d, 0x7891, 0x3640, 0x7019, 0x261b, 0xefbb, 0x1, 0x0);
        gbc.writeMem(0x709d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x7891);
        EXPECT(gbc.pc(), 0x709f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0122
        gbc.setState(0x44cc, 0x5da9, 0x7c50, 0xabaf, 0x99f9, 0xbbf1, 0x1, 0x0);
        gbc.writeMem(0x44cc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5da9);
        EXPECT(gbc.pc(), 0x44ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0123
        gbc.setState(0x874c, 0xd32d, 0x3d90, 0xc343, 0x4dc8, 0xf4f2, 0x0, 0x1);
        gbc.writeMem(0x874c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd32d);
        EXPECT(gbc.pc(), 0x874e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x874c), 0xcb);
        EXPECT(gbc.readMem(0x874d), 0x68);
        // CB 68 0124
        gbc.setState(0xb69b, 0x558e, 0x7100, 0x4199, 0xee99, 0x8d7c, 0x1, 0x0);
        gbc.writeMem(0xb69b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x558e);
        EXPECT(gbc.pc(), 0xb69d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb69b), 0xcb);
        EXPECT(gbc.readMem(0xb69c), 0x68);
        // CB 68 0125
        gbc.setState(0x1bc7, 0x139f, 0x9e10, 0x32e6, 0x611c, 0x960b, 0x1, 0x0);
        gbc.writeMem(0x1bc7, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x139f);
        EXPECT(gbc.pc(), 0x1bc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0126
        gbc.setState(0xe860, 0x980c, 0x900, 0x6f5b, 0xe19c, 0xa45f, 0x0, 0x1);
        gbc.writeMem(0xe860, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x980c);
        EXPECT(gbc.pc(), 0xe862);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe860), 0xcb);
        EXPECT(gbc.readMem(0xe861), 0x68);
        // CB 68 0127
        gbc.setState(0x8d07, 0x3ff4, 0x3ab0, 0xa700, 0xe956, 0xd0d4, 0x0, 0x0);
        gbc.writeMem(0x8d07, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x3ff4);
        EXPECT(gbc.pc(), 0x8d09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d07), 0xcb);
        EXPECT(gbc.readMem(0x8d08), 0x68);
        // CB 68 0128
        gbc.setState(0xe9c9, 0xf456, 0xeac0, 0xb9ac, 0x240a, 0xcda9, 0x1, 0x0);
        gbc.writeMem(0xe9c9, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf456);
        EXPECT(gbc.pc(), 0xe9cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9c9), 0xcb);
        EXPECT(gbc.readMem(0xe9ca), 0x68);
        // CB 68 0129
        gbc.setState(0xa67a, 0xc681, 0xd930, 0xdb25, 0xde73, 0xf891, 0x1, 0x1);
        gbc.writeMem(0xa67a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc681);
        EXPECT(gbc.pc(), 0xa67c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa67a), 0xcb);
        EXPECT(gbc.readMem(0xa67b), 0x68);
        // CB 68 012C
        gbc.setState(0xe893, 0x420e, 0xbbc0, 0x30b6, 0x95e2, 0x1f8, 0x0, 0x1);
        gbc.writeMem(0xe893, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x420e);
        EXPECT(gbc.pc(), 0xe895);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe893), 0xcb);
        EXPECT(gbc.readMem(0xe894), 0x68);
        // CB 68 012D
        gbc.setState(0x345f, 0x139f, 0x47c0, 0xacb9, 0x951b, 0xf2fb, 0x1, 0x0);
        gbc.writeMem(0x345f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x139f);
        EXPECT(gbc.pc(), 0x3461);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 012F
        gbc.setState(0x244, 0x2a7c, 0xfbb0, 0x1441, 0x1a20, 0xfeeb, 0x1, 0x1);
        gbc.writeMem(0x244, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x2a7c);
        EXPECT(gbc.pc(), 0x246);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0130
        gbc.setState(0xd70b, 0x8043, 0x26a0, 0x641e, 0x9a7c, 0xb5e4, 0x0, 0x1);
        gbc.writeMem(0xd70b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8043);
        EXPECT(gbc.pc(), 0xd70d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd70b), 0xcb);
        EXPECT(gbc.readMem(0xd70c), 0x68);
        // CB 68 0131
        gbc.setState(0x18e9, 0xe2c8, 0x4d90, 0xc274, 0x132a, 0xdfed, 0x0, 0x1);
        gbc.writeMem(0x18e9, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe2c8);
        EXPECT(gbc.pc(), 0x18eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0132
        gbc.setState(0x4706, 0x12b9, 0xc90, 0x12c9, 0xb4d6, 0x5c65, 0x0, 0x1);
        gbc.writeMem(0x4706, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x12b9);
        EXPECT(gbc.pc(), 0x4708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0133
        gbc.setState(0x84b0, 0x121c, 0x1140, 0x403, 0x428d, 0x93c1, 0x0, 0x1);
        gbc.writeMem(0x84b0, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x121c);
        EXPECT(gbc.pc(), 0x84b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84b0), 0xcb);
        EXPECT(gbc.readMem(0x84b1), 0x68);
        // CB 68 0134
        gbc.setState(0x74a5, 0xc123, 0x8f50, 0xc61, 0x5128, 0x32a6, 0x0, 0x1);
        gbc.writeMem(0x74a5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc123);
        EXPECT(gbc.pc(), 0x74a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0135
        gbc.setState(0x65bf, 0xb5d1, 0xe0b0, 0xa206, 0x262, 0xf57b, 0x1, 0x0);
        gbc.writeMem(0x65bf, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb5d1);
        EXPECT(gbc.pc(), 0x65c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0137
        gbc.setState(0x2f07, 0x1af6, 0x8de0, 0x8189, 0x60c4, 0xf4b8, 0x0, 0x1);
        gbc.writeMem(0x2f07, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x1af6);
        EXPECT(gbc.pc(), 0x2f09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0138
        gbc.setState(0xa7b1, 0x1386, 0x2a80, 0x93e, 0xc200, 0x392b, 0x0, 0x1);
        gbc.writeMem(0xa7b1, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1386);
        EXPECT(gbc.pc(), 0xa7b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7b1), 0xcb);
        EXPECT(gbc.readMem(0xa7b2), 0x68);
        // CB 68 0139
        gbc.setState(0xa33f, 0x16e6, 0xf9b0, 0x35dc, 0x4737, 0xb788, 0x1, 0x1);
        gbc.writeMem(0xa33f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x16e6);
        EXPECT(gbc.pc(), 0xa341);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa33f), 0xcb);
        EXPECT(gbc.readMem(0xa340), 0x68);
        // CB 68 013A
        gbc.setState(0x43f6, 0xc4c9, 0xb4c0, 0xff1a, 0x9ff3, 0x74b0, 0x1, 0x1);
        gbc.writeMem(0x43f6, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc4c9);
        EXPECT(gbc.pc(), 0x43f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 013B
        gbc.setState(0x2513, 0xa235, 0xfc20, 0x9614, 0xd354, 0x9f1a, 0x0, 0x0);
        gbc.writeMem(0x2513, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xa235);
        EXPECT(gbc.pc(), 0x2515);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 013C
        gbc.setState(0x8ddf, 0x3be0, 0x2880, 0x6d2e, 0x7f0, 0xf296, 0x1, 0x0);
        gbc.writeMem(0x8ddf, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x3be0);
        EXPECT(gbc.pc(), 0x8de1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ddf), 0xcb);
        EXPECT(gbc.readMem(0x8de0), 0x68);
        // CB 68 013E
        gbc.setState(0x4a66, 0x52fd, 0x3c90, 0x5cb6, 0x7c31, 0xae8c, 0x1, 0x1);
        gbc.writeMem(0x4a66, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x52fd);
        EXPECT(gbc.pc(), 0x4a68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 013F
        gbc.setState(0x4c3f, 0x9d11, 0x82d0, 0xe6a3, 0xbac0, 0xe726, 0x1, 0x0);
        gbc.writeMem(0x4c3f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9d11);
        EXPECT(gbc.pc(), 0x4c41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0140
        gbc.setState(0xab48, 0xc00c, 0x55c0, 0x8246, 0x4c40, 0xc224, 0x1, 0x1);
        gbc.writeMem(0xab48, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc00c);
        EXPECT(gbc.pc(), 0xab4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab48), 0xcb);
        EXPECT(gbc.readMem(0xab49), 0x68);
        // CB 68 0141
        gbc.setState(0xc935, 0x5f6c, 0xfcb0, 0x9579, 0x69ac, 0x3ff9, 0x1, 0x0);
        gbc.writeMem(0xc935, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5f6c);
        EXPECT(gbc.pc(), 0xc937);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc935), 0xcb);
        EXPECT(gbc.readMem(0xc936), 0x68);
        // CB 68 0142
        gbc.setState(0x833f, 0xea89, 0xf5f0, 0xd7fa, 0x271e, 0xc1c, 0x1, 0x1);
        gbc.writeMem(0x833f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xea89);
        EXPECT(gbc.pc(), 0x8341);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x833f), 0xcb);
        EXPECT(gbc.readMem(0x8340), 0x68);
        // CB 68 0144
        gbc.setState(0x21cc, 0x30, 0x3420, 0xef7, 0xa00e, 0x8bc4, 0x1, 0x1);
        gbc.writeMem(0x21cc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x30);
        EXPECT(gbc.pc(), 0x21ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0146
        gbc.setState(0xacd1, 0x955f, 0x9830, 0xa5c5, 0x1d90, 0xaf3a, 0x0, 0x0);
        gbc.writeMem(0xacd1, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x955f);
        EXPECT(gbc.pc(), 0xacd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacd1), 0xcb);
        EXPECT(gbc.readMem(0xacd2), 0x68);
        // CB 68 0147
        gbc.setState(0x351d, 0xcbe3, 0x4d30, 0xa69a, 0x18d0, 0x85e4, 0x0, 0x0);
        gbc.writeMem(0x351d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xcbe3);
        EXPECT(gbc.pc(), 0x351f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0148
        gbc.setState(0x7b91, 0x5882, 0x2b70, 0xd68c, 0x412f, 0xc6b8, 0x0, 0x1);
        gbc.writeMem(0x7b91, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x5882);
        EXPECT(gbc.pc(), 0x7b93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0149
        gbc.setState(0xbaff, 0x702a, 0x5850, 0xb246, 0x4f6a, 0x90b6, 0x1, 0x1);
        gbc.writeMem(0xbaff, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x702a);
        EXPECT(gbc.pc(), 0xbb01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaff), 0xcb);
        EXPECT(gbc.readMem(0xbb00), 0x68);
        // CB 68 014A
        gbc.setState(0x92de, 0x8aad, 0x9490, 0xec40, 0xbbf, 0x71fc, 0x1, 0x0);
        gbc.writeMem(0x92de, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8aad);
        EXPECT(gbc.pc(), 0x92e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92de), 0xcb);
        EXPECT(gbc.readMem(0x92df), 0x68);
        // CB 68 014B
        gbc.setState(0x5b1f, 0xa409, 0x2fc0, 0x7f5a, 0x2944, 0x3f8, 0x1, 0x0);
        gbc.writeMem(0x5b1f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xa409);
        EXPECT(gbc.pc(), 0x5b21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 014C
        gbc.setState(0x54a8, 0x7f0b, 0xcd60, 0xca80, 0x53ba, 0xd9a9, 0x1, 0x0);
        gbc.writeMem(0x54a8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7f0b);
        EXPECT(gbc.pc(), 0x54aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 014D
        gbc.setState(0xcd05, 0x446c, 0xea50, 0xa627, 0x6dc2, 0x9ed2, 0x1, 0x1);
        gbc.writeMem(0xcd05, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x446c);
        EXPECT(gbc.pc(), 0xcd07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd05), 0xcb);
        EXPECT(gbc.readMem(0xcd06), 0x68);
        // CB 68 014E
        gbc.setState(0x291, 0x37c7, 0xa0c0, 0x16a4, 0xc907, 0x1385, 0x1, 0x0);
        gbc.writeMem(0x291, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x37c7);
        EXPECT(gbc.pc(), 0x293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 014F
        gbc.setState(0xde11, 0x336a, 0x5d60, 0xb852, 0xf727, 0x3, 0x1, 0x1);
        gbc.writeMem(0xde11, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x336a);
        EXPECT(gbc.pc(), 0xde13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde11), 0xcb);
        EXPECT(gbc.readMem(0xde12), 0x68);
        // CB 68 0150
        gbc.setState(0xd8af, 0x52f6, 0x810, 0x69e3, 0x8e73, 0x5378, 0x0, 0x1);
        gbc.writeMem(0xd8af, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x52f6);
        EXPECT(gbc.pc(), 0xd8b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8af), 0xcb);
        EXPECT(gbc.readMem(0xd8b0), 0x68);
        // CB 68 0151
        gbc.setState(0x7c8, 0x6669, 0x6cc0, 0xeacd, 0x7356, 0x867a, 0x0, 0x0);
        gbc.writeMem(0x7c8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6669);
        EXPECT(gbc.pc(), 0x7ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0152
        gbc.setState(0x605e, 0xf62f, 0x4b40, 0xa2dd, 0x3791, 0xfd41, 0x0, 0x1);
        gbc.writeMem(0x605e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xf62f);
        EXPECT(gbc.pc(), 0x6060);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0153
        gbc.setState(0x91a5, 0xd76a, 0xd480, 0x46ca, 0x29ca, 0x7096, 0x0, 0x0);
        gbc.writeMem(0x91a5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd76a);
        EXPECT(gbc.pc(), 0x91a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91a5), 0xcb);
        EXPECT(gbc.readMem(0x91a6), 0x68);
        // CB 68 0154
        gbc.setState(0x8af3, 0x7ca9, 0xbc30, 0xf4f3, 0x8735, 0x9675, 0x1, 0x1);
        gbc.writeMem(0x8af3, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x7ca9);
        EXPECT(gbc.pc(), 0x8af5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8af3), 0xcb);
        EXPECT(gbc.readMem(0x8af4), 0x68);
        // CB 68 0155
        gbc.setState(0xd0c3, 0xe9c9, 0xe6a0, 0xa158, 0xb23f, 0x3e69, 0x0, 0x0);
        gbc.writeMem(0xd0c3, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe9c9);
        EXPECT(gbc.pc(), 0xd0c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0c3), 0xcb);
        EXPECT(gbc.readMem(0xd0c4), 0x68);
        // CB 68 0156
        gbc.setState(0x8286, 0x8cb8, 0x1d70, 0xf36, 0x27b0, 0xb69b, 0x0, 0x1);
        gbc.writeMem(0x8286, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8cb8);
        EXPECT(gbc.pc(), 0x8288);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8286), 0xcb);
        EXPECT(gbc.readMem(0x8287), 0x68);
        // CB 68 0157
        gbc.setState(0xa76, 0x861e, 0xc6c0, 0xb336, 0x399f, 0x1ec6, 0x1, 0x1);
        gbc.writeMem(0xa76, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x861e);
        EXPECT(gbc.pc(), 0xa78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0158
        gbc.setState(0x3e3e, 0x3c1c, 0xb5c0, 0x5e6a, 0x4ed0, 0x3f04, 0x1, 0x0);
        gbc.writeMem(0x3e3e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3c1c);
        EXPECT(gbc.pc(), 0x3e40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0159
        gbc.setState(0x23f6, 0x9528, 0x9330, 0xf126, 0xd9d4, 0x2d37, 0x1, 0x1);
        gbc.writeMem(0x23f6, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9528);
        EXPECT(gbc.pc(), 0x23f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 015A
        gbc.setState(0xd192, 0xb351, 0x7550, 0xb6ba, 0x9428, 0x2cea, 0x0, 0x1);
        gbc.writeMem(0xd192, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb351);
        EXPECT(gbc.pc(), 0xd194);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd192), 0xcb);
        EXPECT(gbc.readMem(0xd193), 0x68);
        // CB 68 015C
        gbc.setState(0x6850, 0x3e24, 0xfbf0, 0x4575, 0xc8e8, 0x6065, 0x1, 0x1);
        gbc.writeMem(0x6850, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x3e24);
        EXPECT(gbc.pc(), 0x6852);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 015D
        gbc.setState(0x4557, 0x2efa, 0x95b0, 0x6dab, 0x7531, 0x818e, 0x1, 0x1);
        gbc.writeMem(0x4557, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x2efa);
        EXPECT(gbc.pc(), 0x4559);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 015E
        gbc.setState(0x5de4, 0xe5b4, 0xfd20, 0xc896, 0xbc0, 0x5452, 0x1, 0x1);
        gbc.writeMem(0x5de4, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe5b4);
        EXPECT(gbc.pc(), 0x5de6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0160
        gbc.setState(0x1284, 0xac2a, 0x9b20, 0x8f13, 0x91e4, 0xf2be, 0x1, 0x0);
        gbc.writeMem(0x1284, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xac2a);
        EXPECT(gbc.pc(), 0x1286);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0161
        gbc.setState(0x2658, 0xc212, 0xd220, 0x842, 0x5fcf, 0xdfe9, 0x1, 0x0);
        gbc.writeMem(0x2658, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc212);
        EXPECT(gbc.pc(), 0x265a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0162
        gbc.setState(0x3dc5, 0xc109, 0xa30, 0x3400, 0xe6aa, 0x3a3f, 0x0, 0x1);
        gbc.writeMem(0x3dc5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc109);
        EXPECT(gbc.pc(), 0x3dc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0163
        gbc.setState(0x8233, 0xac44, 0xabb0, 0x6f7, 0x3a93, 0x55d7, 0x1, 0x0);
        gbc.writeMem(0x8233, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xac44);
        EXPECT(gbc.pc(), 0x8235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8233), 0xcb);
        EXPECT(gbc.readMem(0x8234), 0x68);
        // CB 68 0164
        gbc.setState(0x5f59, 0xbee4, 0x86f0, 0x7238, 0x244, 0xe1c4, 0x1, 0x1);
        gbc.writeMem(0x5f59, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xbee4);
        EXPECT(gbc.pc(), 0x5f5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0165
        gbc.setState(0xd985, 0xc950, 0x3ef0, 0xe699, 0x9dce, 0x90ab, 0x1, 0x0);
        gbc.writeMem(0xd985, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc950);
        EXPECT(gbc.pc(), 0xd987);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd985), 0xcb);
        EXPECT(gbc.readMem(0xd986), 0x68);
        // CB 68 0166
        gbc.setState(0x834c, 0x2bf5, 0x3880, 0xd838, 0x2d39, 0x8da7, 0x1, 0x1);
        gbc.writeMem(0x834c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2bf5);
        EXPECT(gbc.pc(), 0x834e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x834c), 0xcb);
        EXPECT(gbc.readMem(0x834d), 0x68);
        // CB 68 0167
        gbc.setState(0x4f87, 0x57f5, 0xff70, 0xd9e3, 0x98a3, 0x6a4f, 0x1, 0x1);
        gbc.writeMem(0x4f87, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x57f5);
        EXPECT(gbc.pc(), 0x4f89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0168
        gbc.setState(0x912a, 0x3ac0, 0xed20, 0x5c79, 0x1b79, 0x4e5a, 0x0, 0x0);
        gbc.writeMem(0x912a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3ac0);
        EXPECT(gbc.pc(), 0x912c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x912a), 0xcb);
        EXPECT(gbc.readMem(0x912b), 0x68);
        // CB 68 0169
        gbc.setState(0xd6e8, 0x973d, 0x10c0, 0x9c2a, 0x57a6, 0xd04, 0x0, 0x1);
        gbc.writeMem(0xd6e8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x973d);
        EXPECT(gbc.pc(), 0xd6ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6e8), 0xcb);
        EXPECT(gbc.readMem(0xd6e9), 0x68);
        // CB 68 016A
        gbc.setState(0x98be, 0x2c94, 0x3520, 0x7763, 0x208, 0xae3f, 0x0, 0x1);
        gbc.writeMem(0x98be, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2c94);
        EXPECT(gbc.pc(), 0x98c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98be), 0xcb);
        EXPECT(gbc.readMem(0x98bf), 0x68);
        // CB 68 016B
        gbc.setState(0xe90b, 0x6c23, 0x39f0, 0x67e, 0x6d2b, 0xd15b, 0x1, 0x1);
        gbc.writeMem(0xe90b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6c23);
        EXPECT(gbc.pc(), 0xe90d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe90b), 0xcb);
        EXPECT(gbc.readMem(0xe90c), 0x68);
        // CB 68 016C
        gbc.setState(0xcb95, 0x6238, 0xd140, 0xc906, 0x5326, 0x9df2, 0x0, 0x0);
        gbc.writeMem(0xcb95, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6238);
        EXPECT(gbc.pc(), 0xcb97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb95), 0xcb);
        EXPECT(gbc.readMem(0xcb96), 0x68);
        // CB 68 016D
        gbc.setState(0x93de, 0x6fe9, 0x95f0, 0x6882, 0x8af8, 0xdd06, 0x0, 0x1);
        gbc.writeMem(0x93de, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6fe9);
        EXPECT(gbc.pc(), 0x93e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93de), 0xcb);
        EXPECT(gbc.readMem(0x93df), 0x68);
        // CB 68 016E
        gbc.setState(0x741b, 0xcbeb, 0xffe0, 0x5fa2, 0x77cf, 0x9767, 0x0, 0x0);
        gbc.writeMem(0x741b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xcbeb);
        EXPECT(gbc.pc(), 0x741d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 016F
        gbc.setState(0x1eb2, 0x4c1a, 0xadc0, 0xcb15, 0xc8ef, 0x8cbf, 0x1, 0x0);
        gbc.writeMem(0x1eb2, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4c1a);
        EXPECT(gbc.pc(), 0x1eb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0170
        gbc.setState(0x7c5, 0x9120, 0x62f0, 0x4559, 0xad62, 0x778, 0x0, 0x1);
        gbc.writeMem(0x7c5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9120);
        EXPECT(gbc.pc(), 0x7c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0171
        gbc.setState(0xb276, 0xdcb1, 0xb610, 0x86ac, 0xe74c, 0xb8, 0x0, 0x1);
        gbc.writeMem(0xb276, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xdcb1);
        EXPECT(gbc.pc(), 0xb278);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb276), 0xcb);
        EXPECT(gbc.readMem(0xb277), 0x68);
        // CB 68 0172
        gbc.setState(0x7384, 0x97be, 0xb5c0, 0xe7af, 0xf542, 0x2685, 0x1, 0x0);
        gbc.writeMem(0x7384, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x97be);
        EXPECT(gbc.pc(), 0x7386);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0173
        gbc.setState(0x9e75, 0xb83a, 0x7560, 0x8d70, 0x41cf, 0x24fe, 0x1, 0x1);
        gbc.writeMem(0x9e75, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb83a);
        EXPECT(gbc.pc(), 0x9e77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e75), 0xcb);
        EXPECT(gbc.readMem(0x9e76), 0x68);
        // CB 68 0174
        gbc.setState(0xd229, 0x3734, 0x1a00, 0xf734, 0xf752, 0x58, 0x0, 0x0);
        gbc.writeMem(0xd229, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3734);
        EXPECT(gbc.pc(), 0xd22b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd229), 0xcb);
        EXPECT(gbc.readMem(0xd22a), 0x68);
        // CB 68 0175
        gbc.setState(0x9d01, 0x9e43, 0x5d20, 0xa2e5, 0xe33b, 0xaa0c, 0x1, 0x1);
        gbc.writeMem(0x9d01, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9e43);
        EXPECT(gbc.pc(), 0x9d03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d01), 0xcb);
        EXPECT(gbc.readMem(0x9d02), 0x68);
        // CB 68 0176
        gbc.setState(0x5367, 0xb423, 0xdcf0, 0xbf9e, 0xde4d, 0xe578, 0x1, 0x1);
        gbc.writeMem(0x5367, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb423);
        EXPECT(gbc.pc(), 0x5369);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0177
        gbc.setState(0xdcac, 0x26a, 0x7400, 0xb6e8, 0x54b7, 0x4cce, 0x1, 0x1);
        gbc.writeMem(0xdcac, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x26a);
        EXPECT(gbc.pc(), 0xdcae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcac), 0xcb);
        EXPECT(gbc.readMem(0xdcad), 0x68);
        // CB 68 0178
        gbc.setState(0x4e6, 0xdd99, 0xa770, 0xeecc, 0x80ce, 0xdd2e, 0x0, 0x0);
        gbc.writeMem(0x4e6, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xdd99);
        EXPECT(gbc.pc(), 0x4e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0179
        gbc.setState(0x462d, 0x57f6, 0xbe20, 0x858a, 0x7e84, 0x5cc1, 0x1, 0x1);
        gbc.writeMem(0x462d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x57f6);
        EXPECT(gbc.pc(), 0x462f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 017A
        gbc.setState(0x69c3, 0x988, 0xffa0, 0xa9bd, 0x6333, 0x383a, 0x0, 0x0);
        gbc.writeMem(0x69c3, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x988);
        EXPECT(gbc.pc(), 0x69c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 017B
        gbc.setState(0xa1ac, 0xd6b4, 0xf0c0, 0xbf31, 0x9949, 0x97ac, 0x0, 0x1);
        gbc.writeMem(0xa1ac, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd6b4);
        EXPECT(gbc.pc(), 0xa1ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1ac), 0xcb);
        EXPECT(gbc.readMem(0xa1ad), 0x68);
        // CB 68 017C
        gbc.setState(0x368d, 0xde44, 0x7510, 0x96cf, 0xed63, 0x364c, 0x0, 0x0);
        gbc.writeMem(0x368d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xde44);
        EXPECT(gbc.pc(), 0x368f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 017D
        gbc.setState(0xca73, 0x4ef, 0x1470, 0xe77c, 0x8eb3, 0xf293, 0x1, 0x1);
        gbc.writeMem(0xca73, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x4ef);
        EXPECT(gbc.pc(), 0xca75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca73), 0xcb);
        EXPECT(gbc.readMem(0xca74), 0x68);
        // CB 68 017E
        gbc.setState(0x1a90, 0x145, 0x8ba0, 0x9c0, 0x3f5f, 0x36f1, 0x0, 0x1);
        gbc.writeMem(0x1a90, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x145);
        EXPECT(gbc.pc(), 0x1a92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 017F
        gbc.setState(0x532f, 0xae50, 0xdc00, 0x97, 0x14c, 0xcc67, 0x0, 0x0);
        gbc.writeMem(0x532f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xae50);
        EXPECT(gbc.pc(), 0x5331);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0180
        gbc.setState(0x1a1e, 0x741a, 0x3090, 0xedad, 0xbbb5, 0x4082, 0x0, 0x1);
        gbc.writeMem(0x1a1e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x741a);
        EXPECT(gbc.pc(), 0x1a20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0181
        gbc.setState(0x6a04, 0xb411, 0x7160, 0xcff8, 0xf516, 0x51d6, 0x1, 0x1);
        gbc.writeMem(0x6a04, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xb411);
        EXPECT(gbc.pc(), 0x6a06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0182
        gbc.setState(0xc9a8, 0x61cd, 0xce50, 0x7cd8, 0x819, 0x9145, 0x1, 0x0);
        gbc.writeMem(0xc9a8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x61cd);
        EXPECT(gbc.pc(), 0xc9aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9a8), 0xcb);
        EXPECT(gbc.readMem(0xc9a9), 0x68);
        // CB 68 0183
        gbc.setState(0xd1bc, 0x6357, 0x37f0, 0x9983, 0x7d1e, 0x75cb, 0x0, 0x0);
        gbc.writeMem(0xd1bc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6357);
        EXPECT(gbc.pc(), 0xd1be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1bc), 0xcb);
        EXPECT(gbc.readMem(0xd1bd), 0x68);
        // CB 68 0184
        gbc.setState(0xd181, 0xae75, 0xf340, 0xe6e1, 0xde1b, 0x59ae, 0x1, 0x0);
        gbc.writeMem(0xd181, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xae75);
        EXPECT(gbc.pc(), 0xd183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd181), 0xcb);
        EXPECT(gbc.readMem(0xd182), 0x68);
        // CB 68 0185
        gbc.setState(0x846a, 0x53bb, 0x29c0, 0x8451, 0xf9e5, 0x9b7a, 0x0, 0x0);
        gbc.writeMem(0x846a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x53bb);
        EXPECT(gbc.pc(), 0x846c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x846a), 0xcb);
        EXPECT(gbc.readMem(0x846b), 0x68);
        // CB 68 0186
        gbc.setState(0xc29, 0x1ae4, 0xbe70, 0x1c1, 0xb6d7, 0x9918, 0x0, 0x0);
        gbc.writeMem(0xc29, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1ae4);
        EXPECT(gbc.pc(), 0xc2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0187
        gbc.setState(0x5717, 0x19c0, 0x12b0, 0x1f79, 0x633d, 0x9e34, 0x0, 0x0);
        gbc.writeMem(0x5717, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x19c0);
        EXPECT(gbc.pc(), 0x5719);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0188
        gbc.setState(0x6931, 0x8f67, 0x550, 0x7d47, 0x4b21, 0x202, 0x1, 0x1);
        gbc.writeMem(0x6931, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x8f67);
        EXPECT(gbc.pc(), 0x6933);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0189
        gbc.setState(0x3de7, 0xa7be, 0x7910, 0x20ba, 0xc47b, 0xc3af, 0x0, 0x0);
        gbc.writeMem(0x3de7, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa7be);
        EXPECT(gbc.pc(), 0x3de9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 018B
        gbc.setState(0x269a, 0xab67, 0xb200, 0x1af6, 0xf9b6, 0xdf35, 0x1, 0x1);
        gbc.writeMem(0x269a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xab67);
        EXPECT(gbc.pc(), 0x269c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 018C
        gbc.setState(0x1d90, 0x55e, 0x1b60, 0x5860, 0x1c21, 0xe25, 0x0, 0x1);
        gbc.writeMem(0x1d90, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x55e);
        EXPECT(gbc.pc(), 0x1d92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 018D
        gbc.setState(0xebc5, 0x2859, 0xcd30, 0x33dd, 0x57cf, 0xa76b, 0x0, 0x1);
        gbc.writeMem(0xebc5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2859);
        EXPECT(gbc.pc(), 0xebc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebc5), 0xcb);
        EXPECT(gbc.readMem(0xebc6), 0x68);
        // CB 68 018E
        gbc.setState(0xc72e, 0x4fce, 0x56d0, 0xc53f, 0x782e, 0x44e5, 0x0, 0x0);
        gbc.writeMem(0xc72e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4fce);
        EXPECT(gbc.pc(), 0xc730);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc72e), 0xcb);
        EXPECT(gbc.readMem(0xc72f), 0x68);
        // CB 68 018F
        gbc.setState(0xd273, 0x3ceb, 0x8c70, 0x1eec, 0x8adf, 0xab82, 0x0, 0x1);
        gbc.writeMem(0xd273, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3ceb);
        EXPECT(gbc.pc(), 0xd275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd273), 0xcb);
        EXPECT(gbc.readMem(0xd274), 0x68);
        // CB 68 0190
        gbc.setState(0x9d8b, 0xd587, 0x6e0, 0x6c29, 0x2808, 0x7d51, 0x1, 0x1);
        gbc.writeMem(0x9d8b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd587);
        EXPECT(gbc.pc(), 0x9d8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d8b), 0xcb);
        EXPECT(gbc.readMem(0x9d8c), 0x68);
        // CB 68 0192
        gbc.setState(0x5f24, 0xb6f2, 0x7ab0, 0x2ef7, 0xfa6a, 0xa9da, 0x0, 0x0);
        gbc.writeMem(0x5f24, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb6f2);
        EXPECT(gbc.pc(), 0x5f26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0193
        gbc.setState(0xca75, 0x20c4, 0xd520, 0x78d6, 0x289c, 0x6942, 0x1, 0x1);
        gbc.writeMem(0xca75, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x20c4);
        EXPECT(gbc.pc(), 0xca77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca75), 0xcb);
        EXPECT(gbc.readMem(0xca76), 0x68);
        // CB 68 0194
        gbc.setState(0xa1a8, 0xcd38, 0x1550, 0x9d73, 0x4296, 0x67e3, 0x0, 0x0);
        gbc.writeMem(0xa1a8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xcd38);
        EXPECT(gbc.pc(), 0xa1aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1a8), 0xcb);
        EXPECT(gbc.readMem(0xa1a9), 0x68);
        // CB 68 0195
        gbc.setState(0xa031, 0xafce, 0x5d0, 0xda24, 0x6c28, 0x3c44, 0x0, 0x0);
        gbc.writeMem(0xa031, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xafce);
        EXPECT(gbc.pc(), 0xa033);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa031), 0xcb);
        EXPECT(gbc.readMem(0xa032), 0x68);
        // CB 68 0196
        gbc.setState(0xc830, 0x749f, 0xf860, 0xa9cc, 0xaada, 0x6f6f, 0x1, 0x0);
        gbc.writeMem(0xc830, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x749f);
        EXPECT(gbc.pc(), 0xc832);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc830), 0xcb);
        EXPECT(gbc.readMem(0xc831), 0x68);
        // CB 68 0197
        gbc.setState(0xb01d, 0x1c62, 0x9bc0, 0x7cb1, 0x6c2d, 0xdd8a, 0x0, 0x0);
        gbc.writeMem(0xb01d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1c62);
        EXPECT(gbc.pc(), 0xb01f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb01d), 0xcb);
        EXPECT(gbc.readMem(0xb01e), 0x68);
        // CB 68 0198
        gbc.setState(0x4f3d, 0x219f, 0xd720, 0x6e7e, 0xe54b, 0x7a77, 0x0, 0x0);
        gbc.writeMem(0x4f3d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x219f);
        EXPECT(gbc.pc(), 0x4f3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0199
        gbc.setState(0x727f, 0xa175, 0xcd60, 0xa37b, 0x631f, 0x3390, 0x0, 0x0);
        gbc.writeMem(0x727f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa175);
        EXPECT(gbc.pc(), 0x7281);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 019A
        gbc.setState(0xd20a, 0x11bf, 0xce20, 0xbaaa, 0xfaf, 0xc37c, 0x0, 0x1);
        gbc.writeMem(0xd20a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x11bf);
        EXPECT(gbc.pc(), 0xd20c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd20a), 0xcb);
        EXPECT(gbc.readMem(0xd20b), 0x68);
        // CB 68 019B
        gbc.setState(0x11e8, 0xf02f, 0x9360, 0xf6e, 0x2d31, 0xc49e, 0x0, 0x0);
        gbc.writeMem(0x11e8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xf02f);
        EXPECT(gbc.pc(), 0x11ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 019C
        gbc.setState(0x654, 0xeb1c, 0x86b0, 0xdbf4, 0xcffb, 0x883f, 0x0, 0x1);
        gbc.writeMem(0x654, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xeb1c);
        EXPECT(gbc.pc(), 0x656);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 019D
        gbc.setState(0xb728, 0xcdda, 0xcb80, 0x9ceb, 0x2914, 0x4e33, 0x1, 0x1);
        gbc.writeMem(0xb728, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xcdda);
        EXPECT(gbc.pc(), 0xb72a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb728), 0xcb);
        EXPECT(gbc.readMem(0xb729), 0x68);
        // CB 68 019E
        gbc.setState(0x8798, 0x5756, 0xdd40, 0xa702, 0xa26b, 0x3258, 0x1, 0x1);
        gbc.writeMem(0x8798, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5756);
        EXPECT(gbc.pc(), 0x879a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8798), 0xcb);
        EXPECT(gbc.readMem(0x8799), 0x68);
        // CB 68 019F
        gbc.setState(0x5022, 0x6ae1, 0x5cf0, 0x2155, 0xfa8b, 0x1d1c, 0x1, 0x1);
        gbc.writeMem(0x5022, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x6ae1);
        EXPECT(gbc.pc(), 0x5024);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 01A0
        gbc.setState(0xdf72, 0xd4cd, 0xa90, 0xdc99, 0x4224, 0x5c21, 0x1, 0x1);
        gbc.writeMem(0xdf72, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd4cd);
        EXPECT(gbc.pc(), 0xdf74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf72), 0xcb);
        EXPECT(gbc.readMem(0xdf73), 0x68);
        // CB 68 01A1
        gbc.setState(0xdb7b, 0x614e, 0xf7c0, 0xa2cb, 0xeed6, 0x2553, 0x0, 0x0);
        gbc.writeMem(0xdb7b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x614e);
        EXPECT(gbc.pc(), 0xdb7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb7b), 0xcb);
        EXPECT(gbc.readMem(0xdb7c), 0x68);
        // CB 68 01A2
        gbc.setState(0x2dbc, 0xe951, 0x4bc0, 0x39f0, 0x10c8, 0xad19, 0x1, 0x0);
        gbc.writeMem(0x2dbc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe951);
        EXPECT(gbc.pc(), 0x2dbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01A3
        gbc.setState(0xa7dd, 0x89cf, 0x4eb0, 0x78b7, 0x8c1e, 0x73ef, 0x1, 0x0);
        gbc.writeMem(0xa7dd, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x89cf);
        EXPECT(gbc.pc(), 0xa7df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7dd), 0xcb);
        EXPECT(gbc.readMem(0xa7de), 0x68);
        // CB 68 01A4
        gbc.setState(0xb474, 0xfd17, 0x3860, 0xb745, 0xc39f, 0x3e50, 0x0, 0x0);
        gbc.writeMem(0xb474, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xfd17);
        EXPECT(gbc.pc(), 0xb476);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb474), 0xcb);
        EXPECT(gbc.readMem(0xb475), 0x68);
        // CB 68 01A5
        gbc.setState(0x1fac, 0xf2b, 0xa090, 0xec8f, 0x1828, 0x38a5, 0x0, 0x0);
        gbc.writeMem(0x1fac, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf2b);
        EXPECT(gbc.pc(), 0x1fae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 01A6
        gbc.setState(0xa8b8, 0x939a, 0x3eb0, 0x923d, 0x19de, 0xe2a5, 0x0, 0x1);
        gbc.writeMem(0xa8b8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x939a);
        EXPECT(gbc.pc(), 0xa8ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8b8), 0xcb);
        EXPECT(gbc.readMem(0xa8b9), 0x68);
        // CB 68 01A7
        gbc.setState(0x5f85, 0x9a0d, 0x49d0, 0x88af, 0x8ca1, 0x1471, 0x0, 0x0);
        gbc.writeMem(0x5f85, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x9a0d);
        EXPECT(gbc.pc(), 0x5f87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 01A8
        gbc.setState(0x4e23, 0x728f, 0x29b0, 0xc997, 0x72fa, 0xa907, 0x0, 0x0);
        gbc.writeMem(0x4e23, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x728f);
        EXPECT(gbc.pc(), 0x4e25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 01A9
        gbc.setState(0x7ef6, 0xee97, 0x76c0, 0xcf6, 0xb6b, 0x5641, 0x0, 0x0);
        gbc.writeMem(0x7ef6, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xee97);
        EXPECT(gbc.pc(), 0x7ef8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01AA
        gbc.setState(0x565f, 0x54fa, 0x80c0, 0x4401, 0xf4e2, 0x2ba7, 0x1, 0x1);
        gbc.writeMem(0x565f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x54fa);
        EXPECT(gbc.pc(), 0x5661);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01AB
        gbc.setState(0x5cad, 0xce03, 0x9cb0, 0x5c5b, 0xe251, 0x612d, 0x0, 0x1);
        gbc.writeMem(0x5cad, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xce03);
        EXPECT(gbc.pc(), 0x5caf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 01AC
        gbc.setState(0xd7a7, 0x5396, 0x4390, 0x7796, 0x6542, 0x3991, 0x1, 0x0);
        gbc.writeMem(0xd7a7, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x5396);
        EXPECT(gbc.pc(), 0xd7a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7a7), 0xcb);
        EXPECT(gbc.readMem(0xd7a8), 0x68);
        // CB 68 01AD
        gbc.setState(0xbdc5, 0x5e64, 0xa970, 0x6e7e, 0xb03a, 0xbca5, 0x0, 0x1);
        gbc.writeMem(0xbdc5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5e64);
        EXPECT(gbc.pc(), 0xbdc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdc5), 0xcb);
        EXPECT(gbc.readMem(0xbdc6), 0x68);
        // CB 68 01AE
        gbc.setState(0x159e, 0x9129, 0xf4c0, 0xebcb, 0x570e, 0x421d, 0x1, 0x1);
        gbc.writeMem(0x159e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9129);
        EXPECT(gbc.pc(), 0x15a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01AF
        gbc.setState(0x5d1f, 0xf22e, 0x5b30, 0xd68f, 0x9ddc, 0x5fe, 0x0, 0x0);
        gbc.writeMem(0x5d1f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf22e);
        EXPECT(gbc.pc(), 0x5d21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 01B0
        gbc.setState(0x5ea7, 0xe68e, 0x2200, 0x10b2, 0xc67c, 0x6a6f, 0x0, 0x1);
        gbc.writeMem(0x5ea7, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xe68e);
        EXPECT(gbc.pc(), 0x5ea9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01B1
        gbc.setState(0xa3bc, 0x1082, 0x3ad0, 0x17b6, 0xe9a2, 0xac66, 0x0, 0x0);
        gbc.writeMem(0xa3bc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1082);
        EXPECT(gbc.pc(), 0xa3be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3bc), 0xcb);
        EXPECT(gbc.readMem(0xa3bd), 0x68);
        // CB 68 01B2
        gbc.setState(0x53d2, 0x17ca, 0x22b0, 0xaf79, 0x8fec, 0x5f83, 0x1, 0x0);
        gbc.writeMem(0x53d2, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x17ca);
        EXPECT(gbc.pc(), 0x53d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 01B3
        gbc.setState(0x5013, 0xfdc4, 0xc350, 0x117d, 0x8d24, 0x34f9, 0x0, 0x1);
        gbc.writeMem(0x5013, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xfdc4);
        EXPECT(gbc.pc(), 0x5015);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 01B4
        gbc.setState(0x17fd, 0x2cd1, 0xc7e0, 0xb4dd, 0xa833, 0xa074, 0x0, 0x0);
        gbc.writeMem(0x17fd, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2cd1);
        EXPECT(gbc.pc(), 0x17ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01B5
        gbc.setState(0xce32, 0x158, 0x1d50, 0xa2b7, 0x7f0, 0x7d1d, 0x0, 0x0);
        gbc.writeMem(0xce32, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x158);
        EXPECT(gbc.pc(), 0xce34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce32), 0xcb);
        EXPECT(gbc.readMem(0xce33), 0x68);
        // CB 68 01B6
        gbc.setState(0xbea1, 0x67e6, 0xf960, 0x34b2, 0xe1bb, 0x1085, 0x1, 0x1);
        gbc.writeMem(0xbea1, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x67e6);
        EXPECT(gbc.pc(), 0xbea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbea1), 0xcb);
        EXPECT(gbc.readMem(0xbea2), 0x68);
        // CB 68 01B7
        gbc.setState(0x56b8, 0xdf8f, 0xb3a0, 0x5533, 0xf0f0, 0x93c, 0x0, 0x1);
        gbc.writeMem(0x56b8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xdf8f);
        EXPECT(gbc.pc(), 0x56ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01B8
        gbc.setState(0x7a3b, 0xfd5c, 0x27e0, 0xa67e, 0xd2d9, 0x6b7, 0x0, 0x1);
        gbc.writeMem(0x7a3b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xfd5c);
        EXPECT(gbc.pc(), 0x7a3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01B9
        gbc.setState(0xc56f, 0xf2c1, 0x1770, 0x7298, 0xccc0, 0x512e, 0x0, 0x1);
        gbc.writeMem(0xc56f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf2c1);
        EXPECT(gbc.pc(), 0xc571);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc56f), 0xcb);
        EXPECT(gbc.readMem(0xc570), 0x68);
        // CB 68 01BA
        gbc.setState(0x69a5, 0x1d3d, 0xe580, 0x869b, 0x9068, 0xb5da, 0x1, 0x1);
        gbc.writeMem(0x69a5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x1d3d);
        EXPECT(gbc.pc(), 0x69a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01BB
        gbc.setState(0xa75b, 0xd2b, 0xdf0, 0x57bc, 0xab8d, 0x4ff, 0x1, 0x1);
        gbc.writeMem(0xa75b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd2b);
        EXPECT(gbc.pc(), 0xa75d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa75b), 0xcb);
        EXPECT(gbc.readMem(0xa75c), 0x68);
        // CB 68 01BC
        gbc.setState(0xbf9b, 0xf30, 0xf7b0, 0x1a73, 0x5b0c, 0x77f2, 0x0, 0x0);
        gbc.writeMem(0xbf9b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf30);
        EXPECT(gbc.pc(), 0xbf9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf9b), 0xcb);
        EXPECT(gbc.readMem(0xbf9c), 0x68);
        // CB 68 01BD
        gbc.setState(0xb18a, 0xd064, 0x4050, 0xe681, 0x737e, 0xd1d0, 0x1, 0x1);
        gbc.writeMem(0xb18a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd064);
        EXPECT(gbc.pc(), 0xb18c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb18a), 0xcb);
        EXPECT(gbc.readMem(0xb18b), 0x68);
        // CB 68 01BE
        gbc.setState(0x52df, 0x4d5f, 0x8de0, 0x25bc, 0x760e, 0xe2a6, 0x1, 0x1);
        gbc.writeMem(0x52df, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4d5f);
        EXPECT(gbc.pc(), 0x52e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01C0
        gbc.setState(0xdf71, 0x5762, 0x4b80, 0xbd76, 0x5c74, 0x4ac6, 0x1, 0x0);
        gbc.writeMem(0xdf71, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5762);
        EXPECT(gbc.pc(), 0xdf73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf71), 0xcb);
        EXPECT(gbc.readMem(0xdf72), 0x68);
        // CB 68 01C1
        gbc.setState(0x1b15, 0x5d84, 0x7670, 0xed34, 0x5e50, 0xf1b9, 0x1, 0x1);
        gbc.writeMem(0x1b15, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5d84);
        EXPECT(gbc.pc(), 0x1b17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 01C2
        gbc.setState(0xa52d, 0x9d16, 0xbca0, 0x4bd8, 0xa032, 0x241, 0x1, 0x1);
        gbc.writeMem(0xa52d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9d16);
        EXPECT(gbc.pc(), 0xa52f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa52d), 0xcb);
        EXPECT(gbc.readMem(0xa52e), 0x68);
        // CB 68 01C3
        gbc.setState(0xa224, 0xc1b5, 0x9c50, 0xc823, 0xb578, 0xc373, 0x0, 0x0);
        gbc.writeMem(0xa224, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc1b5);
        EXPECT(gbc.pc(), 0xa226);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa224), 0xcb);
        EXPECT(gbc.readMem(0xa225), 0x68);
        // CB 68 01C4
        gbc.setState(0x43f4, 0x2894, 0xc840, 0xedc1, 0xb58a, 0x33db, 0x0, 0x0);
        gbc.writeMem(0x43f4, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2894);
        EXPECT(gbc.pc(), 0x43f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01C5
        gbc.setState(0xdc82, 0x8636, 0xe60, 0xd919, 0xbc3, 0x67da, 0x0, 0x0);
        gbc.writeMem(0xdc82, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8636);
        EXPECT(gbc.pc(), 0xdc84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc82), 0xcb);
        EXPECT(gbc.readMem(0xdc83), 0x68);
        // CB 68 01C6
        gbc.setState(0xa092, 0x9a3d, 0xf970, 0x36b6, 0xa369, 0x17d6, 0x1, 0x1);
        gbc.writeMem(0xa092, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9a3d);
        EXPECT(gbc.pc(), 0xa094);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa092), 0xcb);
        EXPECT(gbc.readMem(0xa093), 0x68);
        // CB 68 01C7
        gbc.setState(0xe21a, 0xa139, 0xe850, 0xeba0, 0x62e0, 0x32c, 0x1, 0x0);
        gbc.writeMem(0xe21a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa139);
        EXPECT(gbc.pc(), 0xe21c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe21a), 0xcb);
        EXPECT(gbc.readMem(0xe21b), 0x68);
        // CB 68 01C8
        gbc.setState(0x6979, 0xb02b, 0x91e0, 0x408, 0x83b2, 0x63b8, 0x0, 0x1);
        gbc.writeMem(0x6979, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb02b);
        EXPECT(gbc.pc(), 0x697b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01C9
        gbc.setState(0x5d03, 0xff11, 0x8ff0, 0xc937, 0xf277, 0x7570, 0x0, 0x1);
        gbc.writeMem(0x5d03, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xff11);
        EXPECT(gbc.pc(), 0x5d05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 01CA
        gbc.setState(0x9bda, 0x60b6, 0xb110, 0xcc81, 0x3650, 0x4911, 0x0, 0x0);
        gbc.writeMem(0x9bda, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x60b6);
        EXPECT(gbc.pc(), 0x9bdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bda), 0xcb);
        EXPECT(gbc.readMem(0x9bdb), 0x68);
        // CB 68 01CB
        gbc.setState(0x7947, 0x9ff3, 0x36d0, 0x780b, 0xda6c, 0x1a1a, 0x1, 0x1);
        gbc.writeMem(0x7947, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9ff3);
        EXPECT(gbc.pc(), 0x7949);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 01CC
        gbc.setState(0xce7c, 0x95bd, 0xe220, 0x2ad4, 0x2e11, 0x7128, 0x1, 0x0);
        gbc.writeMem(0xce7c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x95bd);
        EXPECT(gbc.pc(), 0xce7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce7c), 0xcb);
        EXPECT(gbc.readMem(0xce7d), 0x68);
        // CB 68 01CD
        gbc.setState(0x6f9c, 0x2073, 0xf2a0, 0xd285, 0xd2e2, 0xb5a3, 0x1, 0x1);
        gbc.writeMem(0x6f9c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x2073);
        EXPECT(gbc.pc(), 0x6f9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01CE
        gbc.setState(0x6f3f, 0xd50d, 0x3a20, 0xc761, 0x8741, 0xb79e, 0x1, 0x0);
        gbc.writeMem(0x6f3f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd50d);
        EXPECT(gbc.pc(), 0x6f41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01CF
        gbc.setState(0x9b1b, 0x945d, 0x6330, 0x76fd, 0xf20f, 0xd02, 0x0, 0x0);
        gbc.writeMem(0x9b1b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x945d);
        EXPECT(gbc.pc(), 0x9b1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b1b), 0xcb);
        EXPECT(gbc.readMem(0x9b1c), 0x68);
        // CB 68 01D0
        gbc.setState(0x4626, 0xc020, 0x62c0, 0x24ec, 0x8404, 0x41cd, 0x0, 0x1);
        gbc.writeMem(0x4626, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc020);
        EXPECT(gbc.pc(), 0x4628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01D1
        gbc.setState(0xd63c, 0x6172, 0x9790, 0x749, 0xf555, 0xfb00, 0x1, 0x1);
        gbc.writeMem(0xd63c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x6172);
        EXPECT(gbc.pc(), 0xd63e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd63c), 0xcb);
        EXPECT(gbc.readMem(0xd63d), 0x68);
        // CB 68 01D2
        gbc.setState(0xcb1c, 0x4038, 0x2090, 0x55eb, 0x48b, 0x8fa8, 0x1, 0x0);
        gbc.writeMem(0xcb1c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4038);
        EXPECT(gbc.pc(), 0xcb1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb1c), 0xcb);
        EXPECT(gbc.readMem(0xcb1d), 0x68);
        // CB 68 01D3
        gbc.setState(0x92f4, 0xb1ef, 0x69d0, 0x9d7d, 0x90bb, 0xf63a, 0x1, 0x1);
        gbc.writeMem(0x92f4, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb1ef);
        EXPECT(gbc.pc(), 0x92f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92f4), 0xcb);
        EXPECT(gbc.readMem(0x92f5), 0x68);
        // CB 68 01D4
        gbc.setState(0x3a83, 0xe417, 0x5850, 0x8ce3, 0x37b2, 0xb9d9, 0x0, 0x1);
        gbc.writeMem(0x3a83, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe417);
        EXPECT(gbc.pc(), 0x3a85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 01D5
        gbc.setState(0x548c, 0x836, 0x64c0, 0x707e, 0xb843, 0x873c, 0x0, 0x1);
        gbc.writeMem(0x548c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x836);
        EXPECT(gbc.pc(), 0x548e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01D6
        gbc.setState(0xb0f6, 0xb075, 0x6a50, 0xea51, 0x9ee8, 0x9eb3, 0x1, 0x1);
        gbc.writeMem(0xb0f6, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb075);
        EXPECT(gbc.pc(), 0xb0f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0f6), 0xcb);
        EXPECT(gbc.readMem(0xb0f7), 0x68);
        // CB 68 01D7
        gbc.setState(0x6d16, 0x8c82, 0x3af0, 0x67f5, 0x802b, 0x60b7, 0x0, 0x1);
        gbc.writeMem(0x6d16, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8c82);
        EXPECT(gbc.pc(), 0x6d18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 01D8
        gbc.setState(0x4fb9, 0x67f4, 0x8390, 0x46a3, 0xf1ca, 0x79b4, 0x1, 0x0);
        gbc.writeMem(0x4fb9, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x67f4);
        EXPECT(gbc.pc(), 0x4fbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 01D9
        gbc.setState(0x8b3f, 0x30ec, 0xe770, 0x12b0, 0xc3e2, 0x5da7, 0x1, 0x0);
        gbc.writeMem(0x8b3f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x30ec);
        EXPECT(gbc.pc(), 0x8b41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b3f), 0xcb);
        EXPECT(gbc.readMem(0x8b40), 0x68);
        // CB 68 01DB
        gbc.setState(0x3fff, 0x1f9a, 0xd240, 0x343c, 0x74c5, 0x85b4, 0x1, 0x1);
        gbc.writeMem(0x3fff, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1f9a);
        EXPECT(gbc.pc(), 0x4001);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01DC
        gbc.setState(0x64ec, 0x6f40, 0x1e00, 0x552, 0x9d8b, 0xb5ed, 0x1, 0x0);
        gbc.writeMem(0x64ec, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6f40);
        EXPECT(gbc.pc(), 0x64ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01DD
        gbc.setState(0x359a, 0x19ed, 0xd5a0, 0x7993, 0xb204, 0x29e4, 0x1, 0x1);
        gbc.writeMem(0x359a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x19ed);
        EXPECT(gbc.pc(), 0x359c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01DE
        gbc.setState(0x4f42, 0x3367, 0x5410, 0x3891, 0x945f, 0x3d2b, 0x0, 0x1);
        gbc.writeMem(0x4f42, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x3367);
        EXPECT(gbc.pc(), 0x4f44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 01DF
        gbc.setState(0x471c, 0x74ea, 0x29b0, 0xc286, 0xbafb, 0xd1bd, 0x0, 0x0);
        gbc.writeMem(0x471c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x74ea);
        EXPECT(gbc.pc(), 0x471e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 01E0
        gbc.setState(0x2d36, 0xdc69, 0xfc60, 0x2b11, 0xff1e, 0x3bbc, 0x1, 0x0);
        gbc.writeMem(0x2d36, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xdc69);
        EXPECT(gbc.pc(), 0x2d38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01E1
        gbc.setState(0xbefb, 0xa318, 0x6c0, 0x9bc9, 0xe4c, 0xe6be, 0x0, 0x1);
        gbc.writeMem(0xbefb, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xa318);
        EXPECT(gbc.pc(), 0xbefd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbefb), 0xcb);
        EXPECT(gbc.readMem(0xbefc), 0x68);
        // CB 68 01E2
        gbc.setState(0xd461, 0x33ff, 0x2af0, 0x7fa4, 0xd410, 0x4729, 0x0, 0x0);
        gbc.writeMem(0xd461, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x33ff);
        EXPECT(gbc.pc(), 0xd463);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd461), 0xcb);
        EXPECT(gbc.readMem(0xd462), 0x68);
        // CB 68 01E3
        gbc.setState(0x9b54, 0xe69d, 0x8b40, 0x3549, 0xf781, 0x7180, 0x1, 0x0);
        gbc.writeMem(0x9b54, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe69d);
        EXPECT(gbc.pc(), 0x9b56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b54), 0xcb);
        EXPECT(gbc.readMem(0x9b55), 0x68);
        // CB 68 01E4
        gbc.setState(0x7726, 0x43c, 0xac90, 0x5984, 0x3333, 0x62d4, 0x0, 0x0);
        gbc.writeMem(0x7726, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x43c);
        EXPECT(gbc.pc(), 0x7728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 01E5
        gbc.setState(0x2c2, 0x271f, 0x7680, 0x8ce4, 0xe888, 0xdc6f, 0x0, 0x0);
        gbc.writeMem(0x2c2, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x271f);
        EXPECT(gbc.pc(), 0x2c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01E6
        gbc.setState(0xa660, 0xd256, 0xaf60, 0x1788, 0x6315, 0xf229, 0x1, 0x0);
        gbc.writeMem(0xa660, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd256);
        EXPECT(gbc.pc(), 0xa662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa660), 0xcb);
        EXPECT(gbc.readMem(0xa661), 0x68);
        // CB 68 01E7
        gbc.setState(0x7b96, 0x55f4, 0xd9f0, 0xd483, 0x4db0, 0xe652, 0x0, 0x0);
        gbc.writeMem(0x7b96, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x55f4);
        EXPECT(gbc.pc(), 0x7b98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 01E8
        gbc.setState(0x188c, 0x1b38, 0x5920, 0xef43, 0xbd94, 0x519, 0x0, 0x1);
        gbc.writeMem(0x188c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x1b38);
        EXPECT(gbc.pc(), 0x188e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01E9
        gbc.setState(0x473, 0x3508, 0x68c0, 0xe69, 0x49f1, 0xe18f, 0x0, 0x0);
        gbc.writeMem(0x473, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3508);
        EXPECT(gbc.pc(), 0x475);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01EA
        gbc.setState(0xa778, 0x5f45, 0xe1f0, 0x43f3, 0xd110, 0x6d1c, 0x1, 0x1);
        gbc.writeMem(0xa778, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5f45);
        EXPECT(gbc.pc(), 0xa77a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa778), 0xcb);
        EXPECT(gbc.readMem(0xa779), 0x68);
        // CB 68 01EB
        gbc.setState(0xb561, 0xb73b, 0x95e0, 0xda49, 0x31a4, 0x980f, 0x0, 0x0);
        gbc.writeMem(0xb561, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb73b);
        EXPECT(gbc.pc(), 0xb563);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb561), 0xcb);
        EXPECT(gbc.readMem(0xb562), 0x68);
        // CB 68 01EC
        gbc.setState(0x4678, 0xd538, 0x7d60, 0x15fa, 0x94fb, 0x5fdb, 0x1, 0x0);
        gbc.writeMem(0x4678, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd538);
        EXPECT(gbc.pc(), 0x467a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01ED
        gbc.setState(0xa848, 0xc217, 0x5da0, 0x69e0, 0x64af, 0x4a4a, 0x1, 0x1);
        gbc.writeMem(0xa848, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc217);
        EXPECT(gbc.pc(), 0xa84a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa848), 0xcb);
        EXPECT(gbc.readMem(0xa849), 0x68);
        // CB 68 01EE
        gbc.setState(0xe35e, 0x64bd, 0xa850, 0xeaa2, 0x7794, 0x943a, 0x0, 0x0);
        gbc.writeMem(0xe35e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x64bd);
        EXPECT(gbc.pc(), 0xe360);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe35e), 0xcb);
        EXPECT(gbc.readMem(0xe35f), 0x68);
        // CB 68 01EF
        gbc.setState(0x8e2a, 0xa412, 0xeb60, 0x6828, 0x6979, 0x5056, 0x1, 0x1);
        gbc.writeMem(0x8e2a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xa412);
        EXPECT(gbc.pc(), 0x8e2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e2a), 0xcb);
        EXPECT(gbc.readMem(0x8e2b), 0x68);
        // CB 68 01F0
        gbc.setState(0xe3f2, 0x1a4d, 0xe550, 0xc1f4, 0x7643, 0x822a, 0x0, 0x0);
        gbc.writeMem(0xe3f2, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1a4d);
        EXPECT(gbc.pc(), 0xe3f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3f2), 0xcb);
        EXPECT(gbc.readMem(0xe3f3), 0x68);
        // CB 68 01F2
        gbc.setState(0x209a, 0x75b0, 0xa150, 0x464b, 0x8893, 0xed18, 0x1, 0x1);
        gbc.writeMem(0x209a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x75b0);
        EXPECT(gbc.pc(), 0x209c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 01F3
        gbc.setState(0xac4a, 0xf5f5, 0x4250, 0xddad, 0x29af, 0xe271, 0x1, 0x0);
        gbc.writeMem(0xac4a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf5f5);
        EXPECT(gbc.pc(), 0xac4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac4a), 0xcb);
        EXPECT(gbc.readMem(0xac4b), 0x68);
        // CB 68 01F4
        gbc.setState(0xa631, 0xeb8d, 0xd270, 0xf942, 0x5358, 0x3db7, 0x1, 0x0);
        gbc.writeMem(0xa631, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xeb8d);
        EXPECT(gbc.pc(), 0xa633);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa631), 0xcb);
        EXPECT(gbc.readMem(0xa632), 0x68);
        // CB 68 01F5
        gbc.setState(0x5b96, 0xb4ac, 0xe610, 0x3c2, 0x433c, 0x75fd, 0x1, 0x0);
        gbc.writeMem(0x5b96, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb4ac);
        EXPECT(gbc.pc(), 0x5b98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 01F6
        gbc.setState(0xe776, 0x3c46, 0x4700, 0xa8e1, 0x1645, 0xf2e0, 0x1, 0x1);
        gbc.writeMem(0xe776, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3c46);
        EXPECT(gbc.pc(), 0xe778);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe776), 0xcb);
        EXPECT(gbc.readMem(0xe777), 0x68);
        // CB 68 01F7
        gbc.setState(0x6cb5, 0x5e3a, 0xca00, 0x354a, 0x4a13, 0x71a4, 0x0, 0x1);
        gbc.writeMem(0x6cb5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x5e3a);
        EXPECT(gbc.pc(), 0x6cb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01F8
        gbc.setState(0xa4c1, 0xaaa6, 0x7b80, 0x93b2, 0x28ee, 0x692f, 0x1, 0x0);
        gbc.writeMem(0xa4c1, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xaaa6);
        EXPECT(gbc.pc(), 0xa4c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4c1), 0xcb);
        EXPECT(gbc.readMem(0xa4c2), 0x68);
        // CB 68 01F9
        gbc.setState(0xb8bb, 0x4574, 0xa600, 0xfbeb, 0xbd52, 0xd74c, 0x1, 0x1);
        gbc.writeMem(0xb8bb, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4574);
        EXPECT(gbc.pc(), 0xb8bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8bb), 0xcb);
        EXPECT(gbc.readMem(0xb8bc), 0x68);
        // CB 68 01FB
        gbc.setState(0x7bc0, 0x25c0, 0x26e0, 0xc1d7, 0x5200, 0x1681, 0x0, 0x1);
        gbc.writeMem(0x7bc0, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x25c0);
        EXPECT(gbc.pc(), 0x7bc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 01FC
        gbc.setState(0x5eee, 0x4209, 0xd390, 0x608b, 0xf63d, 0x8cb4, 0x0, 0x0);
        gbc.writeMem(0x5eee, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4209);
        EXPECT(gbc.pc(), 0x5ef0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 01FD
        gbc.setState(0x75fe, 0xa2c0, 0x3250, 0xdb1e, 0x3002, 0x24d5, 0x0, 0x1);
        gbc.writeMem(0x75fe, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xa2c0);
        EXPECT(gbc.pc(), 0x7600);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 01FE
        gbc.setState(0x26f6, 0xb814, 0xf50, 0x4c1d, 0x462, 0x64ef, 0x0, 0x0);
        gbc.writeMem(0x26f6, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb814);
        EXPECT(gbc.pc(), 0x26f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 01FF
        gbc.setState(0x5df7, 0x499a, 0x9cf0, 0x52d7, 0xe252, 0x3ed8, 0x0, 0x1);
        gbc.writeMem(0x5df7, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x499a);
        EXPECT(gbc.pc(), 0x5df9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0200
        gbc.setState(0x857f, 0xa5f5, 0xa5c0, 0x9502, 0x1f4a, 0x9968, 0x1, 0x0);
        gbc.writeMem(0x857f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa5f5);
        EXPECT(gbc.pc(), 0x8581);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x857f), 0xcb);
        EXPECT(gbc.readMem(0x8580), 0x68);
        // CB 68 0201
        gbc.setState(0x1876, 0x2347, 0x8ec0, 0x43a1, 0xe59e, 0xb07, 0x0, 0x0);
        gbc.writeMem(0x1876, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2347);
        EXPECT(gbc.pc(), 0x1878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0202
        gbc.setState(0x9337, 0x59af, 0x2be0, 0x72fe, 0x5c12, 0x12e1, 0x1, 0x0);
        gbc.writeMem(0x9337, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x59af);
        EXPECT(gbc.pc(), 0x9339);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9337), 0xcb);
        EXPECT(gbc.readMem(0x9338), 0x68);
        // CB 68 0203
        gbc.setState(0x5401, 0x5d2c, 0xa9f0, 0xbaa6, 0x9f68, 0x24ea, 0x1, 0x0);
        gbc.writeMem(0x5401, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5d2c);
        EXPECT(gbc.pc(), 0x5403);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0204
        gbc.setState(0xe4bb, 0xb744, 0x91f0, 0x50fc, 0x3753, 0xb2c4, 0x1, 0x1);
        gbc.writeMem(0xe4bb, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb744);
        EXPECT(gbc.pc(), 0xe4bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4bb), 0xcb);
        EXPECT(gbc.readMem(0xe4bc), 0x68);
        // CB 68 0205
        gbc.setState(0xb89e, 0x9735, 0xfa70, 0x2aaf, 0xb917, 0xd67d, 0x0, 0x0);
        gbc.writeMem(0xb89e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9735);
        EXPECT(gbc.pc(), 0xb8a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb89e), 0xcb);
        EXPECT(gbc.readMem(0xb89f), 0x68);
        // CB 68 0206
        gbc.setState(0x9b44, 0x1eaf, 0x7c40, 0xde8e, 0xa0b0, 0x7752, 0x1, 0x1);
        gbc.writeMem(0x9b44, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1eaf);
        EXPECT(gbc.pc(), 0x9b46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b44), 0xcb);
        EXPECT(gbc.readMem(0x9b45), 0x68);
        // CB 68 0207
        gbc.setState(0x186d, 0x3085, 0x8670, 0xfcc9, 0x5840, 0x28bc, 0x1, 0x1);
        gbc.writeMem(0x186d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3085);
        EXPECT(gbc.pc(), 0x186f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0208
        gbc.setState(0xd564, 0xbc50, 0x9d0, 0x12e3, 0xc962, 0xaa7f, 0x1, 0x0);
        gbc.writeMem(0xd564, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xbc50);
        EXPECT(gbc.pc(), 0xd566);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd564), 0xcb);
        EXPECT(gbc.readMem(0xd565), 0x68);
        // CB 68 0209
        gbc.setState(0x2725, 0x6207, 0xf590, 0x533e, 0xce46, 0xb5d2, 0x1, 0x0);
        gbc.writeMem(0x2725, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6207);
        EXPECT(gbc.pc(), 0x2727);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 020A
        gbc.setState(0x6693, 0x6503, 0xc920, 0x267b, 0xd93c, 0xdf5a, 0x1, 0x1);
        gbc.writeMem(0x6693, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6503);
        EXPECT(gbc.pc(), 0x6695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 020B
        gbc.setState(0xc254, 0x984c, 0x94d0, 0xee0e, 0xe430, 0x4326, 0x1, 0x0);
        gbc.writeMem(0xc254, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x984c);
        EXPECT(gbc.pc(), 0xc256);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc254), 0xcb);
        EXPECT(gbc.readMem(0xc255), 0x68);
        // CB 68 020C
        gbc.setState(0x3283, 0x5e68, 0x8f0, 0x241a, 0xfae7, 0x4cde, 0x1, 0x1);
        gbc.writeMem(0x3283, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x5e68);
        EXPECT(gbc.pc(), 0x3285);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 020D
        gbc.setState(0x8793, 0x65e, 0xb980, 0xc72d, 0xe078, 0xa250, 0x0, 0x1);
        gbc.writeMem(0x8793, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x65e);
        EXPECT(gbc.pc(), 0x8795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8793), 0xcb);
        EXPECT(gbc.readMem(0x8794), 0x68);
        // CB 68 020E
        gbc.setState(0x9252, 0x5344, 0x6120, 0xd395, 0xd5d4, 0x51c5, 0x1, 0x1);
        gbc.writeMem(0x9252, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x5344);
        EXPECT(gbc.pc(), 0x9254);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9252), 0xcb);
        EXPECT(gbc.readMem(0x9253), 0x68);
        // CB 68 020F
        gbc.setState(0x4b73, 0x248a, 0x8220, 0x6ea0, 0x61a9, 0x9dc1, 0x0, 0x0);
        gbc.writeMem(0x4b73, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x248a);
        EXPECT(gbc.pc(), 0x4b75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0210
        gbc.setState(0x8319, 0x7d3, 0xc610, 0x2d8f, 0x8765, 0xf41a, 0x0, 0x1);
        gbc.writeMem(0x8319, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x7d3);
        EXPECT(gbc.pc(), 0x831b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8319), 0xcb);
        EXPECT(gbc.readMem(0x831a), 0x68);
        // CB 68 0211
        gbc.setState(0xcb0e, 0x56cc, 0x49f0, 0xb368, 0x774b, 0x441d, 0x1, 0x0);
        gbc.writeMem(0xcb0e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x56cc);
        EXPECT(gbc.pc(), 0xcb10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb0e), 0xcb);
        EXPECT(gbc.readMem(0xcb0f), 0x68);
        // CB 68 0212
        gbc.setState(0xed2a, 0x86c4, 0x91c0, 0x9ea3, 0xf942, 0x8631, 0x0, 0x1);
        gbc.writeMem(0xed2a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x86c4);
        EXPECT(gbc.pc(), 0xed2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed2a), 0xcb);
        EXPECT(gbc.readMem(0xed2b), 0x68);
        // CB 68 0213
        gbc.setState(0x68e8, 0x59c6, 0x3bb0, 0x71ae, 0x44ae, 0xab09, 0x0, 0x0);
        gbc.writeMem(0x68e8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x59c6);
        EXPECT(gbc.pc(), 0x68ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0214
        gbc.setState(0xad5, 0xa2cf, 0xf120, 0xea11, 0xff10, 0x775e, 0x0, 0x0);
        gbc.writeMem(0xad5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xa2cf);
        EXPECT(gbc.pc(), 0xad7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0215
        gbc.setState(0x3ada, 0x3ff2, 0x4070, 0x4860, 0x1db1, 0x5264, 0x0, 0x0);
        gbc.writeMem(0x3ada, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3ff2);
        EXPECT(gbc.pc(), 0x3adc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0216
        gbc.setState(0x5ec9, 0xc87d, 0x1f20, 0x3312, 0x73a5, 0x25b4, 0x1, 0x1);
        gbc.writeMem(0x5ec9, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc87d);
        EXPECT(gbc.pc(), 0x5ecb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0217
        gbc.setState(0x63b0, 0xf016, 0x440, 0xd4c0, 0xe3ec, 0x4e2, 0x0, 0x0);
        gbc.writeMem(0x63b0, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf016);
        EXPECT(gbc.pc(), 0x63b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0218
        gbc.setState(0x80fb, 0x80a8, 0x2580, 0x8480, 0x9783, 0x2296, 0x1, 0x1);
        gbc.writeMem(0x80fb, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x80a8);
        EXPECT(gbc.pc(), 0x80fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80fb), 0xcb);
        EXPECT(gbc.readMem(0x80fc), 0x68);
        // CB 68 0219
        gbc.setState(0xb6df, 0xa0d9, 0x5d70, 0x81dc, 0x42f0, 0xeb66, 0x1, 0x1);
        gbc.writeMem(0xb6df, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xa0d9);
        EXPECT(gbc.pc(), 0xb6e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6df), 0xcb);
        EXPECT(gbc.readMem(0xb6e0), 0x68);
        // CB 68 021A
        gbc.setState(0x8406, 0x7a85, 0x5f60, 0xa10d, 0x9e0d, 0x6a81, 0x1, 0x0);
        gbc.writeMem(0x8406, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7a85);
        EXPECT(gbc.pc(), 0x8408);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8406), 0xcb);
        EXPECT(gbc.readMem(0x8407), 0x68);
        // CB 68 021B
        gbc.setState(0x5db8, 0x9728, 0x3d50, 0x26fd, 0x4f01, 0x3f61, 0x1, 0x1);
        gbc.writeMem(0x5db8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9728);
        EXPECT(gbc.pc(), 0x5dba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 021C
        gbc.setState(0xc065, 0x8fb2, 0x3c60, 0x4ae1, 0xc165, 0xf317, 0x1, 0x0);
        gbc.writeMem(0xc065, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x8fb2);
        EXPECT(gbc.pc(), 0xc067);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc065), 0xcb);
        EXPECT(gbc.readMem(0xc066), 0x68);
        // CB 68 021D
        gbc.setState(0xb5cc, 0xfca2, 0xbba0, 0xcdf7, 0x3eff, 0x1bda, 0x1, 0x1);
        gbc.writeMem(0xb5cc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xfca2);
        EXPECT(gbc.pc(), 0xb5ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5cc), 0xcb);
        EXPECT(gbc.readMem(0xb5cd), 0x68);
        // CB 68 021E
        gbc.setState(0x14dc, 0xb051, 0x40d0, 0x1fed, 0x36d4, 0x7e80, 0x1, 0x1);
        gbc.writeMem(0x14dc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb051);
        EXPECT(gbc.pc(), 0x14de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 021F
        gbc.setState(0x8969, 0x8e55, 0x980, 0x1d85, 0xfea7, 0x1eb, 0x0, 0x0);
        gbc.writeMem(0x8969, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8e55);
        EXPECT(gbc.pc(), 0x896b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8969), 0xcb);
        EXPECT(gbc.readMem(0x896a), 0x68);
        // CB 68 0220
        gbc.setState(0x2a1a, 0x5230, 0x4e20, 0xd0d1, 0xfe83, 0xacd1, 0x1, 0x0);
        gbc.writeMem(0x2a1a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5230);
        EXPECT(gbc.pc(), 0x2a1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0221
        gbc.setState(0x5a64, 0x3942, 0x8580, 0x62bf, 0x74b8, 0x8529, 0x0, 0x0);
        gbc.writeMem(0x5a64, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3942);
        EXPECT(gbc.pc(), 0x5a66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0222
        gbc.setState(0xe583, 0x91d7, 0x66f0, 0xdd2c, 0x64cf, 0xac32, 0x0, 0x1);
        gbc.writeMem(0xe583, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x91d7);
        EXPECT(gbc.pc(), 0xe585);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe583), 0xcb);
        EXPECT(gbc.readMem(0xe584), 0x68);
        // CB 68 0223
        gbc.setState(0x65a5, 0x1bdd, 0x43e0, 0xe96d, 0x613a, 0x64d2, 0x1, 0x0);
        gbc.writeMem(0x65a5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x1bdd);
        EXPECT(gbc.pc(), 0x65a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0224
        gbc.setState(0x8ba0, 0xcf29, 0x8220, 0x4c8c, 0xb9ee, 0xbe2b, 0x0, 0x1);
        gbc.writeMem(0x8ba0, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xcf29);
        EXPECT(gbc.pc(), 0x8ba2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ba0), 0xcb);
        EXPECT(gbc.readMem(0x8ba1), 0x68);
        // CB 68 0225
        gbc.setState(0xd227, 0x7dc7, 0x4e30, 0xe0de, 0x2c65, 0x4df, 0x0, 0x0);
        gbc.writeMem(0xd227, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7dc7);
        EXPECT(gbc.pc(), 0xd229);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd227), 0xcb);
        EXPECT(gbc.readMem(0xd228), 0x68);
        // CB 68 0226
        gbc.setState(0x4c2f, 0x1bf4, 0x74f0, 0x63ad, 0x1f00, 0x2c74, 0x1, 0x0);
        gbc.writeMem(0x4c2f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1bf4);
        EXPECT(gbc.pc(), 0x4c31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0228
        gbc.setState(0x4f3, 0x5243, 0x88a0, 0x99de, 0xa0c9, 0x673d, 0x0, 0x1);
        gbc.writeMem(0x4f3, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5243);
        EXPECT(gbc.pc(), 0x4f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0229
        gbc.setState(0xa16, 0x551b, 0x3bc0, 0xdce2, 0xb6aa, 0x17fd, 0x1, 0x0);
        gbc.writeMem(0xa16, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x551b);
        EXPECT(gbc.pc(), 0xa18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 022A
        gbc.setState(0xb1bc, 0xe30, 0xbc50, 0x190c, 0x91de, 0x7e68, 0x1, 0x1);
        gbc.writeMem(0xb1bc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe30);
        EXPECT(gbc.pc(), 0xb1be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1bc), 0xcb);
        EXPECT(gbc.readMem(0xb1bd), 0x68);
        // CB 68 022B
        gbc.setState(0xd61a, 0x6776, 0xc640, 0xe314, 0xa15f, 0xba22, 0x1, 0x1);
        gbc.writeMem(0xd61a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6776);
        EXPECT(gbc.pc(), 0xd61c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd61a), 0xcb);
        EXPECT(gbc.readMem(0xd61b), 0x68);
        // CB 68 022D
        gbc.setState(0xda82, 0xa49d, 0xa840, 0x2d2, 0x9526, 0xa2e1, 0x0, 0x0);
        gbc.writeMem(0xda82, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa49d);
        EXPECT(gbc.pc(), 0xda84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda82), 0xcb);
        EXPECT(gbc.readMem(0xda83), 0x68);
        // CB 68 022E
        gbc.setState(0xd0e8, 0x1dc8, 0x8d40, 0x4470, 0xede1, 0xe083, 0x0, 0x1);
        gbc.writeMem(0xd0e8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x1dc8);
        EXPECT(gbc.pc(), 0xd0ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0e8), 0xcb);
        EXPECT(gbc.readMem(0xd0e9), 0x68);
        // CB 68 022F
        gbc.setState(0x8c46, 0x6c7c, 0x8280, 0x652, 0xb10f, 0x3cdf, 0x1, 0x0);
        gbc.writeMem(0x8c46, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x6c7c);
        EXPECT(gbc.pc(), 0x8c48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c46), 0xcb);
        EXPECT(gbc.readMem(0x8c47), 0x68);
        // CB 68 0230
        gbc.setState(0x16f8, 0x7931, 0xcdf0, 0xfaa0, 0x5587, 0xd492, 0x0, 0x1);
        gbc.writeMem(0x16f8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x7931);
        EXPECT(gbc.pc(), 0x16fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0231
        gbc.setState(0x4d9c, 0xaa06, 0xbb90, 0x9dcf, 0x1def, 0x7aaf, 0x1, 0x1);
        gbc.writeMem(0x4d9c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xaa06);
        EXPECT(gbc.pc(), 0x4d9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0232
        gbc.setState(0xc717, 0xd01f, 0xe4e0, 0xd277, 0x16b8, 0x507, 0x1, 0x1);
        gbc.writeMem(0xc717, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd01f);
        EXPECT(gbc.pc(), 0xc719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc717), 0xcb);
        EXPECT(gbc.readMem(0xc718), 0x68);
        // CB 68 0233
        gbc.setState(0xa511, 0x1481, 0x8e80, 0x7d0, 0xd150, 0xa1ed, 0x1, 0x1);
        gbc.writeMem(0xa511, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1481);
        EXPECT(gbc.pc(), 0xa513);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa511), 0xcb);
        EXPECT(gbc.readMem(0xa512), 0x68);
        // CB 68 0234
        gbc.setState(0x6ed8, 0xaa57, 0x7010, 0xf264, 0x2a63, 0x8c0f, 0x0, 0x1);
        gbc.writeMem(0x6ed8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xaa57);
        EXPECT(gbc.pc(), 0x6eda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0235
        gbc.setState(0xc177, 0x9de3, 0x73b0, 0x3cf2, 0xb830, 0xd1f6, 0x0, 0x0);
        gbc.writeMem(0xc177, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x9de3);
        EXPECT(gbc.pc(), 0xc179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc177), 0xcb);
        EXPECT(gbc.readMem(0xc178), 0x68);
        // CB 68 0238
        gbc.setState(0xea6d, 0x8f0a, 0x6750, 0x23d0, 0xdf21, 0x785c, 0x0, 0x1);
        gbc.writeMem(0xea6d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x8f0a);
        EXPECT(gbc.pc(), 0xea6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea6d), 0xcb);
        EXPECT(gbc.readMem(0xea6e), 0x68);
        // CB 68 0239
        gbc.setState(0x773, 0xd8ed, 0xc780, 0x80a5, 0xf9c8, 0x60a9, 0x1, 0x1);
        gbc.writeMem(0x773, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd8ed);
        EXPECT(gbc.pc(), 0x775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 023A
        gbc.setState(0x4682, 0x63aa, 0xaea0, 0x7eae, 0x4f43, 0xe8e1, 0x1, 0x0);
        gbc.writeMem(0x4682, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x63aa);
        EXPECT(gbc.pc(), 0x4684);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 023B
        gbc.setState(0x10f0, 0x9a01, 0xaf50, 0xe25, 0xef66, 0xfc01, 0x1, 0x1);
        gbc.writeMem(0x10f0, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9a01);
        EXPECT(gbc.pc(), 0x10f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 023C
        gbc.setState(0xc823, 0xf99b, 0xa420, 0x4e93, 0xc04e, 0xa5ac, 0x1, 0x1);
        gbc.writeMem(0xc823, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf99b);
        EXPECT(gbc.pc(), 0xc825);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc823), 0xcb);
        EXPECT(gbc.readMem(0xc824), 0x68);
        // CB 68 023D
        gbc.setState(0xed5f, 0x440d, 0x5ae0, 0xb099, 0x630a, 0x7b70, 0x0, 0x0);
        gbc.writeMem(0xed5f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x440d);
        EXPECT(gbc.pc(), 0xed61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed5f), 0xcb);
        EXPECT(gbc.readMem(0xed60), 0x68);
        // CB 68 023E
        gbc.setState(0x8b4c, 0x79b2, 0x2d00, 0xafd, 0xd545, 0xf8bc, 0x0, 0x0);
        gbc.writeMem(0x8b4c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x79b2);
        EXPECT(gbc.pc(), 0x8b4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b4c), 0xcb);
        EXPECT(gbc.readMem(0x8b4d), 0x68);
        // CB 68 0241
        gbc.setState(0x909f, 0x4712, 0x1130, 0xb074, 0x9d25, 0x2abe, 0x0, 0x0);
        gbc.writeMem(0x909f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4712);
        EXPECT(gbc.pc(), 0x90a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x909f), 0xcb);
        EXPECT(gbc.readMem(0x90a0), 0x68);
        // CB 68 0242
        gbc.setState(0x508, 0xb780, 0x1ef0, 0x31cf, 0xc5f1, 0xfd2a, 0x0, 0x1);
        gbc.writeMem(0x508, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb780);
        EXPECT(gbc.pc(), 0x50a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0243
        gbc.setState(0x3665, 0x4d12, 0xc240, 0x4c6d, 0x1cbf, 0xe6ff, 0x1, 0x0);
        gbc.writeMem(0x3665, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4d12);
        EXPECT(gbc.pc(), 0x3667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0244
        gbc.setState(0xea0f, 0x487c, 0xa810, 0x38ca, 0xe3ca, 0xab84, 0x0, 0x1);
        gbc.writeMem(0xea0f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x487c);
        EXPECT(gbc.pc(), 0xea11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea0f), 0xcb);
        EXPECT(gbc.readMem(0xea10), 0x68);
        // CB 68 0245
        gbc.setState(0x848, 0xb540, 0x9d90, 0xf402, 0x1273, 0x51b3, 0x0, 0x1);
        gbc.writeMem(0x848, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb540);
        EXPECT(gbc.pc(), 0x84a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0246
        gbc.setState(0xc26b, 0x47e8, 0x2210, 0x8496, 0x5e27, 0xe88a, 0x0, 0x1);
        gbc.writeMem(0xc26b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x47e8);
        EXPECT(gbc.pc(), 0xc26d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc26b), 0xcb);
        EXPECT(gbc.readMem(0xc26c), 0x68);
        // CB 68 0247
        gbc.setState(0x7e13, 0xd844, 0x5ba0, 0x51df, 0x60f6, 0xfb90, 0x1, 0x1);
        gbc.writeMem(0x7e13, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xd844);
        EXPECT(gbc.pc(), 0x7e15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0248
        gbc.setState(0x1121, 0x397b, 0xac90, 0x8a42, 0x6e8a, 0x285c, 0x1, 0x1);
        gbc.writeMem(0x1121, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x397b);
        EXPECT(gbc.pc(), 0x1123);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0249
        gbc.setState(0xbdb, 0x49dd, 0xcdf0, 0x4f49, 0xc991, 0x26c3, 0x0, 0x1);
        gbc.writeMem(0xbdb, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x49dd);
        EXPECT(gbc.pc(), 0xbdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 024A
        gbc.setState(0xdfdf, 0x3f70, 0x24d0, 0x2597, 0xa8e4, 0x7d18, 0x0, 0x0);
        gbc.writeMem(0xdfdf, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3f70);
        EXPECT(gbc.pc(), 0xdfe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfdf), 0xcb);
        EXPECT(gbc.readMem(0xdfe0), 0x68);
        // CB 68 024B
        gbc.setState(0x91d, 0xc7b1, 0x8f20, 0x6b80, 0x1160, 0x9dad, 0x0, 0x0);
        gbc.writeMem(0x91d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc7b1);
        EXPECT(gbc.pc(), 0x91f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 024C
        gbc.setState(0xe9f5, 0xdb2f, 0x5be0, 0xbc47, 0xb2a, 0xae44, 0x0, 0x0);
        gbc.writeMem(0xe9f5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xdb2f);
        EXPECT(gbc.pc(), 0xe9f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9f5), 0xcb);
        EXPECT(gbc.readMem(0xe9f6), 0x68);
        // CB 68 024D
        gbc.setState(0xb2cb, 0x553d, 0x8f90, 0xb404, 0x9892, 0xbb4c, 0x0, 0x1);
        gbc.writeMem(0xb2cb, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x553d);
        EXPECT(gbc.pc(), 0xb2cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2cb), 0xcb);
        EXPECT(gbc.readMem(0xb2cc), 0x68);
        // CB 68 024E
        gbc.setState(0xc843, 0xbcea, 0x4b00, 0x9dac, 0x4065, 0xf86e, 0x1, 0x1);
        gbc.writeMem(0xc843, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xbcea);
        EXPECT(gbc.pc(), 0xc845);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc843), 0xcb);
        EXPECT(gbc.readMem(0xc844), 0x68);
        // CB 68 024F
        gbc.setState(0x59ff, 0xb486, 0x7a40, 0xc461, 0x7f0a, 0x780e, 0x0, 0x1);
        gbc.writeMem(0x59ff, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb486);
        EXPECT(gbc.pc(), 0x5a01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0250
        gbc.setState(0xdc42, 0x77fa, 0x6330, 0xd74, 0xd791, 0x47ea, 0x1, 0x0);
        gbc.writeMem(0xdc42, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x77fa);
        EXPECT(gbc.pc(), 0xdc44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc42), 0xcb);
        EXPECT(gbc.readMem(0xdc43), 0x68);
        // CB 68 0251
        gbc.setState(0x19cc, 0xf2d1, 0x6530, 0xaaac, 0x2783, 0x8797, 0x0, 0x1);
        gbc.writeMem(0x19cc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf2d1);
        EXPECT(gbc.pc(), 0x19ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0252
        gbc.setState(0xeba5, 0x561b, 0x5930, 0x377, 0xdec1, 0x5941, 0x1, 0x1);
        gbc.writeMem(0xeba5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x561b);
        EXPECT(gbc.pc(), 0xeba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeba5), 0xcb);
        EXPECT(gbc.readMem(0xeba6), 0x68);
        // CB 68 0253
        gbc.setState(0x39ab, 0xe323, 0xc280, 0xb663, 0xd453, 0x6e12, 0x1, 0x1);
        gbc.writeMem(0x39ab, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe323);
        EXPECT(gbc.pc(), 0x39ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0254
        gbc.setState(0x21ef, 0xec58, 0x9e0, 0x4fd9, 0x6e51, 0x2d00, 0x1, 0x1);
        gbc.writeMem(0x21ef, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xec58);
        EXPECT(gbc.pc(), 0x21f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0255
        gbc.setState(0x424b, 0x4cfa, 0x8060, 0x3e08, 0xba3b, 0xc72d, 0x0, 0x1);
        gbc.writeMem(0x424b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4cfa);
        EXPECT(gbc.pc(), 0x424d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0256
        gbc.setState(0x844c, 0xcd70, 0x7060, 0x53b8, 0xe14b, 0x2962, 0x1, 0x0);
        gbc.writeMem(0x844c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xcd70);
        EXPECT(gbc.pc(), 0x844e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x844c), 0xcb);
        EXPECT(gbc.readMem(0x844d), 0x68);
        // CB 68 0258
        gbc.setState(0x2b42, 0x1811, 0xd1a0, 0x6a41, 0x999e, 0x3aa5, 0x0, 0x0);
        gbc.writeMem(0x2b42, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1811);
        EXPECT(gbc.pc(), 0x2b44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0259
        gbc.setState(0xd9f, 0x1bd3, 0xe9b0, 0x898e, 0xd53f, 0xabe0, 0x1, 0x0);
        gbc.writeMem(0xd9f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1bd3);
        EXPECT(gbc.pc(), 0xda1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 025A
        gbc.setState(0xc6e8, 0x65c1, 0x8870, 0x8112, 0xec1d, 0xdc89, 0x0, 0x0);
        gbc.writeMem(0xc6e8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x65c1);
        EXPECT(gbc.pc(), 0xc6ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6e8), 0xcb);
        EXPECT(gbc.readMem(0xc6e9), 0x68);
        // CB 68 025B
        gbc.setState(0xd225, 0x6d39, 0xa230, 0x7d12, 0xdce1, 0x7d47, 0x0, 0x0);
        gbc.writeMem(0xd225, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x6d39);
        EXPECT(gbc.pc(), 0xd227);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd225), 0xcb);
        EXPECT(gbc.readMem(0xd226), 0x68);
        // CB 68 025C
        gbc.setState(0x52e7, 0xf9f5, 0xd0e0, 0xa060, 0xe7b7, 0xe229, 0x1, 0x1);
        gbc.writeMem(0x52e7, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf9f5);
        EXPECT(gbc.pc(), 0x52e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 025D
        gbc.setState(0x6c56, 0xdb84, 0x7b00, 0xc7dd, 0xaff1, 0x8184, 0x1, 0x1);
        gbc.writeMem(0x6c56, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xdb84);
        EXPECT(gbc.pc(), 0x6c58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 025E
        gbc.setState(0x3ba1, 0xfcb4, 0x4db0, 0x4789, 0x8769, 0x14d, 0x1, 0x0);
        gbc.writeMem(0x3ba1, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xfcb4);
        EXPECT(gbc.pc(), 0x3ba3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 025F
        gbc.setState(0xa752, 0x7898, 0x11f0, 0xdbf1, 0x6d8b, 0xab75, 0x0, 0x1);
        gbc.writeMem(0xa752, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x7898);
        EXPECT(gbc.pc(), 0xa754);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa752), 0xcb);
        EXPECT(gbc.readMem(0xa753), 0x68);
        // CB 68 0260
        gbc.setState(0xab62, 0x5e5f, 0x4d50, 0x435c, 0xf825, 0x6301, 0x1, 0x0);
        gbc.writeMem(0xab62, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5e5f);
        EXPECT(gbc.pc(), 0xab64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab62), 0xcb);
        EXPECT(gbc.readMem(0xab63), 0x68);
        // CB 68 0261
        gbc.setState(0xbb7f, 0x5c18, 0xaf20, 0x1751, 0x606f, 0xdfd8, 0x1, 0x0);
        gbc.writeMem(0xbb7f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5c18);
        EXPECT(gbc.pc(), 0xbb81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb7f), 0xcb);
        EXPECT(gbc.readMem(0xbb80), 0x68);
        // CB 68 0262
        gbc.setState(0xca34, 0xed5f, 0x19a0, 0x89a1, 0xa49a, 0x6904, 0x1, 0x0);
        gbc.writeMem(0xca34, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xed5f);
        EXPECT(gbc.pc(), 0xca36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca34), 0xcb);
        EXPECT(gbc.readMem(0xca35), 0x68);
        // CB 68 0263
        gbc.setState(0xb665, 0xbf31, 0x500, 0x8dc, 0x7cef, 0xac0, 0x1, 0x1);
        gbc.writeMem(0xb665, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xbf31);
        EXPECT(gbc.pc(), 0xb667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb665), 0xcb);
        EXPECT(gbc.readMem(0xb666), 0x68);
        // CB 68 0264
        gbc.setState(0xebf8, 0xa3d2, 0xf050, 0x7eed, 0x273d, 0x8295, 0x0, 0x0);
        gbc.writeMem(0xebf8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa3d2);
        EXPECT(gbc.pc(), 0xebfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebf8), 0xcb);
        EXPECT(gbc.readMem(0xebf9), 0x68);
        // CB 68 0265
        gbc.setState(0xe5dd, 0x1fba, 0xaed0, 0x81e1, 0x3436, 0x38fc, 0x1, 0x1);
        gbc.writeMem(0xe5dd, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x1fba);
        EXPECT(gbc.pc(), 0xe5df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5dd), 0xcb);
        EXPECT(gbc.readMem(0xe5de), 0x68);
        // CB 68 0266
        gbc.setState(0xd168, 0x3c96, 0x2830, 0x3002, 0xe975, 0x50b4, 0x0, 0x0);
        gbc.writeMem(0xd168, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x3c96);
        EXPECT(gbc.pc(), 0xd16a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd168), 0xcb);
        EXPECT(gbc.readMem(0xd169), 0x68);
        // CB 68 0267
        gbc.setState(0xa14c, 0xb482, 0x7690, 0x4a14, 0x2bcf, 0x5e9b, 0x0, 0x0);
        gbc.writeMem(0xa14c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xb482);
        EXPECT(gbc.pc(), 0xa14e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa14c), 0xcb);
        EXPECT(gbc.readMem(0xa14d), 0x68);
        // CB 68 0268
        gbc.setState(0xa638, 0x4106, 0xead0, 0x3240, 0x930d, 0x746a, 0x1, 0x1);
        gbc.writeMem(0xa638, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4106);
        EXPECT(gbc.pc(), 0xa63a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa638), 0xcb);
        EXPECT(gbc.readMem(0xa639), 0x68);
        // CB 68 0269
        gbc.setState(0x3a3f, 0xc267, 0x57c0, 0xb043, 0x6725, 0xd1e1, 0x0, 0x0);
        gbc.writeMem(0x3a3f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc267);
        EXPECT(gbc.pc(), 0x3a41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 026A
        gbc.setState(0xd77, 0x7f9a, 0x63a0, 0x7bf8, 0x4566, 0xf49e, 0x0, 0x1);
        gbc.writeMem(0xd77, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7f9a);
        EXPECT(gbc.pc(), 0xd79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 026B
        gbc.setState(0x53af, 0xc0a9, 0xe460, 0xfee7, 0x2e37, 0x95b8, 0x0, 0x1);
        gbc.writeMem(0x53af, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc0a9);
        EXPECT(gbc.pc(), 0x53b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 026C
        gbc.setState(0xd519, 0x1d6b, 0xb2b0, 0x5184, 0x833a, 0x6237, 0x1, 0x0);
        gbc.writeMem(0xd519, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1d6b);
        EXPECT(gbc.pc(), 0xd51b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd519), 0xcb);
        EXPECT(gbc.readMem(0xd51a), 0x68);
        // CB 68 026D
        gbc.setState(0x213c, 0xc8ac, 0xf3c0, 0xaae7, 0x3c53, 0x6df9, 0x1, 0x1);
        gbc.writeMem(0x213c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc8ac);
        EXPECT(gbc.pc(), 0x213e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 026E
        gbc.setState(0x218c, 0x3d2d, 0x53e0, 0x181b, 0x9e5e, 0x61e3, 0x1, 0x0);
        gbc.writeMem(0x218c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x3d2d);
        EXPECT(gbc.pc(), 0x218e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 026F
        gbc.setState(0x210c, 0x5a43, 0x9a70, 0xb663, 0xcbd6, 0xc0ef, 0x1, 0x0);
        gbc.writeMem(0x210c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x5a43);
        EXPECT(gbc.pc(), 0x210e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0270
        gbc.setState(0x7ac1, 0x7b90, 0xff60, 0xecc9, 0xd279, 0x95a3, 0x0, 0x0);
        gbc.writeMem(0x7ac1, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x7b90);
        EXPECT(gbc.pc(), 0x7ac3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0271
        gbc.setState(0x4b86, 0xbd80, 0x5150, 0xe252, 0x885a, 0xd526, 0x1, 0x1);
        gbc.writeMem(0x4b86, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xbd80);
        EXPECT(gbc.pc(), 0x4b88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0272
        gbc.setState(0xc709, 0x3f39, 0x80a0, 0x7e76, 0x40f1, 0x2161, 0x0, 0x1);
        gbc.writeMem(0xc709, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3f39);
        EXPECT(gbc.pc(), 0xc70b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc709), 0xcb);
        EXPECT(gbc.readMem(0xc70a), 0x68);
        // CB 68 0273
        gbc.setState(0x19cc, 0xea93, 0xed60, 0xe8a9, 0x4fb6, 0xb691, 0x1, 0x1);
        gbc.writeMem(0x19cc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xea93);
        EXPECT(gbc.pc(), 0x19ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0274
        gbc.setState(0x1175, 0x678b, 0xef30, 0xfb1c, 0x7a81, 0xb284, 0x1, 0x0);
        gbc.writeMem(0x1175, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x678b);
        EXPECT(gbc.pc(), 0x1177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0275
        gbc.setState(0x93e6, 0x209a, 0x5420, 0x266b, 0xf71e, 0x2402, 0x0, 0x1);
        gbc.writeMem(0x93e6, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x209a);
        EXPECT(gbc.pc(), 0x93e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93e6), 0xcb);
        EXPECT(gbc.readMem(0x93e7), 0x68);
        // CB 68 0276
        gbc.setState(0xc88f, 0xf1ce, 0x8e40, 0x57ef, 0x637e, 0x2a14, 0x0, 0x0);
        gbc.writeMem(0xc88f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf1ce);
        EXPECT(gbc.pc(), 0xc891);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc88f), 0xcb);
        EXPECT(gbc.readMem(0xc890), 0x68);
        // CB 68 0277
        gbc.setState(0x8984, 0x7266, 0xa690, 0x5d8c, 0xf19e, 0x83e6, 0x0, 0x1);
        gbc.writeMem(0x8984, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7266);
        EXPECT(gbc.pc(), 0x8986);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8984), 0xcb);
        EXPECT(gbc.readMem(0x8985), 0x68);
        // CB 68 0278
        gbc.setState(0xd675, 0x4693, 0xcde0, 0x821b, 0xb3f2, 0x9254, 0x1, 0x0);
        gbc.writeMem(0xd675, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4693);
        EXPECT(gbc.pc(), 0xd677);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd675), 0xcb);
        EXPECT(gbc.readMem(0xd676), 0x68);
        // CB 68 0279
        gbc.setState(0x83e9, 0xc56f, 0xa4e0, 0xdcaa, 0x4a3b, 0xae85, 0x1, 0x0);
        gbc.writeMem(0x83e9, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc56f);
        EXPECT(gbc.pc(), 0x83eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e9), 0xcb);
        EXPECT(gbc.readMem(0x83ea), 0x68);
        // CB 68 027A
        gbc.setState(0xa56c, 0x1258, 0x3640, 0x654e, 0x51e2, 0xe5d, 0x1, 0x1);
        gbc.writeMem(0xa56c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x1258);
        EXPECT(gbc.pc(), 0xa56e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa56c), 0xcb);
        EXPECT(gbc.readMem(0xa56d), 0x68);
        // CB 68 027B
        gbc.setState(0x54c8, 0xd6de, 0x2190, 0xc455, 0x7eb6, 0x7bb, 0x1, 0x0);
        gbc.writeMem(0x54c8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd6de);
        EXPECT(gbc.pc(), 0x54ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 027C
        gbc.setState(0x28e0, 0xa9d, 0x1c30, 0x8126, 0x70b2, 0xf7f, 0x0, 0x1);
        gbc.writeMem(0x28e0, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa9d);
        EXPECT(gbc.pc(), 0x28e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 027D
        gbc.setState(0x384a, 0x46f8, 0x6540, 0xb034, 0x626c, 0xeb0f, 0x1, 0x0);
        gbc.writeMem(0x384a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x46f8);
        EXPECT(gbc.pc(), 0x384c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 027E
        gbc.setState(0xd50e, 0xa0bd, 0xb0f0, 0xc6f5, 0x7264, 0xda12, 0x1, 0x0);
        gbc.writeMem(0xd50e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xa0bd);
        EXPECT(gbc.pc(), 0xd510);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd50e), 0xcb);
        EXPECT(gbc.readMem(0xd50f), 0x68);
        // CB 68 027F
        gbc.setState(0xbe7d, 0xdef4, 0x38f0, 0x71dd, 0x2d8, 0xcd3, 0x1, 0x1);
        gbc.writeMem(0xbe7d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xdef4);
        EXPECT(gbc.pc(), 0xbe7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe7d), 0xcb);
        EXPECT(gbc.readMem(0xbe7e), 0x68);
        // CB 68 0280
        gbc.setState(0xce79, 0xabe5, 0x3270, 0x129a, 0x9ac1, 0x56f1, 0x1, 0x0);
        gbc.writeMem(0xce79, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xabe5);
        EXPECT(gbc.pc(), 0xce7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce79), 0xcb);
        EXPECT(gbc.readMem(0xce7a), 0x68);
        // CB 68 0281
        gbc.setState(0x3c44, 0x303c, 0x7f80, 0xbc3b, 0x2e10, 0x3a12, 0x1, 0x1);
        gbc.writeMem(0x3c44, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x303c);
        EXPECT(gbc.pc(), 0x3c46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0282
        gbc.setState(0xb8e0, 0x87d1, 0x93a0, 0x53e8, 0x37c8, 0x8606, 0x1, 0x0);
        gbc.writeMem(0xb8e0, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x87d1);
        EXPECT(gbc.pc(), 0xb8e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8e0), 0xcb);
        EXPECT(gbc.readMem(0xb8e1), 0x68);
        // CB 68 0283
        gbc.setState(0x23b8, 0x86e7, 0x5c10, 0x58b1, 0xe067, 0x9368, 0x0, 0x1);
        gbc.writeMem(0x23b8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x86e7);
        EXPECT(gbc.pc(), 0x23ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0284
        gbc.setState(0xe392, 0x9d4d, 0x900, 0x4362, 0x2fe0, 0xf632, 0x0, 0x0);
        gbc.writeMem(0xe392, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9d4d);
        EXPECT(gbc.pc(), 0xe394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe392), 0xcb);
        EXPECT(gbc.readMem(0xe393), 0x68);
        // CB 68 0285
        gbc.setState(0x52ca, 0x8dfc, 0x88e0, 0xee2d, 0x83d9, 0xc354, 0x0, 0x0);
        gbc.writeMem(0x52ca, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8dfc);
        EXPECT(gbc.pc(), 0x52cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0286
        gbc.setState(0x5612, 0x2514, 0xd40, 0x287, 0x4c62, 0xd59e, 0x0, 0x1);
        gbc.writeMem(0x5612, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2514);
        EXPECT(gbc.pc(), 0x5614);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0287
        gbc.setState(0x5e3a, 0x541d, 0x4f60, 0xb33e, 0xbd44, 0xce79, 0x1, 0x1);
        gbc.writeMem(0x5e3a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x541d);
        EXPECT(gbc.pc(), 0x5e3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0288
        gbc.setState(0x4268, 0xaff2, 0xf7f0, 0xa24f, 0xc627, 0xc7e2, 0x0, 0x1);
        gbc.writeMem(0x4268, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xaff2);
        EXPECT(gbc.pc(), 0x426a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0289
        gbc.setState(0xc36d, 0xc24, 0x1100, 0x3fae, 0x8066, 0x3919, 0x1, 0x1);
        gbc.writeMem(0xc36d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc24);
        EXPECT(gbc.pc(), 0xc36f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc36d), 0xcb);
        EXPECT(gbc.readMem(0xc36e), 0x68);
        // CB 68 028A
        gbc.setState(0x15db, 0x68cd, 0xbe40, 0x98bb, 0x68c5, 0x9eaa, 0x0, 0x0);
        gbc.writeMem(0x15db, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x68cd);
        EXPECT(gbc.pc(), 0x15dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 028B
        gbc.setState(0xb736, 0x568f, 0xf7c0, 0x6481, 0x4666, 0x2448, 0x1, 0x1);
        gbc.writeMem(0xb736, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x568f);
        EXPECT(gbc.pc(), 0xb738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb736), 0xcb);
        EXPECT(gbc.readMem(0xb737), 0x68);
        // CB 68 028C
        gbc.setState(0xa588, 0xf16d, 0xa700, 0x2d96, 0xc06b, 0x1b0a, 0x0, 0x0);
        gbc.writeMem(0xa588, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf16d);
        EXPECT(gbc.pc(), 0xa58a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa588), 0xcb);
        EXPECT(gbc.readMem(0xa589), 0x68);
        // CB 68 028D
        gbc.setState(0x1cf6, 0x2417, 0x67e0, 0x91fc, 0x13a3, 0x59f7, 0x1, 0x0);
        gbc.writeMem(0x1cf6, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x2417);
        EXPECT(gbc.pc(), 0x1cf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 028E
        gbc.setState(0x7ea4, 0x6412, 0x9710, 0x4fc5, 0x5027, 0x7f93, 0x0, 0x0);
        gbc.writeMem(0x7ea4, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x6412);
        EXPECT(gbc.pc(), 0x7ea6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 028F
        gbc.setState(0x480b, 0xddf5, 0x8870, 0x6b2a, 0xc968, 0x4ecc, 0x0, 0x0);
        gbc.writeMem(0x480b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xddf5);
        EXPECT(gbc.pc(), 0x480d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0290
        gbc.setState(0xe826, 0xe02a, 0x27e0, 0x3b43, 0x6cd1, 0x72fb, 0x1, 0x1);
        gbc.writeMem(0xe826, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe02a);
        EXPECT(gbc.pc(), 0xe828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe826), 0xcb);
        EXPECT(gbc.readMem(0xe827), 0x68);
        // CB 68 0291
        gbc.setState(0x98f5, 0x7378, 0x21f0, 0xe3ab, 0x5649, 0xcef8, 0x1, 0x1);
        gbc.writeMem(0x98f5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7378);
        EXPECT(gbc.pc(), 0x98f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98f5), 0xcb);
        EXPECT(gbc.readMem(0x98f6), 0x68);
        // CB 68 0292
        gbc.setState(0x218a, 0x3009, 0x64b0, 0x8ff0, 0xd796, 0x59a9, 0x0, 0x0);
        gbc.writeMem(0x218a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3009);
        EXPECT(gbc.pc(), 0x218c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0293
        gbc.setState(0x5cd6, 0x90ec, 0x9140, 0x1ce7, 0x5412, 0xf0b2, 0x1, 0x0);
        gbc.writeMem(0x5cd6, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x90ec);
        EXPECT(gbc.pc(), 0x5cd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0294
        gbc.setState(0xcc85, 0xcadb, 0xdab0, 0x7bb4, 0x2d71, 0x1593, 0x1, 0x0);
        gbc.writeMem(0xcc85, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xcadb);
        EXPECT(gbc.pc(), 0xcc87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc85), 0xcb);
        EXPECT(gbc.readMem(0xcc86), 0x68);
        // CB 68 0295
        gbc.setState(0x1271, 0x7727, 0xf2b0, 0x28d1, 0x8118, 0xae5e, 0x1, 0x0);
        gbc.writeMem(0x1271, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x7727);
        EXPECT(gbc.pc(), 0x1273);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0296
        gbc.setState(0xd116, 0x2487, 0x8690, 0xa177, 0x521, 0x7b01, 0x1, 0x0);
        gbc.writeMem(0xd116, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2487);
        EXPECT(gbc.pc(), 0xd118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd116), 0xcb);
        EXPECT(gbc.readMem(0xd117), 0x68);
        // CB 68 0297
        gbc.setState(0x5984, 0xb186, 0x36b0, 0x6e9b, 0xc2fc, 0x276d, 0x1, 0x0);
        gbc.writeMem(0x5984, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xb186);
        EXPECT(gbc.pc(), 0x5986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0298
        gbc.setState(0x8347, 0x8390, 0x5e90, 0xbe2d, 0x3355, 0xf678, 0x0, 0x1);
        gbc.writeMem(0x8347, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8390);
        EXPECT(gbc.pc(), 0x8349);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8347), 0xcb);
        EXPECT(gbc.readMem(0x8348), 0x68);
        // CB 68 0299
        gbc.setState(0x6aa0, 0x3989, 0xbf0, 0x22dd, 0x937c, 0x53e1, 0x0, 0x1);
        gbc.writeMem(0x6aa0, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3989);
        EXPECT(gbc.pc(), 0x6aa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 029A
        gbc.setState(0x99e7, 0xc7d5, 0x9760, 0x3a1e, 0xfe47, 0x165f, 0x1, 0x0);
        gbc.writeMem(0x99e7, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc7d5);
        EXPECT(gbc.pc(), 0x99e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99e7), 0xcb);
        EXPECT(gbc.readMem(0x99e8), 0x68);
        // CB 68 029B
        gbc.setState(0xa86a, 0x749d, 0x1cb0, 0xa11c, 0x14d1, 0x72bb, 0x0, 0x0);
        gbc.writeMem(0xa86a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x749d);
        EXPECT(gbc.pc(), 0xa86c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa86a), 0xcb);
        EXPECT(gbc.readMem(0xa86b), 0x68);
        // CB 68 029C
        gbc.setState(0xad5d, 0xa8d3, 0xe400, 0xdbb, 0xbfa4, 0x31e5, 0x1, 0x1);
        gbc.writeMem(0xad5d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa8d3);
        EXPECT(gbc.pc(), 0xad5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad5d), 0xcb);
        EXPECT(gbc.readMem(0xad5e), 0x68);
        // CB 68 029D
        gbc.setState(0xe15c, 0x9d33, 0x5f10, 0xfd8e, 0x9d78, 0xd5cc, 0x1, 0x1);
        gbc.writeMem(0xe15c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9d33);
        EXPECT(gbc.pc(), 0xe15e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe15c), 0xcb);
        EXPECT(gbc.readMem(0xe15d), 0x68);
        // CB 68 029F
        gbc.setState(0x469c, 0xff41, 0x4d50, 0x321c, 0x993, 0xe276, 0x0, 0x0);
        gbc.writeMem(0x469c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xff41);
        EXPECT(gbc.pc(), 0x469e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02A0
        gbc.setState(0x2cf2, 0xf942, 0x4730, 0x47d9, 0xe151, 0x5c6d, 0x1, 0x1);
        gbc.writeMem(0x2cf2, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf942);
        EXPECT(gbc.pc(), 0x2cf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02A1
        gbc.setState(0x403c, 0xd156, 0xc5d0, 0xa146, 0x9b02, 0x3669, 0x0, 0x1);
        gbc.writeMem(0x403c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd156);
        EXPECT(gbc.pc(), 0x403e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02A2
        gbc.setState(0xd07, 0x272a, 0x1a0, 0xa9, 0x27d1, 0x57d2, 0x1, 0x0);
        gbc.writeMem(0xd07, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x272a);
        EXPECT(gbc.pc(), 0xd09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 02A3
        gbc.setState(0x1382, 0x7a5d, 0x8890, 0xa8de, 0xe21, 0xe340, 0x1, 0x1);
        gbc.writeMem(0x1382, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7a5d);
        EXPECT(gbc.pc(), 0x1384);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02A4
        gbc.setState(0xd726, 0x9290, 0xefe0, 0xef45, 0x4784, 0x231d, 0x1, 0x0);
        gbc.writeMem(0xd726, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9290);
        EXPECT(gbc.pc(), 0xd728);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd726), 0xcb);
        EXPECT(gbc.readMem(0xd727), 0x68);
        // CB 68 02A5
        gbc.setState(0x525e, 0x248, 0x3f60, 0x342a, 0x4dc1, 0x3fcd, 0x0, 0x0);
        gbc.writeMem(0x525e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x248);
        EXPECT(gbc.pc(), 0x5260);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 02A6
        gbc.setState(0x74e5, 0xfc2d, 0x4b30, 0x6666, 0x4dbd, 0xb56d, 0x1, 0x1);
        gbc.writeMem(0x74e5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xfc2d);
        EXPECT(gbc.pc(), 0x74e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02A7
        gbc.setState(0xa044, 0x760c, 0x2d0, 0xe4bd, 0x5694, 0x3b9e, 0x0, 0x1);
        gbc.writeMem(0xa044, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x760c);
        EXPECT(gbc.pc(), 0xa046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa044), 0xcb);
        EXPECT(gbc.readMem(0xa045), 0x68);
        // CB 68 02A8
        gbc.setState(0x7da8, 0xfd25, 0x1f0, 0x4f19, 0x1770, 0xa229, 0x1, 0x1);
        gbc.writeMem(0x7da8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xfd25);
        EXPECT(gbc.pc(), 0x7daa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02A9
        gbc.setState(0x8460, 0x77be, 0x57b0, 0x5bb, 0x4fe7, 0xf81e, 0x1, 0x1);
        gbc.writeMem(0x8460, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x77be);
        EXPECT(gbc.pc(), 0x8462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8460), 0xcb);
        EXPECT(gbc.readMem(0x8461), 0x68);
        // CB 68 02AA
        gbc.setState(0x3506, 0x5a31, 0xb730, 0xdeb2, 0x65c6, 0x842d, 0x1, 0x1);
        gbc.writeMem(0x3506, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5a31);
        EXPECT(gbc.pc(), 0x3508);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02AB
        gbc.setState(0x3d9e, 0xc3bf, 0x5060, 0x5370, 0xb091, 0x2d69, 0x0, 0x0);
        gbc.writeMem(0x3d9e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xc3bf);
        EXPECT(gbc.pc(), 0x3da0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 02AC
        gbc.setState(0x12e1, 0x7125, 0x20f0, 0xa93b, 0x99c3, 0x541b, 0x0, 0x0);
        gbc.writeMem(0x12e1, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7125);
        EXPECT(gbc.pc(), 0x12e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02AD
        gbc.setState(0x6498, 0x3e1d, 0x6cd0, 0x1aa5, 0xa067, 0xceb3, 0x0, 0x1);
        gbc.writeMem(0x6498, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x3e1d);
        EXPECT(gbc.pc(), 0x649a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02AE
        gbc.setState(0x7e5f, 0x7e75, 0xf940, 0x89ff, 0xfa4c, 0x821d, 0x1, 0x1);
        gbc.writeMem(0x7e5f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x7e75);
        EXPECT(gbc.pc(), 0x7e61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 02AF
        gbc.setState(0x5df9, 0x234, 0x1f50, 0x57a6, 0x9125, 0x3932, 0x1, 0x1);
        gbc.writeMem(0x5df9, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x234);
        EXPECT(gbc.pc(), 0x5dfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02B0
        gbc.setState(0x81dd, 0xe9b5, 0xfd00, 0xe598, 0x8c64, 0x477d, 0x1, 0x0);
        gbc.writeMem(0x81dd, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe9b5);
        EXPECT(gbc.pc(), 0x81df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81dd), 0xcb);
        EXPECT(gbc.readMem(0x81de), 0x68);
        // CB 68 02B1
        gbc.setState(0x832b, 0xd637, 0x2b00, 0xbdbf, 0x75ad, 0xef8c, 0x1, 0x1);
        gbc.writeMem(0x832b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd637);
        EXPECT(gbc.pc(), 0x832d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x832b), 0xcb);
        EXPECT(gbc.readMem(0x832c), 0x68);
        // CB 68 02B2
        gbc.setState(0xd564, 0x160f, 0xc0a0, 0x50a2, 0xec8b, 0xdb6a, 0x1, 0x0);
        gbc.writeMem(0xd564, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x160f);
        EXPECT(gbc.pc(), 0xd566);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd564), 0xcb);
        EXPECT(gbc.readMem(0xd565), 0x68);
        // CB 68 02B3
        gbc.setState(0x562b, 0x8a27, 0x3d40, 0x1cd7, 0xb275, 0x7588, 0x1, 0x0);
        gbc.writeMem(0x562b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x8a27);
        EXPECT(gbc.pc(), 0x562d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 02B4
        gbc.setState(0x3b8, 0x62c9, 0xe790, 0xe431, 0xee84, 0x720d, 0x1, 0x0);
        gbc.writeMem(0x3b8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x62c9);
        EXPECT(gbc.pc(), 0x3ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02B5
        gbc.setState(0x8075, 0xc288, 0xaa50, 0x2160, 0x9a1b, 0x5356, 0x1, 0x0);
        gbc.writeMem(0x8075, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xc288);
        EXPECT(gbc.pc(), 0x8077);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8075), 0xcb);
        EXPECT(gbc.readMem(0x8076), 0x68);
        // CB 68 02B6
        gbc.setState(0x23b3, 0x834e, 0xea0, 0x7ea0, 0x30d4, 0x6f73, 0x1, 0x0);
        gbc.writeMem(0x23b3, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x834e);
        EXPECT(gbc.pc(), 0x23b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 02B7
        gbc.setState(0xcaaa, 0x58a5, 0x5580, 0xdddc, 0x85e1, 0x7293, 0x1, 0x1);
        gbc.writeMem(0xcaaa, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x58a5);
        EXPECT(gbc.pc(), 0xcaac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaaa), 0xcb);
        EXPECT(gbc.readMem(0xcaab), 0x68);
        // CB 68 02B8
        gbc.setState(0xc795, 0x4c68, 0x1ec0, 0x6344, 0x67f0, 0x4d08, 0x1, 0x1);
        gbc.writeMem(0xc795, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x4c68);
        EXPECT(gbc.pc(), 0xc797);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc795), 0xcb);
        EXPECT(gbc.readMem(0xc796), 0x68);
        // CB 68 02B9
        gbc.setState(0xb85c, 0xc184, 0x3850, 0x8913, 0x291d, 0x5fb8, 0x1, 0x1);
        gbc.writeMem(0xb85c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc184);
        EXPECT(gbc.pc(), 0xb85e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb85c), 0xcb);
        EXPECT(gbc.readMem(0xb85d), 0x68);
        // CB 68 02BA
        gbc.setState(0xa3dc, 0x40c5, 0xd8c0, 0x27b9, 0xaa21, 0xd722, 0x0, 0x1);
        gbc.writeMem(0xa3dc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x40c5);
        EXPECT(gbc.pc(), 0xa3de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3dc), 0xcb);
        EXPECT(gbc.readMem(0xa3dd), 0x68);
        // CB 68 02BB
        gbc.setState(0xc140, 0xc356, 0x2a0, 0x3d7b, 0xf588, 0x1eab, 0x0, 0x1);
        gbc.writeMem(0xc140, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc356);
        EXPECT(gbc.pc(), 0xc142);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc140), 0xcb);
        EXPECT(gbc.readMem(0xc141), 0x68);
        // CB 68 02BC
        gbc.setState(0x9ab, 0x2070, 0x2960, 0xa4d5, 0xf0bd, 0x98a6, 0x0, 0x1);
        gbc.writeMem(0x9ab, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x2070);
        EXPECT(gbc.pc(), 0x9ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 02BD
        gbc.setState(0xb574, 0x62a4, 0x90e0, 0xa1eb, 0xba84, 0xe10a, 0x0, 0x1);
        gbc.writeMem(0xb574, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x62a4);
        EXPECT(gbc.pc(), 0xb576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb574), 0xcb);
        EXPECT(gbc.readMem(0xb575), 0x68);
        // CB 68 02BE
        gbc.setState(0xb10a, 0xb2c3, 0x4930, 0xd0f, 0xba52, 0x44e0, 0x0, 0x0);
        gbc.writeMem(0xb10a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb2c3);
        EXPECT(gbc.pc(), 0xb10c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb10a), 0xcb);
        EXPECT(gbc.readMem(0xb10b), 0x68);
        // CB 68 02BF
        gbc.setState(0x7b40, 0x6a3d, 0x1240, 0x8f25, 0x4f5e, 0xc855, 0x1, 0x1);
        gbc.writeMem(0x7b40, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6a3d);
        EXPECT(gbc.pc(), 0x7b42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 02C0
        gbc.setState(0x544b, 0x8cb0, 0xd6a0, 0xfcee, 0x7a62, 0xa981, 0x0, 0x1);
        gbc.writeMem(0x544b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8cb0);
        EXPECT(gbc.pc(), 0x544d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 02C1
        gbc.setState(0x60e8, 0x77c8, 0x26b0, 0xbe24, 0xacdb, 0x81b9, 0x0, 0x0);
        gbc.writeMem(0x60e8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x77c8);
        EXPECT(gbc.pc(), 0x60ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02C2
        gbc.setState(0xce01, 0xc85c, 0x5140, 0xdf3e, 0x2856, 0x68fa, 0x1, 0x1);
        gbc.writeMem(0xce01, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc85c);
        EXPECT(gbc.pc(), 0xce03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce01), 0xcb);
        EXPECT(gbc.readMem(0xce02), 0x68);
        // CB 68 02C3
        gbc.setState(0xd080, 0xa390, 0xe9e0, 0xa076, 0x2426, 0xa16a, 0x0, 0x1);
        gbc.writeMem(0xd080, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa390);
        EXPECT(gbc.pc(), 0xd082);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd080), 0xcb);
        EXPECT(gbc.readMem(0xd081), 0x68);
        // CB 68 02C4
        gbc.setState(0xddad, 0x6506, 0x8d0, 0x262e, 0x55c, 0x71b3, 0x0, 0x1);
        gbc.writeMem(0xddad, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6506);
        EXPECT(gbc.pc(), 0xddaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddad), 0xcb);
        EXPECT(gbc.readMem(0xddae), 0x68);
        // CB 68 02C5
        gbc.setState(0xa4d9, 0x5d42, 0xfdd0, 0xc817, 0x6d58, 0x18ea, 0x0, 0x1);
        gbc.writeMem(0xa4d9, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5d42);
        EXPECT(gbc.pc(), 0xa4db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4d9), 0xcb);
        EXPECT(gbc.readMem(0xa4da), 0x68);
        // CB 68 02C6
        gbc.setState(0xe489, 0xb65, 0x9db0, 0x115e, 0xd967, 0xc211, 0x1, 0x0);
        gbc.writeMem(0xe489, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb65);
        EXPECT(gbc.pc(), 0xe48b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe489), 0xcb);
        EXPECT(gbc.readMem(0xe48a), 0x68);
        // CB 68 02C8
        gbc.setState(0x6621, 0xfe7e, 0x8560, 0xe5da, 0xa183, 0x67ba, 0x1, 0x0);
        gbc.writeMem(0x6621, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xfe7e);
        EXPECT(gbc.pc(), 0x6623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 02C9
        gbc.setState(0x2777, 0xb456, 0xca70, 0x1f09, 0xcace, 0x5475, 0x1, 0x0);
        gbc.writeMem(0x2777, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb456);
        EXPECT(gbc.pc(), 0x2779);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02CA
        gbc.setState(0x6d1, 0x24fe, 0xd040, 0xe0bd, 0xd012, 0x1148, 0x1, 0x0);
        gbc.writeMem(0x6d1, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x24fe);
        EXPECT(gbc.pc(), 0x6d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 02CB
        gbc.setState(0x5e1c, 0x880b, 0xf770, 0x63b7, 0xd1e7, 0x9e9a, 0x1, 0x0);
        gbc.writeMem(0x5e1c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x880b);
        EXPECT(gbc.pc(), 0x5e1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02CC
        gbc.setState(0x76e6, 0x4c77, 0x7f40, 0x3a49, 0x109b, 0xc91a, 0x1, 0x1);
        gbc.writeMem(0x76e6, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x4c77);
        EXPECT(gbc.pc(), 0x76e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 02CE
        gbc.setState(0x1cb5, 0x3f30, 0x90b0, 0xde28, 0x5639, 0x9464, 0x1, 0x0);
        gbc.writeMem(0x1cb5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3f30);
        EXPECT(gbc.pc(), 0x1cb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02CF
        gbc.setState(0xeb1a, 0x99a7, 0xf2c0, 0x6ef4, 0xd5c2, 0x7d2b, 0x0, 0x1);
        gbc.writeMem(0xeb1a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x99a7);
        EXPECT(gbc.pc(), 0xeb1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb1a), 0xcb);
        EXPECT(gbc.readMem(0xeb1b), 0x68);
        // CB 68 02D0
        gbc.setState(0xe89c, 0x6ef1, 0x3480, 0xae8c, 0x1395, 0x14c2, 0x0, 0x0);
        gbc.writeMem(0xe89c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6ef1);
        EXPECT(gbc.pc(), 0xe89e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe89c), 0xcb);
        EXPECT(gbc.readMem(0xe89d), 0x68);
        // CB 68 02D1
        gbc.setState(0x210d, 0x2211, 0x4400, 0xab90, 0x90b2, 0xe2cf, 0x1, 0x1);
        gbc.writeMem(0x210d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2211);
        EXPECT(gbc.pc(), 0x210f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 02D2
        gbc.setState(0x903a, 0x7e5d, 0x6470, 0xf521, 0x6c9c, 0xdda0, 0x0, 0x1);
        gbc.writeMem(0x903a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7e5d);
        EXPECT(gbc.pc(), 0x903c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x903a), 0xcb);
        EXPECT(gbc.readMem(0x903b), 0x68);
        // CB 68 02D3
        gbc.setState(0x3cdc, 0xf1ed, 0x7e30, 0x7320, 0x3448, 0x73ed, 0x0, 0x0);
        gbc.writeMem(0x3cdc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf1ed);
        EXPECT(gbc.pc(), 0x3cde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02D4
        gbc.setState(0xd26c, 0x533d, 0xc240, 0x9836, 0xd4d0, 0xfa54, 0x0, 0x0);
        gbc.writeMem(0xd26c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x533d);
        EXPECT(gbc.pc(), 0xd26e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd26c), 0xcb);
        EXPECT(gbc.readMem(0xd26d), 0x68);
        // CB 68 02D5
        gbc.setState(0x1122, 0x5d14, 0x7770, 0x3807, 0xa860, 0xe7c1, 0x1, 0x0);
        gbc.writeMem(0x1122, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5d14);
        EXPECT(gbc.pc(), 0x1124);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02D6
        gbc.setState(0x22a1, 0xfbdc, 0x19b0, 0x8a88, 0xf24f, 0xba9c, 0x1, 0x0);
        gbc.writeMem(0x22a1, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xfbdc);
        EXPECT(gbc.pc(), 0x22a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02D7
        gbc.setState(0x4fa2, 0x92ad, 0xee50, 0xcbcf, 0x786b, 0xf8b7, 0x1, 0x1);
        gbc.writeMem(0x4fa2, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x92ad);
        EXPECT(gbc.pc(), 0x4fa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02D8
        gbc.setState(0xe1e0, 0xd2ad, 0x8bf0, 0x8ba0, 0x6d52, 0x5c1d, 0x0, 0x1);
        gbc.writeMem(0xe1e0, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd2ad);
        EXPECT(gbc.pc(), 0xe1e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1e0), 0xcb);
        EXPECT(gbc.readMem(0xe1e1), 0x68);
        // CB 68 02D9
        gbc.setState(0xe68f, 0x283c, 0xea40, 0xf402, 0xe613, 0x1a4, 0x0, 0x0);
        gbc.writeMem(0xe68f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x283c);
        EXPECT(gbc.pc(), 0xe691);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe68f), 0xcb);
        EXPECT(gbc.readMem(0xe690), 0x68);
        // CB 68 02DA
        gbc.setState(0x1a8b, 0x4637, 0x1240, 0x936f, 0xa301, 0x738a, 0x1, 0x1);
        gbc.writeMem(0x1a8b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4637);
        EXPECT(gbc.pc(), 0x1a8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 02DB
        gbc.setState(0xeec8, 0xdf36, 0xdd10, 0x3106, 0x484b, 0xf7ed, 0x0, 0x1);
        gbc.writeMem(0xeec8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xdf36);
        EXPECT(gbc.pc(), 0xeeca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeec8), 0xcb);
        EXPECT(gbc.readMem(0xeec9), 0x68);
        // CB 68 02DD
        gbc.setState(0x6f64, 0x5300, 0x90f0, 0x8bca, 0x906f, 0x1263, 0x0, 0x0);
        gbc.writeMem(0x6f64, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5300);
        EXPECT(gbc.pc(), 0x6f66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02DE
        gbc.setState(0x22a5, 0x7f59, 0x1cb0, 0x9243, 0xae13, 0xd692, 0x1, 0x1);
        gbc.writeMem(0x22a5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x7f59);
        EXPECT(gbc.pc(), 0x22a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02DF
        gbc.setState(0x600c, 0x834e, 0x98f0, 0xed95, 0x4e29, 0xe046, 0x1, 0x1);
        gbc.writeMem(0x600c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x834e);
        EXPECT(gbc.pc(), 0x600e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02E0
        gbc.setState(0x71d2, 0x4dd8, 0xbb90, 0x747d, 0xbdcd, 0x883d, 0x0, 0x1);
        gbc.writeMem(0x71d2, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4dd8);
        EXPECT(gbc.pc(), 0x71d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02E1
        gbc.setState(0x9e04, 0x3dde, 0x8fd0, 0x23ee, 0xc343, 0x2006, 0x0, 0x0);
        gbc.writeMem(0x9e04, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3dde);
        EXPECT(gbc.pc(), 0x9e06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e04), 0xcb);
        EXPECT(gbc.readMem(0x9e05), 0x68);
        // CB 68 02E2
        gbc.setState(0xd58c, 0x3866, 0x4b90, 0x5382, 0x900f, 0xb227, 0x1, 0x0);
        gbc.writeMem(0xd58c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3866);
        EXPECT(gbc.pc(), 0xd58e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd58c), 0xcb);
        EXPECT(gbc.readMem(0xd58d), 0x68);
        // CB 68 02E3
        gbc.setState(0x51ed, 0xa6cc, 0x74f0, 0xb48, 0x92fd, 0xd00d, 0x1, 0x1);
        gbc.writeMem(0x51ed, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa6cc);
        EXPECT(gbc.pc(), 0x51ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02E4
        gbc.setState(0xec0c, 0xefa5, 0x9be0, 0xa6c9, 0x4f4f, 0xbba2, 0x1, 0x0);
        gbc.writeMem(0xec0c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xefa5);
        EXPECT(gbc.pc(), 0xec0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec0c), 0xcb);
        EXPECT(gbc.readMem(0xec0d), 0x68);
        // CB 68 02E5
        gbc.setState(0xa38, 0xdb30, 0x6220, 0x50ee, 0xfd37, 0xc4c4, 0x1, 0x0);
        gbc.writeMem(0xa38, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xdb30);
        EXPECT(gbc.pc(), 0xa3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 02E6
        gbc.setState(0x8dcc, 0xa47b, 0x2380, 0xb100, 0xa812, 0xc030, 0x1, 0x1);
        gbc.writeMem(0x8dcc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa47b);
        EXPECT(gbc.pc(), 0x8dce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dcc), 0xcb);
        EXPECT(gbc.readMem(0x8dcd), 0x68);
        // CB 68 02E7
        gbc.setState(0x92f5, 0x8b92, 0xb8c0, 0x942c, 0x7760, 0xe515, 0x1, 0x0);
        gbc.writeMem(0x92f5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8b92);
        EXPECT(gbc.pc(), 0x92f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92f5), 0xcb);
        EXPECT(gbc.readMem(0x92f6), 0x68);
        // CB 68 02E8
        gbc.setState(0x80f8, 0x8899, 0xb8a0, 0x906e, 0xd08c, 0xd579, 0x1, 0x0);
        gbc.writeMem(0x80f8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8899);
        EXPECT(gbc.pc(), 0x80fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80f8), 0xcb);
        EXPECT(gbc.readMem(0x80f9), 0x68);
        // CB 68 02E9
        gbc.setState(0x5052, 0x4f10, 0x7450, 0x3a6e, 0xf7ba, 0xcb87, 0x1, 0x1);
        gbc.writeMem(0x5052, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x4f10);
        EXPECT(gbc.pc(), 0x5054);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02EA
        gbc.setState(0x540a, 0x9b9b, 0x1f20, 0x2919, 0x4a8e, 0xdbe8, 0x1, 0x0);
        gbc.writeMem(0x540a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x9b9b);
        EXPECT(gbc.pc(), 0x540c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 02EB
        gbc.setState(0xd501, 0x35b0, 0x2e90, 0x7058, 0xac1e, 0x82d7, 0x0, 0x0);
        gbc.writeMem(0xd501, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x35b0);
        EXPECT(gbc.pc(), 0xd503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd501), 0xcb);
        EXPECT(gbc.readMem(0xd502), 0x68);
        // CB 68 02EC
        gbc.setState(0x9f4a, 0xdf12, 0x8610, 0x9df1, 0x5db, 0x8013, 0x1, 0x0);
        gbc.writeMem(0x9f4a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xdf12);
        EXPECT(gbc.pc(), 0x9f4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f4a), 0xcb);
        EXPECT(gbc.readMem(0x9f4b), 0x68);
        // CB 68 02ED
        gbc.setState(0x2b41, 0x225, 0x4c30, 0xae34, 0x228e, 0x6c91, 0x1, 0x0);
        gbc.writeMem(0x2b41, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x225);
        EXPECT(gbc.pc(), 0x2b43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02EE
        gbc.setState(0x3566, 0x5991, 0x2130, 0x3e0a, 0x8333, 0x9bcc, 0x0, 0x1);
        gbc.writeMem(0x3566, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x5991);
        EXPECT(gbc.pc(), 0x3568);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02EF
        gbc.setState(0x19ad, 0x4f19, 0xee00, 0xbb93, 0x3eea, 0x44b, 0x1, 0x0);
        gbc.writeMem(0x19ad, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4f19);
        EXPECT(gbc.pc(), 0x19af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 02F0
        gbc.setState(0xaf0a, 0x2726, 0xd6a0, 0xded0, 0xa923, 0x7a6c, 0x0, 0x0);
        gbc.writeMem(0xaf0a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2726);
        EXPECT(gbc.pc(), 0xaf0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf0a), 0xcb);
        EXPECT(gbc.readMem(0xaf0b), 0x68);
        // CB 68 02F2
        gbc.setState(0x5c33, 0xf04d, 0xd6d0, 0x3647, 0xda50, 0x983d, 0x1, 0x1);
        gbc.writeMem(0x5c33, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf04d);
        EXPECT(gbc.pc(), 0x5c35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02F3
        gbc.setState(0x68a1, 0x3b1f, 0x3ce0, 0xd541, 0x1eed, 0x8ae5, 0x0, 0x0);
        gbc.writeMem(0x68a1, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3b1f);
        EXPECT(gbc.pc(), 0x68a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 02F4
        gbc.setState(0xaf19, 0x516, 0x30b0, 0x7015, 0x7830, 0x220e, 0x1, 0x1);
        gbc.writeMem(0xaf19, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x516);
        EXPECT(gbc.pc(), 0xaf1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf19), 0xcb);
        EXPECT(gbc.readMem(0xaf1a), 0x68);
        // CB 68 02F5
        gbc.setState(0xa1d5, 0xb2c6, 0x5cd0, 0x59c9, 0x45bf, 0x2843, 0x1, 0x1);
        gbc.writeMem(0xa1d5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb2c6);
        EXPECT(gbc.pc(), 0xa1d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1d5), 0xcb);
        EXPECT(gbc.readMem(0xa1d6), 0x68);
        // CB 68 02F6
        gbc.setState(0x4a49, 0xb11d, 0xacc0, 0x342e, 0x4c7b, 0x50aa, 0x0, 0x1);
        gbc.writeMem(0x4a49, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xb11d);
        EXPECT(gbc.pc(), 0x4a4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 02F7
        gbc.setState(0xe982, 0xcf41, 0x8540, 0x8f11, 0x27d1, 0x5776, 0x0, 0x0);
        gbc.writeMem(0xe982, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xcf41);
        EXPECT(gbc.pc(), 0xe984);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe982), 0xcb);
        EXPECT(gbc.readMem(0xe983), 0x68);
        // CB 68 02F8
        gbc.setState(0x99b0, 0x8854, 0x2e0, 0xa585, 0x6411, 0x9ef, 0x1, 0x0);
        gbc.writeMem(0x99b0, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8854);
        EXPECT(gbc.pc(), 0x99b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99b0), 0xcb);
        EXPECT(gbc.readMem(0x99b1), 0x68);
        // CB 68 02F9
        gbc.setState(0x986e, 0x139e, 0xcc90, 0x1f2d, 0x5f67, 0x1acb, 0x1, 0x1);
        gbc.writeMem(0x986e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x139e);
        EXPECT(gbc.pc(), 0x9870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x986e), 0xcb);
        EXPECT(gbc.readMem(0x986f), 0x68);
        // CB 68 02FA
        gbc.setState(0x518f, 0x953e, 0x5910, 0x389, 0x82a1, 0xda5, 0x0, 0x1);
        gbc.writeMem(0x518f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x953e);
        EXPECT(gbc.pc(), 0x5191);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 02FB
        gbc.setState(0x45ef, 0xd40e, 0xa980, 0x5b2f, 0xe5da, 0x67c4, 0x1, 0x0);
        gbc.writeMem(0x45ef, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xd40e);
        EXPECT(gbc.pc(), 0x45f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 02FC
        gbc.setState(0x3c86, 0xc854, 0xc680, 0xa1bd, 0x67ae, 0x19ad, 0x0, 0x1);
        gbc.writeMem(0x3c86, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc854);
        EXPECT(gbc.pc(), 0x3c88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 02FD
        gbc.setState(0xb23b, 0x681e, 0x8410, 0xb35d, 0x2254, 0x5782, 0x0, 0x1);
        gbc.writeMem(0xb23b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x681e);
        EXPECT(gbc.pc(), 0xb23d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb23b), 0xcb);
        EXPECT(gbc.readMem(0xb23c), 0x68);
        // CB 68 02FE
        gbc.setState(0xb9bc, 0x4dbd, 0x8c40, 0xa373, 0xa4b5, 0x43df, 0x0, 0x1);
        gbc.writeMem(0xb9bc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x4dbd);
        EXPECT(gbc.pc(), 0xb9be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9bc), 0xcb);
        EXPECT(gbc.readMem(0xb9bd), 0x68);
        // CB 68 02FF
        gbc.setState(0x2469, 0xf987, 0x5e0, 0x41de, 0x6822, 0x6c55, 0x0, 0x1);
        gbc.writeMem(0x2469, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf987);
        EXPECT(gbc.pc(), 0x246b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0300
        gbc.setState(0xc22c, 0x9609, 0x9c80, 0xe8cb, 0x8d32, 0xdae7, 0x0, 0x0);
        gbc.writeMem(0xc22c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9609);
        EXPECT(gbc.pc(), 0xc22e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc22c), 0xcb);
        EXPECT(gbc.readMem(0xc22d), 0x68);
        // CB 68 0301
        gbc.setState(0x7360, 0x8f5d, 0xf570, 0x6efe, 0xb247, 0x63fd, 0x0, 0x1);
        gbc.writeMem(0x7360, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x8f5d);
        EXPECT(gbc.pc(), 0x7362);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0302
        gbc.setState(0x9905, 0xd3ac, 0xa6c0, 0x7ac3, 0xb8f6, 0xbd4, 0x1, 0x1);
        gbc.writeMem(0x9905, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd3ac);
        EXPECT(gbc.pc(), 0x9907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9905), 0xcb);
        EXPECT(gbc.readMem(0x9906), 0x68);
        // CB 68 0303
        gbc.setState(0xecf2, 0xf5af, 0x7c30, 0xbaf6, 0x361e, 0x7f7d, 0x1, 0x1);
        gbc.writeMem(0xecf2, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf5af);
        EXPECT(gbc.pc(), 0xecf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecf2), 0xcb);
        EXPECT(gbc.readMem(0xecf3), 0x68);
        // CB 68 0304
        gbc.setState(0xc5a4, 0x6b1, 0x5340, 0x9921, 0xa324, 0xada7, 0x1, 0x1);
        gbc.writeMem(0xc5a4, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x6b1);
        EXPECT(gbc.pc(), 0xc5a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5a4), 0xcb);
        EXPECT(gbc.readMem(0xc5a5), 0x68);
        // CB 68 0305
        gbc.setState(0xd71a, 0xcdc9, 0x1140, 0x3d0, 0xf1d3, 0x1628, 0x0, 0x0);
        gbc.writeMem(0xd71a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xcdc9);
        EXPECT(gbc.pc(), 0xd71c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd71a), 0xcb);
        EXPECT(gbc.readMem(0xd71b), 0x68);
        // CB 68 0306
        gbc.setState(0xe002, 0x20c3, 0x8230, 0x3491, 0xbb9a, 0xd957, 0x0, 0x1);
        gbc.writeMem(0xe002, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x20c3);
        EXPECT(gbc.pc(), 0xe004);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe002), 0xcb);
        EXPECT(gbc.readMem(0xe003), 0x68);
        // CB 68 0307
        gbc.setState(0x7384, 0x5d0f, 0xe280, 0xac45, 0xf893, 0x87b9, 0x0, 0x0);
        gbc.writeMem(0x7384, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5d0f);
        EXPECT(gbc.pc(), 0x7386);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0308
        gbc.setState(0x7918, 0xb189, 0x64e0, 0xaf7e, 0xb375, 0x15e6, 0x0, 0x0);
        gbc.writeMem(0x7918, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb189);
        EXPECT(gbc.pc(), 0x791a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0309
        gbc.setState(0x8df8, 0x26a6, 0xddd0, 0x7a8b, 0x5a0f, 0xd, 0x0, 0x0);
        gbc.writeMem(0x8df8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x26a6);
        EXPECT(gbc.pc(), 0x8dfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8df8), 0xcb);
        EXPECT(gbc.readMem(0x8df9), 0x68);
        // CB 68 030A
        gbc.setState(0x4a8f, 0x26a0, 0xc680, 0x6abb, 0x9b98, 0xbbde, 0x1, 0x1);
        gbc.writeMem(0x4a8f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x26a0);
        EXPECT(gbc.pc(), 0x4a91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 030B
        gbc.setState(0x9280, 0xf197, 0xdeb0, 0xa9d3, 0x689, 0xc2c8, 0x1, 0x0);
        gbc.writeMem(0x9280, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xf197);
        EXPECT(gbc.pc(), 0x9282);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9280), 0xcb);
        EXPECT(gbc.readMem(0x9281), 0x68);
        // CB 68 030C
        gbc.setState(0x74d6, 0x6d16, 0x5f60, 0x135d, 0x2e75, 0x15c9, 0x1, 0x1);
        gbc.writeMem(0x74d6, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6d16);
        EXPECT(gbc.pc(), 0x74d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 030D
        gbc.setState(0x7979, 0x6fa5, 0x4d80, 0x5527, 0x78c3, 0x12be, 0x0, 0x1);
        gbc.writeMem(0x7979, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x6fa5);
        EXPECT(gbc.pc(), 0x797b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 030E
        gbc.setState(0x1afc, 0xe62c, 0x50b0, 0x8e77, 0x3c04, 0xb0ce, 0x1, 0x1);
        gbc.writeMem(0x1afc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe62c);
        EXPECT(gbc.pc(), 0x1afe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 030F
        gbc.setState(0x1f2d, 0x9dca, 0xaa20, 0x41a4, 0x8167, 0xf72c, 0x0, 0x1);
        gbc.writeMem(0x1f2d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9dca);
        EXPECT(gbc.pc(), 0x1f2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0310
        gbc.setState(0x59d4, 0xc187, 0xf5b0, 0x9d3d, 0xd95d, 0xfa5a, 0x1, 0x0);
        gbc.writeMem(0x59d4, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc187);
        EXPECT(gbc.pc(), 0x59d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0311
        gbc.setState(0x297d, 0xe86a, 0x1930, 0x63b6, 0x8530, 0x9d15, 0x1, 0x1);
        gbc.writeMem(0x297d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xe86a);
        EXPECT(gbc.pc(), 0x297f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0312
        gbc.setState(0x70ce, 0x42f2, 0x5420, 0x2ac, 0x22bf, 0xe081, 0x1, 0x0);
        gbc.writeMem(0x70ce, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x42f2);
        EXPECT(gbc.pc(), 0x70d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0313
        gbc.setState(0xdff2, 0x6a94, 0xcc70, 0x19f3, 0x2ac5, 0xec1b, 0x0, 0x0);
        gbc.writeMem(0xdff2, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6a94);
        EXPECT(gbc.pc(), 0xdff4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdff2), 0xcb);
        EXPECT(gbc.readMem(0xdff3), 0x68);
        // CB 68 0314
        gbc.setState(0x3f56, 0x6db3, 0xe110, 0x1ad3, 0x4160, 0xfcf8, 0x1, 0x1);
        gbc.writeMem(0x3f56, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x6db3);
        EXPECT(gbc.pc(), 0x3f58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0315
        gbc.setState(0xbd7b, 0x12a2, 0xefc0, 0x2107, 0xc804, 0xf4e7, 0x1, 0x0);
        gbc.writeMem(0xbd7b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x12a2);
        EXPECT(gbc.pc(), 0xbd7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd7b), 0xcb);
        EXPECT(gbc.readMem(0xbd7c), 0x68);
        // CB 68 0316
        gbc.setState(0x2e27, 0xcabe, 0x7eb0, 0x95d6, 0xc24, 0x3351, 0x0, 0x1);
        gbc.writeMem(0x2e27, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xcabe);
        EXPECT(gbc.pc(), 0x2e29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0317
        gbc.setState(0xc306, 0x2fb7, 0xa560, 0xda9d, 0x22d2, 0x757, 0x1, 0x1);
        gbc.writeMem(0xc306, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2fb7);
        EXPECT(gbc.pc(), 0xc308);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc306), 0xcb);
        EXPECT(gbc.readMem(0xc307), 0x68);
        // CB 68 0318
        gbc.setState(0xb881, 0x99f9, 0x8f90, 0xbe75, 0x3f73, 0x4b56, 0x0, 0x1);
        gbc.writeMem(0xb881, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x99f9);
        EXPECT(gbc.pc(), 0xb883);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb881), 0xcb);
        EXPECT(gbc.readMem(0xb882), 0x68);
        // CB 68 0319
        gbc.setState(0x1547, 0xd892, 0xe840, 0x1b3, 0x22a8, 0x8477, 0x1, 0x1);
        gbc.writeMem(0x1547, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd892);
        EXPECT(gbc.pc(), 0x1549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 031A
        gbc.setState(0xe366, 0x427f, 0x40, 0x12d8, 0xf28a, 0xf182, 0x1, 0x1);
        gbc.writeMem(0xe366, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x427f);
        EXPECT(gbc.pc(), 0xe368);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe366), 0xcb);
        EXPECT(gbc.readMem(0xe367), 0x68);
        // CB 68 031B
        gbc.setState(0x17ba, 0xb930, 0xe940, 0xc75e, 0x659e, 0x998, 0x1, 0x1);
        gbc.writeMem(0x17ba, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb930);
        EXPECT(gbc.pc(), 0x17bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 031C
        gbc.setState(0x8453, 0x85dd, 0xdf90, 0x241f, 0xb6c5, 0x53d0, 0x0, 0x0);
        gbc.writeMem(0x8453, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x85dd);
        EXPECT(gbc.pc(), 0x8455);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8453), 0xcb);
        EXPECT(gbc.readMem(0x8454), 0x68);
        // CB 68 031D
        gbc.setState(0x6478, 0x5cf6, 0xf150, 0xe92, 0x70d5, 0xb57e, 0x0, 0x0);
        gbc.writeMem(0x6478, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5cf6);
        EXPECT(gbc.pc(), 0x647a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 031E
        gbc.setState(0xd7c1, 0x10ea, 0x6d40, 0x2bc, 0xf548, 0x8a98, 0x0, 0x1);
        gbc.writeMem(0xd7c1, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x10ea);
        EXPECT(gbc.pc(), 0xd7c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7c1), 0xcb);
        EXPECT(gbc.readMem(0xd7c2), 0x68);
        // CB 68 031F
        gbc.setState(0xa7b0, 0xcd49, 0xb40, 0x51ea, 0x9a62, 0x7ea3, 0x1, 0x0);
        gbc.writeMem(0xa7b0, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xcd49);
        EXPECT(gbc.pc(), 0xa7b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7b0), 0xcb);
        EXPECT(gbc.readMem(0xa7b1), 0x68);
        // CB 68 0320
        gbc.setState(0x1750, 0xcf18, 0x1d90, 0xe9ca, 0xb7d2, 0x9ab1, 0x1, 0x1);
        gbc.writeMem(0x1750, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xcf18);
        EXPECT(gbc.pc(), 0x1752);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0321
        gbc.setState(0x6904, 0xa0a4, 0xd500, 0x6858, 0xf937, 0xa0d, 0x1, 0x1);
        gbc.writeMem(0x6904, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa0a4);
        EXPECT(gbc.pc(), 0x6906);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0322
        gbc.setState(0xc4d7, 0x8b1f, 0x83a0, 0x384e, 0x9357, 0x741, 0x1, 0x1);
        gbc.writeMem(0xc4d7, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8b1f);
        EXPECT(gbc.pc(), 0xc4d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4d7), 0xcb);
        EXPECT(gbc.readMem(0xc4d8), 0x68);
        // CB 68 0323
        gbc.setState(0x4c7d, 0xa749, 0xb4d0, 0x4608, 0x8378, 0xd9f7, 0x1, 0x1);
        gbc.writeMem(0x4c7d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xa749);
        EXPECT(gbc.pc(), 0x4c7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0324
        gbc.setState(0xd2ce, 0x7223, 0xfef0, 0x7fbd, 0x6e41, 0x7603, 0x1, 0x1);
        gbc.writeMem(0xd2ce, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7223);
        EXPECT(gbc.pc(), 0xd2d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2ce), 0xcb);
        EXPECT(gbc.readMem(0xd2cf), 0x68);
        // CB 68 0325
        gbc.setState(0xe554, 0x3380, 0x3b20, 0x984b, 0x8404, 0x5fdb, 0x1, 0x1);
        gbc.writeMem(0xe554, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x3380);
        EXPECT(gbc.pc(), 0xe556);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe554), 0xcb);
        EXPECT(gbc.readMem(0xe555), 0x68);
        // CB 68 0326
        gbc.setState(0x999e, 0xd0a1, 0x9440, 0x4384, 0xa8de, 0x486b, 0x1, 0x0);
        gbc.writeMem(0x999e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd0a1);
        EXPECT(gbc.pc(), 0x99a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x999e), 0xcb);
        EXPECT(gbc.readMem(0x999f), 0x68);
        // CB 68 0327
        gbc.setState(0xb915, 0x116f, 0xfb90, 0xcb16, 0x61df, 0xdba8, 0x0, 0x1);
        gbc.writeMem(0xb915, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x116f);
        EXPECT(gbc.pc(), 0xb917);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb915), 0xcb);
        EXPECT(gbc.readMem(0xb916), 0x68);
        // CB 68 0329
        gbc.setState(0x8d8a, 0xc057, 0xc2c0, 0x7890, 0xd304, 0x1e6e, 0x1, 0x1);
        gbc.writeMem(0x8d8a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc057);
        EXPECT(gbc.pc(), 0x8d8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d8a), 0xcb);
        EXPECT(gbc.readMem(0x8d8b), 0x68);
        // CB 68 032A
        gbc.setState(0xe439, 0xfa27, 0xb660, 0xe0a2, 0x2477, 0x8816, 0x1, 0x0);
        gbc.writeMem(0xe439, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xfa27);
        EXPECT(gbc.pc(), 0xe43b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe439), 0xcb);
        EXPECT(gbc.readMem(0xe43a), 0x68);
        // CB 68 032B
        gbc.setState(0xa162, 0x9418, 0x36e0, 0x4cfe, 0x47a6, 0x1365, 0x1, 0x1);
        gbc.writeMem(0xa162, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9418);
        EXPECT(gbc.pc(), 0xa164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa162), 0xcb);
        EXPECT(gbc.readMem(0xa163), 0x68);
        // CB 68 032D
        gbc.setState(0x61f8, 0x124d, 0x1580, 0xec7a, 0x4a0, 0x37d2, 0x0, 0x0);
        gbc.writeMem(0x61f8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x124d);
        EXPECT(gbc.pc(), 0x61fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 032E
        gbc.setState(0x2a8f, 0xb10b, 0xa880, 0xfe93, 0x4d67, 0x107e, 0x0, 0x1);
        gbc.writeMem(0x2a8f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb10b);
        EXPECT(gbc.pc(), 0x2a91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 032F
        gbc.setState(0x5fe5, 0xbb2, 0xa790, 0x832d, 0xa130, 0x7e5f, 0x1, 0x1);
        gbc.writeMem(0x5fe5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xbb2);
        EXPECT(gbc.pc(), 0x5fe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0330
        gbc.setState(0x6dac, 0xdc45, 0xf610, 0x5c3f, 0x1b51, 0x88b2, 0x1, 0x1);
        gbc.writeMem(0x6dac, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xdc45);
        EXPECT(gbc.pc(), 0x6dae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0331
        gbc.setState(0xaf77, 0xa268, 0xd090, 0xc0d1, 0x311, 0x9a0b, 0x0, 0x0);
        gbc.writeMem(0xaf77, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa268);
        EXPECT(gbc.pc(), 0xaf79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf77), 0xcb);
        EXPECT(gbc.readMem(0xaf78), 0x68);
        // CB 68 0332
        gbc.setState(0xec72, 0x3c96, 0xeff0, 0xee9b, 0x9f8c, 0x1b11, 0x0, 0x0);
        gbc.writeMem(0xec72, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x3c96);
        EXPECT(gbc.pc(), 0xec74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec72), 0xcb);
        EXPECT(gbc.readMem(0xec73), 0x68);
        // CB 68 0333
        gbc.setState(0xe36c, 0x5611, 0x1a30, 0xb1d4, 0x6aa0, 0x748c, 0x1, 0x1);
        gbc.writeMem(0xe36c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x5611);
        EXPECT(gbc.pc(), 0xe36e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe36c), 0xcb);
        EXPECT(gbc.readMem(0xe36d), 0x68);
        // CB 68 0334
        gbc.setState(0x371e, 0x8e2e, 0x4d0, 0x57cf, 0xf7fe, 0xc994, 0x0, 0x1);
        gbc.writeMem(0x371e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x8e2e);
        EXPECT(gbc.pc(), 0x3720);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0335
        gbc.setState(0x9e61, 0xd56e, 0xef30, 0x5128, 0x2a2f, 0x9988, 0x0, 0x1);
        gbc.writeMem(0x9e61, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd56e);
        EXPECT(gbc.pc(), 0x9e63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e61), 0xcb);
        EXPECT(gbc.readMem(0x9e62), 0x68);
        // CB 68 0337
        gbc.setState(0xb456, 0xc1cf, 0xc130, 0xbe3c, 0x192b, 0x605, 0x1, 0x1);
        gbc.writeMem(0xb456, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc1cf);
        EXPECT(gbc.pc(), 0xb458);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb456), 0xcb);
        EXPECT(gbc.readMem(0xb457), 0x68);
        // CB 68 0338
        gbc.setState(0xa7ca, 0xd2b4, 0x3000, 0x1407, 0x4474, 0x10a8, 0x0, 0x1);
        gbc.writeMem(0xa7ca, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd2b4);
        EXPECT(gbc.pc(), 0xa7cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ca), 0xcb);
        EXPECT(gbc.readMem(0xa7cb), 0x68);
        // CB 68 0339
        gbc.setState(0x77d9, 0x9f04, 0xffc0, 0xe806, 0xa6a5, 0xb4ab, 0x0, 0x1);
        gbc.writeMem(0x77d9, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x9f04);
        EXPECT(gbc.pc(), 0x77db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 033A
        gbc.setState(0x5a01, 0x99a3, 0x31a0, 0x12df, 0xa395, 0x4803, 0x0, 0x1);
        gbc.writeMem(0x5a01, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x99a3);
        EXPECT(gbc.pc(), 0x5a03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 033B
        gbc.setState(0x848a, 0xb4a6, 0x4890, 0x5062, 0xce49, 0x6d5e, 0x0, 0x1);
        gbc.writeMem(0x848a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb4a6);
        EXPECT(gbc.pc(), 0x848c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x848a), 0xcb);
        EXPECT(gbc.readMem(0x848b), 0x68);
        // CB 68 033D
        gbc.setState(0xc714, 0x7644, 0x9ed0, 0x54d9, 0x83a4, 0xe2af, 0x1, 0x1);
        gbc.writeMem(0xc714, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7644);
        EXPECT(gbc.pc(), 0xc716);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc714), 0xcb);
        EXPECT(gbc.readMem(0xc715), 0x68);
        // CB 68 033E
        gbc.setState(0x2cfd, 0xbf1e, 0x6e30, 0x64f9, 0x966c, 0xcf41, 0x0, 0x0);
        gbc.writeMem(0x2cfd, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xbf1e);
        EXPECT(gbc.pc(), 0x2cff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 033F
        gbc.setState(0x5b6e, 0x98e9, 0x8990, 0x6d4d, 0x8e35, 0xf64, 0x0, 0x1);
        gbc.writeMem(0x5b6e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x98e9);
        EXPECT(gbc.pc(), 0x5b70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0340
        gbc.setState(0x2d2a, 0xbc01, 0x3470, 0x8551, 0x9c3b, 0x9be1, 0x1, 0x1);
        gbc.writeMem(0x2d2a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xbc01);
        EXPECT(gbc.pc(), 0x2d2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0341
        gbc.setState(0xb4f3, 0x83cd, 0xc1b0, 0xa8f5, 0xbf84, 0x9a82, 0x1, 0x0);
        gbc.writeMem(0xb4f3, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x83cd);
        EXPECT(gbc.pc(), 0xb4f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4f3), 0xcb);
        EXPECT(gbc.readMem(0xb4f4), 0x68);
        // CB 68 0342
        gbc.setState(0x3786, 0x2481, 0x81a0, 0xdb58, 0x60b9, 0x8063, 0x1, 0x0);
        gbc.writeMem(0x3786, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2481);
        EXPECT(gbc.pc(), 0x3788);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0343
        gbc.setState(0x5ed2, 0x4621, 0x9740, 0x6066, 0xa64b, 0x8b16, 0x0, 0x1);
        gbc.writeMem(0x5ed2, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4621);
        EXPECT(gbc.pc(), 0x5ed4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0344
        gbc.setState(0x290e, 0x33b0, 0xa0d0, 0x47b7, 0x121d, 0xb859, 0x1, 0x1);
        gbc.writeMem(0x290e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x33b0);
        EXPECT(gbc.pc(), 0x2910);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0345
        gbc.setState(0x9d1d, 0x9482, 0x4180, 0x526b, 0xec57, 0x4361, 0x1, 0x1);
        gbc.writeMem(0x9d1d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9482);
        EXPECT(gbc.pc(), 0x9d1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d1d), 0xcb);
        EXPECT(gbc.readMem(0x9d1e), 0x68);
        // CB 68 0346
        gbc.setState(0x7acc, 0xc21a, 0x56a0, 0x2b77, 0x8929, 0x7443, 0x0, 0x0);
        gbc.writeMem(0x7acc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc21a);
        EXPECT(gbc.pc(), 0x7ace);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0347
        gbc.setState(0x4b2c, 0x99f1, 0x75a0, 0xf98f, 0xb082, 0x5233, 0x0, 0x0);
        gbc.writeMem(0x4b2c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x99f1);
        EXPECT(gbc.pc(), 0x4b2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0348
        gbc.setState(0x4c7a, 0x342a, 0x52e0, 0xe8b6, 0x7613, 0x94f6, 0x0, 0x1);
        gbc.writeMem(0x4c7a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x342a);
        EXPECT(gbc.pc(), 0x4c7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0349
        gbc.setState(0x12d, 0xb5f5, 0x6b20, 0x889b, 0x4fc1, 0x8a24, 0x0, 0x1);
        gbc.writeMem(0x12d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb5f5);
        EXPECT(gbc.pc(), 0x12f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 034A
        gbc.setState(0xe345, 0x211f, 0x7c60, 0x3356, 0x1890, 0xc83a, 0x1, 0x1);
        gbc.writeMem(0xe345, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x211f);
        EXPECT(gbc.pc(), 0xe347);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe345), 0xcb);
        EXPECT(gbc.readMem(0xe346), 0x68);
        // CB 68 034B
        gbc.setState(0xb93d, 0x8f06, 0xf030, 0xecc7, 0x5a08, 0x80, 0x0, 0x0);
        gbc.writeMem(0xb93d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x8f06);
        EXPECT(gbc.pc(), 0xb93f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb93d), 0xcb);
        EXPECT(gbc.readMem(0xb93e), 0x68);
        // CB 68 034C
        gbc.setState(0xe132, 0x6900, 0x4210, 0x3fad, 0x7944, 0xdf0b, 0x0, 0x1);
        gbc.writeMem(0xe132, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6900);
        EXPECT(gbc.pc(), 0xe134);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe132), 0xcb);
        EXPECT(gbc.readMem(0xe133), 0x68);
        // CB 68 034D
        gbc.setState(0xd4dc, 0x27c7, 0xf140, 0xbff0, 0x37a2, 0x5ce8, 0x0, 0x0);
        gbc.writeMem(0xd4dc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x27c7);
        EXPECT(gbc.pc(), 0xd4de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4dc), 0xcb);
        EXPECT(gbc.readMem(0xd4dd), 0x68);
        // CB 68 034E
        gbc.setState(0xc8f1, 0xf882, 0x5660, 0x9645, 0xecd4, 0x7bc5, 0x0, 0x1);
        gbc.writeMem(0xc8f1, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf882);
        EXPECT(gbc.pc(), 0xc8f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8f1), 0xcb);
        EXPECT(gbc.readMem(0xc8f2), 0x68);
        // CB 68 034F
        gbc.setState(0x9a2f, 0xf53d, 0x7c60, 0xff4b, 0xba1a, 0x878f, 0x0, 0x1);
        gbc.writeMem(0x9a2f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf53d);
        EXPECT(gbc.pc(), 0x9a31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a2f), 0xcb);
        EXPECT(gbc.readMem(0x9a30), 0x68);
        // CB 68 0350
        gbc.setState(0x4a99, 0x9522, 0x770, 0x604a, 0xe0d7, 0x909c, 0x1, 0x1);
        gbc.writeMem(0x4a99, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9522);
        EXPECT(gbc.pc(), 0x4a9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0351
        gbc.setState(0x439d, 0xe30, 0x7420, 0x305c, 0x660c, 0x10a2, 0x0, 0x0);
        gbc.writeMem(0x439d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe30);
        EXPECT(gbc.pc(), 0x439f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0352
        gbc.setState(0xc0ec, 0x97e6, 0x8e20, 0x4073, 0x2de3, 0xa99, 0x0, 0x0);
        gbc.writeMem(0xc0ec, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x97e6);
        EXPECT(gbc.pc(), 0xc0ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ec), 0xcb);
        EXPECT(gbc.readMem(0xc0ed), 0x68);
        // CB 68 0353
        gbc.setState(0xe00c, 0x62c9, 0xd5a0, 0x4617, 0x9140, 0x8155, 0x0, 0x1);
        gbc.writeMem(0xe00c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x62c9);
        EXPECT(gbc.pc(), 0xe00e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe00c), 0xcb);
        EXPECT(gbc.readMem(0xe00d), 0x68);
        // CB 68 0354
        gbc.setState(0x7fd4, 0xfda8, 0x93a0, 0x3f8a, 0xd947, 0xabbc, 0x1, 0x1);
        gbc.writeMem(0x7fd4, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xfda8);
        EXPECT(gbc.pc(), 0x7fd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0355
        gbc.setState(0xa740, 0xaf0f, 0xf6a0, 0xa1bc, 0xa4ae, 0x6e28, 0x1, 0x1);
        gbc.writeMem(0xa740, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xaf0f);
        EXPECT(gbc.pc(), 0xa742);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa740), 0xcb);
        EXPECT(gbc.readMem(0xa741), 0x68);
        // CB 68 0356
        gbc.setState(0x5bfc, 0x7284, 0xfa70, 0x8d8, 0x6ce3, 0xee76, 0x1, 0x0);
        gbc.writeMem(0x5bfc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7284);
        EXPECT(gbc.pc(), 0x5bfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0357
        gbc.setState(0x91b, 0x8a77, 0xf650, 0x4560, 0xf0d2, 0x87e, 0x0, 0x1);
        gbc.writeMem(0x91b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8a77);
        EXPECT(gbc.pc(), 0x91d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0358
        gbc.setState(0x4a68, 0xba2d, 0x4010, 0x7d19, 0x4024, 0xb24c, 0x1, 0x1);
        gbc.writeMem(0x4a68, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xba2d);
        EXPECT(gbc.pc(), 0x4a6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0359
        gbc.setState(0x9a17, 0xa387, 0x1ab0, 0x55c7, 0xfce, 0xe902, 0x1, 0x1);
        gbc.writeMem(0x9a17, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xa387);
        EXPECT(gbc.pc(), 0x9a19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a17), 0xcb);
        EXPECT(gbc.readMem(0x9a18), 0x68);
        // CB 68 035A
        gbc.setState(0x21bc, 0xbdd4, 0xe1d0, 0x783c, 0xdd07, 0x44fa, 0x1, 0x0);
        gbc.writeMem(0x21bc, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xbdd4);
        EXPECT(gbc.pc(), 0x21be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 035B
        gbc.setState(0x52dd, 0xc9af, 0x3530, 0xfcca, 0xc845, 0x70c3, 0x0, 0x0);
        gbc.writeMem(0x52dd, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc9af);
        EXPECT(gbc.pc(), 0x52df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 035C
        gbc.setState(0xad85, 0x7bfc, 0xd870, 0x92c4, 0xa289, 0xa97f, 0x1, 0x0);
        gbc.writeMem(0xad85, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7bfc);
        EXPECT(gbc.pc(), 0xad87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad85), 0xcb);
        EXPECT(gbc.readMem(0xad86), 0x68);
        // CB 68 035D
        gbc.setState(0x433e, 0xbbae, 0x5a20, 0xd9f3, 0x1fa6, 0xdb34, 0x1, 0x1);
        gbc.writeMem(0x433e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xbbae);
        EXPECT(gbc.pc(), 0x4340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 035E
        gbc.setState(0xda2c, 0x69b3, 0x4ec0, 0xe71e, 0xb7cd, 0x65b5, 0x1, 0x1);
        gbc.writeMem(0xda2c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x69b3);
        EXPECT(gbc.pc(), 0xda2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda2c), 0xcb);
        EXPECT(gbc.readMem(0xda2d), 0x68);
        // CB 68 035F
        gbc.setState(0x7c01, 0x177b, 0x95a0, 0x60e2, 0x9994, 0x108f, 0x0, 0x1);
        gbc.writeMem(0x7c01, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x177b);
        EXPECT(gbc.pc(), 0x7c03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0360
        gbc.setState(0x9e00, 0x7191, 0x2880, 0x7ffe, 0x1cce, 0x3e9a, 0x0, 0x0);
        gbc.writeMem(0x9e00, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7191);
        EXPECT(gbc.pc(), 0x9e02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e00), 0xcb);
        EXPECT(gbc.readMem(0x9e01), 0x68);
        // CB 68 0361
        gbc.setState(0x65d, 0x3948, 0xec20, 0x3e55, 0x33ff, 0xe25c, 0x0, 0x0);
        gbc.writeMem(0x65d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x3948);
        EXPECT(gbc.pc(), 0x65f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0362
        gbc.setState(0xcdb0, 0xfa1d, 0xe510, 0x14dc, 0x57c7, 0x619f, 0x1, 0x1);
        gbc.writeMem(0xcdb0, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xfa1d);
        EXPECT(gbc.pc(), 0xcdb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdb0), 0xcb);
        EXPECT(gbc.readMem(0xcdb1), 0x68);
        // CB 68 0363
        gbc.setState(0x9fea, 0xd4e6, 0xe750, 0xb6ae, 0xfb4c, 0x9841, 0x0, 0x0);
        gbc.writeMem(0x9fea, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xd4e6);
        EXPECT(gbc.pc(), 0x9fec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fea), 0xcb);
        EXPECT(gbc.readMem(0x9feb), 0x68);
        // CB 68 0364
        gbc.setState(0x57c9, 0x301a, 0x78a0, 0xe55a, 0x3a6a, 0x6b70, 0x0, 0x0);
        gbc.writeMem(0x57c9, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x301a);
        EXPECT(gbc.pc(), 0x57cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0365
        gbc.setState(0x5f02, 0xc5c7, 0xe650, 0xc981, 0xca57, 0xbe74, 0x0, 0x0);
        gbc.writeMem(0x5f02, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc5c7);
        EXPECT(gbc.pc(), 0x5f04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0366
        gbc.setState(0xe77c, 0x1b27, 0xb090, 0x23d8, 0xd180, 0x350, 0x1, 0x1);
        gbc.writeMem(0xe77c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1b27);
        EXPECT(gbc.pc(), 0xe77e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe77c), 0xcb);
        EXPECT(gbc.readMem(0xe77d), 0x68);
        // CB 68 0367
        gbc.setState(0xa5bd, 0x52ae, 0xa880, 0x91b, 0xbee3, 0xe066, 0x1, 0x1);
        gbc.writeMem(0xa5bd, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x52ae);
        EXPECT(gbc.pc(), 0xa5bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5bd), 0xcb);
        EXPECT(gbc.readMem(0xa5be), 0x68);
        // CB 68 0368
        gbc.setState(0x2178, 0x7623, 0x4420, 0x85d8, 0x5de9, 0xf165, 0x1, 0x0);
        gbc.writeMem(0x2178, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x7623);
        EXPECT(gbc.pc(), 0x217a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0369
        gbc.setState(0x5e0a, 0x4cb4, 0x1cc0, 0x234f, 0xffdd, 0x6871, 0x0, 0x1);
        gbc.writeMem(0x5e0a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4cb4);
        EXPECT(gbc.pc(), 0x5e0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 036A
        gbc.setState(0x43c6, 0xff16, 0x2f10, 0xa61d, 0x6fd, 0x4d5a, 0x0, 0x1);
        gbc.writeMem(0x43c6, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xff16);
        EXPECT(gbc.pc(), 0x43c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 036B
        gbc.setState(0xb768, 0xf241, 0xb8d0, 0x59ad, 0x6847, 0x120e, 0x0, 0x0);
        gbc.writeMem(0xb768, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf241);
        EXPECT(gbc.pc(), 0xb76a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb768), 0xcb);
        EXPECT(gbc.readMem(0xb769), 0x68);
        // CB 68 036C
        gbc.setState(0x5e4, 0x1950, 0xa5e0, 0x3a2a, 0x8493, 0xed2a, 0x0, 0x0);
        gbc.writeMem(0x5e4, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1950);
        EXPECT(gbc.pc(), 0x5e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 036D
        gbc.setState(0x7bf, 0x9b84, 0x7910, 0xfbe3, 0xe12b, 0x767c, 0x0, 0x0);
        gbc.writeMem(0x7bf, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x9b84);
        EXPECT(gbc.pc(), 0x7c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 036F
        gbc.setState(0xb87b, 0x6f8c, 0x15f0, 0xb42e, 0x13a4, 0x80ea, 0x0, 0x0);
        gbc.writeMem(0xb87b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6f8c);
        EXPECT(gbc.pc(), 0xb87d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb87b), 0xcb);
        EXPECT(gbc.readMem(0xb87c), 0x68);
        // CB 68 0370
        gbc.setState(0xafaa, 0x58fb, 0x7b30, 0xf034, 0xf445, 0xafc2, 0x0, 0x1);
        gbc.writeMem(0xafaa, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x58fb);
        EXPECT(gbc.pc(), 0xafac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafaa), 0xcb);
        EXPECT(gbc.readMem(0xafab), 0x68);
        // CB 68 0371
        gbc.setState(0x8361, 0x81a0, 0x17e0, 0x8fbd, 0x98ec, 0xb005, 0x0, 0x0);
        gbc.writeMem(0x8361, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x81a0);
        EXPECT(gbc.pc(), 0x8363);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8361), 0xcb);
        EXPECT(gbc.readMem(0x8362), 0x68);
        // CB 68 0372
        gbc.setState(0x15a7, 0x6610, 0xd050, 0xefe4, 0x5bd0, 0xe725, 0x0, 0x0);
        gbc.writeMem(0x15a7, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x6610);
        EXPECT(gbc.pc(), 0x15a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0373
        gbc.setState(0x2d88, 0x7646, 0xcac0, 0xfb09, 0xa26e, 0x2812, 0x0, 0x0);
        gbc.writeMem(0x2d88, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7646);
        EXPECT(gbc.pc(), 0x2d8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0374
        gbc.setState(0xd6dd, 0xb26, 0xd020, 0x7741, 0x44ce, 0x8b87, 0x0, 0x0);
        gbc.writeMem(0xd6dd, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb26);
        EXPECT(gbc.pc(), 0xd6df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6dd), 0xcb);
        EXPECT(gbc.readMem(0xd6de), 0x68);
        // CB 68 0375
        gbc.setState(0x519c, 0x3821, 0x820, 0xffb5, 0x2614, 0x8c13, 0x1, 0x1);
        gbc.writeMem(0x519c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3821);
        EXPECT(gbc.pc(), 0x519e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0376
        gbc.setState(0x7693, 0x3f84, 0x85a0, 0xfd44, 0x9c58, 0x91de, 0x1, 0x1);
        gbc.writeMem(0x7693, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3f84);
        EXPECT(gbc.pc(), 0x7695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0377
        gbc.setState(0x851e, 0x85aa, 0x44d0, 0x53ca, 0xb770, 0x9f4d, 0x0, 0x1);
        gbc.writeMem(0x851e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x85aa);
        EXPECT(gbc.pc(), 0x8520);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x851e), 0xcb);
        EXPECT(gbc.readMem(0x851f), 0x68);
        // CB 68 0378
        gbc.setState(0xeddf, 0x2a9d, 0x3220, 0x4d17, 0xeecf, 0xf3c5, 0x0, 0x0);
        gbc.writeMem(0xeddf, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2a9d);
        EXPECT(gbc.pc(), 0xede1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeddf), 0xcb);
        EXPECT(gbc.readMem(0xede0), 0x68);
        // CB 68 0379
        gbc.setState(0x9dc8, 0x6156, 0x85a0, 0x76aa, 0x54c8, 0x749a, 0x1, 0x0);
        gbc.writeMem(0x9dc8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6156);
        EXPECT(gbc.pc(), 0x9dca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dc8), 0xcb);
        EXPECT(gbc.readMem(0x9dc9), 0x68);
        // CB 68 037A
        gbc.setState(0xbf9e, 0x68b7, 0x4140, 0x18fe, 0x37ee, 0xdaac, 0x1, 0x1);
        gbc.writeMem(0xbf9e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x68b7);
        EXPECT(gbc.pc(), 0xbfa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf9e), 0xcb);
        EXPECT(gbc.readMem(0xbf9f), 0x68);
        // CB 68 037B
        gbc.setState(0xb946, 0xe620, 0x52f0, 0x72d, 0xc02d, 0x9a8b, 0x1, 0x1);
        gbc.writeMem(0xb946, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe620);
        EXPECT(gbc.pc(), 0xb948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb946), 0xcb);
        EXPECT(gbc.readMem(0xb947), 0x68);
        // CB 68 037C
        gbc.setState(0xa586, 0xf2a3, 0x6930, 0x62d9, 0x2a48, 0x8e37, 0x1, 0x1);
        gbc.writeMem(0xa586, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf2a3);
        EXPECT(gbc.pc(), 0xa588);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa586), 0xcb);
        EXPECT(gbc.readMem(0xa587), 0x68);
        // CB 68 037D
        gbc.setState(0xd1d4, 0x6ded, 0xb020, 0x89bd, 0x7d52, 0x69bf, 0x1, 0x0);
        gbc.writeMem(0xd1d4, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6ded);
        EXPECT(gbc.pc(), 0xd1d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1d4), 0xcb);
        EXPECT(gbc.readMem(0xd1d5), 0x68);
        // CB 68 037E
        gbc.setState(0xa301, 0x9d05, 0x22c0, 0xba7, 0x1a67, 0x2ca7, 0x1, 0x1);
        gbc.writeMem(0xa301, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9d05);
        EXPECT(gbc.pc(), 0xa303);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa301), 0xcb);
        EXPECT(gbc.readMem(0xa302), 0x68);
        // CB 68 037F
        gbc.setState(0x85ca, 0xc4ce, 0x8de0, 0x682b, 0x9209, 0x691f, 0x1, 0x1);
        gbc.writeMem(0x85ca, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc4ce);
        EXPECT(gbc.pc(), 0x85cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85ca), 0xcb);
        EXPECT(gbc.readMem(0x85cb), 0x68);
        // CB 68 0380
        gbc.setState(0xc8e, 0x91a7, 0x8980, 0x4778, 0xa091, 0x54b7, 0x1, 0x0);
        gbc.writeMem(0xc8e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x91a7);
        EXPECT(gbc.pc(), 0xc90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0381
        gbc.setState(0xba0d, 0xbd5a, 0x1370, 0xd113, 0x8046, 0x71bc, 0x1, 0x1);
        gbc.writeMem(0xba0d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xbd5a);
        EXPECT(gbc.pc(), 0xba0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba0d), 0xcb);
        EXPECT(gbc.readMem(0xba0e), 0x68);
        // CB 68 0382
        gbc.setState(0x1df1, 0x59f2, 0x30d0, 0xcb7d, 0x45b9, 0x75d2, 0x1, 0x0);
        gbc.writeMem(0x1df1, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x59f2);
        EXPECT(gbc.pc(), 0x1df3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0383
        gbc.setState(0xabef, 0x4818, 0x8da0, 0xc98f, 0xd4d1, 0x9e60, 0x0, 0x1);
        gbc.writeMem(0xabef, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4818);
        EXPECT(gbc.pc(), 0xabf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabef), 0xcb);
        EXPECT(gbc.readMem(0xabf0), 0x68);
        // CB 68 0384
        gbc.setState(0xec0c, 0xe472, 0xcb40, 0x530e, 0x2c00, 0x856b, 0x1, 0x1);
        gbc.writeMem(0xec0c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe472);
        EXPECT(gbc.pc(), 0xec0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec0c), 0xcb);
        EXPECT(gbc.readMem(0xec0d), 0x68);
        // CB 68 0385
        gbc.setState(0x2a4c, 0xc7d1, 0xcd00, 0x5712, 0x8ead, 0x7d11, 0x0, 0x1);
        gbc.writeMem(0x2a4c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc7d1);
        EXPECT(gbc.pc(), 0x2a4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0386
        gbc.setState(0x50a5, 0xcd36, 0xcb0, 0xc098, 0xf8d9, 0xade7, 0x1, 0x0);
        gbc.writeMem(0x50a5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xcd36);
        EXPECT(gbc.pc(), 0x50a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0387
        gbc.setState(0x3d5c, 0xfb66, 0x2d10, 0xfdcb, 0x8fb3, 0xb1c, 0x1, 0x0);
        gbc.writeMem(0x3d5c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xfb66);
        EXPECT(gbc.pc(), 0x3d5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0388
        gbc.setState(0x519a, 0x8f9, 0x1470, 0xd892, 0x3b7b, 0xe81a, 0x1, 0x0);
        gbc.writeMem(0x519a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x8f9);
        EXPECT(gbc.pc(), 0x519c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0389
        gbc.setState(0xc5a3, 0xb9d0, 0x7d70, 0x4700, 0xcbe, 0xbdb, 0x0, 0x0);
        gbc.writeMem(0xc5a3, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb9d0);
        EXPECT(gbc.pc(), 0xc5a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5a3), 0xcb);
        EXPECT(gbc.readMem(0xc5a4), 0x68);
        // CB 68 038A
        gbc.setState(0x2ccb, 0x4ee, 0x8fa0, 0x35fe, 0x89c, 0xa92a, 0x0, 0x0);
        gbc.writeMem(0x2ccb, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4ee);
        EXPECT(gbc.pc(), 0x2ccd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 038B
        gbc.setState(0x731, 0x3587, 0xbf10, 0x24d1, 0xbf84, 0xd10f, 0x0, 0x1);
        gbc.writeMem(0x731, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3587);
        EXPECT(gbc.pc(), 0x733);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 038C
        gbc.setState(0x76e0, 0x60f6, 0x9240, 0x9980, 0xa330, 0xb8b1, 0x0, 0x0);
        gbc.writeMem(0x76e0, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x60f6);
        EXPECT(gbc.pc(), 0x76e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 038D
        gbc.setState(0x8fa1, 0xf540, 0xebc0, 0x370a, 0x1268, 0x2a1e, 0x1, 0x1);
        gbc.writeMem(0x8fa1, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf540);
        EXPECT(gbc.pc(), 0x8fa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fa1), 0xcb);
        EXPECT(gbc.readMem(0x8fa2), 0x68);
        // CB 68 038E
        gbc.setState(0x721f, 0xb1a5, 0xeb0, 0x2493, 0xae20, 0x7be2, 0x0, 0x1);
        gbc.writeMem(0x721f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb1a5);
        EXPECT(gbc.pc(), 0x7221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 038F
        gbc.setState(0xab23, 0xfe51, 0x1860, 0x2fe4, 0x4a5f, 0x5178, 0x1, 0x0);
        gbc.writeMem(0xab23, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xfe51);
        EXPECT(gbc.pc(), 0xab25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab23), 0xcb);
        EXPECT(gbc.readMem(0xab24), 0x68);
        // CB 68 0390
        gbc.setState(0x1872, 0xf81c, 0x3e90, 0x4140, 0xe186, 0xc876, 0x0, 0x1);
        gbc.writeMem(0x1872, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf81c);
        EXPECT(gbc.pc(), 0x1874);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0391
        gbc.setState(0x4c66, 0x48cb, 0x9760, 0xe607, 0xe96d, 0x8ea2, 0x0, 0x1);
        gbc.writeMem(0x4c66, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x48cb);
        EXPECT(gbc.pc(), 0x4c68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0392
        gbc.setState(0x187, 0xea90, 0x62a0, 0x87f6, 0xcb7f, 0x58fe, 0x0, 0x1);
        gbc.writeMem(0x187, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xea90);
        EXPECT(gbc.pc(), 0x189);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0393
        gbc.setState(0x7048, 0x9d0f, 0xe2c0, 0xfac7, 0x7ba3, 0x4d93, 0x0, 0x0);
        gbc.writeMem(0x7048, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9d0f);
        EXPECT(gbc.pc(), 0x704a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0394
        gbc.setState(0x850f, 0x71d8, 0x1870, 0x1693, 0x9458, 0x6a09, 0x0, 0x0);
        gbc.writeMem(0x850f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x71d8);
        EXPECT(gbc.pc(), 0x8511);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x850f), 0xcb);
        EXPECT(gbc.readMem(0x8510), 0x68);
        // CB 68 0395
        gbc.setState(0x3c2b, 0xff6, 0xfe40, 0xb26b, 0xaaf4, 0x7f32, 0x0, 0x1);
        gbc.writeMem(0x3c2b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xff6);
        EXPECT(gbc.pc(), 0x3c2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0396
        gbc.setState(0x3ce5, 0x4aee, 0x9e80, 0x1432, 0xf75b, 0xbd3c, 0x0, 0x1);
        gbc.writeMem(0x3ce5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x4aee);
        EXPECT(gbc.pc(), 0x3ce7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0397
        gbc.setState(0xae, 0xb08e, 0xff00, 0x7931, 0x8c30, 0xb101, 0x0, 0x1);
        gbc.writeMem(0xae, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb08e);
        EXPECT(gbc.pc(), 0xb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 0398
        gbc.setState(0x621b, 0xaf24, 0xe5d0, 0x97fc, 0x4ed7, 0x4f1f, 0x0, 0x0);
        gbc.writeMem(0x621b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xaf24);
        EXPECT(gbc.pc(), 0x621d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 0399
        gbc.setState(0x4697, 0x8f5b, 0xa490, 0xe94, 0xdae8, 0x67c1, 0x0, 0x1);
        gbc.writeMem(0x4697, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8f5b);
        EXPECT(gbc.pc(), 0x4699);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 039A
        gbc.setState(0x8236, 0x6583, 0x1b70, 0xec82, 0xf048, 0x44a9, 0x0, 0x0);
        gbc.writeMem(0x8236, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x6583);
        EXPECT(gbc.pc(), 0x8238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8236), 0xcb);
        EXPECT(gbc.readMem(0x8237), 0x68);
        // CB 68 039B
        gbc.setState(0x9975, 0xe2b7, 0x82a0, 0xf0a9, 0x6b35, 0xb761, 0x1, 0x0);
        gbc.writeMem(0x9975, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe2b7);
        EXPECT(gbc.pc(), 0x9977);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9975), 0xcb);
        EXPECT(gbc.readMem(0x9976), 0x68);
        // CB 68 039C
        gbc.setState(0x5419, 0xb5e5, 0xbec0, 0x75ac, 0xc52a, 0xcb48, 0x1, 0x0);
        gbc.writeMem(0x5419, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb5e5);
        EXPECT(gbc.pc(), 0x541b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 039D
        gbc.setState(0x5fbd, 0xbd57, 0x4240, 0xee59, 0xdf0e, 0x981e, 0x1, 0x0);
        gbc.writeMem(0x5fbd, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xbd57);
        EXPECT(gbc.pc(), 0x5fbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 039E
        gbc.setState(0xcf07, 0xb8a3, 0x6a70, 0x77dc, 0x94bd, 0x820, 0x1, 0x1);
        gbc.writeMem(0xcf07, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb8a3);
        EXPECT(gbc.pc(), 0xcf09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf07), 0xcb);
        EXPECT(gbc.readMem(0xcf08), 0x68);
        // CB 68 039F
        gbc.setState(0xad44, 0x756e, 0xd80, 0x3bf7, 0x724c, 0xbb04, 0x0, 0x0);
        gbc.writeMem(0xad44, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x756e);
        EXPECT(gbc.pc(), 0xad46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad44), 0xcb);
        EXPECT(gbc.readMem(0xad45), 0x68);
        // CB 68 03A0
        gbc.setState(0x7fea, 0x6315, 0xb0d0, 0xc734, 0xaba9, 0x1cb4, 0x0, 0x1);
        gbc.writeMem(0x7fea, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6315);
        EXPECT(gbc.pc(), 0x7fec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 03A1
        gbc.setState(0xecae, 0xcdab, 0x1f10, 0xc262, 0xe731, 0x8f90, 0x1, 0x1);
        gbc.writeMem(0xecae, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xcdab);
        EXPECT(gbc.pc(), 0xecb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecae), 0xcb);
        EXPECT(gbc.readMem(0xecaf), 0x68);
        // CB 68 03A2
        gbc.setState(0xc586, 0xf4da, 0x6c80, 0xaf05, 0x57f6, 0x3c74, 0x0, 0x1);
        gbc.writeMem(0xc586, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf4da);
        EXPECT(gbc.pc(), 0xc588);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc586), 0xcb);
        EXPECT(gbc.readMem(0xc587), 0x68);
        // CB 68 03A3
        gbc.setState(0x44c5, 0xe6a4, 0xb510, 0x16a, 0x3dc3, 0x86b6, 0x1, 0x1);
        gbc.writeMem(0x44c5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe6a4);
        EXPECT(gbc.pc(), 0x44c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 03A4
        gbc.setState(0x3b07, 0xd90d, 0x6280, 0x16d7, 0x566a, 0x829a, 0x0, 0x0);
        gbc.writeMem(0x3b07, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd90d);
        EXPECT(gbc.pc(), 0x3b09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 03A5
        gbc.setState(0xce28, 0xdb2e, 0xe090, 0x82e8, 0xf00, 0x8494, 0x1, 0x1);
        gbc.writeMem(0xce28, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xdb2e);
        EXPECT(gbc.pc(), 0xce2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce28), 0xcb);
        EXPECT(gbc.readMem(0xce29), 0x68);
        // CB 68 03A6
        gbc.setState(0x71a5, 0x726a, 0x2eb0, 0xeda5, 0x770b, 0xd632, 0x0, 0x1);
        gbc.writeMem(0x71a5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x726a);
        EXPECT(gbc.pc(), 0x71a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 03A7
        gbc.setState(0xc449, 0x6f39, 0x4510, 0x1831, 0xb89c, 0x5f7d, 0x1, 0x1);
        gbc.writeMem(0xc449, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x6f39);
        EXPECT(gbc.pc(), 0xc44b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc449), 0xcb);
        EXPECT(gbc.readMem(0xc44a), 0x68);
        // CB 68 03A8
        gbc.setState(0x3c98, 0xb3e9, 0x2cd0, 0xec90, 0x36af, 0x3a05, 0x0, 0x1);
        gbc.writeMem(0x3c98, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xb3e9);
        EXPECT(gbc.pc(), 0x3c9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 03A9
        gbc.setState(0xef0d, 0x248, 0x49b0, 0xfd6e, 0xad3c, 0x57ed, 0x0, 0x1);
        gbc.writeMem(0xef0d, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x248);
        EXPECT(gbc.pc(), 0xef0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef0d), 0xcb);
        EXPECT(gbc.readMem(0xef0e), 0x68);
        // CB 68 03AA
        gbc.setState(0xd207, 0x9750, 0x1a40, 0xf691, 0x3571, 0x2b78, 0x0, 0x1);
        gbc.writeMem(0xd207, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9750);
        EXPECT(gbc.pc(), 0xd209);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd207), 0xcb);
        EXPECT(gbc.readMem(0xd208), 0x68);
        // CB 68 03AB
        gbc.setState(0x91c7, 0x399e, 0xe3e0, 0x2072, 0x1758, 0xcaef, 0x1, 0x0);
        gbc.writeMem(0x91c7, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x399e);
        EXPECT(gbc.pc(), 0x91c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91c7), 0xcb);
        EXPECT(gbc.readMem(0x91c8), 0x68);
        // CB 68 03AC
        gbc.setState(0xd258, 0xadb8, 0x19f0, 0x87e2, 0xc0bc, 0x49c4, 0x1, 0x0);
        gbc.writeMem(0xd258, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xadb8);
        EXPECT(gbc.pc(), 0xd25a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd258), 0xcb);
        EXPECT(gbc.readMem(0xd259), 0x68);
        // CB 68 03AD
        gbc.setState(0x4805, 0x3e01, 0x6c00, 0xc314, 0xae09, 0x9f39, 0x0, 0x1);
        gbc.writeMem(0x4805, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3e01);
        EXPECT(gbc.pc(), 0x4807);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 03AE
        gbc.setState(0x5aeb, 0xf219, 0xeb60, 0x92b7, 0x52b2, 0x9776, 0x0, 0x1);
        gbc.writeMem(0x5aeb, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf219);
        EXPECT(gbc.pc(), 0x5aed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 03AF
        gbc.setState(0x7d49, 0x7db4, 0xb1f0, 0x2893, 0xcf6e, 0x8995, 0x1, 0x1);
        gbc.writeMem(0x7d49, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x7db4);
        EXPECT(gbc.pc(), 0x7d4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 03B0
        gbc.setState(0x5fba, 0x7788, 0x5980, 0xd47e, 0x9fd, 0x1d7d, 0x0, 0x1);
        gbc.writeMem(0x5fba, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7788);
        EXPECT(gbc.pc(), 0x5fbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 03B1
        gbc.setState(0xb1a6, 0xd5c1, 0xa830, 0x80e, 0xbbe7, 0x7cd1, 0x0, 0x0);
        gbc.writeMem(0xb1a6, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd5c1);
        EXPECT(gbc.pc(), 0xb1a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1a6), 0xcb);
        EXPECT(gbc.readMem(0xb1a7), 0x68);
        // CB 68 03B2
        gbc.setState(0x4ec0, 0x6544, 0xa930, 0x110, 0x5b54, 0xe839, 0x1, 0x1);
        gbc.writeMem(0x4ec0, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x6544);
        EXPECT(gbc.pc(), 0x4ec2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 03B3
        gbc.setState(0x37c9, 0x84db, 0x2830, 0x987e, 0x7f1c, 0xa425, 0x1, 0x1);
        gbc.writeMem(0x37c9, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x84db);
        EXPECT(gbc.pc(), 0x37cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 03B4
        gbc.setState(0x8683, 0xbd62, 0xc6c0, 0x3368, 0xd903, 0x2116, 0x0, 0x1);
        gbc.writeMem(0x8683, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xbd62);
        EXPECT(gbc.pc(), 0x8685);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8683), 0xcb);
        EXPECT(gbc.readMem(0x8684), 0x68);
        // CB 68 03B5
        gbc.setState(0xccc5, 0x5af7, 0x3f0, 0xd912, 0xdf1f, 0x74c6, 0x0, 0x0);
        gbc.writeMem(0xccc5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5af7);
        EXPECT(gbc.pc(), 0xccc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccc5), 0xcb);
        EXPECT(gbc.readMem(0xccc6), 0x68);
        // CB 68 03B6
        gbc.setState(0xef5, 0x1ed7, 0x3440, 0x9063, 0xe4a4, 0xb6aa, 0x0, 0x1);
        gbc.writeMem(0xef5, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1ed7);
        EXPECT(gbc.pc(), 0xef7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 03B7
        gbc.setState(0x4dcd, 0x53f9, 0x56f0, 0x5c05, 0x196a, 0x9ea3, 0x1, 0x1);
        gbc.writeMem(0x4dcd, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x53f9);
        EXPECT(gbc.pc(), 0x4dcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 03B8
        gbc.setState(0xb782, 0x3e6e, 0x17c0, 0x17a7, 0x610f, 0xf25a, 0x1, 0x0);
        gbc.writeMem(0xb782, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3e6e);
        EXPECT(gbc.pc(), 0xb784);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb782), 0xcb);
        EXPECT(gbc.readMem(0xb783), 0x68);
        // CB 68 03BA
        gbc.setState(0x2390, 0x6128, 0xb670, 0xa9db, 0xcdf7, 0x5317, 0x1, 0x1);
        gbc.writeMem(0x2390, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x6128);
        EXPECT(gbc.pc(), 0x2392);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 03BC
        gbc.setState(0x19c1, 0x607a, 0x7730, 0x32c7, 0xd7ac, 0x308c, 0x0, 0x0);
        gbc.writeMem(0x19c1, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x607a);
        EXPECT(gbc.pc(), 0x19c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 03BD
        gbc.setState(0xbacb, 0xb6a0, 0x13a0, 0x2926, 0x9973, 0xbd12, 0x1, 0x1);
        gbc.writeMem(0xbacb, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb6a0);
        EXPECT(gbc.pc(), 0xbacd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbacb), 0xcb);
        EXPECT(gbc.readMem(0xbacc), 0x68);
        // CB 68 03BE
        gbc.setState(0x23f2, 0x2a50, 0xcda0, 0x14d4, 0xe99d, 0x7b7d, 0x1, 0x0);
        gbc.writeMem(0x23f2, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2a50);
        EXPECT(gbc.pc(), 0x23f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 03BF
        gbc.setState(0x2c55, 0xeaac, 0x2eb0, 0x3376, 0xb55, 0x69a5, 0x0, 0x0);
        gbc.writeMem(0x2c55, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xeaac);
        EXPECT(gbc.pc(), 0x2c57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 03C0
        gbc.setState(0x8cb7, 0x39bd, 0xe230, 0xa0a9, 0xffcf, 0x1a79, 0x0, 0x1);
        gbc.writeMem(0x8cb7, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x39bd);
        EXPECT(gbc.pc(), 0x8cb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cb7), 0xcb);
        EXPECT(gbc.readMem(0x8cb8), 0x68);
        // CB 68 03C1
        gbc.setState(0xa65e, 0x4f17, 0x43c0, 0x701, 0x8a54, 0xf947, 0x1, 0x1);
        gbc.writeMem(0xa65e, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4f17);
        EXPECT(gbc.pc(), 0xa660);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa65e), 0xcb);
        EXPECT(gbc.readMem(0xa65f), 0x68);
        // CB 68 03C2
        gbc.setState(0x2115, 0xd7f3, 0xa050, 0x45a7, 0x641a, 0x9e60, 0x0, 0x0);
        gbc.writeMem(0x2115, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd7f3);
        EXPECT(gbc.pc(), 0x2117);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 03C3
        gbc.setState(0xa8c, 0x5903, 0xb8c0, 0xde38, 0xe0cf, 0xd38f, 0x1, 0x1);
        gbc.writeMem(0xa8c, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5903);
        EXPECT(gbc.pc(), 0xa8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 03C4
        gbc.setState(0x3347, 0x8d06, 0xc440, 0xc693, 0xbf0c, 0x930d, 0x0, 0x0);
        gbc.writeMem(0x3347, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8d06);
        EXPECT(gbc.pc(), 0x3349);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 03C5
        gbc.setState(0x1120, 0xb491, 0x1460, 0x992d, 0xdb0, 0xcc9, 0x0, 0x0);
        gbc.writeMem(0x1120, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb491);
        EXPECT(gbc.pc(), 0x1122);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 03C6
        gbc.setState(0x5b65, 0xb7be, 0xd4b0, 0x1f14, 0xab57, 0x3810, 0x0, 0x1);
        gbc.writeMem(0x5b65, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb7be);
        EXPECT(gbc.pc(), 0x5b67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 03C7
        gbc.setState(0x15f4, 0xe4a2, 0x32e0, 0x7d18, 0x2c9, 0x24bb, 0x0, 0x1);
        gbc.writeMem(0x15f4, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xe4a2);
        EXPECT(gbc.pc(), 0x15f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 03C8
        gbc.setState(0xdb79, 0x81d6, 0x3d0, 0x1cbb, 0xddde, 0xe168, 0x0, 0x1);
        gbc.writeMem(0xdb79, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x81d6);
        EXPECT(gbc.pc(), 0xdb7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb79), 0xcb);
        EXPECT(gbc.readMem(0xdb7a), 0x68);
        // CB 68 03C9
        gbc.setState(0x7184, 0xf865, 0x97e0, 0xc94e, 0x2004, 0x4ec4, 0x1, 0x1);
        gbc.writeMem(0x7184, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf865);
        EXPECT(gbc.pc(), 0x7186);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 03CA
        gbc.setState(0xc772, 0xbcd9, 0x5a60, 0x6798, 0xc8f4, 0xf024, 0x1, 0x0);
        gbc.writeMem(0xc772, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xbcd9);
        EXPECT(gbc.pc(), 0xc774);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc772), 0xcb);
        EXPECT(gbc.readMem(0xc773), 0x68);
        // CB 68 03CB
        gbc.setState(0x5216, 0xe35a, 0x5570, 0x3651, 0xe392, 0x99b6, 0x0, 0x1);
        gbc.writeMem(0x5216, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe35a);
        EXPECT(gbc.pc(), 0x5218);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 03CC
        gbc.setState(0x516, 0x4644, 0x6fd0, 0xb9b1, 0xc162, 0x9eda, 0x0, 0x0);
        gbc.writeMem(0x516, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x4644);
        EXPECT(gbc.pc(), 0x518);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 03CD
        gbc.setState(0x8156, 0xae14, 0x8120, 0x4968, 0x48e5, 0x80b9, 0x0, 0x0);
        gbc.writeMem(0x8156, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xae14);
        EXPECT(gbc.pc(), 0x8158);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8156), 0xcb);
        EXPECT(gbc.readMem(0x8157), 0x68);
        // CB 68 03CE
        gbc.setState(0x5594, 0xd999, 0xf0b0, 0x5ae8, 0x2647, 0x2dcf, 0x0, 0x1);
        gbc.writeMem(0x5594, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd999);
        EXPECT(gbc.pc(), 0x5596);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 03CF
        gbc.setState(0xd60f, 0x6ea5, 0xf010, 0x413e, 0x1ff4, 0x44b2, 0x0, 0x1);
        gbc.writeMem(0xd60f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x6ea5);
        EXPECT(gbc.pc(), 0xd611);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd60f), 0xcb);
        EXPECT(gbc.readMem(0xd610), 0x68);
        // CB 68 03D0
        gbc.setState(0xb5a3, 0x36f2, 0x9c30, 0x6151, 0xdaa8, 0x5585, 0x0, 0x0);
        gbc.writeMem(0xb5a3, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x36f2);
        EXPECT(gbc.pc(), 0xb5a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5a3), 0xcb);
        EXPECT(gbc.readMem(0xb5a4), 0x68);
        // CB 68 03D1
        gbc.setState(0xbdc1, 0x7584, 0xc120, 0xda54, 0xc8ab, 0x5a4, 0x0, 0x1);
        gbc.writeMem(0xbdc1, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7584);
        EXPECT(gbc.pc(), 0xbdc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdc1), 0xcb);
        EXPECT(gbc.readMem(0xbdc2), 0x68);
        // CB 68 03D2
        gbc.setState(0xec27, 0xcbf7, 0x3cd0, 0x6ab, 0x7da2, 0xdbe0, 0x1, 0x0);
        gbc.writeMem(0xec27, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xcbf7);
        EXPECT(gbc.pc(), 0xec29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec27), 0xcb);
        EXPECT(gbc.readMem(0xec28), 0x68);
        // CB 68 03D3
        gbc.setState(0x87de, 0x7849, 0x7540, 0xa938, 0xbfd7, 0x662d, 0x1, 0x0);
        gbc.writeMem(0x87de, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7849);
        EXPECT(gbc.pc(), 0x87e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87de), 0xcb);
        EXPECT(gbc.readMem(0x87df), 0x68);
        // CB 68 03D4
        gbc.setState(0x9f49, 0x65d5, 0x8940, 0xcf14, 0xa72d, 0x8335, 0x0, 0x1);
        gbc.writeMem(0x9f49, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x65d5);
        EXPECT(gbc.pc(), 0x9f4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f49), 0xcb);
        EXPECT(gbc.readMem(0x9f4a), 0x68);
        // CB 68 03D5
        gbc.setState(0x12f3, 0x91a6, 0xce90, 0x710a, 0x5205, 0x7132, 0x1, 0x1);
        gbc.writeMem(0x12f3, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x91a6);
        EXPECT(gbc.pc(), 0x12f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 03D6
        gbc.setState(0x467b, 0x402f, 0xab20, 0x5170, 0x20b2, 0xfb64, 0x0, 0x0);
        gbc.writeMem(0x467b, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x402f);
        EXPECT(gbc.pc(), 0x467d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 03D7
        gbc.setState(0xd8a2, 0x9d3f, 0xbe50, 0xc801, 0x2b0f, 0x8169, 0x0, 0x0);
        gbc.writeMem(0xd8a2, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x9d3f);
        EXPECT(gbc.pc(), 0xd8a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8a2), 0xcb);
        EXPECT(gbc.readMem(0xd8a3), 0x68);
        // CB 68 03D8
        gbc.setState(0x25a8, 0x88d3, 0x9ae0, 0x983e, 0x8812, 0xedce, 0x1, 0x0);
        gbc.writeMem(0x25a8, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x88d3);
        EXPECT(gbc.pc(), 0x25aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 03D9
        gbc.setState(0x1634, 0xcb20, 0xa120, 0x25de, 0xadc3, 0xd5d3, 0x0, 0x0);
        gbc.writeMem(0x1634, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xcb20);
        EXPECT(gbc.pc(), 0x1636);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 03DA
        gbc.setState(0x9a64, 0xafb8, 0x6ab0, 0x1195, 0xb74c, 0x29d6, 0x0, 0x1);
        gbc.writeMem(0x9a64, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xafb8);
        EXPECT(gbc.pc(), 0x9a66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a64), 0xcb);
        EXPECT(gbc.readMem(0x9a65), 0x68);
        // CB 68 03DC
        gbc.setState(0x71e0, 0xf472, 0x4d90, 0xaeab, 0x4d2b, 0xa04a, 0x1, 0x0);
        gbc.writeMem(0x71e0, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf472);
        EXPECT(gbc.pc(), 0x71e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 03DE
        gbc.setState(0x10fe, 0x8dc8, 0x2df0, 0x2128, 0x2bdf, 0x877b, 0x0, 0x1);
        gbc.writeMem(0x10fe, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8dc8);
        EXPECT(gbc.pc(), 0x1100);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 68 03DF
        gbc.setState(0xb073, 0x8b43, 0x3060, 0x82e6, 0x2cbe, 0xa088, 0x1, 0x0);
        gbc.writeMem(0xb073, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x8b43);
        EXPECT(gbc.pc(), 0xb075);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb073), 0xcb);
        EXPECT(gbc.readMem(0xb074), 0x68);
        // CB 68 03E0
        gbc.setState(0xb1c9, 0x9394, 0x4e0, 0x9501, 0xfc67, 0x344a, 0x1, 0x1);
        gbc.writeMem(0xb1c9, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9394);
        EXPECT(gbc.pc(), 0xb1cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1c9), 0xcb);
        EXPECT(gbc.readMem(0xb1ca), 0x68);
        // CB 68 03E1
        gbc.setState(0x3d9, 0x63a3, 0x3c80, 0x95d2, 0x4cc6, 0xfdac, 0x0, 0x0);
        gbc.writeMem(0x3d9, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x63a3);
        EXPECT(gbc.pc(), 0x3db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 68 03E2
        gbc.setState(0xa2ee, 0xe246, 0xaf10, 0x321c, 0xb423, 0x2637, 0x1, 0x0);
        gbc.writeMem(0xa2ee, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe246);
        EXPECT(gbc.pc(), 0xa2f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2ee), 0xcb);
        EXPECT(gbc.readMem(0xa2ef), 0x68);
        // CB 68 03E3
        gbc.setState(0xd69f, 0xdf20, 0xb9b0, 0x61cb, 0xd7c, 0x1d49, 0x0, 0x0);
        gbc.writeMem(0xd69f, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xdf20);
        EXPECT(gbc.pc(), 0xd6a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd69f), 0xcb);
        EXPECT(gbc.readMem(0xd6a0), 0x68);
        // CB 68 03E4
        gbc.setState(0xa4ef, 0xa2d5, 0x44c0, 0xc9c, 0x29e, 0x2995, 0x0, 0x1);
        gbc.writeMem(0xa4ef, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa2d5);
        EXPECT(gbc.pc(), 0xa4f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ef), 0xcb);
        EXPECT(gbc.readMem(0xa4f0), 0x68);
        // CB 68 03E6
        gbc.setState(0x9935, 0xbe30, 0xddf0, 0xa3b8, 0xb8ee, 0x378f, 0x0, 0x0);
        gbc.writeMem(0x9935, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xbe30);
        EXPECT(gbc.pc(), 0x9937);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9935), 0xcb);
        EXPECT(gbc.readMem(0x9936), 0x68);
        // CB 68 03E7
        gbc.setState(0x564a, 0xa250, 0x530, 0x153f, 0x25ec, 0x55f8, 0x0, 0x0);
        gbc.writeMem(0x564a, { 0xcb, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xa250);
        EXPECT(gbc.pc(), 0x564c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
    }
}
#endif
